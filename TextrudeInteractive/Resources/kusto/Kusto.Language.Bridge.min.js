Bridge.assembly("Kusto.Language.Bridge",function($asm,globals){"use strict";Bridge.define("Kusto.Language.Aggregates",{statics:{fields:{Sum:null,SumIf:null,Cnt:null,Count:null,CountIf:null,DCount:null,DCountIf:null,TDigest:null,TDigestMerge:null,MergeTDigest:null,Hll:null,HllIf:null,HllMerge:null,Min:null,MinIf:null,Max:null,MaxIf:null,Avg:null,AvgIf:null,MakeList_Deprecated:null,MakeList:null,MakeListIf:null,MakeListWithNulls:null,MakeSet_Deprecated:null,MakeSet:null,MakeSetIf:null,Passthrough:null,MakeDictionary:null,MakeBag:null,MakeBagIf:null,BuildSchema:null,BinaryAllOr:null,BinaryAllAnd:null,BinaryAllXor:null,CountDistinct:null,CountDistinctIf:null,PercentileReturn:null,PercentileArrayReturn:null,Percentile:null,Percentiles:null,PercentilesArray:null,PercentileW:null,PercentilesW:null,PercentilesWArray:null,Stdev:null,StdevIf:null,Stdevp:null,Variance:null,VarianceIf:null,Variancep:null,Any:null,TakeAny:null,AnyIf:null,TakeAnyIf:null,ArgMin:null,ArgMax:null,ArgMin_Deprecated:null,ArgMax_Deprecated:null},props:{All:null},ctors:{init:function(){this.Sum=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("sum",Kusto.Language.Symbols.ReturnTypeKind.Parameter0Promoted,[new Kusto.Language.Symbols.Parameter.ctor("expr",Kusto.Language.Symbols.ParameterTypeKind.Summable)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("sum");this.SumIf=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("sumif",Kusto.Language.Symbols.ReturnTypeKind.Parameter0Promoted,[new Kusto.Language.Symbols.Parameter.ctor("expr",Kusto.Language.Symbols.ParameterTypeKind.Summable),new Kusto.Language.Symbols.Parameter.$ctor2("predicate",Kusto.Language.Symbols.ScalarTypes.Bool)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("sumif");this.Cnt=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("cnt",Kusto.Language.Symbols.ScalarTypes.Long).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("cnt").Obsolete("count").Hide();this.Count=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("count",[new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.$ctor2("predicate",Kusto.Language.Symbols.ScalarTypes.Bool)]).Hide().Obsolete("countif")]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("count");this.CountIf=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("countif",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.$ctor2("predicate",Kusto.Language.Symbols.ScalarTypes.Bool)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("countif");this.DCount=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("dcount",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("expr",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.ctor("accuracy",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("dcount");this.DCountIf=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("dcountif",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("expr",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.$ctor2("predicate",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.Parameter.ctor("accuracy",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("dcountif");this.TDigest=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("tdigest",Kusto.Language.Symbols.ScalarTypes.DynamicArray,[new Kusto.Language.Symbols.Parameter.ctor("expr",Kusto.Language.Symbols.ParameterTypeKind.Summable),new Kusto.Language.Symbols.Parameter.ctor("weight",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("tdigest");this.TDigestMerge=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("tdigest_merge",Kusto.Language.Symbols.ScalarTypes.DynamicArray,[new Kusto.Language.Symbols.Parameter.ctor("tdigest",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("merge_tdigests");this.MergeTDigest=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("merge_tdigest",Kusto.Language.Symbols.ScalarTypes.DynamicArray,[new Kusto.Language.Symbols.Parameter.ctor("tdigest",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("merge_tdigests");this.Hll=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("hll",Kusto.Language.Symbols.ScalarTypes.DynamicArray,[new Kusto.Language.Symbols.Parameter.ctor("expr",Kusto.Language.Symbols.ParameterTypeKind.NotRealOrBool),new Kusto.Language.Symbols.Parameter.ctor("accuracy",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("hll");this.HllIf=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("hll_if",Kusto.Language.Symbols.ScalarTypes.DynamicArray,[new Kusto.Language.Symbols.Parameter.ctor("expr",Kusto.Language.Symbols.ParameterTypeKind.NotRealOrBool),new Kusto.Language.Symbols.Parameter.$ctor2("predicate",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.Parameter.ctor("accuracy",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("hll_if");this.HllMerge=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("hll_merge",Kusto.Language.Symbols.ScalarTypes.DynamicArray,[new Kusto.Language.Symbols.Parameter.ctor("hll",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("hll_merge");this.Min=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("min",Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("expr",Kusto.Language.Symbols.ParameterTypeKind.Orderable)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("min");this.MinIf=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("minif",Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("expr",Kusto.Language.Symbols.ParameterTypeKind.Orderable),new Kusto.Language.Symbols.Parameter.$ctor2("predicate",Kusto.Language.Symbols.ScalarTypes.Bool)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("minif");this.Max=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("max",Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("expr",Kusto.Language.Symbols.ParameterTypeKind.Orderable)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("max");this.MaxIf=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("maxif",Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("expr",Kusto.Language.Symbols.ParameterTypeKind.Orderable),new Kusto.Language.Symbols.Parameter.$ctor2("predicate",Kusto.Language.Symbols.ScalarTypes.Bool)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("maxif");this.Avg=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("avg",[new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("expr",Kusto.Language.Symbols.ParameterTypeKind.Integer)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.$ctor2("expr",Kusto.Language.Symbols.ScalarTypes.Real)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Decimal,[new Kusto.Language.Symbols.Parameter.$ctor2("expr",Kusto.Language.Symbols.ScalarTypes.Decimal)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.TimeSpan,[new Kusto.Language.Symbols.Parameter.$ctor2("expr",Kusto.Language.Symbols.ScalarTypes.TimeSpan)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.$ctor2("expr",Kusto.Language.Symbols.ScalarTypes.DateTime)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("avg");this.AvgIf=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("avgif",[new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("expr",Kusto.Language.Symbols.ParameterTypeKind.Integer),new Kusto.Language.Symbols.Parameter.$ctor2("predicate",Kusto.Language.Symbols.ScalarTypes.Bool)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.$ctor2("expr",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.Parameter.$ctor2("predicate",Kusto.Language.Symbols.ScalarTypes.Bool)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Decimal,[new Kusto.Language.Symbols.Parameter.$ctor2("expr",Kusto.Language.Symbols.ScalarTypes.Decimal),new Kusto.Language.Symbols.Parameter.$ctor2("predicate",Kusto.Language.Symbols.ScalarTypes.Bool)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.TimeSpan,[new Kusto.Language.Symbols.Parameter.$ctor2("expr",Kusto.Language.Symbols.ScalarTypes.TimeSpan),new Kusto.Language.Symbols.Parameter.$ctor2("predicate",Kusto.Language.Symbols.ScalarTypes.Bool)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.$ctor2("expr",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor2("predicate",Kusto.Language.Symbols.ScalarTypes.Bool)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("avgif");this.MakeList_Deprecated=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("makelist",Kusto.Language.Symbols.ReturnTypeKind.Parameter0Array,[new Kusto.Language.Symbols.Parameter.ctor("expr",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.ctor("maxSize",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("list").Obsolete("make_list").Hide();this.MakeList=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("make_list",Kusto.Language.Symbols.ReturnTypeKind.Parameter0Array,[new Kusto.Language.Symbols.Parameter.ctor("expr",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.ctor("maxSize",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("list");this.MakeListIf=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("make_list_if",Kusto.Language.Symbols.ReturnTypeKind.Parameter0Array,[new Kusto.Language.Symbols.Parameter.ctor("expr",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.$ctor2("predicate",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.Parameter.ctor("maxSize",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("list");this.MakeListWithNulls=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("make_list_with_nulls",Kusto.Language.Symbols.ReturnTypeKind.Parameter0Array,[new Kusto.Language.Symbols.Parameter.ctor("expr",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("list");this.MakeSet_Deprecated=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("makeset",Kusto.Language.Symbols.ReturnTypeKind.Parameter0Array,[new Kusto.Language.Symbols.Parameter.ctor("expr",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.ctor("maxSize",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("set").Obsolete("make_set").Hide();this.MakeSet=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("make_set",Kusto.Language.Symbols.ReturnTypeKind.Parameter0Array,[new Kusto.Language.Symbols.Parameter.ctor("expr",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.ctor("maxSize",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("set");this.MakeSetIf=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("make_set_if",Kusto.Language.Symbols.ReturnTypeKind.Parameter0Array,[new Kusto.Language.Symbols.Parameter.ctor("expr",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.$ctor2("predicate",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.Parameter.ctor("maxSize",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("set");this.Passthrough=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("passthrough",Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("expr",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).Hide();this.MakeDictionary=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("make_dictionary",Kusto.Language.Symbols.ScalarTypes.DynamicBag,[new Kusto.Language.Symbols.Parameter.ctor("expr",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag),new Kusto.Language.Symbols.Parameter.ctor("maxSize",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("dictionary").Hide();this.MakeBag=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("make_bag",Kusto.Language.Symbols.ScalarTypes.DynamicBag,[new Kusto.Language.Symbols.Parameter.ctor("expr",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag),new Kusto.Language.Symbols.Parameter.ctor("maxSize",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("bag");this.MakeBagIf=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("make_bag_if",Kusto.Language.Symbols.ScalarTypes.DynamicBag,[new Kusto.Language.Symbols.Parameter.ctor("expr",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag),new Kusto.Language.Symbols.Parameter.$ctor2("predicate",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.Parameter.ctor("maxSize",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("bag");this.BuildSchema=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("buildschema",Kusto.Language.Symbols.ScalarTypes.DynamicBag,[new Kusto.Language.Symbols.Parameter.ctor("expr",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("schema");this.BinaryAllOr=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("binary_all_or",[new Kusto.Language.Symbols.Signature.$ctor2(Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("expr",Kusto.Language.Symbols.ParameterTypeKind.Summable)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.BinaryAllAnd=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("binary_all_and",[new Kusto.Language.Symbols.Signature.$ctor2(Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("expr",Kusto.Language.Symbols.ParameterTypeKind.Summable)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.BinaryAllXor=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("binary_all_xor",[new Kusto.Language.Symbols.Signature.$ctor2(Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("expr",Kusto.Language.Symbols.ParameterTypeKind.Summable)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.CountDistinct=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("count_distinct",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("expr",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("count_distinct").WithOptimizedAlternative("dcount");this.CountDistinctIf=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("count_distinctif",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("expr",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic),new Kusto.Language.Symbols.Parameter.$ctor2("predicate",Kusto.Language.Symbols.ScalarTypes.Bool)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("count_distinctif").WithOptimizedAlternative("dcountif");this.PercentileReturn=function(context){var cols=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor);return Kusto.Language.Aggregates.AddPercentileColumns(cols,context,"expr","percentile"),new Kusto.Language.Symbols.TupleSymbol.$ctor1(cols)};this.PercentileArrayReturn=function(context){var cols=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor),valueArg,valueArgName;return(valueArg=context.GetArgument$1("expr"))!=null&&(valueArgName=context.GetResultName(valueArg))!=null&&cols.add(new Kusto.Language.Symbols.ColumnSymbol("percentiles_"+(valueArgName||""),Kusto.Language.Symbols.ScalarTypes.DynamicArray,void 0,void 0,valueArg,void 0)),new Kusto.Language.Symbols.TupleSymbol.$ctor1(cols)};this.Percentile=new Kusto.Language.Symbols.FunctionSymbol.ctor("percentile",Kusto.Language.Aggregates.PercentileReturn,Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("expr",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.ctor("percentile",Kusto.Language.Symbols.ParameterTypeKind.Number)]);this.Percentiles=new Kusto.Language.Symbols.FunctionSymbol.ctor("percentiles",Kusto.Language.Aggregates.PercentileReturn,Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("expr",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.ctor("percentile",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,1,Kusto.Language.FunctionHelpers.MaxRepeat,void 0,void 0)]);this.PercentilesArray=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("percentiles_array",[new Kusto.Language.Symbols.Signature.ctor(Kusto.Language.Aggregates.PercentileArrayReturn,Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("expr",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.ctor("percentile",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,1,Kusto.Language.FunctionHelpers.MaxRepeat,void 0,void 0)]),new Kusto.Language.Symbols.Signature.ctor(Kusto.Language.Aggregates.PercentileArrayReturn,Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("expr",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.ctor("percentiles",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)])]);this.PercentileW=new Kusto.Language.Symbols.FunctionSymbol.ctor("percentilew",Kusto.Language.Aggregates.PercentileReturn,Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("expr",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.ctor("weight",Kusto.Language.Symbols.ParameterTypeKind.Integer),new Kusto.Language.Symbols.Parameter.ctor("percentile",Kusto.Language.Symbols.ParameterTypeKind.Number)]);this.PercentilesW=new Kusto.Language.Symbols.FunctionSymbol.ctor("percentilesw",Kusto.Language.Aggregates.PercentileReturn,Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("expr",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.ctor("weight",Kusto.Language.Symbols.ParameterTypeKind.Integer),new Kusto.Language.Symbols.Parameter.ctor("percentile",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,1,Kusto.Language.FunctionHelpers.MaxRepeat,void 0,void 0)]);this.PercentilesWArray=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("percentilesw_array",[new Kusto.Language.Symbols.Signature.ctor(Kusto.Language.Aggregates.PercentileArrayReturn,Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("expr",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.ctor("weight",Kusto.Language.Symbols.ParameterTypeKind.Integer),new Kusto.Language.Symbols.Parameter.ctor("percentile",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,1,Kusto.Language.FunctionHelpers.MaxRepeat,void 0,void 0)]),new Kusto.Language.Symbols.Signature.ctor(Kusto.Language.Aggregates.PercentileArrayReturn,Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("expr",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.ctor("weight",Kusto.Language.Symbols.ParameterTypeKind.Integer),new Kusto.Language.Symbols.Parameter.ctor("percentiles",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)])]);this.Stdev=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("stdev",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("expr",Kusto.Language.Symbols.ParameterTypeKind.Summable)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("stdev");this.StdevIf=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("stdevif",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("expr",Kusto.Language.Symbols.ParameterTypeKind.Summable),new Kusto.Language.Symbols.Parameter.$ctor2("predicate",Kusto.Language.Symbols.ScalarTypes.Bool)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("stdevif");this.Stdevp=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("stdevp",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("expr",Kusto.Language.Symbols.ParameterTypeKind.Summable)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("stdevp");this.Variance=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("variance",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("expr",Kusto.Language.Symbols.ParameterTypeKind.Summable)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("variance");this.VarianceIf=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("varianceif",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("expr",Kusto.Language.Symbols.ParameterTypeKind.Summable),new Kusto.Language.Symbols.Parameter.$ctor2("predicate",Kusto.Language.Symbols.ScalarTypes.Bool)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("varianceif");this.Variancep=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("variancep",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("expr",Kusto.Language.Symbols.ParameterTypeKind.Summable)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("variancep");this.Any=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("any",[new Kusto.Language.Symbols.Signature.$ctor2(Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("expr",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]),new Kusto.Language.Symbols.Signature.ctor(function(context){return Kusto.Language.Aggregates.GetAnyResult(context,null)},Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("expr",Kusto.Language.Symbols.ParameterTypeKind.Scalar,0,void 0,void 0,!1,void 0,2,Kusto.Language.FunctionHelpers.MaxRepeat,void 0,void 0)]),new Kusto.Language.Symbols.Signature.ctor(function(context){return Kusto.Language.Aggregates.GetAnyResult(context,null)},Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("expr",Kusto.Language.Symbols.ParameterTypeKind.Scalar,Kusto.Language.Symbols.ArgumentKind.StarOnly)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("any").Obsolete("take_any");this.TakeAny=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("take_any",[new Kusto.Language.Symbols.Signature.ctor(function(context){return Kusto.Language.Aggregates.GetAnyResult(context,"any_")},Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("expr",Kusto.Language.Symbols.ParameterTypeKind.Scalar,Kusto.Language.Symbols.ArgumentKind.StarAllowed,void 0,void 0,!1,void 0,1,Kusto.Language.FunctionHelpers.MaxRepeat,void 0,void 0)])]);this.AnyIf=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("anyif",[new Kusto.Language.Symbols.Signature.$ctor2(Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("expr",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.$ctor2("predicate",Kusto.Language.Symbols.ScalarTypes.Bool)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("anyif").Obsolete("take_anyif");this.TakeAnyIf=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("take_anyif",[new Kusto.Language.Symbols.Signature.$ctor2(Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("expr",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.$ctor2("predicate",Kusto.Language.Symbols.ScalarTypes.Bool)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.ArgMin=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("arg_min",[new Kusto.Language.Symbols.Signature.ctor(function(context){return Kusto.Language.Aggregates.GetArgMinMaxResult(context,"min")},Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("minimized",Kusto.Language.Symbols.ParameterTypeKind.Orderable),new Kusto.Language.Symbols.Parameter.ctor("returned",Kusto.Language.Symbols.ParameterTypeKind.Scalar,Kusto.Language.Symbols.ArgumentKind.StarAllowed,void 0,void 0,!1,void 0,0,Kusto.Language.FunctionHelpers.MaxRepeat,void 0,void 0)])]);this.ArgMax=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("arg_max",[new Kusto.Language.Symbols.Signature.ctor(function(context){return Kusto.Language.Aggregates.GetArgMinMaxResult(context,"max")},Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("maximized",Kusto.Language.Symbols.ParameterTypeKind.Orderable),new Kusto.Language.Symbols.Parameter.ctor("returned",Kusto.Language.Symbols.ParameterTypeKind.Scalar,Kusto.Language.Symbols.ArgumentKind.StarAllowed,void 0,void 0,!1,void 0,0,Kusto.Language.FunctionHelpers.MaxRepeat,void 0,void 0)])]);this.ArgMin_Deprecated=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("argmin",[new Kusto.Language.Symbols.Signature.ctor(Kusto.Language.Aggregates.GetArgMinMaxDepResult,Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("minimized",Kusto.Language.Symbols.ParameterTypeKind.Orderable),new Kusto.Language.Symbols.Parameter.ctor("returned",Kusto.Language.Symbols.ParameterTypeKind.Scalar,Kusto.Language.Symbols.ArgumentKind.StarAllowed,void 0,void 0,!1,void 0,0,Kusto.Language.FunctionHelpers.MaxRepeat,void 0,void 0)])]).WithResultNamePrefix("min").Obsolete("arg_min").Hide();this.ArgMax_Deprecated=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("argmax",[new Kusto.Language.Symbols.Signature.ctor(Kusto.Language.Aggregates.GetArgMinMaxDepResult,Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("maximized",Kusto.Language.Symbols.ParameterTypeKind.Orderable),new Kusto.Language.Symbols.Parameter.ctor("returned",Kusto.Language.Symbols.ParameterTypeKind.Scalar,Kusto.Language.Symbols.ArgumentKind.StarAllowed,void 0,void 0,!1,void 0,0,Kusto.Language.FunctionHelpers.MaxRepeat,void 0,void 0)])]).WithResultNamePrefix("max").Obsolete("arg_max").Hide();this.All=System.Array.init([Kusto.Language.Aggregates.Sum,Kusto.Language.Aggregates.SumIf,Kusto.Language.Aggregates.Cnt,Kusto.Language.Aggregates.Count,Kusto.Language.Aggregates.CountIf,Kusto.Language.Aggregates.DCount,Kusto.Language.Aggregates.DCountIf,Kusto.Language.Aggregates.TDigest,Kusto.Language.Aggregates.TDigestMerge,Kusto.Language.Aggregates.MergeTDigest,Kusto.Language.Aggregates.Hll,Kusto.Language.Aggregates.HllIf,Kusto.Language.Aggregates.HllMerge,Kusto.Language.Aggregates.Min,Kusto.Language.Aggregates.MinIf,Kusto.Language.Aggregates.Max,Kusto.Language.Aggregates.MaxIf,Kusto.Language.Aggregates.Avg,Kusto.Language.Aggregates.AvgIf,Kusto.Language.Aggregates.MakeList_Deprecated,Kusto.Language.Aggregates.MakeList,Kusto.Language.Aggregates.MakeListIf,Kusto.Language.Aggregates.MakeListWithNulls,Kusto.Language.Aggregates.MakeSet_Deprecated,Kusto.Language.Aggregates.MakeSet,Kusto.Language.Aggregates.MakeSetIf,Kusto.Language.Aggregates.MakeDictionary,Kusto.Language.Aggregates.MakeBag,Kusto.Language.Aggregates.MakeBagIf,Kusto.Language.Aggregates.BuildSchema,Kusto.Language.Aggregates.Passthrough,Kusto.Language.Aggregates.Percentile,Kusto.Language.Aggregates.Percentiles,Kusto.Language.Aggregates.PercentilesArray,Kusto.Language.Aggregates.PercentileW,Kusto.Language.Aggregates.PercentilesW,Kusto.Language.Aggregates.PercentilesWArray,Kusto.Language.Aggregates.Stdev,Kusto.Language.Aggregates.StdevIf,Kusto.Language.Aggregates.Stdevp,Kusto.Language.Aggregates.Variance,Kusto.Language.Aggregates.VarianceIf,Kusto.Language.Aggregates.Variancep,Kusto.Language.Aggregates.Any,Kusto.Language.Aggregates.TakeAny,Kusto.Language.Aggregates.AnyIf,Kusto.Language.Aggregates.TakeAnyIf,Kusto.Language.Aggregates.ArgMin,Kusto.Language.Aggregates.ArgMax,Kusto.Language.Aggregates.ArgMin_Deprecated,Kusto.Language.Aggregates.ArgMax_Deprecated,Kusto.Language.Aggregates.BinaryAllOr,Kusto.Language.Aggregates.BinaryAllAnd,Kusto.Language.Aggregates.BinaryAllXor,Kusto.Language.Aggregates.CountDistinct,Kusto.Language.Aggregates.CountDistinctIf],Kusto.Language.Symbols.FunctionSymbol)}},methods:{AddPercentileColumns:function(columns,context,valueParameterName,percentileParameterName){var $t,valueArg,valueArgName,resultType;if((valueArg=context.GetArgument$1(valueParameterName))!=null&&(valueArgName=context.GetResultName(valueArg))!=null){resultType=valueArg.ResultType;Bridge.referenceEquals(resultType,Kusto.Language.Symbols.ScalarTypes.Int)?resultType=Kusto.Language.Symbols.ScalarTypes.Long:Bridge.referenceEquals(resultType,Kusto.Language.Symbols.ScalarTypes.Decimal)&&(resultType=Kusto.Language.Symbols.ScalarTypes.Real);$t=Bridge.getEnumerator(context.GetArguments$1(percentileParameterName),Kusto.Language.Syntax.Expression);try{while($t.moveNext()){var percentileArg=$t.Current,percentileFragment=Kusto.Language.FunctionHelpers.MakeValidNameFragment(Kusto.Language.FunctionHelpers.GetConstantValue(percentileArg)),name=(percentileParameterName||"")+"_"+(valueArgName||"")+"_"+(percentileFragment||"");columns.add(new Kusto.Language.Symbols.ColumnSymbol(name,resultType,void 0,void 0,valueArg,void 0))}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}},GetAnyResult:function(context,unnamedExpressionPrefix){for(var arg,c,snx,vc,c1,expName,col,$t,$t1,columns=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor),prefix=($t=unnamedExpressionPrefix,$t!=null?$t:""),doNotRepeat=new(System.Collections.Generic.HashSet$1(Kusto.Language.Symbols.ColumnSymbol).$ctor1)(Kusto.Language.FunctionHelpers.GetSummarizeByColumns(context.Arguments)),anyStar=System.Linq.Enumerable.from(context.Arguments,Kusto.Language.Syntax.Expression).any(function(a){return Bridge.is(a,Kusto.Language.Syntax.StarExpression)}),i=0;i<System.Array.getCount(context.Arguments,Kusto.Language.Syntax.Expression);i=i+1|0)if(arg=System.Array.getItem(context.Arguments,i,Kusto.Language.Syntax.Expression),Bridge.is(arg,Kusto.Language.Syntax.StarExpression)){$t1=Bridge.getEnumerator(context.RowScope.Columns,Kusto.Language.Symbols.ColumnSymbol);try{while($t1.moveNext())c=$t1.Current,Kusto.Language.Aggregates.CanAddAnyResultColumn(c,doNotRepeat,anyStar)&&(doNotRepeat.add(c),columns.add(c))}finally{Bridge.is($t1,System.IDisposable)&&$t1.System$IDisposable$Dispose()}}else(snx=Bridge.as(arg,Kusto.Language.Syntax.SimpleNamedExpression))!=null&&(vc=Kusto.Language.Aggregates.GetResultColumn(snx.Expression))!=null?Kusto.Language.Aggregates.CanAddAnyResultColumn(vc,doNotRepeat,anyStar)&&(doNotRepeat.add(vc),columns.add(new Kusto.Language.Symbols.ColumnSymbol(snx.Name.SimpleName,vc.Type,void 0,System.Array.init([vc],Kusto.Language.Symbols.ColumnSymbol),void 0,void 0))):(c1=Kusto.Language.Aggregates.GetResultColumn(arg))!=null?Kusto.Language.Aggregates.CanAddAnyResultColumn(c1,doNotRepeat,anyStar)&&(doNotRepeat.contains(c1)?columns.add(new Kusto.Language.Symbols.ColumnSymbol(c1.Name,c1.Type,void 0,System.Array.init([c1],Kusto.Language.Symbols.ColumnSymbol),void 0,void 0)):(doNotRepeat.add(c1),columns.add(c1))):(expName=Kusto.Language.Binding.Binder.GetExpressionResultName(arg,""),System.String.isNullOrEmpty(expName)&&(expName=(prefix||"")+"arg"+i),col=new Kusto.Language.Symbols.ColumnSymbol(expName,arg.ResultType,void 0,void 0,arg,void 0),columns.add(col));return new Kusto.Language.Symbols.TupleSymbol.$ctor1(columns)},CanAddAnyResultColumn:function(column,doNotRepeat,anyStar){return anyStar?!doNotRepeat.contains(column):!0},GetArgMinMaxResult:function(context,prefix){var $t,columns=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor),i,arg,c,snx,vc,c1,expName,col;if(System.Array.getCount(context.Arguments,Kusto.Language.Syntax.Expression)>0){var byClauseColumns=new(System.Collections.Generic.HashSet$1(Kusto.Language.Symbols.ColumnSymbol).$ctor1)(Kusto.Language.FunctionHelpers.GetSummarizeByColumns(context.Arguments)),doNotRepeat=new(System.Collections.Generic.HashSet$1(Kusto.Language.Symbols.ColumnSymbol).ctor),primaryArg=System.Array.getItem(context.Arguments,0,Kusto.Language.Syntax.Expression),primaryColName=Kusto.Language.Binding.Binder.GetExpressionResultName(primaryArg),anyStar=System.Linq.Enumerable.from(context.Arguments,Kusto.Language.Syntax.Expression).any(function(a){return Bridge.is(a,Kusto.Language.Syntax.StarExpression)});for(i=0;i<System.Array.getCount(context.Arguments,Kusto.Language.Syntax.Expression);i=i+1|0)if(arg=System.Array.getItem(context.Arguments,i,Kusto.Language.Syntax.Expression),Bridge.is(arg,Kusto.Language.Syntax.StarExpression)){$t=Bridge.getEnumerator(context.RowScope.Columns,Kusto.Language.Symbols.ColumnSymbol);try{while($t.moveNext())c=$t.Current,Kusto.Language.Aggregates.CanAddArgMinMaxResultColumn(i,c,byClauseColumns,doNotRepeat,anyStar)&&(doNotRepeat.add(c),columns.add(c))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}else(snx=Bridge.as(arg,Kusto.Language.Syntax.SimpleNamedExpression))!=null&&(vc=Kusto.Language.Aggregates.GetResultColumn(snx.Expression))!=null?Kusto.Language.Aggregates.CanAddArgMinMaxResultColumn(i,vc,byClauseColumns,doNotRepeat,anyStar)&&(doNotRepeat.add(vc),columns.add(new Kusto.Language.Symbols.ColumnSymbol(snx.Name.SimpleName,vc.Type,void 0,System.Array.init([vc],Kusto.Language.Symbols.ColumnSymbol),void 0,void 0))):(c1=Kusto.Language.Aggregates.GetResultColumn(arg))!=null?Kusto.Language.Aggregates.CanAddArgMinMaxResultColumn(i,c1,byClauseColumns,doNotRepeat,anyStar)&&(doNotRepeat.contains(c1)||byClauseColumns.contains(c1)?columns.add(new Kusto.Language.Symbols.ColumnSymbol(c1.Name,c1.Type,void 0,System.Array.init([c1],Kusto.Language.Symbols.ColumnSymbol),void 0,void 0)):(doNotRepeat.add(c1),columns.add(c1))):(expName=Kusto.Language.Binding.Binder.GetExpressionResultName(arg,null),expName==null&&(expName=i===0?(prefix||"")+"_":(prefix||"")+"_"+(primaryColName||"")+"_arg"+i),col=new Kusto.Language.Symbols.ColumnSymbol(expName,arg.ResultType,void 0,void 0,arg,void 0),columns.add(col))}return new Kusto.Language.Symbols.TupleSymbol.$ctor1(columns)},CanAddArgMinMaxResultColumn:function(argIndex,column,byClauseColumns,doNotRepeat,anyStar){return argIndex===0?!0:anyStar?!doNotRepeat.contains(column)&&!byClauseColumns.contains(column):!0},GetResultColumn:function(expr){return Kusto.Language.Binding.Binder.GetResultColumn(expr)},GetArgMinMaxDepResult:function(context){var $t,columns=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor),primaryCol,i,arg,c,snx,vc,c1,expName,col;if(System.Array.getCount(context.Arguments,Kusto.Language.Syntax.Expression)>0){var byClauseColumns=new(System.Collections.Generic.HashSet$1(Kusto.Language.Symbols.ColumnSymbol).$ctor1)(Kusto.Language.FunctionHelpers.GetSummarizeByColumns(context.Arguments)),doNotRepeat=new(System.Collections.Generic.HashSet$1(Kusto.Language.Symbols.ColumnSymbol).ctor),anyStar=System.Linq.Enumerable.from(context.Arguments,Kusto.Language.Syntax.Expression).any(function(a){return Bridge.is(a,Kusto.Language.Syntax.StarExpression)}),primaryArg=System.Array.getItem(context.Arguments,0,Kusto.Language.Syntax.Expression),primaryColName,pc;for((pc=Kusto.Language.Aggregates.GetResultColumn(primaryArg))!=null?(doNotRepeat.add(pc),columns.add(pc),primaryColName=pc.Name):(primaryColName=Kusto.Language.Binding.Binder.GetExpressionResultName(primaryArg),primaryCol=new Kusto.Language.Symbols.ColumnSymbol(primaryColName,primaryArg.ResultType,void 0,void 0,primaryArg,void 0),columns.add(primaryCol)),i=1;i<System.Array.getCount(context.Arguments,Kusto.Language.Syntax.Expression);i=i+1|0)if(arg=System.Array.getItem(context.Arguments,i,Kusto.Language.Syntax.Expression),Bridge.is(arg,Kusto.Language.Syntax.StarExpression)){$t=Bridge.getEnumerator(context.RowScope.Columns,Kusto.Language.Symbols.ColumnSymbol);try{while($t.moveNext())c=$t.Current,!Bridge.referenceEquals(c,primaryArg.ReferencedSymbol)&&Kusto.Language.Aggregates.CanAddArgMinMaxResultColumn(i,c,byClauseColumns,doNotRepeat,anyStar)&&(doNotRepeat.add(c),columns.add(c.WithName((primaryColName||"")+"_"+(c.Name||"")).WithOriginalColumns([c])))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}else(snx=Bridge.as(arg,Kusto.Language.Syntax.SimpleNamedExpression))!=null&&(vc=Kusto.Language.Aggregates.GetResultColumn(snx.Expression))!=null?Kusto.Language.Aggregates.CanAddArgMinMaxResultColumn(i,vc,byClauseColumns,doNotRepeat,anyStar)&&(doNotRepeat.add(vc),columns.add(new Kusto.Language.Symbols.ColumnSymbol((primaryColName||"")+"_"+(snx.Name.SimpleName||""),vc.Type,void 0,System.Array.init([vc],Kusto.Language.Symbols.ColumnSymbol),void 0,void 0))):(c1=Kusto.Language.Aggregates.GetResultColumn(arg))!=null?Kusto.Language.Aggregates.CanAddArgMinMaxResultColumn(i,c1,byClauseColumns,doNotRepeat,anyStar)&&(doNotRepeat.add(c1),columns.add(c1.WithName((primaryColName||"")+"_"+(c1.Name||"")).WithOriginalColumns([c1]))):(expName=Kusto.Language.Binding.Binder.GetExpressionResultName(arg,null),expName==null&&(expName="arg"+i),col=new Kusto.Language.Symbols.ColumnSymbol((primaryColName||"")+"_"+(expName||""),arg.ResultType,void 0,void 0,arg,void 0),columns.add(col))}return new Kusto.Language.Symbols.TupleSymbol.$ctor1(columns)}}}});Bridge.define("Kusto.Language.AriaBridgeCommands",{statics:{fields:{ShowVersion:null,All:null},ctors:{init:function(){this.ShowVersion=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowVersion","(BuildVersion: string, BuildTime: datetime, ServiceType: string, ProductVersion: string)");this.All=System.Array.init([Kusto.Language.AriaBridgeCommands.ShowVersion],Kusto.Language.Symbols.CommandSymbol)}}}});Bridge.define("Kusto.Language.Binding.Binder",{statics:{fields:{s_symbolListPool:null,s_symbolHashSetPool:null,s_diagnosticListPool:null,s_columnListPool:null,s_tableListPool:null,s_functionListPool:null,s_signatureListPool:null,s_patternListPool:null,s_expressionListPool:null,s_typeListPool:null,s_stringSetPool:null,s_uniqueNameTablePool:null,s_projectionBuilderPool:null,s_parameterListPool:null,s_stringToIntMapPool:null,LiteralBoolInfo:null,LiteralIntInfo:null,LiteralLongInfo:null,LiteralRealInfo:null,LiteralDecimalInfo:null,LiteralStringInfo:null,LiteralDateTimeInfo:null,LiteralTimeSpanInfo:null,LiteralGuidInfo:null,LiteralDynamicInfo:null,LiteralNullInfo:null,UnknownInfo:null,ErrorInfo:null,VoidInfo:null},ctors:{init:function(){this.s_symbolListPool=new(Kusto.Language.Utils.ObjectPool$1(System.Collections.Generic.List$1(Kusto.Language.Symbols.Symbol)))(function(){return new(System.Collections.Generic.List$1(Kusto.Language.Symbols.Symbol).ctor)},function(list){list.clear()});this.s_symbolHashSetPool=new(Kusto.Language.Utils.ObjectPool$1(System.Collections.Generic.HashSet$1(Kusto.Language.Symbols.Symbol)))(function(){return new(System.Collections.Generic.HashSet$1(Kusto.Language.Symbols.Symbol).ctor)},function(list){list.clear()});this.s_diagnosticListPool=new(Kusto.Language.Utils.ObjectPool$1(System.Collections.Generic.List$1(Kusto.Language.Diagnostic)))(function(){return new(System.Collections.Generic.List$1(Kusto.Language.Diagnostic).ctor)},function(list){list.clear()});this.s_columnListPool=new(Kusto.Language.Utils.ObjectPool$1(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol)))(function(){return new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor)},function(list){list.clear()});this.s_tableListPool=new(Kusto.Language.Utils.ObjectPool$1(System.Collections.Generic.List$1(Kusto.Language.Symbols.TableSymbol)))(function(){return new(System.Collections.Generic.List$1(Kusto.Language.Symbols.TableSymbol).ctor)},function(list){list.clear()});this.s_functionListPool=new(Kusto.Language.Utils.ObjectPool$1(System.Collections.Generic.List$1(Kusto.Language.Symbols.FunctionSymbol)))(function(){return new(System.Collections.Generic.List$1(Kusto.Language.Symbols.FunctionSymbol).ctor)},function(list){list.clear()});this.s_signatureListPool=new(Kusto.Language.Utils.ObjectPool$1(System.Collections.Generic.List$1(Kusto.Language.Symbols.Signature)))(function(){return new(System.Collections.Generic.List$1(Kusto.Language.Symbols.Signature).ctor)},function(list){list.clear()});this.s_patternListPool=new(Kusto.Language.Utils.ObjectPool$1(System.Collections.Generic.List$1(Kusto.Language.Symbols.PatternSignature)))(function(){return new(System.Collections.Generic.List$1(Kusto.Language.Symbols.PatternSignature).ctor)},function(list){list.clear()});this.s_expressionListPool=new(Kusto.Language.Utils.ObjectPool$1(System.Collections.Generic.List$1(Kusto.Language.Syntax.Expression)))(function(){return new(System.Collections.Generic.List$1(Kusto.Language.Syntax.Expression).ctor)},function(list){list.clear()});this.s_typeListPool=new(Kusto.Language.Utils.ObjectPool$1(System.Collections.Generic.List$1(Kusto.Language.Symbols.TypeSymbol)))(function(){return new(System.Collections.Generic.List$1(Kusto.Language.Symbols.TypeSymbol).ctor)},function(list){list.clear()});this.s_stringSetPool=new(Kusto.Language.Utils.ObjectPool$1(System.Collections.Generic.HashSet$1(System.String)))(function(){return new(System.Collections.Generic.HashSet$1(System.String).ctor)},function(s){s.clear()});this.s_uniqueNameTablePool=new(Kusto.Language.Utils.ObjectPool$1(Kusto.Language.Utils.UniqueNameTable))(function(){return new Kusto.Language.Utils.UniqueNameTable},function(t){t.Clear()});this.s_projectionBuilderPool=new(Kusto.Language.Utils.ObjectPool$1(Kusto.Language.Binding.ProjectionBuilder))(function(){return new Kusto.Language.Binding.ProjectionBuilder},function(b){b.Clear()});this.s_parameterListPool=new(Kusto.Language.Utils.ObjectPool$1(System.Collections.Generic.List$1(Kusto.Language.Symbols.Parameter)))(function(){return new(System.Collections.Generic.List$1(Kusto.Language.Symbols.Parameter).ctor)},function(list){list.clear()});this.s_stringToIntMapPool=new(Kusto.Language.Utils.ObjectPool$1(System.Collections.Generic.Dictionary$2(System.String,System.Int32)))(function(){return new(System.Collections.Generic.Dictionary$2(System.String,System.Int32).ctor)},function(m){m.clear()});this.LiteralBoolInfo=new Kusto.Language.Binding.SemanticInfo.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,void 0,!0,void 0);this.LiteralIntInfo=new Kusto.Language.Binding.SemanticInfo.$ctor5(Kusto.Language.Symbols.ScalarTypes.Int,void 0,!0,void 0);this.LiteralLongInfo=new Kusto.Language.Binding.SemanticInfo.$ctor5(Kusto.Language.Symbols.ScalarTypes.Long,void 0,!0,void 0);this.LiteralRealInfo=new Kusto.Language.Binding.SemanticInfo.$ctor5(Kusto.Language.Symbols.ScalarTypes.Real,void 0,!0,void 0);this.LiteralDecimalInfo=new Kusto.Language.Binding.SemanticInfo.$ctor5(Kusto.Language.Symbols.ScalarTypes.Decimal,void 0,!0,void 0);this.LiteralStringInfo=new Kusto.Language.Binding.SemanticInfo.$ctor5(Kusto.Language.Symbols.ScalarTypes.String,void 0,!0,void 0);this.LiteralDateTimeInfo=new Kusto.Language.Binding.SemanticInfo.$ctor5(Kusto.Language.Symbols.ScalarTypes.DateTime,void 0,!0,void 0);this.LiteralTimeSpanInfo=new Kusto.Language.Binding.SemanticInfo.$ctor5(Kusto.Language.Symbols.ScalarTypes.TimeSpan,void 0,!0,void 0);this.LiteralGuidInfo=new Kusto.Language.Binding.SemanticInfo.$ctor5(Kusto.Language.Symbols.ScalarTypes.Guid,void 0,!0,void 0);this.LiteralDynamicInfo=new Kusto.Language.Binding.SemanticInfo.$ctor5(Kusto.Language.Symbols.ScalarTypes.Dynamic,void 0,!0,void 0);this.LiteralNullInfo=new Kusto.Language.Binding.SemanticInfo.$ctor5(Kusto.Language.Symbols.ScalarTypes.Null,void 0,!0,void 0);this.UnknownInfo=new Kusto.Language.Binding.SemanticInfo.$ctor5(Kusto.Language.Symbols.ScalarTypes.Unknown,void 0,!0,void 0);this.ErrorInfo=new Kusto.Language.Binding.SemanticInfo.$ctor5(Kusto.Language.Symbols.ErrorSymbol.Instance);this.VoidInfo=new Kusto.Language.Binding.SemanticInfo.$ctor5(Kusto.Language.Symbols.VoidSymbol.Instance)}},methods:{TryBind:function(tree,globals,localBindingCache,semanticInfoSetter,cancellationToken){var bindingCache,binder,treeBinder;return(localBindingCache===void 0&&(localBindingCache=null),semanticInfoSetter===void 0&&(semanticInfoSetter=null),cancellationToken===void 0&&(cancellationToken=new Kusto.Language.Utils.CancellationToken),!tree.IsSafeToRecurse)?!1:(globals=globals.WithCache(),bindingCache=globals.Cache.GetOrCreate(Kusto.Language.Binding.GlobalBindingCache),bindingCache,binder=new Kusto.Language.Binding.Binder(globals,globals.Cluster,globals.Database,null,null,Kusto.Language.Binding.Binder.GetDefaultOuterScope(globals),bindingCache,localBindingCache,semanticInfoSetter,cancellationToken),treeBinder=new Kusto.Language.Binding.Binder.TreeBinder(binder),tree.Root.Accept$1(treeBinder),!0)},GetDefaultOuterScope:function(globals){var outerScope=null;return System.Array.getCount(globals.AmbientSymbols,Kusto.Language.Symbols.Symbol)>0&&(outerScope=new Kusto.Language.Binding.LocalScope.ctor,outerScope.AddSymbols(globals.AmbientSymbols)),outerScope},DefaultSetSemanticInfo:function(node,info){if(info!=null){var data=node.GetExtendedData(!0);data.SemanticInfo=info}},TryBindCalledFunctionBody:function(bodyTree,outer,currentCluster,currentDatabase,currentFunction,outerScope,locals){var binder,treeBinder;return bodyTree.IsSafeToRecurse?(binder=new Kusto.Language.Binding.Binder(outer._globals,currentCluster||outer._currentCluster,currentDatabase||outer._currentDatabase,currentFunction,outer,outerScope,outer._globalBindingCache,outer._localBindingCache,outer._semanticInfoSetter,outer._cancellationToken),locals!=null&&binder.SetLocals(locals),treeBinder=new Kusto.Language.Binding.Binder.TreeBinder(binder),bodyTree.Root.Accept$1(treeBinder),!0):!1},GetComputedReturnType:function(signature,globals,argumentTypes){var binder;argumentTypes===void 0&&(argumentTypes=null);globals=globals.WithCache();var currentDatabase=globals.GetDatabase$2(signature.Symbol),currentCluster=globals.GetCluster(currentDatabase),bindingCache=globals.Cache.GetOrCreate(Kusto.Language.Binding.GlobalBindingCache);return bindingCache,binder=new Kusto.Language.Binding.Binder(globals,currentCluster,currentDatabase,Bridge.as(signature.Symbol,Kusto.Language.Symbols.FunctionSymbol),null,Kusto.Language.Binding.Binder.GetDefaultOuterScope(globals),bindingCache,null,null,Bridge.getDefaultValue(Kusto.Language.Utils.CancellationToken)),binder.GetComputedFunctionCallResult(signature,null,argumentTypes).Type},GetReferencedSymbol:function(tree,position,name,globals,match,cancellationToken){var bindingCache,binder,startNode,info;return tree.IsSafeToRecurse&&(globals=globals.WithCache(),bindingCache=globals.Cache.GetOrCreate(Kusto.Language.Binding.GlobalBindingCache),bindingCache,binder=new Kusto.Language.Binding.Binder(globals,globals.Cluster,globals.Database,null,null,Kusto.Language.Binding.Binder.GetDefaultOuterScope(globals),bindingCache,null,null,cancellationToken),startNode=Kusto.Language.Binding.Binder.GetStartNode(tree.Root,position),startNode!=null)?(binder.SetContext(startNode,position),info=binder.BindName(name,match,startNode),info!=null?info.ReferencedSymbol:null):null},GetReferencedSymbol$1:function(expression){return expression!=null?expression.ReferencedSymbol:null},GetRowScope:function(tree,position,globals,cancellationToken){var bindingCache,binder,startNode;return(cancellationToken===void 0&&(cancellationToken=new Kusto.Language.Utils.CancellationToken),tree.IsSafeToRecurse&&(globals=globals.WithCache(),bindingCache=globals.Cache.GetOrCreate(Kusto.Language.Binding.GlobalBindingCache),bindingCache,binder=new Kusto.Language.Binding.Binder(globals,globals.Cluster,globals.Database,null,null,Kusto.Language.Binding.Binder.GetDefaultOuterScope(globals),bindingCache,null,null,cancellationToken),startNode=Kusto.Language.Binding.Binder.GetStartNode(tree.Root,position),startNode!=null))?(binder.SetContext(startNode,position),binder._rowScope):Kusto.Language.Symbols.TableSymbol.Empty},GetSymbolsInScope:function(tree,position,globals,match,include,list,cancellationToken){var bindingCache,binder,startNode;tree.IsSafeToRecurse&&(globals=globals.WithCache(),bindingCache=globals.Cache.GetOrCreate(Kusto.Language.Binding.GlobalBindingCache),bindingCache,binder=new Kusto.Language.Binding.Binder(globals,globals.Cluster,globals.Database,null,null,Kusto.Language.Binding.Binder.GetDefaultOuterScope(globals),bindingCache,null,null,cancellationToken),startNode=Kusto.Language.Binding.Binder.GetStartNode(tree.Root,position),startNode!=null&&(binder.SetContext(startNode,position),binder.GetSymbolsInContext(startNode,match,include,list)))},GetStartNode:function(root,position){var token=root.GetTokenAt(position),prev;return token!=null?position<=token.TextStart&&(prev=token.GetPreviousToken(),prev!=null&&prev.Depth>=token.Depth)?prev.Parent:token.Parent:null},GetPathMembers:function(target,memberMatch,result){var $t,g,s;if((g=Bridge.as(target,Kusto.Language.Symbols.GroupSymbol))!=null&&Kusto.Language.Binding.Binder.IsPassThrough(g)){$t=Bridge.getEnumerator(g.Members,Kusto.Language.Symbols.Symbol);try{while($t.moveNext())s=$t.Current,Kusto.Language.Binding.Binder.GetPathMembers(s,memberMatch,result)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}else target.GetMembers(memberMatch,result)},GetPathMembers$1:function(target,name,memberMatch,result){var $t,g,s;if((g=Bridge.as(target,Kusto.Language.Symbols.GroupSymbol))!=null&&Kusto.Language.Binding.Binder.IsPassThrough(g)){$t=Bridge.getEnumerator(g.Members,Kusto.Language.Symbols.Symbol);try{while($t.moveNext())s=$t.Current,Kusto.Language.Binding.Binder.GetPathMembers$1(s,name,memberMatch,result)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}else target.GetMembers$1(name,memberMatch,result)},IsAvailable:function($function,context){return Bridge.staticEquals($function.CustomAvailability,null)||$function.CustomAvailability(context)},IsInvokeOperatorFunctionCall:function(functionCall){var p;return Bridge.is(functionCall.Parent,Kusto.Language.Syntax.InvokeOperator)||(p=Bridge.as(functionCall.Parent,Kusto.Language.Syntax.PathExpression))!=null&&Bridge.referenceEquals(p.Selector,functionCall)&&Bridge.is(p.Parent,Kusto.Language.Syntax.InvokeOperator)},TryGetLiteralStringValue:function(expression,value){var valueInfo={};return Kusto.Language.Binding.Binder.TryGetLiteralValueInfo(expression,valueInfo)?(value.v=Bridge.as(valueInfo.v!=null?valueInfo.v.Value:null,System.String),value.v!=null):(value.v=null,!1)},TryGetLiteralValueInfo:function(expression,value){if(expression=Kusto.Language.Binding.Binder.GetUnderlyingExpression(expression),expression.IsLiteral)return value.v=expression.LiteralValueInfo,value.v!=null;else{var nr,vs;return(nr=Bridge.as(expression,Kusto.Language.Syntax.NameReference))!=null&&(vs=Bridge.as(nr.ReferencedSymbol,Kusto.Language.Symbols.VariableSymbol))!=null&&vs.IsConstant?(value.v=vs.ConstantValueInfo,!0):(value.v=null,!1)}},IsPattern:function(name){return System.String.contains(name,"*")},GetMatchingDatabases:function(nameOrPattern,cluster,matches){var $t,cdb;if(!System.String.isNullOrEmpty(nameOrPattern)){$t=Bridge.getEnumerator(cluster.Databases,Kusto.Language.Symbols.DatabaseSymbol);try{while($t.moveNext())cdb=$t.Current,(Kusto.Language.KustoFacts.Matches(nameOrPattern,cdb.Name,!0)||Kusto.Language.KustoFacts.Matches(nameOrPattern,cdb.AlternateName,!0))&&matches.add(cdb)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}},IsPromotable:function(type1,type2){var type1Scalar,type2Scalar;return(type1Scalar=Bridge.as(type1,Kusto.Language.Symbols.ScalarSymbol))!=null&&(type2Scalar=Bridge.as(type2,Kusto.Language.Symbols.ScalarSymbol))!=null&&type2Scalar.IsWiderThan(type1Scalar)},Promote:function(symbol){return Bridge.referenceEquals(symbol,Kusto.Language.Symbols.ScalarTypes.Int)?Kusto.Language.Symbols.ScalarTypes.Long:symbol},CompareParameterMatch:function(match1,match2){return match1-match2|0},IsDefaultValueIndicator:function(parameter,argument){var lit,value;return parameter.DefaultValueIndicator!=null&&Bridge.referenceEquals(argument.ResultType,Kusto.Language.Symbols.ScalarTypes.String)&&(lit=Bridge.as(argument,Kusto.Language.Syntax.LiteralExpression))!=null&&(value=Bridge.as(lit.LiteralValue,System.String))!=null&&Bridge.referenceEquals(value,parameter.DefaultValueIndicator)},GetParameterMatchKind:function(signature,argumentParameters,argumentTypes,parameter,argument,argumentType,allowLooseParameterMatching){if(parameter==null)return Kusto.Language.Binding.ParameterMatchKind.None;if(Bridge.referenceEquals(argumentType,Kusto.Language.Symbols.ScalarTypes.Unknown))return Kusto.Language.Binding.ParameterMatchKind.Unknown;if(Kusto.Language.Binding.Binder.IsDefaultValueIndicator(parameter,argument))return Kusto.Language.Binding.ParameterMatchKind.Exact;if(Bridge.is(argument,Kusto.Language.Syntax.StarExpression))return parameter.ArgumentKind===Kusto.Language.Symbols.ArgumentKind.StarOnly||parameter.ArgumentKind===Kusto.Language.Symbols.ArgumentKind.StarAllowed?Kusto.Language.Binding.ParameterMatchKind.Exact:Kusto.Language.Binding.ParameterMatchKind.None;else if(parameter.ArgumentKind===Kusto.Language.Symbols.ArgumentKind.StarOnly)return Kusto.Language.Binding.ParameterMatchKind.None;switch(parameter.TypeKind){case Kusto.Language.Symbols.ParameterTypeKind.Any:return Kusto.Language.Binding.ParameterMatchKind.Unknown;case Kusto.Language.Symbols.ParameterTypeKind.Declared:if(Kusto.Language.Binding.Binder.SymbolsAssignable$1(parameter.DeclaredTypes,argumentType,Kusto.Language.Symbols.Conversion.None))return System.Array.getCount(parameter.DeclaredTypes,Kusto.Language.Symbols.TypeSymbol)===1?Kusto.Language.Binding.ParameterMatchKind.Exact:Kusto.Language.Binding.ParameterMatchKind.OneOfMany;else if(Kusto.Language.Binding.Binder.SymbolsAssignable$1(parameter.DeclaredTypes,argumentType,Kusto.Language.Symbols.Conversion.Promotable))return Kusto.Language.Binding.ParameterMatchKind.Promoted;else if(allowLooseParameterMatching&&Kusto.Language.Binding.Binder.SymbolsAssignable$1(parameter.DeclaredTypes,argumentType,Kusto.Language.Symbols.Conversion.Dynamic))return Kusto.Language.Binding.ParameterMatchKind.Dynamic;else if(allowLooseParameterMatching&&Kusto.Language.Binding.Binder.SymbolsAssignable$1(parameter.DeclaredTypes,argumentType,Kusto.Language.Symbols.Conversion.Compatible))return Kusto.Language.Binding.ParameterMatchKind.Compatible;break;case Kusto.Language.Symbols.ParameterTypeKind.Scalar:if(argumentType.IsScalar)return Kusto.Language.Binding.ParameterMatchKind.Scalar;break;case Kusto.Language.Symbols.ParameterTypeKind.Integer:if(Kusto.Language.Symbols.TypeFacts.IsInteger(argumentType))return Kusto.Language.Binding.ParameterMatchKind.Integer;break;case Kusto.Language.Symbols.ParameterTypeKind.RealOrDecimal:if(Kusto.Language.Symbols.TypeFacts.IsRealOrDecimal(argumentType))return Kusto.Language.Binding.ParameterMatchKind.OneOfMany;break;case Kusto.Language.Symbols.ParameterTypeKind.StringOrDynamic:if(Kusto.Language.Symbols.TypeFacts.IsStringOrDynamic(argumentType))return Kusto.Language.Binding.ParameterMatchKind.OneOfMany;break;case Kusto.Language.Symbols.ParameterTypeKind.StringOrArray:if(Kusto.Language.Symbols.TypeFacts.IsStringOrArray(argumentType))return Kusto.Language.Binding.ParameterMatchKind.OneOfMany;break;case Kusto.Language.Symbols.ParameterTypeKind.IntegerOrArray:if(Kusto.Language.Symbols.TypeFacts.IsIntegerOrArray(argumentType))return Kusto.Language.Binding.ParameterMatchKind.OneOfMany;break;case Kusto.Language.Symbols.ParameterTypeKind.DynamicArray:if(Kusto.Language.Symbols.TypeFacts.IsDynamicArray(argumentType))return Kusto.Language.Binding.ParameterMatchKind.OneOfMany;break;case Kusto.Language.Symbols.ParameterTypeKind.DynamicBag:if(Kusto.Language.Symbols.TypeFacts.IsDynamicBag(argumentType))return Kusto.Language.Binding.ParameterMatchKind.OneOfMany;break;case Kusto.Language.Symbols.ParameterTypeKind.Number:if(Kusto.Language.Symbols.TypeFacts.IsNumeric(argumentType))return Kusto.Language.Binding.ParameterMatchKind.Number;break;case Kusto.Language.Symbols.ParameterTypeKind.NumberOrBool:if(Kusto.Language.Symbols.TypeFacts.IsNumeric(argumentType)||Bridge.referenceEquals(argumentType,Kusto.Language.Symbols.ScalarTypes.Bool))return Kusto.Language.Binding.ParameterMatchKind.Number;break;case Kusto.Language.Symbols.ParameterTypeKind.Summable:if(Kusto.Language.Symbols.TypeFacts.IsSummable(argumentType))return Kusto.Language.Binding.ParameterMatchKind.Summable;break;case Kusto.Language.Symbols.ParameterTypeKind.Orderable:if(Kusto.Language.Symbols.TypeFacts.IsOrderable(argumentType))return Kusto.Language.Binding.ParameterMatchKind.Orderable;break;case Kusto.Language.Symbols.ParameterTypeKind.Tabular:if(Kusto.Language.Binding.Binder.IsTabular(argumentType))return Kusto.Language.Binding.ParameterMatchKind.Tabular;break;case Kusto.Language.Symbols.ParameterTypeKind.Database:if(Kusto.Language.Binding.Binder.IsDatabase(argumentType))return Kusto.Language.Binding.ParameterMatchKind.Database;break;case Kusto.Language.Symbols.ParameterTypeKind.Cluster:if(Kusto.Language.Binding.Binder.IsCluster(argumentType))return Kusto.Language.Binding.ParameterMatchKind.Cluster;break;case Kusto.Language.Symbols.ParameterTypeKind.NotBool:if(!Kusto.Language.Binding.Binder.SymbolsAssignable(argumentType,Kusto.Language.Symbols.ScalarTypes.Bool))return Kusto.Language.Binding.ParameterMatchKind.NotType;break;case Kusto.Language.Symbols.ParameterTypeKind.NotRealOrBool:if(!Kusto.Language.Binding.Binder.SymbolsAssignable(argumentType,Kusto.Language.Symbols.ScalarTypes.Real)&&!Kusto.Language.Binding.Binder.SymbolsAssignable(argumentType,Kusto.Language.Symbols.ScalarTypes.Bool))return Kusto.Language.Binding.ParameterMatchKind.NotType;break;case Kusto.Language.Symbols.ParameterTypeKind.NotDynamic:if(Kusto.Language.Symbols.TypeFacts.IsAnyScalarExceptDynamic(argumentType))return Kusto.Language.Binding.ParameterMatchKind.NotType;break;case Kusto.Language.Symbols.ParameterTypeKind.Parameter0:return Kusto.Language.Binding.Binder.GetParameterMatchKind(signature,argumentParameters,argumentTypes,System.Array.getItem(argumentParameters,0,Kusto.Language.Symbols.Parameter),argument,argumentType,allowLooseParameterMatching);case Kusto.Language.Symbols.ParameterTypeKind.Parameter1:return Kusto.Language.Binding.Binder.GetParameterMatchKind(signature,argumentParameters,argumentTypes,System.Array.getItem(argumentParameters,1,Kusto.Language.Symbols.Parameter),argument,argumentType,allowLooseParameterMatching);case Kusto.Language.Symbols.ParameterTypeKind.Parameter2:return Kusto.Language.Binding.Binder.GetParameterMatchKind(signature,argumentParameters,argumentTypes,System.Array.getItem(argumentParameters,2,Kusto.Language.Symbols.Parameter),argument,argumentType,allowLooseParameterMatching);case Kusto.Language.Symbols.ParameterTypeKind.CommonScalar:case Kusto.Language.Symbols.ParameterTypeKind.CommonNumber:case Kusto.Language.Symbols.ParameterTypeKind.CommonSummable:case Kusto.Language.Symbols.ParameterTypeKind.CommonOrderable:case Kusto.Language.Symbols.ParameterTypeKind.CommonScalarOrDynamic:var commonType=Kusto.Language.Symbols.TypeFacts.GetCommonArgumentType(argumentParameters,argumentTypes);if(commonType!=null)if(Kusto.Language.Binding.Binder.SymbolsAssignable(commonType,argumentType,Kusto.Language.Symbols.Conversion.None))return Kusto.Language.Binding.ParameterMatchKind.Exact;else if(Kusto.Language.Binding.Binder.SymbolsAssignable(commonType,argumentType,Kusto.Language.Symbols.Conversion.Promotable))return Kusto.Language.Binding.ParameterMatchKind.Promoted;else if(Kusto.Language.Binding.Binder.SymbolsAssignable(commonType,argumentType,Kusto.Language.Symbols.Conversion.Dynamic))return Kusto.Language.Binding.ParameterMatchKind.Dynamic;else if(allowLooseParameterMatching&&Kusto.Language.Binding.Binder.SymbolsAssignable(commonType,argumentType,Kusto.Language.Symbols.Conversion.Compatible))return Kusto.Language.Binding.ParameterMatchKind.Compatible;else if(parameter.TypeKind===Kusto.Language.Symbols.ParameterTypeKind.CommonScalarOrDynamic&&Kusto.Language.Binding.Binder.SymbolsAssignable(argumentType,Kusto.Language.Symbols.ScalarTypes.Dynamic))return Kusto.Language.Binding.ParameterMatchKind.Exact;break}return Kusto.Language.Binding.ParameterMatchKind.None},GetBodyResultType:function(body){var $t,exprBody,functionBody;return(exprBody=Bridge.as(body,Kusto.Language.Syntax.Expression))!=null?exprBody.ResultType:(functionBody=Bridge.as(body,Kusto.Language.Syntax.FunctionBody))!=null?($t=functionBody.Expression)!=null?$t.ResultType:null:null},HasSyntaxErrors:function(syntax){return syntax!=null&&syntax.ContainsSyntaxDiagnostics&&System.Linq.Enumerable.from(syntax.GetContainedSyntaxDiagnostics(),Kusto.Language.Diagnostic).any(function(d){return Bridge.referenceEquals(d.Severity,Kusto.Language.DiagnosticSeverity.Error)})},GetFunctionBodyText:function(signature){var body=signature.Body.trim();return System.String.startsWith(body,"{",4)||(body="{"+(body||"")),System.String.endsWith(body,"}",4)||(body=(body||"")+"\n}"),body},GetEntityGroupBodyText:function(signature){return signature.Body},GetUnboundBody:function(signature){var text,text1;return signature.Declaration!=null?signature.Declaration.Clone$1():Bridge.is(signature.Symbol,Kusto.Language.Symbols.EntityGroupSymbol)?(text=Kusto.Language.Binding.Binder.GetEntityGroupBodyText(signature),Kusto.Language.Parsing.QueryParser.ParseEntityGroup$1(text)):(text1=Kusto.Language.Binding.Binder.GetFunctionBodyText(signature),Kusto.Language.Parsing.QueryParser.ParseFunctionBody$1(text1))},GetRepresentativeType:function(parameter){switch(parameter.TypeKind){case Kusto.Language.Symbols.ParameterTypeKind.Declared:return System.Array.getItem(parameter.DeclaredTypes,0,Kusto.Language.Symbols.TypeSymbol);case Kusto.Language.Symbols.ParameterTypeKind.Tabular:return Kusto.Language.Symbols.TableSymbol.Empty;default:return Kusto.Language.Symbols.ScalarTypes.Dynamic}},IsSymbolLookupFunction:function(symbol){return Bridge.referenceEquals(symbol,Kusto.Language.Functions.Table)||Bridge.referenceEquals(symbol,Kusto.Language.Functions.ExternalTable)||Bridge.referenceEquals(symbol,Kusto.Language.Functions.MaterializedView)||Bridge.referenceEquals(symbol,Kusto.Language.Functions.Database)||Bridge.referenceEquals(symbol,Kusto.Language.Functions.Cluster)},GetResultTypeOrError:function(expression){return(expression!=null?expression.ResultType:null)||Kusto.Language.Symbols.ErrorSymbol.Instance},GetResultType$1:function(expression){return expression!=null?expression.ResultType:null},GetResultType:function(symbol){return Kusto.Language.Symbols.Symbol.GetResultType(symbol)},GetIsConstant:function(expression){var $t;return $t=expression!=null?expression.IsConstant:null,$t!=null?$t:!1},GetGraphSymbol:function(node){var pe=Bridge.as(node.Parent,Kusto.Language.Syntax.PipeExpression),pegs,current,mgpb,mg,mggs;if((pegs=pe!=null?pe.Expression.ResultType:Bridge.as(null,Kusto.Language.Symbols.GraphSymbol))!=null)return pegs;for(current=node;current!=null&&!Bridge.is(current,Kusto.Language.Syntax.MakeGraphPartitionedByClause);)current=(mgpb=Bridge.as(current.Parent,Kusto.Language.Syntax.MakeGraphPartitionedByClause))!=null?mgpb:current.Parent;return(mg=current!=null?current.Parent:Bridge.as(null,Kusto.Language.Syntax.MakeGraphOperator))!=null&&(mggs=Bridge.as(mg.ResultType,Kusto.Language.Symbols.GraphSymbol))!=null?mggs:null},HasDynamicPrimitives:function(types){var $t,type;$t=Bridge.getEnumerator(types,Kusto.Language.Symbols.TypeSymbol);try{while($t.moveNext())if(type=$t.Current,Bridge.is(type,Kusto.Language.Symbols.DynamicPrimitiveSymbol))return!0}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return!1},GetUnwrappedDynamicPrimitives:function(types,unwrapped){var $t,type,dp;$t=Bridge.getEnumerator(types,Kusto.Language.Symbols.TypeSymbol);try{while($t.moveNext())type=$t.Current,unwrapped.add((dp=Bridge.as(type,Kusto.Language.Symbols.DynamicPrimitiveSymbol))!=null?dp.UnderlyingType:type)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}},GetMacroExpandScope:function(location){var path=Bridge.as(location,Kusto.Language.Syntax.PathExpression),nr,fc,fcpe,pe,symbol,vs;return(nr=Bridge.as(location,Kusto.Language.Syntax.NameReference))!=null&&((fc=Bridge.as(nr.Parent,Kusto.Language.Syntax.FunctionCallExpression))!=null&&(fcpe=Bridge.as(fc.Parent,Kusto.Language.Syntax.PathExpression))!=null?path=fcpe:(pe=Bridge.as(nr.Parent,Kusto.Language.Syntax.PathExpression))!=null&&Bridge.referenceEquals(pe.Selector,nr)&&(path=pe)),symbol=null,path!=null&&(symbol=path.Expression.ReferencedSymbol),(vs=Bridge.as(symbol,Kusto.Language.Symbols.VariableSymbol))!=null&&(symbol=vs.Type),Bridge.as(symbol,Kusto.Language.Symbols.EntityGroupElementSymbol)},GetArgumentRowScope:function(fc,position,defaultRowScope){var fs=Bridge.as(fc.Name.ReferencedSymbol,Kusto.Language.Symbols.FunctionSymbol),sig=fc.Name.ReferencedSignature,possibleParameters,p0Table,rowScope,commonColumns;if(fs!=null){possibleParameters=Kusto.Language.Binding.Binder.s_parameterListPool.AllocateFromPool();Kusto.Language.Binding.Binder.GetPossibleArgumentParameters$1(fc,position,possibleParameters);var anyP0=System.Linq.Enumerable.from(possibleParameters,Kusto.Language.Symbols.Parameter).any(function(p){return p.ArgumentKind===Kusto.Language.Symbols.ArgumentKind.Column_Parameter0}),anyP0_Common=System.Linq.Enumerable.from(possibleParameters,Kusto.Language.Symbols.Parameter).any(function(p){return p.ArgumentKind===Kusto.Language.Symbols.ArgumentKind.Column_Parameter0_Common}),anyP0_Expression=System.Linq.Enumerable.from(possibleParameters,Kusto.Language.Symbols.Parameter).any(function(p){return p.ArgumentKind===Kusto.Language.Symbols.ArgumentKind.Expression_Parameter0_Element}),argType,da,db;if(anyP0_Expression&&fc.ArgumentList.Expressions.Count>0&&(argType=fc.ArgumentList.Expressions.getItem$1(0).Element$1.ResultType)!=null&&(da=Bridge.as(argType,Kusto.Language.Symbols.DynamicArraySymbol))!=null&&(db=Bridge.as(da.ElementType,Kusto.Language.Symbols.DynamicBagSymbol))!=null)return new Kusto.Language.Symbols.TableSymbol.$ctor3(db.Properties);if((anyP0||anyP0_Common)&&fc.ArgumentList.Expressions.Count>0&&(p0Table=Bridge.as(fc.ArgumentList.Expressions.getItem$1(0).Element$1.ResultType,Kusto.Language.Symbols.TableSymbol))!=null)return anyP0?p0Table:(rowScope=defaultRowScope||Kusto.Language.Symbols.TableSymbol.Empty,commonColumns=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor),Kusto.Language.Binding.Binder.GetCommonColumns$1(rowScope.Columns,p0Table.Columns,commonColumns),new Kusto.Language.Symbols.TableSymbol.$ctor3(commonColumns))}return defaultRowScope},HasAggregateParameters:function(fs){var $t,sig;if(System.Array.getCount(fs.Signatures,Kusto.Language.Symbols.Signature)===1)return System.Array.getItem(fs.Signatures,0,Kusto.Language.Symbols.Signature).HasAggregateParameters;else if(System.Array.getCount(fs.Signatures,Kusto.Language.Symbols.Signature)>1){$t=Bridge.getEnumerator(fs.Signatures,Kusto.Language.Symbols.Signature);try{while($t.moveNext())if(sig=$t.Current,sig.HasAggregateParameters)return!0}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}return!1},GetPossibleArgumentParameters$1:function(fc,position,possibleParameters){var $t,$t1,childIndex=Kusto.Language.Binding.Binder.GetChildIndex(fc.ArgumentList.Expressions,position),fs=Bridge.as(fc.ReferencedSymbol,Kusto.Language.Symbols.FunctionSymbol),sig=fc.ReferencedSignature,child,nex,parameter,$arguments,arg,fsig;if(sig!=null&&sig.AllowsNamedArguments&&childIndex>=0&&childIndex<=fc.ArgumentList.Expressions.Count&&(child=fc.ArgumentList.Expressions.getItem$1(childIndex).Element$1,(nex=Bridge.as(child,Kusto.Language.Syntax.SimpleNamedExpression))!=null)){parameter=sig.GetParameter(nex.Name.SimpleName);possibleParameters.add(parameter);return}$arguments=Kusto.Language.Binding.Binder.s_expressionListPool.AllocateFromPool();try{$t=Bridge.getEnumerator(fc.ArgumentList.Expressions,"GetEnumerator$1");try{while($t.moveNext())arg=$t.Current,arg.Element$1!=null&&$arguments.add(arg.Element$1)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}if(sig!=null)Kusto.Language.Binding.Binder.GetPossibleArgumentParameters(sig,position,$arguments,childIndex,possibleParameters);else if(fs!=null){$t1=Bridge.getEnumerator(fs.Signatures,Kusto.Language.Symbols.Signature);try{while($t1.moveNext())fsig=$t1.Current,Kusto.Language.Binding.Binder.GetPossibleArgumentParameters(fsig,position,$arguments,childIndex,possibleParameters)}finally{Bridge.is($t1,System.IDisposable)&&$t1.System$IDisposable$Dispose()}}}finally{Kusto.Language.Binding.Binder.s_expressionListPool.ReturnToPool($arguments)}},GetPossibleArgumentParameters:function(sig,position,$arguments,argumentIndex,possibleParameters){if($arguments.Count===0||position>$arguments.getItem($arguments.Count-1|0).End){while($arguments.Count>0&&$arguments.getItem($arguments.Count-1|0).IsMissing)$arguments.removeAt($arguments.Count-1|0);sig.GetNextPossibleParameters($arguments,possibleParameters)}else{var parameters=Kusto.Language.Binding.Binder.s_parameterListPool.AllocateFromPool();sig.GetArgumentParameters$2($arguments,parameters);argumentIndex>=0&&argumentIndex<=parameters.Count&&possibleParameters.add(parameters.getItem(argumentIndex));Kusto.Language.Binding.Binder.s_parameterListPool.ReturnToPool(parameters)}},GetChildIndex:function(parent,position){for(var child,firstMissingChildIndex=-1,i=0;i<parent.ChildCount;i=i+1|0)if(child=parent.GetChild(i),child!=null)if(position>=child.TextStart&&position<child.End)return i;else child.IsMissing&&position===child.TextStart&&(firstMissingChildIndex=i);return firstMissingChildIndex},GetDeclaredType:function(typeExpression,diagnostics,binder){var p,s,cannotBeEmpty,columns,i,n,expr;diagnostics===void 0&&(diagnostics=null);binder===void 0&&(binder=null);do{if(Bridge.is(typeExpression,Kusto.Language.Syntax.PrimitiveTypeExpression))return p=Bridge.cast(typeExpression,Kusto.Language.Syntax.PrimitiveTypeExpression),Kusto.Language.Binding.Binder.GetType(p,diagnostics);if(Bridge.is(typeExpression,Kusto.Language.Syntax.SchemaTypeExpression)){if(s=Bridge.cast(typeExpression,Kusto.Language.Syntax.SchemaTypeExpression),cannotBeEmpty=Bridge.is(typeExpression.Parent,Kusto.Language.Syntax.NameAndTypeDeclaration),s.Columns.Count===0&&cannotBeEmpty&&diagnostics!=null)diagnostics.add(Kusto.Language.DiagnosticFacts.GetColumnDeclarationExpected().WithLocation(s));else if(s.Columns.Count===1&&Bridge.is(s.Columns.getItem$1(0).Element$1,Kusto.Language.Syntax.StarExpression))return Kusto.Language.Symbols.TableSymbol.Empty;columns=Kusto.Language.Binding.Binder.s_columnListPool.AllocateFromPool();try{for(i=0,n=s.Columns.Count;i<n;i=i+1|0)if(expr=s.Columns.getItem$1(i).Element$1,!expr.IsMissing)do{if(Bridge.is(expr,Kusto.Language.Syntax.NameAndTypeDeclaration)){var nat=Bridge.cast(expr,Kusto.Language.Syntax.NameAndTypeDeclaration),declaredType=Kusto.Language.Binding.Binder.GetDeclaredType(nat.Type,diagnostics,binder),newColumn=new Kusto.Language.Symbols.ColumnSymbol(nat.Name.SimpleName,declaredType);columns.add(newColumn);binder!=null&&binder.SetSemanticInfo(nat.Name,Kusto.Language.Binding.Binder.GetSemanticInfo(newColumn));break}diagnostics!=null&&diagnostics.add(Kusto.Language.DiagnosticFacts.GetInvalidColumnDeclaration().WithLocation(expr));break}while(0);return new Kusto.Language.Symbols.TableSymbol.$ctor3(columns)}finally{Kusto.Language.Binding.Binder.s_columnListPool.ReturnToPool(columns)}}return diagnostics!=null&&diagnostics.add(Kusto.Language.DiagnosticFacts.GetInvalidTypeExpression().WithLocation(typeExpression)),Kusto.Language.Symbols.ErrorSymbol.Instance}while(0)},GetType:function(primitiveType,diagnostics){diagnostics===void 0&&(diagnostics=null);var typeName=primitiveType.Type.Text,type=Kusto.Language.Symbols.ScalarTypes.GetSymbol(typeName);return type!=null?type:(diagnostics==null||primitiveType.ContainsSyntaxDiagnostics||diagnostics.add(Kusto.Language.DiagnosticFacts.GetInvalidTypeName(typeName).WithLocation(primitiveType.Type)),Kusto.Language.Symbols.ErrorSymbol.Instance)},IsTabular:function(type){return type!=null&&type.IsTabular},IsDatabase:function(symbol){return Bridge.is(symbol,Kusto.Language.Symbols.DatabaseSymbol)},IsCluster:function(symbol){return Bridge.is(symbol,Kusto.Language.Symbols.ClusterSymbol)},GetSemanticInfo:function(referencedSymbol,diagnostics){return diagnostics===void 0&&(diagnostics=[]),Kusto.Language.Binding.Binder.CreateSemanticInfo(referencedSymbol,Bridge.cast(diagnostics,System.Collections.Generic.IEnumerable$1(Kusto.Language.Diagnostic)))},CreateSemanticInfo:function(referencedSymbol,diagnostics){diagnostics===void 0&&(diagnostics=null);switch(referencedSymbol.Kind){case Kusto.Language.Symbols.SymbolKind.Operator:case Kusto.Language.Symbols.SymbolKind.Column:case Kusto.Language.Symbols.SymbolKind.Table:case Kusto.Language.Symbols.SymbolKind.Database:case Kusto.Language.Symbols.SymbolKind.Cluster:case Kusto.Language.Symbols.SymbolKind.Function:case Kusto.Language.Symbols.SymbolKind.Pattern:case Kusto.Language.Symbols.SymbolKind.Group:case Kusto.Language.Symbols.SymbolKind.MaterializedView:case Kusto.Language.Symbols.SymbolKind.Graph:case Kusto.Language.Symbols.SymbolKind.EntityGroup:case Kusto.Language.Symbols.SymbolKind.EntityGroupElement:return new Kusto.Language.Binding.SemanticInfo.$ctor3(referencedSymbol,Kusto.Language.Binding.Binder.GetResultType(referencedSymbol),diagnostics);case Kusto.Language.Symbols.SymbolKind.Parameter:return new Kusto.Language.Binding.SemanticInfo.$ctor3(referencedSymbol,Kusto.Language.Binding.Binder.GetResultType(referencedSymbol),diagnostics,Bridge.cast(referencedSymbol,Kusto.Language.Symbols.ParameterSymbol).IsScalar,void 0);case Kusto.Language.Symbols.SymbolKind.Variable:var v=Bridge.cast(referencedSymbol,Kusto.Language.Symbols.VariableSymbol);return new Kusto.Language.Binding.SemanticInfo.$ctor3(referencedSymbol,Kusto.Language.Binding.Binder.GetResultType(referencedSymbol),diagnostics,v.IsConstant,void 0);case Kusto.Language.Symbols.SymbolKind.Primitive:case Kusto.Language.Symbols.SymbolKind.Array:case Kusto.Language.Symbols.SymbolKind.Bag:case Kusto.Language.Symbols.SymbolKind.Tuple:return new Kusto.Language.Binding.SemanticInfo.$ctor5(Bridge.cast(referencedSymbol,Kusto.Language.Symbols.TypeSymbol),diagnostics);default:return new Kusto.Language.Binding.SemanticInfo.$ctor5(Kusto.Language.Symbols.ErrorSymbol.Instance,diagnostics)}},SymbolsAssignable$1:function(targetTypes,sourceType,allowedConversion){return allowedConversion===void 0&&(allowedConversion=0),sourceType.IsAssignableToAny(targetTypes,allowedConversion)},SymbolsAssignable:function(targetType,sourceType,allowedConversion){return allowedConversion===void 0&&(allowedConversion=0),sourceType.IsAssignableTo(targetType,allowedConversion)},GetQueryOperatorParameter:function(name,parameters){var $t,p;$t=Bridge.getEnumerator(parameters,Kusto.Language.QueryOperatorParameter);try{while($t.moveNext())if(p=$t.Current,Bridge.referenceEquals(p.Name,name)||System.Array.getCount(p.Aliases,System.String)>0&&System.Linq.Enumerable.from(p.Aliases,System.String).contains(name))return p}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return null},Contains:function(values,value,caseSensitive){for(var i=0,n=System.Array.getCount(values,System.Object);i<n;i=i+1|0)if(Kusto.Language.Utils.ValueComparer.AreEquivalent(System.Array.getItem(values,i,System.Object),value,caseSensitive))return!0;return!1},IsConstantValue:function(expression,values,caseSensitive){return expression.IsConstant?Kusto.Language.Binding.Binder.Contains(values,expression.ConstantValue,caseSensitive):!1},ArgumentsHaveErrorsOrUnknown:function(argumentTypes){for(var type,i=0;i<System.Array.getCount(argumentTypes,Kusto.Language.Symbols.TypeSymbol);i=i+1|0)if(type=System.Array.getItem(argumentTypes,i,Kusto.Language.Symbols.TypeSymbol),type.IsError||Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Unknown))return!0;return!1},IsNamedArgument:function(argument){return Bridge.is(argument,Kusto.Language.Syntax.NamedExpression)},GetNamedArgumentNameNode:function(argument){var sn,cn;do return Bridge.is(argument,Kusto.Language.Syntax.SimpleNamedExpression)?(sn=Bridge.cast(argument,Kusto.Language.Syntax.SimpleNamedExpression),sn.Name):Bridge.is(argument,Kusto.Language.Syntax.CompoundNamedExpression)?(cn=Bridge.cast(argument,Kusto.Language.Syntax.CompoundNamedExpression),cn.Names):null;while(0)},CheckArgumentCount:function(expressions,expectedCount,diagnostics){return expressions.Count===expectedCount?!0:(diagnostics.add(Kusto.Language.DiagnosticFacts.GetArgumentCountExpected(expectedCount).WithLocation(expressions)),!1)},IsFunctionCallName:function(name){var fn;return(fn=Bridge.as(name.Parent,Kusto.Language.Syntax.FunctionCallExpression))!=null&&Bridge.referenceEquals(fn.Name,name)},IsInsideCreateFunctionCommand:function(location){var functionDeclaration,functionBody;for(location=location.GetOriginalNode();;){if(functionDeclaration=location.GetFirstAncestor(Kusto.Language.Syntax.FunctionDeclaration),functionDeclaration!=null){if(Bridge.is(functionDeclaration.Parent,Kusto.Language.Syntax.CustomNode))return!0;location=functionDeclaration;continue}if(functionBody=location.GetFirstAncestor(Kusto.Language.Syntax.FunctionBody),functionBody!=null){if(Bridge.is(functionBody.Parent,Kusto.Language.Syntax.CustomNode))return!0;location=functionBody;continue}return!1}},IsInsideControlCommand:function(location){return location.GetFirstAncestor(Kusto.Language.Syntax.CustomNode)!=null},IsInsideControlCommandProper:function(location){return Kusto.Language.Binding.Binder.IsInsideControlCommand(location)&&!Kusto.Language.Binding.Binder.IsInsideCreateFunctionCommand(location)&&!Kusto.Language.Binding.Binder.IsInsideControlCommandInputQuery(location)},IsInsideControlCommandInputQuery:function(location){return location.GetFirstAncestor(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)),function(s){return Bridge.is(s.Parent,Kusto.Language.Syntax.CustomNode)})!=null},IsInvocableFunctionName:function(location){return!Kusto.Language.Binding.Binder.IsInsideControlCommandProper(location)},IsPossibleInvocableFunctionWithoutArgumentList:function(location){return!Kusto.Language.Binding.Binder.IsFunctionCallName(location)&&Kusto.Language.Binding.Binder.IsInvocableFunctionName(location)},IsEvaluateFunctionName:function(name){var fn;return(fn=Bridge.as(name.Parent,Kusto.Language.Syntax.FunctionCallExpression))!=null&&Bridge.is(fn.Parent,Kusto.Language.Syntax.EvaluateOperator)},IsPassThrough:function(group){return System.Linq.Enumerable.from(group.Members,Kusto.Language.Symbols.Symbol).any(function(m){return Bridge.is(m,Kusto.Language.Symbols.DatabaseSymbol)||Bridge.is(m,Kusto.Language.Symbols.ClusterSymbol)})},MakeDistinct:function(list){var $t,hset,newList,item;if(list.Count>1){hset=Kusto.Language.Binding.Binder.s_symbolHashSetPool.AllocateFromPool();newList=Kusto.Language.Binding.Binder.s_symbolListPool.AllocateFromPool();$t=Bridge.getEnumerator(list);try{while($t.moveNext())item=$t.Current,hset.contains(item)||(hset.add(item),newList.add(item))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}list.clear();list.AddRange(newList);Kusto.Language.Binding.Binder.s_symbolListPool.ReturnToPool(newList);Kusto.Language.Binding.Binder.s_symbolHashSetPool.ReturnToPool(hset)}},IsPossibleInternalFunction:function(name){return System.String.startsWith(name,"__")},RemoveFunctionsThatCannotBeInvokedWithZeroArgs:function(list){for(var fn,i=list.Count-1|0;i>=0;i=i-1|0)(fn=Bridge.as(list.getItem(i),Kusto.Language.Symbols.FunctionSymbol))!=null&&fn.MinArgumentCount>0&&list.removeAt(i)},GetWildcardSymbols:function(pattern,symbols,matchingSymbols){var $t,symbol;$t=Bridge.getEnumerator(symbols,Kusto.Language.Symbols.Symbol);try{while($t.moveNext())symbol=$t.Current,Kusto.Language.KustoFacts.Matches(pattern,symbol.Name)&&matchingSymbols.add(symbol)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}},IsInTabularContext:function(element){var fc,pe,pt,g,hint;for((fc=Bridge.as(element.Parent,Kusto.Language.Syntax.FunctionCallExpression))!=null&&Bridge.referenceEquals(fc.Name,element)&&(element=element.Parent);Bridge.is(element.Parent,Kusto.Language.Syntax.ParenthesizedExpression)||Bridge.is(element.Parent,Kusto.Language.Syntax.SyntaxList)||Bridge.is(element.Parent,Kusto.Language.Syntax.SeparatedElement);)element=element.Parent;return element.Parent!=null&&((pe=Bridge.as(element.Parent,Kusto.Language.Syntax.PipeExpression))!=null&&Bridge.referenceEquals(pe.Expression,element)||(pt=Bridge.as(element.Parent,Kusto.Language.Syntax.PathExpression))!=null&&Bridge.referenceEquals(pt.Selector,element)&&(Bridge.is(pt.Expression.ResultType,Kusto.Language.Symbols.DatabaseSymbol)||(g=Bridge.as(pt.Expression.ResultType,Kusto.Language.Symbols.GroupSymbol))!=null&&System.Linq.Enumerable.from(g.Members,Kusto.Language.Symbols.Symbol).any(function(m){return Bridge.is(m,Kusto.Language.Symbols.DatabaseSymbol)}))||(hint=element.Parent.GetCompletionHint(element.IndexInParent),hint===Kusto.Language.Editor.CompletionHint.Table||hint===Kusto.Language.Editor.CompletionHint.Tabular||hint===Kusto.Language.Editor.CompletionHint.MaterializedView||hint===Kusto.Language.Editor.CompletionHint.ExternalTable))?!0:!1},AllAreConstant:function(expressions){for(var i=0;i<System.Array.getCount(expressions,Kusto.Language.Syntax.Expression);i=i+1|0)if(!Kusto.Language.Binding.Binder.GetIsConstant(System.Array.getItem(expressions,i,Kusto.Language.Syntax.Expression)))return!1;return!0},GetOperatorKind:function(kind){switch(kind){case Kusto.Language.Syntax.SyntaxKind.AddExpression:return Kusto.Language.Symbols.OperatorKind.Add;case Kusto.Language.Syntax.SyntaxKind.SubtractExpression:return Kusto.Language.Symbols.OperatorKind.Subtract;case Kusto.Language.Syntax.SyntaxKind.MultiplyExpression:return Kusto.Language.Symbols.OperatorKind.Multiply;case Kusto.Language.Syntax.SyntaxKind.DivideExpression:return Kusto.Language.Symbols.OperatorKind.Divide;case Kusto.Language.Syntax.SyntaxKind.ModuloExpression:return Kusto.Language.Symbols.OperatorKind.Modulo;case Kusto.Language.Syntax.SyntaxKind.UnaryMinusExpression:return Kusto.Language.Symbols.OperatorKind.UnaryMinus;case Kusto.Language.Syntax.SyntaxKind.UnaryPlusExpression:return Kusto.Language.Symbols.OperatorKind.UnaryPlus;case Kusto.Language.Syntax.SyntaxKind.EqualExpression:return Kusto.Language.Symbols.OperatorKind.Equal;case Kusto.Language.Syntax.SyntaxKind.NotEqualExpression:return Kusto.Language.Symbols.OperatorKind.NotEqual;case Kusto.Language.Syntax.SyntaxKind.LessThanExpression:return Kusto.Language.Symbols.OperatorKind.LessThan;case Kusto.Language.Syntax.SyntaxKind.LessThanOrEqualExpression:return Kusto.Language.Symbols.OperatorKind.LessThanOrEqual;case Kusto.Language.Syntax.SyntaxKind.GreaterThanExpression:return Kusto.Language.Symbols.OperatorKind.GreaterThan;case Kusto.Language.Syntax.SyntaxKind.GreaterThanOrEqualExpression:return Kusto.Language.Symbols.OperatorKind.GreaterThanOrEqual;case Kusto.Language.Syntax.SyntaxKind.EqualTildeExpression:return Kusto.Language.Symbols.OperatorKind.EqualTilde;case Kusto.Language.Syntax.SyntaxKind.BangTildeExpression:return Kusto.Language.Symbols.OperatorKind.BangTilde;case Kusto.Language.Syntax.SyntaxKind.HasExpression:return Kusto.Language.Symbols.OperatorKind.Has;case Kusto.Language.Syntax.SyntaxKind.HasCsExpression:return Kusto.Language.Symbols.OperatorKind.HasCs;case Kusto.Language.Syntax.SyntaxKind.NotHasExpression:return Kusto.Language.Symbols.OperatorKind.NotHas;case Kusto.Language.Syntax.SyntaxKind.NotHasCsExpression:return Kusto.Language.Symbols.OperatorKind.NotHasCs;case Kusto.Language.Syntax.SyntaxKind.HasPrefixExpression:return Kusto.Language.Symbols.OperatorKind.HasPrefix;case Kusto.Language.Syntax.SyntaxKind.HasPrefixCsExpression:return Kusto.Language.Symbols.OperatorKind.HasPrefixCs;case Kusto.Language.Syntax.SyntaxKind.NotHasPrefixExpression:return Kusto.Language.Symbols.OperatorKind.NotHasPrefix;case Kusto.Language.Syntax.SyntaxKind.NotHasPrefixCsExpression:return Kusto.Language.Symbols.OperatorKind.NotHasPrefixCs;case Kusto.Language.Syntax.SyntaxKind.HasSuffixExpression:return Kusto.Language.Symbols.OperatorKind.HasSuffix;case Kusto.Language.Syntax.SyntaxKind.HasSuffixCsExpression:return Kusto.Language.Symbols.OperatorKind.HasSuffixCs;case Kusto.Language.Syntax.SyntaxKind.NotHasSuffixExpression:return Kusto.Language.Symbols.OperatorKind.NotHasSuffix;case Kusto.Language.Syntax.SyntaxKind.NotHasSuffixCsExpression:return Kusto.Language.Symbols.OperatorKind.NotHasSuffixCs;case Kusto.Language.Syntax.SyntaxKind.LikeExpression:return Kusto.Language.Symbols.OperatorKind.Like;case Kusto.Language.Syntax.SyntaxKind.LikeCsExpression:return Kusto.Language.Symbols.OperatorKind.LikeCs;case Kusto.Language.Syntax.SyntaxKind.NotLikeExpression:return Kusto.Language.Symbols.OperatorKind.NotLike;case Kusto.Language.Syntax.SyntaxKind.NotLikeCsExpression:return Kusto.Language.Symbols.OperatorKind.NotLikeCs;case Kusto.Language.Syntax.SyntaxKind.ContainsExpression:return Kusto.Language.Symbols.OperatorKind.Contains;case Kusto.Language.Syntax.SyntaxKind.ContainsCsExpression:return Kusto.Language.Symbols.OperatorKind.ContainsCs;case Kusto.Language.Syntax.SyntaxKind.NotContainsExpression:return Kusto.Language.Symbols.OperatorKind.NotContains;case Kusto.Language.Syntax.SyntaxKind.NotContainsCsExpression:return Kusto.Language.Symbols.OperatorKind.NotContainsCs;case Kusto.Language.Syntax.SyntaxKind.StartsWithExpression:return Kusto.Language.Symbols.OperatorKind.StartsWith;case Kusto.Language.Syntax.SyntaxKind.StartsWithCsExpression:return Kusto.Language.Symbols.OperatorKind.StartsWithCs;case Kusto.Language.Syntax.SyntaxKind.NotStartsWithExpression:return Kusto.Language.Symbols.OperatorKind.NotStartsWith;case Kusto.Language.Syntax.SyntaxKind.NotStartsWithCsExpression:return Kusto.Language.Symbols.OperatorKind.NotStartsWithCs;case Kusto.Language.Syntax.SyntaxKind.EndsWithExpression:return Kusto.Language.Symbols.OperatorKind.EndsWith;case Kusto.Language.Syntax.SyntaxKind.EndsWithCsExpression:return Kusto.Language.Symbols.OperatorKind.EndsWithCs;case Kusto.Language.Syntax.SyntaxKind.NotEndsWithExpression:return Kusto.Language.Symbols.OperatorKind.NotEndsWith;case Kusto.Language.Syntax.SyntaxKind.NotEndsWithCsExpression:return Kusto.Language.Symbols.OperatorKind.NotEndsWithCs;case Kusto.Language.Syntax.SyntaxKind.MatchesRegexExpression:return Kusto.Language.Symbols.OperatorKind.MatchRegex;case Kusto.Language.Syntax.SyntaxKind.InExpression:return Kusto.Language.Symbols.OperatorKind.In;case Kusto.Language.Syntax.SyntaxKind.InCsExpression:return Kusto.Language.Symbols.OperatorKind.InCs;case Kusto.Language.Syntax.SyntaxKind.NotInExpression:return Kusto.Language.Symbols.OperatorKind.NotIn;case Kusto.Language.Syntax.SyntaxKind.NotInCsExpression:return Kusto.Language.Symbols.OperatorKind.NotInCs;case Kusto.Language.Syntax.SyntaxKind.BetweenExpression:return Kusto.Language.Symbols.OperatorKind.Between;case Kusto.Language.Syntax.SyntaxKind.NotBetweenExpression:return Kusto.Language.Symbols.OperatorKind.NotBetween;case Kusto.Language.Syntax.SyntaxKind.AndExpression:return Kusto.Language.Symbols.OperatorKind.And;case Kusto.Language.Syntax.SyntaxKind.OrExpression:return Kusto.Language.Symbols.OperatorKind.Or;case Kusto.Language.Syntax.SyntaxKind.SearchExpression:return Kusto.Language.Symbols.OperatorKind.Search;case Kusto.Language.Syntax.SyntaxKind.HasAnyExpression:return Kusto.Language.Symbols.OperatorKind.HasAny;case Kusto.Language.Syntax.SyntaxKind.HasAllExpression:return Kusto.Language.Symbols.OperatorKind.HasAll;default:return Kusto.Language.Symbols.OperatorKind.None}},GetColumnOrdering:function(ordering){if(ordering==null)return Kusto.Language.Binding.Binder.ColumnOrdering.None;switch(ordering.AscOrDescKeyword.Kind){case Kusto.Language.Syntax.SyntaxKind.AscKeyword:return Kusto.Language.Binding.Binder.ColumnOrdering.Ascending;case Kusto.Language.Syntax.SyntaxKind.DescKeyword:return Kusto.Language.Binding.Binder.ColumnOrdering.Descending;case Kusto.Language.Syntax.SyntaxKind.GrannyAscKeyword:return Kusto.Language.Binding.Binder.ColumnOrdering.GrannyAscending;case Kusto.Language.Syntax.SyntaxKind.GrannyDescKeyword:return Kusto.Language.Binding.Binder.ColumnOrdering.GrannyDescending;default:return Kusto.Language.Binding.Binder.ColumnOrdering.None}},OrderColumns:function(columns,ordering){switch(Kusto.Language.Binding.Binder.GetColumnOrdering(ordering)){case Kusto.Language.Binding.Binder.ColumnOrdering.Ascending:return System.Linq.Enumerable.from(columns,Kusto.Language.Symbols.ColumnSymbol).orderBy(function(c){return c.Name},System.StringComparer.OrdinalIgnoreCase);case Kusto.Language.Binding.Binder.ColumnOrdering.Descending:return System.Linq.Enumerable.from(columns,Kusto.Language.Symbols.ColumnSymbol).orderByDescending(function(c){return c.Name},System.StringComparer.OrdinalIgnoreCase);case Kusto.Language.Binding.Binder.ColumnOrdering.GrannyAscending:return System.Linq.Enumerable.from(columns,Kusto.Language.Symbols.ColumnSymbol).orderBy(function(c){return c.Name},Kusto.Language.Utils.StringAndNumberComparer.OrdinalIgnoreCase);case Kusto.Language.Binding.Binder.ColumnOrdering.GrannyDescending:return System.Linq.Enumerable.from(columns,Kusto.Language.Symbols.ColumnSymbol).orderByDescending(function(c){return c.Name},Kusto.Language.Utils.StringAndNumberComparer.OrdinalIgnoreCase);case Kusto.Language.Binding.Binder.ColumnOrdering.None:default:return columns}},AddProjectionColumns:function(builder,columns,doNotRepeat){var $t,c;$t=Bridge.getEnumerator(columns,Kusto.Language.Symbols.ColumnSymbol);try{while($t.moveNext())c=$t.Current,builder.Add(c,void 0,!1,doNotRepeat)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}},GetOrDeclareColumnForExpression:function(expression,name,type,defaultName){var $t,col;return name===void 0&&(name=null),type===void 0&&(type=null),defaultName===void 0&&(defaultName=null),name=($t=name,$t!=null?$t:Kusto.Language.Binding.Binder.GetExpressionResultName(expression,defaultName)),(col=Kusto.Language.Binding.Binder.GetResultColumn(expression))!=null?name==null||Bridge.referenceEquals(col.Name,name)?col:new Kusto.Language.Symbols.ColumnSymbol(name,type||col.Type,void 0,System.Array.init([col],Kusto.Language.Symbols.ColumnSymbol),expression,void 0):(type=type||Kusto.Language.Binding.Binder.GetResultTypeOrError(expression),new Kusto.Language.Symbols.ColumnSymbol(name,type,void 0,void 0,expression,void 0))},GetResultColumn:function(expr){var p,c,fc,ac;return expr==null?null:(p=Bridge.as(expr,Kusto.Language.Syntax.ParenthesizedExpression))!=null?Kusto.Language.Binding.Binder.GetResultColumn(p.Expression):(c=Bridge.as(expr.ReferencedSymbol,Kusto.Language.Symbols.ColumnSymbol))!=null?c:(fc=Bridge.as(expr,Kusto.Language.Syntax.FunctionCallExpression))!=null&&Kusto.Language.Binding.Binder.IsConversionFunction$1(fc)&&fc.ArgumentList.Expressions.Count===1&&(ac=Bridge.as(fc.ArgumentList.Expressions.getItem$1(0).Element$1.ReferencedSymbol,Kusto.Language.Symbols.ColumnSymbol))!=null&&Bridge.referenceEquals(fc.ResultType,ac.Type)?ac:null},IsConversionFunction$1:function(expr){var fs;return(fs=Bridge.as(expr.ReferencedSymbol,Kusto.Language.Symbols.FunctionSymbol))!=null&&Kusto.Language.Binding.Binder.IsConversionFunction(fs)},IsConversionFunction:function(fn){return Bridge.referenceEquals(fn,Kusto.Language.Functions.ToBool)||Bridge.referenceEquals(fn,Kusto.Language.Functions.ToBool)||Bridge.referenceEquals(fn,Kusto.Language.Functions.ToDateTime)||Bridge.referenceEquals(fn,Kusto.Language.Functions.ToDecimal)||Bridge.referenceEquals(fn,Kusto.Language.Functions.ToDouble)||Bridge.referenceEquals(fn,Kusto.Language.Functions.ToDynamic_)||Bridge.referenceEquals(fn,Kusto.Language.Functions.ToGuid)||Bridge.referenceEquals(fn,Kusto.Language.Functions.ToInt)||Bridge.referenceEquals(fn,Kusto.Language.Functions.ToLong)||Bridge.referenceEquals(fn,Kusto.Language.Functions.ToReal)||Bridge.referenceEquals(fn,Kusto.Language.Functions.ToString)||Bridge.referenceEquals(fn,Kusto.Language.Functions.ToTime)||Bridge.referenceEquals(fn,Kusto.Language.Functions.ToTimespan)},DeclareColumnName:function(declaredNames,newName,diagnostics,location){return declaredNames.contains(newName)?(diagnostics!=null?diagnostics.add(Kusto.Language.DiagnosticFacts.GetDuplicateColumnDeclaration(newName).WithLocation(location)):null,!1):(declaredNames.add(newName),!0)},GetFunctionResultName:function(fc,defaultName,row){var $t,name,name1,name2,_discard1;defaultName===void 0&&(defaultName="");row===void 0&&(row=null);var fs=Bridge.as(fc.ReferencedSymbol,Kusto.Language.Symbols.FunctionSymbol),kind=($t=fs!=null?fs.ResultNameKind:null,$t!=null?$t:Kusto.Language.Symbols.ResultNameKind.None),prefix=fs!=null?fs.ResultNamePrefix:null;return kind===Kusto.Language.Symbols.ResultNameKind.NameAndFirstArgument?(prefix=fs.Name,kind=Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument):kind===Kusto.Language.Symbols.ResultNameKind.NameAndOnlyArgument&&(prefix=fs.Name,kind=Kusto.Language.Symbols.ResultNameKind.PrefixAndOnlyArgument),kind===Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument?fc.ArgumentList.Expressions.Count>0?(name=Kusto.Language.Binding.Binder.GetExpressionResultName(fc.ArgumentList.Expressions.getItem$1(0).Element$1,defaultName),prefix!=null?(prefix||"")+"_"+(name||""):name):prefix!=null?(prefix||"")+"_":null:kind===Kusto.Language.Symbols.ResultNameKind.PrefixAndOnlyArgument&&fc.ArgumentList.Expressions.Count===1?(name1=Kusto.Language.Binding.Binder.GetExpressionResultName(fc.ArgumentList.Expressions.getItem$1(0).Element$1,defaultName),prefix!=null?(prefix||"")+"_"+(name1||""):name1):kind===Kusto.Language.Symbols.ResultNameKind.FirstArgumentValueIfColumn&&fc.ArgumentList.Expressions.Count>0&&(name2=Bridge.as(fc.ArgumentList.Expressions.getItem$1(0).Element$1.ConstantValue,System.String))!=null?(_discard1={},row!=null&&row.TryGetColumn(name2,_discard1)?name2:defaultName):kind===Kusto.Language.Symbols.ResultNameKind.FirstArgument?fc.ArgumentList.Expressions.Count>0?Kusto.Language.Binding.Binder.GetExpressionResultName(fc.ArgumentList.Expressions.getItem$1(0).Element$1,defaultName):null:kind===Kusto.Language.Symbols.ResultNameKind.PrefixOnly&&prefix!=null?prefix:kind===Kusto.Language.Symbols.ResultNameKind.OnlyArgument&&fc.ArgumentList.Expressions.Count===1?Kusto.Language.Binding.Binder.GetExpressionResultName(fc.ArgumentList.Expressions.getItem$1(0).Element$1,defaultName):defaultName},GetExpressionResultName:function(expr,defaultName,row){var p,n,be,bet,p1,left,right,e,left1,right1,o,s,f;defaultName===void 0&&(defaultName="");row===void 0&&(row=null);do return Bridge.is(expr,Kusto.Language.Syntax.ParenthesizedExpression)?(p=Bridge.cast(expr,Kusto.Language.Syntax.ParenthesizedExpression),Kusto.Language.Binding.Binder.GetExpressionResultName(p.Expression,defaultName,row)):Bridge.is(expr,Kusto.Language.Syntax.NameReference)?(n=Bridge.cast(expr,Kusto.Language.Syntax.NameReference),n.SimpleName):Bridge.is(expr,Kusto.Language.Syntax.BracketedExpression)?(be=Bridge.cast(expr,Kusto.Language.Syntax.BracketedExpression),be.Expression.IsLiteral&&(bet=be.Expression.ResultType)!=null&&(Bridge.referenceEquals(bet,Kusto.Language.Symbols.ScalarTypes.String)||Bridge.referenceEquals(bet,Kusto.Language.Symbols.ScalarTypes.Long)||Bridge.referenceEquals(bet,Kusto.Language.Symbols.ScalarTypes.Int)))?Bridge.toString(be.Expression.LiteralValue):defaultName:Bridge.is(expr,Kusto.Language.Syntax.PathExpression)?(p1=Bridge.cast(expr,Kusto.Language.Syntax.PathExpression),Kusto.Language.Symbols.TypeFacts.IsDynamicArrayOrBag(p1.Expression.ResultType)||Bridge.referenceEquals(p1.Expression.ResultType,Kusto.Language.Symbols.ScalarTypes.Unknown)?(left=Kusto.Language.Binding.Binder.GetExpressionResultName(p1.Expression,null),right=Kusto.Language.Binding.Binder.GetExpressionResultName(p1.Selector,null),System.String.isNullOrWhiteSpace(left)?right:System.String.format("{0}_{1}",left,right)):Kusto.Language.Binding.Binder.GetExpressionResultName(p1.Selector,defaultName)):Bridge.is(expr,Kusto.Language.Syntax.ElementExpression)?(e=Bridge.cast(expr,Kusto.Language.Syntax.ElementExpression),Kusto.Language.Symbols.TypeFacts.IsDynamicArrayOrBag(e.Expression.ResultType)||Bridge.referenceEquals(e.Expression.ResultType,Kusto.Language.Symbols.ScalarTypes.Unknown)?(left1=Kusto.Language.Binding.Binder.GetExpressionResultName(e.Expression,null),right1=Kusto.Language.Binding.Binder.GetExpressionResultName(e.Selector,null),System.String.isNullOrWhiteSpace(left1)?right1:System.String.format("{0}_{1}",left1,right1)):Kusto.Language.Binding.Binder.GetExpressionResultName(e.Selector,defaultName)):Bridge.is(expr,Kusto.Language.Syntax.OrderedExpression)?(o=Bridge.cast(expr,Kusto.Language.Syntax.OrderedExpression),Kusto.Language.Binding.Binder.GetExpressionResultName(o.Expression,defaultName)):Bridge.is(expr,Kusto.Language.Syntax.SimpleNamedExpression)?(s=Bridge.cast(expr,Kusto.Language.Syntax.SimpleNamedExpression),s.Name.SimpleName):Bridge.is(expr,Kusto.Language.Syntax.FunctionCallExpression)?(f=Bridge.cast(expr,Kusto.Language.Syntax.FunctionCallExpression),Kusto.Language.Binding.Binder.GetFunctionResultName(f,defaultName,row)):defaultName;while(0)},GetExpressionDeclaredName:function(expr){var n,o;do return Bridge.is(expr,Kusto.Language.Syntax.SimpleNamedExpression)?(n=Bridge.cast(expr,Kusto.Language.Syntax.SimpleNamedExpression),n.Name.SimpleName):Bridge.is(expr,Kusto.Language.Syntax.OrderedExpression)?(o=Bridge.cast(expr,Kusto.Language.Syntax.OrderedExpression),Kusto.Language.Binding.Binder.GetExpressionDeclaredName(o.Expression)):null;while(0)},GetUnderlyingExpression:function(expression){var n,o;do return Bridge.is(expression,Kusto.Language.Syntax.SimpleNamedExpression)?(n=Bridge.cast(expression,Kusto.Language.Syntax.SimpleNamedExpression),Kusto.Language.Binding.Binder.GetUnderlyingExpression(n.Expression)):Bridge.is(expression,Kusto.Language.Syntax.OrderedExpression)?(o=Bridge.cast(expression,Kusto.Language.Syntax.OrderedExpression),Kusto.Language.Binding.Binder.GetUnderlyingExpression(o.Expression)):expression;while(0)},GetGraphExpressionResultName:function(expression){var patternElementExpression,selector,pathExpression,elementExpression,left,right;if(expression==null)return"";if((pathExpression=Bridge.as(expression,Kusto.Language.Syntax.PathExpression))!=null)patternElementExpression=pathExpression.Expression,selector=pathExpression.Selector;else if((elementExpression=Bridge.as(expression,Kusto.Language.Syntax.ElementExpression))!=null)patternElementExpression=elementExpression.Expression,selector=elementExpression.Selector;else return Kusto.Language.Binding.Binder.GetExpressionResultName(expression);return left=patternElementExpression.Kind===Kusto.Language.Syntax.SyntaxKind.ElementExpression||patternElementExpression.Kind===Kusto.Language.Syntax.SyntaxKind.PathExpression?Kusto.Language.Binding.Binder.GetGraphExpressionResultName(patternElementExpression):Kusto.Language.Binding.Binder.GetExpressionResultName(patternElementExpression),right=Kusto.Language.Binding.Binder.GetExpressionResultName(selector),System.String.isNullOrWhiteSpace(left)?right:System.String.format("{0}_{1}",left,right)},UnifyColumnsWithSameNameAndType:function(columns){var $t,uniqueNames=Kusto.Language.Binding.Binder.s_uniqueNameTablePool.AllocateFromPool(),newColumns=Kusto.Language.Binding.Binder.s_columnListPool.AllocateFromPool(),map,i,col,types;try{for(map=new Kusto.Language.Binding.ColumnMap.$ctor1(columns),i=0;i<columns.Count;i=i+1|0){if(col=columns.getItem(i),map.HasColumns(col.Name))if(map.HasMultipleTypes(col.Name)){types=map.GetTypes(col.Name);$t=Bridge.getEnumerator(types,Kusto.Language.Symbols.TypeSymbol);try{while($t.moveNext()){var type=$t.Current,sameTypeColumns=map.GetColumns$1(col.Name,type),newType=Kusto.Language.Symbols.TypeFacts.GetCommonColumnType(sameTypeColumns,Kusto.Language.Symbols.Conversion.None)||type,suggestedName=(col.Name||"")+"_"+(newType.Name||""),newName=uniqueNames.GetOrAddName(suggestedName),newCol=new Kusto.Language.Symbols.ColumnSymbol(newName,newType,void 0,sameTypeColumns,void 0,void 0);newColumns.add(newCol)}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}else if(map.HasMultipleColumns(col.Name,col.Type)){var cols=map.GetColumns$1(col.Name,col.Type),newType1=Kusto.Language.Symbols.TypeFacts.GetCommonColumnType(cols,Kusto.Language.Symbols.Conversion.None)||col.Type,newCol1=new Kusto.Language.Symbols.ColumnSymbol(col.Name,newType1,void 0,cols,void 0,void 0);newColumns.add(Kusto.Language.Binding.Binder.GetUniqueColumn(newCol1,uniqueNames))}else newColumns.add(Kusto.Language.Binding.Binder.GetUniqueColumn(col,uniqueNames));map.Remove(col.Name)}columns.clear();columns.AddRange(newColumns)}finally{Kusto.Language.Binding.Binder.s_uniqueNameTablePool.ReturnToPool(uniqueNames);Kusto.Language.Binding.Binder.s_columnListPool.ReturnToPool(newColumns)}},UnifyColumnsWithSameName:function(columns){var $t,newColumns=Kusto.Language.Binding.Binder.s_columnListPool.AllocateFromPool(),map,i,col,originalCols1,newCol1;try{for(map=new Kusto.Language.Binding.ColumnMap.$ctor1(columns),i=0;i<columns.Count;i=i+1|0){if(col=columns.getItem(i),map.HasColumns(col.Name))if(map.HasMultipleTypes(col.Name)){var types=map.GetTypes(col.Name),commonType=Kusto.Language.Symbols.TypeFacts.GetCommonScalarType$1(types)||Kusto.Language.Symbols.ScalarTypes.Dynamic,originalCols=($t=Kusto.Language.Symbols.ColumnSymbol,System.Linq.Enumerable.from(map.GetColumns(col.Name),$t).toList($t)),newCol=new Kusto.Language.Symbols.ColumnSymbol(col.Name,commonType,void 0,originalCols,void 0,void 0);newColumns.add(newCol)}else map.HasMultipleColumns(col.Name,col.Type)?(originalCols1=map.GetColumns$1(col.Name,col.Type),newCol1=new Kusto.Language.Symbols.ColumnSymbol(col.Name,col.Type,void 0,originalCols1,void 0,void 0),newColumns.add(newCol1)):newColumns.add(col);map.Remove(col.Name)}columns.clear();columns.AddRange(newColumns)}finally{Kusto.Language.Binding.Binder.s_columnListPool.ReturnToPool(newColumns)}},MakeColumnNamesUnique:function(columns){var nameToIndexMap=Kusto.Language.Binding.Binder.s_stringToIntMapPool.AllocateFromPool(),nameTable=Kusto.Language.Binding.Binder.s_uniqueNameTablePool.AllocateFromPool(),newColumns=Kusto.Language.Binding.Binder.s_columnListPool.AllocateFromPool(),index,col,index1,col1,firstIndex;try{for(index=0;index<columns.Count;index=index+1|0)col=columns.getItem(index),nameToIndexMap.containsKey(col.Name)||nameToIndexMap.add(col.Name,index);for(nameTable.AddNames(nameToIndexMap.Keys),index1=0;index1<columns.Count;index1=index1+1|0)col1=columns.getItem(index1),firstIndex={},nameToIndexMap.tryGetValue(col1.Name,firstIndex)&&index1!==firstIndex.v?newColumns.add(Kusto.Language.Binding.Binder.GetUniqueColumn(col1,nameTable)):newColumns.add(col1);columns.clear();columns.AddRange(newColumns)}finally{Kusto.Language.Binding.Binder.s_uniqueNameTablePool.ReturnToPool(nameTable);Kusto.Language.Binding.Binder.s_columnListPool.ReturnToPool(newColumns);Kusto.Language.Binding.Binder.s_stringToIntMapPool.ReturnToPool(nameToIndexMap)}},GetCommonColumns$2:function(columnsA,columnsB,result){var $t,columns=Kusto.Language.Binding.Binder.s_columnListPool.AllocateFromPool(),c;try{Kusto.Language.Binding.Binder.GetCommonColumns$1(columnsA,columnsB,columns);$t=Bridge.getEnumerator(columns);try{while($t.moveNext())c=$t.Current,result.add(c)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}finally{Kusto.Language.Binding.Binder.s_columnListPool.ReturnToPool(columns)}},GetCommonColumns$1:function(columnsA,columnsB,result){var $t,$t1,$t2,$t3,names=Kusto.Language.Binding.Binder.s_stringSetPool.AllocateFromPool(),c,c1,c2,c3;try{$t=Bridge.getEnumerator(columnsB,Kusto.Language.Symbols.ColumnSymbol);try{while($t.moveNext())c=$t.Current,names.add(c.Name)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}$t1=Bridge.getEnumerator(columnsA,Kusto.Language.Symbols.ColumnSymbol);try{while($t1.moveNext())c1=$t1.Current,names.contains(c1.Name)&&result.add(c1)}finally{Bridge.is($t1,System.IDisposable)&&$t1.System$IDisposable$Dispose()}names.clear();$t2=Bridge.getEnumerator(columnsA,Kusto.Language.Symbols.ColumnSymbol);try{while($t2.moveNext())c2=$t2.Current,names.add(c2.Name)}finally{Bridge.is($t2,System.IDisposable)&&$t2.System$IDisposable$Dispose()}$t3=Bridge.getEnumerator(columnsB,Kusto.Language.Symbols.ColumnSymbol);try{while($t3.moveNext())c3=$t3.Current,names.contains(c3.Name)&&result.add(c3)}finally{Bridge.is($t3,System.IDisposable)&&$t3.System$IDisposable$Dispose()}Kusto.Language.Binding.Binder.UnifyColumnsWithSameName(result)}finally{Kusto.Language.Binding.Binder.s_stringSetPool.ReturnToPool(names)}},GetCommonColumns:function(tables,common){var columnsA,columnsC,i;if(common.clear(),System.Array.getCount(tables,Kusto.Language.Symbols.TableSymbol)===1)common.AddRange(System.Array.getItem(tables,0,Kusto.Language.Symbols.TableSymbol).Columns);else if(System.Array.getCount(tables,Kusto.Language.Symbols.TableSymbol)===2)Kusto.Language.Binding.Binder.GetCommonColumns$1(System.Array.getItem(tables,0,Kusto.Language.Symbols.TableSymbol).Columns,System.Array.getItem(tables,1,Kusto.Language.Symbols.TableSymbol).Columns,common);else if(System.Array.getCount(tables,Kusto.Language.Symbols.TableSymbol)>2){columnsA=Kusto.Language.Binding.Binder.s_columnListPool.AllocateFromPool();columnsC=Kusto.Language.Binding.Binder.s_columnListPool.AllocateFromPool();try{for(Kusto.Language.Binding.Binder.GetCommonColumns$1(System.Array.getItem(tables,0,Kusto.Language.Symbols.TableSymbol).Columns,System.Array.getItem(tables,1,Kusto.Language.Symbols.TableSymbol).Columns,columnsA),i=2;i<System.Array.getCount(tables,Kusto.Language.Symbols.TableSymbol);i=i+1|0)Kusto.Language.Binding.Binder.GetCommonColumns$1(columnsA,System.Array.getItem(tables,i,Kusto.Language.Symbols.TableSymbol).Columns,columnsC),i<(System.Array.getCount(tables,Kusto.Language.Symbols.TableSymbol)-1|0)&&(columnsA.clear(),columnsA.AddRange(columnsC),columnsC.clear());common.AddRange(columnsC)}finally{Kusto.Language.Binding.Binder.s_columnListPool.ReturnToPool(columnsA);Kusto.Language.Binding.Binder.s_columnListPool.ReturnToPool(columnsC)}}},GetUniqueColumn:function(column,uniqueNames){var uniqueName=uniqueNames.GetOrAddName(column.Name);return Bridge.referenceEquals(uniqueName,column.Name)?column:new Kusto.Language.Symbols.ColumnSymbol(uniqueName,column.Type,void 0,System.Array.init([column],Kusto.Language.Symbols.ColumnSymbol),void 0,void 0)},CreateColumnsFromRowSchema:function(schemaColumns,columns,diagnostics){var $t,declaredNames,i,n,nat,p,type;diagnostics===void 0&&(diagnostics=null);declaredNames=Kusto.Language.Binding.Binder.s_stringSetPool.AllocateFromPool();try{for(i=0,n=schemaColumns.Count;i<n;i=i+1|0){nat={v:schemaColumns.getItem$1(i).Element$1};do{if($t=nat.v.Type,Bridge.is($t,Kusto.Language.Syntax.PrimitiveTypeExpression)){p=Bridge.cast($t,Kusto.Language.Syntax.PrimitiveTypeExpression);type=Kusto.Language.Binding.Binder.GetType(p);Kusto.Language.Binding.Binder.DeclareColumnName(declaredNames,nat.v.Name.SimpleName,diagnostics,nat.v.Name.Name)&&columns.add(new Kusto.Language.Symbols.ColumnSymbol(nat.v.Name.SimpleName,type,void 0,void 0,nat.v.Name,void 0));break}diagnostics!=null?diagnostics.add(Kusto.Language.DiagnosticFacts.GetInvalidColumnDeclaration().WithLocation(nat.v)):null;break}while(0)}}finally{Kusto.Language.Binding.Binder.s_stringSetPool.ReturnToPool(declaredNames)}}}},fields:{_globals:null,_dynamicDepth:0,_currentCluster:null,_currentDatabase:null,_currentFunction:null,_isFuzzy:!1,_localScope:null,_rowScope:null,_rightRowScope:null,_commonColumnsOnly:!1,_pathScope:null,_implicitArgumentType:null,_scopeKind:0,_outerBinder:null,_staticScopes:null,_aliasedDatabases:null,_globalBindingCache:null,_localBindingCache:null,_semanticInfoSetter:null,_cancellationToken:null,_openClusters:null,_openDatabases:null,_openTables:null,_openTableInferredColumns:null,_tupleMap:null,_defaultColumnNameSuffix:0},props:{RowScopeOrEmpty:{get:function(){return this._rowScope||Kusto.Language.Symbols.TableSymbol.Empty}},RightRowScopeOrEmpty:{get:function(){return this._rightRowScope||Kusto.Language.Symbols.TableSymbol.Empty}}},ctors:{init:function(){this._cancellationToken=new Kusto.Language.Utils.CancellationToken;this._dynamicDepth=0;this._aliasedDatabases=new(System.Collections.Generic.Dictionary$2(System.String,Kusto.Language.Symbols.DatabaseSymbol).ctor);this._defaultColumnNameSuffix=1},ctor:function(globals,currentCluster,currentDatabase,currentFunction,outerBinder,outerScope,globalBindingCache,localBindingCache,semanticInfoSetter,cancellationToken){var $t;this.$initialize();this._globals=globals;this._currentCluster=currentCluster||globals.Cluster;this._currentDatabase=currentDatabase||globals.Database;this._currentFunction=currentFunction;this._isFuzzy=($t=outerBinder!=null?outerBinder._isFuzzy:null,$t!=null?$t:!1);this._outerBinder=outerBinder;this._globalBindingCache=globalBindingCache||new Kusto.Language.Binding.GlobalBindingCache;this._localBindingCache=localBindingCache||new Kusto.Language.Binding.LocalBindingCache;this._localScope=new Kusto.Language.Binding.LocalScope.ctor(outerScope);this._semanticInfoSetter=semanticInfoSetter||Kusto.Language.Binding.Binder.DefaultSetSemanticInfo;this._cancellationToken=cancellationToken;this._staticScopes=(outerBinder!=null?outerBinder._staticScopes:null)||new(System.Collections.Generic.Dictionary$2(Kusto.Language.Syntax.FunctionDeclaration,Kusto.Language.Binding.LocalScope).ctor)}},methods:{SetLocals:function(locals){var $t,local;$t=Bridge.getEnumerator(locals,Kusto.Language.Symbols.Symbol);try{while($t.moveNext())local=$t.Current,this._localScope.AddSymbol(local)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}},SetContext:function(contextNode,position){if(position===void 0&&(position=-1),contextNode!=null){var builder=new Kusto.Language.Binding.Binder.ContextBuilder(this,position>=0?position:contextNode.TextStart);contextNode.Accept$1(builder)}},GetSymbolsInContext:function(contextNode,match,include,list){var $t,g,savePathScope,s,memberMatch,table,tuple,localMatch,dbMatch;if((g=Bridge.as(this._pathScope,Kusto.Language.Symbols.GroupSymbol))!=null&&Kusto.Language.Binding.Binder.IsPassThrough(g)){savePathScope=this._pathScope;$t=Bridge.getEnumerator(g.Members,Kusto.Language.Symbols.Symbol);try{while($t.moveNext())s=$t.Current,this._pathScope=s,this.GetSymbolsInContext(contextNode,match,include,list)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}this._pathScope=savePathScope}else if(this._pathScope!=null)memberMatch=match&2315,Kusto.Language.Binding.Binder.GetMacroExpandScope(contextNode)!=null&&list.AddRange(Kusto.Language.Symbols.EntityGroupElementSymbol.SpecialMembers),Bridge.is(this._pathScope,Kusto.Language.Symbols.TableSymbol)&&!Kusto.Language.Binding.Binder.IsInsideControlCommandProper(contextNode)&&(memberMatch&=-2),(memberMatch&Kusto.Language.Symbols.SymbolMatch.Column)!=0?(table=Bridge.as(this._pathScope,Kusto.Language.Symbols.TableSymbol))!=null&&table.IsOpen?list.AddRange(this.GetDeclaredAndInferredColumns(table)):(tuple=Bridge.as(this._pathScope,Kusto.Language.Symbols.TupleSymbol))!=null&&tuple.RelatedTable!=null&&tuple.RelatedTable.IsOpen?list.AddRange(this.GetDeclaredAndInferredColumns(tuple.RelatedTable)):Kusto.Language.Binding.Binder.GetPathMembers(this._pathScope,memberMatch,list):memberMatch!==Kusto.Language.Symbols.SymbolMatch.None&&Kusto.Language.Binding.Binder.GetPathMembers(this._pathScope,memberMatch,list),(match&Kusto.Language.Symbols.SymbolMatch.Function)!=0&&this.GetSpecialFunctions(null,list);else switch(this._scopeKind){case Kusto.Language.Binding.ScopeKind.Normal:this._rowScope!=null&&(match&Kusto.Language.Symbols.SymbolMatch.Column)!=0&&(this._rightRowScope!=null?(list.add(new Kusto.Language.Symbols.VariableSymbol("$left",this.GetTuple(this._rowScope))),list.add(new Kusto.Language.Symbols.VariableSymbol("$right",this.GetTuple(this._rightRowScope))),Kusto.Language.Binding.Binder.GetCommonColumns$2(this.GetDeclaredAndInferredColumns(this._rowScope),this.GetDeclaredAndInferredColumns(this._rightRowScope),list)):this._rowScope.GetMembers(match,list));localMatch=match;(include&Kusto.Language.IncludeFunctionKind.LocalFunctions)==0&&(localMatch&=-9);(include&Kusto.Language.IncludeFunctionKind.LocalViews)==0&&(localMatch&=-17);this._localScope.GetSymbols(localMatch,list);(match&Kusto.Language.Symbols.SymbolMatch.Function)!=0&&(include&Kusto.Language.IncludeFunctionKind.BuiltInFunctions)!=0&&this.GetFunctionsInScope$1(contextNode,match,null,Kusto.Language.IncludeFunctionKind.BuiltInFunctions,list);this._currentDatabase!=null&&(dbMatch=match,(include&Kusto.Language.IncludeFunctionKind.DatabaseFunctions)==0&&(dbMatch&=-9),this._currentDatabase.GetMembers(dbMatch,list));(match&Kusto.Language.Symbols.SymbolMatch.Database)!=0&&this._currentCluster.GetMembers(match,list);(match&Kusto.Language.Symbols.SymbolMatch.Cluster)!=0&&list.AddRange(this._globals.Clusters);break;case Kusto.Language.Binding.ScopeKind.Aggregate:(match&Kusto.Language.Symbols.SymbolMatch.Function)!=0&&this.GetFunctionsInScope$1(contextNode,match,null,include,list);break;case Kusto.Language.Binding.ScopeKind.PlugIn:(match&Kusto.Language.Symbols.SymbolMatch.Function)!=0&&this.GetFunctionsInScope$1(contextNode,match,null,include,list);break;case Kusto.Language.Binding.ScopeKind.Option:(match&Kusto.Language.Symbols.SymbolMatch.Option)!=0&&list.AddRange(this._globals.Options);break}},GetSpecialFunctions:function(name,functions){var g,savePathScope;if(this._pathScope!=null)if((g=Bridge.as(this._pathScope,Kusto.Language.Symbols.GroupSymbol))!=null&&System.Array.getCount(g.Members,Kusto.Language.Symbols.Symbol)>0&&Kusto.Language.Binding.Binder.IsPassThrough(g))savePathScope=this._pathScope,this._pathScope=System.Array.getItem(g.Members,0,Kusto.Language.Symbols.Symbol),this.GetSpecialFunctions(name,functions),this._pathScope=savePathScope;else switch(this._pathScope.Kind){case Kusto.Language.Symbols.SymbolKind.Cluster:(name==null||Bridge.referenceEquals(Kusto.Language.Functions.Database.Name,name))&&functions.add(Kusto.Language.Functions.Database);break;case Kusto.Language.Symbols.SymbolKind.Database:(name==null||Bridge.referenceEquals(Kusto.Language.Functions.Database.Name,name))&&(functions.add(Kusto.Language.Functions.Table),functions.add(Kusto.Language.Functions.ExternalTable),functions.add(Kusto.Language.Functions.MaterializedView));break}},GetFunctionsInScope$1:function(contextNode,match,name,include,functions){var $t,allFunctions=Kusto.Language.Binding.Binder.s_symbolListPool.AllocateFromPool(),fn;try{this.GetFunctionsInScope(this._scopeKind,contextNode,name,include,allFunctions);$t=Bridge.getEnumerator(allFunctions);try{while($t.moveNext())fn=$t.Current,Kusto.Language.Symbols.SymbolMatchExtensions.Matches(fn,match)&&functions.add(fn)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}finally{Kusto.Language.Binding.Binder.s_symbolListPool.ReturnToPool(allFunctions)}},GetFunctionsInScope:function(kind,contextNode,name,include,functions){switch(kind){case Kusto.Language.Binding.ScopeKind.Aggregate:this.GetAggregateFunctionsInScope(contextNode,name,include,functions);break;case Kusto.Language.Binding.ScopeKind.PlugIn:this.GetFunctionsInPlugInScope(contextNode,name,include,functions);break;case Kusto.Language.Binding.ScopeKind.Option:break;case Kusto.Language.Binding.ScopeKind.Normal:default:this.GetFunctionsInNormalScope(contextNode,name,include,functions);break}},GetAggregateFunctionsInScope:function(contextNode,name,include,functions){var context,fn;this._pathScope==null&&(name==null?((include&Kusto.Language.IncludeFunctionKind.BuiltInFunctions)!=0&&(context=new Kusto.Language.Binding.Binder.BinderAvailabilityContext(contextNode),functions.AddRange(System.Linq.Enumerable.from(this._globals.Aggregates,Kusto.Language.Symbols.FunctionSymbol).where(function(f){return Kusto.Language.Binding.Binder.IsAvailable(f,context)}))),this.GetFunctionsInNormalScope(contextNode,name,include,functions)):((include&Kusto.Language.IncludeFunctionKind.BuiltInFunctions)!=0&&(fn=this._globals.GetAggregate(name),fn!=null&&functions.add(fn)),functions.Count===0&&this.GetFunctionsInNormalScope(contextNode,name,include,functions)))},GetFunctionsInPlugInScope:function(contextNode,name,include,functions){var context,fn;this._pathScope==null&&(include&Kusto.Language.IncludeFunctionKind.BuiltInFunctions)!=0&&(name==null?(context=new Kusto.Language.Binding.Binder.BinderAvailabilityContext(contextNode),functions.AddRange(System.Linq.Enumerable.from(this._globals.PlugIns,Kusto.Language.Symbols.FunctionSymbol).where(function(f){return Kusto.Language.Binding.Binder.IsAvailable(f,context)}))):(fn=this._globals.GetPlugIn(name),fn!=null&&functions.add(fn)))},GetFunctionsInNormalScope:function(contextNode,name,include,functions){var context,fn;this._pathScope!=null?this.GetSpecialFunctions(name,functions):((include&Kusto.Language.IncludeFunctionKind.BuiltInFunctions)!=0&&(context=new Kusto.Language.Binding.Binder.BinderAvailabilityContext(contextNode),name==null?functions.AddRange(System.Linq.Enumerable.from(this._globals.Functions,Kusto.Language.Symbols.FunctionSymbol).where(function(f){return Kusto.Language.Binding.Binder.IsAvailable(f,context)})):functions.Count===0&&(fn=this._globals.GetFunction(name),fn!=null&&Kusto.Language.Binding.Binder.IsAvailable(fn,context)&&functions.add(fn))),(name==null||functions.Count===0)&&(include&Kusto.Language.IncludeFunctionKind.LocalFunctions)!=0&&this.GetLocalFunctionsInScope(name,functions),(name==null||functions.Count===0)&&(include&Kusto.Language.IncludeFunctionKind.DatabaseFunctions)!=0&&this._currentDatabase!=null&&this._currentDatabase.GetMembers$1(name,Kusto.Language.Symbols.SymbolMatch.Function,functions))},GetLocalFunctionsInScope:function(name,functions){var $t,locals=Kusto.Language.Binding.Binder.s_symbolListPool.AllocateFromPool(),local,fs,ps,vs,resultType,lfs,lps;try{this._localScope.GetSymbols$1(name,56,locals);$t=Bridge.getEnumerator(locals);try{while($t.moveNext())local=$t.Current,(fs=Bridge.as(local,Kusto.Language.Symbols.FunctionSymbol))!=null?functions.add(fs):(ps=Bridge.as(local,Kusto.Language.Symbols.PatternSymbol))!=null?functions.add(ps):(vs=Bridge.as(local,Kusto.Language.Symbols.VariableSymbol))!=null&&(resultType=Kusto.Language.Binding.Binder.GetResultType(local),(lfs=Bridge.as(resultType,Kusto.Language.Symbols.FunctionSymbol))!=null?functions.add(lfs):(lps=Bridge.as(resultType,Kusto.Language.Symbols.PatternSymbol))!=null&&functions.add(lps))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}finally{Kusto.Language.Binding.Binder.s_symbolListPool.ReturnToPool(locals)}},BindFunctionCallOrPattern:function(functionCall){var symbol=Kusto.Language.Binding.Binder.GetResultTypeOrError(functionCall.Name),fn,ps;return(fn=Bridge.as(symbol,Kusto.Language.Symbols.FunctionSymbol))!=null?this.BindFunctionCall(functionCall,fn):(ps=Bridge.as(symbol,Kusto.Language.Symbols.PatternSymbol))!=null?this.BindPattern(functionCall,ps):symbol.IsError?this._isFuzzy?new Kusto.Language.Binding.SemanticInfo.$ctor4((new Kusto.Language.Symbols.TableSymbol.ctor).WithIsOpen(!0),Kusto.Language.DiagnosticFacts.GetFuzzyFunctionNotDefined(functionCall.Name.SimpleName).WithLocation(functionCall)):Kusto.Language.Binding.Binder.ErrorInfo:functionCall.Name.GetSemanticInfo()},BindFunctionCall:function(functionCall,fn){var $arguments=Kusto.Language.Binding.Binder.s_expressionListPool.AllocateFromPool(),argumentTypes=Kusto.Language.Binding.Binder.s_typeListPool.AllocateFromPool();try{return this.GetArgumentsAndTypes(functionCall,$arguments,argumentTypes),this.BindFunctionCall$1(functionCall,fn,$arguments,argumentTypes)}finally{Kusto.Language.Binding.Binder.s_expressionListPool.ReturnToPool($arguments);Kusto.Language.Binding.Binder.s_typeListPool.ReturnToPool(argumentTypes)}},BindFunctionCall$1:function(functionCall,fn,$arguments,argumentTypes){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),matchingSignatures=Kusto.Language.Binding.Binder.s_signatureListPool.AllocateFromPool(),funResult,resultType,unwrappedArgumentTypes,unwrappedResultType,types,returnType;try{if(this.GetBestMatchingSignatures(fn.Signatures,$arguments,argumentTypes,matchingSignatures),matchingSignatures.Count===1){if(this.CheckSignature(matchingSignatures.getItem(0),$arguments,argumentTypes,functionCall.Name,diagnostics),funResult=this.GetFunctionCallResult(matchingSignatures.getItem(0),$arguments,argumentTypes,functionCall.Name,diagnostics),resultType=funResult.Type,Bridge.referenceEquals(funResult.Type,Kusto.Language.Symbols.ScalarTypes.Dynamic)&&Kusto.Language.Binding.Binder.HasDynamicPrimitives(argumentTypes)){unwrappedArgumentTypes=Kusto.Language.Binding.Binder.s_typeListPool.AllocateFromPool();try{Kusto.Language.Binding.Binder.GetUnwrappedDynamicPrimitives(argumentTypes,unwrappedArgumentTypes);unwrappedResultType=this.BindFunctionCall$1(functionCall,fn,$arguments,unwrappedArgumentTypes).ResultType;!Bridge.is(unwrappedResultType,Kusto.Language.Symbols.ScalarSymbol)||Bridge.is(unwrappedResultType,Kusto.Language.Symbols.DynamicSymbol)||Bridge.referenceEquals(unwrappedResultType,Kusto.Language.Symbols.ScalarTypes.Unknown)||(resultType=Kusto.Language.Symbols.ScalarTypes.GetDynamic(unwrappedResultType))}finally{Kusto.Language.Binding.Binder.s_typeListPool.ReturnToPool(unwrappedArgumentTypes)}}return new Kusto.Language.Binding.SemanticInfo.$ctor1(matchingSignatures.getItem(0),resultType,diagnostics,fn.IsConstantFoldable&&Kusto.Language.Binding.Binder.AllAreConstant($arguments),funResult.Info)}else return System.Array.getCount($arguments,Kusto.Language.Syntax.Expression)===0&&fn.MinArgumentCount>0?diagnostics.add(Kusto.Language.DiagnosticFacts.GetFunctionExpectsArgumentCountRange(fn.Name,fn.MinArgumentCount,fn.MaxArgumentCount).WithLocation(functionCall.Name)):Kusto.Language.Binding.Binder.ArgumentsHaveErrorsOrUnknown(argumentTypes)||(types=System.Linq.Enumerable.from($arguments,Kusto.Language.Syntax.Expression).select(function(e){return Kusto.Language.Binding.Binder.GetResultTypeOrError(e)}).toList(Kusto.Language.Symbols.TypeSymbol),diagnostics.add(Kusto.Language.DiagnosticFacts.GetFunctionNotDefinedWithMatchingParameters(functionCall.Name.SimpleName,types).WithLocation(functionCall.Name))),returnType=this.GetCommonReturnType(matchingSignatures,$arguments,argumentTypes,functionCall.Name),new Kusto.Language.Binding.SemanticInfo.$ctor3(fn,returnType,diagnostics,fn.IsConstantFoldable&&Kusto.Language.Binding.Binder.AllAreConstant($arguments),void 0)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_signatureListPool.ReturnToPool(matchingSignatures)}},BindPattern:function(functionCall,pattern){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),matchingSignatures=Kusto.Language.Binding.Binder.s_patternListPool.AllocateFromPool(),$arguments=Kusto.Language.Binding.Binder.s_expressionListPool.AllocateFromPool(),i,n,argument,type,result;try{for(System.Array.getCount(pattern.Parameters,Kusto.Language.Symbols.Parameter)!==functionCall.ArgumentList.Expressions.Count&&diagnostics.add(Kusto.Language.DiagnosticFacts.GetArgumentCountExpected(System.Array.getCount(pattern.Parameters,Kusto.Language.Symbols.Parameter)).WithLocation(functionCall.Name)),i=0,n=functionCall.ArgumentList.Expressions.Count;i<n;i=i+1|0)argument=functionCall.ArgumentList.Expressions.getItem$1(i).Element$1,$arguments.add(argument),i<System.Array.getCount(pattern.Parameters,Kusto.Language.Symbols.Parameter)&&(type=System.Array.getItem(System.Array.getItem(pattern.Parameters,i,Kusto.Language.Symbols.Parameter).DeclaredTypes,0,Kusto.Language.Symbols.TypeSymbol),this.CheckIsExactType(argument,type,diagnostics)&&this.CheckIsLiteral(argument,diagnostics));return this.GetMatchingPatterns(pattern.Signatures,$arguments,matchingSignatures),matchingSignatures.Count===0?(diagnostics.add(Kusto.Language.DiagnosticFacts.GetNoPatternMatchesArguments().WithLocation(functionCall.Name)),new Kusto.Language.Binding.SemanticInfo.$ctor3(pattern,Kusto.Language.Symbols.ErrorSymbol.Instance,diagnostics)):(result=this.GetPatternReturnType(matchingSignatures),new Kusto.Language.Binding.SemanticInfo.$ctor3(pattern,result,diagnostics))}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_patternListPool.ReturnToPool(matchingSignatures);Kusto.Language.Binding.Binder.s_expressionListPool.ReturnToPool($arguments)}},GetMatchingPatterns:function(signatures,$arguments,matchingSignatures){var $t,$t1,sig,sig1;$t=Bridge.getEnumerator(signatures,Kusto.Language.Symbols.PatternSignature);try{while($t.moveNext())sig=$t.Current,this.PatternMatches(sig,$arguments,!0)&&matchingSignatures.add(sig)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}if(matchingSignatures.Count===0){$t1=Bridge.getEnumerator(signatures,Kusto.Language.Symbols.PatternSignature);try{while($t1.moveNext())sig1=$t1.Current,this.PatternMatches(sig1,$arguments,!1)&&matchingSignatures.add(sig1)}finally{Bridge.is($t1,System.IDisposable)&&$t1.System$IDisposable$Dispose()}}},PatternMatches:function(signature,$arguments,exact){var $t,$t1,i,matchValue,argValue;if(exact&&System.Array.getCount(signature.ArgumentValues,System.String)!==System.Array.getCount($arguments,Kusto.Language.Syntax.Expression))return!1;for(i=0;i<System.Array.getCount($arguments,Kusto.Language.Syntax.Expression);i=i+1|0)if(i<System.Array.getCount(signature.ArgumentValues,System.String)&&(matchValue=System.Array.getItem(signature.ArgumentValues,i,System.String),argValue=($t=($t1=System.Array.getItem($arguments,i,Kusto.Language.Syntax.Expression).LiteralValue)!=null?Bridge.toString($t1):null,$t!=null?$t:""),!Bridge.referenceEquals(matchValue,argValue)))return!1;return!0},GetPatternReturnType:function(signatures){var $t,paths,types,sig,type;if(System.Array.getCount(signatures,Kusto.Language.Symbols.PatternSignature)===1&&System.Array.getItem(signatures,0,Kusto.Language.Symbols.PatternSignature).PathValue==null)return System.Array.getItem(signatures,0,Kusto.Language.Symbols.PatternSignature).Signature.GetReturnType(this._globals);paths=Kusto.Language.Binding.Binder.s_symbolListPool.AllocateFromPool();types=Kusto.Language.Binding.Binder.s_typeListPool.AllocateFromPool();try{$t=Bridge.getEnumerator(signatures,Kusto.Language.Symbols.PatternSignature);try{while($t.moveNext())sig=$t.Current,type=sig.Signature.GetReturnType(this._globals),sig.PathValue==null?types.contains(type)||types.add(type):paths.add(new Kusto.Language.Symbols.VariableSymbol(Bridge.toString(sig.PathValue),type))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return paths.Count>0?types.Count>0?new Kusto.Language.Symbols.GroupSymbol.$ctor1(System.Linq.Enumerable.from(paths,Kusto.Language.Symbols.Symbol).concat(types)):new Kusto.Language.Symbols.GroupSymbol.$ctor1(paths):types.Count===1?types.getItem(0):new Kusto.Language.Symbols.GroupSymbol.$ctor1(types)}finally{Kusto.Language.Binding.Binder.s_symbolListPool.ReturnToPool(paths);Kusto.Language.Binding.Binder.s_typeListPool.ReturnToPool(types)}},GetArgumentsAndTypes:function(functionCall,$arguments,argumentTypes){for(var arg,expressions=functionCall.ArgumentList.Expressions,i=0,n=expressions.Count;i<n;i=i+1|0)arg=expressions.getItem$1(i).Element$1,$arguments.add(arg),argumentTypes.add(Kusto.Language.Binding.Binder.GetResultTypeOrError(arg));Kusto.Language.Binding.Binder.IsInvokeOperatorFunctionCall(functionCall)&&($arguments.insert(0,functionCall.Name),argumentTypes.insert(0,this._implicitArgumentType||Kusto.Language.Symbols.TableSymbol.Empty))},GetFunctionCallResult:function(signature,$arguments,argumentTypes,location,diagnostics){if(diagnostics===void 0&&(diagnostics=null),$arguments==null)throw new System.ArgumentNullException.$ctor1("arguments");if(argumentTypes==null)throw new System.ArgumentNullException.$ctor1("argumentTypes");var argumentParameters=Kusto.Language.Binding.Binder.s_parameterListPool.AllocateFromPool();try{return signature.GetArgumentParameters$2($arguments,argumentParameters),this.GetFunctionCallResult$1(signature,$arguments,argumentTypes,argumentParameters,location,diagnostics)}finally{Kusto.Language.Binding.Binder.s_parameterListPool.ReturnToPool(argumentParameters)}},GetFunctionCallResult$1:function(signature,$arguments,argumentTypes,argumentParameters,location,diagnostics){var iArg,clusterName,databaseName,tableName,externalTableName,materializedViewName,context;if(diagnostics===void 0&&(diagnostics=null),$arguments==null)throw new System.ArgumentNullException.$ctor1("arguments");if(argumentTypes==null)throw new System.ArgumentNullException.$ctor1("argumentTypes");if(argumentParameters==null)throw new System.ArgumentNullException.$ctor1("argumentParameters");switch(signature.ReturnKind){case Kusto.Language.Symbols.ReturnTypeKind.Declared:return Kusto.Language.Binding.FunctionCallResult.op_Implicit(signature.DeclaredReturnType);case Kusto.Language.Symbols.ReturnTypeKind.Computed:return this.GetComputedFunctionCallResult(signature,$arguments,argumentTypes);case Kusto.Language.Symbols.ReturnTypeKind.Parameter0:return iArg=Kusto.Language.Utils.ListExtensions.IndexOf(Kusto.Language.Symbols.Parameter,argumentParameters,System.Array.getItem(signature.Parameters,0,Kusto.Language.Symbols.Parameter)),Kusto.Language.Binding.FunctionCallResult.op_Implicit(iArg>=0&&iArg<System.Array.getCount(argumentTypes,Kusto.Language.Symbols.TypeSymbol)?System.Array.getItem(argumentTypes,iArg,Kusto.Language.Symbols.TypeSymbol):Kusto.Language.Symbols.ErrorSymbol.Instance);case Kusto.Language.Symbols.ReturnTypeKind.Parameter0Array:return iArg=Kusto.Language.Utils.ListExtensions.IndexOf(Kusto.Language.Symbols.Parameter,argumentParameters,System.Array.getItem(signature.Parameters,0,Kusto.Language.Symbols.Parameter)),Kusto.Language.Binding.FunctionCallResult.op_Implicit(iArg>=0&&iArg<System.Array.getCount(argumentTypes,Kusto.Language.Symbols.TypeSymbol)?Bridge.cast(Kusto.Language.Symbols.ScalarTypes.GetDynamicArray(System.Array.getItem(argumentTypes,iArg,Kusto.Language.Symbols.TypeSymbol)),Kusto.Language.Symbols.TypeSymbol):Kusto.Language.Symbols.ErrorSymbol.Instance);case Kusto.Language.Symbols.ReturnTypeKind.Parameter1:return iArg=Kusto.Language.Utils.ListExtensions.IndexOf(Kusto.Language.Symbols.Parameter,argumentParameters,System.Array.getItem(signature.Parameters,1,Kusto.Language.Symbols.Parameter)),Kusto.Language.Binding.FunctionCallResult.op_Implicit(iArg>=0&&iArg<System.Array.getCount(argumentTypes,Kusto.Language.Symbols.TypeSymbol)?System.Array.getItem(argumentTypes,iArg,Kusto.Language.Symbols.TypeSymbol):Kusto.Language.Symbols.ErrorSymbol.Instance);case Kusto.Language.Symbols.ReturnTypeKind.Parameter2:return iArg=Kusto.Language.Utils.ListExtensions.IndexOf(Kusto.Language.Symbols.Parameter,argumentParameters,System.Array.getItem(signature.Parameters,2,Kusto.Language.Symbols.Parameter)),Kusto.Language.Binding.FunctionCallResult.op_Implicit(iArg>=0&&iArg<System.Array.getCount(argumentTypes,Kusto.Language.Symbols.TypeSymbol)?System.Array.getItem(argumentTypes,iArg,Kusto.Language.Symbols.TypeSymbol):Kusto.Language.Symbols.ErrorSymbol.Instance);case Kusto.Language.Symbols.ReturnTypeKind.ParameterN:return iArg=Kusto.Language.Utils.ListExtensions.IndexOf(Kusto.Language.Symbols.Parameter,argumentParameters,System.Array.getItem(signature.Parameters,System.Array.getCount(signature.Parameters,Kusto.Language.Symbols.Parameter)-1|0,Kusto.Language.Symbols.Parameter)),Kusto.Language.Binding.FunctionCallResult.op_Implicit(iArg>=0&&iArg<System.Array.getCount(argumentTypes,Kusto.Language.Symbols.TypeSymbol)?System.Array.getItem(argumentTypes,iArg,Kusto.Language.Symbols.TypeSymbol):Kusto.Language.Symbols.ErrorSymbol.Instance);case Kusto.Language.Symbols.ReturnTypeKind.Parameter0Literal:return iArg=Kusto.Language.Utils.ListExtensions.IndexOf(Kusto.Language.Symbols.Parameter,argumentParameters,System.Array.getItem(signature.Parameters,0,Kusto.Language.Symbols.Parameter)),Kusto.Language.Binding.FunctionCallResult.op_Implicit(iArg>=0&&iArg<System.Array.getCount($arguments,Kusto.Language.Syntax.Expression)?this.GetTypeOfType(System.Array.getItem($arguments,iArg,Kusto.Language.Syntax.Expression)):Kusto.Language.Symbols.ErrorSymbol.Instance);case Kusto.Language.Symbols.ReturnTypeKind.Parameter1Literal:return iArg=Kusto.Language.Utils.ListExtensions.IndexOf(Kusto.Language.Symbols.Parameter,argumentParameters,System.Array.getItem(signature.Parameters,1,Kusto.Language.Symbols.Parameter)),Kusto.Language.Binding.FunctionCallResult.op_Implicit(iArg>=0&&iArg<System.Array.getCount($arguments,Kusto.Language.Syntax.Expression)?this.GetTypeOfType(System.Array.getItem($arguments,iArg,Kusto.Language.Syntax.Expression)):Kusto.Language.Symbols.ErrorSymbol.Instance);case Kusto.Language.Symbols.ReturnTypeKind.ParameterNLiteral:return iArg=Kusto.Language.Utils.ListExtensions.IndexOf(Kusto.Language.Symbols.Parameter,argumentParameters,System.Array.getItem(signature.Parameters,System.Array.getCount(signature.Parameters,Kusto.Language.Symbols.Parameter)-1|0,Kusto.Language.Symbols.Parameter)),Kusto.Language.Binding.FunctionCallResult.op_Implicit(iArg>=0&&iArg<System.Array.getCount($arguments,Kusto.Language.Syntax.Expression)?this.GetTypeOfType(System.Array.getItem($arguments,iArg,Kusto.Language.Syntax.Expression)):Kusto.Language.Symbols.ErrorSymbol.Instance);case Kusto.Language.Symbols.ReturnTypeKind.Parameter0Promoted:return iArg=Kusto.Language.Utils.ListExtensions.IndexOf(Kusto.Language.Symbols.Parameter,argumentParameters,System.Array.getItem(signature.Parameters,0,Kusto.Language.Symbols.Parameter)),Kusto.Language.Binding.FunctionCallResult.op_Implicit(iArg>=0&&iArg<System.Array.getCount(argumentTypes,Kusto.Language.Symbols.TypeSymbol)?Kusto.Language.Symbols.TypeFacts.PromoteToLong(System.Array.getItem(argumentTypes,iArg,Kusto.Language.Symbols.TypeSymbol)):Kusto.Language.Symbols.ErrorSymbol.Instance);case Kusto.Language.Symbols.ReturnTypeKind.Common:return Kusto.Language.Binding.FunctionCallResult.op_Implicit(Kusto.Language.Symbols.TypeFacts.GetCommonArgumentType(argumentParameters,argumentTypes)||Kusto.Language.Symbols.ErrorSymbol.Instance);case Kusto.Language.Symbols.ReturnTypeKind.CommonNonDynamic:return Kusto.Language.Binding.FunctionCallResult.op_Implicit(Kusto.Language.Symbols.TypeFacts.GetCommonArgumentType(argumentParameters,argumentTypes,void 0,!0)||Kusto.Language.Symbols.ErrorSymbol.Instance);case Kusto.Language.Symbols.ReturnTypeKind.Widest:return Kusto.Language.Binding.FunctionCallResult.op_Implicit(Kusto.Language.Symbols.TypeFacts.PromoteToLong(Kusto.Language.Symbols.TypeFacts.GetWidestScalarType$1(argumentTypes))||Kusto.Language.Symbols.ErrorSymbol.Instance);case Kusto.Language.Symbols.ReturnTypeKind.Parameter0Cluster:return iArg=Kusto.Language.Utils.ListExtensions.IndexOf(Kusto.Language.Symbols.Parameter,argumentParameters,System.Array.getItem(signature.Parameters,0,Kusto.Language.Symbols.Parameter)),clusterName={},iArg>=0&&iArg<System.Array.getCount($arguments,Kusto.Language.Syntax.Expression)&&Kusto.Language.Binding.Binder.TryGetLiteralStringValue(System.Array.getItem($arguments,iArg,Kusto.Language.Syntax.Expression),clusterName)?Kusto.Language.Binding.FunctionCallResult.op_Implicit(this.GetClusterFunctionResult(clusterName.v,System.Array.getItem($arguments,iArg,Kusto.Language.Syntax.Expression),diagnostics)):Kusto.Language.Binding.FunctionCallResult.op_Implicit(new Kusto.Language.Symbols.ClusterSymbol.$ctor1("",null,!0));case Kusto.Language.Symbols.ReturnTypeKind.Parameter0Database:return iArg=Kusto.Language.Utils.ListExtensions.IndexOf(Kusto.Language.Symbols.Parameter,argumentParameters,System.Array.getItem(signature.Parameters,0,Kusto.Language.Symbols.Parameter)),databaseName={},iArg>=0&&iArg<System.Array.getCount($arguments,Kusto.Language.Syntax.Expression)&&Kusto.Language.Binding.Binder.TryGetLiteralStringValue(System.Array.getItem($arguments,iArg,Kusto.Language.Syntax.Expression),databaseName)?Kusto.Language.Binding.FunctionCallResult.op_Implicit(this.GetDatabaseFunctionResult(databaseName.v,System.Array.getItem($arguments,iArg,Kusto.Language.Syntax.Expression),diagnostics)):System.Array.getCount($arguments,Kusto.Language.Syntax.Expression)===0?Kusto.Language.Binding.FunctionCallResult.op_Implicit(this._currentDatabase):Kusto.Language.Binding.FunctionCallResult.op_Implicit(new Kusto.Language.Symbols.DatabaseSymbol.$ctor1("",null,!0));case Kusto.Language.Symbols.ReturnTypeKind.Parameter0Table:return iArg=Kusto.Language.Utils.ListExtensions.IndexOf(Kusto.Language.Symbols.Parameter,argumentParameters,System.Array.getItem(signature.Parameters,0,Kusto.Language.Symbols.Parameter)),tableName={},iArg>=0&&iArg<System.Array.getCount($arguments,Kusto.Language.Syntax.Expression)&&Kusto.Language.Binding.Binder.TryGetLiteralStringValue(System.Array.getItem($arguments,iArg,Kusto.Language.Syntax.Expression),tableName)?Kusto.Language.Binding.FunctionCallResult.op_Implicit(this.GetTableFunctionResult(tableName.v,System.Array.getItem($arguments,iArg,Kusto.Language.Syntax.Expression),diagnostics)):Kusto.Language.Binding.FunctionCallResult.op_Implicit(Kusto.Language.Symbols.TableSymbol.Empty.WithIsOpen(!0));case Kusto.Language.Symbols.ReturnTypeKind.Parameter0ExternalTable:return iArg=Kusto.Language.Utils.ListExtensions.IndexOf(Kusto.Language.Symbols.Parameter,argumentParameters,System.Array.getItem(signature.Parameters,0,Kusto.Language.Symbols.Parameter)),externalTableName={},iArg>=0&&iArg<System.Array.getCount($arguments,Kusto.Language.Syntax.Expression)&&Kusto.Language.Binding.Binder.TryGetLiteralStringValue(System.Array.getItem($arguments,iArg,Kusto.Language.Syntax.Expression),externalTableName)?Kusto.Language.Binding.FunctionCallResult.op_Implicit(this.GetExternalTableFunctionResult(externalTableName.v,System.Array.getItem($arguments,iArg,Kusto.Language.Syntax.Expression),diagnostics)):Kusto.Language.Binding.FunctionCallResult.op_Implicit(Kusto.Language.Symbols.TableSymbol.Empty.WithIsOpen(!0));case Kusto.Language.Symbols.ReturnTypeKind.Parameter0MaterializedView:return iArg=Kusto.Language.Utils.ListExtensions.IndexOf(Kusto.Language.Symbols.Parameter,argumentParameters,System.Array.getItem(signature.Parameters,0,Kusto.Language.Symbols.Parameter)),materializedViewName={},iArg>=0&&iArg<System.Array.getCount($arguments,Kusto.Language.Syntax.Expression)&&Kusto.Language.Binding.Binder.TryGetLiteralStringValue(System.Array.getItem($arguments,iArg,Kusto.Language.Syntax.Expression),materializedViewName)?Kusto.Language.Binding.FunctionCallResult.op_Implicit(this.GetMaterializedViewFunctionResult(materializedViewName.v,System.Array.getItem($arguments,iArg,Kusto.Language.Syntax.Expression),diagnostics)):Kusto.Language.Binding.FunctionCallResult.op_Implicit(Kusto.Language.Symbols.TableSymbol.Empty.WithIsOpen(!0));case Kusto.Language.Symbols.ReturnTypeKind.Custom:return context=new Kusto.Language.Binding.Binder.BinderCallContext(this,Bridge.as(location,Kusto.Language.Syntax.SyntaxNode),$arguments,argumentTypes,argumentParameters,signature),Kusto.Language.Binding.FunctionCallResult.op_Implicit(signature.CustomReturnType(context)||Kusto.Language.Symbols.ErrorSymbol.Instance);default:throw new System.NotImplementedException.ctor;}},GetClusterFunctionResult:function(name,location,diagnostics){var cluster=this._globals.GetCluster$1(name);return cluster==null&&(diagnostics!=null&&location!=null&&(this._isFuzzy?diagnostics.add(Kusto.Language.DiagnosticFacts.GetFuzzyClusterNotDefined(name).WithLocation(location)):diagnostics.add(Kusto.Language.DiagnosticFacts.GetNameDoesNotReferToAnyKnownCluster(name).WithLocation(location))),cluster=this.GetOpenCluster(name)),cluster},GetDatabaseFunctionResult:function(nameOrPattern,location,diagnostics){var db=this.GetMatchingDatabase(nameOrPattern,this._pathScope),cluster,g,gc;return db==null&&(diagnostics!=null&&location!=null&&(this._isFuzzy?diagnostics.add(Kusto.Language.DiagnosticFacts.GetFuzzyDatabaseNotDefined(nameOrPattern).WithLocation(location)):diagnostics.add(Kusto.Language.DiagnosticFacts.GetNameDoesNotReferToAnyKnownDatabase(nameOrPattern).WithLocation(location))),Kusto.Language.Binding.Binder.IsPattern(nameOrPattern)||(this._pathScope==null?db=this.GetOpenDatabase(nameOrPattern,this._currentCluster):(cluster=Bridge.as(this._pathScope,Kusto.Language.Symbols.ClusterSymbol))!=null?db=this.GetOpenDatabase(nameOrPattern,cluster):(g=Bridge.as(this._pathScope,Kusto.Language.Symbols.GroupSymbol))!=null&&(gc=System.Linq.Enumerable.from(g.Members).ofType(Kusto.Language.Symbols.ClusterSymbol).firstOrDefault(null,null),gc!=null&&(db=this.GetOpenDatabase(nameOrPattern,gc))))),db},GetMatchingDatabase:function(nameOrPattern,clusterOrGroup){var $t,$t1,db,matching,cluster,group,s,c,c1,g,m,cs;if(Bridge.referenceEquals(clusterOrGroup,this._currentCluster)&&!System.String.isNullOrEmpty(nameOrPattern)&&(System.String.compare(this._currentDatabase.Name,nameOrPattern,!0)===0||System.String.compare(this._currentDatabase.AlternateName,nameOrPattern,!0)===0))return this._currentDatabase;if(db={},this._aliasedDatabases.tryGetValue(nameOrPattern,db))return db.v;matching=Kusto.Language.Binding.Binder.s_symbolListPool.AllocateFromPool();try{if(clusterOrGroup==null)Kusto.Language.Binding.Binder.GetMatchingDatabases(nameOrPattern,this._currentCluster,matching);else if((cluster=Bridge.as(clusterOrGroup,Kusto.Language.Symbols.ClusterSymbol))!=null)Kusto.Language.Binding.Binder.GetMatchingDatabases(nameOrPattern,cluster,matching);else if((group=Bridge.as(clusterOrGroup,Kusto.Language.Symbols.GroupSymbol))!=null){$t=Bridge.getEnumerator(group.Members,Kusto.Language.Symbols.Symbol);try{while($t.moveNext())s=$t.Current,(c=Bridge.as(s,Kusto.Language.Symbols.ClusterSymbol))!=null&&Kusto.Language.Binding.Binder.GetMatchingDatabases(nameOrPattern,c,matching)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}if(matching.Count===1)return Bridge.cast(matching.getItem(0),Kusto.Language.Symbols.TypeSymbol);else if(matching.Count>1)return new Kusto.Language.Symbols.GroupSymbol.$ctor1(matching);else if(!Kusto.Language.Binding.Binder.IsPattern(nameOrPattern))if(clusterOrGroup==null&&this._currentCluster.IsOpen)return this.GetOpenDatabase(nameOrPattern,this._currentCluster);else if((c1=Bridge.as(clusterOrGroup,Kusto.Language.Symbols.ClusterSymbol))!=null&&c1.IsOpen)return this.GetOpenDatabase(nameOrPattern,c1);else if((g=Bridge.as(clusterOrGroup,Kusto.Language.Symbols.GroupSymbol))!=null){$t1=Bridge.getEnumerator(g.Members,Kusto.Language.Symbols.Symbol);try{while($t1.moveNext())if(m=$t1.Current,(cs=Bridge.as(m,Kusto.Language.Symbols.ClusterSymbol))!=null&&cs.IsOpen)return this.GetOpenDatabase(nameOrPattern,cs)}finally{Bridge.is($t1,System.IDisposable)&&$t1.System$IDisposable$Dispose()}}return null}finally{Kusto.Language.Binding.Binder.s_symbolListPool.ReturnToPool(matching)}},GetTableFunctionResult:function(nameOrPattern,location,diagnostics){var match,symbols,result,fs,table,db,g,gdb;if(this._pathScope==null&&!Kusto.Language.Binding.Binder.IsPattern(nameOrPattern)){match=50;symbols=Kusto.Language.Binding.Binder.s_symbolListPool.AllocateFromPool();try{if(this._localScope.GetSymbols$1(nameOrPattern,match,symbols),symbols.Count>0)return result=symbols.getItem(0),result=(fs=Bridge.as(result,Kusto.Language.Symbols.FunctionSymbol))!=null&&fs.IsView&&fs.MinArgumentCount===0?fs.GetReturnType(this._globals):Kusto.Language.Binding.Binder.GetResultType(result),Bridge.as(result,Kusto.Language.Symbols.TableSymbol)||Bridge.cast(Kusto.Language.Symbols.ErrorSymbol.Instance,Kusto.Language.Symbols.TypeSymbol)}finally{Kusto.Language.Binding.Binder.s_symbolListPool.ReturnToPool(symbols)}}return table=this.GetMatchingDatabaseTable(nameOrPattern,this._pathScope),table==null&&(diagnostics!=null&&location!=null&&(this._isFuzzy?diagnostics.add(Kusto.Language.DiagnosticFacts.GetFuzzyTableNotDefined(nameOrPattern).WithLocation(location)):diagnostics.add(Kusto.Language.DiagnosticFacts.GetNameDoesNotReferToAnyKnownTable(nameOrPattern).WithLocation(location))),Kusto.Language.Binding.Binder.IsPattern(nameOrPattern)||(this._pathScope==null?table=this.GetOpenTable(nameOrPattern,this._currentDatabase):(db=Bridge.as(this._pathScope,Kusto.Language.Symbols.DatabaseSymbol))!=null?table=this.GetOpenTable(nameOrPattern,db):(g=Bridge.as(this._pathScope,Kusto.Language.Symbols.GroupSymbol))!=null&&(gdb=System.Linq.Enumerable.from(g.Members).ofType(Kusto.Language.Symbols.DatabaseSymbol).firstOrDefault(null,null),gdb!=null&&(table=this.GetOpenTable(nameOrPattern,gdb))))),table},GetMatchingDatabaseTable:function(nameOrPattern,databaseOrGroup){var $t,$t1,matches=Kusto.Language.Binding.Binder.s_symbolListPool.AllocateFromPool(),database,group,s,db,db1,g,m,gdb;try{if(databaseOrGroup==null)this.GetMatchingDatabaseTables(nameOrPattern,this._currentDatabase,matches);else if((database=Bridge.as(databaseOrGroup,Kusto.Language.Symbols.DatabaseSymbol))!=null)this.GetMatchingDatabaseTables(nameOrPattern,database,matches);else if((group=Bridge.as(databaseOrGroup,Kusto.Language.Symbols.GroupSymbol))!=null){$t=Bridge.getEnumerator(group.Members,Kusto.Language.Symbols.Symbol);try{while($t.moveNext())s=$t.Current,(db=Bridge.as(s,Kusto.Language.Symbols.DatabaseSymbol))!=null&&this.GetMatchingDatabaseTables(nameOrPattern,db,matches)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}if(matches.Count===1)return Bridge.cast(matches.getItem(0),Kusto.Language.Symbols.TableSymbol);else if(matches.Count>1)return new Kusto.Language.Symbols.GroupSymbol.$ctor1(matches);else if(!Kusto.Language.Binding.Binder.IsPattern(nameOrPattern)){if(databaseOrGroup==null&&this._currentDatabase.IsOpen)return this.GetOpenTable(nameOrPattern,this._currentDatabase);if((db1=Bridge.as(databaseOrGroup,Kusto.Language.Symbols.DatabaseSymbol))!=null&&db1.IsOpen)return this.GetOpenTable(nameOrPattern,db1);else if((g=Bridge.as(databaseOrGroup,Kusto.Language.Symbols.GroupSymbol))!=null){$t1=Bridge.getEnumerator(g.Members,Kusto.Language.Symbols.Symbol);try{while($t1.moveNext())if(m=$t1.Current,(gdb=Bridge.as(m,Kusto.Language.Symbols.DatabaseSymbol))!=null&&gdb.IsOpen)return this.GetOpenTable(nameOrPattern,gdb)}finally{Bridge.is($t1,System.IDisposable)&&$t1.System$IDisposable$Dispose()}}}return null}finally{Kusto.Language.Binding.Binder.s_symbolListPool.ReturnToPool(matches)}},GetMatchingDatabaseTables:function(nameOrPattern,database,matches){var $t,table;$t=Bridge.getEnumerator(database.Tables,Kusto.Language.Symbols.TableSymbol);try{while($t.moveNext())table=$t.Current,Kusto.Language.KustoFacts.Matches(nameOrPattern,table.Name)&&matches.add(table)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}},GetExternalTableFunctionResult:function(name,location,diagnostics){var db=Bridge.as(this._pathScope,Kusto.Language.Symbols.DatabaseSymbol)||this._currentDatabase,table=db.GetExternalTable(name);return table==null&&(diagnostics!=null&&location!=null&&(this._isFuzzy?diagnostics.add(Kusto.Language.DiagnosticFacts.GetFuzzyExternalTableNotDefined(name).WithLocation(location)):diagnostics.add(Kusto.Language.DiagnosticFacts.GetNameDoesNotReferToAnyKnownExternalTable(name).WithLocation(location))),table=new Kusto.Language.Symbols.TableSymbol.$ctor4(name).WithIsExternal(!0).WithIsOpen(!0)),table},GetMaterializedViewFunctionResult:function(name,location,diagnostics){var db=Bridge.as(this._pathScope,Kusto.Language.Symbols.DatabaseSymbol)||this._currentDatabase,table=db.GetMaterializedView(name);return table==null&&(diagnostics!=null&&location!=null&&(this._isFuzzy?diagnostics.add(Kusto.Language.DiagnosticFacts.GetFuzzyMaterializedViewNotDefined(name).WithLocation(location)):diagnostics.add(Kusto.Language.DiagnosticFacts.GetNameDoesNotReferToAnyKnownMaterializedView(name).WithLocation(location))),table=new Kusto.Language.Symbols.TableSymbol.$ctor4(name).WithIsMaterializedView(!0).WithIsOpen(!0)),table},GetCommonReturnType:function(signatures,$arguments,argumentTypes,location){var firstType,i,type;if(System.Array.getCount(signatures,Kusto.Language.Symbols.Signature)===0)return Kusto.Language.Symbols.ErrorSymbol.Instance;else if(System.Array.getCount(signatures,Kusto.Language.Symbols.Signature)===1)return this.GetFunctionCallResult(System.Array.getItem(signatures,0,Kusto.Language.Symbols.Signature),$arguments,argumentTypes,location).Type;else{for(firstType=this.GetFunctionCallResult(System.Array.getItem(signatures,0,Kusto.Language.Symbols.Signature),$arguments,argumentTypes,location).Type,i=1;i<System.Array.getCount(signatures,Kusto.Language.Symbols.Signature);i=i+1|0)if(type=this.GetFunctionCallResult(System.Array.getItem(signatures,i,Kusto.Language.Symbols.Signature),$arguments,argumentTypes,location).Type,!Kusto.Language.Binding.Binder.SymbolsAssignable(firstType,type))return Kusto.Language.Binding.Binder.ArgumentsHaveErrorsOrUnknown(argumentTypes)?Kusto.Language.Symbols.ScalarTypes.Unknown:Kusto.Language.Symbols.ErrorSymbol.Instance;return firstType}},GetBestMatchingSignatures:function(signatures,$arguments,argumentTypes,result,requireAllArgumentsMatch){var $t,$t1,$t2,argCount,closestCount,maxCount,s,s1,mostMatchingParameterCount,s2,count,i,sig,best,i1,signatureCompare,i2,signatureCompare1;if(requireAllArgumentsMatch===void 0&&(requireAllArgumentsMatch=!1),argCount=System.Array.getCount(argumentTypes,Kusto.Language.Symbols.TypeSymbol),System.Array.getCount(signatures,Kusto.Language.Symbols.Signature)===0)return;else if(System.Array.getCount(signatures,Kusto.Language.Symbols.Signature)===1){result.add(System.Array.getItem(signatures,0,Kusto.Language.Symbols.Signature));return}if(System.Array.getCount(signatures,Kusto.Language.Symbols.Signature)>1){closestCount=0;maxCount=0;$t=Bridge.getEnumerator(signatures,Kusto.Language.Symbols.Signature);try{while($t.moveNext())s=$t.Current,argCount>=s.MinArgumentCount&&argCount<=s.MaxArgumentCount?result.add(s):argCount<s.MinArgumentCount&&closestCount>s.MinArgumentCount&&(closestCount=s.MinArgumentCount),s.MaxArgumentCount>maxCount&&(maxCount=s.MaxArgumentCount)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}if(result.Count===0){closestCount===0&&(closestCount=maxCount);$t1=Bridge.getEnumerator(signatures,Kusto.Language.Symbols.Signature);try{while($t1.moveNext())s1=$t1.Current,closestCount>=s1.MinArgumentCount&&closestCount<=s1.MaxArgumentCount&&result.add(s1)}finally{Bridge.is($t1,System.IDisposable)&&$t1.System$IDisposable$Dispose()}}}if(result.Count>1){mostMatchingParameterCount=0;$t2=Bridge.getEnumerator(result);try{while($t2.moveNext())s2=$t2.Current,count=this.GetParameterMatchCount(s2,$arguments,argumentTypes),count>mostMatchingParameterCount&&(mostMatchingParameterCount=count)}finally{Bridge.is($t2,System.IDisposable)&&$t2.System$IDisposable$Dispose()}for(requireAllArgumentsMatch&&mostMatchingParameterCount<System.Array.getCount($arguments,Kusto.Language.Syntax.Expression)&&(mostMatchingParameterCount=System.Array.getCount($arguments,Kusto.Language.Syntax.Expression)),i=result.Count-1|0;i>=0;i=i-1|0)sig=result.getItem(i),this.GetParameterMatchCount(sig,$arguments,argumentTypes)!==mostMatchingParameterCount&&result.removeAt(i);if(result.Count>1){for(best=result.getItem(0),i1=1;i1<result.Count;i1=i1+1|0)if(signatureCompare=this.CompareSignatureMatch(result.getItem(i1),best,$arguments,argumentTypes),signatureCompare>0)best=result.getItem(i1);else if(signatureCompare===0)return;for(i2=0;i2<result.Count;i2=i2+1|0)if(!Bridge.referenceEquals(result.getItem(i2),best)&&(signatureCompare1=this.CompareSignatureMatch(best,result.getItem(i2),$arguments,argumentTypes),signatureCompare1<=0))return;result.clear();result.add(best)}}},CompareSignatureMatch:function(signature1,signature2,$arguments,argumentTypes){var argCount=System.Array.getCount(argumentTypes,Kusto.Language.Symbols.TypeSymbol),matchCount1=this.GetParameterMatchCount(signature1,$arguments,argumentTypes),matchCount2=this.GetParameterMatchCount(signature2,$arguments,argumentTypes),bestMatch1,bestMatch2;if(matchCount1===argCount&&matchCount2<argCount)return matchCount1-matchCount2|0;var worstMatch1=this.GetWorstParameterMatch(signature1,$arguments,argumentTypes),worstMatch2=this.GetWorstParameterMatch(signature2,$arguments,argumentTypes),matchCompare=Kusto.Language.Binding.Binder.CompareParameterMatch(worstMatch1,worstMatch2);return matchCompare!==0?matchCompare:(bestMatch1=this.GetBestParameterMatch(signature1,$arguments,argumentTypes),bestMatch2=this.GetBestParameterMatch(signature2,$arguments,argumentTypes),matchCompare=Kusto.Language.Binding.Binder.CompareParameterMatch(bestMatch1,bestMatch2),matchCompare!==0)?matchCompare:matchCount1-matchCount2|0},GetParameterMatchCount:function(signature,$arguments,argumentTypes){var argCount=System.Array.getCount(argumentTypes,Kusto.Language.Symbols.TypeSymbol),matches=0,argumentParameters=Kusto.Language.Binding.Binder.s_parameterListPool.AllocateFromPool(),i;try{for(signature.GetArgumentParameters$2($arguments,argumentParameters),i=0;i<argCount;i=i+1|0)this.GetParameterMatchKind(signature,argumentParameters,argumentTypes,argumentParameters.getItem(i),System.Array.getItem($arguments,i,Kusto.Language.Syntax.Expression),System.Array.getItem(argumentTypes,i,Kusto.Language.Symbols.TypeSymbol))!==Kusto.Language.Binding.ParameterMatchKind.None&&(matches=matches+1|0)}finally{Kusto.Language.Binding.Binder.s_parameterListPool.ReturnToPool(argumentParameters)}return matches},GetWorstParameterMatch:function(signature,$arguments,argumentTypes){var argumentParameters=Kusto.Language.Binding.Binder.s_parameterListPool.AllocateFromPool(),worstMatchKind,argumentIndex,matchKind;try{for(signature.GetArgumentParameters$2($arguments,argumentParameters),worstMatchKind=Kusto.Language.Binding.ParameterMatchKind.Exact,argumentIndex=0;argumentIndex<System.Array.getCount($arguments,Kusto.Language.Syntax.Expression);argumentIndex=argumentIndex+1|0)matchKind=this.GetParameterMatchKind(signature,argumentParameters,argumentTypes,argumentParameters.getItem(argumentIndex),System.Array.getItem($arguments,argumentIndex,Kusto.Language.Syntax.Expression),System.Array.getItem(argumentTypes,argumentIndex,Kusto.Language.Symbols.TypeSymbol)),matchKind<worstMatchKind&&(worstMatchKind=matchKind);return worstMatchKind}finally{Kusto.Language.Binding.Binder.s_parameterListPool.ReturnToPool(argumentParameters)}},GetBestParameterMatch:function(signature,$arguments,argumentTypes){var argumentParameters=Kusto.Language.Binding.Binder.s_parameterListPool.AllocateFromPool(),bestMatchKind,argumentIndex,matchKind;try{for(signature.GetArgumentParameters$2($arguments,argumentParameters),bestMatchKind=Kusto.Language.Binding.ParameterMatchKind.None,argumentIndex=0;argumentIndex<System.Array.getCount($arguments,Kusto.Language.Syntax.Expression);argumentIndex=argumentIndex+1|0)matchKind=this.GetParameterMatchKind(signature,argumentParameters,argumentTypes,argumentParameters.getItem(argumentIndex),System.Array.getItem($arguments,argumentIndex,Kusto.Language.Syntax.Expression),System.Array.getItem(argumentTypes,argumentIndex,Kusto.Language.Symbols.TypeSymbol)),matchKind>bestMatchKind&&(bestMatchKind=matchKind);return bestMatchKind}finally{Kusto.Language.Binding.Binder.s_parameterListPool.ReturnToPool(argumentParameters)}},GetParameterMatchKind:function(signature,argumentParameters,argumentTypes,parameter,argument,argumentType){return Kusto.Language.Binding.Binder.GetParameterMatchKind(signature,argumentParameters,argumentTypes,parameter,argument,argumentType,this.AllowLooseParameterMatching(signature))},GetComputedFunctionCallResult:function(signature,$arguments,argumentTypes){var funFacts,expansion,returnType;return $arguments===void 0&&($arguments=null),argumentTypes===void 0&&(argumentTypes=null),funFacts={},this.TryGetFunctionBodyFacts(signature,funFacts),funFacts.v==null||funFacts.v.HasVariableReturnType?(expansion=this.GetFunctionCallExpansion(signature,$arguments,argumentTypes),this.TryGetFunctionBodyFacts(signature,funFacts),returnType=Kusto.Language.Binding.Binder.GetBodyResultType(expansion!=null?expansion.Root:null),(returnType==null||returnType.IsError)&&(returnType=Kusto.Language.Symbols.ScalarTypes.Unknown),new Kusto.Language.Binding.FunctionCallResult.$ctor1(returnType,new Kusto.Language.Binding.FunctionCallInfo.ctor(expansion,funFacts.v))):new Kusto.Language.Binding.FunctionCallResult.$ctor1(funFacts.v.NonVariableComputedReturnType,new Kusto.Language.Binding.FunctionCallInfo.$ctor1(this.GetDeferredFunctionCallExpansion(signature,$arguments,argumentTypes),funFacts.v))},GetDeferredFunctionCallExpansion:function(signature,$arguments,argumentTypes){$arguments===void 0&&($arguments=null);argumentTypes===void 0&&(argumentTypes=null);var expansion=null,args=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Syntax.Expression,$arguments),types=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Symbols.TypeSymbol,argumentTypes);return Bridge.fn.bind(this,function(){return expansion==null&&(this._globalBindingCache,expansion=this.GetFunctionCallExpansion(signature,args,types)),expansion})},GetFunctionCallExpansion:function(signature,$arguments,argumentTypes){var AddExpansionToCache,TryGetExpansionFromCache,callSiteInfo,expansion,body,staticScope,_;if(($arguments===void 0&&($arguments=null),argumentTypes===void 0&&(argumentTypes=null),AddExpansionToCache=null,TryGetExpansionFromCache=null,signature.ReturnKind!==Kusto.Language.Symbols.ReturnTypeKind.Computed)||this._localBindingCache.SignaturesComputingExpansion.contains(signature))return null;this._localBindingCache.SignaturesComputingExpansion.add(signature);TryGetExpansionFromCache=Bridge.fn.bind(this,function(callsite,expansion){return this._localBindingCache.CallSiteToExpansionMap.tryGetValue(callsite,expansion)||this._globalBindingCache.CallSiteToExpansionMap.tryGetValue(callsite,expansion)});AddExpansionToCache=Bridge.fn.bind(this,function(callsite,expansion){var funFacts={},shouldCacheGlobally;(this.TryGetFunctionBodyFacts(callsite.Signature,funFacts),funFacts.v!=null&&funFacts.v.HasUnqualifiedTableCall)||(shouldCacheGlobally=this.IsDatabaseSymbolSignature(callsite.Signature)&&funFacts.v!=null&&!funFacts.v.HasVariableReturnType,shouldCacheGlobally?this._globalBindingCache.CallSiteToExpansionMap.add(callsite,expansion):this._localBindingCache.CallSiteToExpansionMap.add(callsite,expansion))});try{if(callSiteInfo=this.GetCallSiteInfo(signature,$arguments,argumentTypes),expansion={},!TryGetExpansionFromCache(callSiteInfo,expansion)){try{if(body=Kusto.Language.Binding.Binder.GetUnboundBody(signature),body!=null){var isInDatabase=this.IsDatabaseSymbolSignature(signature),currentDatabase=isInDatabase?this._globals.GetDatabase$2(signature.Symbol):null,currentCluster=isInDatabase?this._globals.GetCluster(currentDatabase):null;expansion.v=signature.Declaration!=null?new Kusto.Language.FunctionCallExpansion(body,signature.Declaration.Tree,signature.Declaration.TriviaStart):new Kusto.Language.FunctionCallExpansion(body);staticScope=this.GetOuterScope(signature);Kusto.Language.Binding.Binder.TryBindCalledFunctionBody(expansion.v,this,currentCluster,currentDatabase,Bridge.as(signature.Symbol,Kusto.Language.Symbols.FunctionSymbol),staticScope,callSiteInfo.Locals)?_=this.GetOrComputeFunctionBodyFacts(signature,expansion.v.Root):expansion.v=null}}catch($e1){$e1=System.Exception.create($e1);expansion.v=null}AddExpansionToCache(callSiteInfo,expansion.v)}return expansion.v}finally{this._localBindingCache.SignaturesComputingExpansion.remove(signature)}},IsDatabaseSymbolSignature:function(signature){return signature!=null&&signature.Symbol!=null&&signature.Declaration==null&&signature.Body!=null&&this._globals.IsDatabaseSymbol(signature.Symbol)},GetCallSiteInfo:function(signature,$arguments,argumentTypes){var locals=this.GetArgumentsAsLocals(signature,$arguments,argumentTypes);return new Kusto.Language.Binding.CallSiteInfo(signature,locals)},GetArgumentsAsLocals:function(signature,$arguments,argumentTypes){var $t,locals=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.VariableSymbol).ctor),argumentParameters=Kusto.Language.Binding.Binder.s_parameterListPool.AllocateFromPool(),p,argIndex;try{$arguments!=null?signature.GetArgumentParameters$2($arguments,argumentParameters):argumentTypes!=null&&signature.GetArgumentParameters$1(argumentTypes,argumentParameters);$t=Bridge.getEnumerator(signature.Parameters,Kusto.Language.Symbols.Parameter);try{while($t.moveNext())if(p=$t.Current,argIndex=argumentParameters!=null?argumentParameters.indexOf(p):-1,argIndex>=0&&!!($arguments!=null&argIndex<System.Array.getCount($arguments,Kusto.Language.Syntax.Expression))){var arg=System.Array.getItem($arguments,argIndex,Kusto.Language.Syntax.Expression),argType=argumentTypes!=null&&argIndex<System.Array.getCount(argumentTypes,Kusto.Language.Symbols.TypeSymbol)?System.Array.getItem(argumentTypes,argIndex,Kusto.Language.Symbols.TypeSymbol):arg.ResultType,localType=p.IsScalar&&p.TypeKind===Kusto.Language.Symbols.ParameterTypeKind.Declared?System.Array.getItem(p.DeclaredTypes,0,Kusto.Language.Symbols.TypeSymbol):argType,valueInfo={},isLiteral=Kusto.Language.Binding.Binder.TryGetLiteralValueInfo(arg,valueInfo);locals.add(new Kusto.Language.Symbols.VariableSymbol(p.Name,localType,isLiteral,valueInfo.v,arg))}else{var type=Kusto.Language.Binding.Binder.GetRepresentativeType(p),isConstant=p.IsOptional&&p.DefaultValue!=null,valueInfo1={v:null};isConstant&&Kusto.Language.Binding.Binder.TryGetLiteralValueInfo(p.DefaultValue,valueInfo1);locals.add(new Kusto.Language.Symbols.VariableSymbol(p.Name,type,isConstant,valueInfo1.v))}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Symbols.VariableSymbol,locals)}finally{Kusto.Language.Binding.Binder.s_parameterListPool.ReturnToPool(argumentParameters)}},GetOuterScope:function(signature){var scope={},fd;return signature.Declaration!=null&&(fd=Bridge.as(signature.Declaration.Parent,Kusto.Language.Syntax.FunctionDeclaration))!=null&&this._staticScopes.tryGetValue(fd,scope)?scope.v:null},GetOrComputeFunctionBodyFacts:function(signature,body){var facts={};if(!this.TryGetFunctionBodyFacts(signature,facts)){var bodyFacts=this.ComputeFunctionBodyFlags(signature,body),nonVariableReturnType=(bodyFacts&Kusto.Language.FunctionBodyFlags.VariableReturn)==0?Kusto.Language.Binding.Binder.GetBodyResultType(body)||Kusto.Language.Symbols.ErrorSymbol.Instance:null,hasSyntaxErrors=Kusto.Language.Binding.Binder.HasSyntaxErrors(body);facts.v=new Kusto.Language.FunctionBodyFacts(bodyFacts,nonVariableReturnType,hasSyntaxErrors);this.SetFunctionBodyFacts(signature,facts.v)}return facts.v},TryGetFunctionBodyFacts:function(signature,facts){return this._globalBindingCache.DatabaseFunctionBodyFacts.tryGetValue(signature,facts)?!0:this._localBindingCache.NonDatabaseFunctionBodyFacts.tryGetValue(signature,facts)?!0:(facts.v=null,!1)},SetFunctionBodyFacts:function(signature,facts){this.IsDatabaseSymbolSignature(signature)?this._globalBindingCache.DatabaseFunctionBodyFacts.setItem(signature,facts):this._localBindingCache.NonDatabaseFunctionBodyFacts.setItem(signature,facts)},ComputeFunctionBodyFlags:function(signature,body){var result=Kusto.Language.FunctionBodyFlags.None,isTabular=Bridge.is(Kusto.Language.Binding.Binder.GetBodyResultType(body),Kusto.Language.Symbols.TableSymbol);return Kusto.Language.Syntax.SyntaxElement.WalkNodes(body,Bridge.fn.bind(this,function(node){var fc,p,isLiteral,ex,sig,flags;(fc=Bridge.as(node,Kusto.Language.Syntax.FunctionCallExpression))!=null&&Kusto.Language.Binding.Binder.IsSymbolLookupFunction(fc.ReferencedSymbol)?(Bridge.referenceEquals(fc.ReferencedSymbol,Kusto.Language.Functions.Table)?result|=(p=Bridge.as(fc.Parent,Kusto.Language.Syntax.PathExpression))!=null&&Bridge.referenceEquals(p.Selector,fc)?Kusto.Language.FunctionBodyFlags.QualifiedTable:36:Bridge.referenceEquals(fc.ReferencedSymbol,Kusto.Language.Functions.ExternalTable)?result|=Kusto.Language.FunctionBodyFlags.ExternalTable:Bridge.referenceEquals(fc.ReferencedSymbol,Kusto.Language.Functions.MaterializedView)?result|=Kusto.Language.FunctionBodyFlags.MaterializedView:Bridge.referenceEquals(fc.ReferencedSymbol,Kusto.Language.Functions.Database)?result|=Kusto.Language.FunctionBodyFlags.Database:Bridge.referenceEquals(fc.ReferencedSymbol,Kusto.Language.Functions.Cluster)&&(result|=Kusto.Language.FunctionBodyFlags.Cluster),isLiteral=fc.ArgumentList.Expressions.Count>0&&fc.ArgumentList.Expressions.getItem$1(0).Element$1.IsLiteral,!isLiteral&&isTabular&&(result|=Kusto.Language.FunctionBodyFlags.VariableReturn)):(ex=Bridge.as(node,Kusto.Language.Syntax.Expression))==null||(sig=ex.ReferencedSignature)==null||Kusto.Language.Binding.Binder.IsSymbolLookupFunction(sig.Symbol)||(flags=this.GetFunctionBodyFlags(ex),System.Array.getCount(signature.Parameters,Kusto.Language.Symbols.Parameter)===0&&(flags&Kusto.Language.FunctionBodyFlags.UnqualifiedTable)==0&&(flags&=-33),result|=flags)}),Bridge.fn.bind(this,function(node){var $t,alt;if(node.Alternates!=null){$t=Bridge.getEnumerator(node.Alternates,Kusto.Language.Syntax.SyntaxNode);try{while($t.moveNext())alt=$t.Current,result|=this.ComputeFunctionBodyFlags(signature,alt)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}}),function(node){return Bridge.referenceEquals(node,body)||!Bridge.is(node,Kusto.Language.Syntax.FunctionDeclaration)&&!Bridge.is(node,Kusto.Language.Syntax.FunctionBody)}),isTabular&&System.Linq.Enumerable.from(signature.Parameters,Kusto.Language.Symbols.Parameter).any(function(p){return p.IsTabular})&&(result|=Kusto.Language.FunctionBodyFlags.VariableReturn),result},GetFunctionBodyFlags:function(expr){var $t,signature,funFacts,functionCall,$arguments,argumentTypes;if((signature=expr.ReferencedSignature)!=null){if(funFacts={},!this.TryGetFunctionBodyFacts(signature,funFacts)&&signature.ReturnKind===Kusto.Language.Symbols.ReturnTypeKind.Computed){if((functionCall=Bridge.as(expr,Kusto.Language.Syntax.FunctionCallExpression))!=null){$arguments=Kusto.Language.Binding.Binder.s_expressionListPool.AllocateFromPool();argumentTypes=Kusto.Language.Binding.Binder.s_typeListPool.AllocateFromPool();try{this.GetArgumentsAndTypes(functionCall,$arguments,argumentTypes);this.GetComputedFunctionCallResult(signature,$arguments,argumentTypes)}finally{Kusto.Language.Binding.Binder.s_expressionListPool.ReturnToPool($arguments);Kusto.Language.Binding.Binder.s_typeListPool.ReturnToPool(argumentTypes)}}else Bridge.is(expr,Kusto.Language.Syntax.NameReference)&&this.GetComputedFunctionCallResult(signature,Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Syntax.Expression).Instance,Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol).Instance);this.TryGetFunctionBodyFacts(signature,funFacts)}return $t=funFacts.v!=null?funFacts.v.Flags:null,$t!=null?$t:Kusto.Language.FunctionBodyFlags.None}return Kusto.Language.FunctionBodyFlags.None},SetSemanticInfo:function(node,info){node!=null&&(Bridge.staticEquals(this._semanticInfoSetter,null)?null:this._semanticInfoSetter(node,info))},GetOpenCluster:function(name){this._openClusters==null&&(this._openClusters=new(System.Collections.Generic.Dictionary$2(System.String,Kusto.Language.Symbols.ClusterSymbol).ctor));var cluster={};return this._openClusters.tryGetValue(name,cluster)||(cluster.v=new Kusto.Language.Symbols.ClusterSymbol.$ctor1(name,null,!0),this._openClusters.add(name,cluster.v)),cluster.v},GetOpenDatabase:function(name,cluster){var map,database;return cluster=cluster||this._currentCluster,this._openDatabases==null&&(this._openDatabases=new(System.Collections.Generic.Dictionary$2(Kusto.Language.Symbols.ClusterSymbol,System.Collections.Generic.Dictionary$2(System.String,Kusto.Language.Symbols.DatabaseSymbol)).ctor)),map={},this._openDatabases.tryGetValue(cluster,map)||(map.v=new(System.Collections.Generic.Dictionary$2(System.String,Kusto.Language.Symbols.DatabaseSymbol).ctor),this._openDatabases.add(cluster,map.v)),database={},map.v.tryGetValue(name,database)||(database.v=new Kusto.Language.Symbols.DatabaseSymbol.$ctor1(name,null,!0),map.v.add(name,database.v)),database.v},GetOpenTable:function(name,database){var map,table;return this._openTables==null&&(this._openTables=new(System.Collections.Generic.Dictionary$2(Kusto.Language.Symbols.DatabaseSymbol,System.Collections.Generic.Dictionary$2(System.String,Kusto.Language.Symbols.TableSymbol)).ctor)),map={},this._openTables.tryGetValue(database,map)||(map.v=new(System.Collections.Generic.Dictionary$2(System.String,Kusto.Language.Symbols.TableSymbol).ctor),this._openTables.add(database,map.v)),table={},map.v.tryGetValue(name,table)||(table.v=new Kusto.Language.Symbols.TableSymbol.$ctor4(name).WithIsOpen(!0),map.v.add(name,table.v)),table.v},GetOpenTableInferredColumn:function(name,table){var columnMap,column;return this._openTableInferredColumns==null&&(this._openTableInferredColumns=new(System.Collections.Generic.Dictionary$2(Kusto.Language.Symbols.TableSymbol,System.Collections.Generic.Dictionary$2(System.String,Kusto.Language.Symbols.ColumnSymbol)).ctor)),columnMap={},this._openTableInferredColumns.tryGetValue(table,columnMap)||(columnMap.v=new(System.Collections.Generic.Dictionary$2(System.String,Kusto.Language.Symbols.ColumnSymbol).ctor),this._openTableInferredColumns.add(table,columnMap.v)),column={},columnMap.v.tryGetValue(name,column)||(column.v=new Kusto.Language.Symbols.ColumnSymbol(name,Kusto.Language.Symbols.ScalarTypes.Unknown),columnMap.v.add(name,column.v)),column.v},GetDeclaredAndInferredColumns$1:function(table,columns){columns.AddRange(table.Columns);var columnMap={};table.IsOpen&&this._openTableInferredColumns!=null&&this._openTableInferredColumns.tryGetValue(table,columnMap)&&columns.AddRange(columnMap.v.Values)},GetDeclaredAndInferredColumns:function(table){if(table==null)return Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Symbols.ColumnSymbol).Instance;else if(table.IsOpen&&this._openTableInferredColumns!=null&&this._openTableInferredColumns.containsKey(table)){var list=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor);return this.GetDeclaredAndInferredColumns$1(table,list),list}else return table.Columns},TryGetDeclaredOrInferredColumn:function(table,name,column){return table.TryGetColumn(name,column)?!0:table.IsOpen?(column.v=this.GetOpenTableInferredColumn(name,table),!0):(column.v=null,!1)},GetTuple:function(table){this._tupleMap==null&&(this._tupleMap=new(System.Collections.Generic.Dictionary$2(Kusto.Language.Symbols.TableSymbol,Kusto.Language.Symbols.TupleSymbol).ctor));var tuple={};return this._tupleMap.tryGetValue(table,tuple)||(tuple.v=new Kusto.Language.Symbols.TupleSymbol.$ctor1(table.Columns,table),this._tupleMap.add(table,tuple.v)),tuple.v},CanGlobalCache:function(tables){return Bridge.referenceEquals(tables,this._currentDatabase.Tables)||System.Linq.Enumerable.from(tables,Kusto.Language.Symbols.TableSymbol).all(Bridge.fn.bind(this,function(t){return this._globals.IsDatabaseTable(t)}))},GetTableOfColumnsUnifiedByName:function(tables){var $t,unifiedColumnsTable={},canCache,columns,table;if(!this._globalBindingCache.UnifiedNameColumnsMap.tryGetValue(tables,unifiedColumnsTable)){canCache=this.CanGlobalCache(tables);tables=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Symbols.TableSymbol,tables);columns=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor);$t=Bridge.getEnumerator(tables,Kusto.Language.Symbols.TableSymbol);try{while($t.moveNext())table=$t.Current,columns.AddRange(table.Columns)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}Kusto.Language.Binding.Binder.UnifyColumnsWithSameName(columns);unifiedColumnsTable.v=new Kusto.Language.Symbols.TableSymbol.$ctor3(columns).WithIsOpen(System.Linq.Enumerable.from(tables,Kusto.Language.Symbols.TableSymbol).any(function(t){return t.IsOpen}));canCache&&this._globalBindingCache.UnifiedNameColumnsMap.setItem(tables,unifiedColumnsTable.v)}return unifiedColumnsTable.v},GetTableOfColumnsUnifiedByNameAndType:function(tables){var $t,unifiedColumnsTable={},canCache,columns,table;if(!this._globalBindingCache.UnifiedNameAndTypeColumnsMap.tryGetValue(tables,unifiedColumnsTable)){canCache=this.CanGlobalCache(tables);tables=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Symbols.TableSymbol,tables);columns=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor);$t=Bridge.getEnumerator(tables,Kusto.Language.Symbols.TableSymbol);try{while($t.moveNext())table=$t.Current,columns.AddRange(table.Columns)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}Kusto.Language.Binding.Binder.UnifyColumnsWithSameNameAndType(columns);unifiedColumnsTable.v=new Kusto.Language.Symbols.TableSymbol.$ctor3(columns).WithIsOpen(System.Linq.Enumerable.from(tables,Kusto.Language.Symbols.TableSymbol).any(function(t){return t.IsOpen}));canCache&&this._globalBindingCache.UnifiedNameAndTypeColumnsMap.setItem(tables,unifiedColumnsTable.v)}return unifiedColumnsTable.v},GetTableOfCommonColumns:function(tables){var commonColumnsTable={},canCache,columns;return this._globalBindingCache.CommonColumnsMap.tryGetValue(tables,commonColumnsTable)||(canCache=this.CanGlobalCache(tables),tables=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Symbols.TableSymbol,tables),columns=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor),Kusto.Language.Binding.Binder.GetCommonColumns(tables,columns),commonColumnsTable.v=new Kusto.Language.Symbols.TableSymbol.$ctor3(columns),System.Array.getCount(tables,Kusto.Language.Symbols.TableSymbol)>0&&System.Linq.Enumerable.from(tables,Kusto.Language.Symbols.TableSymbol).all(function(t){return t.IsOpen})&&(commonColumnsTable.v=commonColumnsTable.v.WithIsOpen(!0)),canCache&&this._globalBindingCache.CommonColumnsMap.setItem(tables,commonColumnsTable.v)),commonColumnsTable.v},AddLetDeclarationToScope:function(scope,statement,diagnostics){diagnostics===void 0&&(diagnostics=null);scope.AddSymbol(Kusto.Language.Binding.Binder.GetReferencedSymbol$1(statement.Name))},AddDeclarationsToLocalScope:function(declarations){for(var d,i=0,n=declarations.Count;i<n;i=i+1|0)d=declarations.getItem$1(i).Element$1,this.AddDeclarationToLocalScope(d.NameAndType.Name)},AddDeclarationsToLocalScope$1:function(declarations){for(var d,i=0,n=declarations.Count;i<n;i=i+1|0)d=declarations.getItem$1(i).Element$1,this.AddDeclarationToLocalScope(d.Name)},AddDeclarationToLocalScope:function(node){var s;(s=node.ReferencedSymbol)!=null&&this._localScope.AddSymbol(s)},BindParameterDeclarations:function(parameters){for(var p,i=0;i<parameters.Count;i=i+1|0)p=parameters.getItem$1(i).Element$1,this.BindParameterDeclaration(p)},BindParameterDeclarations$1:function(parameters){for(var p,i=0;i<parameters.Count;i=i+1|0)p=parameters.getItem$1(i).Element$1,this.BindParameterDeclaration$1(p)},BindParameterDeclaration:function(node){this.BindParameterDeclaration$1(node.NameAndType)},BindParameterDeclaration$1:function(node){var name=node.Name.SimpleName,type=this.GetTypeFromTypeExpression(node.Type),symbol;System.String.isNullOrEmpty(name)||(symbol=new Kusto.Language.Symbols.ParameterSymbol(name,type),this.SetSemanticInfo(node.Name,new Kusto.Language.Binding.SemanticInfo.$ctor3(symbol,type)))},BindColumnDeclarations:function(parameters){for(var p,i=0;i<parameters.Count;i=i+1|0)p=parameters.getItem$1(i).Element$1,this.BindColumnDeclaration(p)},BindColumnDeclaration:function(node){var name=node.NameAndType.Name.SimpleName,type=this.GetTypeFromTypeExpression(node.NameAndType.Type),symbol;System.String.isNullOrEmpty(name)||(symbol=new Kusto.Language.Symbols.ColumnSymbol(name,type),this.SetSemanticInfo(node.NameAndType.Name,new Kusto.Language.Binding.SemanticInfo.$ctor3(symbol,type)))},GetScanStepTuple:function(node){var $t,columns=Kusto.Language.Binding.Binder.s_columnListPool.AllocateFromPool(),elem,c;try{if(this.GetDeclaredAndInferredColumns$1(this.RowScopeOrEmpty,columns),node.DeclareClause!=null){$t=Bridge.getEnumerator(node.DeclareClause.Declarations,"GetEnumerator$1");try{while($t.moveNext())elem=$t.Current,(c=Bridge.as(elem.Element$1.NameAndType.Name.ReferencedSymbol,Kusto.Language.Symbols.ColumnSymbol))!=null&&columns.add(c)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}return new Kusto.Language.Symbols.TupleSymbol.$ctor1(columns,this._rowScope)}finally{Kusto.Language.Binding.Binder.s_columnListPool.ReturnToPool(columns)}},BindStepDeclarations:function(node){var $t,stepTuple=this.GetScanStepTuple(node);$t=Bridge.getEnumerator(node.Steps,"GetEnumerator$1");try{while($t.moveNext()){var step=$t.Current,name=step.Name.SimpleName,local=new Kusto.Language.Symbols.VariableSymbol(name,stepTuple);this.SetSemanticInfo(step.Name,new Kusto.Language.Binding.SemanticInfo.$ctor3(local,stepTuple))}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}},AddStepDeclarationsToLocalScope:function(node){var $t,stepTuple=this.GetScanStepTuple(node),step;$t=Bridge.getEnumerator(node.Steps,"GetEnumerator$1");try{while($t.moveNext())step=$t.Current,this.AddDeclarationToLocalScope(step.Name)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}},BindGraphMatchPatternDeclarations:function(graphMatch){var $t,$t1,graphScope=Kusto.Language.Binding.Binder.GetGraphSymbol(graphMatch),edgeTuple=graphScope!=null?new Kusto.Language.Symbols.TupleSymbol.$ctor1(graphScope.EdgeShape.Columns,graphScope.EdgeShape):Kusto.Language.Symbols.TupleSymbol.Empty,nodeTuple=(graphScope!=null?graphScope.NodeShape:null)!=null?new Kusto.Language.Symbols.TupleSymbol.$ctor1(graphScope.NodeShape.Columns,graphScope.NodeShape):Kusto.Language.Symbols.TupleSymbol.Empty,pattern,notation,node,local,edge,local1;$t=Bridge.getEnumerator(graphMatch.Patterns,"GetEnumerator$1");try{while($t.moveNext()){pattern=$t.Current;$t1=Bridge.getEnumerator(pattern.Element$1.PatternElements,"GetEnumerator$1");try{while($t1.moveNext())notation=$t1.Current,(node=Bridge.as(notation,Kusto.Language.Syntax.GraphMatchPatternNode))!=null&&node.Name!=null?(local=new Kusto.Language.Symbols.VariableSymbol(node.Name.SimpleName,nodeTuple),this.SetSemanticInfo(node.Name,new Kusto.Language.Binding.SemanticInfo.$ctor3(local,nodeTuple))):(edge=Bridge.as(notation,Kusto.Language.Syntax.GraphMatchPatternEdge))!=null&&edge.Name!=null&&(local1=this.CreateGraphMatchEdgeVariableSymbol(edge,edgeTuple),this.SetSemanticInfo(edge.Name,new Kusto.Language.Binding.SemanticInfo.$ctor3(local1,edgeTuple)))}finally{Bridge.is($t1,System.IDisposable)&&$t1.System$IDisposable$Dispose()}}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}},CreateGraphMatchEdgeVariableSymbol:function(edge,edgeTuple){var newColumns,i,column;if(edge.Range==null)return new Kusto.Language.Symbols.VariableSymbol(edge.Name.SimpleName,edgeTuple);for(newColumns=System.Array.init(System.Array.getCount(edgeTuple.Columns,Kusto.Language.Symbols.ColumnSymbol),null,Kusto.Language.Symbols.ColumnSymbol),i=0;i<System.Array.getCount(edgeTuple.Columns,Kusto.Language.Symbols.ColumnSymbol);i=i+1|0)column=System.Array.getItem(edgeTuple.Columns,i,Kusto.Language.Symbols.ColumnSymbol),newColumns[System.Array.index(i,newColumns)]=column.WithType(Kusto.Language.Symbols.ScalarTypes.GetDynamicArray(column.Type));return new Kusto.Language.Symbols.VariableSymbol(edge.Name.SimpleName,new Kusto.Language.Symbols.TupleSymbol.ctor(newColumns))},AddGraphMatchPatternDeclarationsToLocalScope:function(graphMatch){var $t,$t1,pattern,notation,node,edge;$t=Bridge.getEnumerator(graphMatch.Patterns,"GetEnumerator$1");try{while($t.moveNext()){pattern=$t.Current;$t1=Bridge.getEnumerator(pattern.Element$1.PatternElements,"GetEnumerator$1");try{while($t1.moveNext())notation=$t1.Current,(node=Bridge.as(notation,Kusto.Language.Syntax.GraphMatchPatternNode))!=null&&node.Name!=null?this.AddDeclarationToLocalScope(node.Name):(edge=Bridge.as(notation,Kusto.Language.Syntax.GraphMatchPatternEdge))!=null&&edge.Name!=null&&this.AddDeclarationToLocalScope(edge.Name)}finally{Bridge.is($t1,System.IDisposable)&&$t1.System$IDisposable$Dispose()}}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}},GetArgumentScope:function(fc,outerScope){var fs;return(fs=Bridge.as(Kusto.Language.Binding.Binder.GetReferencedSymbol$1(fc.Name),Kusto.Language.Symbols.FunctionSymbol))!=null&&this._globals.IsAggregateFunction(fs)?Kusto.Language.Binding.ScopeKind.Normal:outerScope===Kusto.Language.Binding.ScopeKind.Aggregate?Kusto.Language.Binding.ScopeKind.Aggregate:Kusto.Language.Binding.ScopeKind.Normal},GetArgumentScope$1:function(fc,position,outerScope){var fs=Bridge.as(fc.Name.ReferencedSymbol,Kusto.Language.Symbols.FunctionSymbol),sig=fc.Name.ReferencedSignature,possibleParameters,anyAggregate;if(fs!=null)if(this._globals.IsAggregateFunction(fs))return Kusto.Language.Binding.ScopeKind.Normal;else if((sig!=null&&sig.HasAggregateParameters||sig==null&&Kusto.Language.Binding.Binder.HasAggregateParameters(fs))&&(possibleParameters=Kusto.Language.Binding.Binder.s_parameterListPool.AllocateFromPool(),Kusto.Language.Binding.Binder.GetPossibleArgumentParameters$1(fc,position,possibleParameters),anyAggregate=System.Linq.Enumerable.from(possibleParameters,Kusto.Language.Symbols.Parameter).any(function(pp){return pp.ArgumentKind===Kusto.Language.Symbols.ArgumentKind.Aggregate}),Kusto.Language.Binding.Binder.s_parameterListPool.ReturnToPool(possibleParameters),anyAggregate))return Kusto.Language.Binding.ScopeKind.Aggregate;return outerScope===Kusto.Language.Binding.ScopeKind.Aggregate?Kusto.Language.Binding.ScopeKind.Aggregate:Kusto.Language.Binding.ScopeKind.Normal},GetTypeFromTypeExpression:function(typeExpression,diagnostics){return diagnostics===void 0&&(diagnostics=null),Kusto.Language.Binding.Binder.GetDeclaredType(typeExpression,diagnostics,this)},GetTypeOfType:function(typeofLiteral){return Bridge.as(Kusto.Language.Binding.Binder.GetReferencedSymbol$1(typeofLiteral),Kusto.Language.Symbols.TypeSymbol)||Kusto.Language.Symbols.ErrorSymbol.Instance},IsTabular:function(expr){return Kusto.Language.Binding.Binder.IsTabular(Kusto.Language.Binding.Binder.GetResultTypeOrError(expr))},IsColumn:function(expr){return Bridge.is(Kusto.Language.Binding.Binder.GetReferencedSymbol$1(expr),Kusto.Language.Symbols.ColumnSymbol)},CheckQueryOperatorParameters:function(parameters,queryParameters,diagnostics){var names=Kusto.Language.Binding.Binder.s_stringSetPool.AllocateFromPool(),i,n;try{for(i=0,n=parameters.Count;i<n;i=i+1|0)this.CheckQueryOperatorParameter$1(parameters.getItem$1(i),queryParameters,names,diagnostics)}finally{Kusto.Language.Binding.Binder.s_stringSetPool.ReturnToPool(names)}},CheckQueryOperatorParameters$1:function(parameters,queryParameters,diagnostics){var names=Kusto.Language.Binding.Binder.s_stringSetPool.AllocateFromPool(),i,n;try{for(i=0,n=parameters.Count;i<n;i=i+1|0)this.CheckQueryOperatorParameter$1(parameters.getItem$1(i).Element$1,queryParameters,names,diagnostics)}finally{Kusto.Language.Binding.Binder.s_stringSetPool.ReturnToPool(names)}},CheckQueryOperatorParameter$1:function(parameter,queryOperatorParameters,namesAlreadySpecified,diagnostics){var name=parameter.Name.SimpleName,qop;System.String.isNullOrEmpty(name)||(qop=Kusto.Language.Binding.Binder.GetQueryOperatorParameter(name,queryOperatorParameters),qop!=null?(this.SetSemanticInfo(parameter.Name,new Kusto.Language.Binding.SemanticInfo.$ctor3(qop,Kusto.Language.Symbols.ScalarTypes.Unknown)),qop.IsRepeatable||(namesAlreadySpecified.contains(qop.Name)||System.Array.getCount(qop.Aliases,System.String)>0&&System.Linq.Enumerable.from(qop.Aliases,System.String).any(function(a){return namesAlreadySpecified.contains(a)})?diagnostics.add(Kusto.Language.DiagnosticFacts.GetParameterAlreadySpecified(name).WithLocation(parameter.Name)):namesAlreadySpecified.add(qop.Name)),this.CheckQueryOperatorParameter(parameter,qop,diagnostics)):diagnostics.add(Kusto.Language.DiagnosticFacts.GetUnknownQueryOperatorParameterName(name).WithLocation(parameter.Name)))},CheckQueryOperatorParameter:function(parameter,qop,diagnostics){if(!this.IsQueryOperatorParameterKind(parameter,qop)){var actualType=Kusto.Language.Binding.Binder.GetResultTypeOrError(parameter.Expression);switch(qop.ValueKind){case Kusto.Language.QueryOperatorParameterValueKind.IntegerLiteral:this.CheckIsIntegerLiteral(parameter.Expression,diagnostics);break;case Kusto.Language.QueryOperatorParameterValueKind.NumericLiteral:case Kusto.Language.QueryOperatorParameterValueKind.ForcedRealLiteral:this.CheckIsNumericLiteral(parameter.Expression,diagnostics);break;case Kusto.Language.QueryOperatorParameterValueKind.ScalarLiteral:this.CheckIsScalarLiteral(parameter.Expression,diagnostics);break;case Kusto.Language.QueryOperatorParameterValueKind.SummableLiteral:this.CheckIsSummableLiteral(parameter.Expression,diagnostics);break;case Kusto.Language.QueryOperatorParameterValueKind.StringLiteral:this.CheckIsStringLiteral(parameter.Expression,diagnostics);break;case Kusto.Language.QueryOperatorParameterValueKind.BoolLiteral:this.CheckIsBooleanlLiteral(parameter.Expression,diagnostics);break;case Kusto.Language.QueryOperatorParameterValueKind.String:this.CheckIsStringOrDynamic(parameter.Expression,diagnostics);break;case Kusto.Language.QueryOperatorParameterValueKind.Column:this.CheckIsColumn(parameter.Expression,diagnostics);break;case Kusto.Language.QueryOperatorParameterValueKind.Word:case Kusto.Language.QueryOperatorParameterValueKind.WordOrNumber:this.CheckIsTokenLiteral(parameter.Expression,qop.Values,qop.IsCaseSensitive,diagnostics);break}qop.ValueKind!==Kusto.Language.QueryOperatorParameterValueKind.Word&&qop.ValueKind!==Kusto.Language.QueryOperatorParameterValueKind.WordOrNumber&&qop.Values!=null&&System.Array.getCount(qop.Values,System.String)>0&&(this.CheckIsLiteral(parameter.Expression,diagnostics),this.CheckIsLiteralValue(parameter.Expression,qop.Values,qop.IsCaseSensitive,diagnostics))}},IsQueryOperatorParameterKind:function(parameter,qop){var type=Kusto.Language.Binding.Binder.GetResultTypeOrError(parameter.Expression);switch(qop.ValueKind){case Kusto.Language.QueryOperatorParameterValueKind.IntegerLiteral:if(!(parameter.Expression.IsLiteral&&Kusto.Language.Symbols.TypeFacts.IsInteger(type)))return!1;break;case Kusto.Language.QueryOperatorParameterValueKind.NumericLiteral:case Kusto.Language.QueryOperatorParameterValueKind.ForcedRealLiteral:if(!(parameter.Expression.IsLiteral&&Kusto.Language.Symbols.TypeFacts.IsNumeric(type)))return!1;break;case Kusto.Language.QueryOperatorParameterValueKind.ScalarLiteral:if(!(parameter.Expression.IsLiteral&&type.IsScalar))return!1;break;case Kusto.Language.QueryOperatorParameterValueKind.SummableLiteral:if(!(parameter.Expression.IsLiteral&&Kusto.Language.Symbols.TypeFacts.IsSummable(type)))return!1;break;case Kusto.Language.QueryOperatorParameterValueKind.StringLiteral:if(!(parameter.Expression.IsLiteral&&this.IsType(parameter.Expression,Kusto.Language.Symbols.ScalarTypes.String)))return!1;break;case Kusto.Language.QueryOperatorParameterValueKind.BoolLiteral:if(!(parameter.Expression.IsLiteral&&this.IsType(parameter.Expression,Kusto.Language.Symbols.ScalarTypes.Bool)))return!1;break;case Kusto.Language.QueryOperatorParameterValueKind.String:if(!this.IsType(parameter.Expression,Kusto.Language.Symbols.ScalarTypes.String))return!1;break;case Kusto.Language.QueryOperatorParameterValueKind.Column:if(!Bridge.is(Kusto.Language.Binding.Binder.GetReferencedSymbol$1(parameter.Expression),Kusto.Language.Symbols.ColumnSymbol))return!1;break;case Kusto.Language.QueryOperatorParameterValueKind.Word:if(!this.IsTokenLiteral(parameter.Expression,qop.Values,qop.IsCaseSensitive))return!1;break;case Kusto.Language.QueryOperatorParameterValueKind.WordOrNumber:if(!Kusto.Language.Symbols.TypeFacts.IsNumeric(type)&&!this.IsTokenLiteral(parameter.Expression,qop.Values,qop.IsCaseSensitive))return!1;break}return qop.ValueKind!==Kusto.Language.QueryOperatorParameterValueKind.Word&&qop.ValueKind!==Kusto.Language.QueryOperatorParameterValueKind.WordOrNumber&&qop.Values!=null&&System.Array.getCount(qop.Values,System.String)>0&&(!parameter.Expression.IsLiteral||!this.IsLiteralValue(parameter.Expression,qop.Values,qop.IsCaseSensitive))?!1:!0},CheckDataValueTypes:function(expressions,columns,diagnostics){var i,n,expr;for(columns.Count>0&&expressions.Count%columns.Count!=0&&diagnostics.add(Kusto.Language.DiagnosticFacts.GetIncorrectNumberOfDataValues(columns.Count).WithLocation(expressions)),i=0,n=expressions.Count;i<n;i=i+1|0)expr=expressions.getItem$1(i).Element$1,this.CheckIsScalar(expr,diagnostics)},CheckIsScalar:function(expression,diagnostics,resultType){if(resultType===void 0&&(resultType=null),resultType==null&&(resultType=Kusto.Language.Binding.Binder.GetResultType$1(expression)),resultType!=null){if(resultType.IsScalar)return!0;resultType.IsError||diagnostics.add(Kusto.Language.DiagnosticFacts.GetScalarTypeExpected().WithLocation(expression))}return!1},CheckIsScalar$1:function(list,diagnostics){for(var exp,i=0;i<list.Count;i=i+1|0)exp=list.getItem$1(i).Element$1,this.CheckIsScalar(exp,diagnostics)},CheckAll:function(list,diagnostics,checkAction){for(var exp,i=0;i<list.Count;i=i+1|0)exp=list.getItem$1(i).Element$1,checkAction(exp,diagnostics)},CheckIsInteger:function(expression,diagnostics){var type=Kusto.Language.Binding.Binder.GetResultTypeOrError(expression);return Kusto.Language.Symbols.TypeFacts.IsInteger(type)?!0:(type.IsError||Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Unknown)||diagnostics.add(Kusto.Language.DiagnosticFacts.GetExpressionMustBeInteger().WithLocation(expression)),!1)},CheckIsIntegerLiteral:function(expression,diagnostics){var type=Kusto.Language.Binding.Binder.GetResultTypeOrError(expression);return Kusto.Language.Symbols.TypeFacts.IsInteger(type)&&expression.IsLiteral?!0:(type.IsError||Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Unknown)||diagnostics.add(Kusto.Language.DiagnosticFacts.GetIntegerLiteralExpected().WithLocation(expression)),!1)},CheckIsStringLiteral:function(expression,diagnostics){var type=Kusto.Language.Binding.Binder.GetResultTypeOrError(expression);return Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.String)&&expression.IsLiteral?!0:(type.IsError||Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Unknown)||diagnostics.add(Kusto.Language.DiagnosticFacts.GetStringLiteralExpected().WithLocation(expression)),!1)},CheckIsBooleanlLiteral:function(expression,diagnostics){var type=Kusto.Language.Binding.Binder.GetResultTypeOrError(expression);return Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Bool)&&expression.IsLiteral?!0:(type.IsError||Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Unknown)||diagnostics.add(Kusto.Language.DiagnosticFacts.GetBooleanLiteralExpected().WithLocation(expression)),!1)},CheckIsSummableLiteral:function(expression,diagnostics){var type=Kusto.Language.Binding.Binder.GetResultTypeOrError(expression),s;return(s=Bridge.as(type,Kusto.Language.Symbols.ScalarSymbol))!=null&&s.IsSummable&&expression.IsLiteral?!0:(type.IsError||Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Unknown)||diagnostics.add(Kusto.Language.DiagnosticFacts.GetSummableLiteralExpected().WithLocation(expression)),!1)},CheckIsNumericLiteral:function(expression,diagnostics){var type=Kusto.Language.Binding.Binder.GetResultTypeOrError(expression),s;return(s=Bridge.as(type,Kusto.Language.Symbols.ScalarSymbol))!=null&&s.IsNumeric&&expression.IsLiteral?!0:(type.IsError||Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Unknown)||diagnostics.add(Kusto.Language.DiagnosticFacts.GetSummableLiteralExpected().WithLocation(expression)),!1)},CheckIsScalarLiteral:function(expression,diagnostics){var type=Kusto.Language.Binding.Binder.GetResultTypeOrError(expression),s;return(s=Bridge.as(type,Kusto.Language.Symbols.ScalarSymbol))!=null&&expression.IsLiteral?!0:(type.IsError||Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Unknown)||diagnostics.add(Kusto.Language.DiagnosticFacts.GetScalarLiteralExpected().WithLocation(expression)),!1)},CheckIsRealOrDecimal:function(expression,diagnostics){var type=Kusto.Language.Binding.Binder.GetResultTypeOrError(expression);return Kusto.Language.Symbols.TypeFacts.IsRealOrDecimal(type)?!0:(type.IsError||Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Unknown)||diagnostics.add(Kusto.Language.DiagnosticFacts.GetExpressionMustBeRealOrDecimal().WithLocation(expression)),!1)},CheckIsIntegerOrArray:function(expression,diagnostics){var type=Kusto.Language.Binding.Binder.GetResultTypeOrError(expression);return Kusto.Language.Symbols.TypeFacts.IsIntegerOrArray(type)?!0:(type.IsError||Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Unknown)||diagnostics.add(Kusto.Language.DiagnosticFacts.GetExpressionMustBeIntegerOrArray().WithLocation(expression)),!1)},CheckIsStringOrDynamic:function(expression,diagnostics){var type=Kusto.Language.Binding.Binder.GetResultTypeOrError(expression);return Kusto.Language.Symbols.TypeFacts.IsStringOrDynamic(type)?!0:(type.IsError||Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Unknown)||diagnostics.add(Kusto.Language.DiagnosticFacts.GetExpressionMustHaveType(Kusto.Language.Symbols.ScalarSymbol,[Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ScalarTypes.Dynamic]).WithLocation(expression)),!1)},CheckIsStringOrArray:function(expression,diagnostics){var type=Kusto.Language.Binding.Binder.GetResultTypeOrError(expression);return Kusto.Language.Symbols.TypeFacts.IsStringOrArray(type)?!0:(type.IsError||Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Unknown)||diagnostics.add(Kusto.Language.DiagnosticFacts.GetExpressionMustBeStringOrArray().WithLocation(expression)),!1)},CheckIsDynamic:function(expression,diagnostics){var type=Kusto.Language.Binding.Binder.GetResultTypeOrError(expression);return Bridge.is(type,Kusto.Language.Symbols.DynamicSymbol)?!0:(type.IsError||Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Unknown)||diagnostics.add(Kusto.Language.DiagnosticFacts.GetExpressionMustHaveType(Kusto.Language.Symbols.ScalarSymbol,[Kusto.Language.Symbols.ScalarTypes.Dynamic]).WithLocation(expression)),!1)},CheckIsDynamicArray:function(expression,diagnostics){var type=Kusto.Language.Binding.Binder.GetResultTypeOrError(expression);return Kusto.Language.Symbols.TypeFacts.IsDynamicArray(type)?!0:(type.IsError||Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Unknown)||diagnostics.add(Kusto.Language.DiagnosticFacts.GetExpressionMustBeDynamicArray().WithLocation(expression)),!1)},CheckIsDynamicBag:function(expression,diagnostics){var type=Kusto.Language.Binding.Binder.GetResultTypeOrError(expression);return Kusto.Language.Symbols.TypeFacts.IsDynamicBag(type)?!0:(type.IsError||Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Unknown)||diagnostics.add(Kusto.Language.DiagnosticFacts.GetExpressionMustBeDynamicBag().WithLocation(expression)),!1)},CheckIsNumber:function(expression,diagnostics){var type=Kusto.Language.Binding.Binder.GetResultTypeOrError(expression);return Kusto.Language.Symbols.TypeFacts.IsNumeric(type)?!0:(type.IsError||Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Unknown)||diagnostics.add(Kusto.Language.DiagnosticFacts.GetExpressionMustBeNumeric().WithLocation(expression)),!1)},CheckIsNumberOrBool:function(expression,diagnostics){var type=Kusto.Language.Binding.Binder.GetResultTypeOrError(expression);return Kusto.Language.Symbols.TypeFacts.IsNumeric(type)||Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Bool)?!0:(type.IsError||Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Unknown)||diagnostics.add(Kusto.Language.DiagnosticFacts.GetExpressionMustBeNumericOrBool().WithLocation(expression)),!1)},CheckIsSummable:function(expression,diagnostics){var type=Kusto.Language.Binding.Binder.GetResultTypeOrError(expression);return Kusto.Language.Symbols.TypeFacts.IsSummable(type)?!0:(type.IsError||Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Unknown)||diagnostics.add(Kusto.Language.DiagnosticFacts.GetExpressionMustBeSummable().WithLocation(expression)),!1)},CheckIsOrderable:function(expression,diagnostics){var type=Kusto.Language.Binding.Binder.GetResultTypeOrError(expression);return Kusto.Language.Symbols.TypeFacts.IsOrderable(type)?!0:(type.IsError||Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Unknown)||diagnostics.add(Kusto.Language.DiagnosticFacts.GetExpressionMustBeOrderable().WithLocation(expression)),!1)},CheckIsExactType:function(expression,type,diagnostics){return this.CheckIsType(expression,type,Kusto.Language.Symbols.Conversion.None,diagnostics)},CheckIsTypeOrDynamic:function(expression,type,canPromote,diagnostics){var exprType=Kusto.Language.Binding.Binder.GetResultTypeOrError(expression);return Kusto.Language.Binding.Binder.SymbolsAssignable(type,exprType,canPromote?Kusto.Language.Symbols.Conversion.Promotable:Kusto.Language.Symbols.Conversion.None)||Kusto.Language.Binding.Binder.SymbolsAssignable(Kusto.Language.Symbols.ScalarTypes.Dynamic,exprType,Kusto.Language.Symbols.Conversion.Dynamic)?!0:(exprType.IsError||Bridge.referenceEquals(exprType,Kusto.Language.Symbols.ScalarTypes.Unknown)||(Kusto.Language.Binding.Binder.SymbolsAssignable(Kusto.Language.Symbols.ScalarTypes.Dynamic,type,Kusto.Language.Symbols.Conversion.Dynamic)?diagnostics.add(Kusto.Language.DiagnosticFacts.GetExpressionMustHaveType(Kusto.Language.Symbols.TypeSymbol,[type]).WithLocation(expression)):diagnostics.add(Kusto.Language.DiagnosticFacts.GetExpressionMustHaveType(Kusto.Language.Symbols.TypeSymbol,[type,Kusto.Language.Symbols.ScalarTypes.Dynamic]).WithLocation(expression))),!1)},IsType:function(expression,type,conversionKind){conversionKind===void 0&&(conversionKind=0);var exprType=Kusto.Language.Binding.Binder.GetResultTypeOrError(expression);return Kusto.Language.Binding.Binder.SymbolsAssignable(type,exprType,conversionKind)},CheckIsType:function(expression,type,conversionKind,diagnostics){if(this.IsType(expression,type,conversionKind))return!0;var exprType=Kusto.Language.Binding.Binder.GetResultTypeOrError(expression);return exprType.IsError||type.IsError||Bridge.referenceEquals(exprType,Kusto.Language.Symbols.ScalarTypes.Unknown)||Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Unknown)||diagnostics.add(Kusto.Language.DiagnosticFacts.GetExpressionMustHaveType(Kusto.Language.Symbols.TypeSymbol,[type]).WithLocation(expression)),!1},IsAnyType:function(T,expression,types,conversionKind){var $t,exprType,type;conversionKind===void 0&&(conversionKind=0);exprType=Kusto.Language.Binding.Binder.GetResultTypeOrError(expression);$t=Bridge.getEnumerator(types,T);try{while($t.moveNext())if(type=$t.Current,Kusto.Language.Binding.Binder.SymbolsAssignable(type,exprType,conversionKind))return!0}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return!1},CheckIsAnyType:function(T,expression,types,conversionKind,diagnostics){if(this.IsAnyType(T,expression,types,conversionKind))return!0;var exprType=Kusto.Language.Binding.Binder.GetResultTypeOrError(expression);return exprType.IsError||Bridge.referenceEquals(exprType,Kusto.Language.Symbols.ScalarTypes.Unknown)||diagnostics.add(Kusto.Language.DiagnosticFacts.GetExpressionMustHaveType$1(T,types).WithLocation(expression)),!1},CheckIsNotType:function(expression,type,diagnostics){var exprType=Kusto.Language.Binding.Binder.GetResultTypeOrError(expression);return Bridge.referenceEquals(exprType,Kusto.Language.Symbols.ScalarTypes.Unknown)?!0:Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Dynamic)&&!Bridge.is(exprType,Kusto.Language.Symbols.DynamicSymbol)?!0:Kusto.Language.Binding.Binder.SymbolsAssignable(type,exprType)?(Kusto.Language.Binding.Binder.GetResultTypeOrError(expression).IsError||diagnostics.add(Kusto.Language.DiagnosticFacts.GetTypeNotAllowed(type).WithLocation(expression)),!1):!0},CheckIsIntervalType:function(expression,rangeType,diagnostics){var info=this.GetBinaryOperatorInfo(Kusto.Language.Symbols.OperatorKind.Add,expression,rangeType,expression,Kusto.Language.Binding.Binder.GetResultTypeOrError(expression),expression),exprType;return info.ReferencedSymbol!=null&&Kusto.Language.Binding.Binder.SymbolsAssignable(rangeType,info.ResultType)?!0:(exprType=Kusto.Language.Binding.Binder.GetResultTypeOrError(expression),rangeType.IsError||exprType.IsError||Bridge.referenceEquals(rangeType,Kusto.Language.Symbols.ScalarTypes.Unknown)||Bridge.referenceEquals(exprType,Kusto.Language.Symbols.ScalarTypes.Unknown)||diagnostics.add(Kusto.Language.DiagnosticFacts.GetTypeIsNotIntervalType(Kusto.Language.Binding.Binder.GetResultTypeOrError(expression),rangeType).WithLocation(expression)),!1)},IsLiteralOrName:function(expression){return Bridge.is(expression,Kusto.Language.Syntax.LiteralExpression)||Bridge.is(expression,Kusto.Language.Syntax.CompoundStringLiteralExpression)||expression.Kind===Kusto.Language.Syntax.SyntaxKind.DynamicExpression||expression.Kind===Kusto.Language.Syntax.SyntaxKind.NameReference},CheckIsIdentifierNameDeclaration:function(name,diagnostics){return Bridge.is(name.Name,Kusto.Language.Syntax.TokenName)?!0:(diagnostics.add(Kusto.Language.DiagnosticFacts.GetIdentifierNameOnly().WithLocation(name)),!1)},CheckIsLiteralOrName:function(expression,diagnostics){if(this.IsLiteralOrName(expression))return!0;var exprType=Kusto.Language.Binding.Binder.GetResultTypeOrError(expression);return exprType.IsError||diagnostics.add(Kusto.Language.DiagnosticFacts.GetExpressionMustBeConstantOrIdentifier().WithLocation(expression)),!1},CheckIsTabular:function(expression,diagnostics,resultType){if(resultType===void 0&&(resultType=null),resultType=resultType||Kusto.Language.Binding.Binder.GetResultType$1(expression),resultType!=null){if(resultType.IsTabular)return!0;resultType.IsError||diagnostics.add(Kusto.Language.DiagnosticFacts.GetTableExpected().WithLocation(expression))}return!1},CheckIsGraph:function(expression,diagnostics,resultType){if(resultType===void 0&&(resultType=null),resultType=resultType||Kusto.Language.Binding.Binder.GetResultType$1(expression),resultType!=null){if(Bridge.is(resultType,Kusto.Language.Symbols.GraphSymbol))return!0;resultType.IsError||diagnostics.add(Kusto.Language.DiagnosticFacts.GetGraphExpected().WithLocation(expression))}return!1},CheckIsTabularOrGraph:function(expression,diagnostics,resultType){if(resultType===void 0&&(resultType=null),resultType=resultType||Kusto.Language.Binding.Binder.GetResultType$1(expression),resultType!=null){if(resultType.IsTabular||Bridge.is(resultType,Kusto.Language.Symbols.GraphSymbol))return!0;resultType.IsError||diagnostics.add(Kusto.Language.DiagnosticFacts.GetTableOrGraphExpected().WithLocation(expression))}return!1},CheckIsSingleColumnTable:function(expression,diagnostics,resultType){if(resultType===void 0&&(resultType=null),resultType=resultType||Kusto.Language.Binding.Binder.GetResultType$1(expression),resultType!=null){var table=Bridge.as(resultType,Kusto.Language.Symbols.TableSymbol);if(table!=null&&System.Array.getCount(table.Columns,Kusto.Language.Symbols.ColumnSymbol)===1)return!0;resultType.IsError||diagnostics.add(Kusto.Language.DiagnosticFacts.GetSingleColumnTableExpected().WithLocation(expression))}return!1},CheckIsDatabase:function(expression,diagnostics){return Kusto.Language.Binding.Binder.IsDatabase(Kusto.Language.Binding.Binder.GetResultTypeOrError(expression))?!0:(Kusto.Language.Binding.Binder.GetResultTypeOrError(expression).IsError||diagnostics.add(Kusto.Language.DiagnosticFacts.GetDatabaseExpected().WithLocation(expression)),!1)},CheckIsCluster:function(expression,diagnostics){return Kusto.Language.Binding.Binder.IsCluster(Kusto.Language.Binding.Binder.GetResultTypeOrError(expression))?!0:(Kusto.Language.Binding.Binder.GetResultTypeOrError(expression).IsError||diagnostics.add(Kusto.Language.DiagnosticFacts.GetClusterExpected().WithLocation(expression)),!1)},CheckIsColumn:function(expression,diagnostics){return Bridge.is(Kusto.Language.Binding.Binder.GetReferencedSymbol$1(expression),Kusto.Language.Symbols.ColumnSymbol)?!0:(Kusto.Language.Binding.Binder.GetResultTypeOrError(expression).IsError||diagnostics.add(Kusto.Language.DiagnosticFacts.GetColumnExpected().WithLocation(expression)),!1)},CheckIsLiteral:function(expression,diagnostics){return expression.IsLiteral?!0:(Kusto.Language.Binding.Binder.GetResultTypeOrError(expression).IsError||diagnostics.add(Kusto.Language.DiagnosticFacts.GetExpressionMustBeLiteral().WithLocation(expression)),!1)},CheckIsLiteralNotToken:function(expression,diagnostics){return expression.IsLiteral&&expression.Kind!==Kusto.Language.Syntax.SyntaxKind.TokenLiteralExpression?!0:(Kusto.Language.Binding.Binder.GetResultTypeOrError(expression).IsError||diagnostics.add(Kusto.Language.DiagnosticFacts.GetExpressionMustBeLiteralScalarValue().WithLocation(expression)),!1)},CheckIsLiteralStringNotEmpty:function(expression,diagnostics){var $t,exprType=Kusto.Language.Binding.Binder.GetResultTypeOrError(expression),value;if(!exprType.IsError&&!Bridge.referenceEquals(exprType,Kusto.Language.Symbols.ScalarTypes.Unknown)&&expression.IsLiteral){if(value=($t=expression.LiteralValue)!=null?Bridge.toString($t):null,!System.String.isNullOrEmpty(value))return!0;diagnostics.add(Kusto.Language.DiagnosticFacts.GetExpressionMustNotBeEmpty().WithLocation(expression))}return!1},IsLiteralValue:function(expression,values,caseSensitive){return expression.IsLiteral?Kusto.Language.Binding.Binder.Contains(values,expression.LiteralValue,caseSensitive):!1},CheckIsLiteralValue:function(expression,values,caseSensitive,diagnostics){var result=Kusto.Language.Binding.Binder.GetResultTypeOrError(expression);if(!result.IsError){if(this.IsLiteralValue(expression,values,caseSensitive))return!0;diagnostics.add(Kusto.Language.DiagnosticFacts.GetExpressionMustHaveValue$1(System.Object,values).WithLocation(expression))}return!1},IsTokenLiteral:function(expression,values,caseSensitive){return expression.Kind===Kusto.Language.Syntax.SyntaxKind.TokenLiteralExpression?values!=null&&System.Array.getCount(values,System.Object)>0?Kusto.Language.Binding.Binder.Contains(values,expression.LiteralValue,caseSensitive):!0:!1},CheckIsTokenLiteral:function(expression,values,caseSensitive,diagnostics){var result=Kusto.Language.Binding.Binder.GetResultTypeOrError(expression);if(!result.IsError){if(this.IsTokenLiteral(expression,values,caseSensitive))return!0;diagnostics.add(Kusto.Language.DiagnosticFacts.GetTokenExpected$1(System.Linq.Enumerable.from(values,System.Object).select(function(v){return Bridge.toString(v)}).toList(System.String)).WithLocation(expression))}return!1},CheckIsToken:function(token,values,caseSensitive,diagnostics){return Kusto.Language.Binding.Binder.Contains(values,token.Text,caseSensitive)?!0:(token.HasSyntaxDiagnostics||diagnostics.add(Kusto.Language.DiagnosticFacts.GetTokenExpected$1(System.Linq.Enumerable.from(values,System.Object).select(function(v){return Bridge.toString(v)}).toList(System.String)).WithLocation(token)),!1)},CheckIsConstant:function(expression,diagnostics){return Kusto.Language.Binding.Binder.GetIsConstant(expression)?!0:(Kusto.Language.Binding.Binder.GetResultTypeOrError(expression).IsError||diagnostics.add(Kusto.Language.DiagnosticFacts.GetExpressionMustBeConstant().WithLocation(expression)),!1)},IsNotConstantValue:function(expression,values,caseSensitive){return expression.IsConstant?!Kusto.Language.Binding.Binder.Contains(values,expression.ConstantValue,caseSensitive):!0},CheckIsConstantValue:function(expression,values,caseSensitive,diagnostics){var result=Kusto.Language.Binding.Binder.GetResultTypeOrError(expression);if(!result.IsError){if(Kusto.Language.Binding.Binder.IsConstantValue(expression,values,caseSensitive))return!0;diagnostics.add(Kusto.Language.DiagnosticFacts.GetExpressionMustHaveValue$1(System.Object,values).WithLocation(expression))}return!1},CheckIsConstantValue$1:function(expression,value,caseSensitive,diagnostics){return this.CheckIsConstantValue(expression,System.Array.init([value],System.Object),caseSensitive,diagnostics)},CheckIsNotConstantValue:function(expression,values,caseSensitive,diagnostics){var result=Kusto.Language.Binding.Binder.GetResultTypeOrError(expression);if(!result.IsError){if(this.IsNotConstantValue(expression,values,caseSensitive))return!0;diagnostics.add(Kusto.Language.DiagnosticFacts.GetExpressionMustNotHaveValue(System.Object,values).WithLocation(expression))}return!1},CheckIsNotConstantValue$1:function(expression,value,caseSensitive,diagnostics){return this.CheckIsNotConstantValue(expression,System.Array.init([value],System.Object),caseSensitive,diagnostics)},CheckSignature:function(signature,$arguments,argumentTypes,location,dx){var $t,argCount=System.Array.getCount($arguments,Kusto.Language.Syntax.Expression),initialDxCount=dx.Count,namedArgumentsAllowed,hadOutOfOrderNamedArgument,reportedUnnamedArgument,i,orderedParameter,argumentParameters,i1,parameter,iArg;if(signature.IsValidArgumentCount(argCount)||(signature.HasRepeatableParameters?argCount<signature.MinArgumentCount||argCount>signature.MaxArgumentCount?dx.add(Kusto.Language.DiagnosticFacts.GetFunctionExpectsArgumentCountRange(signature.Symbol.Name,signature.MinArgumentCount,signature.MaxArgumentCount).WithLocation(location)):dx.add(Kusto.Language.DiagnosticFacts.GetFunctionHasIncorrectNumberOfArguments().WithLocation(location)):argCount!==System.Array.getCount(signature.Parameters,Kusto.Language.Symbols.Parameter)&&dx.add(Kusto.Language.DiagnosticFacts.GetFunctionExpectsArgumentCountExact(signature.Symbol.Name,System.Array.getCount(signature.Parameters,Kusto.Language.Symbols.Parameter)).WithLocation(location))),namedArgumentsAllowed=this.NamedArgumentsAllowed(signature),namedArgumentsAllowed&&dx.Count===initialDxCount)for(hadOutOfOrderNamedArgument=!1,reportedUnnamedArgument=!1,i=0;i<argCount;i=i+1|0){var argument=System.Array.getItem($arguments,i,Kusto.Language.Syntax.Expression),simpleNamed=Bridge.as(argument,Kusto.Language.Syntax.SimpleNamedExpression),isNamed=simpleNamed!=null,namedParameter=isNamed?signature.GetParameter(simpleNamed.Name.SimpleName):null;isNamed&&namedParameter==null&&dx.add(Kusto.Language.DiagnosticFacts.GetUnknownArgumentName().WithLocation(simpleNamed.Name));isNamed&&!hadOutOfOrderNamedArgument?(orderedParameter=i<System.Array.getCount(signature.Parameters,Kusto.Language.Symbols.Parameter)?System.Array.getItem(signature.Parameters,i,Kusto.Language.Symbols.Parameter):null,hadOutOfOrderNamedArgument=!Bridge.referenceEquals(orderedParameter,namedParameter)):isNamed||!hadOutOfOrderNamedArgument||reportedUnnamedArgument||(dx.add(Kusto.Language.DiagnosticFacts.GetUnnamedArgumentAfterOutofOrderNamedArgument().WithLocation(argument)),reportedUnnamedArgument=!0)}argumentParameters=Kusto.Language.Binding.Binder.s_parameterListPool.AllocateFromPool();try{if(signature.GetArgumentParameters$2($arguments,argumentParameters),dx.Count===initialDxCount&&this.CheckCommonArgumentTypes(signature,argumentParameters,$arguments,argumentTypes,location,dx),dx.Count===initialDxCount)for(i1=0;i1<argCount;i1=i1+1|0)this.CheckArgument(signature,argumentParameters,$arguments,argumentTypes,i1,dx);if(namedArgumentsAllowed&&dx.Count===initialDxCount){$t=Bridge.getEnumerator(signature.Parameters,Kusto.Language.Symbols.Parameter);try{while($t.moveNext())parameter=$t.Current,parameter.IsOptional||(iArg=argumentParameters.indexOf(parameter),iArg<0&&dx.add(Kusto.Language.DiagnosticFacts.GetMissingArgumentForParameter(parameter.Name).WithLocation(location)))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}}finally{Kusto.Language.Binding.Binder.s_parameterListPool.ReturnToPool(argumentParameters)}},CheckCommonArgumentTypes:function(signature,argumentParameters,$arguments,argumentTypes,location,dx){for(var p,commonType,i=0;i<System.Array.getCount(argumentParameters,Kusto.Language.Symbols.Parameter);i=i+1|0){p=System.Array.getItem(argumentParameters,i,Kusto.Language.Symbols.Parameter);switch(p.TypeKind){case Kusto.Language.Symbols.ParameterTypeKind.CommonNumber:case Kusto.Language.Symbols.ParameterTypeKind.CommonSummable:case Kusto.Language.Symbols.ParameterTypeKind.CommonOrderable:case Kusto.Language.Symbols.ParameterTypeKind.CommonScalar:case Kusto.Language.Symbols.ParameterTypeKind.CommonScalarOrDynamic:if(commonType=Kusto.Language.Symbols.TypeFacts.GetCommonArgumentType(argumentParameters,argumentTypes),commonType==null){dx.add(Kusto.Language.DiagnosticFacts.GetNoCommonArgumentType().WithLocation(location));return}break}}},NamedArgumentsAllowed:function(signature){var fn=Bridge.as(signature.Symbol,Kusto.Language.Symbols.FunctionSymbol);return fn!=null&&!this._globals.IsBuiltInFunction(fn)},AllowLooseParameterMatching:function(signature){var fs;return(fs=Bridge.as(signature.Symbol,Kusto.Language.Symbols.FunctionSymbol))!=null&&(this._globals.IsDatabaseFunction(fs)||System.Array.getItem(fs.Signatures,0,Kusto.Language.Symbols.Signature).Declaration!=null)},CheckArgument:function(signature,argumentParameters,$arguments,argumentTypes,argumentIndex,diagnostics){var argument=System.Array.getItem($arguments,argumentIndex,Kusto.Language.Syntax.Expression),argumentType=System.Array.getItem(argumentTypes,argumentIndex,Kusto.Language.Symbols.TypeSymbol),parameter=System.Array.getItem(argumentParameters,argumentIndex,Kusto.Language.Symbols.Parameter),cn,commonType,commonType1,commonType2,commonType3,commonType4;if(parameter!=null)if(Bridge.is(argument,Kusto.Language.Syntax.StarExpression)&&signature.Symbol.Kind!==Kusto.Language.Symbols.SymbolKind.Operator)parameter.ArgumentKind!==Kusto.Language.Symbols.ArgumentKind.StarOnly&&parameter.ArgumentKind!==Kusto.Language.Symbols.ArgumentKind.StarAllowed&&diagnostics.add(Kusto.Language.DiagnosticFacts.GetStarExpressionNotAllowed().WithLocation(argument));else if(!Kusto.Language.Binding.Binder.IsDefaultValueIndicator(parameter,argument)){(cn=Bridge.as(argument,Kusto.Language.Syntax.CompoundNamedExpression))!=null&&diagnostics.add(Kusto.Language.DiagnosticFacts.GetCompoundNamedArgumentsNotSupported().WithLocation(cn.Names));argument=Kusto.Language.Binding.Binder.GetUnderlyingExpression(argument);switch(parameter.TypeKind){case Kusto.Language.Symbols.ParameterTypeKind.Any:break;case Kusto.Language.Symbols.ParameterTypeKind.Declared:switch(this.GetParameterMatchKind(signature,argumentParameters,argumentTypes,parameter,argument,argumentType)){case Kusto.Language.Binding.ParameterMatchKind.Compatible:case Kusto.Language.Binding.ParameterMatchKind.None:this.AllowLooseParameterMatching(signature)||diagnostics.add(Kusto.Language.DiagnosticFacts.GetTypeExpected$1(parameter.DeclaredTypes).WithLocation(argument));break}break;case Kusto.Language.Symbols.ParameterTypeKind.Scalar:this.CheckIsScalar(argument,diagnostics,argumentType);break;case Kusto.Language.Symbols.ParameterTypeKind.Integer:this.CheckIsInteger(argument,diagnostics);break;case Kusto.Language.Symbols.ParameterTypeKind.RealOrDecimal:this.CheckIsRealOrDecimal(argument,diagnostics);break;case Kusto.Language.Symbols.ParameterTypeKind.IntegerOrArray:this.CheckIsIntegerOrArray(argument,diagnostics);break;case Kusto.Language.Symbols.ParameterTypeKind.StringOrDynamic:this.CheckIsStringOrDynamic(argument,diagnostics);break;case Kusto.Language.Symbols.ParameterTypeKind.StringOrArray:this.CheckIsStringOrArray(argument,diagnostics);break;case Kusto.Language.Symbols.ParameterTypeKind.DynamicArray:this.CheckIsDynamicArray(argument,diagnostics);break;case Kusto.Language.Symbols.ParameterTypeKind.DynamicBag:this.CheckIsDynamicBag(argument,diagnostics);break;case Kusto.Language.Symbols.ParameterTypeKind.Number:this.CheckIsNumber(argument,diagnostics);break;case Kusto.Language.Symbols.ParameterTypeKind.NumberOrBool:this.CheckIsNumberOrBool(argument,diagnostics);break;case Kusto.Language.Symbols.ParameterTypeKind.Summable:this.CheckIsSummable(argument,diagnostics);break;case Kusto.Language.Symbols.ParameterTypeKind.Orderable:this.CheckIsOrderable(argument,diagnostics);break;case Kusto.Language.Symbols.ParameterTypeKind.NotBool:this.CheckIsScalar(argument,diagnostics)&&this.CheckIsNotType(argument,Kusto.Language.Symbols.ScalarTypes.Bool,diagnostics);break;case Kusto.Language.Symbols.ParameterTypeKind.NotRealOrBool:this.CheckIsScalar(argument,diagnostics)&&(this.CheckIsNotType(argument,Kusto.Language.Symbols.ScalarTypes.Real,diagnostics),this.CheckIsNotType(argument,Kusto.Language.Symbols.ScalarTypes.Bool,diagnostics));break;case Kusto.Language.Symbols.ParameterTypeKind.NotDynamic:this.CheckIsScalar(argument,diagnostics)&&this.CheckIsNotType(argument,Kusto.Language.Symbols.ScalarTypes.Dynamic,diagnostics);break;case Kusto.Language.Symbols.ParameterTypeKind.Tabular:this.CheckIsTabular(argument,diagnostics,argumentType);break;case Kusto.Language.Symbols.ParameterTypeKind.Database:this.CheckIsDatabase(argument,diagnostics);break;case Kusto.Language.Symbols.ParameterTypeKind.Cluster:this.CheckIsCluster(argument,diagnostics);break;case Kusto.Language.Symbols.ParameterTypeKind.Parameter0:this.CheckIsExactType(argument,System.Array.getItem(argumentTypes,0,Kusto.Language.Symbols.TypeSymbol),diagnostics);break;case Kusto.Language.Symbols.ParameterTypeKind.Parameter1:this.CheckIsExactType(argument,System.Array.getItem(argumentTypes,1,Kusto.Language.Symbols.TypeSymbol),diagnostics);break;case Kusto.Language.Symbols.ParameterTypeKind.Parameter2:this.CheckIsExactType(argument,System.Array.getItem(argumentTypes,2,Kusto.Language.Symbols.TypeSymbol),diagnostics);break;case Kusto.Language.Symbols.ParameterTypeKind.CommonScalar:this.CheckIsScalar(argument,diagnostics)&&(commonType=Kusto.Language.Symbols.TypeFacts.GetCommonArgumentType(argumentParameters,argumentTypes),commonType!=null&&this.CheckIsType(argument,commonType,Kusto.Language.Symbols.Conversion.Promotable,diagnostics));break;case Kusto.Language.Symbols.ParameterTypeKind.CommonScalarOrDynamic:this.CheckIsScalar(argument,diagnostics)&&(commonType1=Kusto.Language.Symbols.TypeFacts.GetCommonArgumentType(argumentParameters,argumentTypes),commonType1!=null&&this.CheckIsTypeOrDynamic(argument,commonType1,!0,diagnostics));break;case Kusto.Language.Symbols.ParameterTypeKind.CommonNumber:this.CheckIsNumber(argument,diagnostics)&&(commonType2=Kusto.Language.Symbols.TypeFacts.GetCommonArgumentType(argumentParameters,argumentTypes),commonType2!=null&&this.CheckIsType(argument,commonType2,Kusto.Language.Symbols.Conversion.Promotable,diagnostics));break;case Kusto.Language.Symbols.ParameterTypeKind.CommonSummable:this.CheckIsSummable(argument,diagnostics)&&(commonType3=Kusto.Language.Symbols.TypeFacts.GetCommonArgumentType(argumentParameters,argumentTypes),commonType3!=null&&this.CheckIsType(argument,commonType3,Kusto.Language.Symbols.Conversion.Promotable,diagnostics));break;case Kusto.Language.Symbols.ParameterTypeKind.CommonOrderable:this.CheckIsOrderable(argument,diagnostics)&&(commonType4=Kusto.Language.Symbols.TypeFacts.GetCommonArgumentType(argumentParameters,argumentTypes),commonType4!=null&&this.CheckIsType(argument,commonType4,Kusto.Language.Symbols.Conversion.Promotable,diagnostics));break}switch(parameter.ArgumentKind){case Kusto.Language.Symbols.ArgumentKind.Column:case Kusto.Language.Symbols.ArgumentKind.Column_Parameter0:case Kusto.Language.Symbols.ArgumentKind.Column_Parameter0_Common:this.CheckIsColumn(argument,diagnostics);break;case Kusto.Language.Symbols.ArgumentKind.Constant:this.CheckIsConstant(argument,diagnostics);break;case Kusto.Language.Symbols.ArgumentKind.Literal:this.CheckIsLiteral(argument,diagnostics)&&System.Array.getCount(parameter.Values,System.Object)>0&&this.CheckIsLiteralValue(argument,parameter.Values,parameter.IsCaseSensitive,diagnostics);break;case Kusto.Language.Symbols.ArgumentKind.LiteralNotEmpty:this.CheckIsLiteral(argument,diagnostics)&&this.CheckIsLiteralStringNotEmpty(argument,diagnostics);break}}},BindName:function(name,match,location,includeRowScope,inferColumns){includeRowScope===void 0&&(includeRowScope=!0);inferColumns===void 0&&(inferColumns=!0);switch(this._scopeKind){case Kusto.Language.Binding.ScopeKind.Normal:default:return this.BindNameInNormalScope(name,match,location,includeRowScope,inferColumns);case Kusto.Language.Binding.ScopeKind.Aggregate:return this.BindNameInAggregateScope(name,match,location);case Kusto.Language.Binding.ScopeKind.Option:return this.BindNameInOptionScope(name,match,location);case Kusto.Language.Binding.ScopeKind.PlugIn:return this.BindNameInPlugInScope(name,match,location)}},BindNameInAggregateScope:function(name,match,location){return this.BindNameInNormalScope(name,match,location,!1,!1)},BindNameInOptionScope:function(name,match,location){var list=Kusto.Language.Binding.Binder.s_symbolListPool.AllocateFromPool(),option;try{return option=this._globals.GetOption(name),option!=null&&list.add(option),this.GetMatchingSymbolResult(name,location,list,!1)}finally{Kusto.Language.Binding.Binder.s_symbolListPool.ReturnToPool(list)}},BindNameInPlugInScope:function(name,match,location){var list=Kusto.Language.Binding.Binder.s_symbolListPool.AllocateFromPool();try{return this.GetFunctionsInPlugInScope(location,name,Kusto.Language.IncludeFunctionKind.All,list),this.GetMatchingSymbolResult(name,location,list,!1)}finally{Kusto.Language.Binding.Binder.s_symbolListPool.ReturnToPool(list)}},BindNameInNormalScope:function(name,match,location,includeRowScope,inferColumns){var $t,list,allowZeroArgumentInvocation,eges,col,grp,savePathScope,s,alz,tuple,tuple1;if(Bridge.referenceEquals(name,""))return Kusto.Language.Binding.Binder.ErrorInfo;list=Kusto.Language.Binding.Binder.s_symbolListPool.AllocateFromPool();try{if(allowZeroArgumentInvocation=!1,this._pathScope!=null){if((eges=Kusto.Language.Binding.Binder.GetMacroExpandScope(location))!=null&&(eges.GetMembers$1(name,match,list),list.Count>0))return this.GetMatchingSymbolResult(name,location,list,allowZeroArgumentInvocation);if(Bridge.is(this._pathScope,Kusto.Language.Symbols.DynamicBagSymbol))return this._pathScope.GetMembers$1(name,match,list),list.Count===1&&(col=Bridge.as(list.getItem(0),Kusto.Language.Symbols.ColumnSymbol))!=null?new Kusto.Language.Binding.SemanticInfo.$ctor5(Kusto.Language.Symbols.ScalarTypes.GetDynamic(col.Type)):Kusto.Language.Binding.Binder.LiteralDynamicInfo;else if(Bridge.is(this._pathScope,Kusto.Language.Symbols.DynamicSymbol))return Kusto.Language.Binding.Binder.LiteralDynamicInfo;else if(Bridge.referenceEquals(this._pathScope,Kusto.Language.Symbols.ScalarTypes.Unknown))return Kusto.Language.Binding.Binder.UnknownInfo;else if(Bridge.referenceEquals(this._pathScope,Kusto.Language.Symbols.ErrorSymbol.Instance))return Kusto.Language.Binding.Binder.ErrorInfo;else if((grp=Bridge.as(this._pathScope,Kusto.Language.Symbols.GroupSymbol))!=null&&Kusto.Language.Binding.Binder.IsPassThrough(grp)){savePathScope=this._pathScope;$t=Bridge.getEnumerator(grp.Members,Kusto.Language.Symbols.Symbol);try{while($t.moveNext())s=$t.Current,this._pathScope=s,alz=this.GetMatchingSymbolsInNormalScope(name,match,location,list,includeRowScope,inferColumns),allowZeroArgumentInvocation=!!(allowZeroArgumentInvocation|alz)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return this._pathScope=savePathScope,Kusto.Language.Binding.Binder.MakeDistinct(list),this.GetMatchingSymbolResult(name,location,list,allowZeroArgumentInvocation)}}else if(Bridge.referenceEquals(name,"$left")&&this._rowScope!=null&&this._rightRowScope!=null)return tuple=this.GetTuple(this._rowScope),new Kusto.Language.Binding.SemanticInfo.$ctor3(tuple,tuple);else if(Bridge.referenceEquals(name,"$right")&&this._rightRowScope!=null)return tuple1=this.GetTuple(this._rightRowScope),new Kusto.Language.Binding.SemanticInfo.$ctor3(tuple1,tuple1);return list.Count===0&&(allowZeroArgumentInvocation=this.GetMatchingSymbolsInNormalScope(name,match,location,list,includeRowScope,inferColumns)),this.GetMatchingSymbolResult(name,location,list,allowZeroArgumentInvocation)}finally{Kusto.Language.Binding.Binder.s_symbolListPool.ReturnToPool(list)}},CanBindName:function(name,match,location,includeRowScope,inferColumns){var $t,list,grp,savePathScope,s,_,_1;if(includeRowScope===void 0&&(includeRowScope=!0),inferColumns===void 0&&(inferColumns=!0),Bridge.referenceEquals(name,""))return!1;list=Kusto.Language.Binding.Binder.s_symbolListPool.AllocateFromPool();try{if(this._pathScope!=null){if(Bridge.referenceEquals(this._pathScope,Kusto.Language.Symbols.ScalarTypes.Dynamic))return!0;else if(Bridge.referenceEquals(this._pathScope,Kusto.Language.Symbols.ScalarTypes.Unknown))return!0;else if(Bridge.referenceEquals(this._pathScope,Kusto.Language.Symbols.ErrorSymbol.Instance))return!0;else if((grp=Bridge.as(this._pathScope,Kusto.Language.Symbols.GroupSymbol))!=null&&Kusto.Language.Binding.Binder.IsPassThrough(grp)){savePathScope=this._pathScope;$t=Bridge.getEnumerator(grp.Members,Kusto.Language.Symbols.Symbol);try{while($t.moveNext())s=$t.Current,this._pathScope=s,_=this.GetMatchingSymbolsInNormalScope(name,match,location,list,includeRowScope,inferColumns)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return this._pathScope=savePathScope,list.Count>0}}else if(Bridge.referenceEquals(name,"$left")&&this._rowScope!=null&&this._rightRowScope!=null)return!0;else if(Bridge.referenceEquals(name,"$right")&&this._rightRowScope!=null)return!0;return list.Count===0&&(_1=this.GetMatchingSymbolsInNormalScope(name,match,location,list,includeRowScope,inferColumns)),list.Count>0}finally{Kusto.Language.Binding.Binder.s_symbolListPool.ReturnToPool(list)}},IsInsideCurrentDatabaseFunctionBody:function(location){return this.IsInsideCurrentDatabaseFunctionSymbol()?!0:Kusto.Language.Binding.Binder.IsInsideCreateFunctionCommand(location)?!0:!1},IsInsideCurrentDatabaseFunctionSymbol:function(){for(var binder=this;;){if(binder._currentFunction!=null&&Bridge.referenceEquals(this._globals.GetDatabase$1(binder._currentFunction),this._currentDatabase))return!0;if(binder._outerBinder!=null){binder=binder._outerBinder;continue}return!1}},GetMatchingSymbolsInNormalScope:function(name,match,location,list,includeRowScope,inferColumns){var allowZeroArgumentInvocation=!1,col,tuple,ds,table;if(Kusto.Language.Binding.Binder.IsFunctionCallName(location))Bridge.is(this._pathScope,Kusto.Language.Symbols.DatabaseSymbol)?Bridge.referenceEquals(name,Kusto.Language.Functions.Table.Name)?list.add(Kusto.Language.Functions.Table):Bridge.referenceEquals(name,Kusto.Language.Functions.ExternalTable.Name)?list.add(Kusto.Language.Functions.ExternalTable):Bridge.referenceEquals(name,Kusto.Language.Functions.MaterializedView.Name)?list.add(Kusto.Language.Functions.MaterializedView):this._pathScope.GetMembers$1(name,24,list):Bridge.is(this._pathScope,Kusto.Language.Symbols.ClusterSymbol)&&Bridge.referenceEquals(name,Kusto.Language.Functions.Database.Name)?list.add(Kusto.Language.Functions.Database):this.GetFunctionsInScope(this._scopeKind,location,name,Kusto.Language.IncludeFunctionKind.All,list);else if(this.IsInsideCurrentDatabaseFunctionBody(location)&&this._currentDatabase.GetAnyTable(name)!=null&&(match&=-9),this._pathScope!=null)if(col={},(tuple=Bridge.as(this._pathScope,Kusto.Language.Symbols.TupleSymbol))!=null&&tuple.RelatedTable!=null&&tuple.RelatedTable.IsOpen&&inferColumns&&this.TryGetDeclaredOrInferredColumn(tuple.RelatedTable,name,col))list.add(col.v);else if((ds=Bridge.as(this._pathScope,Kusto.Language.Symbols.DatabaseSymbol))!=null){if(this._pathScope.GetMembers$1(name,match&Kusto.Language.Symbols.SymbolMatch.Function,list),Kusto.Language.Binding.Binder.RemoveFunctionsThatCannotBeInvokedWithZeroArgs(list),allowZeroArgumentInvocation=list.Count>0,list.Count===0&&this._pathScope.GetMembers$1(name,match&-9,list),list.Count===0&&ds.IsOpen)return table=this.GetOpenTable(name,ds),list.add(table),allowZeroArgumentInvocation}else(!Bridge.is(this._pathScope,Kusto.Language.Symbols.TableSymbol)||Kusto.Language.Binding.Binder.IsInsideControlCommandProper(location))&&this._pathScope.GetMembers$1(name,match,list);else{if(list.Count===0&&this._rowScope!=null&&includeRowScope&&(this._rowScope.GetMembers$1(name,match,list),list.Count===1&&this._rightRowScope!=null&&this._commonColumnsOnly&&(this._rightRowScope.GetMembers$1(name,match,list),list.Count===2))){var left=Bridge.cast(list.getItem(0),Kusto.Language.Symbols.ColumnSymbol),right=Bridge.cast(list.getItem(1),Kusto.Language.Symbols.ColumnSymbol),commonColumn=new Kusto.Language.Symbols.ColumnSymbol(left.Name,left.Type,left.Description,System.Array.init([left,right],Kusto.Language.Symbols.ColumnSymbol),void 0,void 0);list.clear();list.add(commonColumn)}list.Count===0&&this._rightRowScope!=null&&this._rightRowScope.GetMembers$1(name,match,list);list.Count===0&&(this._localScope.GetSymbols$1(name,match,list),allowZeroArgumentInvocation=list.Count>0);list.Count===0&&Kusto.Language.Binding.Binder.IsPossibleInvocableFunctionWithoutArgumentList(location)&&(match&Kusto.Language.Symbols.SymbolMatch.Function)!=0&&(this.GetFunctionsInScope(this._scopeKind,location,name,Kusto.Language.IncludeFunctionKind.DatabaseFunctions,list),Kusto.Language.Binding.Binder.RemoveFunctionsThatCannotBeInvokedWithZeroArgs(list),allowZeroArgumentInvocation=list.Count>0);list.Count===0&&this._currentDatabase!=null&&this._currentDatabase.GetMembers$1(name,match,list);list.Count===0&&this._currentCluster!=null&&(match&Kusto.Language.Symbols.SymbolMatch.Database)!=0&&this._currentCluster.GetMembers$1(name,match,list);list.Count===0&&(match&Kusto.Language.Symbols.SymbolMatch.Function)!=0&&this.GetFunctionsInScope(this._scopeKind,location,name,Kusto.Language.IncludeFunctionKind.BuiltInFunctions,list);list.Count===0&&this._rowScope!=null&&this._rowScope.IsOpen&&(match&Kusto.Language.Symbols.SymbolMatch.Column)!=0&&includeRowScope&&inferColumns&&list.add(this.GetOpenTableInferredColumn(name,this._rowScope))}return allowZeroArgumentInvocation},GetMatchingSymbolResult:function(name,location,matches,allowZeroArgumentInvocation){var $t,item,resultType,fn,sig,funResult,returnType,eg,result,oldScopeKind,ds,ds1;if(matches.Count===1)return item=matches.getItem(0),resultType=Kusto.Language.Binding.Binder.GetResultType(item),(fn=Bridge.as(resultType,Kusto.Language.Symbols.FunctionSymbol))!=null&&Kusto.Language.Binding.Binder.IsPossibleInvocableFunctionWithoutArgumentList(location)?(sig=System.Linq.Enumerable.from(fn.Signatures,Kusto.Language.Symbols.Signature).firstOrDefault(function(s){return s.MinArgumentCount===0},null),sig!=null&&allowZeroArgumentInvocation?(funResult=this.GetFunctionCallResult(sig,Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Syntax.Expression).Instance,Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol).Instance,location),new Kusto.Language.Binding.SemanticInfo.$ctor3(item,funResult.Type,void 0,!1,funResult.Info)):(returnType=this.GetCommonReturnType(fn.Signatures,Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Syntax.Expression).Instance,Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol).Instance,location),new Kusto.Language.Binding.SemanticInfo.$ctor2(item,returnType,Kusto.Language.DiagnosticFacts.GetFunctionRequiresArgumentList(name).WithLocation(location)))):(eg=Bridge.as(resultType,Kusto.Language.Symbols.EntityGroupSymbol))!=null?(result=this.GetFunctionCallResult(eg.Signature,Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Syntax.Expression).Instance,Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol).Instance,location),new Kusto.Language.Binding.SemanticInfo.$ctor3(item,result.Type,void 0,!1,result.Info)):Kusto.Language.Binding.Binder.CreateSemanticInfo(item);else if(matches.Count===0){if(this._scopeKind!==Kusto.Language.Binding.ScopeKind.Normal&&(oldScopeKind=this._scopeKind,this._scopeKind=Kusto.Language.Binding.ScopeKind.Normal,this.GetMatchingSymbolsInNormalScope(name,Kusto.Language.Symbols.SymbolMatch.Any,location,matches,!0,!0),this._scopeKind=oldScopeKind,matches.Count>0))switch(this._scopeKind){case Kusto.Language.Binding.ScopeKind.Aggregate:return new Kusto.Language.Binding.SemanticInfo.$ctor4(Kusto.Language.Symbols.ErrorSymbol.Instance,Kusto.Language.DiagnosticFacts.GetInvalidNameInAggregateContext(name).WithLocation(location));case Kusto.Language.Binding.ScopeKind.PlugIn:return new Kusto.Language.Binding.SemanticInfo.$ctor4(Kusto.Language.Symbols.ErrorSymbol.Instance,Kusto.Language.DiagnosticFacts.GetInvalidNameInPlugInContext(name).WithLocation(location));case Kusto.Language.Binding.ScopeKind.Option:return null}if(Kusto.Language.Binding.Binder.IsFunctionCallName(location))return this._globals.GetAggregate(name)!=null&&this._scopeKind!==Kusto.Language.Binding.ScopeKind.Aggregate?new Kusto.Language.Binding.SemanticInfo.$ctor4(Kusto.Language.Symbols.ErrorSymbol.Instance,Kusto.Language.DiagnosticFacts.GetAggregateNotAllowedInThisContext(name).WithLocation(location)):this._globals.GetPlugIn(name)!=null&&this._scopeKind!==Kusto.Language.Binding.ScopeKind.PlugIn?new Kusto.Language.Binding.SemanticInfo.$ctor4(Kusto.Language.Symbols.ErrorSymbol.Instance,Kusto.Language.DiagnosticFacts.GetPluginNotAllowedInThisContext(name).WithLocation(location)):Kusto.Language.Binding.Binder.IsEvaluateFunctionName(location)?Kusto.Language.PlugIns.GetPlugIn(name)!=null?new Kusto.Language.Binding.SemanticInfo.$ctor4(Kusto.Language.Symbols.ErrorSymbol.Instance,Kusto.Language.DiagnosticFacts.GetPlugInFunctionIsNotEnabled(name).WithLocation(location)):new Kusto.Language.Binding.SemanticInfo.$ctor4(Kusto.Language.Symbols.ErrorSymbol.Instance,Kusto.Language.DiagnosticFacts.GetPlugInFunctionNotDefined(name).WithLocation(location)):this._isFuzzy?null:(ds=Bridge.as(this._pathScope,Kusto.Language.Symbols.DatabaseSymbol))!=null?ds!=null&&ds.IsOpen?new Kusto.Language.Binding.SemanticInfo.$ctor5(new Kusto.Language.Symbols.TableSymbol.$ctor4("").WithIsOpen(!0)):new Kusto.Language.Binding.SemanticInfo.$ctor4(new Kusto.Language.Symbols.TableSymbol.$ctor4("").WithIsOpen(!0),Kusto.Language.DiagnosticFacts.GetNameDoesNotReferToAnyKnownFunction(name).WithLocation(location)):Kusto.Language.Binding.Binder.IsInTabularContext(location)?new Kusto.Language.Binding.SemanticInfo.$ctor4(new Kusto.Language.Symbols.TableSymbol.$ctor4("").WithIsOpen(!0),Kusto.Language.DiagnosticFacts.GetNameDoesNotReferToAnyKnownFunction(name).WithLocation(location)):Kusto.Language.Binding.Binder.IsPossibleInternalFunction(name)?Kusto.Language.Binding.Binder.UnknownInfo:new Kusto.Language.Binding.SemanticInfo.$ctor4(Kusto.Language.Symbols.ErrorSymbol.Instance,Kusto.Language.DiagnosticFacts.GetNameDoesNotReferToAnyKnownFunction(name).WithLocation(location));else if(Kusto.Language.Binding.Binder.IsInTabularContext(location))return this._isFuzzy?new Kusto.Language.Binding.SemanticInfo.$ctor4((new Kusto.Language.Symbols.TableSymbol.ctor).WithIsOpen(!0),Kusto.Language.DiagnosticFacts.GetFuzzyTableNotDefined(name).WithLocation(location)):(ds1=Bridge.as(this._pathScope,Kusto.Language.Symbols.DatabaseSymbol))!=null&&ds1.IsOpen?new Kusto.Language.Binding.SemanticInfo.$ctor5(new Kusto.Language.Symbols.TableSymbol.$ctor4(name).WithIsOpen(!0)):new Kusto.Language.Binding.SemanticInfo.$ctor4(new Kusto.Language.Symbols.TableSymbol.$ctor4(name).WithIsOpen(!0),Kusto.Language.DiagnosticFacts.GetNameDoesNotReferToAnyKnownTable(name).WithLocation(location));return new Kusto.Language.Binding.SemanticInfo.$ctor4(Kusto.Language.Symbols.ErrorSymbol.Instance,Kusto.Language.DiagnosticFacts.GetNameDoesNotReferToAnyKnownItem(name).WithLocation(location))}else return new Kusto.Language.Binding.SemanticInfo.$ctor2(new Kusto.Language.Symbols.GroupSymbol.$ctor1(($t=Kusto.Language.Symbols.Symbol,System.Linq.Enumerable.from(matches,$t).toList($t))),Kusto.Language.Symbols.ErrorSymbol.Instance,Kusto.Language.DiagnosticFacts.GetNameRefersToMoreThanOneItem(name).WithLocation(location))},GetBinaryOperatorInfo$1:function(kind,left,right,location){return this.GetBinaryOperatorInfo(kind,left,Kusto.Language.Binding.Binder.GetResultTypeOrError(left),right,Kusto.Language.Binding.Binder.GetResultTypeOrError(right),location)},GetBinaryOperatorInfo:function(kind,left,leftType,right,rightType,location){var $arguments=Kusto.Language.Binding.Binder.s_expressionListPool.AllocateFromPool(),argumentTypes=Kusto.Language.Binding.Binder.s_typeListPool.AllocateFromPool();try{return $arguments.add(left),$arguments.add(right),argumentTypes.add(leftType),argumentTypes.add(rightType),this.GetOperatorInfo$1(kind,$arguments,argumentTypes,location,!0)}finally{Kusto.Language.Binding.Binder.s_expressionListPool.ReturnToPool($arguments);Kusto.Language.Binding.Binder.s_typeListPool.ReturnToPool(argumentTypes)}},GetUnaryOperatorInfo:function(kind,operand,location){var $arguments=Kusto.Language.Binding.Binder.s_expressionListPool.AllocateFromPool();try{return $arguments.add(operand),this.GetOperatorInfo(kind,$arguments,location,!0)}finally{Kusto.Language.Binding.Binder.s_expressionListPool.ReturnToPool($arguments)}},GetOperatorInfo:function(kind,$arguments,location,requireAllArgumentsMatch){var argumentTypes,i;requireAllArgumentsMatch===void 0&&(requireAllArgumentsMatch=!1);argumentTypes=Kusto.Language.Binding.Binder.s_typeListPool.AllocateFromPool();try{for(i=0;i<System.Array.getCount($arguments,Kusto.Language.Syntax.Expression);i=i+1|0)argumentTypes.add(Kusto.Language.Binding.Binder.GetResultTypeOrError(System.Array.getItem($arguments,i,Kusto.Language.Syntax.Expression)));return this.GetOperatorInfo$1(kind,$arguments,argumentTypes,location,requireAllArgumentsMatch)}finally{Kusto.Language.Binding.Binder.s_typeListPool.ReturnToPool(argumentTypes)}},GetOperatorInfo$1:function(kind,$arguments,argumentTypes,location,requireAllArgumentsMatch){var matchingSignatures=Kusto.Language.Binding.Binder.s_signatureListPool.AllocateFromPool(),diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),op,funResult,resultType,unwrappedArgumentTypes,unwrappedResultType,returnType;try{if(op=this._globals.GetOperator(kind),this.GetBestMatchingSignatures(op.Signatures,$arguments,argumentTypes,matchingSignatures,requireAllArgumentsMatch),matchingSignatures.Count===1){if(this.CheckSignature(matchingSignatures.getItem(0),$arguments,argumentTypes,location,diagnostics),funResult=this.GetFunctionCallResult(matchingSignatures.getItem(0),$arguments,argumentTypes,location),resultType=funResult.Type,Bridge.referenceEquals(funResult.Type,Kusto.Language.Symbols.ScalarTypes.Dynamic)&&Kusto.Language.Binding.Binder.HasDynamicPrimitives(argumentTypes)){unwrappedArgumentTypes=Kusto.Language.Binding.Binder.s_typeListPool.AllocateFromPool();try{Kusto.Language.Binding.Binder.GetUnwrappedDynamicPrimitives(argumentTypes,unwrappedArgumentTypes);unwrappedResultType=this.GetOperatorInfo$1(kind,$arguments,unwrappedArgumentTypes,location,requireAllArgumentsMatch).ResultType;!Bridge.is(unwrappedResultType,Kusto.Language.Symbols.ScalarSymbol)||Bridge.is(unwrappedResultType,Kusto.Language.Symbols.DynamicSymbol)||Bridge.referenceEquals(unwrappedResultType,Kusto.Language.Symbols.ScalarTypes.Unknown)||(resultType=Kusto.Language.Symbols.ScalarTypes.GetDynamic(unwrappedResultType))}finally{Kusto.Language.Binding.Binder.s_typeListPool.ReturnToPool(unwrappedArgumentTypes)}}return new Kusto.Language.Binding.SemanticInfo.$ctor1(matchingSignatures.getItem(0),resultType,diagnostics,Kusto.Language.Binding.Binder.AllAreConstant($arguments),void 0)}else return matchingSignatures.Count===0&&requireAllArgumentsMatch&&this.GetBestMatchingSignatures(op.Signatures,$arguments,argumentTypes,matchingSignatures,!1),Kusto.Language.Binding.Binder.ArgumentsHaveErrorsOrUnknown(argumentTypes)||diagnostics.add(Kusto.Language.DiagnosticFacts.GetOperatorNotDefined$1(location.ToString(Kusto.Language.Syntax.IncludeTrivia.Interior),argumentTypes).WithLocation(location)),returnType=this.GetCommonReturnType(matchingSignatures,$arguments,argumentTypes,location),new Kusto.Language.Binding.SemanticInfo.$ctor3(op,returnType,diagnostics)}finally{Kusto.Language.Binding.Binder.s_signatureListPool.ReturnToPool(matchingSignatures);Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},GetBinaryOperatorResultType:function(kind,leftType,rightType,location,diagnostics){diagnostics===void 0&&(diagnostics=null);var fakeLeftArg=Kusto.Language.Syntax.FakeExpression.Create(leftType),fakeRightArg=Kusto.Language.Syntax.FakeExpression.Create(rightType);return this.GetBinaryOperatorResultType$1(kind,fakeLeftArg,fakeRightArg,location||fakeLeftArg,diagnostics)},GetBinaryOperatorResultType$1:function(kind,left,right,location,diagnostics){diagnostics===void 0&&(diagnostics=null);var info=this.GetBinaryOperatorInfo(kind,left,Kusto.Language.Binding.Binder.GetResultTypeOrError(left),right,Kusto.Language.Binding.Binder.GetResultTypeOrError(right),location||left);return diagnostics!=null&&diagnostics.AddRange(info.Diagnostics),info.ResultType},CreateProjectionColumns$1:function(expressions,builder,diagnostics,style,doNotRepeat){var $t,elem;style===void 0&&(style=0);doNotRepeat===void 0&&(doNotRepeat=!1);$t=Bridge.getEnumerator(expressions,"GetEnumerator$1");try{while($t.moveNext())elem=$t.Current,this.CreateProjectionColumns(elem.Element$1,builder,diagnostics,style,doNotRepeat,void 0,void 0)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}},CreateProjectionColumns:function(expression,builder,diagnostics,style,doNotRepeat,columnType,columnName){var $t,$t1,$t2,$t3,$t4,$t5,$t6,col,type,oe,n,cs,n1,tu,firstCol,i,fs1,c,cn,tupleType,i1,nameDecl,name,fs11,i2,nameDecl1,expr,name1,c1,f,ftype,ts,fs,c2,name2,s,c3,rs,group,g,colName,name3;if(style===void 0&&(style=0),doNotRepeat===void 0&&(doNotRepeat=!1),columnType===void 0&&(columnType=null),columnName===void 0&&(columnName=null),oe=Bridge.as(expression,Kusto.Language.Syntax.OrderedExpression),oe!=null&&(expression=oe.Expression),expression!=null)if(style===Kusto.Language.Binding.Binder.ProjectionStyle.Rename){do{if(Bridge.is(expression,Kusto.Language.Syntax.SimpleNamedExpression)){n=Bridge.cast(expression,Kusto.Language.Syntax.SimpleNamedExpression);(cs=Bridge.as(Kusto.Language.Binding.Binder.GetReferencedSymbol$1(n.Expression),Kusto.Language.Symbols.ColumnSymbol))!=null?(col=builder.Rename(cs.Name,n.Name.SimpleName,diagnostics,n.Name),col!=null&&this.SetSemanticInfo(n.Name,Kusto.Language.Binding.Binder.CreateSemanticInfo(col))):diagnostics.add(Kusto.Language.DiagnosticFacts.GetColumnExpected().WithLocation(n.Expression));break}diagnostics.add(Kusto.Language.DiagnosticFacts.GetRenameAssignmentExpected().WithLocation(expression));break}while(0)}else do{if(Bridge.is(expression,Kusto.Language.Syntax.SimpleNamedExpression)){if(n1=Bridge.cast(expression,Kusto.Language.Syntax.SimpleNamedExpression),(tu=Bridge.as(n1.Expression.RawResultType,Kusto.Language.Symbols.TupleSymbol))!=null){if(System.Array.getCount(tu.Columns,Kusto.Language.Symbols.ColumnSymbol)>0){if(firstCol=System.Array.getItem(tu.Columns,0,Kusto.Language.Symbols.ColumnSymbol),col=new Kusto.Language.Symbols.ColumnSymbol(n1.Name.SimpleName,columnType||firstCol.Type,void 0,System.Array.init([firstCol],Kusto.Language.Symbols.ColumnSymbol),firstCol.Source,void 0),builder.Declare(col,diagnostics,n1.Name,!0),this.SetSemanticInfo(n1.Name,Kusto.Language.Binding.Binder.CreateSemanticInfo(col)),doNotRepeat&&builder.DoNotAdd(System.Array.getItem(tu.Columns,0,Kusto.Language.Symbols.ColumnSymbol)),style===Kusto.Language.Binding.Binder.ProjectionStyle.Print)break;for(i=1;i<System.Array.getCount(tu.Members,Kusto.Language.Symbols.Symbol);i=i+1|0)(fs1=Bridge.as(Kusto.Language.Binding.Binder.GetReferencedSymbol$1(n1.Expression),Kusto.Language.Symbols.FunctionSymbol))!=null?this.AddFunctionTupleResultColumn(fs1,System.Array.getItem(tu.Columns,i,Kusto.Language.Symbols.ColumnSymbol),builder,doNotRepeat,style===Kusto.Language.Binding.Binder.ProjectionStyle.Summarize):builder.Add(System.Array.getItem(tu.Columns,i,Kusto.Language.Symbols.ColumnSymbol),void 0,!1,doNotRepeat)}}else(c=Bridge.as(n1.Expression.ReferencedSymbol,Kusto.Language.Symbols.ColumnSymbol))!=null?(col=new Kusto.Language.Symbols.ColumnSymbol(n1.Name.SimpleName,columnType||c.Type,void 0,void 0,n1.Expression,void 0),builder.Declare(col,diagnostics,n1.Name,!0),this.SetSemanticInfo(n1.Name,Kusto.Language.Binding.Binder.CreateSemanticInfo(col)),doNotRepeat&&builder.DoNotAdd(c)):(col=new Kusto.Language.Symbols.ColumnSymbol(n1.Name.SimpleName,columnType||Kusto.Language.Binding.Binder.GetResultTypeOrError(n1.Expression),void 0,void 0,n1.Expression,void 0),builder.Declare(col,diagnostics,n1.Name,style===Kusto.Language.Binding.Binder.ProjectionStyle.Replace||style===Kusto.Language.Binding.Binder.ProjectionStyle.Extend),this.SetSemanticInfo(n1.Name,Kusto.Language.Binding.Binder.CreateSemanticInfo(col)));break}if(Bridge.is(expression,Kusto.Language.Syntax.CompoundNamedExpression)){if(cn=Bridge.cast(expression,Kusto.Language.Syntax.CompoundNamedExpression),(tupleType=Bridge.as(cn.Expression.RawResultType,Kusto.Language.Symbols.TupleSymbol))!=null){for(i1=0;i1<System.Array.getCount(tupleType.Columns,Kusto.Language.Symbols.ColumnSymbol);i1=i1+1|0)col=System.Array.getItem(tupleType.Columns,i1,Kusto.Language.Symbols.ColumnSymbol),type=columnType||col.Type,i1<cn.Names.Names.Count?(nameDecl=cn.Names.Names.getItem$1(i1).Element$1,name=nameDecl.SimpleName,col=new Kusto.Language.Symbols.ColumnSymbol(name,type,void 0,col.OriginalColumns,col.Source,void 0),builder.Declare(col,diagnostics,nameDecl,style===Kusto.Language.Binding.Binder.ProjectionStyle.Replace||style===Kusto.Language.Binding.Binder.ProjectionStyle.Extend),this.SetSemanticInfo(nameDecl,Kusto.Language.Binding.Binder.CreateSemanticInfo(col)),doNotRepeat&&builder.DoNotAdd(System.Array.getItem(tupleType.Columns,i1,Kusto.Language.Symbols.ColumnSymbol))):style!==Kusto.Language.Binding.Binder.ProjectionStyle.Print&&((fs11=Bridge.as(cn.Expression.ReferencedSymbol,Kusto.Language.Symbols.FunctionSymbol))!=null?this.AddFunctionTupleResultColumn(fs11,col,builder,doNotRepeat,style===Kusto.Language.Binding.Binder.ProjectionStyle.Summarize):builder.Add(col,void 0,style===Kusto.Language.Binding.Binder.ProjectionStyle.Replace||style===Kusto.Language.Binding.Binder.ProjectionStyle.Extend,doNotRepeat));for(i2=System.Array.getCount(tupleType.Members,Kusto.Language.Symbols.Symbol);i2<cn.Names.Names.Count;i2=i2+1|0)nameDecl1=cn.Names.Names.getItem$1(i2),diagnostics.add(Kusto.Language.DiagnosticFacts.GetTheNameDoesNotHaveCorrespondingExpression().WithLocation(nameDecl1))}else cn.Names.Names.Count===1?(expr=cn.Expression,name1=cn.Names.Names.getItem$1(0).Element$1,(c1=Bridge.as(expr.ReferencedSymbol,Kusto.Language.Symbols.ColumnSymbol))!=null?(col=new Kusto.Language.Symbols.ColumnSymbol(name1.SimpleName,columnType||c1.Type,void 0,System.Array.init([c1],Kusto.Language.Symbols.ColumnSymbol),void 0,void 0),builder.Declare(col,diagnostics,name1,!0),this.SetSemanticInfo(name1,Kusto.Language.Binding.Binder.CreateSemanticInfo(col)),doNotRepeat&&builder.DoNotAdd(c1)):(col=new Kusto.Language.Symbols.ColumnSymbol(name1.SimpleName,columnType||Kusto.Language.Binding.Binder.GetResultTypeOrError(cn.Expression),void 0,void 0,expr,void 0),builder.Declare(col,diagnostics,name1,style===Kusto.Language.Binding.Binder.ProjectionStyle.Replace||style===Kusto.Language.Binding.Binder.ProjectionStyle.Extend),this.SetSemanticInfo(name1,Kusto.Language.Binding.Binder.CreateSemanticInfo(col)))):diagnostics.add(Kusto.Language.DiagnosticFacts.GetTheExpressionDoesNotHaveMultipleValues().WithLocation(cn.Names));break}if(Bridge.is(expression,Kusto.Language.Syntax.FunctionCallExpression)){if(f=Bridge.cast(expression,Kusto.Language.Syntax.FunctionCallExpression),col=Kusto.Language.Binding.Binder.GetResultColumn(f),col!=null)builder.Declare(col.WithType(columnType||col.Type),diagnostics,expression,style===Kusto.Language.Binding.Binder.ProjectionStyle.Replace),doNotRepeat&&builder.DoNotAdd(col);else if(ftype=f.RawResultType||Kusto.Language.Symbols.ErrorSymbol.Instance,ts=Bridge.as(ftype,Kusto.Language.Symbols.TupleSymbol),style===Kusto.Language.Binding.Binder.ProjectionStyle.Print&&columnName!=null&&(ts==null||System.Array.getCount(ts.Columns,Kusto.Language.Symbols.ColumnSymbol)===1))ts!=null&&System.Array.getCount(ts.Columns,Kusto.Language.Symbols.ColumnSymbol)===1&&(ftype=System.Array.getItem(ts.Columns,0,Kusto.Language.Symbols.ColumnSymbol).Type),col=new Kusto.Language.Symbols.ColumnSymbol(columnName,columnType||ftype,void 0,void 0,f,void 0),builder.Add(col,columnName,!1,!1);else if(ts!=null&&(fs=Bridge.as(Kusto.Language.Binding.Binder.GetReferencedSymbol$1(f),Kusto.Language.Symbols.FunctionSymbol))!=null){$t=Bridge.getEnumerator(ts.Members,Kusto.Language.Symbols.Symbol);try{while($t.moveNext())c2=Bridge.cast($t.Current,Kusto.Language.Symbols.ColumnSymbol),this.AddFunctionTupleResultColumn(fs,c2,builder,doNotRepeat,style===Kusto.Language.Binding.Binder.ProjectionStyle.Summarize)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}else name2=($t1=Kusto.Language.Binding.Binder.GetFunctionResultName(f,null,this._rowScope),$t1!=null?$t1:($t2=columnName,$t2!=null?$t2:this.GetDefaultColumnName(expression,style===Kusto.Language.Binding.Binder.ProjectionStyle.Extend))),col=new Kusto.Language.Symbols.ColumnSymbol(name2,columnType||ftype,void 0,void 0,f,void 0),builder.Add(col,void 0,style===Kusto.Language.Binding.Binder.ProjectionStyle.Replace||style===Kusto.Language.Binding.Binder.ProjectionStyle.Extend,!1);break}if(Bridge.is(expression,Kusto.Language.Syntax.StarExpression)){s=Bridge.cast(expression,Kusto.Language.Syntax.StarExpression);$t3=Bridge.getEnumerator(this.GetDeclaredAndInferredColumns(this.RowScopeOrEmpty),Kusto.Language.Symbols.ColumnSymbol);try{while($t3.moveNext())c3=$t3.Current,builder.Add(c3,void 0,!0,doNotRepeat)}finally{Bridge.is($t3,System.IDisposable)&&$t3.System$IDisposable$Dispose()}break}rs=Kusto.Language.Binding.Binder.GetReferencedSymbol$1(expression);col=Kusto.Language.Binding.Binder.GetResultColumn(expression);col!=null&&style!==Kusto.Language.Binding.Binder.ProjectionStyle.GraphMatch?(builder.Declare(col.WithType(columnType||col.Type),diagnostics,expression,style===Kusto.Language.Binding.Binder.ProjectionStyle.Replace),doNotRepeat&&builder.DoNotAdd(col)):(group=Bridge.as(rs,Kusto.Language.Symbols.GroupSymbol))!=null&&style===Kusto.Language.Binding.Binder.ProjectionStyle.Reorder?Kusto.Language.Binding.Binder.AddProjectionColumns(builder,Kusto.Language.Binding.Binder.OrderColumns(System.Linq.Enumerable.from(group.Members).ofType(Kusto.Language.Symbols.ColumnSymbol),oe!=null?oe.Ordering:null),!0):(g=Bridge.as(Kusto.Language.Binding.Binder.GetResultType$1(expression),Kusto.Language.Symbols.GroupSymbol))!=null?diagnostics.add(Kusto.Language.DiagnosticFacts.GetTheExpressionRefersToMoreThanOneColumn().WithLocation(expression)):style===Kusto.Language.Binding.Binder.ProjectionStyle.GraphMatch?(colName=($t4=Kusto.Language.Binding.Binder.GetGraphExpressionResultName(expression),$t4!=null?$t4:col!=null?col.Name:null),col==null&&(type=Kusto.Language.Binding.Binder.GetResultTypeOrError(expression),type.IsError||type.IsScalar||(diagnostics.add(Kusto.Language.DiagnosticFacts.GetScalarTypeExpected().WithLocation(expression)),type=Kusto.Language.Symbols.ScalarTypes.Unknown),col=Kusto.Language.Binding.Binder.GetOrDeclareColumnForExpression(expression,colName,columnType||type)),System.String.isNullOrWhiteSpace(colName)||(col=col.WithName(colName)),builder.Add(col.WithType(columnType||col.Type))):(type=Kusto.Language.Binding.Binder.GetResultTypeOrError(expression),type.IsError||type.IsScalar||(diagnostics.add(Kusto.Language.DiagnosticFacts.GetScalarTypeExpected().WithLocation(expression)),type=Kusto.Language.Symbols.ScalarTypes.Unknown),style===Kusto.Language.Binding.Binder.ProjectionStyle.Print&&columnName!=null?(col=Kusto.Language.Binding.Binder.GetOrDeclareColumnForExpression(expression,columnName,columnType||type),builder.Add(col,columnName,!1,!1)):(name3=($t5=Kusto.Language.Binding.Binder.GetExpressionResultName(expression,null),$t5!=null?$t5:($t6=columnName,$t6!=null?$t6:this.GetDefaultColumnName(expression,style===Kusto.Language.Binding.Binder.ProjectionStyle.Extend))),col=Kusto.Language.Binding.Binder.GetOrDeclareColumnForExpression(expression,name3,columnType||type),builder.Add(col,void 0,style===Kusto.Language.Binding.Binder.ProjectionStyle.Replace||style===Kusto.Language.Binding.Binder.ProjectionStyle.Extend,!1)));break}while(0)},GetDefaultColumnName:function(location,includeRowScope){for(var name="Column"+Bridge.identity(this._defaultColumnNameSuffix,this._defaultColumnNameSuffix=this._defaultColumnNameSuffix+1|0);this.CanBindName(name,Kusto.Language.Symbols.SymbolMatch.Any,location,includeRowScope,!1);)name="Column"+Bridge.identity(this._defaultColumnNameSuffix,this._defaultColumnNameSuffix=this._defaultColumnNameSuffix+1|0);return name},AddFunctionTupleResultColumn:function($function,column,builder,doNotRepeat,isAggregate){var prefix=$function.ResultNamePrefix,prefixedColumn;prefix!=null?(prefixedColumn=column.WithName(($function.ResultNamePrefix||"")+"_"+(column.Name||"")),builder.Add(prefixedColumn,void 0,!1,doNotRepeat)):builder.Add(column,void 0,!1,doNotRepeat)},AddTableColumns:function(symbol,columns){var $t,t,g,s;do{if(Bridge.is(symbol,Kusto.Language.Symbols.TableSymbol)){t=Bridge.cast(symbol,Kusto.Language.Symbols.TableSymbol);this.GetDeclaredAndInferredColumns$1(t,columns);break}if(Bridge.is(symbol,Kusto.Language.Symbols.GroupSymbol)){g=Bridge.cast(symbol,Kusto.Language.Symbols.GroupSymbol);$t=Bridge.getEnumerator(g.Members,Kusto.Language.Symbols.Symbol);try{while($t.moveNext())s=$t.Current,this.AddTableColumns(s,columns)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}break}}while(0)},AddTables:function(symbol,tables){var $t,t,g,m;do{if(Bridge.is(symbol,Kusto.Language.Symbols.TableSymbol)){t=Bridge.cast(symbol,Kusto.Language.Symbols.TableSymbol);tables.add(t);break}if(Bridge.is(symbol,Kusto.Language.Symbols.GroupSymbol)){g=Bridge.cast(symbol,Kusto.Language.Symbols.GroupSymbol);$t=Bridge.getEnumerator(g.Members,Kusto.Language.Symbols.Symbol);try{while($t.moveNext())m=$t.Current,this.AddTables(m,tables)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}break}}while(0)},GetFindColumnsTable:function(node){var tables=this.GetFindTables(node);return this.GetTableOfColumnsUnifiedByName(tables)},GetFindTables:function(node){return node.InClause!=null?this.GetReferencedTables(node.InClause.Expressions):this.GetImpliedTables()},GetSearchColumnsTable:function(node){if(this._rowScope!=null&&node.InClause==null)return this._rowScope;else{var tables=this.GetSearchTables(node);return this.GetTableOfColumnsUnifiedByNameAndType(tables)}},GetSearchTables:function(node){return node.InClause!=null?this.GetReferencedTables(node.InClause.Expressions):this._rowScope!=null?System.Array.init([this._rowScope],Kusto.Language.Symbols.TableSymbol):this.GetImpliedTables()},GetImpliedTables:function(){var declaredViews=Kusto.Language.Binding.Binder.s_tableListPool.AllocateFromPool();try{return this.GetViewResultTablesInScope(declaredViews),declaredViews.Count>0?System.Linq.Enumerable.from(this._currentDatabase.Tables,Kusto.Language.Symbols.TableSymbol).concat(declaredViews).toList(Kusto.Language.Symbols.TableSymbol):this._currentDatabase.Tables}finally{Kusto.Language.Binding.Binder.s_tableListPool.ReturnToPool(declaredViews)}},GetViewResultTablesInScope:function(views){var $t,localSymbols=Kusto.Language.Binding.Binder.s_symbolListPool.AllocateFromPool(),sym,fs,fts;try{this._localScope.GetSymbols(1040,localSymbols);$t=Bridge.getEnumerator(localSymbols);try{while($t.moveNext())sym=$t.Current,(fs=Bridge.as(sym,Kusto.Language.Symbols.FunctionSymbol))!=null&&fs.IsView&&fs.MinArgumentCount===0&&(fts=Bridge.as(fs.GetReturnType(this._globals),Kusto.Language.Symbols.TableSymbol),fts!=null&&views.add(fts))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}finally{Kusto.Language.Binding.Binder.s_symbolListPool.ReturnToPool(localSymbols)}},GetReferencedTables:function(list){var $t,tables=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.TableSymbol).ctor),x,ts,gs;$t=Bridge.getEnumerator(list,"GetEnumerator$1");try{while($t.moveNext())x=$t.Current,(ts=Bridge.as(x.Element$1.ResultType,Kusto.Language.Symbols.TableSymbol))!=null?tables.add(ts):(gs=Bridge.as(x.Element$1.ResultType,Kusto.Language.Symbols.GroupSymbol))!=null&&tables.AddRange(System.Linq.Enumerable.from(gs.Members).ofType(Kusto.Language.Symbols.TableSymbol))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return tables},GetColumnsInColumnList:function(expressions,columns,diagnostics){var $t,elem;$t=Bridge.getEnumerator(expressions,"GetEnumerator$1");try{while($t.moveNext())elem=$t.Current,this.GetReferencedColumns(elem.Element$1,columns,diagnostics)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}},GetReferencedColumns:function(expression,columns,diagnostics){var $t,symbol,c,g,m,c1;diagnostics===void 0&&(diagnostics=null);symbol=Kusto.Language.Binding.Binder.GetReferencedSymbol$1(expression);do{if(Bridge.is(symbol,Kusto.Language.Symbols.ColumnSymbol)){c=Bridge.cast(symbol,Kusto.Language.Symbols.ColumnSymbol);columns.add(c);break}if(Bridge.is(symbol,Kusto.Language.Symbols.GroupSymbol)){g=Bridge.cast(symbol,Kusto.Language.Symbols.GroupSymbol);$t=Bridge.getEnumerator(g.Members,Kusto.Language.Symbols.Symbol);try{while($t.moveNext())m=$t.Current,(c1=Bridge.as(m,Kusto.Language.Symbols.ColumnSymbol))!=null&&columns.add(c1)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}break}diagnostics!=null?diagnostics.add(Kusto.Language.DiagnosticFacts.GetColumnExpected().WithLocation(expression)):null;break}while(0)},GetReferencedColumnsInTree:function(node,columns){var $t,nr;$t=Bridge.getEnumerator(node.GetDescendantsOrSelf(Kusto.Language.Syntax.NameReference),Kusto.Language.Syntax.NameReference);try{while($t.moveNext())nr=$t.Current,this.GetReferencedColumns(nr,columns)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}}});Bridge.define("Kusto.Language.Syntax.SyntaxVisitor");Bridge.define("Kusto.Language.Symbols.CustomAvailabilityContext",{props:{Location:{get:function(){return null}}}});Bridge.define("Kusto.Language.Symbols.CustomReturnTypeContext",{props:{Location:{get:function(){return null}},Arguments:{get:function(){return null}},ArgumentTypes:{get:function(){return null}},ArgumentParameters:{get:function(){return null}},RowScope:{get:function(){return null}},Signature:{get:function(){return null}}},methods:{GetArgument$1:function(parameterName){var p=this.Signature.GetParameter(parameterName);return p!=null?this.GetArgument(p):null},GetArgument:function(parameter){var argIndex=Kusto.Language.Utils.ListExtensions.IndexOf(Kusto.Language.Symbols.Parameter,this.ArgumentParameters,parameter);return argIndex>=0&&argIndex<System.Array.getCount(this.Arguments,Kusto.Language.Syntax.Expression)?System.Array.getItem(this.Arguments,argIndex,Kusto.Language.Syntax.Expression):null},GetArguments$1:function(parameterName){var parameter=this.Signature.GetParameter(parameterName);return parameter!=null?this.GetArguments(parameter):Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Syntax.Expression).Instance},GetArguments:function(parameter){for(var $arguments=null,i=0;i<System.Array.getCount(this.ArgumentParameters,Kusto.Language.Symbols.Parameter);i=i+1|0)Bridge.referenceEquals(System.Array.getItem(this.ArgumentParameters,i,Kusto.Language.Symbols.Parameter),parameter)&&($arguments==null&&($arguments=new(System.Collections.Generic.List$1(Kusto.Language.Syntax.Expression).ctor)),$arguments.add(System.Array.getItem(this.Arguments,i,Kusto.Language.Syntax.Expression)));return $arguments||Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Syntax.Expression).Instance}}});Bridge.define("Kusto.Language.Binding.Binder.ColumnOrdering",{$kind:"nested enum",statics:{fields:{None:0,Ascending:1,Descending:2,GrannyAscending:3,GrannyDescending:4}}});Bridge.define("Kusto.Language.Syntax.SyntaxVisitor$1",function(TResult){return{}});Bridge.define("Kusto.Language.Binding.Binder.NodeBinder.JoinColumnPair",{$kind:"nested class",props:{Left:null,Right:null},ctors:{ctor:function(left,right){this.$initialize();this.Left=left;this.Right=right}}});Bridge.define("Kusto.Language.Binding.Binder.ProjectionStyle",{$kind:"nested enum",statics:{fields:{Default:0,Extend:1,Print:2,Rename:3,Replace:4,Reorder:5,Summarize:6,GraphMatch:7}}});Bridge.define("Kusto.Language.Binding.CallSiteInfo",{props:{Signature:null,Locals:null},ctors:{ctor:function(signature,locals){this.$initialize();this.Signature=signature;this.Locals=locals}},methods:{toString:function(){return(this.Signature.Symbol.Name||"")+"("+(Bridge.toArray(System.Linq.Enumerable.from(this.Locals,Kusto.Language.Symbols.VariableSymbol).select(function(v){return v.IsConstant&&v.ConstantValue!=null?System.String.format("{0}={1}",v.Name,v.ConstantValue):v.Name})).join(",")||"")+")"}}});Bridge.define("Kusto.Language.Binding.ColumnMap",{fields:{_nameMap:null,_unifyDynamicTypes:!1},ctors:{ctor:function(unifyDynamicTypes){unifyDynamicTypes===void 0&&(unifyDynamicTypes=!0);this.$initialize();this._nameMap=new(System.Collections.Generic.Dictionary$2(System.String,System.Object).ctor);this._unifyDynamicTypes=unifyDynamicTypes},$ctor1:function(columns,unifyDynamicTypes){unifyDynamicTypes===void 0&&(unifyDynamicTypes=!0);Kusto.Language.Binding.ColumnMap.ctor.call(this,unifyDynamicTypes);this.AddRange(columns)}},methods:{AddRange:function(columns){var $t,col;$t=Bridge.getEnumerator(columns,Kusto.Language.Symbols.ColumnSymbol);try{while($t.moveNext())col=$t.Current,this.Add(col)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}},GetTypeKey:function(type){return this._unifyDynamicTypes&&Bridge.is(type,Kusto.Language.Symbols.DynamicSymbol)?Kusto.Language.Symbols.ScalarTypes.Dynamic:type},Add:function(column){var columnListOrDictionary={},c,cKey,columnKey,list,dict,list1,listTypeKey,columnTypeKey,dict1,dict2,columnTypeKey1,columnOrList,col,newList,existingColumns;this._nameMap.tryGetValue(column.Name,columnListOrDictionary)?(c=Bridge.as(columnListOrDictionary.v,Kusto.Language.Symbols.ColumnSymbol))!=null?(cKey=this.GetTypeKey(c.Type),columnKey=this.GetTypeKey(column.Type),Bridge.referenceEquals(cKey,columnKey)?(list=function(_o1){return _o1.add(c),_o1.add(column),_o1}(new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor)),this._nameMap.setItem(column.Name,list)):(dict=new(System.Collections.Generic.Dictionary$2(Kusto.Language.Symbols.TypeSymbol,System.Object).ctor),dict.setItem(cKey,c),dict.setItem(columnKey,column),this._nameMap.setItem(column.Name,dict))):(list1=Bridge.as(columnListOrDictionary.v,System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol)))!=null?(listTypeKey=this.GetTypeKey(list1.getItem(0).Type),columnTypeKey=this.GetTypeKey(column.Type),Bridge.referenceEquals(listTypeKey,columnTypeKey)?list1.add(column):(dict1=new(System.Collections.Generic.Dictionary$2(Kusto.Language.Symbols.TypeSymbol,System.Object).ctor),dict1.setItem(listTypeKey,list1),dict1.setItem(columnTypeKey,column))):(dict2=Bridge.as(columnListOrDictionary.v,System.Collections.Generic.Dictionary$2(Kusto.Language.Symbols.TypeSymbol,System.Object)))!=null&&(columnTypeKey1=this.GetTypeKey(column.Type),columnOrList={},dict2.tryGetValue(columnTypeKey1,columnOrList)?(col=Bridge.as(columnOrList.v,Kusto.Language.Symbols.ColumnSymbol))!=null?(newList=function(_o2){return _o2.add(col),_o2.add(column),_o2}(new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor)),dict2.setItem(columnTypeKey1,newList)):(existingColumns=Bridge.as(columnOrList.v,System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol)))!=null&&existingColumns.add(column):dict2.setItem(columnTypeKey1,column)):this._nameMap.add(column.Name,column)},Remove:function(name){this._nameMap.remove(name)},HasColumns:function(name){return this._nameMap.containsKey(name)},HasMultipleTypes:function(name){var columnListOrDictionary={},dict;return this._nameMap.tryGetValue(name,columnListOrDictionary)&&(dict=Bridge.as(columnListOrDictionary.v,System.Collections.Generic.Dictionary$2(Kusto.Language.Symbols.TypeSymbol,System.Object)))!=null&&dict.Count>1},GetTypes:function(name){var columnListOrDictionary={},dict,list,col;if(this._nameMap.tryGetValue(name,columnListOrDictionary))if((dict=Bridge.as(columnListOrDictionary.v,System.Collections.Generic.Dictionary$2(Kusto.Language.Symbols.TypeSymbol,System.Object)))!=null)return Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Symbols.TypeSymbol,dict.Keys);else if((list=Bridge.as(columnListOrDictionary.v,System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol)))!=null)return System.Array.init([list.getItem(0).Type],Kusto.Language.Symbols.TypeSymbol);else if((col=Bridge.as(columnListOrDictionary.v,Kusto.Language.Symbols.ColumnSymbol))!=null)return System.Array.init([col.Type],Kusto.Language.Symbols.TypeSymbol);return Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol).Instance},HasMutipleColumns:function(name){var columnListOrDictionary={},col,columns,dict,columnOrList,cols;if(this._nameMap.tryGetValue(name,columnListOrDictionary))if((col=Bridge.as(columnListOrDictionary.v,Kusto.Language.Symbols.ColumnSymbol))!=null)return!1;else if((columns=Bridge.as(columnListOrDictionary.v,System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol)))!=null)return columns.Count>1;else if((dict=Bridge.as(columnListOrDictionary.v,System.Collections.Generic.Dictionary$2(Kusto.Language.Symbols.TypeSymbol,System.Object)))!=null)if(dict.Count>1)return!0;else if(dict.Count===1)if(columnOrList=System.Linq.Enumerable.from(dict,System.Collections.Generic.KeyValuePair$2(Kusto.Language.Symbols.TypeSymbol,System.Object)).first().value,Bridge.is(columnOrList,Kusto.Language.Symbols.ColumnSymbol))return!0;else if((cols=Bridge.as(columnOrList,System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol)))!=null)return cols.Count>1;return!1},HasMultipleColumns:function(name,type){var columnListOrDictionary={},typeKey,dict,columnOrList,cols,columns;if(this._nameMap.tryGetValue(name,columnListOrDictionary))if(typeKey=this.GetTypeKey(type),(dict=Bridge.as(columnListOrDictionary.v,System.Collections.Generic.Dictionary$2(Kusto.Language.Symbols.TypeSymbol,System.Object)))!=null)return columnOrList={},dict.tryGetValue(typeKey,columnOrList)&&(cols=Bridge.as(columnOrList.v,System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol)))!=null&&cols.Count>0;else if((columns=Bridge.as(columnListOrDictionary.v,System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol)))!=null&&Bridge.referenceEquals(this.GetTypeKey(columns.getItem(0).Type),typeKey))return columns.Count>1;return!1},GetColumns:function(name){return new(Bridge.GeneratorEnumerable$1(Kusto.Language.Symbols.ColumnSymbol))(Bridge.fn.bind(this,function(name){var $step=0,$jumpFromFinally,$returnValue,columnListOrDictionary,dict,$t,kvp,cols,$t1,c,col,columns,$t2,c1,col1,$async_e,$enumerator=new(Bridge.GeneratorEnumerator$1(Kusto.Language.Symbols.ColumnSymbol))(Bridge.fn.bind(this,function(){try{for(;;)switch($step){case 0:if(columnListOrDictionary={},this._nameMap.tryGetValue(name,columnListOrDictionary)){$step=1;continue}$step=28;continue;case 1:if((dict=Bridge.as(columnListOrDictionary.v,System.Collections.Generic.Dictionary$2(Kusto.Language.Symbols.TypeSymbol,System.Object)))!=null){$step=2;continue}else{$step=16;continue}case 2:$t=Bridge.getEnumerator(dict);$step=3;continue;case 3:if($t.moveNext()){kvp=$t.Current;$step=4;continue}$step=15;continue;case 4:if((cols=Bridge.as(kvp.value,System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol)))!=null){$step=5;continue}else{$step=10;continue}case 5:$t1=Bridge.getEnumerator(cols);$step=6;continue;case 6:if($t1.moveNext()){c=$t1.Current;$step=7;continue}$step=9;continue;case 7:return $enumerator.current=c,$step=8,!0;case 8:$step=6;continue;case 9:$step=14;continue;case 10:if((col=Bridge.as(kvp.value,Kusto.Language.Symbols.ColumnSymbol))!=null){$step=11;continue}$step=13;continue;case 11:return $enumerator.current=col,$step=12,!0;case 12:$step=13;continue;case 13:$step=14;continue;case 14:$step=3;continue;case 15:$step=27;continue;case 16:if((columns=Bridge.as(columnListOrDictionary.v,System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol)))!=null){$step=17;continue}else{$step=22;continue}case 17:$t2=Bridge.getEnumerator(columns);$step=18;continue;case 18:if($t2.moveNext()){c1=$t2.Current;$step=19;continue}$step=21;continue;case 19:return $enumerator.current=c1,$step=20,!0;case 20:$step=18;continue;case 21:$step=26;continue;case 22:if((col1=Bridge.as(columnListOrDictionary.v,Kusto.Language.Symbols.ColumnSymbol))!=null){$step=23;continue}$step=25;continue;case 23:return $enumerator.current=col1,$step=24,!0;case 24:$step=25;continue;case 25:$step=26;continue;case 26:$step=27;continue;case 27:$step=28;continue;case 28:default:return!1}}catch($async_e1){$async_e=System.Exception.create($async_e1);throw $async_e;}}));return $enumerator},arguments))},GetColumns$1:function(name,type){var columnListOrDictionary={},typeKey,dict,columnOrList,cols,col,columns,col1;if(this._nameMap.tryGetValue(name,columnListOrDictionary))if(typeKey=this.GetTypeKey(type),(dict=Bridge.as(columnListOrDictionary.v,System.Collections.Generic.Dictionary$2(Kusto.Language.Symbols.TypeSymbol,System.Object)))!=null){if(columnOrList={},dict.tryGetValue(typeKey,columnOrList))if((cols=Bridge.as(columnOrList.v,System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol)))!=null)return cols;else if((col=Bridge.as(columnOrList.v,Kusto.Language.Symbols.ColumnSymbol))!=null)return System.Array.init([col],Kusto.Language.Symbols.ColumnSymbol)}else if((columns=Bridge.as(columnListOrDictionary.v,System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol)))!=null)return columns;else if((col1=Bridge.as(columnListOrDictionary.v,Kusto.Language.Symbols.ColumnSymbol))!=null)return System.Array.init([col1],Kusto.Language.Symbols.ColumnSymbol);return Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Symbols.ColumnSymbol).Instance}}});Bridge.define("Kusto.Language.Binding.FunctionCallInfo",{fields:{_expander:null,_expansion:null,_facts:null,_hasErrors:null,_diagnostics:null},props:{Facts:{get:function(){return this._facts}},Expansion:{get:function(){return this._expansion!=null||Bridge.staticEquals(this._expander,null)||(this._expansion=this._expander()),this._expansion}},HasErrors:{get:function(){return this._hasErrors==null&&(this._hasErrors=this._facts.HasSyntaxErrors||System.Linq.Enumerable.from(this.Diagnostics,Kusto.Language.Diagnostic).any(function(d){return Bridge.referenceEquals(d.Severity,Kusto.Language.DiagnosticSeverity.Error)})),System.Nullable.getValueOrDefault(this._hasErrors,!1)}},Diagnostics:{get:function(){var $t,root;return this._diagnostics==null&&(this._diagnostics=(root=($t=this.Expansion)!=null?$t.Root:null)!=null?Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Diagnostic,System.Linq.Enumerable.from(root.GetContainedDiagnostics(),Kusto.Language.Diagnostic).select(function(d){return d.WithLocation$1(root.GetPositionInOriginalTree(d.Start),d.Length)})):Kusto.Language.Diagnostic.NoDiagnostics),this._diagnostics}}},ctors:{$ctor1:function(expander,facts){this.$initialize();this._expander=expander;this._facts=facts},ctor:function(expansion,facts){this.$initialize();this._expansion=expansion;this._facts=facts}}});Bridge.define("Kusto.Language.Binding.FunctionCallResult",{$kind:"struct",statics:{methods:{op_Implicit:function(type){return new Kusto.Language.Binding.FunctionCallResult.$ctor1(type,null)},getDefaultValue:function(){return new Kusto.Language.Binding.FunctionCallResult}}},props:{Type:null,Info:null},ctors:{$ctor1:function(type,info){info===void 0&&(info=null);this.$initialize();this.Type=type;this.Info=info},ctor:function(){this.$initialize()}},methods:{getHashCode:function(){return Bridge.addHash([7310547387,this.Type,this.Info])},equals:function(o){return Bridge.is(o,Kusto.Language.Binding.FunctionCallResult)?Bridge.equals(this.Type,o.Type)&&Bridge.equals(this.Info,o.Info):!1},$clone:function(to){return this}}});Bridge.define("Kusto.Language.Binding.GlobalBindingCache",{fields:{UnifiedNameColumnsMap:null,UnifiedNameAndTypeColumnsMap:null,CommonColumnsMap:null,CallSiteToExpansionMap:null,DatabaseFunctionBodyFacts:null},ctors:{init:function(){this.UnifiedNameColumnsMap=new(System.Collections.Generic.Dictionary$2(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.TableSymbol),Kusto.Language.Symbols.TableSymbol).$ctor3)(Kusto.Language.Utils.ReadOnlyListComparer$1(Kusto.Language.Symbols.TableSymbol).Default);this.UnifiedNameAndTypeColumnsMap=new(System.Collections.Generic.Dictionary$2(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.TableSymbol),Kusto.Language.Symbols.TableSymbol).$ctor3)(Kusto.Language.Utils.ReadOnlyListComparer$1(Kusto.Language.Symbols.TableSymbol).Default);this.CommonColumnsMap=new(System.Collections.Generic.Dictionary$2(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.TableSymbol),Kusto.Language.Symbols.TableSymbol).$ctor3)(Kusto.Language.Utils.ReadOnlyListComparer$1(Kusto.Language.Symbols.TableSymbol).Default);this.CallSiteToExpansionMap=new(System.Collections.Generic.Dictionary$2(Kusto.Language.Binding.CallSiteInfo,Kusto.Language.FunctionCallExpansion).$ctor3)(Kusto.Language.Binding.CallSiteInfo.Comparer.Instance);this.DatabaseFunctionBodyFacts=new(System.Collections.Generic.Dictionary$2(Kusto.Language.Symbols.Signature,Kusto.Language.FunctionBodyFacts).ctor)}}});Bridge.define("Kusto.Language.Binding.LocalBindingCache",{fields:{SignaturesComputingExpansion:null,CallSiteToExpansionMap:null,NonDatabaseFunctionBodyFacts:null},ctors:{init:function(){this.SignaturesComputingExpansion=new(System.Collections.Generic.HashSet$1(Kusto.Language.Symbols.Signature).ctor);this.CallSiteToExpansionMap=new(System.Collections.Generic.Dictionary$2(Kusto.Language.Binding.CallSiteInfo,Kusto.Language.FunctionCallExpansion).$ctor3)(Kusto.Language.Binding.CallSiteInfo.Comparer.Instance);this.NonDatabaseFunctionBodyFacts=new(System.Collections.Generic.Dictionary$2(Kusto.Language.Symbols.Signature,Kusto.Language.FunctionBodyFacts).ctor)}}});Bridge.define("Kusto.Language.Binding.LocalScope",{statics:{methods:{GetMinimalOuterScope:function(outerScope){while(outerScope!=null&&outerScope._symbols==null&&outerScope._sharedSymbols==null)outerScope=outerScope._outerScope;return outerScope}}},fields:{_outerScope:null,_symbols:null,_sharedSymbols:null},ctors:{$ctor1:function(symbols,outerScope,sharedScope){this.$initialize();this._symbols=symbols;this._outerScope=Kusto.Language.Binding.LocalScope.GetMinimalOuterScope(outerScope);this._sharedSymbols=sharedScope},ctor:function(outerScope){outerScope===void 0&&(outerScope=null);Kusto.Language.Binding.LocalScope.$ctor1.call(this,null,outerScope,null)}},methods:{ContainsSymbol:function(name){return this._symbols!=null&&this._symbols.containsKey(name)||this._sharedSymbols!=null&&this._sharedSymbols.ContainsSymbol(name)},Copy:function(){return this._symbols!=null&&this._symbols.Count>0&&(this._sharedSymbols=new Kusto.Language.Binding.LocalScope.$ctor1(this._symbols,null,this._sharedSymbols),this._symbols=null),new Kusto.Language.Binding.LocalScope.$ctor1(null,this._outerScope,this._sharedSymbols)},AddSymbol:function(symbol){return symbol!=null?(this._symbols==null&&(this._symbols=new(System.Collections.Generic.Dictionary$2(System.String,Kusto.Language.Symbols.Symbol).ctor)),this._symbols.setItem(symbol.Name,symbol),System.String.isNullOrEmpty(symbol.AlternateName)||this._symbols.setItem(symbol.AlternateName,symbol),!0):!1},AddSymbols:function(symbols){var $t,symbol;$t=Bridge.getEnumerator(symbols,Kusto.Language.Symbols.Symbol);try{while($t.moveNext())symbol=$t.Current,this.AddSymbol(symbol)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}},GetSymbols$1:function(name,match,symbols){var $t,originalCount=symbols.Count,decl,symbol;if(this._symbols!=null)if(name!=null)decl={},this._symbols.tryGetValue(name,decl)&&Kusto.Language.Symbols.SymbolMatchExtensions.Matches$1(decl.v,name,match)&&symbols.add(decl.v);else{$t=Bridge.getEnumerator(this._symbols.Values);try{while($t.moveNext())symbol=$t.Current,Kusto.Language.Symbols.SymbolMatchExtensions.Matches(symbol,match)&&symbols.add(symbol)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}this._sharedSymbols!=null&&(name==null||symbols.Count===originalCount)&&this._sharedSymbols.GetSymbols$1(name,match,symbols);this._outerScope!=null&&(name==null||symbols.Count===originalCount)&&this._outerScope.GetSymbols$1(name,match,symbols)},GetSymbols:function(match,symbols){this.GetSymbols$1(null,match,symbols)}}});Bridge.define("Kusto.Language.Binding.ParameterMatchKind",{$kind:"enum",statics:{fields:{None:0,Unknown:1,Dynamic:2,Compatible:3,Promoted:4,NotType:5,OneOfMany:6,Scalar:7,Summable:8,Orderable:9,Number:10,Integer:11,Tabular:12,Table:13,Database:14,Cluster:15,Exact:16}}});Bridge.define("Kusto.Language.Binding.ProjectionBuilder",{fields:{_projection:null,_doNotAdd:null,_columnIndexMap:null,_declaredNames:null,_uniqueNames:null},ctors:{init:function(){this._projection=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor);this._doNotAdd=new(System.Collections.Generic.HashSet$1(Kusto.Language.Symbols.ColumnSymbol).ctor);this._columnIndexMap=new(System.Collections.Generic.Dictionary$2(System.String,System.Int32).ctor);this._declaredNames=new(System.Collections.Generic.HashSet$1(System.String).ctor);this._uniqueNames=new Kusto.Language.Utils.UniqueNameTable},ctor:function(){this.$initialize()}},methods:{Clear:function(){this._projection.clear();this._doNotAdd.clear();this._columnIndexMap.clear();this._uniqueNames.Clear();this._declaredNames.clear()},GetProjection:function(){return this._projection},AddRange:function(columns,declare,doNotRepeat){var $t,column,c;declare===void 0&&(declare=!1);doNotRepeat===void 0&&(doNotRepeat=!1);$t=Bridge.getEnumerator(columns,Kusto.Language.Symbols.ColumnSymbol);try{while($t.moveNext())column=$t.Current,c=this.Add(column,void 0,!1,doNotRepeat),declare&&c!=null&&this._declaredNames.add(c.Name)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}},DoNotAdd:function(column){this._doNotAdd.add(column)},DoNotAddAny:function(columns){var $t,col;$t=Bridge.getEnumerator(columns,Kusto.Language.Symbols.ColumnSymbol);try{while($t.moveNext())col=$t.Current,this.DoNotAdd(col)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}},CanAdd:function(column){return!this._doNotAdd.contains(column)},Add:function(column,baseName,replace,doNotRepeat){var index,uniqueName;return(baseName===void 0&&(baseName=null),replace===void 0&&(replace=!1),doNotRepeat===void 0&&(doNotRepeat=!1),System.String.isNullOrEmpty(column.Name))?column:this._doNotAdd.contains(column)?column:(index={},replace&&this._columnIndexMap.tryGetValue(column.Name,index)?this._projection.setItem(index.v,column):(uniqueName=this._uniqueNames.GetOrAddName(column.Name,baseName),Bridge.referenceEquals(uniqueName,column.Name)||(column=new Kusto.Language.Symbols.ColumnSymbol(uniqueName,column.Type,column.Description,System.Array.init([column],Kusto.Language.Symbols.ColumnSymbol),void 0,void 0)),this._projection.add(column),this._columnIndexMap.add(column.Name,this._projection.Count-1|0)),doNotRepeat&&this._doNotAdd.add(column),column)},Declare:function(column,diagnostics,location,replace){var index,added;if(replace===void 0&&(replace=!1),this._declaredNames.contains(column.Name)){diagnostics.add(Kusto.Language.DiagnosticFacts.GetDuplicateColumnDeclaration(column.Name).WithLocation(location));return}index={};replace&&this._columnIndexMap.tryGetValue(column.Name,index)?(this._projection.setItem(index.v,column),this._declaredNames.add(column.Name)):(added=this.Add(column),added!=null&&this._declaredNames.add(added.Name))},Rename:function(oldName,newName,diagnostics,location){var index={},oldColumn,newColumn;return this._columnIndexMap.tryGetValue(oldName,index)?this._declaredNames.contains(newName)?(diagnostics.add(Kusto.Language.DiagnosticFacts.GetDuplicateColumnDeclaration(newName).WithLocation(location)),null):(oldColumn=this._projection.getItem(index.v),newColumn=new Kusto.Language.Symbols.ColumnSymbol(newName,oldColumn.Type,oldColumn.Description,System.Array.init([oldColumn],Kusto.Language.Symbols.ColumnSymbol),void 0,void 0),this._projection.setItem(index.v,newColumn),this._columnIndexMap.remove(oldName),this._columnIndexMap.add(newName,index.v),this._declaredNames.add(newName),this._uniqueNames.AddName(newName),newColumn):null}}});Bridge.define("Kusto.Language.Binding.ScopeKind",{$kind:"enum",statics:{fields:{Normal:0,Aggregate:1,PlugIn:2,Option:3}}});Bridge.define("Kusto.Language.ClusterManagerCommands",{statics:{fields:{ShowVersion:null,All:null},ctors:{init:function(){this.ShowVersion=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowVersion","(BuildVersion: string, BuildTime: datetime, ServiceType: string, ProductVersion: string)");this.All=System.Array.init([Kusto.Language.ClusterManagerCommands.ShowVersion],Kusto.Language.Symbols.CommandSymbol)}}}});Bridge.define("Kusto.Language.DataManagerCommands",{statics:{fields:{ShowVersion:null,All:null},ctors:{init:function(){this.ShowVersion=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowVersion","(BuildVersion: string, BuildTime: datetime, ServiceType: string, ProductVersion: string)");this.All=System.Array.init([Kusto.Language.DataManagerCommands.ShowVersion],Kusto.Language.Symbols.CommandSymbol)}}}});Bridge.define("Kusto.Language.Diagnostic",{inherits:function(){return[System.IEquatable$1(Kusto.Language.Diagnostic)]},statics:{fields:{NoDiagnostics:null},ctors:{init:function(){this.NoDiagnostics=System.Array.init(0,null,Kusto.Language.Diagnostic)}}},fields:{start:0,length:0},props:{Code:null,Category:null,Severity:null,Description:null,Message:null,HasLocation:{get:function(){return this.LocationKind===Kusto.Language.DiagnosticLocationKind.Absolute}},LocationKind:0,Start:{get:function(){return this.start}},Length:{get:function(){return this.length}},End:{get:function(){return this.Start+this.Length|0}}},alias:["equalsT","System$IEquatable$1$Kusto$Language$Diagnostic$equalsT"],ctors:{ctor:function(code,message){Kusto.Language.Diagnostic.$ctor3.call(this,code,null,null,null,message,Kusto.Language.DiagnosticLocationKind.Relative,0,0)},$ctor1:function(code,category,severity,description){Kusto.Language.Diagnostic.$ctor3.call(this,code,category,severity,description,null,Kusto.Language.DiagnosticLocationKind.Relative,0,0)},$ctor2:function(code,category,severity,description,message){Kusto.Language.Diagnostic.$ctor3.call(this,code,category,severity,description,message,Kusto.Language.DiagnosticLocationKind.Relative,0,0)},$ctor3:function(code,category,severity,description,message,locationKind,start,length){var $t,$t1,$t2,$t3,$t4,$t5,$t6;this.$initialize();this.Code=($t=code,$t!=null?$t:"");this.Category=($t1=category,$t1!=null?$t1:Kusto.Language.DiagnosticCategory.General);this.Severity=($t2=severity,$t2!=null?$t2:Kusto.Language.DiagnosticSeverity.Error);this.Description=($t3=description,$t3!=null?$t3:($t4=message,$t4!=null?$t4:""));this.Message=($t5=message,$t5!=null?$t5:($t6=description,$t6!=null?$t6:""));this.LocationKind=locationKind;this.start=start>=0?start:0;this.length=length>=0?length:0}},methods:{With:function(code,category,severity,description,message,locationKind,start,length){var $t,$t1,$t2,$t3,$t4,useLocationKind;return code===void 0&&(code=null),category===void 0&&(category=null),severity===void 0&&(severity=null),description===void 0&&(description=null),message===void 0&&(message=null),locationKind===void 0&&(locationKind=null),start===void 0&&(start=-1),length===void 0&&(length=-1),code=($t=code,$t!=null?$t:this.Code),category=($t1=category,$t1!=null?$t1:this.Category),severity=($t2=severity,$t2!=null?$t2:this.Severity),description=($t3=description,$t3!=null?$t3:this.Description),message=($t4=message,$t4!=null?$t4:this.Message),useLocationKind=locationKind!=null?System.Nullable.getValue(locationKind):this.LocationKind,start=start>=0?start:this.start,length=length>=0?length:this.length,Bridge.referenceEquals(code,this.Code)&&Bridge.referenceEquals(category,this.Code)&&Bridge.referenceEquals(severity,this.Severity)&&Bridge.referenceEquals(description,this.Description)&&Bridge.referenceEquals(message,this.Message)&&useLocationKind===this.LocationKind&&start===this.start&&length===this.length?this:new Kusto.Language.Diagnostic.$ctor3(code,category,severity,description,message,useLocationKind,start,length)},WithCode:function(code){return this.With(code,void 0,void 0,void 0,void 0,void 0,-1,-1)},WithCategory:function(category){return this.With(void 0,category,void 0,void 0,void 0,void 0,-1,-1)},WithSeverity:function(severity){return this.With(void 0,void 0,severity,void 0,void 0,void 0,-1,-1)},WithDescription:function(description){return this.With(void 0,void 0,void 0,description,void 0,void 0,-1,-1)},WithMessage:function(message){return this.With(void 0,void 0,void 0,void 0,message,void 0,-1,-1)},WithLocation:function(location){return this.With(void 0,void 0,void 0,void 0,void 0,Kusto.Language.DiagnosticLocationKind.Absolute,location.TextStart,location.Width)},WithLocation$1:function(start,length){return this.With(void 0,void 0,void 0,void 0,void 0,Kusto.Language.DiagnosticLocationKind.Absolute,start,length)},WithLocationKind:function(locationKind){return this.With(void 0,void 0,void 0,void 0,void 0,locationKind,-1,-1)},equalsT:function(other){return Bridge.referenceEquals(this.Code,other.Code)&&Bridge.referenceEquals(this.Message,other.Message)&&this.HasLocation&&other.HasLocation&&this.Start===other.Start&&this.Length===other.Length},equals:function(obj){var d;return(d=Bridge.as(obj,Kusto.Language.Diagnostic))!=null&&this.equalsT(d)},getHashCode:function(){return(Bridge.getHashCode(this.Code)+Bridge.getHashCode(this.Message)|0)+this.Start|0}}});Bridge.define("Kusto.Language.DiagnosticCategory",{statics:{fields:{General:null,Correctness:null,Performance:null},ctors:{init:function(){this.General="General";this.Correctness="Correctness";this.Performance="Performance"}}}});Bridge.define("Kusto.Language.DiagnosticFacts",{statics:{methods:{GetMissingText:function(text){return new Kusto.Language.Diagnostic.ctor("KS001",System.String.format("Missing: {0}",[text]))},GetUnexpectedCharacter:function(text){return new Kusto.Language.Diagnostic.ctor("KS002",System.String.format("Unexpected: {0}",[text]))},GetMalformedToken:function(term){return new Kusto.Language.Diagnostic.ctor("KS003",System.String.format("Malformed {0}",[term]))},GetMalformedLiteral:function(){return new Kusto.Language.Diagnostic.ctor("KS004","Malformed literal")},GetTermsExpected:function(terms){if(terms===void 0&&(terms=[]),terms.length===1)return new Kusto.Language.Diagnostic.ctor("KS005",System.String.format("Expected: {0}",[terms[System.Array.index(0,terms)]]));else{var list=terms.join(", ");return new Kusto.Language.Diagnostic.ctor("KS005",System.String.format("Expected one of: {0}",[list]))}},GetTokenExpected:function(kinds){return kinds===void 0&&(kinds=[]),Kusto.Language.DiagnosticFacts.GetTokenExpected$2(Bridge.cast(kinds,System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Syntax.SyntaxKind)))},GetTokenExpected$2:function(kinds){return Kusto.Language.DiagnosticFacts.GetTokenExpected$1(System.Linq.Enumerable.from(kinds,Kusto.Language.Syntax.SyntaxKind).select(function(k){return Kusto.Language.Syntax.SyntaxFacts.GetText(k)}))},GetTokenExpected$1:function(texts){var $t;return Kusto.Language.DiagnosticFacts.GetTermsExpected(($t=System.String,System.Linq.Enumerable.from(texts,$t).ToArray($t)))},GetTokenExpected$3:function(tokens){return tokens===void 0&&(tokens=[]),Kusto.Language.DiagnosticFacts.GetTokenExpected$1(Bridge.cast(tokens,System.Collections.Generic.IReadOnlyList$1(System.String)))},GetMissingElement:function(term){return new Kusto.Language.Diagnostic.ctor("KS006",System.String.format("Missing {0}",[term]))},GetMissingName:function(){return Kusto.Language.DiagnosticFacts.GetMissingElement("name")},GetMissingNameWithKeyword:function(keyword){return new Kusto.Language.Diagnostic.ctor("KS006",System.String.format("Missing name: If the keyword '{0}' is intended be used as the name, it needs to be bracketted as {1}.",keyword,Kusto.Language.KustoFacts.GetBracketedName(keyword)))},GetMissingValue:function(){return Kusto.Language.DiagnosticFacts.GetMissingElement("value")},GetMissingExpression:function(){return Kusto.Language.DiagnosticFacts.GetMissingElement("expression")},GetMissingExpressionWithKeyword:function(keyword){return new Kusto.Language.Diagnostic.ctor("KS006",System.String.format("Missing expression: If the keyword '{0}' is intended to be part of an expression it needs to be bracketted as {1}.",keyword,Kusto.Language.KustoFacts.GetBracketedName(keyword)))},GetMissingNumber:function(){return Kusto.Language.DiagnosticFacts.GetMissingElement("number")},GetMissingString:function(){return Kusto.Language.DiagnosticFacts.GetMissingElement("string")},GetMissingBoolean:function(){return Kusto.Language.DiagnosticFacts.GetMissingElement("boolean")},GetMissingTypeOfLiteral:function(){return Kusto.Language.DiagnosticFacts.GetMissingElement("typeof")},GetMissingFunctionCall:function(){return Kusto.Language.DiagnosticFacts.GetMissingElement("function call")},GetMissingFunctionDeclaration:function(){return Kusto.Language.DiagnosticFacts.GetMissingElement("function declaration")},GetMissingTypeName:function(){return Kusto.Language.DiagnosticFacts.GetMissingElement("type name")},GetMissingParameter:function(){return Kusto.Language.DiagnosticFacts.GetMissingElement("parameter")},GetMissingFirstOrLast:function(){return Kusto.Language.DiagnosticFacts.GetMissingElement("first or last")},GetMissingAllLastOrNone:function(){return Kusto.Language.DiagnosticFacts.GetMissingElement("all, last or none")},GetMissingJsonValue:function(){return Kusto.Language.DiagnosticFacts.GetMissingElement("json value")},GetMissingJoinOnClause:function(){return Kusto.Language.DiagnosticFacts.GetMissingElement("join on condition clause")},GetMissingJsonPair:function(){return Kusto.Language.DiagnosticFacts.GetMissingElement("json key:value pair")},GetMissingStatement:function(){return Kusto.Language.DiagnosticFacts.GetMissingElement("statement")},GetMissingPatternMatch:function(){return Kusto.Language.DiagnosticFacts.GetMissingElement("pattern match clause")},GetMissingClause:function(){return Kusto.Language.DiagnosticFacts.GetMissingElement("clause")},GetMissingClause$1:function(clauseName){return Kusto.Language.DiagnosticFacts.GetMissingElement(System.String.format("{0} clause",[clauseName]))},GetMissingSchemaDeclaration:function(){return Kusto.Language.DiagnosticFacts.GetMissingElement("schema declaration")},GetParsePatternMustStartWithColumnNameOrStar:function(){return new Kusto.Language.Diagnostic.ctor("KS100","The pattern must start with a column name or *")},GetParsePatternNameDoesNotFollowStringLiteral:function(){return new Kusto.Language.Diagnostic.ctor("KS101","The column name must follow a string literal")},GetParsePatternStringLiteralMustFollowStar:function(){return new Kusto.Language.Diagnostic.ctor("KS102","A string literal must follow a *")},GetParsePatternUsingStarAfterStringColumnIsAmbiguous:function(){return new Kusto.Language.Diagnostic.ctor("KS103","Using * after parsing a string column is ambiguous.")},GetInvalidPatternPart:function(){return new Kusto.Language.Diagnostic.ctor("KS104","Invalid pattern part.")},GetIdentifierNameOnly:function(){return new Kusto.Language.Diagnostic.ctor("KS105","The name must be a single identifier only.")},GetOperatorNotDefined:function(name,argumentTypes){return argumentTypes===void 0&&(argumentTypes=[]),Kusto.Language.DiagnosticFacts.GetOperatorNotDefined$1(name,Bridge.cast(argumentTypes,System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol)))},GetOperatorNotDefined$1:function(name,argumentTypes){if(System.Array.getCount(argumentTypes,Kusto.Language.Symbols.TypeSymbol)===1)return new Kusto.Language.Diagnostic.ctor("KS106",System.String.format("The operator '{0}' is not defined for the operand type {1}.",name,System.Array.getItem(argumentTypes,0,Kusto.Language.Symbols.TypeSymbol).Name));else{var list=Kusto.Language.Utils.ListExtensions.Join(System.Linq.Enumerable.from(argumentTypes,Kusto.Language.Symbols.TypeSymbol).select(function(t){return t.Name}).toList(System.String),", "," and ");return new Kusto.Language.Diagnostic.ctor("KS106",System.String.format("The operator '{0}' is not defined for the operand types {1}.",name,list))}},GetTypeExpected:function(type){return new Kusto.Language.Diagnostic.ctor("KS107",System.String.format("A value of type {0} expected.",[type.Name]))},GetTypeExpected$1:function(types){if(System.Array.getCount(types,Kusto.Language.Symbols.TypeSymbol)===1)return Kusto.Language.DiagnosticFacts.GetTypeExpected(System.Array.getItem(types,0,Kusto.Language.Symbols.TypeSymbol));else{var list=Kusto.Language.Utils.ListExtensions.Join(System.Linq.Enumerable.from(types,Kusto.Language.Symbols.TypeSymbol).select(function(t){return t.Name}).toList(System.String),", "," or ");return new Kusto.Language.Diagnostic.ctor("KS107",System.String.format("A value of type {0} expected.",[list]))}},GetScalarTypeExpected:function(){return new Kusto.Language.Diagnostic.ctor("KS108",System.String.format("Scalar value expected.",null))},GetColumnExpected:function(){return new Kusto.Language.Diagnostic.ctor("KS109","Column name expected.")},GetRenameAssignmentExpected:function(){return new Kusto.Language.Diagnostic.ctor("KS110","Column rename assignment expected.")},GetTableExpected:function(){return new Kusto.Language.Diagnostic.ctor("KS111","Table expected.")},GetTableOrScalarExpected:function(){return new Kusto.Language.Diagnostic.ctor("KS112","A table or scalar value expected.")},GetSingleColumnTableExpected:function(){return new Kusto.Language.Diagnostic.ctor("KS113","A table with only one column expected.")},GetDatabaseExpected:function(){return new Kusto.Language.Diagnostic.ctor("KS114","Database expected.")},GetClusterExpected:function(){return new Kusto.Language.Diagnostic.ctor("KS115","Cluster expected.")},GetTypeNotAllowed:function(type){return new Kusto.Language.Diagnostic.ctor("KS116",System.String.format("The value of type '{0}' is not allowed in this context.",[type.Name]))},GetFunctionRequiresArgumentList:function(functionName){return new Kusto.Language.Diagnostic.ctor("KS117",System.String.format("The function '{0}' requires an argument list.",[functionName]))},GetArgumentCountExpected:function(count){return count===0?new Kusto.Language.Diagnostic.ctor("KS118",System.String.format("No arguments expected.",null)):count===1?new Kusto.Language.Diagnostic.ctor("KS118",System.String.format("1 argument expected.",null)):new Kusto.Language.Diagnostic.ctor("KS118",System.String.format("{0} arguments expected.",[Bridge.box(count,System.Int32)]))},GetFunctionExpectsArgumentCountExact:function(functionName,count){return count===0?new Kusto.Language.Diagnostic.ctor("KS119",System.String.format("The function '{0}' expects no arguments.",[functionName])):count===1?new Kusto.Language.Diagnostic.ctor("KS119",System.String.format("The function '{0}' expects 1 argument.",[functionName])):new Kusto.Language.Diagnostic.ctor("KS119",System.String.format("The function '{0}' expects {1} arguments.",functionName,Bridge.box(count,System.Int32)))},GetFunctionExpectsArgumentCountRange:function(functionName,min,max){return min===max?Kusto.Language.DiagnosticFacts.GetFunctionExpectsArgumentCountExact(functionName,min):new Kusto.Language.Diagnostic.ctor("KS120",System.String.format("The function '{0}' expects between {1} and {2} arguments.",functionName,Bridge.box(min,System.Int32),Bridge.box(max,System.Int32)))},GetFunctionHasIncorrectNumberOfArguments:function(){return new Kusto.Language.Diagnostic.ctor("KS121",System.String.format("The function call has an incorrect number of arguments.",null))},GetScalarFunctionNotDefined:function(name){return new Kusto.Language.Diagnostic.ctor("KS122",System.String.format("The scalar function '{0}' is not defined.",[name]))},GetAggregateFunctionNotDefined:function(name){return new Kusto.Language.Diagnostic.ctor("KS123",System.String.format("The aggregate function '{0}' is not defined.",[name]))},GetPlugInFunctionNotDefined:function(name){return new Kusto.Language.Diagnostic.ctor("KS124",System.String.format("The plug-in function '{0}' is not defined.",[name]))},GetPlugInFunctionIsNotEnabled:function(name){return new Kusto.Language.Diagnostic.ctor("KS125",System.String.format("The plug-in function '{0}' is not enabled.",[name]))},GetPluginNotAllowedInThisContext:function(name){return new Kusto.Language.Diagnostic.ctor("KS126",System.String.format("The plug-in function '{0}' is not allowed in this context.",[name]))},GetFunctionNotDefinedWithMatchingParameters:function(name,argumentTypes){var types=Bridge.toArray(System.Linq.Enumerable.from(argumentTypes,Kusto.Language.Symbols.Symbol).select(function(p){return p.Name})).join(", ");return new Kusto.Language.Diagnostic.ctor("KS127",System.String.format("The function '{0}' is not compatible with arguments ({1})",name,types))},GetNameIsNotAFunction:function(name){return new Kusto.Language.Diagnostic.ctor("KS128",System.String.format("The name '{0}' does not refer to a function.",[name]))},GetExpressionMustBeConstant:function(){return new Kusto.Language.Diagnostic.ctor("KS129","The expression must be a constant.")},GetExpressionMustBeConstantOrIdentifier:function(){return new Kusto.Language.Diagnostic.ctor("KS130","The expression must be a constant or identifier.")},GetExpressionMustBeLiteral:function(){return new Kusto.Language.Diagnostic.ctor("KS131",System.String.format("The expression must be a literal.",null))},GetExpressionMustBeLiteralScalarValue:function(){return new Kusto.Language.Diagnostic.ctor("KS132",System.String.format("The expression must be a literal scalar value.",null))},GetExpressionMustNotBeEmpty:function(){return new Kusto.Language.Diagnostic.ctor("KS133",System.String.format("The expression value must not be empty.",null))},GetExpressionMustBeInteger:function(){return new Kusto.Language.Diagnostic.ctor("KS134","The expression value must be an integer.")},GetExpressionMustBeRealOrDecimal:function(){return new Kusto.Language.Diagnostic.ctor("KS135","The expression value must be an real or decimal number.")},GetExpressionMustBeIntegerOrArray:function(){return new Kusto.Language.Diagnostic.ctor("KS136","The expression value must be an integer or a dynamic array of integers.")},GetExpressionMustBeNumeric:function(){return new Kusto.Language.Diagnostic.ctor("KS137","The expression value must be a number.")},GetExpressionMustBeNumericOrBool:function(){return new Kusto.Language.Diagnostic.ctor("KS137","The expression value must be a number or boolean true/false.")},GetExpressionMustBeSummable:function(){return new Kusto.Language.Diagnostic.ctor("KS138","The argument value must be summable: a number, timespan or datetime.")},GetMultiValuedExpressionCannotBeAssignedToVariable:function(){return new Kusto.Language.Diagnostic.ctor("KS139","The multi-valued expression cannot be assigned to a variable.")},GetExpressionMustHaveValue$1:function(T,values){if(System.Array.getCount(values,T)===1)return new Kusto.Language.Diagnostic.ctor("KS140",System.String.format("The expression must be the value: {0}",[System.Array.getItem(values,0,T)]));else{var list=Kusto.Language.Utils.ListExtensions.Join(System.Linq.Enumerable.from(values,T).select(function(v){return Bridge.toString(v)}).toList(System.String),", "," or ");return new Kusto.Language.Diagnostic.ctor("KS140",System.String.format("The expression must be one of the values: {0}",[list]))}},GetExpressionMustHaveValue:function(T,values){return values===void 0&&(values=[]),Kusto.Language.DiagnosticFacts.GetExpressionMustHaveValue$1(T,Bridge.cast(values,System.Collections.Generic.IReadOnlyList$1(T)))},GetExpressionMustNotHaveValue:function(T,values){if(System.Array.getCount(values,T)===1)return new Kusto.Language.Diagnostic.ctor("KS140",System.String.format("The expression must not be the value: {0}",[System.Array.getItem(values,0,T)]));else{var list=Kusto.Language.Utils.ListExtensions.Join(System.Linq.Enumerable.from(values,T).select(function(v){return Bridge.toString(v)}).toList(System.String),", "," or ");return new Kusto.Language.Diagnostic.ctor("KS140",System.String.format("The expression must not be one of the values: {0}",[list]))}},GetExpressionMustHaveType$1:function(S,types){if(System.Array.getCount(types,S)===1)return new Kusto.Language.Diagnostic.ctor("KS141",System.String.format("The expression must have the type {0}.",[System.Array.getItem(types,0,S).Name]));else{var list=Kusto.Language.Utils.ListExtensions.Join(System.Linq.Enumerable.from(types,S).select(function(s){return s.Name}).toList(System.String),", "," or ");return new Kusto.Language.Diagnostic.ctor("KS141",System.String.format("The expression must have one of the types: {0}.",[list]))}},GetExpressionMustHaveType:function(S,types){return types===void 0&&(types=[]),Kusto.Language.DiagnosticFacts.GetExpressionMustHaveType$1(S,Bridge.cast(types,System.Collections.Generic.IReadOnlyList$1(S)))},GetNameDoesNotReferToAnyKnownItem:function(name){return new Kusto.Language.Diagnostic.ctor("KS142",System.String.format("The name '{0}' does not refer to any known column, table, variable or function.",[name]))},GetFunctionNotDefined:function(name){return new Kusto.Language.Diagnostic.ctor("KS143",System.String.format("The function '{0}' is not defined.",[name]))},GetAggregateNotAllowedInThisContext:function(name){return new Kusto.Language.Diagnostic.ctor("KS144",System.String.format("The aggregate function '{0}' is not allowed in this context.",[name]))},GetColumnMustExistOnBothSidesOfJoin:function(name){return new Kusto.Language.Diagnostic.ctor("KS145",System.String.format("The column '{0}' must exist on both sides of the join.",[name]))},GetNameRefersToMoreThanOneItem:function(name){return new Kusto.Language.Diagnostic.ctor("KS146",System.String.format("The name '{0}' refers to more than one column or variable",[name]))},GetTheElementAccessOperatorIsNotAllowedInThisContext:function(){return new Kusto.Language.Diagnostic.ctor("KS147","The element access operator [] is not allowed in this context.")},GetTheExpressionHasNoName:function(){return new Kusto.Language.Diagnostic.ctor("KS148","A column name cannot be inferred for this expression.")},GetTheExpressionDoesNotHaveMultipleValues:function(){return new Kusto.Language.Diagnostic.ctor("KS149","The expression does not have multiple named values.")},GetTheNameDoesNotHaveCorrespondingExpression:function(){return new Kusto.Language.Diagnostic.ctor("KS150","The name does not have a corresponding expression.")},GetInvalidTypeName:function(name){return new Kusto.Language.Diagnostic.ctor("KS160",System.String.format("The name '{0}' is not a valid type name that can be used here.",[name]))},GetInvalidColumnDeclaration:function(){return new Kusto.Language.Diagnostic.ctor("KS170","The syntax is not a valid column declaration.")},GetDuplicateColumnDeclaration:function(name){return new Kusto.Language.Diagnostic.ctor("KS171",System.String.format("A column with the name '{0}' is already declared.",[name]))},GetInvalidTypeExpression:function(){return new Kusto.Language.Diagnostic.ctor("KS172","The syntax is not a valid type expression.")},GetIncorrectNumberOfDataValues:function(multiple){return new Kusto.Language.Diagnostic.ctor("KS173",System.String.format("Incorrect number of data values. The values should appear in multiples of {0}.",[Bridge.box(multiple,System.Int32)]))},GetQueryOperatorCannotBeFirst:function(){return new Kusto.Language.Diagnostic.ctor("KS174",System.String.format("The operator cannot be the first operator in a query.",null))},GetQueryOperatorMustBeFirst:function(){return new Kusto.Language.Diagnostic.ctor("KS175","The operator must be the first operator in the query.")},GetQueryOperatorExpected:function(){return new Kusto.Language.Diagnostic.ctor("KS176","Query operator expected.")},GetQueryOperatorNotAllowedInContext:function(name){return new Kusto.Language.Diagnostic.ctor("KS177",System.String.format("The query operator '{0}' is not allowed in the current context.",[name]))},GetTypeIsNotIntervalType:function(intervalType,rangeType){return new Kusto.Language.Diagnostic.ctor("KS178",System.String.format("The type '{0}' is not an appropriate interval type for '{1}'",intervalType.Name,rangeType.Name))},GetUnknownQueryOperatorParameterName:function(name){return new Kusto.Language.Diagnostic.ctor("KS179",System.String.format("The name '{0}' is not a recognized parameter for this operator.",[name])).WithSeverity(Kusto.Language.DiagnosticSeverity.Warning)},GetParameterAlreadySpecified:function(name){return new Kusto.Language.Diagnostic.ctor("KS180",System.String.format("The parameter '{0}' is already specified.",[name]))},GetNameDoesNotReferToTable:function(name){return new Kusto.Language.Diagnostic.ctor("KS181",System.String.format("The name '{0}' does not refer to a table.",[name]))},GetInvalidJoinCondition:function(){return new Kusto.Language.Diagnostic.ctor("KS182","The join condition must be either the name of a column common to both tables or in the form $left.<column> == $right.<column>.")},GetInvalidJoinConditionOperand:function(prefix){return new Kusto.Language.Diagnostic.ctor("KS183",System.String.format("The join condition operand must be: {0}.<column>",[prefix]))},GetTheExpressionRefersToMoreThanOneColumn:function(){return new Kusto.Language.Diagnostic.ctor("KS184","The expression refers to more than one column.")},GetPackMustBeLastItemInList:function(){return new Kusto.Language.Diagnostic.ctor("KS185","The pack(*) expression must be the last item in the list.")},GetValueCountMustEqualParameterCount:function(){return new Kusto.Language.Diagnostic.ctor("KS185","The number of values must equal the number of parameters.")},GetPathValueWithNoPathParameter:function(){return new Kusto.Language.Diagnostic.ctor("KS186","A path value can only be specified when a path name is part of the declaration.")},GetPathValueExpected:function(){return new Kusto.Language.Diagnostic.ctor("KS187","A path value is expected.")},GetNoPatternMatchesArguments:function(){return new Kusto.Language.Diagnostic.ctor("KS188","No pattern matches the specified arguments.")},GetDefaultValueExpected:function(){return new Kusto.Language.Diagnostic.ctor("KS189","Default value expected.")},GetTableHasNoColumns:function(){return new Kusto.Language.Diagnostic.ctor("KS190","The table has no columns")},GetStarExpressionNotAllowed:function(){return new Kusto.Language.Diagnostic.ctor("KS191","The * syntax is not allowed here.")},GetStarExpressionMustBeLastArgument:function(){return new Kusto.Language.Diagnostic.ctor("KS192","The * syntax must be the last argument.")},GetNamedArgumentsNotSupported:function(){return new Kusto.Language.Diagnostic.ctor("KS193","Named arguments are not supported for this function.")},GetCompoundNamedArgumentsNotSupported:function(){return new Kusto.Language.Diagnostic.ctor("KS194","Compound named arguments are not supported.")},GetUnnamedArgumentAfterOutofOrderNamedArgument:function(){return new Kusto.Language.Diagnostic.ctor("KS195","All arguments after an unordered named argument must be named.")},GetUnknownArgumentName:function(){return new Kusto.Language.Diagnostic.ctor("KS196",System.String.format("The argument name does not refer to a declared parameter.",null))},GetMissingArgumentForParameter:function(parameterName){return new Kusto.Language.Diagnostic.ctor("KS197",System.String.format("The argument for parameter '{0}' is missing.",[parameterName]))},GetIncompleteFragment:function(){return new Kusto.Language.Diagnostic.ctor("KS198","The incomplete fragment is unexpected.")},GetNoColumnsInScope:function(){return new Kusto.Language.Diagnostic.ctor("KS199","No columns are currently in scope.")},GetErrorInExpansion:function(name,errors){return new Kusto.Language.Diagnostic.ctor("KS200",System.String.format("Failure in expansion of '{0}': {1}",name,errors))},GetVariableAlreadyDeclared:function(name){return new Kusto.Language.Diagnostic.ctor("KS201",System.String.format("A variable with the name '{0}' has already been declared.",[name]))},GetMaterializedViewNameMustBeStringLiteral:function(){return new Kusto.Language.Diagnostic.ctor("KS202",System.String.format("Materialized view name must be a string literal",null))},AnalysisFailure:function(analyzerName,message){return new Kusto.Language.Diagnostic.ctor("KS203",System.String.format("Failure in analysis '{0}': {1}",analyzerName,message))},GetNameDoesNotReferToAnyKnownTable:function(name){return new Kusto.Language.Diagnostic.ctor("KS204",System.String.format("The name '{0}' does not refer to any known table, tabular variable or function.",[name]))},GetFuzzyEntityNotDefined:function(name,kind){return name===void 0&&(name=null),kind===void 0&&(kind="entity"),System.String.isNullOrEmpty(name)?new Kusto.Language.Diagnostic.ctor("KS205",System.String.format("The fuzzy expression does not refer to any known or currently accessible {0}.",[kind])).WithSeverity(Kusto.Language.DiagnosticSeverity.Warning):new Kusto.Language.Diagnostic.ctor("KS205",System.String.format("The fuzzy name '{0}' does not refer to any known or currently accessible {1}.",name,kind)).WithSeverity(Kusto.Language.DiagnosticSeverity.Warning)},GetFuzzyClusterNotDefined:function(name){return name===void 0&&(name=null),Kusto.Language.DiagnosticFacts.GetFuzzyEntityNotDefined(name,"cluster")},GetFuzzyDatabaseNotDefined:function(name){return name===void 0&&(name=null),Kusto.Language.DiagnosticFacts.GetFuzzyEntityNotDefined(name,"database")},GetFuzzyTableNotDefined:function(name){return name===void 0&&(name=null),Kusto.Language.DiagnosticFacts.GetFuzzyEntityNotDefined(name,"table")},GetFuzzyExternalTableNotDefined:function(name){return name===void 0&&(name=null),Kusto.Language.DiagnosticFacts.GetFuzzyEntityNotDefined(name,"external table")},GetFuzzyMaterializedViewNotDefined:function(name){return name===void 0&&(name=null),Kusto.Language.DiagnosticFacts.GetFuzzyEntityNotDefined(name,"materialized view")},GetFuzzyFunctionNotDefined:function(name){return name===void 0&&(name=null),Kusto.Language.DiagnosticFacts.GetFuzzyEntityNotDefined(name,"function")},GetExpressionMustBeOrderable:function(){return new Kusto.Language.Diagnostic.ctor("KS206","The argument value must be orderable: a number, timespan, datetime, string or boolean.")},GetNameDoesNotReferToAnyKnownCluster:function(name){return new Kusto.Language.Diagnostic.ctor("KS207",System.String.format("The name '{0}' either does not refer to a reachable cluster or no schema from it is currently available.",[name])).WithSeverity(Kusto.Language.DiagnosticSeverity.Warning)},GetNameDoesNotReferToAnyKnownDatabase:function(name){return new Kusto.Language.Diagnostic.ctor("KS208",System.String.format("The name '{0}' does not refer to any known database.",[name]))},GetNameDoesNotReferToAnyKnownExternalTable:function(name){return new Kusto.Language.Diagnostic.ctor("KS209",System.String.format("The name '{0}' does not refer to any known external table.",[name]))},GetNameDoesNotReferToAnyKnownMaterializedView:function(name){return new Kusto.Language.Diagnostic.ctor("KS210",System.String.format("The name '{0}' does not refer to any known materialized view.",[name]))},GetNameDoesNotReferToAnyKnownFunction:function(name){return new Kusto.Language.Diagnostic.ctor("KS211",System.String.format("The name '{0}' does not refer to any known function.",[name]))},GetClientParametersNotSupported:function(){return new Kusto.Language.Diagnostic.ctor("KS213","Client parameters are not supported or enabled.")},GetRawGuidLiteralNotAllowed:function(){return new Kusto.Language.Diagnostic.ctor("KS214","Raw guid literals are not allowed in this context, use guid(...) instead.")},GetDecimalInDynamic:function(){return new Kusto.Language.Diagnostic.ctor("KS215","Decimal values are not supported in dynamic objects.")},GetClusterDatabaseOrTableExpected:function(){return new Kusto.Language.Diagnostic.ctor("KS216","Cluster, Database or Table expected.")},GetMissingGraphMatchPattern:function(){return new Kusto.Language.Diagnostic.ctor("KS217","Missing graph-match pattern.")},GetGraphExpected:function(){return new Kusto.Language.Diagnostic.ctor("KS218","Graph expected.")},GetQueryOperatorExpectsGraph:function(){return new Kusto.Language.Diagnostic.ctor("KS219","The query operator requires an input graph.")},GetColumnDeclarationExpected:function(){return new Kusto.Language.Diagnostic.ctor("KS220","Column declaration expected")},GetIntegerLiteralExpected:function(){return new Kusto.Language.Diagnostic.ctor("KS221","Integer literal expected.")},GetStringLiteralExpected:function(){return new Kusto.Language.Diagnostic.ctor("KS222","String literal expected.")},GetBooleanLiteralExpected:function(){return new Kusto.Language.Diagnostic.ctor("KS223","Boolean literal expected.")},GetSummableLiteralExpected:function(){return new Kusto.Language.Diagnostic.ctor("KS224","Summable literal expected.")},GetNumericLiteralExpected:function(){return new Kusto.Language.Diagnostic.ctor("KS225","Numeric literal expected.")},GetScalarLiteralExpected:function(){return new Kusto.Language.Diagnostic.ctor("KS226","Scalar literal expected.")},GetRealLiteralExpected:function(){return new Kusto.Language.Diagnostic.ctor("KS225","Real literal expected.")},GetTabularParametersMustBeDeclaredFirst:function(){return new Kusto.Language.Diagnostic.ctor("KS226","Tabular parameters must be declared first.")},GetCommonJoinColumnsMustHaveSameType:function(name){return new Kusto.Language.Diagnostic.ctor("KS227",System.String.format("The common column '{0}' must have the same type on both sides of the join.",[name]))},GetNameRequiresBrackets:function(name){return new Kusto.Language.Diagnostic.ctor("KS228",System.String.format("The name '{0}' needs to be bracketed as {1} to be used in this context.",name,Kusto.Language.KustoFacts.GetBracketedName(name)))},GetMissingGraphEntityType:function(){return new Kusto.Language.Diagnostic.ctor("KS229","Missing graph entity type, Expected values [nodes, edges].")},GetIncorrectNumberOfOutputGraphEntities:function(){return new Kusto.Language.Diagnostic.ctor("KS230","The operator support exactly one or two entities.")},GetTableOrGraphExpected:function(){return new Kusto.Language.Diagnostic.ctor("KS231","Table or graph expected.")},GetNoCommonArgumentType:function(){return new Kusto.Language.Diagnostic.ctor("KS232","No common type can be determined from the arguments.")},GetExpressionMustBeStringOrArray:function(){return new Kusto.Language.Diagnostic.ctor("KS233","The expression value must be a string or a dynamic array of strings.")},GetExpressionMustBeDynamicArray:function(){return new Kusto.Language.Diagnostic.ctor("KS234","The expression value must be a dynamic array.")},GetExpressionMustBeDynamicBag:function(){return new Kusto.Language.Diagnostic.ctor("KS235","The expression must be a dynamic bag.")},GetInvalidNameInAggregateContext:function(name){return new Kusto.Language.Diagnostic.ctor("KS236",System.String.format("The name '{0}' is not an aggregate or scalar function.",[name]))},GetInvalidNameInPlugInContext:function(name){return new Kusto.Language.Diagnostic.ctor("KS237",System.String.format("The name '{0}' is not a plug-in function.",[name]))},GetMissingGraphMatchPatternElement:function(){return new Kusto.Language.Diagnostic.ctor("KS238","Missing graph-match pattern element.")},GetGraphMatchPatternSyntaxError:function(expectedElementType,actualElementType){return new Kusto.Language.Diagnostic.ctor("KS239",System.String.format("graph-match element expected type is '{0}', but received '{1}' type.",expectedElementType,actualElementType))},GetMakeGraphDynamicNodeIdColumnNotSupported:function(){return new Kusto.Language.Diagnostic.ctor("KS240","source, target and node id columns can't be of type dynamic, consider using explicit cast")},GetJoinKeyCannotBeDynamic:function(){return new Kusto.Language.Diagnostic.ctor("KS241","Join keys cannot be dynamic")},GetJoinKeysNotComparable:function(leftType,rightType){return new Kusto.Language.Diagnostic.ctor("KS242",System.String.format("Inconsistent data types for join keys: ({0}, {1})",leftType,rightType))},GetMakeGraphImplicityIdShouldNotBeEmpty:function(){return new Kusto.Language.Diagnostic.ctor("KS243","Implicit node ID should not be empty.")},GetMissingCommand:function(){return new Kusto.Language.Diagnostic.ctor("KS300","Missing command.")}}}});Bridge.define("Kusto.Language.DiagnosticLocationKind",{$kind:"enum",statics:{fields:{Absolute:0,Relative:1,RelativeEnd:2}}});Bridge.define("Kusto.Language.DiagnosticSeverity",{statics:{fields:{Error:null,Warning:null,Suggestion:null,Information:null,Hidden:null},ctors:{init:function(){this.Error="Error";this.Warning="Warning";this.Suggestion="Suggestion";this.Information="Information";this.Hidden="Hidden"}}}});Bridge.define("Kusto.Language.Editor.ActorUtilities",{statics:{methods:{GetTokenNear:function(code,position){var token=code.Syntax.GetTokenAt(position),prevToken;return token!=null&&position===token.TriviaStart&&token.Trivia.length>0&&(prevToken=token.GetPreviousToken(),prevToken!=null)?prevToken:token},GetNodeInRange:function(code,start,length){var node=code.Syntax.GetNodeAt(start,length),lastToken,prevToken,newEnd;return node.End>(start+length|0)&&((lastToken=code.Syntax.GetTokenAt((start+length|0)-1|0),lastToken==null)||(prevToken=lastToken.GetPreviousToken(),prevToken==null)||(newEnd=prevToken.End,length=newEnd-start|0,node=code.Syntax.GetNodeAt(start,length),node.End>(start+length|0)))?null:node},AdjustRangeToNode:function(code,start,length){var node=Kusto.Language.Editor.ActorUtilities.GetNodeInRange(code,start.v,length.v);node!=null&&(start.v=node.TextStart,length.v=node.End-node.TextStart|0)},TrimRangeTrivia:function(code,start,length){var expectedEnd=start.v+length.v|0,endToken=code.Syntax.GetTokenAt(expectedEnd),adjustedEnd,startToken;endToken!=null&&start.v<endToken.TextStart&&(adjustedEnd=endToken.TriviaStart,length.v=adjustedEnd-start.v|0,expectedEnd=start.v+length.v|0);startToken=code.Syntax.GetTokenAt(start.v);startToken!=null&&start.v<startToken.TextStart&&(start.v=startToken.TextStart,length.v=expectedEnd-start.v|0)},TryGetAdjustedSubqueryRange:function(code,start,length){var ex,pe,firstOp,end,lastOp;if(Kusto.Language.Editor.ActorUtilities.TrimRangeTrivia(code,start,length),(ex=Bridge.as(code.Syntax.GetNodeAt(start.v,length.v),Kusto.Language.Syntax.Expression))!=null){if((pe=Bridge.as(ex,Kusto.Language.Syntax.PipeExpression))!=null){if((firstOp=Kusto.Language.Editor.ActorUtilities.GetPipeOperatorOrExpressionFromRangeStart(pe,start.v),firstOp==null)||(firstOp.TextStart>start.v&&(end=start.v+length.v|0,start.v=firstOp.TextStart,length.v=end-start.v|0),lastOp=Kusto.Language.Editor.ActorUtilities.GetPipeOperatorOrExpressionFromRangeEnd(pe,start.v+length.v|0),lastOp==null))return!1;lastOp.End!==(start.v+length.v|0)&&(length.v=lastOp.End-start.v|0)}return!0}return!1},GetPipeOperatorOrExpressionFromRangeStart:function(pe,start){for(;;)if(start>=pe.Expression.End&&start<=pe.Operator.TextStart)return pe.Operator;else{var ppe;if(start<=pe.Expression.End&&(ppe=Bridge.as(pe.Expression,Kusto.Language.Syntax.PipeExpression))!=null){pe=ppe;continue}else return start>=pe.Expression.TriviaStart&&start<=pe.Expression.TextStart?pe.Expression:null}},GetPipeOperatorOrExpressionFromRangeEnd:function(pe,end){for(;;)if(end===pe.End)return pe.Operator;else if(end<pe.Operator.TextStart&&end>=pe.Expression.End)return pe.Expression;else{var ppe;if((ppe=Bridge.as(pe.Expression,Kusto.Language.Syntax.PipeExpression))!=null){pe=ppe;continue}else return null}},IsFirstInQuery:function(expr){var pe;return(pe=Bridge.as(expr.Parent,Kusto.Language.Syntax.PipeExpression))!=null?Bridge.referenceEquals(pe.Expression,expr):!0},GetFirstReference:function(root,symbol){return root.GetFirstDescendant(Kusto.Language.Syntax.NameReference,function(nr){return Bridge.referenceEquals(nr.ReferencedSymbol,symbol)})},TryGetNearestTopLevelStatementInsertionPosition:function(code,position,insertPosition){var statement=Kusto.Language.Editor.ActorUtilities.GetEnclosingTopLevelStatement(code,position);return statement!=null?(insertPosition.v=Kusto.Language.Editor.ActorUtilities.GetInsertionPositionBefore(statement),!0):(insertPosition.v=0,!1)},TryGetNearestStatementInsertionPosition:function(code,position,insertPosition){var node=Kusto.Language.Editor.ActorUtilities.GetEnclosingStatementOrFunctionBodyExpression(code,position);return node!=null?(insertPosition.v=Kusto.Language.Editor.ActorUtilities.GetInsertionPositionBefore(node),!0):(insertPosition.v=0,!1)},GetInsertionPositionBefore:function(node){var $t,$t1,trivia=($t=($t1=node.GetFirstToken())!=null?$t1.Trivia:null,$t!=null?$t:""),lastLbEnd,firstLbEnd;return node.TriviaStart===0?(lastLbEnd=Kusto.Language.Parsing.TextFacts.GetLastLineBreakEnd(trivia),(lastLbEnd>=0?lastLbEnd:0)+node.TriviaStart|0):(firstLbEnd=Kusto.Language.Parsing.TextFacts.GetFirstLineBreakEnd(trivia),(firstLbEnd>=0?firstLbEnd:0)+node.TriviaStart|0)},GetEnclosingTopLevelStatement:function(code,position){for(var token=code.Syntax.GetTokenAt(position),node=token.Parent;node!=null&&!Kusto.Language.Editor.ActorUtilities.IsTopLevelStatement(node);)node=node.GetFirstAncestor(Kusto.Language.Syntax.Statement);return Bridge.as(node,Kusto.Language.Syntax.Statement)},GetEnclosingStatementOrFunctionBodyExpression:function(code,position){for(var token=code.Syntax.GetTokenAt(position),node=token.Parent;node!=null&&!Kusto.Language.Editor.ActorUtilities.IsTopLevelStatement(node)&&!Kusto.Language.Editor.ActorUtilities.IsFunctionBodyStatement(node)&&!Kusto.Language.Editor.ActorUtilities.IsFunctionBodyExpression(node);)node=node.GetFirstAncestor(Kusto.Language.Syntax.SyntaxNode);return node},IsTopLevelStatement:function(node){var element,list;return Bridge.is(node,Kusto.Language.Syntax.Statement)&&(element=Bridge.as(node.Parent,Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)))!=null&&(list=Bridge.as(element.Parent,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement))))!=null&&Bridge.is(list.Parent,Kusto.Language.Syntax.QueryBlock)},IsFunctionBodyStatement:function(node){var element,list;return Bridge.is(node,Kusto.Language.Syntax.Statement)&&(element=Bridge.as(node.Parent,Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)))!=null&&(list=Bridge.as(element.Parent,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement))))!=null&&Bridge.is(list.Parent,Kusto.Language.Syntax.FunctionBody)},IsFunctionBodyExpression:function(node){var fb;return(fb=Bridge.as(node.Parent,Kusto.Language.Syntax.FunctionBody))!=null&&Bridge.referenceEquals(fb.Expression,node)},GetEntityExpressionPart$1:function(element,globals){var token,name,parentNameRef,nameReference,parentFC,expr;return((token=Bridge.as(element,Kusto.Language.Syntax.SyntaxToken))!=null&&(element=token.Parent),(name=Bridge.as(element.Parent,Kusto.Language.Syntax.Name))!=null&&(element=name),(parentNameRef=Bridge.as(element.Parent,Kusto.Language.Syntax.NameReference))!=null&&(element=parentNameRef),(nameReference=Bridge.as(element,Kusto.Language.Syntax.NameReference))!=null&&(parentFC=Bridge.as(nameReference.Parent,Kusto.Language.Syntax.FunctionCallExpression))!=null&&(element=parentFC),(expr=Bridge.as(element,Kusto.Language.Syntax.Expression))!=null&&(Kusto.Language.Editor.ActorUtilities.IsEntityPart(expr,globals)||Kusto.Language.Editor.ActorUtilities.IsDatabasePart(expr)||Kusto.Language.Editor.ActorUtilities.IsClusterPart(expr)||Kusto.Language.Editor.ActorUtilities.IsEntityGroupElementPart(expr)))?expr:null},GetEntityExpressionPart:function(entity,fnSelector){if(fnSelector(entity))return entity;for(var pe;(pe=Bridge.as(entity,Kusto.Language.Syntax.PathExpression))!=null;){if(fnSelector(pe.Expression))return pe.Expression;if(fnSelector(pe.Selector))return pe.Selector;entity=pe.Expression}return null},IsEntityFunction:function(fs){return Bridge.referenceEquals(fs,Kusto.Language.Functions.Table)||Bridge.referenceEquals(fs,Kusto.Language.Functions.ExternalTable)||Bridge.referenceEquals(fs,Kusto.Language.Functions.MaterializedView)},GetEntityExpressionStart:function(element,globals){var tok,token=(tok=Bridge.as(element,Kusto.Language.Syntax.SyntaxToken))!=null?tok:element.GetLastToken(),expr,end,parentPath;if((expr=Kusto.Language.Editor.ActorUtilities.GetEntityExpressionPart$1(token,globals))!=null){for(end=expr.End;(parentPath=Bridge.as(expr.Parent,Kusto.Language.Syntax.PathExpression))!=null&&parentPath.End<=end;)expr=parentPath;return expr}return null},GetEntityExpression:function(element,globals){for(var path,expr,parentPath;(path=Bridge.as(element,Kusto.Language.Syntax.PathExpression))!=null;)element=path.Selector;if((expr=Kusto.Language.Editor.ActorUtilities.GetEntityExpressionPart$1(element,globals))!=null){while((parentPath=Bridge.as(expr.Parent,Kusto.Language.Syntax.PathExpression))!=null)expr=parentPath;return expr}return null},GetEntityExpressionClusterPart:function(entity){return Kusto.Language.Editor.ActorUtilities.GetEntityExpressionPart(entity,Kusto.Language.Editor.ActorUtilities.IsClusterPart)},GetEntityExpressionDatabasePart:function(entity){return Kusto.Language.Editor.ActorUtilities.GetEntityExpressionPart(entity,Kusto.Language.Editor.ActorUtilities.IsDatabasePart)},GetEntityExpressionEntityPart:function(entity,globals){return globals===void 0&&(globals=null),Kusto.Language.Editor.ActorUtilities.GetEntityExpressionPart(entity,function(e){return Kusto.Language.Editor.ActorUtilities.IsEntityPart(e,globals)})},GetEntityExpressionEntityGroupElementPart:function(entity){return Kusto.Language.Editor.ActorUtilities.GetEntityExpressionPart(entity,Kusto.Language.Editor.ActorUtilities.IsEntityGroupElementPart)},IsClusterPart:function(part){var fc;return(fc=Bridge.as(part,Kusto.Language.Syntax.FunctionCallExpression))!=null&&Bridge.referenceEquals(fc.ReferencedSymbol,Kusto.Language.Functions.Cluster)},IsDatabasePart:function(part){var fc;return(fc=Bridge.as(part,Kusto.Language.Syntax.FunctionCallExpression))!=null&&Bridge.referenceEquals(fc.ReferencedSymbol,Kusto.Language.Functions.Database)},IsEntityPart:function(part,globals){var fc,nr,sym,pe;return(globals===void 0&&(globals=null),part==null)?!1:(fc=Bridge.as(part,Kusto.Language.Syntax.FunctionCallExpression))!=null&&Kusto.Language.Editor.ActorUtilities.IsEntityFunction(Bridge.as(fc.ReferencedSymbol,Kusto.Language.Symbols.FunctionSymbol))?!0:globals!=null&&(nr=Bridge.as(part,Kusto.Language.Syntax.NameReference))!=null&&(sym=nr.ReferencedSymbol)!=null&&globals.GetDatabase$2(sym)!=null?!0:(pe=Bridge.as(part.Parent,Kusto.Language.Syntax.PathExpression))!=null&&Bridge.referenceEquals(pe.Selector,part)&&Kusto.Language.Editor.ActorUtilities.IsDatabasePart(pe.Expression)},IsEntityGroupElementPart:function(part){var nr;return(nr=Bridge.as(part,Kusto.Language.Syntax.NameReference))!=null&&Bridge.is(nr.ReferencedSymbol,Kusto.Language.Symbols.EntityGroupElementSymbol)},IsDatabaseQualifiedName:function(node){var pfc,pe,fc,ppe,ppefc;return((pfc=Bridge.as(node.Parent,Kusto.Language.Syntax.FunctionCallExpression))!=null&&(node=pfc),(pe=Bridge.as(node.Parent,Kusto.Language.Syntax.PathExpression))!=null)?(fc=Bridge.as(pe.Expression,Kusto.Language.Syntax.FunctionCallExpression))!=null&&Bridge.referenceEquals(fc.ReferencedSymbol,Kusto.Language.Functions.Database)||(ppe=Bridge.as(pe.Expression,Kusto.Language.Syntax.PathExpression))!=null&&(ppefc=Bridge.as(ppe.Selector,Kusto.Language.Syntax.FunctionCallExpression))!=null&&Bridge.referenceEquals(ppefc.ReferencedSymbol,Kusto.Language.Functions.Database):!1},IsDatabaseMemberNotFromCurrentDatabase:function(symbol,globals){var db;return(db=globals.GetDatabase$2(symbol))!=null&&!Bridge.referenceEquals(db,globals.Database)},GetEntityReference:function(node){var fc,nr;return(fc=Bridge.as(node,Kusto.Language.Syntax.FunctionCallExpression))!=null&&(Bridge.referenceEquals(fc.ReferencedSymbol,Kusto.Language.Functions.Table)||Bridge.referenceEquals(fc.ReferencedSymbol,Kusto.Language.Functions.ExternalTable)||Bridge.referenceEquals(fc.ReferencedSymbol,Kusto.Language.Functions.MaterializedView))?fc.ResultType:(nr=Bridge.as(node,Kusto.Language.Syntax.NameReference))==null||Bridge.is(nr.Parent,Kusto.Language.Syntax.FunctionCallExpression)?null:nr.ReferencedSymbol},GetQueryWithDatabaseQualifiersRemoved:function(query,qualifiedSymbol,globals){for(var nr,qualifier,len,text=new Kusto.Language.Editor.EditString.ctor(query.toString()),nameRefsToDequalify=query.GetDescendants(Kusto.Language.Syntax.NameReference,function(nr){return Kusto.Language.Editor.ActorUtilities.IsDatabaseQualifiedName(nr)&&Bridge.referenceEquals(nr.ReferencedSymbol,qualifiedSymbol)}),i=System.Array.getCount(nameRefsToDequalify,Kusto.Language.Syntax.NameReference)-1|0;i>=0;i=i-1|0)nr=System.Array.getItem(nameRefsToDequalify,i,Kusto.Language.Syntax.NameReference),qualifier=Kusto.Language.Editor.ActorUtilities.GetQualifierToRemove(nr),Bridge.referenceEquals(qualifier,nr)||(len=nr.TextStart-qualifier.TextStart|0,text=text.Remove(qualifier.TextStart,len));return text},GetQualifierToRemove:function(node){var fc;return(fc=Bridge.as(node.Parent,Kusto.Language.Syntax.FunctionCallExpression))!=null&&(node=node.Parent),Kusto.Language.Editor.ActorUtilities.IsDatabaseQualifiedName(node)?node.Parent:node},GetInferredNewLine:function(text){var newLinePos=text.lastIndexOf(String.fromCharCode(10));return newLinePos>=0?newLinePos>0&&text.charCodeAt(newLinePos-1|0)===13?"\r\n":"\n":"\n"},IsExpressionOfLetStatement:function(node){var ls;return(ls=Bridge.as(node.Parent,Kusto.Language.Syntax.LetStatement))!=null&&Bridge.referenceEquals(ls.Expression,node)},IsSelectorOfPathExpression:function(node){var pe;return(pe=Bridge.as(node.Parent,Kusto.Language.Syntax.PathExpression))!=null&&Bridge.referenceEquals(pe.Selector,node)},IsOperatorOfPipeExpression:function(node){var pe;return(pe=Bridge.as(node.Parent,Kusto.Language.Syntax.PipeExpression))!=null&&Bridge.referenceEquals(pe.Operator,node)},IsFreeStandingExpression:function(ex){return!Kusto.Language.Editor.ActorUtilities.IsSelectorOfPathExpression(ex)&&!Kusto.Language.Editor.ActorUtilities.IsOperatorOfPipeExpression(ex)},GetNewName:function(code,position,baseName){var name=baseName,count=0;return code.GetSpeculativeReferencedSymbol(position,name)!=null&&(count=count+1|0,name=(baseName||"")+count),name},GetExternalSymbolsReferenced:function(code,start,length){var symbolsInScope=Kusto.Language.Utils.ListExtensions.ToHashSetEx(Kusto.Language.Symbols.Symbol,code.GetSymbolsInScope(start));return Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Symbols.Symbol,System.Linq.Enumerable.from(code.Syntax.GetDescendantsOrSelf(Kusto.Language.Syntax.Expression,function(ex){return Kusto.Language.Editor.ActorUtilities.IsInRange(ex,start,length)&&ex.ReferencedSymbol!=null&&symbolsInScope.contains(ex.ReferencedSymbol)}),Kusto.Language.Syntax.Expression).select(function(ex){return ex.ReferencedSymbol}).distinct())},IsInRange:function(element,start,length){var end=start+length|0;return element.TriviaStart<=end&&element.End>=start},GetColumnsInScope:function(code,position){var token=code.Syntax.GetTokenAt(position),op=token.Parent.GetFirstAncestorOrSelf(Kusto.Language.Syntax.QueryOperator),pe,ts,ts2;if(op!=null)if((pe=Bridge.as(op.Parent,Kusto.Language.Syntax.PipeExpression))!=null&&Bridge.referenceEquals(pe.Operator,op)&&(ts=Bridge.as(pe.Expression.ResultType,Kusto.Language.Symbols.TableSymbol))!=null)return ts.Columns;else if((ts2=code.GetColumnsInScope(op.TextStart))!=null)return ts2.Columns;return Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Symbols.ColumnSymbol).Instance},GetSchema:function(columns){return"("+(Bridge.toArray(System.Linq.Enumerable.from(columns,Kusto.Language.Symbols.ColumnSymbol).select(function(c){return System.String.format("{0}: {1}",Kusto.Language.KustoFacts.BracketNameIfNecessary(c.Name),Kusto.Language.Editor.ActorUtilities.GetKustoType(c.Type))})).join(", ")||"")+")"},GetKustoType:function(type){var s,t;return(s=Bridge.as(type,Kusto.Language.Symbols.ScalarSymbol))!=null?s.Name:(t=Bridge.as(type,Kusto.Language.Symbols.TableSymbol))!=null?System.Array.getCount(t.Columns,Kusto.Language.Symbols.ColumnSymbol)===0?"(*)":Kusto.Language.Editor.ActorUtilities.GetSchema(t.Columns):"unknown"},ChangeIndentation:function(text,newIndentation,includeFirstLine){var builder=new System.Text.StringBuilder,lineStart=0,lineLength,lineLength1,wsLength;for(includeFirstLine||(lineLength=Kusto.Language.Parsing.TextFacts.GetLineLength(text,lineStart,!0),builder.append(text,lineStart,lineLength),lineStart=lineStart+lineLength|0);lineStart<text.length;)lineLength1=Kusto.Language.Parsing.TextFacts.GetLineLength(text,lineStart,!0),wsLength=Kusto.Language.Parsing.TokenParser.ScanWhitespace(text,lineStart),builder.append(newIndentation),builder.append(text,lineStart+wsLength|0,lineLength1-wsLength|0),lineStart=lineStart+lineLength1|0;return builder.toString()},IndentText:function(text,rangeStart,rangeLength,indentationDelta,includeFirstLine){var lineLength,end,lineLength1,wsLength,len;includeFirstLine===void 0&&(includeFirstLine=!0);var edits=new(System.Collections.Generic.List$1(Kusto.Language.Editor.TextEdit).ctor),indentation=indentationDelta===0?"":indentationDelta>0?System.String.fromCharCount(32,indentationDelta):null,lineStart=rangeStart;for(includeFirstLine||(lineLength=Kusto.Language.Parsing.TextFacts.GetLineLength(Kusto.Language.Editor.EditString.op_Implicit$1(text),lineStart,!0),lineStart=lineStart+lineLength|0),end=rangeStart+rangeLength|0;lineStart<end;)lineLength1=Kusto.Language.Parsing.TextFacts.GetLineLength(Kusto.Language.Editor.EditString.op_Implicit$1(text),lineStart,!0),wsLength=Kusto.Language.Parsing.TokenParser.ScanWhitespace(Kusto.Language.Editor.EditString.op_Implicit$1(text),lineStart),indentationDelta>=0?edits.add(Kusto.Language.Editor.TextEdit.Insertion(lineStart,indentation)):(len=Math.min(wsLength,-indentationDelta|0),edits.add(Kusto.Language.Editor.TextEdit.Deletion(lineStart,len))),lineStart=lineStart+lineLength1|0;return text.ApplyAll$1(edits)},AddData:function(action,data){var ma,aa;return(ma=Bridge.as(action,Kusto.Language.Editor.MenuAction))!=null?ma.WithActions$1(System.Linq.Enumerable.from(ma.Actions,Kusto.Language.Editor.CodeAction).select(function(alt){return Bridge.cast(Kusto.Language.Editor.ActorUtilities.AddData(alt,data),Kusto.Language.Editor.ApplyAction)}).toList(Kusto.Language.Editor.ApplyAction)):(aa=Bridge.as(action,Kusto.Language.Editor.ApplyAction))!=null?aa.AddData(data):action},AddData$1:function(action,data){return data===void 0&&(data=[]),Kusto.Language.Editor.ActorUtilities.AddData(action,Bridge.cast(data,System.Collections.Generic.IReadOnlyList$1(System.String)))},RemoveData:function(action,count){var ma,aa;return(ma=Bridge.as(action,Kusto.Language.Editor.MenuAction))!=null?ma.WithActions$1(System.Linq.Enumerable.from(ma.Actions,Kusto.Language.Editor.CodeAction).select(function(alt){return Bridge.cast(Kusto.Language.Editor.ActorUtilities.RemoveData(alt,count),Kusto.Language.Editor.ApplyAction)}).toList(Kusto.Language.Editor.ApplyAction)):(aa=Bridge.as(action,Kusto.Language.Editor.ApplyAction))!=null?aa.RemoveData(count):action},InsertBrackets:function(text,openPosition,prefixText,openBracketText,closePosition,closeBracketText,options){var textWithBrackets,indentation=Kusto.Language.Parsing.TextFacts.GetIndentationText(Kusto.Language.Editor.EditString.op_Implicit$1(text),openPosition);textWithBrackets=options.BrackettingStyle===Kusto.Language.Editor.BrackettingStyle.Diagonal?text.ApplyAll([Kusto.Language.Editor.TextEdit.Insertion(openPosition,(prefixText||"")+" "+(openBracketText||"")+"\n"),Kusto.Language.Editor.TextEdit.Insertion(closePosition,"\n"+(indentation||"")+(closeBracketText||"")+"\n")]):text.ApplyAll([Kusto.Language.Editor.TextEdit.Insertion(openPosition,(prefixText||"")+"\n"+(indentation||"")+(openBracketText||"")+"\n"),Kusto.Language.Editor.TextEdit.Insertion(closePosition,"\n"+(indentation||"")+(closeBracketText||"")+"\n")]);var interiorStart=textWithBrackets.GetCurrentPosition(openPosition,Kusto.Language.Editor.PositionBias.Right),interiorEnd=textWithBrackets.GetCurrentPosition(closePosition,Kusto.Language.Editor.PositionBias.Left),interiorLength=interiorEnd-interiorStart|0;return Kusto.Language.Editor.ActorUtilities.IndentText(textWithBrackets,interiorStart,interiorLength,options.IndentationSize)}}}});Bridge.define("Kusto.Language.Editor.AnalyzerInfo",{props:{Name:null,Diagnostics:null},ctors:{ctor:function(name,diagnostics){var $t;this.$initialize();this.Name=($t=name,$t!=null?$t:"");this.Diagnostics=diagnostics||Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Diagnostic).Instance}}});Bridge.define("Kusto.Language.Editor.AnalyzerUtilities",{statics:{methods:{IsDbColumn:function(expr,globals){var c;return(c=Bridge.as(expr.ReferencedSymbol,Kusto.Language.Symbols.ColumnSymbol))!=null&&globals.GetTable(c)!=null},HasDbColumnOperand:function(expr,globals){return Kusto.Language.Editor.AnalyzerUtilities.HasMatchingOperand(expr,function(operand){return Kusto.Language.Editor.AnalyzerUtilities.IsDbColumn(operand,globals)})},IsShortStringConstant:function(expr,globals,lengthNotShort){lengthNotShort===void 0&&(lengthNotShort=3);var s;return(s=Bridge.as(expr.ConstantValue,System.String))!=null&&s.length<lengthNotShort},HasMatchingOperand:function(expr,fnMatches,includeListOperandValues){return includeListOperandValues===void 0&&(includeListOperandValues=!1),Kusto.Language.Editor.AnalyzerUtilities.GetFirstMatchingOperand(expr,fnMatches,includeListOperandValues)!=null},HasAnyMatchingElement:function(list,fnMatches){return Kusto.Language.Editor.AnalyzerUtilities.GetFirstMatchingElement(list,fnMatches)!=null},GetFirstMatchingOperand:function(expr,fnMatches,includeListOperandValues){var be,pu,hall,hany;includeListOperandValues===void 0&&(includeListOperandValues=!1);do{if(Bridge.is(expr,Kusto.Language.Syntax.BinaryExpression)){if(be=Bridge.cast(expr,Kusto.Language.Syntax.BinaryExpression),fnMatches(be.Left))return be.Left;if(fnMatches(be.Right))return be.Right;break}if(Bridge.is(expr,Kusto.Language.Syntax.PrefixUnaryExpression)){if(pu=Bridge.cast(expr,Kusto.Language.Syntax.PrefixUnaryExpression),fnMatches(pu.Expression))return pu.Expression;break}if(Bridge.is(expr,Kusto.Language.Syntax.HasAllExpression)){if(hall=Bridge.cast(expr,Kusto.Language.Syntax.HasAllExpression),fnMatches(hall.Left))return hall.Left;if(includeListOperandValues)return Kusto.Language.Editor.AnalyzerUtilities.GetFirstMatchingElement(hall.Right.Expressions,fnMatches);break}if(Bridge.is(expr,Kusto.Language.Syntax.HasAnyExpression)){if(hany=Bridge.cast(expr,Kusto.Language.Syntax.HasAnyExpression),fnMatches(hany.Left))return hany.Left;if(includeListOperandValues)return Kusto.Language.Editor.AnalyzerUtilities.GetFirstMatchingElement(hany.Right.Expressions,fnMatches);break}}while(0);return null},GetFirstMatchingElement:function(list,fnMatches){for(var i=0;i<list.Count;i=i+1|0)if(fnMatches(list.getItem$1(i).Element$1))return list.getItem$1(i).Element$1;return null},AddRenameEdits:function(edits,name,newName){return edits.add(Kusto.Language.Editor.TextEdit.Replacement(name.TextStart,name.Width,newName)),edits},AddRemoveArgumentEdits:function(edits,argument){var nextToken=argument.GetLastToken().GetNextToken(),prevToken=argument.GetFirstToken().GetPreviousToken(),start,end;return prevToken!=null&&nextToken!=null?(start=prevToken.Kind===Kusto.Language.Syntax.SyntaxKind.CommaToken?prevToken.TextStart:prevToken.Kind===Kusto.Language.Syntax.SyntaxKind.OpenParenToken?prevToken.End:argument.TriviaStart,end=nextToken.Kind===Kusto.Language.Syntax.SyntaxKind.CommaToken?nextToken.TextStart:nextToken.Kind===Kusto.Language.Syntax.SyntaxKind.CloseParenToken?nextToken.TextStart:argument.End):prevToken!=null?(start=prevToken.Kind===Kusto.Language.Syntax.SyntaxKind.CommaToken?prevToken.TextStart:prevToken.Kind===Kusto.Language.Syntax.SyntaxKind.OpenParenToken?prevToken.End:argument.TriviaStart,end=argument.End):nextToken!=null?(start=argument.TriviaStart,end=nextToken.Kind===Kusto.Language.Syntax.SyntaxKind.CommaToken?nextToken.TextStart:nextToken.Kind===Kusto.Language.Syntax.SyntaxKind.CloseParenToken?nextToken.TextStart:argument.End):(start=argument.TriviaStart,end=argument.End),edits.add(Kusto.Language.Editor.TextEdit.Deletion(start,end-start|0)),edits},AddRemoveArgumentEdits$1:function(edits,functionCall,argumentIndex){return argumentIndex<functionCall.ArgumentList.Expressions.Count&&Kusto.Language.Editor.AnalyzerUtilities.AddRemoveArgumentEdits(edits,functionCall.ArgumentList.Expressions.getItem$1(argumentIndex).Element$1),edits},AddInsertArgumentEdits:function(edits,functionCall,argumentIndex,newArgumentText){if(functionCall.ArgumentList.Expressions.Count===0&&edits.add(Kusto.Language.Editor.TextEdit.Insertion(functionCall.ArgumentList.CloseParen.TriviaStart,newArgumentText)),argumentIndex>=functionCall.ArgumentList.Expressions.Count)edits.add(Kusto.Language.Editor.TextEdit.Insertion(functionCall.ArgumentList.CloseParen.TriviaStart,System.String.format(", {0}",[newArgumentText])));else if(functionCall.ArgumentList.Expressions.Count>argumentIndex){var seperatedArg=functionCall.ArgumentList.Expressions.getItem$1(argumentIndex);edits.add(Kusto.Language.Editor.TextEdit.Insertion(seperatedArg.TextStart,System.String.format("{0}, ",[newArgumentText])))}return edits},AddAddArgumentEdits:function(edits,functionCall,newArgumentText){return Kusto.Language.Editor.AnalyzerUtilities.AddInsertArgumentEdits(edits,functionCall,functionCall.ArgumentList.Expressions.Count,newArgumentText)},GetFunctionCall:function(argument){var sep,list,exprList,fc;return(sep=Bridge.as(argument.Parent,Kusto.Language.Syntax.SeparatedElement))!=null&&(list=Bridge.as(sep.Parent,Kusto.Language.Syntax.SyntaxList))!=null&&(exprList=Bridge.as(list.Parent,Kusto.Language.Syntax.ExpressionList))!=null&&(fc=Bridge.as(exprList.Parent,Kusto.Language.Syntax.FunctionCallExpression))!=null?fc:null},AddRemoveOuterFunctionCallEdits:function(edits,outer,argument){return edits.add(Kusto.Language.Editor.TextEdit.Deletion(outer.TextStart,argument.TriviaStart-outer.TextStart|0)),edits.add(Kusto.Language.Editor.TextEdit.Deletion(argument.End,outer.End-argument.End|0)),edits}}}});Bridge.define("Kusto.Language.Parsing.ParserVisitor$3",function(TInput,TArg,TResult){return{}});Bridge.define("Kusto.Language.Editor.CodeAction",{statics:{fields:{FixAllKind:null,MenuKind:null},ctors:{init:function(){this.FixAllKind="FixAll";this.MenuKind="Menu"}},methods:{Create$1:function(kind,title,description,data){return data===void 0&&(data=null),new Kusto.Language.Editor.SingleAction(kind,title,description,data)},Create:function(title,description,data){return data===void 0&&(data=null),new Kusto.Language.Editor.SingleAction(title,title,description,data)},CreateFixAll:function(title,description,actions){return new Kusto.Language.Editor.MultiAction.ctor(Kusto.Language.Editor.CodeAction.FixAllKind,title,description,actions)},CreateMenu:function(title,description,actions){return new Kusto.Language.Editor.MenuAction.ctor(title,description,actions)}}},props:{Kind:null,Title:null,Description:null},ctors:{ctor:function(kind,title,description){var $t,$t1,$t2;this.$initialize();this.Kind=($t=kind,$t!=null?$t:"");this.Title=($t1=title,$t1!=null?$t1:"");this.Description=($t2=description,$t2!=null?$t2:"")}},methods:{WithTitle:function(title){return this.New(this.Kind,title,this.Description)},WithDescription:function(description){return this.New(this.Kind,this.Title,description)}}});Bridge.define("Kusto.Language.Editor.KustoAnalyzer",{fields:{_diagnostics:null,_fixer:null},props:{Name:{get:function(){return Bridge.Reflection.getTypeName(Bridge.getType(this))}},Diagnostics:{get:function(){return this._diagnostics==null&&(this._diagnostics=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Diagnostic,this.GetDiagnostics())),this._diagnostics}},Fixer:{get:function(){return this._fixer==null&&(this._fixer=this.CreateFixer()),this._fixer}}},methods:{CreateFixer:function(){return new Kusto.Language.Editor.KustoAnalyzer.AnalyzerFixer(this)},GetFixAction:function(code,dx,options,actions,cancellationToken){},GetFixEdits:function(code,action,caretPosition,options,cancellationToken){return new Kusto.Language.Editor.FixEdits.$ctor2(caretPosition,null)}}});Bridge.define("Kusto.Language.Editor.BrackettingStyle",{$kind:"enum",statics:{fields:{Default:0,None:1,Vertical:2,Diagonal:3}}});Bridge.define("Kusto.Language.Editor.ResultAction");Bridge.define("Kusto.Language.Editor.ClassificationInfo",{statics:{fields:{Empty:null},ctors:{init:function(){this.Empty=new Kusto.Language.Editor.ClassificationInfo(null)}}},props:{Classifications:null},ctors:{ctor:function(classifications){this.$initialize();this.Classifications=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Editor.ClassifiedRange,classifications)}}});Bridge.define("Kusto.Language.Editor.ClassificationKind",{$kind:"enum",statics:{fields:{PlainText:0,Comment:1,Punctuation:2,Directive:3,Literal:4,StringLiteral:5,Type:6,Column:7,Table:8,Database:9,Function:10,Parameter:11,Variable:12,Identifier:13,ClientParameter:14,QueryParameter:15,ScalarOperator:16,MathOperator:17,QueryOperator:18,Command:19,Keyword:20,MaterializedView:21,SchemaMember:22,SignatureParameter:23,Option:24}}});Bridge.define("Kusto.Language.Editor.ClassifiedRange",{props:{Kind:0,Start:0,Length:0,End:{get:function(){return this.Start+this.Length|0}}},ctors:{ctor:function(kind,start,length){this.$initialize();this.Kind=kind;this.Start=start;this.Length=length}}});Bridge.define("Kusto.Language.Editor.ClassifiedText",{props:{Kind:0,Text:null},ctors:{$ctor1:function(text){Kusto.Language.Editor.ClassifiedText.ctor.call(this,Kusto.Language.Editor.ClassificationKind.PlainText,text)},ctor:function(kind,text){this.$initialize();this.Kind=kind;this.Text=text}}});Bridge.define("Kusto.Language.Editor.SyntaxReference",{props:{Range:null,Start:{get:function(){return this.Range.Start}},Length:{get:function(){return this.Range.Length}},End:{get:function(){return this.Range.End}}},ctors:{init:function(){this.Range=new Kusto.Language.Editor.TextRange},ctor:function(range){this.$initialize();this.Range=range},$ctor1:function(start,length){Kusto.Language.Editor.SyntaxReference.ctor.call(this,new Kusto.Language.Editor.TextRange.$ctor1(start,length))}}});Bridge.define("Kusto.Language.Editor.CodeActionInfo",{statics:{fields:{NoActions:null},ctors:{init:function(){this.NoActions=new Kusto.Language.Editor.CodeActionInfo(Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Editor.CodeAction).Instance)}}},props:{Actions:null},ctors:{ctor:function(actions){this.$initialize();this.Actions=actions}}});Bridge.define("Kusto.Language.Editor.CodeActionOptions",{statics:{fields:{Default:null},ctors:{init:function(){this.Default=new Kusto.Language.Editor.CodeActionOptions(null,null)}}},props:{DiagnosticFilter:null,FormattingOptions:null},ctors:{ctor:function(diagnosticFilter,formattingOptions){this.$initialize();this.DiagnosticFilter=diagnosticFilter||Kusto.Language.Editor.DisabledDiagnostics.Default;this.FormattingOptions=formattingOptions||Kusto.Language.Editor.FormattingOptions.Default}},methods:{WithFormattingOptions:function(options){return new Kusto.Language.Editor.CodeActionOptions(this.DiagnosticFilter,options)},WithDiagnosticFilter:function(filter){return new Kusto.Language.Editor.CodeActionOptions(filter,this.FormattingOptions)}}});Bridge.define("Kusto.Language.Editor.CodeActionResult",{statics:{fields:{Failed:null,Nothing:null},ctors:{init:function(){this.Failed=Kusto.Language.Editor.CodeActionResult.Failure("Action failed");this.Nothing=new Kusto.Language.Editor.CodeActionResult.$ctor1(Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Editor.ResultAction).Instance)}},methods:{Change$1:function(changes,changedText){return new Kusto.Language.Editor.CodeActionResult.ctor([new Kusto.Language.Editor.ChangeTextAction.$ctor1(changes,changedText)])},Change:function(changedText){return Kusto.Language.Editor.CodeActionResult.Change$1(changedText.GetChanges(),changedText.CurrentText)},ChangeAndMove$1:function(changes,changedText,newCaretPosition){return new Kusto.Language.Editor.CodeActionResult.ctor([new Kusto.Language.Editor.ChangeTextAction.$ctor1(changes,changedText),new Kusto.Language.Editor.MoveCaretAction(newCaretPosition)])},ChangeAndMove:function(changedText,newCaretPosition){return Kusto.Language.Editor.CodeActionResult.ChangeAndMove$1(changedText.GetChanges(),changedText.CurrentText,newCaretPosition)},Failure:function(failureReason){return(failureReason===void 0&&(failureReason=null),failureReason==null)?Kusto.Language.Editor.CodeActionResult.Failed:new Kusto.Language.Editor.CodeActionResult.$ctor2(null,failureReason)}}},props:{Actions:null,FailureReason:null},ctors:{$ctor2:function(actions,failureReason){this.$initialize();this.Actions=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Editor.ResultAction,actions);this.FailureReason=failureReason},$ctor1:function(actions){Kusto.Language.Editor.CodeActionResult.$ctor2.call(this,actions,null)},ctor:function(actions){actions===void 0&&(actions=[]);Kusto.Language.Editor.CodeActionResult.$ctor1.call(this,Bridge.cast(actions,System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Editor.ResultAction)))}},methods:{WithAction:function(action){return new Kusto.Language.Editor.CodeActionResult.$ctor2(System.Linq.Enumerable.from(this.Actions,Kusto.Language.Editor.ResultAction).concat(System.Array.init([action],Kusto.Language.Editor.ResultAction)).toList(Kusto.Language.Editor.ResultAction),null)},WithAdjustedPosition:function(delta){var $t,adjustedActions,act,mca;if(System.Array.getCount(this.Actions,Kusto.Language.Editor.ResultAction)>0&&delta!==0){adjustedActions=new(System.Collections.Generic.List$1(Kusto.Language.Editor.ResultAction).ctor);$t=Bridge.getEnumerator(this.Actions,Kusto.Language.Editor.ResultAction);try{while($t.moveNext()){act=$t.Current;do{if(Bridge.is(act,Kusto.Language.Editor.MoveCaretAction)){mca=Bridge.cast(act,Kusto.Language.Editor.MoveCaretAction);adjustedActions.add(new Kusto.Language.Editor.MoveCaretAction(mca.NewCaretPosition+delta|0));break}adjustedActions.add(act);break}while(0)}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return new Kusto.Language.Editor.CodeActionResult.$ctor1(adjustedActions)}return this}}});Bridge.define("Kusto.Language.Editor.CodeBlock",{fields:{_codeService:null},props:{Text:{get:function(){return this._codeService.Text}},Start:0,Length:{get:function(){return this.Text.length}},End:{get:function(){return this.Start+this.Length|0}},Kind:{get:function(){return this._codeService.Kind}},Service:{get:function(){return this._codeService}}},ctors:{ctor:function(start,codeService){this.$initialize();this.Start=start;var ols;this._codeService=(ols=Bridge.as(codeService,Kusto.Language.Editor.OffsetCodeService))!=null?ols.WithOffset(start):new Kusto.Language.Editor.OffsetCodeService(codeService,start)}},methods:{WithStart:function(start){return new Kusto.Language.Editor.CodeBlock(start,this.Service)}}});Bridge.define("Kusto.Language.Editor.CodeKinds",{statics:{fields:{Query:null,Command:null,Directive:null,Unknown:null},ctors:{init:function(){this.Query="Query";this.Command="Command";this.Directive="Directive";this.Unknown="Unknown"}}}});Bridge.define("Kusto.Language.Editor.CodeScript",{statics:{methods:{From:function(text,factory){var $t;return Kusto.Language.Editor.CodeScript.CreateScript(($t=text,$t!=null?$t:""),factory)},From$1:function(text,globals){return Kusto.Language.Editor.CodeScript.From(text,new Kusto.Language.Editor.KustoCodeServiceFactory(globals))},CreateScript:function(text,factory,existingBlocks){var lineStarts,blockStarts,existingBlockMap,blocks,i,blockText,service;for(existingBlocks===void 0&&(existingBlocks=null),lineStarts=new(System.Collections.Generic.List$1(System.Int32).ctor),blockStarts=new(System.Collections.Generic.List$1(System.Int32).ctor),Kusto.Language.Editor.CodeScript.GetStarts(text,lineStarts,blockStarts),existingBlockMap=existingBlocks!=null?Kusto.Language.Utils.TextKeyedDictionaryExtensions.ToTextKeyedDictionary(Kusto.Language.Editor.CodeBlock,Kusto.Language.Editor.CodeBlock,existingBlocks,function(b){return b.Text},function(b){return b}):null,blocks=new(System.Collections.Generic.List$1(Kusto.Language.Editor.CodeBlock).ctor),i=0;i<blockStarts.Count;i=i+1|0){var start=blockStarts.getItem(i),length=(i+1|0)<blockStarts.Count?blockStarts.getItem(i+1|0)-start|0:text.length-start|0,block={};existingBlockMap!=null&&existingBlockMap.TryGetValue(text,start,length,block)?block.v=block.v.WithStart(start):(blockText=text.substr(start,length),service={},factory.TryGetCodeService(blockText,service)||(service.v=new Kusto.Language.Editor.UnknownCodeService(blockText)),block.v=new Kusto.Language.Editor.CodeBlock(start,service.v));blocks.add(block.v)}return new Kusto.Language.Editor.CodeScript(text,lineStarts,blocks,factory)},GetStarts:function(text,lineStarts,blockStarts){var i,n,lb,strlen,commentLen;lineStarts.add(0);blockStarts.add(0);var allWhitespace=!0,newBlockNextWhitespaceLine=!1,newBlockNextNonWhitespaceLine=!1,lineStart=0,skipToEnd=0;for(i=0,n=text.length;i<n;){if(lb=Kusto.Language.Parsing.TextFacts.GetLineBreakLength(text,i),lb>0){i=i+lb|0;allWhitespace&&i>skipToEnd?(newBlockNextWhitespaceLine&&blockStarts.add(lineStart),newBlockNextWhitespaceLine=!0,newBlockNextNonWhitespaceLine=!0):newBlockNextNonWhitespaceLine?(blockStarts.add(lineStart),newBlockNextWhitespaceLine=!1,newBlockNextNonWhitespaceLine=!1):newBlockNextWhitespaceLine=!1;lineStart=i;lineStarts.add(lineStart);allWhitespace=!0;continue}i>=skipToEnd&&(strlen=Kusto.Language.Parsing.TokenParser.ScanStringLiteral(text,i),strlen>0?skipToEnd=i+strlen|0:(commentLen=Kusto.Language.Parsing.TokenParser.ScanComment(text,i),commentLen>0&&(skipToEnd=i+commentLen|0)));Kusto.Language.Parsing.TextFacts.IsWhitespace(text.charCodeAt(i))?i=i+1|0:(i=i+1|0,allWhitespace=!1)}(allWhitespace&&newBlockNextWhitespaceLine||!allWhitespace&&newBlockNextNonWhitespaceLine)&&blockStarts.add(lineStart)}}},fields:{lineStarts:null,blocks:null},props:{Text:null,Factory:null,Blocks:{get:function(){return this.blocks}},Globals:{get:function(){var $t;return($t=this.Factory.GetFactory(Kusto.Language.Editor.KustoCodeServiceFactory))!=null?$t.Globals:null}},LineStarts:{get:function(){return this.lineStarts}}},ctors:{ctor:function(text,lineStarts,blocks,factory){this.$initialize();this.Text=text;this.lineStarts=lineStarts;this.blocks=blocks;this.Factory=factory}},methods:{WithText:function(newText){var $t;return Kusto.Language.Editor.CodeScript.CreateScript(($t=newText,$t!=null?$t:""),this.Factory,this.Blocks)},WithFactory:function(factory){return Bridge.referenceEquals(factory,this.Factory)?this:Kusto.Language.Editor.CodeScript.CreateScript(this.Text,factory,null)},WithTextAndFactory:function(newText,factory){return this.WithText(newText).WithFactory(factory)},WithGlobals:function(newGlobals){var kustoFactory=this.Factory.GetFactory(Kusto.Language.Editor.KustoCodeServiceFactory);return kustoFactory!=null?this.WithFactory(this.Factory.WithFactory(kustoFactory.WithGlobals(newGlobals))):this},GetBlockAtPosition:function(position){if(position===0)return System.Array.getItem(this.Blocks,0,Kusto.Language.Editor.CodeBlock);else if(position===this.Text.length)return System.Array.getItem(this.Blocks,System.Array.getCount(this.Blocks,Kusto.Language.Editor.CodeBlock)-1|0,Kusto.Language.Editor.CodeBlock);else if(position>=0&&position<this.Text.length){var index=Kusto.Language.Utils.ListExtensions.BinarySearch(Kusto.Language.Editor.CodeBlock,this.blocks,function(b){return position<b.Start?1:position>=b.End?-1:0});return System.Array.getItem(this.Blocks,index,Kusto.Language.Editor.CodeBlock)}else return null},TryGetTextPosition:function(line,lineOffset,position){var lineStart,lineEnd,lineLength;if(line=line-1|0,lineOffset=lineOffset-1|0,position.v=0,line<0||line>=this.lineStarts.Count)return!1;for(lineStart=this.lineStarts.getItem(line),lineEnd=line<(this.lineStarts.Count-1|0)?this.lineStarts.getItem(line+1|0):this.Text.length;lineEnd>lineStart&&Kusto.Language.Parsing.TextFacts.GetLineBreakLength(this.Text,lineEnd-1|0)>0;)lineEnd=lineEnd-1|0;return(lineLength=lineEnd-lineStart|0,lineOffset<(lineLength+1|0))?(position.v=lineStart+lineOffset|0,!0):!1},TryGetLineAndOffset:function(position,line,lineOffset){return Kusto.Language.Parsing.TextFacts.TryGetLineAndOffset(this.lineStarts,position,line,lineOffset)}}});Bridge.define("Kusto.Language.Editor.CodeService",{props:{Kind:{get:function(){return""}},Text:{get:function(){return""}}},methods:{GetCombinedDiagnostics:function(waitForAnalysis,filter,cancellationToken){return waitForAnalysis===void 0&&(waitForAnalysis=!0),filter===void 0&&(filter=null),cancellationToken===void 0&&(cancellationToken=new Kusto.Language.Utils.CancellationToken),System.Linq.Enumerable.from(this.GetDiagnostics(waitForAnalysis,cancellationToken),Kusto.Language.Diagnostic).concat(this.GetAnalyzerDiagnostics(waitForAnalysis,cancellationToken)).where(function(d){return filter==null||filter.IsDiagnosticEnabled(d)}).toList(Kusto.Language.Diagnostic)},GetOutlines$1:function(cancellationToken){return cancellationToken===void 0&&(cancellationToken=new Kusto.Language.Utils.CancellationToken),this.GetOutlines(Kusto.Language.Editor.OutliningOptions.Default,cancellationToken)}}});Bridge.define("Kusto.Language.Editor.CodeServiceFactory",{methods:{GetFactory:function(TFactory){return Bridge.is(this,TFactory)?Bridge.cast(this,TFactory):null},WithFactory:function(factory){var af;return(af=Bridge.as(factory,Kusto.Language.Editor.CodeServiceFactory.AggregateCodeServiceFactory))!=null?af.WithFactory(this):Bridge.referenceEquals(Bridge.getType(factory),Bridge.getType(this))?factory:new Kusto.Language.Editor.CodeServiceFactory.AggregateCodeServiceFactory(System.Array.init([this],Kusto.Language.Editor.CodeServiceFactory)).WithFactory(factory)}}});Bridge.define("Kusto.Language.Editor.CodeServiceFeatures",{statics:{fields:{Diagnostics:null,Classification:null,Completion:null,Outlining:null,QuickInfo:null,ClusterReferences:null,DatabaseReferences:null,MinimalText:null,Formatting:null,ClientParameters:null},ctors:{init:function(){this.Diagnostics="Diagnostics";this.Classification="Classification";this.Completion="Completion";this.Outlining="Outlining";this.QuickInfo="QuickInfo";this.ClusterReferences="ClusterReferences";this.DatabaseReferences="DatabaseReferences";this.MinimalText="MinimalText";this.Formatting="Formatting";this.ClientParameters="ClientParameters"}}}});Bridge.define("Kusto.Language.Editor.CompletionDisplay",{statics:{methods:{GetText:function(symbol,nameOnly){var t,f,pat,v,p,d,cl,opt;nameOnly===void 0&&(nameOnly=!1);do return Bridge.is(symbol,Kusto.Language.Symbols.TableSymbol)?(t=Bridge.cast(symbol,Kusto.Language.Symbols.TableSymbol),nameOnly)?t.Name:t.IsExternal?System.String.format("external_table('{0}')",[t.Name]):t.Name:Bridge.is(symbol,Kusto.Language.Symbols.FunctionSymbol)?(f=Bridge.cast(symbol,Kusto.Language.Symbols.FunctionSymbol),nameOnly||System.Array.getCount(f.Signatures,Kusto.Language.Symbols.Signature)===0)?f.Name:System.String.format("{0}{1}",f.Name,Kusto.Language.Editor.CompletionDisplay.GetSignatureText(System.Array.getItem(f.Signatures,0,Kusto.Language.Symbols.Signature))):Bridge.is(symbol,Kusto.Language.Symbols.PatternSymbol)?(pat=Bridge.cast(symbol,Kusto.Language.Symbols.PatternSymbol),System.String.format("{0}{1}",pat.Name,Kusto.Language.Editor.CompletionDisplay.GetParametersText(pat.Parameters,!1))):Bridge.is(symbol,Kusto.Language.Symbols.VariableSymbol)?(v=Bridge.cast(symbol,Kusto.Language.Symbols.VariableSymbol),Bridge.is(v.Type,Kusto.Language.Symbols.FunctionSymbol))?Kusto.Language.Editor.CompletionDisplay.GetText(v.Type,nameOnly):v.Name:Bridge.is(symbol,Kusto.Language.Symbols.ParameterSymbol)?(p=Bridge.cast(symbol,Kusto.Language.Symbols.ParameterSymbol),Bridge.is(p.Type,Kusto.Language.Symbols.FunctionSymbol))?Kusto.Language.Editor.CompletionDisplay.GetText(p.Type,nameOnly):p.Name:Bridge.is(symbol,Kusto.Language.Symbols.DatabaseSymbol)?(d=Bridge.cast(symbol,Kusto.Language.Symbols.DatabaseSymbol),d.Name):Bridge.is(symbol,Kusto.Language.Symbols.ClusterSymbol)?(cl=Bridge.cast(symbol,Kusto.Language.Symbols.ClusterSymbol),cl.Name):Bridge.is(symbol,Kusto.Language.Symbols.OptionSymbol)?(opt=Bridge.cast(symbol,Kusto.Language.Symbols.OptionSymbol),opt.Name):symbol.Name;while(0)},GetSignatureText:function(signature){return Kusto.Language.Editor.CompletionDisplay.GetParametersText(signature.Parameters,signature.HasRepeatableParameters)},GetParametersText:function(parameters,hasRepeatableParameters){for(var p,prms,builder=new System.Text.StringBuilder,i=0;i<System.Array.getCount(parameters,Kusto.Language.Symbols.Parameter);i=i+1|0)p=System.Array.getItem(parameters,i,Kusto.Language.Symbols.Parameter),i>0&&builder.append(", "),p.IsOptional?(builder.append("["),builder.append(p.Name),builder.append("]")):builder.append(p.Name);return hasRepeatableParameters&&builder.append(", ..."),prms=builder.toString(),System.String.format("({0})",[prms])}}}});Bridge.define("Kusto.Language.Editor.CompletionHint",{$kind:"enum",statics:{fields:{None:0,Inherit:1,Expression:2,Scalar:4,Tabular:8,Boolean:16,Number:32,Literal:64,Aggregate:128,TabularFunction:256,ScalarFunction:512,DatabaseFunction:1024,Function:2048,Declaration:4096,Column:8192,Table:16384,Database:32768,Cluster:65536,EntityGroup:131072,Graph:262144,Syntax:524288,Query:1048576,Command:2097152,Keyword:4194304,Clause:8388608,MaterializedView:16777216,Option:33554432,ExternalTable:67108864}},$flags:!0});Bridge.define("Kusto.Language.Editor.CompletionInfo",{statics:{fields:{Empty:null},ctors:{init:function(){this.Empty=new Kusto.Language.Editor.CompletionInfo(null,0,0)}}},props:{Items:null,EditStart:0,EditLength:0},ctors:{ctor:function(items,editStart,editLength){this.$initialize();this.Items=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Editor.CompletionItem,items);this.EditStart=editStart;this.EditLength=editLength}}});Bridge.define("Kusto.Language.Editor.CompletionItem",{statics:{methods:{CreateApplyTexts:function(beforeText,afterText){var $t,list=new(System.Collections.Generic.List$1(Kusto.Language.Editor.CompletionText).$ctor2)(2);return list.add(Kusto.Language.Editor.CompletionText.Create(($t=beforeText,$t!=null?$t:""))),afterText!=null&&list.add(Kusto.Language.Editor.CompletionText.Create(afterText,!0,!1)),Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Editor.CompletionText,list)}}},fields:{_beforeText:null,_afterText:null},props:{Kind:0,DisplayText:null,MatchText:null,OrderText:null,ApplyTexts:null,BeforeText:{get:function(){var $t,caretIndex;return this._beforeText==null&&System.Array.getCount(this.ApplyTexts,Kusto.Language.Editor.CompletionText)>0&&(caretIndex=this.CaretIndex,this._beforeText=caretIndex>0?System.String.concat(Bridge.toArray(System.Linq.Enumerable.from(this.ApplyTexts,Kusto.Language.Editor.CompletionText).take(caretIndex).select(function(t){return t.Text}))):caretIndex<0?System.String.concat(Bridge.toArray(System.Linq.Enumerable.from(this.ApplyTexts,Kusto.Language.Editor.CompletionText).select(function(t){return t.Text}))):""),$t=this._beforeText,$t!=null?$t:""}},AfterText:{get:function(){var $t,caretIndex;return this._afterText==null&&System.Array.getCount(this.ApplyTexts,Kusto.Language.Editor.CompletionText)>0&&(caretIndex=this.CaretIndex,this._afterText=caretIndex>=0?System.String.concat(Bridge.toArray(System.Linq.Enumerable.from(this.ApplyTexts,Kusto.Language.Editor.CompletionText).skip(caretIndex).select(function(t){return t.Text}))):""),$t=this._afterText,$t!=null?$t:""}},EditText:{get:function(){return this.BeforeText}},Retrigger:!1,Rank:0,Priority:0,HasCaret:{get:function(){return System.Linq.Enumerable.from(this.ApplyTexts,Kusto.Language.Editor.CompletionText).any(function(at){return at.Caret})}},CaretIndex:{get:function(){for(var i=0;i<System.Array.getCount(this.ApplyTexts,Kusto.Language.Editor.CompletionText);i=i+1|0)if(System.Array.getItem(this.ApplyTexts,i,Kusto.Language.Editor.CompletionText).Caret)return i;return-1}}},ctors:{ctor:function(kind,displayText,applyTexts,matchText,orderText,rank,priority,retrigger){var $t,$t1,$t2;this.$initialize();this.Kind=kind;this.DisplayText=($t=displayText,$t!=null?$t:"");this.MatchText=($t1=matchText,$t1!=null?$t1:displayText);this.OrderText=($t2=orderText,$t2!=null?$t2:this.MatchText);this.ApplyTexts=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Editor.CompletionText,applyTexts);this.Rank=rank;this.Priority=priority;this.Retrigger=retrigger},$ctor1:function(kind,displayText,beforeText,afterText,matchText,orderText,rank,priority,retrigger){beforeText===void 0&&(beforeText=null);afterText===void 0&&(afterText=null);matchText===void 0&&(matchText=null);orderText===void 0&&(orderText=null);rank===void 0&&(rank=12);priority===void 0&&(priority=3);retrigger===void 0&&(retrigger=!1);var $t;Kusto.Language.Editor.CompletionItem.ctor.call(this,kind,displayText,Kusto.Language.Editor.CompletionItem.CreateApplyTexts(($t=beforeText,$t!=null?$t:displayText),afterText),matchText,orderText,rank,priority,retrigger)},$ctor2:function(displayText,beforeText,afterText,matchText,orderText,rank,priority,retrigger){beforeText===void 0&&(beforeText=null);afterText===void 0&&(afterText=null);matchText===void 0&&(matchText=null);orderText===void 0&&(orderText=null);rank===void 0&&(rank=12);priority===void 0&&(priority=3);retrigger===void 0&&(retrigger=!1);var $t;Kusto.Language.Editor.CompletionItem.ctor.call(this,Kusto.Language.Editor.CompletionKind.Syntax,displayText,Kusto.Language.Editor.CompletionItem.CreateApplyTexts(($t=beforeText,$t!=null?$t:displayText),afterText),matchText,orderText,rank,priority,retrigger)}},methods:{WithKind:function(kind){return new Kusto.Language.Editor.CompletionItem.ctor(kind,this.DisplayText,this.ApplyTexts,this.MatchText,this.OrderText,this.Rank,this.Priority,this.Retrigger)},WithDisplayText:function(displayText){return new Kusto.Language.Editor.CompletionItem.ctor(this.Kind,displayText,this.ApplyTexts,this.MatchText,this.OrderText,this.Rank,this.Priority,this.Retrigger)},WithMatchText:function(matchText){return new Kusto.Language.Editor.CompletionItem.ctor(this.Kind,this.DisplayText,this.ApplyTexts,matchText,this.OrderText,this.Rank,this.Priority,this.Retrigger)},WithOrderText:function(orderText){return new Kusto.Language.Editor.CompletionItem.ctor(this.Kind,this.DisplayText,this.ApplyTexts,this.MatchText,orderText,this.Rank,this.Priority,this.Retrigger)},WithApplyTexts$1:function(applyTexts){return new Kusto.Language.Editor.CompletionItem.ctor(this.Kind,this.DisplayText,applyTexts,this.MatchText,this.OrderText,this.Rank,this.Priority,this.Retrigger)},WithApplyTexts:function(applyTexts){return applyTexts===void 0&&(applyTexts=[]),this.WithApplyTexts$1(Bridge.cast(applyTexts,System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Editor.CompletionText)))},WithApplyTexts$2:function(textWithMarkers){return this.WithApplyTexts$1(Kusto.Language.Editor.CompletionText.Parse(textWithMarkers))},WithBeforeText:function(beforeText){var newBeforeText=Kusto.Language.Editor.CompletionText.Create(beforeText),caretIndex=this.CaretIndex,newApplyTexts=caretIndex>=0?Kusto.Language.Utils.ListExtensions.ReplaceRange(Kusto.Language.Editor.CompletionText,this.ApplyTexts,0,caretIndex,newBeforeText):System.Array.init([newBeforeText],Kusto.Language.Editor.CompletionText);return new Kusto.Language.Editor.CompletionItem.ctor(this.Kind,this.DisplayText,newApplyTexts,this.MatchText,this.OrderText,this.Rank,this.Priority,this.Retrigger)},WithEditText:function(editText){return this.WithBeforeText(editText)},WithAfterText:function(afterText){var newAfterText=Kusto.Language.Editor.CompletionText.Create(afterText,!0,!1),caretIndex=this.CaretIndex,newApplyTexts=caretIndex>0?Kusto.Language.Utils.ListExtensions.ReplaceRange(Kusto.Language.Editor.CompletionText,this.ApplyTexts,caretIndex,System.Array.getCount(this.ApplyTexts,Kusto.Language.Editor.CompletionText)-caretIndex|0,newAfterText):caretIndex===0?System.Array.init([newAfterText],Kusto.Language.Editor.CompletionText):Kusto.Language.Utils.ListExtensions.Append(Kusto.Language.Editor.CompletionText,this.ApplyTexts,newAfterText);return new Kusto.Language.Editor.CompletionItem.ctor(this.Kind,this.DisplayText,newApplyTexts,this.MatchText,this.OrderText,this.Rank,this.Priority,this.Retrigger)},WithRank:function(rank){return new Kusto.Language.Editor.CompletionItem.ctor(this.Kind,this.DisplayText,this.ApplyTexts,this.MatchText,this.OrderText,rank,this.Priority,this.Retrigger)},WithPriority:function(priority){return new Kusto.Language.Editor.CompletionItem.ctor(this.Kind,this.DisplayText,this.ApplyTexts,this.MatchText,this.OrderText,this.Rank,priority,this.Retrigger)},WithRetrigger:function(retrigger){return new Kusto.Language.Editor.CompletionItem.ctor(this.Kind,this.DisplayText,this.ApplyTexts,this.MatchText,this.OrderText,this.Rank,this.Priority,retrigger)}}});Bridge.define("Kusto.Language.Editor.CompletionKind",{$kind:"enum",statics:{fields:{Unknown:0,Keyword:1,Punctuation:2,Syntax:3,Identifier:4,Example:5,ScalarPrefix:6,TabularPrefix:7,TabularSuffix:8,QueryPrefix:9,CommandPrefix:10,ScalarInfix:11,RenderChart:12,Column:13,Table:14,BuiltInFunction:15,LocalFunction:16,DatabaseFunction:17,AggregateFunction:18,Parameter:19,Variable:20,Database:21,Cluster:22,MaterialiedView:23,EntityGroup:24,Graph:25,ScalarType:26,Option:27}}});Bridge.define("Kusto.Language.Editor.CompletionOptions",{statics:{fields:{Default:null},ctors:{init:function(){this.Default=new Kusto.Language.Editor.CompletionOptions(Kusto.Language.Editor.CompletionOptions.OptionFlags.Default,Kusto.Language.IncludeFunctionKind.All)}},methods:{SetOption:function(flags,option,value){return value?flags|option:flags&~option}}},fields:{flags:0},props:{IncludeSymbols:{get:function(){return(this.flags&Kusto.Language.Editor.CompletionOptions.OptionFlags.IncludeSymbols)!=0}},IncludeSyntax:{get:function(){return(this.flags&Kusto.Language.Editor.CompletionOptions.OptionFlags.IncludeSyntax)!=0}},IncludePunctuationOnlySyntax:{get:function(){return(this.flags&Kusto.Language.Editor.CompletionOptions.OptionFlags.IncludePunctuation)!=0}},EnableParameterInjection:{get:function(){return(this.flags&Kusto.Language.Editor.CompletionOptions.OptionFlags.EnableParameterInjection)!=0}},AutoAppendWhitespace:{get:function(){return(this.flags&Kusto.Language.Editor.CompletionOptions.OptionFlags.AutoAppendWhitespace)!=0}},IncludeExtendedSytnax:{get:function(){return(this.flags&Kusto.Language.Editor.CompletionOptions.OptionFlags.IncludeExtendedSyntax)!=0}},IncludeFunctions:0},ctors:{ctor:function(flags,includeFunctionKind){this.$initialize();this.flags=flags;this.IncludeFunctions=includeFunctionKind}},methods:{WithIncludeSymbols:function(include){return new Kusto.Language.Editor.CompletionOptions(Kusto.Language.Editor.CompletionOptions.SetOption(this.flags,Kusto.Language.Editor.CompletionOptions.OptionFlags.IncludeSymbols,include),this.IncludeFunctions)},WithIncludeFunctions:function(kind){return new Kusto.Language.Editor.CompletionOptions(this.flags,kind)},WithIncludeFunctions$1:function(include){return new Kusto.Language.Editor.CompletionOptions(this.flags,include?Kusto.Language.IncludeFunctionKind.All:Kusto.Language.IncludeFunctionKind.None)},WithIncludeSyntax:function(include){return new Kusto.Language.Editor.CompletionOptions(Kusto.Language.Editor.CompletionOptions.SetOption(this.flags,Kusto.Language.Editor.CompletionOptions.OptionFlags.IncludeSyntax,include),this.IncludeFunctions)},WithIncludePunctuationOnlySyntax:function(include){return new Kusto.Language.Editor.CompletionOptions(Kusto.Language.Editor.CompletionOptions.SetOption(this.flags,Kusto.Language.Editor.CompletionOptions.OptionFlags.IncludePunctuation,include),this.IncludeFunctions)},WithIncludeExtendedSyntax:function(include){return new Kusto.Language.Editor.CompletionOptions(Kusto.Language.Editor.CompletionOptions.SetOption(this.flags,Kusto.Language.Editor.CompletionOptions.OptionFlags.IncludeExtendedSyntax,include),this.IncludeFunctions)},WithEnableParameterInjection:function(enable){return new Kusto.Language.Editor.CompletionOptions(Kusto.Language.Editor.CompletionOptions.SetOption(this.flags,Kusto.Language.Editor.CompletionOptions.OptionFlags.EnableParameterInjection,enable),this.IncludeFunctions)},WithAutoAppendWhitespace:function(enable){return new Kusto.Language.Editor.CompletionOptions(Kusto.Language.Editor.CompletionOptions.SetOption(this.flags,Kusto.Language.Editor.CompletionOptions.OptionFlags.AutoAppendWhitespace,enable),this.IncludeFunctions)}}});Bridge.define("Kusto.Language.Editor.CompletionOptions.OptionFlags",{$kind:"nested enum",statics:{fields:{IncludeSymbols:1,IncludeSyntax:2,IncludePunctuation:4,EnableParameterInjection:16,AutoAppendWhitespace:32,IncludeExtendedSyntax:64,Default:39}},$flags:!0});Bridge.define("Kusto.Language.Editor.CompletionPriority",{$kind:"enum",statics:{fields:{Top:1,High:2,Normal:3,Low:4,Default:0},ctors:{init:function(){this.Default=Kusto.Language.Editor.CompletionPriority.Normal}}}});Bridge.define("Kusto.Language.Editor.CompletionRank",{$kind:"enum",statics:{fields:{Literal:1,Aggregate:2,Column:3,Table:4,Entity:5,Variable:6,Function:7,Keyword:8,StringOperator:9,MathOperator:10,Other:11,Default:12}}});Bridge.define("Kusto.Language.Editor.CompletionText",{statics:{fields:{DefaultCursorMarker:null,DefaultStartMarker:null,DefaultEndMarker:null},ctors:{init:function(){this.DefaultCursorMarker="|";this.DefaultStartMarker="[[";this.DefaultEndMarker="]]"}},methods:{Create:function(text,caret,select){return caret===void 0&&(caret=!1),select===void 0&&(select=!1),new Kusto.Language.Editor.CompletionText(text,caret,select)},CreateEdit:function(text){return new Kusto.Language.Editor.CompletionText(text,!0,!0)},Parse:function(textWithMarkers,cursorMarker,startMarker,endMarker){var list,cursorPos,beforeCursorText,afterCursorText,pos,startPos,endPos;if(cursorMarker===void 0&&(cursorMarker="|"),startMarker===void 0&&(startMarker="[["),endMarker===void 0&&(endMarker="]]"),list=new(System.Collections.Generic.List$1(Kusto.Language.Editor.CompletionText).ctor),cursorPos=System.String.indexOf(textWithMarkers,cursorMarker),cursorPos>=0)beforeCursorText=cursorPos>0?textWithMarkers.substr(0,cursorPos):"",afterCursorText=textWithMarkers.substr(cursorPos+cursorMarker.length|0),list.add(Kusto.Language.Editor.CompletionText.Create(beforeCursorText)),list.add(Kusto.Language.Editor.CompletionText.Create(afterCursorText,!0,!1));else for(pos=0;pos<textWithMarkers.length;){if(startPos=System.String.indexOf(textWithMarkers,startMarker,pos),startPos>=0&&(endPos=System.String.indexOf(textWithMarkers,endMarker,startPos+startMarker.length|0),endPos>=0)){startPos>pos&&list.add(Kusto.Language.Editor.CompletionText.Create(textWithMarkers.substr(pos,startPos-pos|0)));list.add(Kusto.Language.Editor.CompletionText.CreateEdit(textWithMarkers.substr(startPos+startMarker.length|0,endPos-(startPos+startMarker.length|0)|0)));pos=endPos+endMarker.length|0;continue}list.add(Kusto.Language.Editor.CompletionText.Create(textWithMarkers.substr(pos)));pos=textWithMarkers.length}return Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Editor.CompletionText,list)}}},props:{Text:null,Caret:!1,Select:!1},ctors:{ctor:function(text,caret,select){this.$initialize();this.Text=text;this.Caret=caret;this.Select=select}}});Bridge.define("Kusto.Language.Editor.KustoActor",{props:{Name:{get:function(){return Bridge.Reflection.getTypeName(Bridge.getType(this))}}}});Bridge.define("Kusto.Language.Editor.DisabledDiagnostics",{statics:{fields:{SeverityPrefix:null,Default:null,_codesThatCanBeDisabled:null},ctors:{init:function(){this.SeverityPrefix="sev:";this.Default=new Kusto.Language.Editor.DisabledDiagnostics.$ctor1(null,null)}},methods:{Parse:function(text){return new Kusto.Language.Editor.DisabledDiagnostics.$ctor2(text)},CanDisableSeverity:function(severity){return Bridge.referenceEquals(severity,Kusto.Language.DiagnosticSeverity.Warning)||Bridge.referenceEquals(severity,Kusto.Language.DiagnosticSeverity.Suggestion)||Bridge.referenceEquals(severity,Kusto.Language.DiagnosticSeverity.Information)},CanDisableCode:function(code){return Kusto.Language.Editor.DisabledDiagnostics._codesThatCanBeDisabled==null&&(Kusto.Language.Editor.DisabledDiagnostics._codesThatCanBeDisabled=new(System.Collections.Generic.HashSet$1(System.String).$ctor1)(System.Linq.Enumerable.from(new Kusto.Language.Editor.KustoCodeService.$ctor1("").GetAnalyzers(),Kusto.Language.Editor.AnalyzerInfo).selectMany(function(a){return a.Diagnostics}).select(function(d){return d.Code}))),Kusto.Language.Editor.DisabledDiagnostics._codesThatCanBeDisabled.contains(code)}}},fields:{_severities:null,_codes:null},ctors:{$ctor1:function(severities,codes){this.$initialize();this._severities=severities;this._codes=codes},$ctor2:function(text){if(this.$initialize(),!System.String.isNullOrEmpty(text)){var items=System.Linq.Enumerable.from(System.String.split(text,System.Array.init([44],System.Char).map(function(i){return String.fromCharCode(i)}),null,1),System.String).select(function(s){return s.trim()}).toList(System.String);this._severities=new(System.Collections.Generic.HashSet$1(System.String).$ctor1)(System.Linq.Enumerable.from(items,System.String).where(function(i){return System.String.startsWith(i,Kusto.Language.Editor.DisabledDiagnostics.SeverityPrefix)}).select(function(i){return i.substr(Kusto.Language.Editor.DisabledDiagnostics.SeverityPrefix.length)}));this._codes=new(System.Collections.Generic.HashSet$1(System.String).$ctor1)(System.Linq.Enumerable.from(items,System.String).where(function(i){return!System.String.startsWith(i,Kusto.Language.Editor.DisabledDiagnostics.SeverityPrefix)}))}},ctor:function(){this.$initialize()}},methods:{toString:function(){return this._severities!=null&&this._codes!=null?Bridge.toArray(System.Linq.Enumerable.from(this._severities,System.String).orderBy(function(s){return s}).select(function(s){return(Kusto.Language.Editor.DisabledDiagnostics.SeverityPrefix||"")+(s||"")}).concat(System.Linq.Enumerable.from(this._codes,System.String).orderBy(function(c){return c}))).join(","):""},IsSeverityEnabled:function(severity){return!this.IsServerityDisabled(severity)},IsServerityDisabled:function(severity){return this._severities!=null&&this._severities.contains(severity)},IsCodeEnabled:function(code){return!this.IsCodeDisabled(code)},IsCodeDisabled:function(code){return this._codes!=null&&this._codes.contains(code)},IsDiagnosticEnabled:function(diagnostic){return!this.IsDiagnosticDisabled(diagnostic)},IsDiagnosticDisabled:function(diagnostic){return this.IsServerityDisabled(diagnostic.Severity)||this.IsCodeDisabled(diagnostic.Code)},ToBuilder:function(){return new Kusto.Language.Editor.DisabledDiagnostics.Builder.$ctor1(this)},WithCodeEnabled:function(code,enabled){var builder=this.ToBuilder();return builder.SetCodeEnabled(code,enabled),builder.ToDisabledDiagnostics()},WithSeverityEnabled:function(severity,enabled){var builder=this.ToBuilder();return builder.SetSeverityEnabled(severity,enabled),builder.ToDisabledDiagnostics()}}});Bridge.define("Kusto.Language.Editor.DisabledDiagnostics.Builder",{$kind:"nested class",fields:{_source:null,_severities:null,_codes:null},ctors:{$ctor1:function(disabledDiagnostics){this.$initialize();this._source=disabledDiagnostics},ctor:function(){this.$initialize()}},methods:{ToDisabledDiagnostics:function(){return this._source!=null?this._source:(this._source=new Kusto.Language.Editor.DisabledDiagnostics.$ctor1(this._severities,this._codes),this._severities=null,this._codes=null,this._source)},toString:function(){return this.ToDisabledDiagnostics().toString()},TryInit:function(){this._severities==null&&(this._severities=this._source!=null&&this._source._severities!=null?new(System.Collections.Generic.HashSet$1(System.String).$ctor1)(this._source._severities):new(System.Collections.Generic.HashSet$1(System.String).ctor));this._codes==null&&(this._codes=this._source!=null&&this._source._codes!=null?new(System.Collections.Generic.HashSet$1(System.String).$ctor1)(this._source._codes):new(System.Collections.Generic.HashSet$1(System.String).ctor));this._source=null},SetSeverityEnabled:function(severity,enabled){this.TryInit();enabled?this._severities.remove(severity):!enabled&&Kusto.Language.Editor.DisabledDiagnostics.CanDisableSeverity(severity)&&this._severities.add(severity)},SetCodeEnabled:function(code,enabled){this.TryInit();enabled&&this._codes!=null?this._codes.remove(code):!enabled&&Kusto.Language.Editor.DisabledDiagnostics.CanDisableCode(code)&&this._codes.add(code)}}});Bridge.define("Kusto.Language.Editor.EditString",{statics:{methods:{ConvertToSequentialChanges:function(collectiveChanges){var $t,sequentialChanges=new(System.Collections.Generic.List$1(Kusto.Language.Editor.TextEdit).ctor),delta=0,edit;$t=Bridge.getEnumerator(collectiveChanges,Kusto.Language.Editor.TextEdit);try{while($t.moveNext())edit=$t.Current,sequentialChanges.add(Kusto.Language.Editor.TextEdit.Replacement(edit.Start+delta|0,edit.DeleteLength,edit.InsertText)),delta=(delta-edit.DeleteLength|0)+edit.InsertText.length|0}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return sequentialChanges},GetOrderedEdits:function(edits){return Kusto.Language.Editor.EditString.IsInOrder(edits)||(edits=System.Linq.Enumerable.from(edits,Kusto.Language.Editor.TextEdit).orderBy(function(e){return e.Start}).ToArray(Kusto.Language.Editor.TextEdit)),edits},IsInOrder:function(edits){var $t,lastStart=0,edit;$t=Bridge.getEnumerator(edits,Kusto.Language.Editor.TextEdit);try{while($t.moveNext()){if(edit=$t.Current,edit.Start<lastStart)return!1;lastStart=edit.Start}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return!0},GetNewText:function(text,edits){var $t,builder=new System.Text.StringBuilder,priorEnd=0,edit;$t=Bridge.getEnumerator(edits,Kusto.Language.Editor.TextEdit);try{while($t.moveNext())edit=$t.Current,edit.Start>priorEnd&&builder.append(text,priorEnd,edit.Start-priorEnd|0),priorEnd=edit.Start+edit.DeleteLength|0,edit.InsertText.length>0&&builder.append(edit.InsertText)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return priorEnd<text.length&&builder.append(text,priorEnd,text.length-priorEnd|0),builder.toString()},CombineEdits:function(oldEdits,newEdits){var partialDeleteLength,partialInsertLength,partialDeleteLength1,newDeletion;if(System.Array.getCount(newEdits,Kusto.Language.Editor.EditString.Edit)===0)return oldEdits;for(var oldDelta=0,nextOldIndex=1,nextNewIndex=1,hasOldEdit=System.Array.getCount(oldEdits,Kusto.Language.Editor.EditString.Edit)>0,hasNewEdit=System.Array.getCount(newEdits,Kusto.Language.Editor.EditString.Edit)>0,oldEdit=hasOldEdit?System.Array.getItem(oldEdits,0,Kusto.Language.Editor.EditString.Edit):Bridge.getDefaultValue(Kusto.Language.Editor.EditString.Edit),newEdit=hasNewEdit?System.Array.getItem(newEdits,0,Kusto.Language.Editor.EditString.Edit):Bridge.getDefaultValue(Kusto.Language.Editor.EditString.Edit),combinedEdits=new(System.Collections.Generic.List$1(Kusto.Language.Editor.EditString.Edit).$ctor2)(System.Array.getCount(oldEdits,Kusto.Language.Editor.EditString.Edit)+System.Array.getCount(newEdits,Kusto.Language.Editor.EditString.Edit)|0);hasOldEdit&&hasNewEdit;)if(oldEdit.DeleteLength===0&&oldEdit.InsertLength===0){if(hasOldEdit=nextOldIndex<System.Array.getCount(oldEdits,Kusto.Language.Editor.EditString.Edit)){oldEdit=System.Array.getItem(oldEdits,nextOldIndex,Kusto.Language.Editor.EditString.Edit);nextOldIndex=nextOldIndex+1|0;continue}break}else if(newEdit.DeleteLength===0&&newEdit.InsertLength===0){if(hasNewEdit=nextNewIndex<System.Array.getCount(newEdits,Kusto.Language.Editor.EditString.Edit)){newEdit=System.Array.getItem(newEdits,nextNewIndex,Kusto.Language.Editor.EditString.Edit);nextNewIndex=nextNewIndex+1|0;continue}break}else if(newEdit.DeleteEnd<=(oldEdit.Start+oldDelta|0)){if(combinedEdits.add(new Kusto.Language.Editor.EditString.Edit.$ctor1(newEdit.Start-oldDelta|0,newEdit.DeleteLength,newEdit.InsertLength)),hasNewEdit=nextNewIndex<System.Array.getCount(newEdits,Kusto.Language.Editor.EditString.Edit)){newEdit=System.Array.getItem(newEdits,nextNewIndex,Kusto.Language.Editor.EditString.Edit);nextNewIndex=nextNewIndex+1|0;continue}break}else if(newEdit.Start>=(oldEdit.InsertEnd+oldDelta|0)){if(combinedEdits.add(oldEdit),oldDelta=(oldDelta-oldEdit.DeleteLength|0)+oldEdit.InsertLength|0,hasOldEdit=nextOldIndex<System.Array.getCount(oldEdits,Kusto.Language.Editor.EditString.Edit)){oldEdit=System.Array.getItem(oldEdits,nextOldIndex,Kusto.Language.Editor.EditString.Edit);nextOldIndex=nextOldIndex+1|0;continue}break}else if(newEdit.Start<(oldEdit.Start+oldDelta|0)){partialDeleteLength=(oldEdit.Start+oldDelta|0)-newEdit.Start|0;combinedEdits.add(new Kusto.Language.Editor.EditString.Edit.$ctor1(newEdit.Start-oldDelta|0,partialDeleteLength,0));newEdit=new Kusto.Language.Editor.EditString.Edit.$ctor1(oldEdit.Start+oldDelta|0,newEdit.DeleteLength-partialDeleteLength|0,newEdit.InsertLength);continue}else if(newEdit.Start>(oldEdit.Start+oldDelta|0)){partialInsertLength=newEdit.Start-(oldEdit.Start+oldDelta|0)|0;partialDeleteLength1=Math.min(oldEdit.DeleteLength,partialInsertLength);combinedEdits.add(new Kusto.Language.Editor.EditString.Edit.$ctor1(oldEdit.Start,partialDeleteLength1,partialInsertLength));oldDelta=(oldDelta-partialDeleteLength1|0)+partialInsertLength|0;oldEdit=new Kusto.Language.Editor.EditString.Edit.$ctor1(newEdit.Start-oldDelta|0,oldEdit.DeleteLength-partialDeleteLength1|0,oldEdit.InsertLength-partialInsertLength|0);continue}else if(newEdit.DeleteLength<=oldEdit.InsertLength){if(oldEdit=new Kusto.Language.Editor.EditString.Edit.$ctor1(oldEdit.Start,oldEdit.DeleteLength,oldEdit.InsertLength-newEdit.DeleteLength|0),oldDelta=oldDelta+newEdit.DeleteLength|0,combinedEdits.add(new Kusto.Language.Editor.EditString.Edit.$ctor1(newEdit.DeleteEnd-oldDelta|0,0,newEdit.InsertLength)),hasNewEdit=nextNewIndex<System.Array.getCount(newEdits,Kusto.Language.Editor.EditString.Edit)){newEdit=System.Array.getItem(newEdits,nextNewIndex,Kusto.Language.Editor.EditString.Edit);nextNewIndex=nextNewIndex+1|0;continue}break}else{if(oldDelta=(oldDelta-oldEdit.DeleteLength|0)+oldEdit.InsertLength|0,newDeletion=(newEdit.DeleteLength+oldEdit.DeleteLength|0)-oldEdit.InsertLength|0,newEdit=new Kusto.Language.Editor.EditString.Edit.$ctor1(oldEdit.Start+oldDelta|0,newDeletion,newEdit.InsertLength),hasOldEdit=nextOldIndex<System.Array.getCount(oldEdits,Kusto.Language.Editor.EditString.Edit)){oldEdit=System.Array.getItem(oldEdits,nextOldIndex,Kusto.Language.Editor.EditString.Edit);nextOldIndex=nextOldIndex+1|0;continue}break}for(hasNewEdit&&combinedEdits.add(new Kusto.Language.Editor.EditString.Edit.$ctor1(newEdit.Start-oldDelta|0,newEdit.DeleteLength,newEdit.InsertLength));nextNewIndex<System.Array.getCount(newEdits,Kusto.Language.Editor.EditString.Edit);nextNewIndex=nextNewIndex+1|0)newEdit=System.Array.getItem(newEdits,nextNewIndex,Kusto.Language.Editor.EditString.Edit),combinedEdits.add(new Kusto.Language.Editor.EditString.Edit.$ctor1(newEdit.Start-oldDelta|0,newEdit.DeleteLength,newEdit.InsertLength));for(hasOldEdit&&combinedEdits.add(oldEdit);nextOldIndex<System.Array.getCount(oldEdits,Kusto.Language.Editor.EditString.Edit);nextOldIndex=nextOldIndex+1|0)combinedEdits.add(System.Array.getItem(oldEdits,nextOldIndex,Kusto.Language.Editor.EditString.Edit));return Kusto.Language.Editor.EditString.CombineAdjacentEdits(combinedEdits),combinedEdits},CombineAdjacentEdits:function(edits){for(var edit,prevEdit,i=edits.Count-1|0;i>=1;i=i-1|0)edit=edits.getItem(i),prevEdit=edits.getItem(i-1|0),prevEdit.DeleteEnd===edit.Start&&(edits.setItem(i-1|0,new Kusto.Language.Editor.EditString.Edit.$ctor1(prevEdit.Start,prevEdit.DeleteLength+edit.DeleteLength|0,prevEdit.InsertLength+edit.InsertLength|0)),edits.removeAt(i))},Translate:function(position,start,deleteLength,insertLength,bias){return deleteLength>0&&position>start&&(position=position>(start+deleteLength|0)?position-deleteLength|0:start),insertLength>0&&(position>start||bias===Kusto.Language.Editor.PositionBias.Right&&position===start)&&(position=position+insertLength|0),position},op_Implicit$1:function(editString){return editString!=null?editString.CurrentText:null},op_Implicit:function(text){return text!=null?new Kusto.Language.Editor.EditString.ctor(text):null}}},fields:{_changes:null},props:{OriginalText:null,CurrentText:null,Length:{get:function(){return this.CurrentText.length}}},ctors:{$ctor1:function(originalText,currentText,changes){var $t,$t1;this.$initialize();this.OriginalText=($t=originalText,$t!=null?$t:"");this.CurrentText=($t1=currentText,$t1!=null?$t1:"");this._changes=changes},ctor:function(text){Kusto.Language.Editor.EditString.$ctor1.call(this,text,text,Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Editor.EditString.Edit).Instance)}},methods:{getItem:function(index){return this.CurrentText.charCodeAt(index)},IndexOf:function(value){return System.String.indexOf(this.CurrentText,value)},GetChanges:function(){var $t,textChanges=new(System.Collections.Generic.List$1(Kusto.Language.Editor.TextEdit).ctor),delta=0,edit;$t=Bridge.getEnumerator(this._changes,Kusto.Language.Editor.EditString.Edit);try{while($t.moveNext())edit=$t.Current,textChanges.add(Kusto.Language.Editor.TextEdit.Replacement(edit.Start,edit.DeleteLength,this.CurrentText.substr(edit.Start+delta|0,edit.InsertLength))),delta=(delta-edit.DeleteLength|0)+edit.InsertLength|0}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return textChanges},toString:function(){return this.CurrentText},ReplaceAt:function(start,length,text){return this.Apply(Kusto.Language.Editor.TextEdit.Replacement(start,length,text))},Insert:function(position,text){return this.ReplaceAt(position,0,text)},Append:function(text){return this.ReplaceAt(this.CurrentText.length,0,text)},Prepend:function(text){return this.ReplaceAt(0,0,text)},Remove:function(start,length){return this.ReplaceAt(start,length,"")},Substring:function(start,length){var newText=this.CurrentText.substr(start,length),newEdits=new(System.Collections.Generic.List$1(Kusto.Language.Editor.EditString.Edit).$ctor2)(2),endDeleteStart=start+length|0,endDeleteLength=this.CurrentText.length-endDeleteStart|0;return start>0&&newEdits.add(new Kusto.Language.Editor.EditString.Edit.$ctor1(0,start,0)),endDeleteStart>0&&newEdits.add(new Kusto.Language.Editor.EditString.Edit.$ctor1(endDeleteStart,endDeleteLength,0)),this.ApplyEdits(newText,newEdits)},Replace:function(oldText,newText){var newCurrentText,startIndex,newEdits,oldValueStart;if(oldText==null)throw new System.ArgumentNullException.$ctor1("oldText");if(newText==null)throw new System.ArgumentNullException.$ctor1("newText");if(newCurrentText=System.String.replaceAll(this.CurrentText,oldText,newText),Bridge.referenceEquals(newCurrentText,this.CurrentText))return this;for(startIndex=0,newEdits=new(System.Collections.Generic.List$1(Kusto.Language.Editor.EditString.Edit).ctor);;){if(oldValueStart=System.String.indexOf(this.CurrentText,oldText,startIndex),oldValueStart<startIndex)break;newEdits.add(new Kusto.Language.Editor.EditString.Edit.$ctor1(oldValueStart,oldText.length,newText.length));startIndex=oldValueStart+oldText.length|0}return this.ApplyEdits(newCurrentText,newEdits)},Apply:function(edit){var $t,newText;if(edit.Start<0||edit.Start>(this.Length+1|0))throw new System.ArgumentOutOfRangeException.$ctor1("Start");if((edit.Start+edit.DeleteLength|0)>(this.Length+1|0))throw new System.ArgumentOutOfRangeException.$ctor1("DeleteLength");return newText=this.CurrentText,edit.DeleteLength>0&&(newText=System.String.remove(newText,edit.Start,edit.DeleteLength)),edit.InsertText.length>0&&(newText=System.String.insert(edit.Start,newText,edit.InsertText)),edit.InsertText.length!==edit.DeleteLength||($t=edit.InsertText.length,System.String.compare(this.CurrentText.substr(edit.Start,$t),edit.InsertText.substr(0,$t)))!==0?this.ApplyEdits(newText,System.Array.init([new Kusto.Language.Editor.EditString.Edit.$ctor1(edit.Start,edit.DeleteLength,edit.InsertText.length)],Kusto.Language.Editor.EditString.Edit)):new Kusto.Language.Editor.EditString.$ctor1(this.OriginalText,newText,this._changes)},ApplyAll$1:function(edits){if(edits==null||System.Array.getCount(edits,Kusto.Language.Editor.TextEdit)===0)return this;if(edits=Kusto.Language.Editor.EditString.GetOrderedEdits(edits),!this.CanApplyAll(edits))throw new System.InvalidOperationException.$ctor1("An edit occurs out of order, overlaps a prior edit or is specified out of bounds of the current text.");var newText=Kusto.Language.Editor.EditString.GetNewText(this.CurrentText,edits),newEdits=System.Linq.Enumerable.from(edits,Kusto.Language.Editor.TextEdit).select(function(e){return new Kusto.Language.Editor.EditString.Edit.$ctor1(e.Start,e.DeleteLength,e.InsertText.length)}).ToArray(Kusto.Language.Editor.EditString.Edit);return this.ApplyEdits(newText,newEdits)},ApplyAll:function(edits){return edits===void 0&&(edits=[]),this.ApplyAll$1(Bridge.cast(edits,System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Editor.TextEdit)))},CanApplyAll:function(edits){var $t,priorEnd,edit;edits=Kusto.Language.Editor.EditString.GetOrderedEdits(edits);priorEnd=0;$t=Bridge.getEnumerator(edits,Kusto.Language.Editor.TextEdit);try{while($t.moveNext()){if(edit=$t.Current,edit.Start<priorEnd||edit.Start>(this.CurrentText.length+1|0))return!1;priorEnd=edit.Start+edit.DeleteLength|0}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return!0},ApplyEdits:function(newText,newEdits){var combinedEdits=Kusto.Language.Editor.EditString.CombineEdits(this._changes,newEdits);return new Kusto.Language.Editor.EditString.$ctor1(this.OriginalText,newText,combinedEdits)},GetCurrentPosition:function(originalPosition,bias){var currentPosition,delta,i,edit;for(bias===void 0&&(bias=1),currentPosition=originalPosition,delta=0,i=0;i<System.Array.getCount(this._changes,Kusto.Language.Editor.EditString.Edit);i=i+1|0){if(edit=System.Array.getItem(this._changes,i,Kusto.Language.Editor.EditString.Edit),currentPosition<(edit.Start+delta|0))break;currentPosition=Kusto.Language.Editor.EditString.Translate(currentPosition,edit.Start+delta|0,edit.DeleteLength,edit.InsertLength,bias);delta=(delta-edit.DeleteLength|0)+edit.InsertLength|0}return currentPosition},GetCurrentRange:function(originalStart,originalLength,currentStart,currentLength){var originalEnd=originalStart+originalLength|0,currentEnd;currentStart.v=this.GetCurrentPosition(originalStart,Kusto.Language.Editor.PositionBias.Right);currentEnd=this.GetCurrentPosition(originalEnd,Kusto.Language.Editor.PositionBias.Left);currentLength.v=currentEnd-currentStart.v|0},GetOriginalPosition:function(currentPosition,bias){var originalPosition,delta,i,edit;for(bias===void 0&&(bias=1),originalPosition=currentPosition,delta=0,i=0;i<System.Array.getCount(this._changes,Kusto.Language.Editor.EditString.Edit);i=i+1|0){if(edit=System.Array.getItem(this._changes,i,Kusto.Language.Editor.EditString.Edit),originalPosition<(edit.Start+delta|0))break;originalPosition=Kusto.Language.Editor.EditString.Translate(originalPosition,edit.Start+delta|0,edit.InsertLength,edit.DeleteLength,bias)}return originalPosition},GetChangeRange:function(){if(System.Array.getCount(this._changes,Kusto.Language.Editor.EditString.Edit)>0){var firstStart=this.GetCurrentPosition(System.Array.getItem(this._changes,0,Kusto.Language.Editor.EditString.Edit).Start,Kusto.Language.Editor.PositionBias.Left),lastEnd=this.GetCurrentPosition(System.Array.getItem(this._changes,System.Array.getCount(this._changes,Kusto.Language.Editor.EditString.Edit)-1|0,Kusto.Language.Editor.EditString.Edit).Start,Kusto.Language.Editor.PositionBias.Right);return Kusto.Language.Editor.TextRange.FromBounds(firstStart,lastEnd)}else return Kusto.Language.Editor.TextRange.Empty},RemoveBlankLines:function(){for(var pos=0,text=this.CurrentText,edits=null,len;pos<text.length;)len=Kusto.Language.Parsing.TextFacts.GetLineLength(text,pos,!0),Kusto.Language.Parsing.TextFacts.IsBlankLine(text,pos)&&(edits==null&&(edits=new(System.Collections.Generic.List$1(Kusto.Language.Editor.TextEdit).ctor)),edits.add(Kusto.Language.Editor.TextEdit.Deletion(pos,len))),pos=pos+len|0;return this.ApplyAll$1(edits)},ReplaceLineBreaks:function(newValue){var text,edits,i,len;if(newValue==null)throw new System.ArgumentNullException.$ctor1("newValue");for(text=this.CurrentText,edits=null,i=0;i<text.length;i=i+1|0)Kusto.Language.Parsing.TextFacts.IsLineBreakStart(text.charCodeAt(i))&&(len=Kusto.Language.Parsing.TextFacts.GetLineBreakLength(text,i),(len!==newValue.length||System.String.compare(text.substr(i,len),newValue.substr(0,len))!==0)&&(edits==null&&(edits=new(System.Collections.Generic.List$1(Kusto.Language.Editor.TextEdit).ctor)),edits.add(Kusto.Language.Editor.TextEdit.Replacement(i,len,newValue))),i=i+(len-1|0)|0);return this.ApplyAll$1(edits)}}});Bridge.define("Kusto.Language.Editor.EditString.Edit",{$kind:"nested struct",statics:{methods:{getDefaultValue:function(){return new Kusto.Language.Editor.EditString.Edit}}},props:{Start:0,DeleteLength:0,InsertLength:0,DeleteEnd:{get:function(){return this.Start+this.DeleteLength|0}},InsertEnd:{get:function(){return this.Start+this.InsertLength|0}}},ctors:{$ctor1:function(start,deleteLength,insertLength){if(this.$initialize(),start<0)throw new System.ArgumentOutOfRangeException.$ctor4("start","negative start position");if(deleteLength<0)throw new System.ArgumentOutOfRangeException.$ctor4("deleteLength","negative deletion length");if(insertLength<0)throw new System.ArgumentOutOfRangeException.$ctor4("insertLength","negative insertion length");this.Start=start;this.DeleteLength=deleteLength;this.InsertLength=insertLength},ctor:function(){this.$initialize()}},methods:{getHashCode:function(){return Bridge.addHash([1953064005,this.Start,this.DeleteLength,this.InsertLength])},equals:function(o){return Bridge.is(o,Kusto.Language.Editor.EditString.Edit)?Bridge.equals(this.Start,o.Start)&&Bridge.equals(this.DeleteLength,o.DeleteLength)&&Bridge.equals(this.InsertLength,o.InsertLength):!1},$clone:function(to){return this}}});Bridge.define("Kusto.Language.Editor.FindRelatedOptions",{$kind:"enum",statics:{fields:{None:0,SeeThroughVariables:1}},$flags:!0});Bridge.define("Kusto.Language.Editor.FixEdits",{props:{Edits:null,NewCaretPosition:0,Bias:0},ctors:{$ctor1:function(newCaretPosition,bias,edits){this.$initialize();this.NewCaretPosition=newCaretPosition;this.Bias=bias;this.Edits=edits||Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Editor.TextEdit).Instance},$ctor3:function(newCaretPosition,edits){Kusto.Language.Editor.FixEdits.$ctor1.call(this,newCaretPosition,Kusto.Language.Editor.PositionBias.Left,edits)},ctor:function(newCaretPosition,bias,edits){edits===void 0&&(edits=[]);Kusto.Language.Editor.FixEdits.$ctor1.call(this,newCaretPosition,bias,Bridge.cast(edits,System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Editor.TextEdit)))},$ctor2:function(newCaretPosition,edits){edits===void 0&&(edits=[]);Kusto.Language.Editor.FixEdits.$ctor1.call(this,newCaretPosition,Kusto.Language.Editor.PositionBias.Left,Bridge.cast(edits,System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Editor.TextEdit)))}}});Bridge.define("Kusto.Language.Editor.FormattedText",{props:{Text:null,Position:0},ctors:{ctor:function(newText,newPosition){this.$initialize();this.Text=newText;this.Position=newPosition}}});Bridge.define("Kusto.Language.Editor.FormattingOptions",{statics:{fields:{Default:null},ctors:{init:function(){this.Default=new Kusto.Language.Editor.FormattingOptions(4,!0,Kusto.Language.Editor.BrackettingStyle.Vertical,Kusto.Language.Editor.BrackettingStyle.Default,Kusto.Language.Editor.BrackettingStyle.Default,Kusto.Language.Editor.BrackettingStyle.Default,Kusto.Language.Editor.BrackettingStyle.Default,Kusto.Language.Editor.BrackettingStyle.Diagonal,Kusto.Language.Editor.PlacementStyle.Smart,Kusto.Language.Editor.PlacementStyle.Smart,Kusto.Language.Editor.PlacementStyle.NewLine,Kusto.Language.Editor.PlacementStyle.None)}}},props:{IndentationSize:0,InsertMissingTokens:!1,BrackettingStyle:0,SchemaStyle:0,DataTableValueStyle:0,FunctionBodyStyle:0,FunctionParameterStyle:0,FunctionArgumentStyle:0,PipeOperatorStyle:0,ExpressionStyle:0,StatementStyle:0,SemicolonStyle:0},ctors:{ctor:function(indentationSize,insertMissingTokens,brackettingStyle,schemaStyle,dataTableValueStyle,functionBodyStyle,functionParameterStyle,functionArgumentStyle,pipeOperatorStyle,expressionStyle,statementStyle,semicolonStyle){this.$initialize();this.IndentationSize=indentationSize;this.InsertMissingTokens=insertMissingTokens;this.BrackettingStyle=brackettingStyle;this.SchemaStyle=schemaStyle;this.DataTableValueStyle=dataTableValueStyle;this.FunctionBodyStyle=functionBodyStyle;this.FunctionParameterStyle=functionParameterStyle;this.FunctionArgumentStyle=functionArgumentStyle;this.PipeOperatorStyle=pipeOperatorStyle;this.ExpressionStyle=expressionStyle;this.StatementStyle=statementStyle;this.SemicolonStyle=semicolonStyle}},methods:{With:function(indentationSize,insertMissingTokens,brackettingStyle,schemaStyle,dataTableValueStyle,functionBodyStyle,functionParameterStyle,functionArgumentStyle,pipeOperatorStyle,expressionStyle,statementStyle,semicolonStyle){indentationSize===void 0&&(indentationSize=null);insertMissingTokens===void 0&&(insertMissingTokens=null);brackettingStyle===void 0&&(brackettingStyle=null);schemaStyle===void 0&&(schemaStyle=null);dataTableValueStyle===void 0&&(dataTableValueStyle=null);functionBodyStyle===void 0&&(functionBodyStyle=null);functionParameterStyle===void 0&&(functionParameterStyle=null);functionArgumentStyle===void 0&&(functionArgumentStyle=null);pipeOperatorStyle===void 0&&(pipeOperatorStyle=null);expressionStyle===void 0&&(expressionStyle=null);statementStyle===void 0&&(statementStyle=null);semicolonStyle===void 0&&(semicolonStyle=null);var newIndentationSize=System.Nullable.hasValue(indentationSize)?System.Nullable.getValue(indentationSize):this.IndentationSize,newInsertMissingTokens=System.Nullable.hasValue(insertMissingTokens)?System.Nullable.getValue(insertMissingTokens):this.InsertMissingTokens,newBrackettingStyle=System.Nullable.hasValue(brackettingStyle)?System.Nullable.getValue(brackettingStyle):this.BrackettingStyle,newSchemaStyle=System.Nullable.hasValue(schemaStyle)?System.Nullable.getValue(schemaStyle):this.SchemaStyle,newDataTableValueStyle=System.Nullable.hasValue(dataTableValueStyle)?System.Nullable.getValue(dataTableValueStyle):this.DataTableValueStyle,newFunctionBodyStyle=System.Nullable.hasValue(functionBodyStyle)?System.Nullable.getValue(functionBodyStyle):this.FunctionBodyStyle,newFunctionParameterStyle=System.Nullable.hasValue(functionParameterStyle)?System.Nullable.getValue(functionParameterStyle):this.FunctionParameterStyle,newFunctionArgumentStyle=System.Nullable.hasValue(functionArgumentStyle)?System.Nullable.getValue(functionArgumentStyle):this.FunctionArgumentStyle,newPipeOperatorStyle=System.Nullable.hasValue(pipeOperatorStyle)?System.Nullable.getValue(pipeOperatorStyle):this.PipeOperatorStyle,newExpressionStyle=System.Nullable.hasValue(expressionStyle)?System.Nullable.getValue(expressionStyle):this.ExpressionStyle,newStatementStyle=System.Nullable.hasValue(statementStyle)?System.Nullable.getValue(statementStyle):this.StatementStyle,newSemicolonStyle=System.Nullable.hasValue(semicolonStyle)?System.Nullable.getValue(semicolonStyle):this.SemicolonStyle;return newIndentationSize!==this.IndentationSize||newInsertMissingTokens!==this.InsertMissingTokens||newBrackettingStyle!==this.BrackettingStyle||newSchemaStyle!==this.SchemaStyle||newDataTableValueStyle!==this.DataTableValueStyle||newFunctionBodyStyle!==this.FunctionBodyStyle||newFunctionParameterStyle!==this.FunctionParameterStyle||newFunctionArgumentStyle!==this.FunctionArgumentStyle||newPipeOperatorStyle!==this.PipeOperatorStyle||newExpressionStyle!==this.ExpressionStyle||newStatementStyle!==this.StatementStyle||newSemicolonStyle!==this.SemicolonStyle?new Kusto.Language.Editor.FormattingOptions(newIndentationSize,newInsertMissingTokens,newBrackettingStyle,newSchemaStyle,newDataTableValueStyle,newFunctionBodyStyle,newFunctionParameterStyle,newFunctionArgumentStyle,newPipeOperatorStyle,newExpressionStyle,newStatementStyle,newSemicolonStyle):this},WithIndentationSize:function(size){return this.With(size,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0)},WithInsertMissingTokens:function(enable){return this.With(void 0,enable,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0)},WithBrackettingStyle:function(style){return this.With(void 0,void 0,style,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0)},WithSchemaStyle:function(style){return this.With(void 0,void 0,void 0,style,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0)},WithDataTableValueStyle:function(style){return this.With(void 0,void 0,void 0,void 0,style,void 0,void 0,void 0,void 0,void 0,void 0,void 0)},WithFunctionBodyStyle:function(style){return this.With(void 0,void 0,void 0,void 0,void 0,style,void 0,void 0,void 0,void 0,void 0,void 0)},WithFunctionParameterStyle:function(style){return this.With(void 0,void 0,void 0,void 0,void 0,void 0,style,void 0,void 0,void 0,void 0,void 0)},WithFunctionArgumentStyle:function(style){return this.With(void 0,void 0,void 0,void 0,void 0,void 0,void 0,style,void 0,void 0,void 0,void 0)},WithPipeOperatorStyle:function(style){return this.With(void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,style,void 0,void 0,void 0)},WithExpressionStyle:function(style){return this.With(void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,style,void 0,void 0)},WithStatementStyle:function(style){return this.With(void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,style,void 0)},WithSemicolonStyle:function(style){return this.With(void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,style)}}});Bridge.define("Kusto.Language.Editor.KustoActorNames",{statics:{fields:{FunctionInliner:null,ExtractExpression:null,ConvertToMacroExpand:null,DiagnosticFixer:null,Rename:null},ctors:{init:function(){this.FunctionInliner=Kusto.Language.Editor.KustoActors.FunctionInliner.Name;this.ExtractExpression=Kusto.Language.Editor.KustoActors.ExtractExpression.Name;this.ConvertToMacroExpand=Kusto.Language.Editor.KustoActors.ConvertToMacroExpand.Name;this.DiagnosticFixer=Kusto.Language.Editor.KustoActors.DiagnosticFixer.Name;this.Rename=Kusto.Language.Editor.KustoActors.Rename.Name}}}});Bridge.define("Kusto.Language.Editor.KustoActors",{statics:{fields:{FunctionInliner:null,ExtractExpression:null,ConvertToMacroExpand:null,Rename:null,DiagnosticFixer:null,All:null},ctors:{init:function(){this.FunctionInliner=new Kusto.Language.Editor.InlineDatabaseFunctionActor;this.ExtractExpression=new Kusto.Language.Editor.ExtractExpressionActor;this.ConvertToMacroExpand=new Kusto.Language.Editor.ConvertToMacroExpandActor;this.Rename=new Kusto.Language.Editor.RenameActor;this.DiagnosticFixer=new Kusto.Language.Editor.DiagnosticFixActor;this.All=System.Array.init([Kusto.Language.Editor.KustoActors.FunctionInliner,Kusto.Language.Editor.KustoActors.ExtractExpression,Kusto.Language.Editor.KustoActors.ConvertToMacroExpand,Kusto.Language.Editor.KustoActors.Rename,Kusto.Language.Editor.KustoActors.DiagnosticFixer],Kusto.Language.Editor.KustoActor)}}}});Bridge.define("Kusto.Language.Editor.KustoFixer",{statics:{methods:{EditContainsPosition:function(edits,position){if(System.Array.getCount(edits,Kusto.Language.Editor.TextEdit)>0){var min=System.Linq.Enumerable.from(edits,Kusto.Language.Editor.TextEdit).min(function(a){return a.Start}),max=System.Linq.Enumerable.from(edits,Kusto.Language.Editor.TextEdit).max(function(a){return a.Start+a.DeleteLength|0});return position>=min&&position<max}else return!1}}},fields:{_diagnostics:null},props:{Name:{get:function(){return Bridge.Reflection.getTypeName(Bridge.getType(this))}},Diagnostics:{get:function(){return this._diagnostics==null&&(this._diagnostics=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Diagnostic,this.GetDiagnostics())),this._diagnostics}}},methods:{GetFixActions:function(code,cursorDiagnostic,selectionDiagnostics,options,actions,cancellationToken){var $t,originalCount=actions.Count,dx,newAction;if(this.GetFixAction(code,cursorDiagnostic,options,actions,cancellationToken),actions.Count===(originalCount+1|0)&&System.Array.getCount(selectionDiagnostics,Kusto.Language.Diagnostic)>1){var primaryAction=actions.getItem(originalCount),relatedActions=new(System.Collections.Generic.List$1(Kusto.Language.Editor.ApplyAction).ctor),tmpActions=new(System.Collections.Generic.List$1(Kusto.Language.Editor.CodeAction).ctor);$t=Bridge.getEnumerator(selectionDiagnostics,Kusto.Language.Diagnostic);try{while($t.moveNext())dx=$t.Current,tmpActions.clear(),this.GetFixAction(code,dx,options,tmpActions,cancellationToken),relatedActions.AddRange(System.Linq.Enumerable.from(tmpActions).ofType(Kusto.Language.Editor.ApplyAction).where(function(a){return Bridge.referenceEquals(a.Kind,primaryAction.Kind)}))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}relatedActions.Count>1&&(newAction=Kusto.Language.Editor.CodeAction.CreateMenu(primaryAction.Title,primaryAction.Description,System.Array.init([primaryAction.WithTitle("Apply"),Kusto.Language.Editor.CodeAction.CreateFixAll("Fix All","Apply to all occurences in query or selection.",relatedActions)],Kusto.Language.Editor.CodeAction)),actions.setItem(originalCount,newAction))}},GetFixAction:function(code,dx,options,actions,cancellationToken){},ApplyFixAction:function(code,action,caretPosition,options,cancellationToken){var ma;return(ma=Bridge.as(action,Kusto.Language.Editor.MultiAction))!=null?this.ApplyFixActions(code,ma.Actions,caretPosition,options,cancellationToken):this.ApplyFixActions(code,System.Array.init([action],Kusto.Language.Editor.ApplyAction),caretPosition,options,cancellationToken)},ApplyFixActions:function(code,actions,caretPosition,options,cancellationToken){var $t,suggestedCaretPosition=caretPosition,suggestedCaretBias=Kusto.Language.Editor.PositionBias.Left,edits=new(System.Collections.Generic.List$1(Kusto.Language.Editor.TextEdit).ctor),action,result,startingText,newText,newCaretPosition;$t=Bridge.getEnumerator(actions,Kusto.Language.Editor.ApplyAction);try{while($t.moveNext())action=$t.Current,result=this.GetFixEdits(code,action,caretPosition,options,cancellationToken),edits.AddRange(result.Edits),Kusto.Language.Editor.KustoFixer.EditContainsPosition(result.Edits,caretPosition)&&(suggestedCaretPosition=result.NewCaretPosition,suggestedCaretBias=result.Bias)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return(startingText=new Kusto.Language.Editor.EditString.ctor(code.Text),edits.Count>0)?startingText.CanApplyAll(edits)?(newText=startingText.ApplyAll$1(edits),newCaretPosition=newText.GetCurrentPosition(suggestedCaretPosition,suggestedCaretBias),Kusto.Language.Editor.CodeActionResult.ChangeAndMove(newText,newCaretPosition)):Kusto.Language.Editor.CodeActionResult.Failure("Invalid fix changes"):Kusto.Language.Editor.CodeActionResult.Nothing},GetFixEdits:function(code,action,caretPosition,options,cancellationToken){return new Kusto.Language.Editor.FixEdits.$ctor2(caretPosition,null)}}});Bridge.define("Kusto.Language.Editor.KustoAnalyzerCodes",{statics:{fields:{AvoidUsingContains:null,AvoidUsingIsNullStringComparision:null,AvoidUsingIsNotNullStringComparison:null,AvoidUsingShortStringComparision:null,AvoidUsingToBoolOnNumerics:null,NullAggregation:null,AvoidUsingFormatDateTimeInPredicate:null,AvoidUsingObsoleteFunctions:null,AvoidJoinWithoutKind:null,StdevTimespanConversion:null,ColumnHasSameNameAsVariable:null,PreferUsingMaterializedViewIntrinsic:null,CalledFunctionHasErrors:null,AvoidUsingLegacyPartition:null,AvoidUsingHasWithIPv4Strings:null,PreferUsingOptimizedAlternative:null,AvoidStrlenWithDynamic:null},ctors:{init:function(){this.AvoidUsingContains="KS500";this.AvoidUsingIsNullStringComparision="KS501";this.AvoidUsingIsNotNullStringComparison="KS502";this.AvoidUsingShortStringComparision="KS503";this.AvoidUsingToBoolOnNumerics="KS504";this.NullAggregation="KS505";this.AvoidUsingFormatDateTimeInPredicate="KS506";this.AvoidUsingObsoleteFunctions="KS507";this.AvoidJoinWithoutKind="KS508";this.StdevTimespanConversion="KS509";this.ColumnHasSameNameAsVariable="KS510";this.PreferUsingMaterializedViewIntrinsic="KS511";this.CalledFunctionHasErrors="KS512";this.AvoidUsingLegacyPartition="KS513";this.AvoidUsingHasWithIPv4Strings="KS514";this.PreferUsingOptimizedAlternative="KS515";this.AvoidStrlenWithDynamic="KS516"}}}});Bridge.define("Kusto.Language.Editor.KustoAnalyzers",{statics:{fields:{AvoidUsingContains:null,AvoidUsingNullStringComparison:null,AvoidUsingToBoolOnNumerics:null,NullAggregation:null,AvoidUsingFormatDatetimeInPredicate:null,AvoidUsingLegacyPartition:null,AvoidUsingObsoleteFunctions:null,AvoidJoinWithoutKind:null,StdevTimespanConversion:null,ColumnHasSameNameAsVariable:null,PreferUsingMaterializedViewIntrinsic:null,CalledFunctionHasErrors:null,AvoidUsingHasWithIPv4Strings:null,PreferUsingOptimizedAlternative:null,AvoidStrlenWithDynamic:null,All:null},ctors:{init:function(){this.AvoidUsingContains=new Kusto.Language.Editor.AvoidUsingContainsAnalyzer;this.AvoidUsingNullStringComparison=new Kusto.Language.Editor.AvoidUsingNullStringComparisonAnalyzer;this.AvoidUsingToBoolOnNumerics=new Kusto.Language.Editor.AvoidUsingToBoolOnNumericsAnalyzer;this.NullAggregation=new Kusto.Language.Editor.NullAggregationAnalyzer;this.AvoidUsingFormatDatetimeInPredicate=new Kusto.Language.Editor.AvoidUsingFormatDateTimeInPredicateAnalyzer;this.AvoidUsingLegacyPartition=new Kusto.Language.Editor.AvoidUsingLegacyPartitionAnalyzer;this.AvoidUsingObsoleteFunctions=new Kusto.Language.Editor.AvoidUsingObsoleteFunctionsAnalyzer;this.AvoidJoinWithoutKind=new Kusto.Language.Editor.AvoidJoinWithoutKindAnalyzer;this.StdevTimespanConversion=new Kusto.Language.Editor.StdevTimespanConversionAnalyzer;this.ColumnHasSameNameAsVariable=new Kusto.Language.Editor.ColumnHasSameNameAsVariableAnalyzer;this.PreferUsingMaterializedViewIntrinsic=new Kusto.Language.Editor.PreferUsingMaterializedViewIntrinsicAnalyzer;this.CalledFunctionHasErrors=new Kusto.Language.Editor.CalledFunctionHasErrorsAnalyzer;this.AvoidUsingHasWithIPv4Strings=new Kusto.Language.Editor.AvoidUsingHasWithIPv4StringsAnalyzer;this.PreferUsingOptimizedAlternative=new Kusto.Language.Editor.PreferUsingOptimizedAlternative;this.AvoidStrlenWithDynamic=new Kusto.Language.Editor.AvoidStrlenWithDynamicAnalyzer;this.All=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Editor.KustoAnalyzer,System.Array.init([Kusto.Language.Editor.KustoAnalyzers.AvoidUsingContains,Kusto.Language.Editor.KustoAnalyzers.AvoidUsingNullStringComparison,Kusto.Language.Editor.KustoAnalyzers.AvoidUsingToBoolOnNumerics,Kusto.Language.Editor.KustoAnalyzers.NullAggregation,Kusto.Language.Editor.KustoAnalyzers.AvoidUsingFormatDatetimeInPredicate,Kusto.Language.Editor.KustoAnalyzers.AvoidUsingObsoleteFunctions,Kusto.Language.Editor.KustoAnalyzers.AvoidJoinWithoutKind,Kusto.Language.Editor.KustoAnalyzers.StdevTimespanConversion,Kusto.Language.Editor.KustoAnalyzers.AvoidUsingLegacyPartition,Kusto.Language.Editor.KustoAnalyzers.ColumnHasSameNameAsVariable,Kusto.Language.Editor.KustoAnalyzers.PreferUsingMaterializedViewIntrinsic,Kusto.Language.Editor.KustoAnalyzers.CalledFunctionHasErrors,Kusto.Language.Editor.KustoAnalyzers.AvoidUsingHasWithIPv4Strings,Kusto.Language.Editor.KustoAnalyzers.PreferUsingOptimizedAlternative,Kusto.Language.Editor.KustoAnalyzers.AvoidStrlenWithDynamic],Kusto.Language.Editor.KustoAnalyzer))}}}});Bridge.define("Kusto.Language.Editor.KustoClassifier",{statics:{methods:{GetClassifications:function(root,start,length,clipToRange,list,cancellationToken){var end=start+length|0,limiter=function(range){var clipStart,clipEnd,last;if(range.End>start&&range.Start<end){if(clipToRange&&(range.Start<start||range.End>end)&&(clipStart=Math.max(range.Start,start),clipEnd=Math.min(range.End,end),range=new Kusto.Language.Editor.ClassifiedRange(range.Kind,clipStart,clipEnd-clipStart|0)),list.Count>0&&(last=list.getItem(list.Count-1|0),last.Kind===range.Kind&&last.End===range.Start)){list.setItem(list.Count-1|0,new Kusto.Language.Editor.ClassifiedRange(last.Kind,last.Start,last.Length+range.Length|0));return}list.add(range)}};root.WalkTokens$1(start,end,function(token){if(cancellationToken.ThrowIfCancellationRequested(),Kusto.Language.Editor.KustoClassifier.GetTriviaClassifications(token,limiter),token.IsLiteral&&token.Prefix.length>0)limiter(new Kusto.Language.Editor.ClassifiedRange(Kusto.Language.Editor.ClassificationKind.Keyword,token.TextStart,token.Prefix.length)),limiter(new Kusto.Language.Editor.ClassifiedRange(Kusto.Language.Editor.ClassificationKind.Literal,token.TextStart+token.Prefix.length|0,token.Text.length-token.Prefix.length|0));else{var kind=Kusto.Language.Editor.KustoClassifier.GetKind(token);limiter(new Kusto.Language.Editor.ClassifiedRange(kind,token.TextStart,token.Width))}})},GetKind:function(token){var $step=0,$jumpFromFinally,$t,$asyncBody=Bridge.fn.bind(this,function(){for(;;){$step=System.Array.min([0,1,2,3,4,5,6,7,8,9,10],$step);switch($step){case 0:if(Kusto.Language.Editor.KustoClassifier.IsSkipped(token))return Kusto.Language.Editor.ClassificationKind.PlainText;if(Kusto.Language.Editor.KustoClassifier.IsCommandVerbToken(token))return Kusto.Language.Editor.ClassificationKind.Command;if(Bridge.is(token.Parent,Kusto.Language.Syntax.BracedName))return Kusto.Language.Editor.ClassificationKind.ClientParameter;if($t=Kusto.Language.Syntax.SyntaxFacts.GetCategory(token.Kind),$t===Kusto.Language.Syntax.SyntaxCategory.Identifier){$step=1;continue}else if($t===Kusto.Language.Syntax.SyntaxCategory.Literal){$step=2;continue}else if($t===Kusto.Language.Syntax.SyntaxCategory.Keyword){$step=3;continue}else if($t===Kusto.Language.Syntax.SyntaxCategory.Punctuation){$step=7;continue}else if($t===Kusto.Language.Syntax.SyntaxCategory.Operator){$step=8;continue}else{$step=9;continue}$step=10;continue;case 1:return Kusto.Language.Editor.KustoClassifier.IsQueryParameter(token)?Kusto.Language.Editor.ClassificationKind.QueryParameter:Kusto.Language.Editor.KustoClassifier.GetIdentifierKind(token);case 2:return token.Kind===Kusto.Language.Syntax.SyntaxKind.StringLiteralToken?Kusto.Language.Editor.ClassificationKind.StringLiteral:Kusto.Language.Editor.ClassificationKind.Literal;case 3:if(Kusto.Language.Editor.KustoClassifier.IsIdentifierKeyword(token)){$step=4;continue}else{$step=5;continue}case 4:$step=1;continue;case 5:return Kusto.Language.Editor.KustoClassifier.IsTypeToken(token)?Kusto.Language.Editor.ClassificationKind.Type:Kusto.Language.Editor.KustoClassifier.IsScalarOperatorToken(token)?Kusto.Language.Editor.ClassificationKind.ScalarOperator:Kusto.Language.Editor.KustoClassifier.IsQueryOperatorToken(token)?Kusto.Language.Editor.ClassificationKind.QueryOperator:Kusto.Language.Editor.KustoClassifier.IsQueryParameter(token)?Kusto.Language.Editor.ClassificationKind.QueryParameter:Kusto.Language.Editor.KustoClassifier.IsCommandVerbToken(token)?Kusto.Language.Editor.ClassificationKind.Command:Kusto.Language.Editor.ClassificationKind.Keyword;$step=6;continue;case 6:case 7:return Kusto.Language.Editor.ClassificationKind.Punctuation;case 8:return Kusto.Language.Editor.ClassificationKind.MathOperator;case 9:return token.Kind===Kusto.Language.Syntax.SyntaxKind.DirectiveToken?Kusto.Language.Editor.ClassificationKind.Directive:Kusto.Language.Editor.ClassificationKind.PlainText;case 10:return;default:return}}},arguments);return $asyncBody()},GetIdentifierKind:function(token){var $t,$t1,symbolKind=($t=($t1=token.Parent.GetFirstAncestorOrSelf(Kusto.Language.Syntax.SyntaxNode,function(n){return n.ReferencedSymbol!=null}))!=null?$t1.ReferencedSymbol.Kind:null,$t!=null?$t:Kusto.Language.Symbols.SymbolKind.None);switch(symbolKind){case Kusto.Language.Symbols.SymbolKind.Column:return Kusto.Language.Editor.ClassificationKind.Column;case Kusto.Language.Symbols.SymbolKind.Table:return Kusto.Language.Editor.ClassificationKind.Table;case Kusto.Language.Symbols.SymbolKind.Database:return Kusto.Language.Editor.ClassificationKind.Database;case Kusto.Language.Symbols.SymbolKind.Function:case Kusto.Language.Symbols.SymbolKind.Pattern:return Kusto.Language.Editor.ClassificationKind.Function;case Kusto.Language.Symbols.SymbolKind.Variable:return Kusto.Language.Editor.ClassificationKind.Variable;case Kusto.Language.Symbols.SymbolKind.Parameter:return Kusto.Language.Editor.ClassificationKind.Parameter;case Kusto.Language.Symbols.SymbolKind.MaterializedView:return Kusto.Language.Editor.ClassificationKind.MaterializedView;case Kusto.Language.Symbols.SymbolKind.Option:return Kusto.Language.Editor.ClassificationKind.Option;default:return Kusto.Language.Editor.KustoClassifier.IsName(token)?Kusto.Language.Editor.ClassificationKind.Identifier:Kusto.Language.Editor.ClassificationKind.Keyword}},IsSkipped:function(token){var ls;return(ls=Bridge.as(token.Parent,Kusto.Language.Syntax.SyntaxList))!=null&&Bridge.is(ls.Parent,Kusto.Language.Syntax.SkippedTokens)},IsName:function(token){return Bridge.is(token.Parent,Kusto.Language.Syntax.Name)},IsIdentifierKeyword:function(token){return Bridge.is(token.Parent,Kusto.Language.Syntax.TokenName)},IsTypeToken:function(token){var pt,type;return(pt=Bridge.as(token.Parent,Kusto.Language.Syntax.PrimitiveTypeExpression))!=null?(type=Kusto.Language.Binding.Binder.GetType(pt),type!=null&&!type.IsError):!1},IsScalarOperatorToken:function(token){var b,u;return(b=Bridge.as(token.Parent,Kusto.Language.Syntax.BinaryExpression))!=null&&Bridge.referenceEquals(b.Operator,token)||(u=Bridge.as(token.Parent,Kusto.Language.Syntax.PrefixUnaryExpression))!=null&&Bridge.referenceEquals(u.Operator,token)},IsQueryOperatorToken:function(token){var q,tc;return(q=Bridge.as(token.Parent,Kusto.Language.Syntax.QueryOperator))!=null&&Bridge.referenceEquals(q.GetChild(0),token)||(tc=Bridge.as(token.Parent,Kusto.Language.Syntax.TopNestedClause))!=null&&Bridge.referenceEquals(tc.GetChild(0),token)},IsQueryParameter:function(token){var n,d,np;return(n=Bridge.as(token.Parent,Kusto.Language.Syntax.Name))!=null&&(d=Bridge.as(n.Parent,Kusto.Language.Syntax.NameDeclaration))!=null&&(np=Bridge.as(d.Parent,Kusto.Language.Syntax.NamedParameter))!=null&&Bridge.referenceEquals(np.GetChild(0),d)},IsCommandVerbToken:function(token){var c,cn,list,uc;return(c=Bridge.as(token.Parent,Kusto.Language.Syntax.Command))!=null&&c.GetChildIndex(token)<2||(cn=Bridge.as(token.Parent,Kusto.Language.Syntax.CustomNode))!=null&&Bridge.is(cn.Parent,Kusto.Language.Syntax.CustomCommand)&&cn.GetChildIndex(token)===0||(list=Bridge.as(token.Parent,Kusto.Language.Syntax.SyntaxList))!=null&&(uc=Bridge.as(list.Parent,Kusto.Language.Syntax.UnknownCommand))!=null&&Bridge.referenceEquals(uc.Parts.getItem$1(0),token)},GetTriviaClassifications:function(token,action){var trivia,i,start;if(token.TriviaWidth>0)for(trivia=token.Trivia,i=0;i<trivia.length;i=i+1|0)if(!Kusto.Language.Parsing.TextFacts.IsWhitespace(trivia.charCodeAt(i))){for(start=i;i<trivia.length;i=i+1|0)if(Kusto.Language.Parsing.TextFacts.IsLineBreakStart(trivia.charCodeAt(i)))break;action(new Kusto.Language.Editor.ClassifiedRange(Kusto.Language.Editor.ClassificationKind.Comment,token.TriviaStart+start|0,i-start|0))}}}}});Bridge.define("Kusto.Language.Editor.KustoCompleter",{statics:{fields:{s_namesWithDashes:null,AfterQueryStart:null,s_expressionListPool:null,s_parameterListPool:null,punctuationWithoutSpace:null,_completionItemListPool:null,MaxExtensionSize:0,MaxExtensionCount:0},ctors:{init:function(){this.s_namesWithDashes=System.Linq.Enumerable.from(Kusto.Language.Syntax.SyntaxFacts.GetKindsWithFixedText(),Kusto.Language.Syntax.SyntaxKind).select(function(k){return Kusto.Language.Syntax.SyntaxFacts.GetText(k)}).where(function(t){return System.String.contains(t,"-")}).toList(System.String);this.AfterQueryStart="\n| ";this.s_expressionListPool=new(Kusto.Language.Utils.ObjectPool$1(System.Collections.Generic.List$1(Kusto.Language.Syntax.Expression)))(function(){return new(System.Collections.Generic.List$1(Kusto.Language.Syntax.Expression).ctor)},function(list){list.clear()});this.s_parameterListPool=new(Kusto.Language.Utils.ObjectPool$1(System.Collections.Generic.List$1(Kusto.Language.Symbols.Parameter)))(function(){return new(System.Collections.Generic.List$1(Kusto.Language.Symbols.Parameter).ctor)},function(list){list.clear()});this.punctuationWithoutSpace=System.Array.init(["(","[","{","*","@","$"],System.String);this._completionItemListPool=new(Kusto.Language.Utils.ObjectPool$1(System.Collections.Generic.List$1(Kusto.Language.Editor.CompletionItem)))(function(){return new(System.Collections.Generic.List$1(Kusto.Language.Editor.CompletionItem).ctor)},function(list){list.clear()});this.MaxExtensionSize=10;this.MaxExtensionCount=20}},methods:{IsKeywordOrIdentifierOrDash:function(kind){return kind===Kusto.Language.Syntax.SyntaxKind.IdentifierToken||kind===Kusto.Language.Syntax.SyntaxKind.MinusToken||Kusto.Language.Syntax.SyntaxFacts.GetCategory(kind)===Kusto.Language.Syntax.SyntaxCategory.Keyword},IsStartOfKnownNameWithDashes:function(text){return System.Linq.Enumerable.from(Kusto.Language.Editor.KustoCompleter.s_namesWithDashes,System.String).any(function(n){return System.String.startsWith(n,text)})},IsInsideComment:function(trivia,triviaOffset){var start={},length={};return Kusto.Language.Parsing.TriviaFacts.TryGetCommentSpan(trivia,triviaOffset,start,length)?triviaOffset===start.v?!1:triviaOffset===(start.v+length.v|0)&&Kusto.Language.Parsing.TextFacts.HasLineBreaks(trivia)?!1:!0:!1},IsInsideLiteral:function(token,position){return Kusto.Language.Syntax.SyntaxFacts.GetCategory(token.Kind)===Kusto.Language.Syntax.SyntaxCategory.Literal&&position>=token.TextStart&&position<=token.End},IsStartOfQuery:function(context){while(Bridge.is(context,Kusto.Language.Syntax.Name)||Bridge.is(context,Kusto.Language.Syntax.NameReference)||Bridge.is(context,Kusto.Language.Syntax.ExpressionStatement))context=context.Parent;return Bridge.is(context,Kusto.Language.Syntax.QueryBlock)||Bridge.is(context,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)))||Bridge.is(context,Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement))},IsInvokeFunctionContext:function(node){var op=node!=null?node.GetFirstAncestorOrSelf(Kusto.Language.Syntax.QueryOperator):null,fc=node!=null?node.GetFirstAncestorOrSelf(Kusto.Language.Syntax.FunctionCallExpression):null;return Bridge.is(op,Kusto.Language.Syntax.InvokeOperator)&&(fc==null||fc.TextStart<op.TextStart)},ContainsOnlyOneToken:function(node){while(node!=null&&node.ChildCount===1){var child=node.GetChild(0);if(Bridge.is(child,Kusto.Language.Syntax.SyntaxToken))return!0;node=Bridge.as(child,Kusto.Language.Syntax.SyntaxNode)}return!1},GetUnpipedExpression:function(exp){for(var pe;(pe=Bridge.as(exp,Kusto.Language.Syntax.PipeExpression))!=null;)exp=pe.Expression;return exp},IsEqualityExpression:function(kind){return kind===Kusto.Language.Syntax.SyntaxKind.EqualExpression||kind===Kusto.Language.Syntax.SyntaxKind.EqualTildeExpression||kind===Kusto.Language.Syntax.SyntaxKind.NotEqualExpression},AddColumnExamples:function(builder,column){var $t,example;$t=Bridge.getEnumerator(column.Examples,System.String);try{while($t.moveNext())example=$t.Current,builder.Add(Kusto.Language.Editor.KustoCompleter.CreateColumnExampleCompletion(example,column.Type))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}},CreateColumnExampleCompletion:function(example,type){var displayText=example,editText=example,matchText=example;return Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.String)?Kusto.Language.Parsing.TokenParser.ScanStringLiteral(example)===example.length?displayText=matchText=Kusto.Language.KustoFacts.GetStringLiteralValue(example):editText=Kusto.Language.KustoFacts.GetStringLiteral(example):Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Bool)?System.String.startsWith(example,"bool(")?(displayText=matchText=Kusto.Language.Editor.KustoCompleter.GetGooLiteralContent(example),Kusto.Language.Parsing.TokenParser.ScanBooleanLiteral(displayText)===displayText.length&&(editText=displayText)):Kusto.Language.Parsing.TokenParser.ScanBooleanLiteral(example)!==example.length&&(editText="bool("+(example||"")+")"):Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Int)?System.String.startsWith(example,"int(")?displayText=matchText=Kusto.Language.Editor.KustoCompleter.GetGooLiteralContent(example):editText="int("+(example||"")+")":Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Long)?System.String.startsWith(example,"long(")?(displayText=matchText=Kusto.Language.Editor.KustoCompleter.GetGooLiteralContent(example),Kusto.Language.Parsing.TokenParser.ScanLongLiteral(displayText)===displayText.length&&(editText=displayText)):Kusto.Language.Parsing.TokenParser.ScanLongLiteral(example)!==example.length&&(editText="long("+(example||"")+")"):Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Real)?System.String.startsWith(example,"real(")||System.String.startsWith(example,"double(")?(displayText=matchText=Kusto.Language.Editor.KustoCompleter.GetGooLiteralContent(example),Kusto.Language.Parsing.TokenParser.ScanRealLiteral(displayText)===displayText.length&&(editText=displayText)):Kusto.Language.Parsing.TokenParser.ScanRealLiteral(example)!==example.length&&(editText="real("+(example||"")+")"):Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Decimal)?System.String.startsWith(example,"decimal(")?displayText=matchText=Kusto.Language.Editor.KustoCompleter.GetGooLiteralContent(example):editText="decimal("+(example||"")+")":Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.TimeSpan)?System.String.startsWith(example,"timespan(")||System.String.startsWith(example,"time(")?(displayText=matchText=Kusto.Language.Editor.KustoCompleter.GetGooLiteralContent(example),Kusto.Language.Parsing.TokenParser.ScanTimespanLiteral(displayText)===displayText.length&&(editText=displayText)):Kusto.Language.Parsing.TokenParser.ScanTimespanLiteral(example)!==example.length&&(editText="timespan("+(example||"")+")"):Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.DateTime)?System.String.startsWith(example,"datetime(")||System.String.startsWith(example,"date(")?displayText=matchText=Kusto.Language.Editor.KustoCompleter.GetGooLiteralContent(example):editText="datetime("+(example||"")+")":Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Guid)?System.String.startsWith(example,"guid(")?displayText=matchText=Kusto.Language.Editor.KustoCompleter.GetGooLiteralContent(example):editText="guid("+(example||"")+")":Bridge.is(type,Kusto.Language.Symbols.DynamicSymbol)&&(System.String.startsWith(example,"dynamic(")?displayText=matchText=Kusto.Language.Editor.KustoCompleter.GetGooLiteralContent(example):editText="dynamic("+(example||"")+")"),new Kusto.Language.Editor.CompletionItem.$ctor1(Kusto.Language.Editor.CompletionKind.Example,displayText,editText,void 0,matchText,void 0,12,3,!1)},GetGooLiteralContent:function(literal){var openParenIndex=System.String.indexOf(literal,String.fromCharCode(40)),closeParenIndex=literal.lastIndexOf(String.fromCharCode(41));return openParenIndex>=0&&closeParenIndex>=0?literal.substr(openParenIndex+1|0,(closeParenIndex-openParenIndex|0)-1|0):literal},GetParameterExamples:function(signature,$arguments,possibleParameters,examples){var $t,$t1,$t2,$t3,p,ex,ex1,type,op;$t=Bridge.getEnumerator(possibleParameters,Kusto.Language.Symbols.Parameter);try{while($t.moveNext()){if(p={v:$t.Current},System.Array.getCount(p.v.Examples,System.String)>0){$t1=Bridge.getEnumerator(p.v.Examples,System.String);try{while($t1.moveNext())ex=$t1.Current,examples.add(ex)}finally{Bridge.is($t1,System.IDisposable)&&$t1.System$IDisposable$Dispose()}}else if(System.Array.getCount(p.v.Values,System.Object)>0){$t2=Bridge.getEnumerator(System.Linq.Enumerable.from(p.v.Values,System.Object).select(function($me,p){return function(v){return Kusto.Language.Editor.KustoCompleter.CreateValueExamples(p.v,v)}}(this,p)));try{while($t2.moveNext())ex1=$t2.Current,examples.add(ex1)}finally{Bridge.is($t2,System.IDisposable)&&$t2.System$IDisposable$Dispose()}}if(Bridge.is(signature.Symbol,Kusto.Language.Symbols.FunctionSymbol)){if(p.v.TypeKind===Kusto.Language.Symbols.ParameterTypeKind.Declared){$t3=Bridge.getEnumerator(p.v.DeclaredTypes,Kusto.Language.Symbols.TypeSymbol);try{while($t3.moveNext())type=$t3.Current,Kusto.Language.Editor.KustoCompleter.GetTypeExamples(type,examples)}finally{Bridge.is($t3,System.IDisposable)&&$t3.System$IDisposable$Dispose()}}}else(op=Bridge.as(signature.Symbol,Kusto.Language.Symbols.OperatorSymbol))!=null&&Kusto.Language.Editor.KustoCompleter.GetOperatorExamples(op,$arguments,possibleParameters,examples)}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}},GetTypeExamples:function(type,examples){Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Bool)&&(examples.add("false"),examples.add("true"))},CreateValueExamples:function(p,value){var s,dt,ts,g,d;do return Bridge.is(value,System.String)?(s=Bridge.cast(value,System.String),Kusto.Language.KustoFacts.GetSingleQuotedStringLiteral(p.IsCaseSensitive?s:s.toLowerCase())):Bridge.is(value,System.DateTime)?(dt=System.Nullable.getValue(Bridge.cast(Bridge.unbox(value,System.DateTime),System.DateTime)),System.String.format("datetime({0})",[Bridge.box(dt,System.DateTime,System.DateTime.format)])):Bridge.is(value,System.TimeSpan)?(ts=System.Nullable.getValue(Bridge.cast(Bridge.unbox(value,System.TimeSpan),System.TimeSpan)),System.String.format("timespan({0})",[ts])):Bridge.is(value,System.Guid)?(g=System.Nullable.getValue(Bridge.cast(Bridge.unbox(value,System.Guid),System.Guid)),System.String.format("guid({0})",[g])):Bridge.is(value,System.Decimal)?(d=System.Nullable.getValue(Bridge.cast(Bridge.unbox(value,System.Decimal),System.Decimal)),System.String.format("decimal({0})",[d])):Bridge.toString(value);while(0)},GetOperatorExamples:function(symbol,$arguments,possibleParameters,examples){if((Bridge.referenceEquals(symbol,Kusto.Language.Operators.Equal)||Bridge.referenceEquals(symbol,Kusto.Language.Operators.NotEqual)||Bridge.referenceEquals(symbol,Kusto.Language.Operators.EqualTilde)||Bridge.referenceEquals(symbol,Kusto.Language.Operators.GreaterThan)||Bridge.referenceEquals(symbol,Kusto.Language.Operators.GreaterThanOrEqual)||Bridge.referenceEquals(symbol,Kusto.Language.Operators.LessThan)||Bridge.referenceEquals(symbol,Kusto.Language.Operators.LessThanOrEqual))&&System.Array.getCount($arguments,Kusto.Language.Syntax.Expression)>0){var type=System.Array.getItem($arguments,0,Kusto.Language.Syntax.Expression).ResultType;Kusto.Language.Editor.KustoCompleter.GetTypeExamples(type,examples)}},GetPossibleParameters:function(sig,$arguments,parameterName,argumentIndex,possibleParameters){var ap,prevArgs,argParams,ap1;parameterName!=null?(ap=sig.GetParameter(parameterName),Bridge.referenceEquals(ap,Kusto.Language.Symbols.Signature.UnknownParameter)||possibleParameters.add(sig.GetParameter(parameterName))):argumentIndex<System.Array.getCount($arguments,Kusto.Language.Syntax.Expression)?argumentIndex===(System.Array.getCount($arguments,Kusto.Language.Syntax.Expression)-1|0)&&System.Array.getItem($arguments,argumentIndex,Kusto.Language.Syntax.Expression).IsMissing?(prevArgs=System.Linq.Enumerable.from($arguments,Kusto.Language.Syntax.Expression).take(argumentIndex).toList(Kusto.Language.Syntax.Expression),sig.GetNextPossibleParameters(prevArgs,possibleParameters)):(argParams=sig.GetArgumentParameters($arguments),ap1=argParams.getItem(argumentIndex),Bridge.referenceEquals(ap1,Kusto.Language.Symbols.Signature.UnknownParameter)||possibleParameters.add(ap1)):sig.GetNextPossibleParameters($arguments,possibleParameters)},GetInstanceExpressionOfFunctionCall:function(functionCallOrArgument){var fcall,path;return(fcall=functionCallOrArgument.GetFirstAncestorOrSelf(Kusto.Language.Syntax.FunctionCallExpression))!=null&&(path=Bridge.as(fcall.Parent,Kusto.Language.Syntax.PathExpression))!=null?path.Expression:null},GetUnnamedArguments:function($arguments,unnamedArguments){var $t,arg,sn;$t=Bridge.getEnumerator($arguments,Kusto.Language.Syntax.Expression);try{while($t.moveNext())arg=$t.Current,(sn=Bridge.as(arg,Kusto.Language.Syntax.SimpleNamedExpression))!=null?unnamedArguments.add(sn.Expression):unnamedArguments.add(arg)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}},GetSymbolMatch:function(hint){var match=Kusto.Language.Symbols.SymbolMatch.None;return(hint&Kusto.Language.Editor.CompletionHint.Column)!=0&&(match|=Kusto.Language.Symbols.SymbolMatch.Column),(hint&Kusto.Language.Editor.CompletionHint.TabularFunction)!=0&&(match|=1064),(hint&640)!=0&&(match|=552),(hint&3072)!=0&&(match|=Kusto.Language.Symbols.SymbolMatch.Function),(hint&52)!=0&&(match|=553),(hint&Kusto.Language.Editor.CompletionHint.Tabular)!=0&&(match|=3118),(hint&Kusto.Language.Editor.CompletionHint.Expression)!=0&&(match|=3887),(hint&Kusto.Language.Editor.CompletionHint.Table)!=0&&(match|=Kusto.Language.Symbols.SymbolMatch.Table),(hint&Kusto.Language.Editor.CompletionHint.ExternalTable)!=0&&(match|=Kusto.Language.Symbols.SymbolMatch.ExternalTable),(hint&Kusto.Language.Editor.CompletionHint.MaterializedView)!=0&&(match|=Kusto.Language.Symbols.SymbolMatch.MaterializedView),(hint&Kusto.Language.Editor.CompletionHint.Database)!=0&&(match|=Kusto.Language.Symbols.SymbolMatch.Database),(hint&Kusto.Language.Editor.CompletionHint.Cluster)!=0&&(match|=Kusto.Language.Symbols.SymbolMatch.Cluster),(hint&Kusto.Language.Editor.CompletionHint.EntityGroup)!=0&&(match|=Kusto.Language.Symbols.SymbolMatch.EntityGroup),(hint&Kusto.Language.Editor.CompletionHint.Option)!=0&&(match|=Kusto.Language.Symbols.SymbolMatch.Option),(hint&Kusto.Language.Editor.CompletionHint.Graph)!=0&&(match|=Kusto.Language.Symbols.SymbolMatch.Graph),match},IsChildMissingOrEmpty:function(contextNode,childIndex){return Kusto.Language.Editor.KustoCompleter.IsChildMissing(contextNode,childIndex)||Kusto.Language.Editor.KustoCompleter.IsChildEmpty(contextNode,childIndex)},IsChildMissing:function(node,index){var child=node.GetChild(index);return child!=null&&child.IsMissing},IsChildEmpty:function(node,index){var child=node.GetChild(index);return(child==null||child.Width===0)&&!Kusto.Language.Editor.KustoCompleter.IsChildMissing(node,index)},IsChildOnNewLine:function(node,index){var child,token,firstLB;return(child=node.GetChild(index))!=null&&(token=child.GetFirstToken())!=null?(firstLB=Kusto.Language.Parsing.TextFacts.GetNextLineBreakStart(token.Trivia,0),firstLB>=0&&Kusto.Language.Parsing.TextFacts.IsWhitespaceOnly$1(token.Trivia,0,firstLB)):!1},GetNextPossibleParameterHints:function(signature,$arguments){var $t,parameterList=Kusto.Language.Editor.KustoCompleter.s_parameterListPool.AllocateFromPool(),hint,p;try{hint=Kusto.Language.Editor.CompletionHint.None;signature.GetNextPossibleParameters($arguments,parameterList);$t=Bridge.getEnumerator(parameterList);try{while($t.moveNext())p=$t.Current,hint|=Kusto.Language.Editor.KustoCompleter.GetParameterHint(signature,p)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return hint}finally{Kusto.Language.Editor.KustoCompleter.s_parameterListPool.ReturnToPool(parameterList)}},GetArgumentParameterHints:function(signature,$arguments,iArgument){var parameterList=Kusto.Language.Editor.KustoCompleter.s_parameterListPool.AllocateFromPool(),p;try{return signature.GetArgumentParameters$2($arguments,parameterList),p=parameterList.getItem(iArgument),Kusto.Language.Editor.KustoCompleter.GetParameterHint(signature,p)}finally{Kusto.Language.Editor.KustoCompleter.s_parameterListPool.ReturnToPool(parameterList)}},GetParameterHint:function(signature,parameter){if(parameter!=null){switch(parameter.ArgumentKind){case Kusto.Language.Symbols.ArgumentKind.Column:case Kusto.Language.Symbols.ArgumentKind.Column_Parameter0:case Kusto.Language.Symbols.ArgumentKind.Column_Parameter0_Common:return Kusto.Language.Editor.CompletionHint.Column;case Kusto.Language.Symbols.ArgumentKind.StarOnly:return Kusto.Language.Editor.CompletionHint.None}switch(parameter.TypeKind){case Kusto.Language.Symbols.ParameterTypeKind.Declared:if(System.Array.getItem(parameter.DeclaredTypes,0,Kusto.Language.Symbols.TypeSymbol).IsScalar)return System.Array.getCount(parameter.DeclaredTypes,Kusto.Language.Symbols.TypeSymbol)===1&&Bridge.referenceEquals(System.Array.getItem(parameter.DeclaredTypes,0,Kusto.Language.Symbols.TypeSymbol),Kusto.Language.Symbols.ScalarTypes.Bool)?Kusto.Language.Editor.CompletionHint.Boolean:System.Linq.Enumerable.from(parameter.DeclaredTypes,Kusto.Language.Symbols.TypeSymbol).all(function(t){var s;return(s=Bridge.as(t,Kusto.Language.Symbols.ScalarSymbol))!=null&&s.IsNumeric})?Kusto.Language.Editor.CompletionHint.Number:Kusto.Language.Editor.CompletionHint.Scalar;else if(System.Array.getItem(parameter.DeclaredTypes,0,Kusto.Language.Symbols.TypeSymbol).IsTabular)return Kusto.Language.Editor.CompletionHint.Tabular;break;case Kusto.Language.Symbols.ParameterTypeKind.Parameter0:return Kusto.Language.Editor.KustoCompleter.GetParameterHint(signature,System.Array.getCount(signature.Parameters,Kusto.Language.Symbols.Parameter)>0?System.Array.getItem(signature.Parameters,0,Kusto.Language.Symbols.Parameter):null);case Kusto.Language.Symbols.ParameterTypeKind.Parameter1:return Kusto.Language.Editor.KustoCompleter.GetParameterHint(signature,System.Array.getCount(signature.Parameters,Kusto.Language.Symbols.Parameter)>1?System.Array.getItem(signature.Parameters,1,Kusto.Language.Symbols.Parameter):null);case Kusto.Language.Symbols.ParameterTypeKind.Parameter2:return Kusto.Language.Editor.KustoCompleter.GetParameterHint(signature,System.Array.getCount(signature.Parameters,Kusto.Language.Symbols.Parameter)>2?System.Array.getItem(signature.Parameters,2,Kusto.Language.Symbols.Parameter):null);case Kusto.Language.Symbols.ParameterTypeKind.Tabular:return Kusto.Language.Editor.CompletionHint.Tabular;case Kusto.Language.Symbols.ParameterTypeKind.Database:return Kusto.Language.Editor.CompletionHint.Database;case Kusto.Language.Symbols.ParameterTypeKind.Cluster:return Kusto.Language.Editor.CompletionHint.Cluster;case Kusto.Language.Symbols.ParameterTypeKind.Number:case Kusto.Language.Symbols.ParameterTypeKind.NumberOrBool:return Kusto.Language.Editor.CompletionHint.Number;default:return Kusto.Language.Editor.CompletionHint.Scalar}}return Kusto.Language.Editor.CompletionHint.None},GetChildIndex:function(node,position){for(var child,bestEmptyChild,i1,child1,firstChildBeyond=node.ChildCount,lastWasNullOrEmpty=!1,i=0,n=node.ChildCount;i<n;i=i+1|0)if(child=node.GetChild(i),child!=null)if(position>child.TextStart&&position<child.End&&child.Width>0)return i;else if(position<child.TextStart){firstChildBeyond=i;break}else if(position===child.TextStart){if(child.Width===0){firstChildBeyond=i+1|0;break}else if(lastWasNullOrEmpty){firstChildBeyond=i;break}}else lastWasNullOrEmpty=child.Width===0;else lastWasNullOrEmpty=!0;for(bestEmptyChild=firstChildBeyond-1|0,i1=firstChildBeyond-1|0;i1>=0;i1=i1-1|0)if(child1=node.GetChild(i1),child1!=null&&child1.Width>0)break;else bestEmptyChild=i1;return bestEmptyChild},HasEmptyChild:function(element,position){var hasEmptyChild,i,n,child;if(element==null)return!1;if(position>=element.End&&element.Kind===Kusto.Language.Syntax.SyntaxKind.List)return!0;for(hasEmptyChild=!1,i=0,n=element.ChildCount;i<n;i=i+1|0){if(child=element.GetChild(i),child!=null){if(position<=child.TextStart&&hasEmptyChild)return!0;if(position<child.End)return!1}hasEmptyChild=child==null||child.Width===0}return hasEmptyChild},GetNearestAncestorWithEmptyChild:function(token,position){for(var node=token.Parent;node!=null&&!Kusto.Language.Editor.KustoCompleter.HasEmptyChild(node,position);)node=node.Parent;return node},ReturnTypeMatchesContext:function(signature,arg0Type,returnTypeHint){return(returnTypeHint&Kusto.Language.Editor.CompletionHint.Boolean)!=0?Kusto.Language.Editor.KustoCompleter.IsBooleanReturnType(signature,arg0Type):(returnTypeHint&Kusto.Language.Editor.CompletionHint.Scalar)!=0||(returnTypeHint&Kusto.Language.Editor.CompletionHint.Aggregate)!=0?Kusto.Language.Editor.KustoCompleter.IsNonBooleanScalarReturnType(signature,arg0Type):(returnTypeHint&Kusto.Language.Editor.CompletionHint.Number)!=0?Kusto.Language.Editor.KustoCompleter.IsNumericReturnType(signature,arg0Type):(returnTypeHint&Kusto.Language.Editor.CompletionHint.Column)!=0?!1:!0},IsBooleanReturnType:function(signature,arg0Type){switch(signature.ReturnKind){case Kusto.Language.Symbols.ReturnTypeKind.Common:case Kusto.Language.Symbols.ReturnTypeKind.CommonNonDynamic:case Kusto.Language.Symbols.ReturnTypeKind.Widest:case Kusto.Language.Symbols.ReturnTypeKind.Parameter0:var s;return(s=Bridge.as(arg0Type,Kusto.Language.Symbols.ScalarSymbol))!=null&&Bridge.referenceEquals(s,Kusto.Language.Symbols.ScalarTypes.Bool);case Kusto.Language.Symbols.ReturnTypeKind.Declared:return Bridge.referenceEquals(signature.DeclaredReturnType,Kusto.Language.Symbols.ScalarTypes.Bool);default:return!1}},IsNonBooleanScalarReturnType:function(signature,arg0Type){switch(signature.ReturnKind){case Kusto.Language.Symbols.ReturnTypeKind.Common:case Kusto.Language.Symbols.ReturnTypeKind.CommonNonDynamic:case Kusto.Language.Symbols.ReturnTypeKind.Widest:case Kusto.Language.Symbols.ReturnTypeKind.Parameter0:var s;return(s=Bridge.as(arg0Type,Kusto.Language.Symbols.ScalarSymbol))!=null&&!Bridge.referenceEquals(s,Kusto.Language.Symbols.ScalarTypes.Bool);case Kusto.Language.Symbols.ReturnTypeKind.Declared:return signature.DeclaredReturnType.IsScalar&&!Bridge.referenceEquals(signature.DeclaredReturnType,Kusto.Language.Symbols.ScalarTypes.Bool);default:return!1}},IsNumericReturnType:function(signature,arg0Type){var s,s2;switch(signature.ReturnKind){case Kusto.Language.Symbols.ReturnTypeKind.Common:case Kusto.Language.Symbols.ReturnTypeKind.CommonNonDynamic:case Kusto.Language.Symbols.ReturnTypeKind.Widest:case Kusto.Language.Symbols.ReturnTypeKind.Parameter0:return(s=Bridge.as(arg0Type,Kusto.Language.Symbols.ScalarSymbol))!=null&&s.IsNumeric;case Kusto.Language.Symbols.ReturnTypeKind.Declared:return(s2=Bridge.as(signature.DeclaredReturnType,Kusto.Language.Symbols.ScalarSymbol))!=null&&s2.IsNumeric;default:return!1}},ParameterMatches:function(parameter,type){switch(parameter.TypeKind){case Kusto.Language.Symbols.ParameterTypeKind.Any:return!0;case Kusto.Language.Symbols.ParameterTypeKind.Declared:if(type.IsAssignableToAny(parameter.DeclaredTypes))return!0;else if(Kusto.Language.Symbols.TypeFacts.IsPromotableTo(type,System.Array.getItem(parameter.DeclaredTypes,0,Kusto.Language.Symbols.TypeSymbol)))return!0;break;case Kusto.Language.Symbols.ParameterTypeKind.Scalar:return type.IsScalar;case Kusto.Language.Symbols.ParameterTypeKind.Integer:return Kusto.Language.Symbols.TypeFacts.IsInteger(type);case Kusto.Language.Symbols.ParameterTypeKind.RealOrDecimal:return Kusto.Language.Symbols.TypeFacts.IsRealOrDecimal(type);case Kusto.Language.Symbols.ParameterTypeKind.StringOrDynamic:return Kusto.Language.Symbols.TypeFacts.IsStringOrDynamic(type);case Kusto.Language.Symbols.ParameterTypeKind.StringOrArray:return Kusto.Language.Symbols.TypeFacts.IsStringOrArray(type);case Kusto.Language.Symbols.ParameterTypeKind.IntegerOrArray:return Kusto.Language.Symbols.TypeFacts.IsIntegerOrArray(type);case Kusto.Language.Symbols.ParameterTypeKind.Number:return Kusto.Language.Symbols.TypeFacts.IsNumeric(type);case Kusto.Language.Symbols.ParameterTypeKind.NumberOrBool:return Kusto.Language.Symbols.TypeFacts.IsNumericOrBool(type);case Kusto.Language.Symbols.ParameterTypeKind.Summable:return Kusto.Language.Symbols.TypeFacts.IsSummable(type);case Kusto.Language.Symbols.ParameterTypeKind.Orderable:return Kusto.Language.Symbols.TypeFacts.IsOrderable(type);case Kusto.Language.Symbols.ParameterTypeKind.Tabular:return type.IsTabular;case Kusto.Language.Symbols.ParameterTypeKind.Database:return Bridge.is(type,Kusto.Language.Symbols.DatabaseSymbol);case Kusto.Language.Symbols.ParameterTypeKind.Cluster:return Bridge.is(type,Kusto.Language.Symbols.ClusterSymbol);case Kusto.Language.Symbols.ParameterTypeKind.NotBool:return Kusto.Language.Symbols.TypeFacts.IsAnyScalarExceptBool(type);case Kusto.Language.Symbols.ParameterTypeKind.NotRealOrBool:return Kusto.Language.Symbols.TypeFacts.IsAnyScalarExceptReadOrBool(type);case Kusto.Language.Symbols.ParameterTypeKind.NotDynamic:return Kusto.Language.Symbols.TypeFacts.IsAnyScalarExceptDynamic(type);case Kusto.Language.Symbols.ParameterTypeKind.Parameter0:case Kusto.Language.Symbols.ParameterTypeKind.Parameter1:case Kusto.Language.Symbols.ParameterTypeKind.Parameter2:case Kusto.Language.Symbols.ParameterTypeKind.CommonScalar:case Kusto.Language.Symbols.ParameterTypeKind.CommonNumber:case Kusto.Language.Symbols.ParameterTypeKind.CommonSummable:case Kusto.Language.Symbols.ParameterTypeKind.CommonOrderable:case Kusto.Language.Symbols.ParameterTypeKind.CommonScalarOrDynamic:return Bridge.is(type,Kusto.Language.Symbols.ScalarSymbol)}return!1},GetOperatorKind:function(opText){var kind={v:new Kusto.Language.Syntax.SyntaxKind};return Kusto.Language.Syntax.SyntaxFacts.TryGetKind(opText,kind)?Kusto.Language.Syntax.SyntaxFacts.GetOperatorKind(kind.v):Kusto.Language.Symbols.OperatorKind.None},IsInConditionalTest:function(path){var _discard3={},index={};return Kusto.Language.Editor.KustoCompleter.TryGetFirstAncestorConditional(path,null,_discard3,index)&&index.v===0},IsPunctuation:function(item){return Kusto.Language.Editor.KustoCompleter.IsPunctuation$1(item.DisplayText)},IsPunctuation$1:function(text){return text.length>0&&System.Char.isPunctuation(text.charCodeAt(0))},IsStartBracket:function(text){return Bridge.referenceEquals(text,"(")||Bridge.referenceEquals(text,"[")||Bridge.referenceEquals(text,"{")},GetEndBracket:function(startBracket){return Bridge.referenceEquals(startBracket,"(")?")":Bridge.referenceEquals(startBracket,"[")?"]":Bridge.referenceEquals(startBracket,"{")?"}":null},GetCompletionItem:function(parser){var item;return(item=System.Linq.Enumerable.from(parser.Annotations).ofType(Kusto.Language.Editor.CompletionItem).firstOrDefault(null,null))!=null?item:null},CreateExtendedSyntaxCompletion:function(items){var texts=System.Linq.Enumerable.from(items,Kusto.Language.Editor.CompletionItem).selectMany(function(item){return item.ApplyTexts}).toList(Kusto.Language.Editor.CompletionText),combinedTexts=Kusto.Language.Editor.KustoCompleter.CombineTexts(texts),displayText=System.Linq.Enumerable.from(items,Kusto.Language.Editor.CompletionItem).aggregate("",function(s,item){return Kusto.Language.Editor.KustoCompleter.CombineWithSpacing(s,item.DisplayText)}),matchText=Kusto.Language.Utils.StringExtensions.Filter(displayText,function(c){return!Kusto.Language.Parsing.TextFacts.IsWhitespace(c)});return new Kusto.Language.Editor.CompletionItem.$ctor1(System.Array.getItem(items,0,Kusto.Language.Editor.CompletionItem).Kind,displayText,void 0,void 0,matchText,void 0,12,3,!1).WithApplyTexts$1(combinedTexts).WithRank(Kusto.Language.Editor.CompletionRank.Other).WithPriority(Kusto.Language.Editor.CompletionPriority.Low)},CombineTexts:function(texts){for(var current,prev,results=new(System.Collections.Generic.List$1(Kusto.Language.Editor.CompletionText).ctor),i=0;i<System.Array.getCount(texts,Kusto.Language.Editor.CompletionText);i=i+1|0)current=System.Array.getItem(texts,i,Kusto.Language.Editor.CompletionText),results.Count===0?results.add(current):(prev=results.getItem(results.Count-1|0),prev.Caret||current.Caret?Kusto.Language.Editor.KustoCompleter.NeedsSpacing$1(prev.Text,current.Text)?current.Caret?prev.Caret?results.add(current):(results.setItem(results.Count-1|0,Kusto.Language.Editor.CompletionText.Create((prev.Text||"")+" ")),results.add(current)):results.add(Kusto.Language.Editor.CompletionText.Create(" "+(current.Text||""))):results.add(current):results.setItem(results.Count-1|0,Kusto.Language.Editor.CompletionText.Create(Kusto.Language.Editor.KustoCompleter.CombineWithSpacing(prev.Text,current.Text))));return results},NeedsSpacing$1:function(prev,next){return prev.length>0&&next.length>0&&Kusto.Language.Editor.KustoCompleter.NeedsSpacing(prev.charCodeAt(prev.length-1|0),next.charCodeAt(0))},NeedsSpacing:function(prev,next){return Kusto.Language.Editor.KustoCompleter.IsDoubleTokenChar(prev)||Kusto.Language.Editor.KustoCompleter.IsDoubleTokenChar(next)?!0:System.Char.isPunctuation(prev)&&System.Char.isPunctuation(next)?!1:System.Char.isWhiteSpace(String.fromCharCode(prev))||System.Char.isWhiteSpace(String.fromCharCode(next))?!1:!0},IsDoubleTokenChar:function(ch){return ch===61||ch===60||ch===62||ch===33||ch===126},CombineWithSpacing:function(prev,next){return Kusto.Language.Editor.KustoCompleter.NeedsSpacing$1(prev,next)?(prev||"")+" "+(next||""):(prev||"")+(next||"")},GetNextParserInSequence:function(path,ceiling){for(var current=path,parent={},index={};Kusto.Language.Editor.KustoCompleter.TryGetFirstAncestorSequence(current,ceiling,parent,index);){if((index.v+1|0)<parent.v.ChildCount)return parent.v.GetChild(index.v+1|0);current=parent.v}return null},TryGetFirstAncestorSequence:function(path,ceiling,sequence,index){return Kusto.Language.Editor.KustoCompleter.TryGetFirstAncestor(path,ceiling,function(p){return p.Parser.IsSequence},sequence,index)},TryGetFirstAncestorConditional:function(path,ceiling,conditional,index){return Kusto.Language.Editor.KustoCompleter.TryGetFirstAncestor(path,ceiling,function(p){return p.Parser.IsConditional},conditional,index)},TryGetFirstAncestor:function(path,ceiling,fnMatch,ancestor,index){for(var child=path,count=0;child!=null;){if(Bridge.referenceEquals(child,ceiling)||child.Parent==null)break;if(ancestor.v=child.Parent,fnMatch(ancestor.v))return index.v=ancestor.v.Parser.GetChildParserIndex(child.Parser),!0;if(child=ancestor.v,count=count+1|0,count>100)break}return index.v=-1,ancestor.v=null,!1}}},fields:{_code:null,_options:null,_cancellationToken:null,_annotations:null,_annotationPosition:0,_annotatedParsers:null,_annotatedParserPosition:0,_annotatedParserPaths:null,_annotatedParserPathPosition:0,__queryGrammar:null,__commandGrammar:null},props:{CurrentQueryGrammar:{get:function(){return this.__queryGrammar==null&&(this.__queryGrammar=Kusto.Language.Parsing.QueryGrammar.From(this._code.Globals)),this.__queryGrammar}},CurrentCommandGrammar:{get:function(){return this.__commandGrammar==null&&(this.__commandGrammar=Kusto.Language.Parsing.CommandGrammar.From(this._code.Globals)),this.__commandGrammar}}},ctors:{init:function(){this._cancellationToken=new Kusto.Language.Utils.CancellationToken},ctor:function(code,options,cancellationToken){this.$initialize();this._code=code;this._options=options;this._cancellationToken=cancellationToken}},methods:{GetCompletionItems:function(position){var editStart={},editLength={},builder,mode,items,orderedItems;return(this.GetEditRange(position,editStart,editLength),!this.ShouldComplete(position))?new Kusto.Language.Editor.CompletionInfo(Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Editor.CompletionItem).Instance,editStart.v,editLength.v):(builder=new Kusto.Language.Editor.KustoCompleter.CompletionBuilder,mode=Kusto.Language.Editor.KustoCompleter.CompletionMode.Combined,this._options.IncludeSymbols&&(mode=this.GetSymbolCompletions(editStart.v,builder)),mode===Kusto.Language.Editor.KustoCompleter.CompletionMode.Combined&&this._options.IncludeSyntax&&this.GetSyntaxCompletions(editStart.v,builder),items=System.Linq.Enumerable.from(builder.Items,Kusto.Language.Editor.CompletionItem).select(Bridge.fn.bind(this,function(it){return this.Retriggered(it)})).toList(Kusto.Language.Editor.CompletionItem),orderedItems=System.Linq.Enumerable.from(items,Kusto.Language.Editor.CompletionItem).select(Bridge.fn.bind(this,function(i){return i.WithOrderText(this.CreateOrderText(i))})).orderBy(function(i){return i.OrderText}).ToArray(Kusto.Language.Editor.CompletionItem),new Kusto.Language.Editor.CompletionInfo(orderedItems,editStart.v,editLength.v))},CreateOrderText:function(item){return(System.Int32.format(this.GetOrderingRank(item),"D2")||"")+(System.Int32.format(item.Priority,"D1")||"")+"_"+(item.OrderText.toLowerCase()||"")},Retriggered:function(item){if(!item.Retrigger){var prevChar=item.BeforeText.length>0?item.BeforeText.charCodeAt(item.BeforeText.length-1|0):0;(System.Char.isWhiteSpace(String.fromCharCode(prevChar))||prevChar===40)&&(item=item.WithRetrigger(!0))}return item},GetEditRange:function(position,editStart,editLength){var affinityToken=Kusto.Language.Editor.KustoServiceHelpers.GetTokenWithAffinity(this._code,position),curr,prev,last;if(affinityToken!=null){for(curr=affinityToken,prev=curr.GetPreviousToken();prev!=null&&Kusto.Language.Editor.KustoCompleter.IsKeywordOrIdentifierOrDash(prev.Kind)&&Kusto.Language.Editor.KustoCompleter.IsKeywordOrIdentifierOrDash(curr.Kind)&&prev.End===curr.TextStart;)curr=prev,prev=curr.GetPreviousToken();for(var first=curr,next=curr.GetNextToken(),builder=null;next!=null&&Kusto.Language.Editor.KustoCompleter.IsKeywordOrIdentifierOrDash(next.Kind)&&Kusto.Language.Editor.KustoCompleter.IsKeywordOrIdentifierOrDash(curr.Kind)&&curr.End===next.TextStart;)builder==null&&(builder=new System.Text.StringBuilder),builder.append(curr.Text),curr=next,next=curr.GetNextToken();last=curr;!Bridge.referenceEquals(first,last)&&builder!=null&&Kusto.Language.Editor.KustoCompleter.IsStartOfKnownNameWithDashes(builder.toString())?(editStart.v=first.TextStart,editLength.v=last.End-editStart.v|0):(editStart.v=first.TextStart,editLength.v=first.Width)}else editStart.v=position,editLength.v=0},ShouldAutoComplete:function(position,key){var token,expr;if(key===0||!this.ShouldComplete(position)||System.Char.isControl(key)&&key!==8||key===13||key===10)return!1;if(token=Kusto.Language.Editor.KustoServiceHelpers.GetTokenLeftOfPosition(this._code,position),token!=null)if(System.Char.isWhiteSpace(String.fromCharCode(key))&&position===(token.End+1|0)){switch(token.Kind){case Kusto.Language.Syntax.SyntaxKind.OpenParenToken:case Kusto.Language.Syntax.SyntaxKind.OpenBracketToken:case Kusto.Language.Syntax.SyntaxKind.OpenBraceToken:case Kusto.Language.Syntax.SyntaxKind.CommaToken:case Kusto.Language.Syntax.SyntaxKind.ColonToken:case Kusto.Language.Syntax.SyntaxKind.BarToken:case Kusto.Language.Syntax.SyntaxKind.EqualToken:case Kusto.Language.Syntax.SyntaxKind.FatArrowToken:case Kusto.Language.Syntax.SyntaxKind.CloseParenToken:case Kusto.Language.Syntax.SyntaxKind.DashDashToken:case Kusto.Language.Syntax.SyntaxKind.DashDashGreaterThanToken:case Kusto.Language.Syntax.SyntaxKind.LessThanDashDashToken:return!0}switch(Kusto.Language.Syntax.SyntaxFacts.GetCategory(token.Kind)){case Kusto.Language.Syntax.SyntaxCategory.Identifier:case Kusto.Language.Syntax.SyntaxCategory.Operator:case Kusto.Language.Syntax.SyntaxCategory.Keyword:return!0}if(expr=Kusto.Language.Editor.KustoServiceHelpers.GetCompleteExpressionLeftOfPosition(this._code,position),expr!=null)return!0}else if(token.End===position){if(key===8)return Kusto.Language.Syntax.SyntaxFacts.GetCategory(token.Kind)===Kusto.Language.Syntax.SyntaxCategory.Identifier;switch(token.Kind){case Kusto.Language.Syntax.SyntaxKind.OpenParenToken:case Kusto.Language.Syntax.SyntaxKind.OpenBracketToken:case Kusto.Language.Syntax.SyntaxKind.OpenBraceToken:case Kusto.Language.Syntax.SyntaxKind.DotToken:case Kusto.Language.Syntax.SyntaxKind.ColonToken:case Kusto.Language.Syntax.SyntaxKind.EqualToken:return!0;case Kusto.Language.Syntax.SyntaxKind.BangToken:return!0}switch(Kusto.Language.Syntax.SyntaxFacts.GetCategory(token.Kind)){case Kusto.Language.Syntax.SyntaxCategory.Identifier:case Kusto.Language.Syntax.SyntaxCategory.Operator:case Kusto.Language.Syntax.SyntaxCategory.Keyword:return!0}}return!1},ShouldComplete:function(position){var token=this._code.Syntax.GetTokenAt(position),previous=token.GetPreviousToken(),affinity=Kusto.Language.Editor.KustoServiceHelpers.GetTokenWithAffinity(this._code,position)||token,leftOrSurrounding=position===token.TriviaStart?previous||token:token;return Kusto.Language.Editor.KustoCompleter.IsInsideLiteral(leftOrSurrounding,position)?!1:position<=affinity.TextStart&&affinity.Trivia.length>0?!Kusto.Language.Editor.KustoCompleter.IsInsideComment(token.Trivia,position-token.TriviaStart|0):!0},GetOrderingRank:function(item){if(this._cancellationToken.ThrowIfCancellationRequested(),item.Rank!==Kusto.Language.Editor.CompletionRank.Default)return item.Rank;switch(item.Kind){case Kusto.Language.Editor.CompletionKind.Example:return Kusto.Language.Editor.CompletionRank.Literal;case Kusto.Language.Editor.CompletionKind.QueryPrefix:return Kusto.Language.Editor.CompletionRank.Keyword;case Kusto.Language.Editor.CompletionKind.Keyword:return Kusto.Language.Editor.CompletionRank.Keyword;case Kusto.Language.Editor.CompletionKind.AggregateFunction:return Kusto.Language.Editor.CompletionRank.Aggregate;case Kusto.Language.Editor.CompletionKind.Column:return Kusto.Language.Editor.CompletionRank.Column;case Kusto.Language.Editor.CompletionKind.Table:return Kusto.Language.Editor.CompletionRank.Table;case Kusto.Language.Editor.CompletionKind.MaterialiedView:case Kusto.Language.Editor.CompletionKind.EntityGroup:case Kusto.Language.Editor.CompletionKind.Graph:return Kusto.Language.Editor.CompletionRank.Entity;case Kusto.Language.Editor.CompletionKind.Variable:case Kusto.Language.Editor.CompletionKind.Parameter:return Bridge.referenceEquals(item.DisplayText,"$left")||Bridge.referenceEquals(item.DisplayText,"$right")?Kusto.Language.Editor.CompletionRank.Literal:Kusto.Language.Editor.CompletionRank.Variable;case Kusto.Language.Editor.CompletionKind.BuiltInFunction:case Kusto.Language.Editor.CompletionKind.LocalFunction:case Kusto.Language.Editor.CompletionKind.DatabaseFunction:return Kusto.Language.Editor.CompletionRank.Function;case Kusto.Language.Editor.CompletionKind.ScalarInfix:return Kusto.Language.Parsing.TextFacts.IsLetterOrDigit(item.DisplayText.charCodeAt(0))?Kusto.Language.Editor.CompletionRank.StringOperator:Kusto.Language.Editor.CompletionRank.MathOperator;case Kusto.Language.Editor.CompletionKind.ScalarPrefix:case Kusto.Language.Editor.CompletionKind.TabularPrefix:case Kusto.Language.Editor.CompletionKind.TabularSuffix:case Kusto.Language.Editor.CompletionKind.Identifier:case Kusto.Language.Editor.CompletionKind.Cluster:case Kusto.Language.Editor.CompletionKind.Database:case Kusto.Language.Editor.CompletionKind.Punctuation:case Kusto.Language.Editor.CompletionKind.Syntax:case Kusto.Language.Editor.CompletionKind.Unknown:case Kusto.Language.Editor.CompletionKind.RenderChart:default:return Kusto.Language.Editor.CompletionRank.Other}},IsInCommand:function(element,contextChildIndex){var e,body,statementList,command;return element==null?!1:contextChildIndex>0&&(e=Bridge.as(element.GetChild(contextChildIndex-1|0),Kusto.Language.Syntax.SyntaxToken))!=null&&Bridge.referenceEquals(e.Text,"<|")?!1:(body=element.GetFirstAncestorOrSelf(Kusto.Language.Syntax.FunctionBody),body!=null)?!1:(statementList=element.GetFirstAncestorOrSelf(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement))),command=element.GetFirstAncestorOrSelf(Kusto.Language.Syntax.Command),command!=null)?statementList!=null&&command.IsAncestorOf(statementList)?!1:!0:!1},IsQueryPart:function(element,contextChildIndex){if(Bridge.is(element.Root,Kusto.Language.Syntax.QueryBlock))return!0;if(Bridge.is(element.Root,Kusto.Language.Syntax.CommandBlock)){var e;if(contextChildIndex>0&&(e=Bridge.as(element.GetChild(contextChildIndex-1|0),Kusto.Language.Syntax.SyntaxToken))!=null&&(Bridge.referenceEquals(e.Text,"<|")||Bridge.referenceEquals(e.Text,"|"))||element.GetFirstAncestorOrSelf(Kusto.Language.Syntax.FunctionBody)!=null)return!0}return!1},GetSymbolCompletions:function(position,builder){var $t,$t1,hint=Kusto.Language.Editor.CompletionHint.None,contextNode={},contextChildIndex={},mode,symbols,match,isCommand,include,symbol,fs,vs,vfs,item;if(this.TryGetCompletionContext(position,contextNode,contextChildIndex)){if(mode=this.GetSpecialCaseCompletions(position,contextNode.v,contextChildIndex.v,builder),mode===Kusto.Language.Editor.KustoCompleter.CompletionMode.Isolated)return mode;hint=this.GetCompletionHint(contextNode.v,contextChildIndex.v)}symbols=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.Symbol).ctor);match=this.GetSymbolMatch(position);this._options.IncludeFunctions===Kusto.Language.IncludeFunctionKind.None&&(match&=-9);isCommand=this.IsInCommand(contextNode.v,contextChildIndex.v);include=this._options.IncludeFunctions;isCommand&&(include&=Kusto.Language.IncludeFunctionKind.DatabaseFunctions);Kusto.Language.Binding.Binder.GetSymbolsInScope(this._code.Tree,position,this._code.Globals,match,include,symbols,this._cancellationToken);var isInvoke=Kusto.Language.Editor.KustoCompleter.IsInvokeFunctionContext(contextNode.v),rowScope=isInvoke?Kusto.Language.Binding.Binder.GetRowScope(this._code.Tree,position,this._code.Globals,this._cancellationToken):null,symbolItems=new(System.Collections.Generic.List$1(Kusto.Language.Editor.CompletionItem).ctor);$t=Bridge.getEnumerator(symbols);try{while($t.moveNext())if(symbol=$t.Current,!symbol.IsHidden){if(isInvoke&&rowScope!=null&&!rowScope.IsOpen){if((fs=Bridge.as(symbol,Kusto.Language.Symbols.FunctionSymbol))!=null&&!this.IsInvokeApplicable(fs,rowScope))continue;if((vs=Bridge.as(symbol,Kusto.Language.Symbols.VariableSymbol))!=null&&(vfs=Bridge.as(vs.Type,Kusto.Language.Symbols.FunctionSymbol))!=null&&!this.IsInvokeApplicable(vfs,rowScope))continue}symbolItems.clear();this.GetCompletionItemsForSymbol(symbol,contextNode.v,isCommand,symbolItems);$t1=Bridge.getEnumerator(symbolItems);try{while($t1.moveNext())item=$t1.Current,this.ShouldAddSpaceToCompletionItem(symbol,hint)?builder.Add(this.AddSpaceToCompletionItem(item)):builder.Add(item)}finally{Bridge.is($t1,System.IDisposable)&&$t1.System$IDisposable$Dispose()}}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return Kusto.Language.Editor.KustoCompleter.CompletionMode.Combined},IsInvokeApplicable:function($function,implicitFirstArgumentType){var $t,$t1,sig,p,t,ts;if(Bridge.referenceEquals($function,Kusto.Language.Functions.Cluster)||Bridge.referenceEquals($function,Kusto.Language.Functions.Database))return!0;$t=Bridge.getEnumerator($function.Signatures,Kusto.Language.Symbols.Signature);try{while($t.moveNext())if(sig=$t.Current,System.Array.getCount(sig.Parameters,Kusto.Language.Symbols.Parameter)!==0){p=System.Array.getItem(sig.Parameters,0,Kusto.Language.Symbols.Parameter);switch(p.TypeKind){case Kusto.Language.Symbols.ParameterTypeKind.Declared:$t1=Bridge.getEnumerator(p.DeclaredTypes,Kusto.Language.Symbols.TypeSymbol);try{while($t1.moveNext())if(t=$t1.Current,(ts=Bridge.as(t,Kusto.Language.Symbols.TableSymbol))!=null&&implicitFirstArgumentType.IsAssignableTo(t))return!0}finally{Bridge.is($t1,System.IDisposable)&&$t1.System$IDisposable$Dispose()}break;case Kusto.Language.Symbols.ParameterTypeKind.Tabular:return Bridge.is(implicitFirstArgumentType,Kusto.Language.Symbols.TableSymbol)}}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return!1},ShouldAddSpaceToCompletionItem:function(symbol,hint){return(hint&Kusto.Language.Editor.CompletionHint.Boolean)!=0&&!Bridge.referenceEquals(Kusto.Language.Symbols.Symbol.GetResultType(symbol),Kusto.Language.Symbols.ScalarTypes.Bool)},GetCompletionItemsForSymbol:function(symbol,contextNode,nameOnly,items){var kind=this.GetCompletionKind(symbol),editName=Kusto.Language.KustoFacts.BracketNameIfNecessary$1(symbol.Name,this._code.Dialect),displayText=Kusto.Language.Editor.CompletionDisplay.GetText(symbol,nameOnly),f,builtIn,isInvoke,p,v,p1,d,altEditName,cl,opt;do{if(Bridge.is(symbol,Kusto.Language.Symbols.TableSymbol)){var t=Bridge.cast(symbol,Kusto.Language.Symbols.TableSymbol),addExternalTableFuncText=!nameOnly&&t.IsExternal,insertionText=addExternalTableFuncText?System.String.format("external_table('{0}')",[t.Name]):editName,priority=t.IsExternal?Kusto.Language.Editor.CompletionPriority.Low:Kusto.Language.Editor.CompletionPriority.Normal,matchText=t.Name;Kusto.Language.Editor.KustoCompleter.IsStartOfQuery(contextNode)?items.add(new Kusto.Language.Editor.CompletionItem.$ctor1(kind,displayText,(insertionText||"")+(Kusto.Language.Editor.KustoCompleter.AfterQueryStart||""),void 0,matchText,void 0,12,priority,!1)):items.add(new Kusto.Language.Editor.CompletionItem.$ctor1(kind,displayText,insertionText,void 0,matchText,void 0,12,priority,!1));break}if(Bridge.is(symbol,Kusto.Language.Symbols.FunctionSymbol)){if(f=Bridge.cast(symbol,Kusto.Language.Symbols.FunctionSymbol),nameOnly){items.add(new Kusto.Language.Editor.CompletionItem.$ctor1(kind,displayText,editName,void 0,displayText,void 0,12,3,!1));return}builtIn=this._code.Globals.IsBuiltInFunction(f);builtIn&&(editName=f.Name);System.Linq.Enumerable.from(f.Signatures,Kusto.Language.Symbols.Signature).where(function(s){return!s.IsHidden&&!s.IsObsolete}).max(function(s){return System.Array.getCount(s.Parameters,Kusto.Language.Symbols.Parameter)})===0?(builtIn&&(editName=(editName||"")+"()"),Kusto.Language.Editor.KustoCompleter.IsStartOfQuery(contextNode)?items.add(new Kusto.Language.Editor.CompletionItem.$ctor1(kind,displayText,(editName||"")+(Kusto.Language.Editor.KustoCompleter.AfterQueryStart||""),void 0,f.Name,void 0,12,3,!1)):items.add(new Kusto.Language.Editor.CompletionItem.$ctor1(kind,displayText,editName,void 0,f.Name,void 0,12,3,!1))):(isInvoke=Kusto.Language.Editor.KustoCompleter.IsInvokeFunctionContext(contextNode),!this._options.EnableParameterInjection||f.MaxArgumentCount!==1||builtIn||isInvoke?items.add(new Kusto.Language.Editor.CompletionItem.$ctor1(kind,displayText,(editName||"")+"(",")",f.Name,void 0,12,3,!1)):items.add(new Kusto.Language.Editor.CompletionItem.$ctor1(kind,displayText,(editName||"")+"({parameter})",void 0,f.Name,void 0,12,3,!1)));break}if(Bridge.is(symbol,Kusto.Language.Symbols.PatternSymbol)){p=Bridge.cast(symbol,Kusto.Language.Symbols.PatternSymbol);items.add(new Kusto.Language.Editor.CompletionItem.$ctor1(kind,displayText,(editName||"")+"(",")",p.Name,void 0,12,3,!1));break}if(Bridge.is(symbol,Kusto.Language.Symbols.VariableSymbol)){v=Bridge.cast(symbol,Kusto.Language.Symbols.VariableSymbol);Bridge.is(v.Type,Kusto.Language.Symbols.FunctionSymbol)?this.GetCompletionItemsForSymbol(v.Type,contextNode,nameOnly,items):Bridge.is(v.Type,Kusto.Language.Symbols.TableSymbol)&&Kusto.Language.Editor.KustoCompleter.IsStartOfQuery(contextNode)?items.add(new Kusto.Language.Editor.CompletionItem.$ctor1(kind,displayText,(editName||"")+(Kusto.Language.Editor.KustoCompleter.AfterQueryStart||""))):items.add(new Kusto.Language.Editor.CompletionItem.$ctor1(kind,displayText,editName));break}if(Bridge.is(symbol,Kusto.Language.Symbols.ParameterSymbol)){p1=Bridge.cast(symbol,Kusto.Language.Symbols.ParameterSymbol);Bridge.is(p1.Type,Kusto.Language.Symbols.FunctionSymbol)?this.GetCompletionItemsForSymbol(p1.Type,contextNode,nameOnly,items):items.add(new Kusto.Language.Editor.CompletionItem.$ctor1(kind,displayText,editName));break}if(Bridge.is(symbol,Kusto.Language.Symbols.DatabaseSymbol)){d=Bridge.cast(symbol,Kusto.Language.Symbols.DatabaseSymbol);items.add(new Kusto.Language.Editor.CompletionItem.$ctor1(Kusto.Language.Editor.CompletionKind.Database,displayText,editName));System.String.isNullOrEmpty(d.AlternateName)||(altEditName=Kusto.Language.KustoFacts.BracketNameIfNecessary$1(symbol.AlternateName,this._code.Dialect),items.add(new Kusto.Language.Editor.CompletionItem.$ctor1(Kusto.Language.Editor.CompletionKind.Database,d.AlternateName,altEditName)));break}if(Bridge.is(symbol,Kusto.Language.Symbols.ClusterSymbol)){cl=Bridge.cast(symbol,Kusto.Language.Symbols.ClusterSymbol);items.add(new Kusto.Language.Editor.CompletionItem.$ctor1(Kusto.Language.Editor.CompletionKind.Cluster,displayText,Kusto.Language.KustoFacts.GetBracketedName(cl.Name)));break}if(Bridge.is(symbol,Kusto.Language.Symbols.OptionSymbol)){opt=Bridge.cast(symbol,Kusto.Language.Symbols.OptionSymbol);items.add(new Kusto.Language.Editor.CompletionItem.$ctor1(Kusto.Language.Editor.CompletionKind.Option,opt.Name,editName));break}items.add(new Kusto.Language.Editor.CompletionItem.$ctor1(kind,displayText,editName));break}while(0)},GetSymbolMatch:function(position){var match=this.GetSymbolMatchFromGrammar(position);return match!==Kusto.Language.Symbols.SymbolMatch.None?match:this.GetSymbolMatchFromSyntaxTree(position)},GetSymbolMatchFromGrammar:function(position){var $t,match=Kusto.Language.Symbols.SymbolMatch.None,annotations=this.GetGrammarAnnotations(position),hint;$t=Bridge.getEnumerator(System.Linq.Enumerable.from(annotations).ofType(Kusto.Language.Editor.CompletionHint));try{while($t.moveNext())hint=$t.Current,match|=Kusto.Language.Editor.KustoCompleter.GetSymbolMatch(hint)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return match},GetSymbolMatchFromSyntaxTree:function(position){var match=Kusto.Language.Symbols.SymbolMatch.None,contextNode={},index={},hint,hint1;for(this.TryGetCompletionContext(position,contextNode,index)&&(hint=this.GetCompletionHint(contextNode.v,index.v),match|=Kusto.Language.Editor.KustoCompleter.GetSymbolMatch(hint));Bridge.is(contextNode.v,Kusto.Language.Syntax.ParenthesizedExpression)&&contextNode.v.Parent!=null;)hint1=this.GetCompletionHint(contextNode.v.Parent,contextNode.v.IndexInParent),match|=Kusto.Language.Editor.KustoCompleter.GetSymbolMatch(hint1),contextNode.v=contextNode.v.Parent;return match},TryGetFunctionOrOperatorArgument:function(contextNode,childIndex,signatures,$arguments,argumentIndex,argumentCount,parameterName){var $t,$t1,$t2,$t3,$t4,$t5,n,sn,functionCall,el,fc1,fs,fc2,fs2,be,os;for(parameterName.v=null,n=contextNode,Bridge.is(n,Kusto.Language.Syntax.NamedExpression)&&((sn=Bridge.as(n,Kusto.Language.Syntax.SimpleNamedExpression))!=null&&(parameterName.v=sn.Name.SimpleName),childIndex=($t=($t1=n.Parent)!=null?$t1.GetChildIndex(n):null,$t!=null?$t:0),n=n.Parent);Kusto.Language.Editor.KustoCompleter.ContainsOnlyOneToken(n)&&!Bridge.is(n.Parent,Kusto.Language.Syntax.SyntaxList);)childIndex=($t2=($t3=n.Parent)!=null?$t3.GetChildIndex(n):null,$t2!=null?$t2:0),n=n.Parent;if(Bridge.is(n,Kusto.Language.Syntax.SeparatedElement)&&childIndex===0&&(childIndex=($t4=($t5=n.Parent)!=null?$t5.GetChildIndex(n):null,$t4!=null?$t4:0),n=n.Parent),functionCall=null,Bridge.is(n,Kusto.Language.Syntax.SyntaxList)&&(el=Bridge.as(n.Parent,Kusto.Language.Syntax.ExpressionList))!=null&&(fc1=Bridge.as(el.Parent,Kusto.Language.Syntax.FunctionCallExpression))!=null&&(fs=Bridge.as(fc1.ReferencedSymbol,Kusto.Language.Symbols.FunctionSymbol))!=null)signatures.v=fs.Signatures,functionCall=fc1,$arguments.v=System.Linq.Enumerable.from(fc1.ArgumentList.Expressions,Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)).select(function(e){return e.Element$1}).toList(Kusto.Language.Syntax.Expression),argumentIndex.v=childIndex,argumentCount.v=n.ChildCount;else if(Bridge.is(n,Kusto.Language.Syntax.ExpressionList)&&(fc2=Bridge.as(n.Parent,Kusto.Language.Syntax.FunctionCallExpression))!=null&&(fs2=Bridge.as(fc2.ReferencedSymbol,Kusto.Language.Symbols.FunctionSymbol))!=null)signatures.v=fs2.Signatures,functionCall=fc2,$arguments.v=System.Linq.Enumerable.from(fc2.ArgumentList.Expressions,Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)).select(function(e){return e.Element$1}).toList(Kusto.Language.Syntax.Expression),argumentIndex.v=0,argumentCount.v=1;else return(be=Bridge.as(n,Kusto.Language.Syntax.BinaryExpression))!=null&&(os=Bridge.as(be.ReferencedSymbol,Kusto.Language.Symbols.OperatorSymbol))!=null?(signatures.v=os.Signatures,$arguments.v=function(_o1){return _o1.add(be.Left),_o1.add(be.Right),_o1}(new(System.Collections.Generic.List$1(Kusto.Language.Syntax.Expression).$ctor2)(2)),argumentIndex.v=childIndex===0?0:1,argumentCount.v=2,!0):(signatures.v=null,$arguments.v=null,argumentIndex.v=0,argumentCount.v=0,!1);return functionCall!=null&&$arguments.v!=null&&Kusto.Language.Editor.KustoCompleter.IsInvokeFunctionContext(functionCall.Parent)&&($arguments.v.insert(0,null),argumentIndex.v=argumentIndex.v+1|0,argumentCount.v=argumentCount.v+1|0),signatures.v==null||System.Linq.Enumerable.from(signatures.v,Kusto.Language.Symbols.Signature).any(function(s){return s.AllowsNamedArguments})||(parameterName.v=null),!0},GetSpecialCaseCompletions:function(position,contextNode,childIndex,builder){var mode=this.GetFunctionArgumentCompletions(position,contextNode,childIndex,builder);return mode===Kusto.Language.Editor.KustoCompleter.CompletionMode.Isolated?mode:(mode=this.GetSetOptionCompletions(position,contextNode,childIndex,builder),mode===Kusto.Language.Editor.KustoCompleter.CompletionMode.Isolated)?mode:(mode=this.GetColumnExampleCompletions(position,contextNode,childIndex,builder),mode===Kusto.Language.Editor.KustoCompleter.CompletionMode.Isolated)?mode:this.GetDeconstructCompletions(position,contextNode,childIndex,builder)},GetDeconstructCompletions:function(position,contextNode,childIndex,builder){var pe=contextNode.GetFirstAncestorOrSelf(Kusto.Language.Syntax.ParenthesizedExpression),fc,ts;if(pe!=null&&!pe.OpenParen.IsMissing&&!pe.Expression.IsMissing&&pe.CloseParen.IsMissing&&position===pe.OpenParen.End&&(fc=Bridge.as(Kusto.Language.Editor.KustoCompleter.GetUnpipedExpression(pe.Expression),Kusto.Language.Syntax.FunctionCallExpression))!=null&&!Bridge.is(fc.Parent,Kusto.Language.Syntax.NamedExpression)&&!Bridge.is(fc.Parent,Kusto.Language.Syntax.LetStatement)&&(ts=Bridge.as(fc.ResultType,Kusto.Language.Symbols.TupleSymbol))!=null&&System.Array.getCount(ts.Columns,Kusto.Language.Symbols.ColumnSymbol)>1){var displayText="("+(System.Array.getItem(ts.Columns,0,Kusto.Language.Symbols.ColumnSymbol).Name||"")+", ...) = ",applyTextWithMarkers=(Bridge.toArray(System.Linq.Enumerable.from(ts.Columns,Kusto.Language.Symbols.ColumnSymbol).select(function(c){return System.String.format("[[{0}]]",[c.Name])})).join(", ")||"")+") = ",matchText=fc.Name.SimpleName,item=new Kusto.Language.Editor.CompletionItem.$ctor1(Kusto.Language.Editor.CompletionKind.Example,displayText,void 0,void 0,matchText,void 0,12,Kusto.Language.Editor.CompletionPriority.Top,!1).WithApplyTexts$2(applyTextWithMarkers);builder.Add(item)}return Kusto.Language.Editor.KustoCompleter.CompletionMode.Combined},GetColumnExampleCompletions:function(position,contextNode,childIndex,builder){var be,col,list,exprList,inOp,inCol;return(be=Bridge.as(contextNode,Kusto.Language.Syntax.BinaryExpression))!=null&&Kusto.Language.Editor.KustoCompleter.IsEqualityExpression(contextNode.Kind)&&childIndex===2&&(col=Bridge.as(be.Left.ReferencedSymbol,Kusto.Language.Symbols.ColumnSymbol))!=null&&System.Array.getCount(col.Examples,System.String)>0?Kusto.Language.Editor.KustoCompleter.AddColumnExamples(builder,col):((list=Bridge.as(contextNode,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression))))!=null&&(contextNode=list.Parent),(exprList=Bridge.as(contextNode,Kusto.Language.Syntax.ExpressionList))!=null&&(inOp=Bridge.as(exprList.Parent,Kusto.Language.Syntax.InExpression))!=null&&(inCol=Bridge.as(inOp.Left.ReferencedSymbol,Kusto.Language.Symbols.ColumnSymbol))!=null&&System.Array.getCount(inCol.Examples,System.String)>0&&Kusto.Language.Editor.KustoCompleter.AddColumnExamples(builder,inCol)),Kusto.Language.Editor.KustoCompleter.CompletionMode.Combined},GetSetOptionCompletions:function(position,contextNode,childIndex,builder){var $t,clause,statement,option,example,value;if((clause=Bridge.as(contextNode,Kusto.Language.Syntax.OptionValueClause))!=null&&childIndex===1&&(statement=Bridge.as(clause.Parent,Kusto.Language.Syntax.SetOptionStatement))!=null&&(option=Bridge.as(statement.Name.ReferencedSymbol,Kusto.Language.Symbols.OptionSymbol))!=null&&option.Examples!=null){$t=Bridge.getEnumerator(option.Examples,System.String);try{while($t.moveNext())example=$t.Current,value=Kusto.Language.KustoFacts.GetStringLiteralValue(example),builder.Add(new Kusto.Language.Editor.CompletionItem.$ctor1(Kusto.Language.Editor.CompletionKind.Example,example,example,void 0,value,void 0,12,3,!1))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return Kusto.Language.Editor.KustoCompleter.CompletionMode.Isolated}return Kusto.Language.Editor.KustoCompleter.CompletionMode.Combined},GetFunctionArgumentCompletions:function(position,contextNode,childIndex,builder){var $t,$t1,$t2,signatures={},$arguments={},argumentIndex={},argumentCount={},name={},fs,suggestions,s,sig,x;if(this.TryGetFunctionOrOperatorArgument(contextNode,childIndex,signatures,$arguments,argumentIndex,argumentCount,name)){if(!Bridge.is(contextNode,Kusto.Language.Syntax.NamedExpression)&&(fs=Bridge.as(System.Array.getItem(signatures.v,0,Kusto.Language.Symbols.Signature).Symbol,Kusto.Language.Symbols.FunctionSymbol))!=null&&this.ShowParameterNames(fs)){suggestions=this.GetArgumentNameSuggestions(signatures.v,$arguments.v,argumentIndex.v);$t=Bridge.getEnumerator(suggestions);try{while($t.moveNext())s=$t.Current,builder.Add(new Kusto.Language.Editor.CompletionItem.$ctor1(Kusto.Language.Editor.CompletionKind.Parameter,(s||"")+"=",(s||"")+"=",void 0,s,void 0,12,3,!1))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}if(suggestions.Count>0&&this.IsArgumentNameRequired$1(signatures.v,$arguments.v,argumentIndex.v))return Kusto.Language.Editor.KustoCompleter.CompletionMode.Isolated}var examples=new(System.Collections.Generic.HashSet$1(System.String).ctor),possibleParameters=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.Parameter).ctor),knownParameter=!1;$t1=Bridge.getEnumerator(signatures.v,Kusto.Language.Symbols.Signature);try{while($t1.moveNext()){if(sig=$t1.Current,argumentIndex.v===0&&this.TryGetReturnTypeKindCompletions(sig.ReturnKind,position,contextNode,builder))return Kusto.Language.Editor.KustoCompleter.CompletionMode.Isolated;possibleParameters.clear();Kusto.Language.Editor.KustoCompleter.GetPossibleParameters(sig,$arguments.v,name.v,argumentIndex.v,possibleParameters);knownParameter=!!(knownParameter|possibleParameters.Count>0);Kusto.Language.Editor.KustoCompleter.GetParameterExamples(sig,$arguments.v,possibleParameters,examples)}}finally{Bridge.is($t1,System.IDisposable)&&$t1.System$IDisposable$Dispose()}if(!knownParameter)return Kusto.Language.Editor.KustoCompleter.CompletionMode.Isolated;if(examples!=null){$t2=Bridge.getEnumerator(examples);try{while($t2.moveNext())x=$t2.Current,builder.Add(new Kusto.Language.Editor.CompletionItem.$ctor1(Kusto.Language.Editor.CompletionKind.Example,x))}finally{Bridge.is($t2,System.IDisposable)&&$t2.System$IDisposable$Dispose()}}if(System.Linq.Enumerable.from(possibleParameters,Kusto.Language.Symbols.Parameter).all(function(p){return p.ArgumentKind===Kusto.Language.Symbols.ArgumentKind.Literal||p.ArgumentKind===Kusto.Language.Symbols.ArgumentKind.LiteralNotEmpty}))return Kusto.Language.Editor.KustoCompleter.CompletionMode.Isolated}return Kusto.Language.Editor.KustoCompleter.CompletionMode.Combined},TryGetReturnTypeKindCompletions:function(kind,position,contextNode,builder){var cpl,cc,dpl,ds,edpl,ds1,mvdpl,ds2;switch(kind){case Kusto.Language.Symbols.ReturnTypeKind.Parameter0Cluster:return builder.AddRange(this.GetMemberNameExamples(this._code.Globals.Clusters)),this.GetMatchingSymbolCompletions(Kusto.Language.Symbols.SymbolMatch.Local,Kusto.Language.Symbols.ScalarTypes.String,position,contextNode,builder),!0;case Kusto.Language.Symbols.ReturnTypeKind.Parameter0Database:return(cpl=Bridge.as(Kusto.Language.Editor.KustoCompleter.GetInstanceExpressionOfFunctionCall(contextNode),Kusto.Language.Syntax.Expression))!=null?(cc=Bridge.as(cpl.ResultType,Kusto.Language.Symbols.ClusterSymbol))!=null&&builder.AddRange(this.GetMemberNameExamples(cc.Databases)):builder.AddRange(this.GetMemberNameExamples(this._code.Globals.Cluster.Databases)),this.GetMatchingSymbolCompletions(Kusto.Language.Symbols.SymbolMatch.Local,Kusto.Language.Symbols.ScalarTypes.String,position,contextNode,builder),!0;case Kusto.Language.Symbols.ReturnTypeKind.Parameter0Table:return(dpl=Bridge.as(Kusto.Language.Editor.KustoCompleter.GetInstanceExpressionOfFunctionCall(contextNode),Kusto.Language.Syntax.Expression))!=null?(ds=Bridge.as(dpl.ResultType,Kusto.Language.Symbols.DatabaseSymbol))!=null&&builder.AddRange(this.GetMemberNameExamples(ds.Tables)):builder.AddRange(this.GetMemberNameExamples(this._code.Globals.Database.Tables)),this.GetMatchingSymbolCompletions(Kusto.Language.Symbols.SymbolMatch.Local,Kusto.Language.Symbols.ScalarTypes.String,position,contextNode,builder),!0;case Kusto.Language.Symbols.ReturnTypeKind.Parameter0ExternalTable:return(edpl=Bridge.as(Kusto.Language.Editor.KustoCompleter.GetInstanceExpressionOfFunctionCall(contextNode),Kusto.Language.Syntax.Expression))!=null?(ds1=Bridge.as(edpl.ResultType,Kusto.Language.Symbols.DatabaseSymbol))!=null&&builder.AddRange(this.GetMemberNameExamples(ds1.ExternalTables)):builder.AddRange(this.GetMemberNameExamples(this._code.Globals.Database.ExternalTables)),this.GetMatchingSymbolCompletions(Kusto.Language.Symbols.SymbolMatch.Local,Kusto.Language.Symbols.ScalarTypes.String,position,contextNode,builder),!0;case Kusto.Language.Symbols.ReturnTypeKind.Parameter0MaterializedView:return(mvdpl=Bridge.as(Kusto.Language.Editor.KustoCompleter.GetInstanceExpressionOfFunctionCall(contextNode),Kusto.Language.Syntax.Expression))!=null?(ds2=Bridge.as(mvdpl.ResultType,Kusto.Language.Symbols.DatabaseSymbol))!=null&&builder.AddRange(this.GetMemberNameExamples(ds2.MaterializedViews)):builder.AddRange(this.GetMemberNameExamples(this._code.Globals.Database.MaterializedViews)),this.GetMatchingSymbolCompletions(Kusto.Language.Symbols.SymbolMatch.Local,Kusto.Language.Symbols.ScalarTypes.String,position,contextNode,builder),!0;default:return!1}},GetMatchingSymbolCompletions:function(match,type,position,contextNode,builder){var $t,$t1,symbols=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.Symbol).ctor),symbolItems,symbol,item;Kusto.Language.Binding.Binder.GetSymbolsInScope(this._code.Tree,position,this._code.Globals,match,Kusto.Language.IncludeFunctionKind.All,symbols,this._cancellationToken);symbolItems=new(System.Collections.Generic.List$1(Kusto.Language.Editor.CompletionItem).ctor);$t=Bridge.getEnumerator(symbols);try{while($t.moveNext())if(symbol=$t.Current,Bridge.referenceEquals(this.GetScalarType(symbol),type)){symbolItems.clear();this.GetCompletionItemsForSymbol(symbol,contextNode,!1,symbolItems);$t1=Bridge.getEnumerator(symbolItems);try{while($t1.moveNext())item=$t1.Current,builder.Add(item)}finally{Bridge.is($t1,System.IDisposable)&&$t1.System$IDisposable$Dispose()}}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}},GetScalarType:function(symbol){var ps,vs,cs;do return Bridge.is(symbol,Kusto.Language.Symbols.ParameterSymbol)?(ps=Bridge.cast(symbol,Kusto.Language.Symbols.ParameterSymbol),Bridge.as(ps.Type,Kusto.Language.Symbols.ScalarSymbol)):Bridge.is(symbol,Kusto.Language.Symbols.VariableSymbol)?(vs=Bridge.cast(symbol,Kusto.Language.Symbols.VariableSymbol),Bridge.as(vs.Type,Kusto.Language.Symbols.ScalarSymbol)):Bridge.is(symbol,Kusto.Language.Symbols.ColumnSymbol)?(cs=Bridge.cast(symbol,Kusto.Language.Symbols.ColumnSymbol),Bridge.as(cs.Type,Kusto.Language.Symbols.ScalarSymbol)):null;while(0)},GetMemberNameExamples:function(symbols){var $t,items=new(System.Collections.Generic.List$1(Kusto.Language.Editor.CompletionItem).ctor),symbol;$t=Bridge.getEnumerator(symbols,Kusto.Language.Symbols.Symbol);try{while($t.moveNext())symbol=$t.Current,items.add(new Kusto.Language.Editor.CompletionItem.$ctor1(Kusto.Language.Editor.CompletionKind.Example,Kusto.Language.KustoFacts.GetStringLiteral(symbol.Name))),System.String.isNullOrEmpty(symbol.AlternateName)||items.add(new Kusto.Language.Editor.CompletionItem.$ctor1(Kusto.Language.Editor.CompletionKind.Example,Kusto.Language.KustoFacts.GetStringLiteral(symbol.AlternateName)))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return items},ShowParameterNames:function($function){return!this._code.Globals.IsBuiltInFunction($function)&&$function.MaxArgumentCount>=2},IsArgumentNameRequired$1:function(signatures,$arguments,argumentIndex){var $t,sig;$t=Bridge.getEnumerator(signatures,Kusto.Language.Symbols.Signature);try{while($t.moveNext())if(sig=$t.Current,argumentIndex<sig.MaxArgumentCount&&this.IsArgumentNameRequired(sig,$arguments,argumentIndex))return!0}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return!1},IsArgumentNameRequired:function(signature,$arguments,argumentIndex){var unnamedArguments,argumentParameters,unnamedArgumentParameters,i;if(argumentIndex>0){unnamedArguments=Kusto.Language.Editor.KustoCompleter.s_expressionListPool.AllocateFromPool();try{for(Kusto.Language.Editor.KustoCompleter.GetUnnamedArguments($arguments,unnamedArguments),argumentParameters=signature.GetArgumentParameters($arguments),unnamedArgumentParameters=signature.GetArgumentParameters(unnamedArguments),i=0;i<argumentIndex;i=i+1|0)if(!Bridge.referenceEquals(argumentParameters.getItem(i),unnamedArgumentParameters.getItem(i)))return!0}finally{Kusto.Language.Editor.KustoCompleter.s_expressionListPool.ReturnToPool(unnamedArguments)}}return!1},GetSpecifiedArgumentNames:function($arguments){for(var arg,name,names=new(System.Collections.Generic.HashSet$1(System.String).ctor),i=0;i<System.Array.getCount($arguments,Kusto.Language.Syntax.Expression);i=i+1|0)arg=System.Array.getItem($arguments,i,Kusto.Language.Syntax.Expression),(name=Kusto.Language.Binding.Binder.GetExpressionDeclaredName(arg))!=null&&names.add(name);return names},GetArgumentNameSuggestions:function(signatures,$arguments,argumentIndex){var $t,$t1,specifiedNames=this.GetSpecifiedArgumentNames($arguments),unspecifiedNames=new(System.Collections.Generic.HashSet$1(System.String).ctor),suggestedNames=new(System.Collections.Generic.HashSet$1(System.String).ctor),sig,argumentParameters,i,n,arg,p,p1;$t=Bridge.getEnumerator(signatures,Kusto.Language.Symbols.Signature);try{while($t.moveNext())if(sig={v:$t.Current},System.Array.getCount($arguments,Kusto.Language.Syntax.Expression)<=sig.v.MaxArgumentCount&&System.Linq.Enumerable.from(specifiedNames,System.String).all(function($me,sig){return function(n){return System.Linq.Enumerable.from(sig.v.Parameters,Kusto.Language.Symbols.Parameter).any(function(p){return Bridge.referenceEquals(p.Name,n)})}}(this,sig))){for(unspecifiedNames.clear(),argumentParameters=sig.v.GetArgumentParameters($arguments),i=0,n=System.Array.getCount($arguments,Kusto.Language.Syntax.Expression);i<n;i=i+1|0)i!==argumentIndex&&(arg=System.Array.getItem($arguments,i,Kusto.Language.Syntax.Expression),p=argumentParameters.getItem(i),unspecifiedNames.add(p.Name));$t1=Bridge.getEnumerator(sig.v.Parameters,Kusto.Language.Symbols.Parameter);try{while($t1.moveNext())p1=$t1.Current,specifiedNames.contains(p1.Name)||unspecifiedNames.contains(p1.Name)||suggestedNames.add(p1.Name)}finally{Bridge.is($t1,System.IDisposable)&&$t1.System$IDisposable$Dispose()}}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return suggestedNames},GetCompletionHint$1:function(position){var contextNode={},index={};return this.TryGetCompletionContext(position,contextNode,index)?this.GetCompletionHint(contextNode.v,index.v,Kusto.Language.Editor.CompletionHint.Query):Kusto.Language.Editor.CompletionHint.None},GetCompletionHint:function(contextNode,childIndex,defaultHint){var hint,i,n,parent,indexInParent;if((defaultHint===void 0&&(defaultHint=0),hint=this.GetChildHint(contextNode,childIndex,defaultHint),Bridge.is(contextNode,Kusto.Language.Syntax.SeparatedElement)&&childIndex===1)||Kusto.Language.Editor.KustoCompleter.IsChildMissing(contextNode,childIndex))return hint;if(Kusto.Language.Editor.KustoCompleter.IsChildEmpty(contextNode,childIndex)||Kusto.Language.Editor.KustoCompleter.IsChildOnNewLine(contextNode,childIndex)||Bridge.is(contextNode,Kusto.Language.Syntax.SyntaxList))while(contextNode!=null){for(i=childIndex+1|0,n=contextNode.ChildCount;i<n;i=i+1|0)if(!Kusto.Language.Editor.KustoCompleter.IsChildMissingOrEmpty(contextNode,i)&&!Kusto.Language.Editor.KustoCompleter.IsChildOnNewLine(contextNode,i)||(hint|=this.GetChildHint(contextNode,i,defaultHint),Kusto.Language.Editor.KustoCompleter.IsChildMissing(contextNode,i)))return hint;parent=contextNode.Parent;indexInParent=parent!=null?parent.GetChildIndex(contextNode):0;contextNode=parent;childIndex=indexInParent}return hint},GetChildHint:function(contextNode,childIndex,$default){var hint,parent;$default===void 0&&($default=0);var signatures={},$arguments={},argumentIndex={},argumentCount={},parameterName={};if(this.TryGetFunctionOrOperatorArgument(contextNode,childIndex,signatures,$arguments,argumentIndex,argumentCount,parameterName))return this.GetParameterHint(signatures.v,$arguments.v,parameterName.v,argumentIndex.v);for(;;){if(hint=contextNode.GetCompletionHint(childIndex),hint!==Kusto.Language.Editor.CompletionHint.Inherit)return hint;if((parent=contextNode.Parent)!=null)childIndex=parent.GetChildIndex(contextNode),contextNode=parent;else return $default}},GetParameterHint:function(signatures,$arguments,parameterName,iArgument){var $t,hint=Kusto.Language.Editor.CompletionHint.None,signature;iArgument===(System.Array.getCount($arguments,Kusto.Language.Syntax.Expression)-1|0)&&System.Array.getItem($arguments,iArgument,Kusto.Language.Syntax.Expression).IsMissing&&($arguments=System.Linq.Enumerable.from($arguments,Kusto.Language.Syntax.Expression).take(iArgument).toList(Kusto.Language.Syntax.Expression));$t=Bridge.getEnumerator(signatures,Kusto.Language.Symbols.Signature);try{while($t.moveNext())signature=$t.Current,signature.IsHidden||(hint|=parameterName!=null?Kusto.Language.Editor.KustoCompleter.GetParameterHint(signature,signature.GetParameter(parameterName)):iArgument<System.Array.getCount($arguments,Kusto.Language.Syntax.Expression)?Kusto.Language.Editor.KustoCompleter.GetArgumentParameterHints(signature,$arguments,iArgument):Kusto.Language.Editor.KustoCompleter.GetNextPossibleParameterHints(signature,$arguments))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return hint},TryGetCompletionContext:function(position,contextNode,contextChildIndex){var token,hasAffinity,prev,tokenNode,prevToken,prevNode,nextToken,nextNode,nextLBStart,prevToken1;if(contextNode.v=null,contextChildIndex.v=0,token=this._code.Syntax.GetTokenAt(position),token==null)return!1;if(hasAffinity=Kusto.Language.Editor.KustoServiceHelpers.HasAffinity(token,position),hasAffinity)return(prev=token.GetPreviousToken(!0),prev!=null&&prev.IsMissing)?!1:(contextNode.v=token.Parent,contextChildIndex.v=Kusto.Language.Editor.KustoCompleter.GetChildIndex(contextNode.v,position),!0);if(tokenNode=Kusto.Language.Editor.KustoCompleter.GetNearestAncestorWithEmptyChild(token,position),position<=token.TextStart&&!hasAffinity||token.Kind===Kusto.Language.Syntax.SyntaxKind.EndOfTextToken){if(prevToken=token.GetPreviousToken(),prevToken!=null&&(prevNode=Kusto.Language.Editor.KustoCompleter.GetNearestAncestorWithEmptyChild(prevToken,position),prevNode!=null&&(tokenNode==null||prevNode.Depth>=tokenNode.Depth)))return contextNode.v=prevNode,contextChildIndex.v=Kusto.Language.Editor.KustoCompleter.GetChildIndex(contextNode.v,position),!0}else if(position>=token.End&&!hasAffinity&&(nextToken=token.GetNextToken(),nextToken!=null&&(nextNode=Kusto.Language.Editor.KustoCompleter.GetNearestAncestorWithEmptyChild(nextToken,position),nextNode!=null&&(tokenNode==null||nextNode.Depth>tokenNode.Depth))))return contextNode.v=nextNode,contextChildIndex.v=Kusto.Language.Editor.KustoCompleter.GetChildIndex(contextNode.v,position),!0;return tokenNode!=null?(contextNode.v=tokenNode,contextChildIndex.v=Kusto.Language.Editor.KustoCompleter.GetChildIndex(contextNode.v,position),!0):position>token.TriviaStart&&position<token.TextStart&&!hasAffinity&&(nextLBStart=Kusto.Language.Parsing.TextFacts.GetNextLineBreakStart(token.Trivia,position-token.TriviaStart|0),nextLBStart>=0&&Kusto.Language.Parsing.TextFacts.IsWhitespaceOnly$1(token.Trivia,0,nextLBStart)&&(prevToken1=token.GetPreviousToken(),prevToken1!=null&&(contextNode.v=Kusto.Language.Syntax.SyntaxElement.GetCommonAncestor(prevToken1,token),contextNode.v!=null)))?(contextChildIndex.v=contextNode.v.GetDescendantIndex(token),contextChildIndex.v>=0):!1},GetSyntaxCompletions:function(position,builder){var $t,$t1,hints=this.GetCompletionHint$1(position),match=this.GetSymbolMatch(position),expr=Kusto.Language.Editor.KustoServiceHelpers.GetCompleteExpressionLeftOfPosition(this._code,position),annotations=this.GetGrammarAnnotations(position),hint,item,augmentedItem;$t=Bridge.getEnumerator(System.Linq.Enumerable.from(annotations).ofType(Kusto.Language.Editor.CompletionHint));try{while($t.moveNext())hint=$t.Current,hints|=hint}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}$t1=Bridge.getEnumerator(System.Linq.Enumerable.from(annotations).ofType(Kusto.Language.Editor.CompletionItem));try{while($t1.moveNext())item=$t1.Current,this.IncludeSyntax(item,position,hints,match,expr)&&(this.ShouldAugmentSyntaxCompletionItem(item)?(augmentedItem=this.AddSpaceToCompletionItem(item),builder.Add(augmentedItem)):builder.Add(item))}finally{Bridge.is($t1,System.IDisposable)&&$t1.System$IDisposable$Dispose()}this._options.IncludeExtendedSytnax&&this.GetExtendedSyntaxCompletions(position,builder)},AddSpaceToCompletionItem:function(item){return item.BeforeText.length>0&&!System.Char.isWhiteSpace(String.fromCharCode(item.BeforeText.charCodeAt(item.BeforeText.length-1|0)))?item.WithBeforeText((item.BeforeText||"")+" "):item},ShouldAugmentSyntaxCompletionItem:function(item){var $t;if(!this._options.AutoAppendWhitespace||System.Nullable.gt(($t=item.AfterText)!=null?$t.length:null,0)||System.String.endsWith(item.BeforeText,"=")&&Kusto.Language.Parsing.TextFacts.IsLetterOrDigit(item.BeforeText.charCodeAt(0))&&item.BeforeText.length>1&&!Kusto.Language.Parsing.TextFacts.IsWhitespace(item.BeforeText.charCodeAt(item.BeforeText.length-2|0)))return!1;switch(item.Kind){case Kusto.Language.Editor.CompletionKind.Column:case Kusto.Language.Editor.CompletionKind.BuiltInFunction:case Kusto.Language.Editor.CompletionKind.LocalFunction:case Kusto.Language.Editor.CompletionKind.DatabaseFunction:case Kusto.Language.Editor.CompletionKind.AggregateFunction:case Kusto.Language.Editor.CompletionKind.Parameter:case Kusto.Language.Editor.CompletionKind.Variable:case Kusto.Language.Editor.CompletionKind.Table:case Kusto.Language.Editor.CompletionKind.Database:case Kusto.Language.Editor.CompletionKind.Cluster:return!1;case Kusto.Language.Editor.CompletionKind.Punctuation:return System.Linq.Enumerable.from(Kusto.Language.Editor.KustoCompleter.punctuationWithoutSpace,System.String).any(function(p){return Bridge.referenceEquals(item.DisplayText,p)});default:return!0}},GetGrammarAnnotations:function(position){if(this._annotations!=null&&this._annotationPosition===position)return this._annotations;var parsers=this.GetAnnotatedParsers(position);return this._annotations=System.Linq.Enumerable.from(parsers,Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)).selectMany(function(p){return p.Annotations}).toList(System.Object),this._annotationPosition=position,this._annotations},GetAnnotatedParsers:function(position){var startPosition,grammar;if(this._annotatedParsers!=null&&this._annotatedParserPosition===position)return this._annotatedParsers;startPosition={};grammar={};this.GetGrammarSearchContext(position,startPosition,grammar);var startIndex=this._code.GetTokenIndex(startPosition.v),matchIndex=this._code.GetTokenIndex(position),tokens=this._code.GetLexicalTokens(),source=new(Kusto.Language.Parsing.ArraySource$1(Kusto.Language.Parsing.LexicalToken))(tokens,0,matchIndex+1|0);return this._annotatedParsers=Kusto.Language.Editor.AnnotatedParserFinder$1(Kusto.Language.Parsing.LexicalToken).FindParsers(source,matchIndex,grammar.v,startIndex),this._annotatedParserPosition=position,this._annotatedParsers},GetAnnotatedParserPaths:function(position){var startPosition,grammar;if(this._annotatedParserPaths!=null&&this._annotatedParserPathPosition===position)return this._annotatedParserPaths;startPosition={};grammar={};this.GetGrammarSearchContext(position,startPosition,grammar);var startIndex=this._code.GetTokenIndex(startPosition.v),matchIndex=this._code.GetTokenIndex(position),tokens=this._code.GetLexicalTokens(),source=new(Kusto.Language.Parsing.ArraySource$1(Kusto.Language.Parsing.LexicalToken))(tokens,0,matchIndex+1|0);return this._annotatedParserPaths=Kusto.Language.Editor.AnnotatedParserFinder$1(Kusto.Language.Parsing.LexicalToken).FindPaths(source,matchIndex,grammar.v,startIndex),this._annotatedParserPathPosition=position,this._annotatedParserPaths},GetGrammarSearchContext:function(position,searchStart,grammar){var $t,token=Kusto.Language.Editor.KustoServiceHelpers.GetTokenLeftOfPosition(this._code,position),op,pipe,pe,priorPipe,body,stat,_discard1,fc,se,parent,_discard2;if(token!=null)for(var queryGrammar=this.CurrentQueryGrammar,node=token.Parent,nextToken=token.GetNextToken();node!=null;node=node.Parent)do{if(Bridge.is(node,Kusto.Language.Syntax.QueryOperator)){if(op=Bridge.cast(node,Kusto.Language.Syntax.QueryOperator),searchStart.v=op.TextStart,(pipe=Bridge.as(op.Parent,Kusto.Language.Syntax.PipeExpression))!=null&&Bridge.referenceEquals(pipe.Operator,op)){grammar.v=queryGrammar.FollowingPipeElementExpression;return}if(Bridge.is(op.Parent,Kusto.Language.Syntax.ParenthesizedExpression)||Bridge.is(op.Parent,Kusto.Language.Syntax.ExpressionStatement)||Bridge.is(op.Parent,Kusto.Language.Syntax.FunctionBody)){grammar.v=queryGrammar.PipeExpression;return}break}if(Bridge.is(node,Kusto.Language.Syntax.PipeExpression)){if(pe=Bridge.cast(node,Kusto.Language.Syntax.PipeExpression),position>=pe.Bar.TriviaStart&&(priorPipe=Bridge.as(pe.Expression,Kusto.Language.Syntax.PipeExpression))!=null){searchStart.v=priorPipe.Operator.TextStart;grammar.v=queryGrammar.PipeSubExpression;return}break}if(Bridge.is(node,Kusto.Language.Syntax.FunctionBody)){body=Bridge.cast(node,Kusto.Language.Syntax.FunctionBody);searchStart.v=body.TextStart;grammar.v=queryGrammar.FunctionBody;return}if(Bridge.is(node,Kusto.Language.Syntax.Statement)){if(stat=Bridge.cast(node,Kusto.Language.Syntax.Statement),this.IsQueryPart(node,0)){searchStart.v=stat.TextStart;grammar.v=queryGrammar.StatementList;return}break}if(Bridge.is(node,Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement))){if(_discard1=Bridge.cast(node,Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)),this.IsQueryPart(node,0)){searchStart.v=node.TextStart;grammar.v=queryGrammar.StatementList;return}break}if(Bridge.is(node,Kusto.Language.Syntax.FunctionCallExpression)){if(fc=Bridge.cast(node,Kusto.Language.Syntax.FunctionCallExpression),position>fc.ArgumentList.OpenParen.End&&(!fc.ArgumentList.CloseParen.IsMissing&&position<=fc.ArgumentList.CloseParen.TextStart||fc.ArgumentList.CloseParen.IsMissing&&nextToken!=null&&nextToken.Kind===Kusto.Language.Syntax.SyntaxKind.EndOfTextToken)){searchStart.v=fc.TextStart;grammar.v=queryGrammar.UnnamedExpression;return}break}if(Bridge.is(node,Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression))){if(se=Bridge.cast(node,Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),parent=($t=se.Parent)!=null?$t.Parent:null,Bridge.is(parent,Kusto.Language.Syntax.DataTableExpression)){searchStart.v=se.TextStart;grammar.v=queryGrammar.LiteralList;return}break}if(Bridge.is(node,Kusto.Language.Syntax.Command)){_discard2=Bridge.cast(node,Kusto.Language.Syntax.Command);searchStart.v=node.TextStart;grammar.v=this._code.Grammar;return}}while(0);searchStart.v=this._code.Syntax.TextStart;grammar.v=this._code.Grammar},IncludeSyntax:function(item,position,hints,match,left){if(!this._options.IncludePunctuationOnlySyntax&&item.Kind===Kusto.Language.Editor.CompletionKind.Punctuation)return!1;switch(item.Kind){case Kusto.Language.Editor.CompletionKind.QueryPrefix:return(hints&Kusto.Language.Editor.CompletionHint.Query)!=0||(hints&Kusto.Language.Editor.CompletionHint.Keyword)!=0||(match&Kusto.Language.Symbols.SymbolMatch.Tabular)!=0;case Kusto.Language.Editor.CompletionKind.TabularPrefix:return(match&Kusto.Language.Symbols.SymbolMatch.Tabular)!=0;case Kusto.Language.Editor.CompletionKind.TabularSuffix:return left!=null&&left.ResultType!=null&&left.ResultType.IsTabular;case Kusto.Language.Editor.CompletionKind.ScalarPrefix:case Kusto.Language.Editor.CompletionKind.Example:return(match&Kusto.Language.Symbols.SymbolMatch.Scalar)!=0;case Kusto.Language.Editor.CompletionKind.ScalarInfix:return this.AnyInfixMatches(left,item.MatchText,position);default:return!0}},AnyInfixMatches:function(left,op,position){var kind=Kusto.Language.Editor.KustoCompleter.GetOperatorKind(op),hint,parent;if(kind===Kusto.Language.Symbols.OperatorKind.None)return!1;for(;left!=null;left=Bridge.as(left.Parent,Kusto.Language.Syntax.Expression)){if(position<left.End)break;if(left.ResultType!=null&&(hint=Kusto.Language.Editor.CompletionHint.None,(parent=left.Parent)!=null&&(hint=this.GetChildHint(parent,parent.GetChildIndex(left),Kusto.Language.Editor.CompletionHint.Query)),this.HasMatchingInfixOperator(kind,left.ResultType,hint)))return!0}return!1},HasMatchingInfixOperator:function(kind,arg0Type,returnTypeHint){var $t,op=this._code.Globals.GetOperator(kind),sig;$t=Bridge.getEnumerator(op.Signatures,Kusto.Language.Symbols.Signature);try{while($t.moveNext())if(sig=$t.Current,!sig.IsHidden&&Kusto.Language.Editor.KustoCompleter.ParameterMatches(System.Array.getItem(sig.Parameters,0,Kusto.Language.Symbols.Parameter),arg0Type)&&Kusto.Language.Editor.KustoCompleter.ReturnTypeMatchesContext(sig,arg0Type,returnTypeHint))return!0}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return!1},GetCompletionKind:function(symbol){switch(symbol.Kind){case Kusto.Language.Symbols.SymbolKind.Cluster:return Kusto.Language.Editor.CompletionKind.Cluster;case Kusto.Language.Symbols.SymbolKind.Column:return Kusto.Language.Editor.CompletionKind.Column;case Kusto.Language.Symbols.SymbolKind.Database:return Kusto.Language.Editor.CompletionKind.Database;case Kusto.Language.Symbols.SymbolKind.Function:var fn=Bridge.cast(symbol,Kusto.Language.Symbols.FunctionSymbol);return this._code.Globals.IsAggregateFunction(fn)?Kusto.Language.Editor.CompletionKind.AggregateFunction:this._code.Globals.IsBuiltInFunction(fn)?Kusto.Language.Editor.CompletionKind.BuiltInFunction:this._code.Globals.IsDatabaseFunction(fn)?Kusto.Language.Editor.CompletionKind.DatabaseFunction:Kusto.Language.Editor.CompletionKind.LocalFunction;case Kusto.Language.Symbols.SymbolKind.Pattern:return Kusto.Language.Editor.CompletionKind.LocalFunction;case Kusto.Language.Symbols.SymbolKind.Operator:return Kusto.Language.Editor.CompletionKind.BuiltInFunction;case Kusto.Language.Symbols.SymbolKind.Variable:return this.GetVariableCompletionKind(Bridge.cast(symbol,Kusto.Language.Symbols.VariableSymbol));case Kusto.Language.Symbols.SymbolKind.Parameter:return Kusto.Language.Editor.CompletionKind.Parameter;case Kusto.Language.Symbols.SymbolKind.Table:return Kusto.Language.Editor.CompletionKind.Table;case Kusto.Language.Symbols.SymbolKind.MaterializedView:return Kusto.Language.Editor.CompletionKind.MaterialiedView;case Kusto.Language.Symbols.SymbolKind.EntityGroup:return Kusto.Language.Editor.CompletionKind.EntityGroup;case Kusto.Language.Symbols.SymbolKind.Graph:return Kusto.Language.Editor.CompletionKind.Graph;case Kusto.Language.Symbols.SymbolKind.Primitive:case Kusto.Language.Symbols.SymbolKind.Tuple:case Kusto.Language.Symbols.SymbolKind.Array:case Kusto.Language.Symbols.SymbolKind.Bag:case Kusto.Language.Symbols.SymbolKind.Group:case Kusto.Language.Symbols.SymbolKind.Void:default:return Kusto.Language.Editor.CompletionKind.Unknown}},GetVariableCompletionKind:function(vs){switch(vs.Type.Kind){case Kusto.Language.Symbols.SymbolKind.Table:case Kusto.Language.Symbols.SymbolKind.Function:case Kusto.Language.Symbols.SymbolKind.Pattern:case Kusto.Language.Symbols.SymbolKind.Graph:return this.GetCompletionKind(vs.Type);default:return Kusto.Language.Editor.CompletionKind.Variable}},GetExtendedSyntaxCompletions:function(position,builder){var $t,$t1,items=Kusto.Language.Editor.KustoCompleter._completionItemListPool.AllocateFromPool(),paths,rootPaths,path,ceiling,tmpBuilder;try{paths=this.GetAnnotatedParserPaths(position);rootPaths=($t=Kusto.Language.Editor.ParserPath$1(Kusto.Language.Parsing.LexicalToken),System.Linq.Enumerable.from(Kusto.Language.Utils.ListExtensions.DistinctFirst(Kusto.Language.Editor.ParserPath$1(Kusto.Language.Parsing.LexicalToken),Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken),System.Linq.Enumerable.from(paths,Kusto.Language.Editor.ParserPath$1(Kusto.Language.Parsing.LexicalToken)).where(function(p){return!Kusto.Language.Editor.KustoCompleter.IsInConditionalTest(p)}).select(Bridge.fn.bind(this,function(p){return this.GetLocalRoot(p)})).where(Bridge.fn.bind(this,function(p){var item;return p.Parent!=null&&(item=this.GetDeepCompletionItem(p.Parser))!=null&&item.Kind!==Kusto.Language.Editor.CompletionKind.Punctuation})),function(p){return p.Parser}),$t).toList($t));$t1=Bridge.getEnumerator(rootPaths);try{while($t1.moveNext())path=$t1.Current,items.clear(),ceiling=path.Parent,tmpBuilder=new Kusto.Language.Editor.KustoCompleter.CompletionBuilder,this.BuildExtendedSyntaxCompletions(path,ceiling,items,tmpBuilder),builder.AddRange(tmpBuilder.Items)}finally{Bridge.is($t1,System.IDisposable)&&$t1.System$IDisposable$Dispose()}}catch(e){e=System.Exception.create(e);Bridge._=e}finally{Kusto.Language.Editor.KustoCompleter._completionItemListPool.ReturnToPool(items)}},GetLocalRoot:function(path){for(var current=path,parent,index;;)if(parent={},index={},Kusto.Language.Editor.KustoCompleter.TryGetFirstAncestorSequence(current,null,parent,index))if(parent.v.ChildCount>1)return parent.v.GetChild(index.v);else current=parent.v;else return path},BuildExtendedSyntaxCompletions:function(path,ceiling,parts,builder){for(var item,text,endBracket,endParen,currentCount,optPath,currentCount1,a,altPath,altBuilder,item1;path!=null;){if(builder.Count>=Kusto.Language.Editor.KustoCompleter.MaxExtensionCount)return;if(path.Parser.IsHidden)break;else if(path.Parser.IsForward)break;else if(path.Parser.IsRequired){path=path.GetChild(0);continue}else if(path.Parser.IsConditional){path=path.GetChild(1);continue}else if(this.TryGetSpecialTexts(path.Parser,parts)){path=Kusto.Language.Editor.KustoCompleter.GetNextParserInSequence(path,ceiling);continue}else if(path.Parser.IsMatch&&(item=Kusto.Language.Editor.KustoCompleter.GetCompletionItem(path.Parser))!=null&&Bridge.referenceEquals(item.DisplayText,item.BeforeText)&&Bridge.referenceEquals(item.AfterText,"")){if(text=item.BeforeText,parts.Count===0&&Kusto.Language.Editor.KustoCompleter.IsPunctuation(item))return;if(parts.add(item),Kusto.Language.Editor.KustoCompleter.IsStartBracket(text))if(endBracket=Kusto.Language.Editor.KustoCompleter.GetEndBracket(text),parts.add(new Kusto.Language.Editor.CompletionItem.$ctor2(endBracket,"",endBracket,void 0,void 0,12,3,!1)),endParen=this.FindNextSibling(path,ceiling,endBracket),endParen!=null){path=Kusto.Language.Editor.KustoCompleter.GetNextParserInSequence(endParen,ceiling);continue}else break;else{path=Kusto.Language.Editor.KustoCompleter.GetNextParserInSequence(path,ceiling);continue}}else if(path.Parser.IsSequence&&path.ChildCount>0)if(parts.Count<Kusto.Language.Editor.KustoCompleter.MaxExtensionSize){path=path.GetChild(0);continue}else break;else if(path.Parser.IsOptional&&!path.Parser.IsRepetition){currentCount=parts.Count;optPath=path.GetChild(0);this.BuildExtendedSyntaxCompletions(optPath,ceiling,parts,builder);Kusto.Language.Utils.ListExtensions.SetCount(Kusto.Language.Editor.CompletionItem,parts,currentCount);path=Kusto.Language.Editor.KustoCompleter.GetNextParserInSequence(path,ceiling);continue}else if(path.Parser.IsRepetition&&!path.Parser.IsOptional){path=path.GetChild(0);continue}else if(path.Parser.IsRepetition&&path.Parser.IsOptional){path=Kusto.Language.Editor.KustoCompleter.GetNextParserInSequence(path,ceiling);continue}else if(path.Parser.IsAlternation){for(currentCount1=parts.Count,a=0;a<path.ChildCount;a=a+1|0)altPath=path.GetChild(a),Kusto.Language.Utils.ListExtensions.SetCount(Kusto.Language.Editor.CompletionItem,parts,currentCount1),altBuilder=parts.Count===0?new Kusto.Language.Editor.KustoCompleter.CompletionBuilder:builder,this.BuildExtendedSyntaxCompletions(altPath,ceiling,parts,altBuilder),Bridge.referenceEquals(altBuilder,builder)||builder.AddRange(altBuilder.Items);break}else if(path.ChildCount===1){path=path.GetChild(0);continue}break}parts.Count>1&&(item1=Kusto.Language.Editor.KustoCompleter.CreateExtendedSyntaxCompletion(parts),item1==null||Bridge.referenceEquals(item1.DisplayText,"")||System.Char.isWhiteSpace(String.fromCharCode(item1.DisplayText.charCodeAt(0)))||System.Char.isPunctuation(item1.DisplayText.charCodeAt(0))||builder.Add(item1))},FindNextSibling:function(path,ceiling,text){var sequence={},index={},i,child,item;if(Kusto.Language.Editor.KustoCompleter.TryGetFirstAncestorSequence(path,ceiling,sequence,index))for(i=index.v;i<sequence.v.ChildCount;i=i+1|0)if(child=sequence.v.GetChild(i),item=this.GetDeepCompletionItem(child.Parser),item!=null&&Bridge.referenceEquals(item.BeforeText,text)&&Bridge.referenceEquals(item.AfterText,""))return child;return null},GetDeepCompletionItem:function(parser){while(parser!=null){var item=Kusto.Language.Editor.KustoCompleter.GetCompletionItem(parser);if(item!=null)return item;if(parser.ChildParserCount===0)return null;parser=parser.GetChildParser(0)}return null},TryGetSpecialTexts:function(parser,items){var queryGrammar=this.CurrentQueryGrammar,commandGrammar=this.CurrentCommandGrammar,rules=commandGrammar.PredefinedRules,hasCaret;return items.Count===0?!1:(hasCaret=System.Linq.Enumerable.from(items,Kusto.Language.Editor.CompletionItem).any(function(item){return item.HasCaret}),Bridge.referenceEquals(queryGrammar.SimpleNameReference,parser)||Bridge.referenceEquals(queryGrammar.WildcardedNameReference,parser)||Bridge.referenceEquals(queryGrammar.BracedName,parser)||Bridge.referenceEquals(queryGrammar.BracketedName,parser)||Bridge.referenceEquals(rules.TableNameReference,parser)||Bridge.referenceEquals(rules.ExternalTableNameReference,parser)||Bridge.referenceEquals(rules.MaterializedViewNameReference,parser)||Bridge.referenceEquals(rules.DatabaseFunctionNameReference,parser)||Bridge.referenceEquals(rules.DatabaseNameReference,parser)||Bridge.referenceEquals(rules.ClusterNameReference,parser)||Bridge.referenceEquals(rules.DatabaseOrTableNameReference,parser)||Bridge.referenceEquals(rules.DatabaseOrTableOrColumnNameReference,parser)||Bridge.referenceEquals(rules.TableOrColumnNameReference,parser)||Bridge.referenceEquals(rules.DatabaseTableColumnNameReference,parser)||Bridge.referenceEquals(rules.ColumnNameReference,parser)||Bridge.referenceEquals(rules.ColumnNameReference,parser)||Bridge.referenceEquals(rules.TableColumnNameReference,parser)||Bridge.referenceEquals(rules.TableOrColumnNameReference,parser)?(items.add(new Kusto.Language.Editor.CompletionItem.$ctor2(""," "," ",void 0,void 0,12,3,!1)),!0):Bridge.referenceEquals(rules.ScriptInput,parser)||Bridge.referenceEquals(rules.QueryInput,parser)?(items.add(new Kusto.Language.Editor.CompletionItem.$ctor2(""," "," ",void 0,void 0,12,3,!1)),!0):Bridge.referenceEquals(queryGrammar.SimpleNameDeclaration,parser)||Bridge.referenceEquals(queryGrammar.SimpleNameDeclarationExpression,parser)||Bridge.referenceEquals(queryGrammar.BracketedNameDeclaration,parser)||Bridge.referenceEquals(rules.NameDeclaration,parser)||Bridge.referenceEquals(rules.QualifiedNameDeclaration,parser)?(items.add(new Kusto.Language.Editor.CompletionItem.$ctor2("").WithApplyTexts([Kusto.Language.Editor.CompletionText.Create("name",!0,!0)])),!0):Bridge.referenceEquals(rules.Value,parser)||Bridge.referenceEquals(queryGrammar.Literal,parser)?(items.add(new Kusto.Language.Editor.CompletionItem.$ctor2("?").WithApplyTexts([Kusto.Language.Editor.CompletionText.Create("0",!0,!0)])),!0):Bridge.referenceEquals(queryGrammar.Expression,parser)||Bridge.referenceEquals(queryGrammar.NamedExpression,parser)||Bridge.referenceEquals(queryGrammar.UnnamedExpression,parser)?(hasCaret?items.add(new Kusto.Language.Editor.CompletionItem.$ctor2("").WithApplyTexts([Kusto.Language.Editor.CompletionText.Create("expr",!0,!0)])):items.add(new Kusto.Language.Editor.CompletionItem.$ctor2(""," "," ",void 0,void 0,12,3,!1)),!0):Bridge.referenceEquals(rules.Type,parser)?(items.add(new Kusto.Language.Editor.CompletionItem.$ctor2("").WithApplyTexts([Kusto.Language.Editor.CompletionText.Create("real",!0,!0)])),!0):Bridge.referenceEquals(rules.FunctionDeclaration,parser)?(items.add(new Kusto.Language.Editor.CompletionItem.$ctor2("() { }")),!0):Bridge.referenceEquals(rules.FunctionBody,parser)||Bridge.referenceEquals(queryGrammar.FunctionBody,parser)?(items.add(new Kusto.Language.Editor.CompletionItem.$ctor2("{ }")),!0):Bridge.referenceEquals(rules.AnyGuidLiteralOrString,parser)||Bridge.referenceEquals(rules.GuidLiteral,parser)||Bridge.referenceEquals(rules.StringLiteral,parser)||Bridge.referenceEquals(rules.RawGuidLiteral,parser)||Bridge.referenceEquals(queryGrammar.StringLiteral,parser)?(items.add(new Kusto.Language.Editor.CompletionItem.$ctor2('""','"','"',void 0,void 0,12,3,!1)),!0):Bridge.referenceEquals(rules.BracketedStringLiteral,parser)||Bridge.referenceEquals(rules.BracketedInputText,parser)?(items.add(new Kusto.Language.Editor.CompletionItem.$ctor2("[]","[","]",void 0,void 0,12,3,!1)),!0):!1)}}});Bridge.define("Kusto.Language.Editor.KustoCompleter.CompletionBuilder",{$kind:"nested class",statics:{methods:{GetBetterItem:function(existing,other){return existing.Kind===Kusto.Language.Editor.CompletionKind.Keyword&&other.Kind===Kusto.Language.Editor.CompletionKind.QueryPrefix?other:existing}}},fields:{list:null,indexMap:null,_frozenList:null},props:{Count:{get:function(){return this.list.Count}},Items:{get:function(){if(this._frozenList==null){var tmp=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Editor.CompletionItem,this.list);Kusto.Language.Utils.Interlocked.CompareExchange(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Editor.CompletionItem),Bridge.ref(this,"_frozenList"),tmp,null)}return this._frozenList}}},ctors:{init:function(){this.list=new(System.Collections.Generic.List$1(Kusto.Language.Editor.CompletionItem).ctor);this.indexMap=new(System.Collections.Generic.Dictionary$2(System.String,System.Int32).ctor)},ctor:function(){this.$initialize()}},methods:{Add:function(item){var existingItemIndex,better;this._frozenList=null;existingItemIndex={};this.indexMap.tryGetValue(item.DisplayText,existingItemIndex)?(better=Kusto.Language.Editor.KustoCompleter.CompletionBuilder.GetBetterItem(this.list.getItem(existingItemIndex.v),item),Bridge.referenceEquals(better,item)&&this.list.setItem(existingItemIndex.v,item)):(this.indexMap.add(item.DisplayText,this.list.Count),this.list.add(item))},AddRange:function(items){var $t,item;$t=Bridge.getEnumerator(items,Kusto.Language.Editor.CompletionItem);try{while($t.moveNext())item=$t.Current,this.Add(item)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}}});Bridge.define("Kusto.Language.Editor.KustoCompleter.CompletionMode",{$kind:"nested enum",statics:{fields:{Isolated:0,Combined:1}}});Bridge.define("Kusto.Language.Editor.KustoFixers",{statics:{fields:{All:null},ctors:{init:function(){this.All=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Editor.KustoFixer,System.Linq.Enumerable.from(System.Array.init([],Kusto.Language.Editor.KustoFixer),Kusto.Language.Editor.KustoFixer).concat(System.Linq.Enumerable.from(Kusto.Language.Editor.KustoAnalyzers.All,Kusto.Language.Editor.KustoAnalyzer).select(function(a){return a.Fixer})))}}}});Bridge.define("Kusto.Language.Editor.KustoFormatter",{statics:{fields:{ArbitraryMaxBinaryOperatorChainWidth:0,ArbitraryMaxSingleLineQueryWidth:0,ArbitraryMaxCommaListWidthWidth:0,ArbitraryMaxSingleLineDataTableWidth:0,ArbitraryMaxSingleLineSchemaWidth:0,ArbitraryMaxSingleLineRowWidth:0,ArbitraryMaxValueWidth:0,s_Spaces:null},ctors:{init:function(){this.ArbitraryMaxBinaryOperatorChainWidth=80;this.ArbitraryMaxSingleLineQueryWidth=80;this.ArbitraryMaxCommaListWidthWidth=80;this.ArbitraryMaxSingleLineDataTableWidth=80;this.ArbitraryMaxSingleLineSchemaWidth=60;this.ArbitraryMaxSingleLineRowWidth=80;this.ArbitraryMaxValueWidth=40;this.s_Spaces=System.String.fromCharCount(32,256)}},methods:{GetFormattedText:function(node,options,caretPosition){var formatter=new Kusto.Language.Editor.KustoFormatter(caretPosition,options||Kusto.Language.Editor.FormattingOptions.Default);return formatter.Format(node),new Kusto.Language.Editor.FormattedText(formatter._builder.toString(),formatter._newCaretPosition)},SkipWhitespace:function(text,start){for(var p=start;p<text.length&&Kusto.Language.Parsing.TextFacts.IsWhitespace(text.charCodeAt(p))&&!Kusto.Language.Parsing.TextFacts.IsLineBreakStart(text.charCodeAt(p));)p=p+1|0;return p},IsDirectQueryOperatorPart:function(node){return Bridge.is(node.Parent,Kusto.Language.Syntax.QueryOperator)||Bridge.is(node.Parent,Kusto.Language.Syntax.Clause)},IsChainableBinaryOperator:function(kind){switch(kind){case Kusto.Language.Syntax.SyntaxKind.AndExpression:case Kusto.Language.Syntax.SyntaxKind.OrExpression:return!0;default:return!1}},GetBinaryOperatorChainDepth:function(be){for(var count=1,left;be!=null&&(left=Bridge.as(be.Left,Kusto.Language.Syntax.BinaryExpression))!=null&&left.Operator.Kind===be.Operator.Kind;)count=count+1|0,be=left;return count},GetBalancedColumnCount:function(expressions){if(Kusto.Language.Editor.KustoFormatter.GetMaximumValueWidth(expressions)>=Kusto.Language.Editor.KustoFormatter.ArbitraryMaxValueWidth)return 1;for(var columns=10;;){if(Kusto.Language.Editor.KustoFormatter.GetMaximumRowWidth(expressions,columns)<=Kusto.Language.Editor.KustoFormatter.ArbitraryMaxSingleLineRowWidth)return columns;if(columns>4){columns=columns-2|0;continue}return 1}},GetMaximumValueWidth:function(expressions){for(var width,maxWidth=0,i=0;i<expressions.Count;i=i+1|0)width=expressions.getItem$1(i).Element$1.Width,width>maxWidth&&(maxWidth=width);return maxWidth},GetMaximumRowWidth:function(expressions,columns){for(var maxWidth=0,firstColumnInRow=0;firstColumnInRow<expressions.Count;firstColumnInRow=firstColumnInRow+columns|0){var lastColumnInRow=Math.min(expressions.Count-1|0,(firstColumnInRow+columns|0)-1|0),start=expressions.getItem$1(firstColumnInRow).TriviaStart,end=expressions.getItem$1(lastColumnInRow).End,width=end-start|0;width>maxWidth&&(maxWidth=width)}return maxWidth},IsIdentifierOrKeyword:function(token){return token.Kind===Kusto.Language.Syntax.SyntaxKind.IdentifierToken||Kusto.Language.Syntax.SyntaxFacts.IsKeyword(token.Kind)},SpansMultipleLines$1:function(first,last,inclusive,excluded){if(inclusive===void 0&&(inclusive=!1),excluded===void 0&&(excluded=null),first!=null&&last!=null){if(inclusive&&!Bridge.referenceEquals(first,excluded)&&Kusto.Language.Parsing.TextFacts.HasLineBreaks(first.Trivia))return!0;for(var token=first.GetNextToken();token!=null;){if(!Bridge.referenceEquals(token,excluded)&&Kusto.Language.Parsing.TextFacts.HasLineBreaks(token.Trivia))return!0;if(Bridge.referenceEquals(token,last))break;token=token.GetNextToken()}}return!1},SpansMultipleLines:function(node,inclusive,excluded){return(inclusive===void 0&&(inclusive=!1),excluded===void 0&&(excluded=null),node!=null)?Kusto.Language.Editor.KustoFormatter.SpansMultipleLines$1(node.GetFirstToken(),node.GetLastToken(),inclusive,excluded):!1}}},fields:{_options:null,_builder:null,_caretPosition:0,_newCaretPosition:0,_currentLineStart:0,_spacingRules:null,_alignmentRules:null,_elementLineOffsets:null},ctors:{init:function(){this._spacingRules=new(System.Collections.Generic.Dictionary$2(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Editor.KustoFormatter.SpacingRule).ctor);this._alignmentRules=new(System.Collections.Generic.Dictionary$2(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Editor.KustoFormatter.AlignmentRule).ctor);this._elementLineOffsets=new(System.Collections.Generic.Dictionary$2(Kusto.Language.Syntax.SyntaxElement,System.Int32).ctor)},ctor:function(caretPosition,options){this.$initialize();this._currentLineStart=0;this._caretPosition=caretPosition;this._newCaretPosition=-1;this._options=options;this._builder=new System.Text.StringBuilder}},methods:{Format:function(node){this.IdentifyFormattingRules(node);this.WriteFormattedText(node,0);this._newCaretPosition===-1&&(this._newCaretPosition=this._caretPosition<=0?this._caretPosition:this._caretPosition<=node.End?this._builder.getLength():this._caretPosition+(this._builder.getLength()-node.Width|0)|0)},WriteFormattedText:function(node,indentation){var i,n,child,alignment,elementIndentation,sn,t2,lineOffset;if(node!=null)for(i=0,n=node.ChildCount;i<n;i=i+1|0)if(child=node.GetChild(i),child!=null){var spacingKind=Kusto.Language.Editor.KustoFormatter.SpacingKind.AlignOnly,childIndentation=indentation,spacing={};this.TryGetSpacingRule(child,spacing)&&(spacingKind=spacing.v.GetKind());alignment={};this.TryGetAlignmentRule(child,alignment)&&(alignment.v.RelativeToElement==null?childIndentation=childIndentation+alignment.v.IndentationDelta|0:(elementIndentation={},this.TryGetIndentation(alignment.v.RelativeToElement,elementIndentation)&&(childIndentation=elementIndentation.v+alignment.v.IndentationDelta|0)));(sn=Bridge.as(child,Kusto.Language.Syntax.SyntaxNode))!=null?this.WriteFormattedText(sn,childIndentation):(t2=Bridge.as(child,Kusto.Language.Syntax.SyntaxToken))!=null&&(lineOffset=this.WriteToken(t2,childIndentation,spacingKind),this._elementLineOffsets.add(t2,lineOffset))}},TryGetSpacingRule:function(element,rule){return this._spacingRules.tryGetValue(element,rule)},TryGetAlignmentRule:function(element,rule){return this._alignmentRules.tryGetValue(element,rule)},TryGetIndentation:function(element,indentation){var node,token;return this._elementLineOffsets.tryGetValue(element,indentation)?!0:(node=Bridge.as(element,Kusto.Language.Syntax.SyntaxNode))!=null&&(token=element.GetFirstToken(),token!=null&&this._elementLineOffsets.tryGetValue(token,indentation))?!0:!1},WriteToken:function(token,indentation,spacingKind){var tokenTextStart,text;return spacingKind===void 0&&(spacingKind=2),(token.Text.length>0||token.Trivia.length>0||token.IsMissing&&this._options.InsertMissingTokens)&&this.WriteTrivia(token,indentation,spacingKind,token.Kind!==Kusto.Language.Syntax.SyntaxKind.EndOfTextToken),this._newCaretPosition===-1&&(this._caretPosition>=token.TextStart&&this._caretPosition<=token.End?this._newCaretPosition=this._builder.getLength()+(this._caretPosition-token.TextStart|0)|0:this._caretPosition<token.TextStart&&(this._newCaretPosition=this._builder.getLength())),tokenTextStart=this._builder.getLength(),token.IsMissing&&this._options.InsertMissingTokens?(text=Kusto.Language.Syntax.SyntaxFacts.GetText(token.Kind),System.String.isNullOrEmpty(text)||this._builder.append(text)):this._builder.append(token.Text),tokenTextStart-this._currentLineStart|0},WriteTrivia:function(token,indentation,spacingKind,hasFollowingToken){var trivia=token.Trivia,cursorInTrivia=this._caretPosition>=token.TriviaStart&&this._caretPosition<token.TextStart,lineStart,lineEnd,whitespaceEnd,nextLineBreakStart,nextLineStart;switch(spacingKind){case Kusto.Language.Editor.KustoFormatter.SpacingKind.NoSpace:return;case Kusto.Language.Editor.KustoFormatter.SpacingKind.SingleSpace:this._builder.append(" ");return}if(spacingKind!==Kusto.Language.Editor.KustoFormatter.SpacingKind.AsIs&&Kusto.Language.Parsing.TextFacts.HasLineBreaks(trivia))for(lineStart=0,lineEnd=0;lineStart<trivia.length;lineStart=lineEnd)whitespaceEnd=Kusto.Language.Editor.KustoFormatter.SkipWhitespace(trivia,lineStart),lineStart===0?this._builder.append(trivia,lineStart,whitespaceEnd-lineStart|0):this.WriteIndentation(indentation),nextLineBreakStart=Kusto.Language.Parsing.TextFacts.GetNextLineBreakStart(trivia,whitespaceEnd),nextLineStart=Kusto.Language.Parsing.TextFacts.GetNextLineStart(trivia,whitespaceEnd),lineEnd=nextLineStart>=0?nextLineStart:trivia.length,this._builder.append(trivia,whitespaceEnd,lineEnd-whitespaceEnd|0),this._currentLineStart=this._builder.getLength(),lineEnd>=trivia.length&&nextLineBreakStart>=0&&hasFollowingToken&&this.WriteIndentation(indentation);else switch(spacingKind){case Kusto.Language.Editor.KustoFormatter.SpacingKind.NoSpaceIfOnSameLine:break;case Kusto.Language.Editor.KustoFormatter.SpacingKind.SingleSpaceIfOnSameLine:this._builder.append(" ");break;case Kusto.Language.Editor.KustoFormatter.SpacingKind.NewLine:this._builder.appendLine();this._currentLineStart=this._builder.getLength();this.WriteIndentation(indentation);break;case Kusto.Language.Editor.KustoFormatter.SpacingKind.AsIs:case Kusto.Language.Editor.KustoFormatter.SpacingKind.AlignOnly:default:this._builder.append(trivia);break}},WriteIndentation:function(indentation){while(indentation>Kusto.Language.Editor.KustoFormatter.s_Spaces.length)this._builder.append(Kusto.Language.Editor.KustoFormatter.s_Spaces),indentation=indentation-Kusto.Language.Editor.KustoFormatter.s_Spaces.length|0;this._builder.append(Kusto.Language.Editor.KustoFormatter.s_Spaces,0,Math.min(indentation,Kusto.Language.Editor.KustoFormatter.s_Spaces.length))},IdentifyFormattingRules:function(node){var i,n,child,sn,t;if(node!=null){for(i=0,n=node.ChildCount;i<n;i=i+1|0)child=node.GetChild(i),(sn=Bridge.as(child,Kusto.Language.Syntax.SyntaxNode))!=null?this.IdentifyFormattingRules(sn):(t=Bridge.as(child,Kusto.Language.Syntax.SyntaxToken))!=null&&this.AddTokenRules(t);this.AddNodeRules(node)}},AddTokenRules:function(token){var prev,be,pbe,pue;if(!Kusto.Language.Parsing.TextFacts.HasLineBreaks(token.Trivia)&&(prev=token.GetPreviousToken(),prev!=null))if(Kusto.Language.Editor.KustoFormatter.IsIdentifierOrKeyword(token)&&Kusto.Language.Editor.KustoFormatter.IsIdentifierOrKeyword(prev))Bridge.referenceEquals(token.Trivia," ")||this.AddRule$2(token,Kusto.Language.Editor.KustoFormatter.SpacingRule.From(Kusto.Language.Editor.KustoFormatter.SpacingKind.SingleSpaceIfOnSameLine));else if((be=Bridge.as(token.Parent,Kusto.Language.Syntax.BinaryExpression))!=null&&Bridge.referenceEquals(be.Operator,token)||(pbe=Bridge.as(prev.Parent,Kusto.Language.Syntax.BinaryExpression))!=null&&Bridge.referenceEquals(pbe.Operator,prev))Bridge.referenceEquals(token.Trivia," ")||this.AddRule$2(token,Kusto.Language.Editor.KustoFormatter.SpacingRule.From(Kusto.Language.Editor.KustoFormatter.SpacingKind.SingleSpaceIfOnSameLine));else if((pue=Bridge.as(prev.Parent,Kusto.Language.Syntax.PrefixUnaryExpression))!=null&&Bridge.referenceEquals(pue.Operator,prev))Bridge.referenceEquals(token.Trivia,"")||this.AddRule$2(token,Kusto.Language.Editor.KustoFormatter.SpacingRule.From(Kusto.Language.Editor.KustoFormatter.SpacingKind.NoSpaceIfOnSameLine));else if(token.Kind!==Kusto.Language.Syntax.SyntaxKind.EndOfTextToken){switch(token.Kind){case Kusto.Language.Syntax.SyntaxKind.CloseBraceToken:case Kusto.Language.Syntax.SyntaxKind.CloseBracketToken:case Kusto.Language.Syntax.SyntaxKind.CloseParenToken:case Kusto.Language.Syntax.SyntaxKind.CommaToken:case Kusto.Language.Syntax.SyntaxKind.ColonToken:case Kusto.Language.Syntax.SyntaxKind.SemicolonToken:case Kusto.Language.Syntax.SyntaxKind.DotToken:Bridge.referenceEquals(token.Trivia,"")||this.AddRule$2(token,Kusto.Language.Editor.KustoFormatter.SpacingRule.From(Kusto.Language.Editor.KustoFormatter.SpacingKind.NoSpaceIfOnSameLine));break;case Kusto.Language.Syntax.SyntaxKind.DotDotToken:case Kusto.Language.Syntax.SyntaxKind.BarToken:Bridge.referenceEquals(token.Trivia," ")||this.AddRule$2(token,Kusto.Language.Editor.KustoFormatter.SpacingRule.From(Kusto.Language.Editor.KustoFormatter.SpacingKind.SingleSpaceIfOnSameLine));break}switch(prev.Kind){case Kusto.Language.Syntax.SyntaxKind.OpenBraceToken:case Kusto.Language.Syntax.SyntaxKind.OpenBracketToken:case Kusto.Language.Syntax.SyntaxKind.OpenParenToken:case Kusto.Language.Syntax.SyntaxKind.DotToken:Bridge.referenceEquals(token.Trivia,"")||this.AddRule$2(token,Kusto.Language.Editor.KustoFormatter.SpacingRule.From(Kusto.Language.Editor.KustoFormatter.SpacingKind.NoSpaceIfOnSameLine));break;case Kusto.Language.Syntax.SyntaxKind.CommaToken:case Kusto.Language.Syntax.SyntaxKind.ColonToken:case Kusto.Language.Syntax.SyntaxKind.BarToken:case Kusto.Language.Syntax.SyntaxKind.SemicolonToken:case Kusto.Language.Syntax.SyntaxKind.DotDotToken:Bridge.referenceEquals(token.Trivia," ")||this.AddRule$2(token,Kusto.Language.Editor.KustoFormatter.SpacingRule.From(Kusto.Language.Editor.KustoFormatter.SpacingKind.SingleSpaceIfOnSameLine));break}}},AddNodeRules:function(node){var $t,$t1,pe,fd,fc,se,list,listElem,be,st,dt,be1;this.AddSubElementRules(node);do{if(Bridge.is(node,Kusto.Language.Syntax.PipeExpression)){pe=Bridge.cast(node,Kusto.Language.Syntax.PipeExpression);this.AddPipeExpressionRules(pe);break}if(Bridge.is(node,Kusto.Language.Syntax.FunctionDeclaration)){fd=Bridge.cast(node,Kusto.Language.Syntax.FunctionDeclaration);this.AddFunctionDeclarationRules(fd);break}if(Bridge.is(node,Kusto.Language.Syntax.FunctionCallExpression)){fc=Bridge.cast(node,Kusto.Language.Syntax.FunctionCallExpression);this.AddFunctionCallRules(fc);break}if(Bridge.is(node,Kusto.Language.Syntax.SeparatedElement)){se=Bridge.cast(node,Kusto.Language.Syntax.SeparatedElement);System.Nullable.eq(($t=se.Separator)!=null?$t.Kind:null,Kusto.Language.Syntax.SyntaxKind.SemicolonToken)&&Bridge.is(se.Element,Kusto.Language.Syntax.LetStatement)&&this.AddSemicolonRules(se);break}if(Bridge.is(node,Kusto.Language.Syntax.SyntaxList)){list=Bridge.cast(node,Kusto.Language.Syntax.SyntaxList);list.Count>1&&(listElem=Bridge.as(list.getItem(0),Kusto.Language.Syntax.SeparatedElement))!=null&&System.Nullable.eq(($t1=listElem.Separator)!=null?$t1.Kind:null,Kusto.Language.Syntax.SyntaxKind.CommaToken)&&Kusto.Language.Editor.KustoFormatter.IsDirectQueryOperatorPart(list)&&this.AddQueryOperatorCommaListRules(list);break}if(Bridge.is(node,Kusto.Language.Syntax.BracketedExpression)){be=Bridge.cast(node,Kusto.Language.Syntax.BracketedExpression);this.AddBracketExpressionRules(be);break}if(Bridge.is(node,Kusto.Language.Syntax.Statement)){st=Bridge.cast(node,Kusto.Language.Syntax.Statement);this.AddStatementRules(st);break}if(Bridge.is(node,Kusto.Language.Syntax.DataTableExpression)){dt=Bridge.cast(node,Kusto.Language.Syntax.DataTableExpression);this.AddDataTableExpressionRules(dt);break}if(Bridge.is(node,Kusto.Language.Syntax.BinaryExpression)){be1=Bridge.cast(node,Kusto.Language.Syntax.BinaryExpression);this.AddBinaryOperatorChainRules(be1);break}}while(0)},AddBinaryOperatorChainRules:function(be){var depth,op;if(Kusto.Language.Editor.KustoFormatter.IsChainableBinaryOperator(be.Kind)&&Kusto.Language.Editor.KustoFormatter.IsDirectQueryOperatorPart(be)&&!Kusto.Language.Editor.KustoFormatter.SpansMultipleLines(be)&&be.Width>Kusto.Language.Editor.KustoFormatter.ArbitraryMaxBinaryOperatorChainWidth&&(depth=Kusto.Language.Editor.KustoFormatter.GetBinaryOperatorChainDepth(be),depth>1))for(op=be;op!=null&&op.Kind===be.Kind;)this.AddRule$2(op.Operator,Kusto.Language.Editor.KustoFormatter.SpacingRule.From(Kusto.Language.Editor.KustoFormatter.SpacingKind.NewLine)),op=Bridge.as(op.Left,Kusto.Language.Syntax.BinaryExpression)},AddSubElementRules:function(n){(Bridge.is(n.Parent,Kusto.Language.Syntax.Statement)&&!Bridge.is(n.Parent,Kusto.Language.Syntax.ExpressionStatement)||Bridge.is(n.Parent,Kusto.Language.Syntax.QueryOperator)||Bridge.is(n.Parent,Kusto.Language.Syntax.Command))&&(n.IndexInParent>0&&this.AddRule(n,this.IndentRule()),Bridge.is(n,Kusto.Language.Syntax.Clause)&&this.AddRule$2(n.GetFirstToken(),new Kusto.Language.Editor.KustoFormatter.SpacingRule(Kusto.Language.Editor.KustoFormatter.SpacingKind.NewLine,Bridge.fn.bind(this,function(){return this.SpansOrWillSpanMultipleLines(n.Parent)}))))},AddPipeExpressionRules:function(pe){var entireQuery,style,barToken,opToken,firstToken,prevToken;if(!Bridge.is(pe.Parent,Kusto.Language.Syntax.PipeExpression))for(entireQuery=pe,style=this._options.PipeOperatorStyle,!Kusto.Language.Editor.KustoFormatter.SpansMultipleLines(entireQuery)&&entireQuery.Width>Kusto.Language.Editor.KustoFormatter.ArbitraryMaxSingleLineQueryWidth&&(style=Kusto.Language.Editor.PlacementStyle.NewLine);pe!=null;pe=Bridge.as(pe.Expression,Kusto.Language.Syntax.PipeExpression)){barToken={v:pe.Bar};switch(style){case Kusto.Language.Editor.PlacementStyle.Smart:this.AddRule$2(barToken.v,new Kusto.Language.Editor.KustoFormatter.SpacingRule(Kusto.Language.Editor.KustoFormatter.SpacingKind.NewLine,function($me,barToken){return Bridge.fn.bind($me,function(){return this.SpansOrWillSpanMultipleLines(entireQuery,!1,barToken.v)})}(this,barToken)));opToken=pe.Operator.GetFirstToken();this.AddRule$2(opToken,Kusto.Language.Editor.KustoFormatter.SpacingRule.From(Kusto.Language.Editor.KustoFormatter.SpacingKind.SingleSpace));Bridge.referenceEquals(entireQuery,pe)&&(firstToken={v:pe.GetFirstToken()},prevToken=firstToken.v.GetPreviousToken(),prevToken!=null&&(prevToken.Kind===Kusto.Language.Syntax.SyntaxKind.OpenParenToken||prevToken.Kind===Kusto.Language.Syntax.SyntaxKind.OpenBraceToken)&&this.AddRule$2(firstToken.v,new Kusto.Language.Editor.KustoFormatter.SpacingRule(Kusto.Language.Editor.KustoFormatter.SpacingKind.NewLine,function($me,firstToken){return Bridge.fn.bind($me,function(){return this.SpansOrWillSpanMultipleLines(entireQuery,!1,firstToken.v)})}(this,firstToken))));break;case Kusto.Language.Editor.PlacementStyle.NewLine:this.AddRule$2(barToken.v,Kusto.Language.Editor.KustoFormatter.SpacingRule.From(Kusto.Language.Editor.KustoFormatter.SpacingKind.NewLine));opToken=pe.Operator.GetFirstToken();this.AddRule$2(opToken,Kusto.Language.Editor.KustoFormatter.SpacingRule.From(Kusto.Language.Editor.KustoFormatter.SpacingKind.SingleSpace));break}}},AddSemicolonRules:function(se){switch(this._options.SemicolonStyle){case Kusto.Language.Editor.PlacementStyle.Smart:this.AddRule$2(se.Separator,new Kusto.Language.Editor.KustoFormatter.SpacingRule(Kusto.Language.Editor.KustoFormatter.SpacingKind.NewLine,Bridge.fn.bind(this,function(){return this.SpansOrWillSpanMultipleLines(Bridge.cast(se.Element,Kusto.Language.Syntax.SyntaxNode))})));this.AddRule(se.Separator,this.IndentRule(se));break;case Kusto.Language.Editor.PlacementStyle.NewLine:this.AddRule$2(se.Separator,Kusto.Language.Editor.KustoFormatter.SpacingRule.From(Kusto.Language.Editor.KustoFormatter.SpacingKind.NewLine));this.AddRule(se.Separator,this.IndentRule(se));break}},AddQueryOperatorCommaListRules:function(list){var i,elem;if(list.Width>Kusto.Language.Editor.KustoFormatter.ArbitraryMaxCommaListWidthWidth&&!Kusto.Language.Editor.KustoFormatter.SpansMultipleLines(list))for(i=0;i<list.Count;i=i+1|0)elem=Bridge.cast(list.getItem(i),Kusto.Language.Syntax.SyntaxNode),this.AddRule$1(elem,Kusto.Language.Editor.KustoFormatter.SpacingRule.From(Kusto.Language.Editor.KustoFormatter.SpacingKind.NewLine));else this.AddListSpacingRules(list,null,list,this._options.ExpressionStyle)},AddFunctionDeclarationRules:function(fd){var letStatement=fd.Parent;this.AddBrackettingStyleRules(fd.Body.OpenBrace,fd.Body.CloseBrace,letStatement,this._options.FunctionBodyStyle,!0);this.AddListSpacingRules(fd.Body.Statements,letStatement,fd.Body,Kusto.Language.Editor.PlacementStyle.Smart);fd.Body.Expression!=null&&this.AddListElementSpacingRules(fd.Body.Expression,letStatement,fd.Body,Kusto.Language.Editor.PlacementStyle.Smart)},AddFunctionCallRules:function(fc){this.AddBrackettingStyleRules(fc.ArgumentList.OpenParen,fc.ArgumentList.CloseParen,fc.Name,this._options.FunctionArgumentStyle,!1);this.AddListSpacingRules(fc.ArgumentList.Expressions,fc.Name,fc.ArgumentList,Kusto.Language.Editor.PlacementStyle.Smart)},AddBracketExpressionRules:function(be){Bridge.is(be.Parent,Kusto.Language.Syntax.ElementExpression)&&this.AddRule$2(be.OpenBracket,Kusto.Language.Editor.KustoFormatter.SpacingRule.From(Kusto.Language.Editor.KustoFormatter.SpacingKind.NoSpaceIfOnSameLine))},AddStatementRules:function(st){var first=st.GetFirstToken(),prev,se,list;if(first!=null&&(prev=first.GetPreviousToken(),prev!=null))switch(this._options.StatementStyle){case Kusto.Language.Editor.PlacementStyle.Smart:(se=Bridge.as(st.Parent,Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)))!=null&&(list=Bridge.as(se.Parent,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement))))!=null&&this.AddRule$2(first,new Kusto.Language.Editor.KustoFormatter.SpacingRule(Kusto.Language.Editor.KustoFormatter.SpacingKind.NewLine,Bridge.fn.bind(this,function(){return this.SpansOrWillSpanMultipleLines(list,!1,first)})));break;case Kusto.Language.Editor.PlacementStyle.NewLine:this.AddRule$2(first,Kusto.Language.Editor.KustoFormatter.SpacingRule.From(Kusto.Language.Editor.KustoFormatter.SpacingKind.NewLine));break}},AddDataTableExpressionRules:function(dt){var indentRelativeTo,schemaColumns,valueColumns,i,token;if(!(dt.Width<=Kusto.Language.Editor.KustoFormatter.ArbitraryMaxSingleLineDataTableWidth)||Kusto.Language.Editor.KustoFormatter.SpansMultipleLines(dt))for(indentRelativeTo=Bridge.cast(dt.GetFirstAncestor(Kusto.Language.Syntax.Statement),Kusto.Language.Syntax.SyntaxNode)||dt,schemaColumns=dt.Schema.Columns.Count,(dt.Schema.Width>Kusto.Language.Editor.KustoFormatter.ArbitraryMaxSingleLineSchemaWidth||Kusto.Language.Editor.KustoFormatter.SpansMultipleLines(dt.Schema))&&(this.AddBrackettingStyleRules(dt.Schema.OpenParen,dt.Schema.CloseParen,indentRelativeTo,this._options.SchemaStyle,!1),this.AddListSpacingRules(dt.Schema.Columns,indentRelativeTo,dt.Schema,Kusto.Language.Editor.PlacementStyle.NewLine)),valueColumns=schemaColumns>1?schemaColumns:Kusto.Language.Editor.KustoFormatter.GetBalancedColumnCount(dt.Values),this.AddBrackettingStyleRules(dt.OpenBracket,dt.CloseBracket,indentRelativeTo,this._options.DataTableValueStyle,!1),i=0;i<dt.Values.Count;i=i+1|0)token=dt.Values.getItem$1(i).Element$1.GetFirstToken(),token!=null&&(i%valueColumns==0?(this.AddRule$2(token,Kusto.Language.Editor.KustoFormatter.SpacingRule.From(Kusto.Language.Editor.KustoFormatter.SpacingKind.NewLine)),this.AddRule(token,this.IndentRule(indentRelativeTo))):this.AddRule$2(token,Kusto.Language.Editor.KustoFormatter.SpacingRule.From(Kusto.Language.Editor.KustoFormatter.SpacingKind.SingleSpace)))},AddBrackettingStyleRules:function(open,close,alignedTo,style,injectSpace){var openSpacing,closeSpacing,next,next1;style===Kusto.Language.Editor.BrackettingStyle.Default&&(style=this._options.BrackettingStyle);switch(style){case Kusto.Language.Editor.BrackettingStyle.Default:case Kusto.Language.Editor.BrackettingStyle.Vertical:this.AddRule(open,new Kusto.Language.Editor.KustoFormatter.AlignmentRule.ctor(alignedTo));this.AddRule(close,new Kusto.Language.Editor.KustoFormatter.AlignmentRule.ctor(alignedTo));openSpacing=new Kusto.Language.Editor.KustoFormatter.SpacingRule(Kusto.Language.Editor.KustoFormatter.SpacingKind.NewLine,Bridge.fn.bind(this,function(){return this.SpansOrWillSpanMultipleLines$1(open,close,!0,open)}));closeSpacing=new Kusto.Language.Editor.KustoFormatter.SpacingRule(Kusto.Language.Editor.KustoFormatter.SpacingKind.NewLine,Bridge.fn.bind(this,function(){return this.SpansOrWillSpanMultipleLines$1(open,close,!0,close)}));injectSpace&&(openSpacing=openSpacing.Otherwise(Kusto.Language.Editor.KustoFormatter.SpacingRule.From(Kusto.Language.Editor.KustoFormatter.SpacingKind.SingleSpaceIfOnSameLine)),closeSpacing=closeSpacing.Otherwise(Kusto.Language.Editor.KustoFormatter.SpacingRule.From(Kusto.Language.Editor.KustoFormatter.SpacingKind.SingleSpaceIfOnSameLine)),next=open.GetNextToken(),next==null||Bridge.referenceEquals(next,close)||this.AddRule$2(next,Kusto.Language.Editor.KustoFormatter.SpacingRule.From(Kusto.Language.Editor.KustoFormatter.SpacingKind.SingleSpaceIfOnSameLine)));this.AddRule$2(open,openSpacing);this.AddRule$2(close,closeSpacing);break;case Kusto.Language.Editor.BrackettingStyle.Diagonal:this.AddRule(close,new Kusto.Language.Editor.KustoFormatter.AlignmentRule.ctor(alignedTo));closeSpacing=new Kusto.Language.Editor.KustoFormatter.SpacingRule(Kusto.Language.Editor.KustoFormatter.SpacingKind.NewLine,Bridge.fn.bind(this,function(){return this.SpansOrWillSpanMultipleLines$1(open,close,!0,close)}));injectSpace&&(closeSpacing=closeSpacing.Otherwise(Kusto.Language.Editor.KustoFormatter.SpacingRule.From(Kusto.Language.Editor.KustoFormatter.SpacingKind.SingleSpaceIfOnSameLine)),this.AddRule$2(open,Kusto.Language.Editor.KustoFormatter.SpacingRule.From(Kusto.Language.Editor.KustoFormatter.SpacingKind.SingleSpace)),next1=open.GetNextToken(),next1==null||Bridge.referenceEquals(next1,close)||this.AddRule$2(next1,Kusto.Language.Editor.KustoFormatter.SpacingRule.From(Kusto.Language.Editor.KustoFormatter.SpacingKind.SingleSpaceIfOnSameLine)));this.AddRule$2(close,closeSpacing);break}},AddListSpacingRules:function(list,indentRelativeTo,newLineTrigger,style){var $t,element;$t=Bridge.getEnumerator(list);try{while($t.moveNext())element=$t.Current,this.AddListElementSpacingRules(element,indentRelativeTo,newLineTrigger,style)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}},AddListElementSpacingRules:function(element,indentRelativeTo,newLineTrigger,style){var firstToken=element.GetFirstToken();indentRelativeTo!=null&&this.AddRule(firstToken,this.IndentRule(indentRelativeTo));switch(style){case Kusto.Language.Editor.PlacementStyle.NewLine:this.AddRule$2(firstToken,Kusto.Language.Editor.KustoFormatter.SpacingRule.From(Kusto.Language.Editor.KustoFormatter.SpacingKind.NewLine));break;case Kusto.Language.Editor.PlacementStyle.Smart:this.AddRule$2(firstToken,new Kusto.Language.Editor.KustoFormatter.SpacingRule(Kusto.Language.Editor.KustoFormatter.SpacingKind.NewLine,Bridge.fn.bind(this,function(){return this.SpansOrWillSpanMultipleLines(newLineTrigger,!0,firstToken)})));break}},IndentRule:function(relativeTo){return relativeTo===void 0&&(relativeTo=null),new Kusto.Language.Editor.KustoFormatter.AlignmentRule.ctor(relativeTo,this._options.IndentationSize)},AddRule$1:function(node,rule){node!=null&&this.AddRule$2(node.GetFirstToken(),rule)},AddRule$2:function(token,rule){if(token!=null){var existingRule={};this._spacingRules.tryGetValue(token,existingRule)&&(rule=rule.Otherwise(existingRule.v));this._spacingRules.setItem(token,rule)}},AddRule:function(element,rule){element!=null&&this._alignmentRules.setItem(element,rule)},SpansOrWillSpanMultipleLines$1:function(first,last,inclusive,excluded){return(inclusive===void 0&&(inclusive=!1),excluded===void 0&&(excluded=null),Kusto.Language.Editor.KustoFormatter.SpansMultipleLines$1(first,last,inclusive,excluded))?!0:this.WillSpanMultipleLines$1(first,last,inclusive,excluded)},SpansOrWillSpanMultipleLines:function(node,inclusive,excluded){return(inclusive===void 0&&(inclusive=!1),excluded===void 0&&(excluded=null),Kusto.Language.Editor.KustoFormatter.SpansMultipleLines(node,inclusive,excluded))?!0:this.WillSpanMultipleLines(node,inclusive,excluded)},WillSpanMultipleLines$1:function(first,last,inclusive,excluded){if(inclusive===void 0&&(inclusive=!1),excluded===void 0&&(excluded=null),first!=null&&last!=null){if(inclusive&&!Bridge.referenceEquals(first,excluded)&&this.WillHaveLineBreak(first))return!0;for(var token=first.GetNextToken();token!=null;){if(!Bridge.referenceEquals(token,excluded)&&this.WillHaveLineBreak(token))return!0;if(Bridge.referenceEquals(token,last))break;token=token.GetNextToken()}}return!1},WillSpanMultipleLines:function(node,inclusive,excluded){if(inclusive===void 0&&(inclusive=!1),excluded===void 0&&(excluded=null),node!=null){var first=node.GetFirstToken(),last=node.GetLastToken();return this.WillSpanMultipleLines$1(first,last,inclusive,excluded)}return!1},WillHaveLineBreak:function(token){return Kusto.Language.Parsing.TextFacts.HasLineBreaks(token.Trivia)?!this.WillHaveLineBreakRemoved(token):this.WillHaveLineBreakAdded(token)},WillHaveLineBreakAdded:function(token){var s={};return this._spacingRules.tryGetValue(token,s)?s.v.GetKind()===Kusto.Language.Editor.KustoFormatter.SpacingKind.NewLine:!1},WillHaveLineBreakRemoved:function(token){var s={},kind;return this._spacingRules.tryGetValue(token,s)?(kind=s.v.GetKind(),kind===Kusto.Language.Editor.KustoFormatter.SpacingKind.NoSpace||kind===Kusto.Language.Editor.KustoFormatter.SpacingKind.SingleSpace):!1}}});Bridge.define("Kusto.Language.Editor.KustoFormatter.AlignmentRule",{$kind:"nested class",props:{RelativeToElement:null,IndentationDelta:0},ctors:{ctor:function(relativeTo,indentationDelta){indentationDelta===void 0&&(indentationDelta=0);this.$initialize();this.RelativeToElement=relativeTo;this.IndentationDelta=indentationDelta},$ctor1:function(indentationDelta){Kusto.Language.Editor.KustoFormatter.AlignmentRule.ctor.call(this,null,indentationDelta)}}});Bridge.define("Kusto.Language.Editor.KustoFormatter.ComputationState",{$kind:"nested enum",statics:{fields:{Uncomputed:0,Computing:1,Computed:2}}});Bridge.define("Kusto.Language.Editor.KustoFormatter.SpacingKind",{$kind:"nested enum",statics:{fields:{Unknown:0,AsIs:2,AlignOnly:4,NoSpace:8,NoSpaceIfOnSameLine:16,SingleSpace:32,SingleSpaceIfOnSameLine:64,NewLine:128}},$flags:!0});Bridge.define("Kusto.Language.Editor.KustoFormatter.SpacingRule",{$kind:"nested class",statics:{fields:{s_spacings:null},ctors:{ctor:function(){var nSpacings=129,i;for(Kusto.Language.Editor.KustoFormatter.SpacingRule.s_spacings=System.Array.init(nSpacings,null,Kusto.Language.Editor.KustoFormatter.SpacingRule),i=0;i<nSpacings;i=i+1|0)Kusto.Language.Editor.KustoFormatter.SpacingRule.s_spacings[System.Array.index(i,Kusto.Language.Editor.KustoFormatter.SpacingRule.s_spacings)]=new Kusto.Language.Editor.KustoFormatter.SpacingRule(i,null,null)}},methods:{From:function(kind){return Kusto.Language.Editor.KustoFormatter.SpacingRule.s_spacings[System.Array.index(kind,Kusto.Language.Editor.KustoFormatter.SpacingRule.s_spacings)]}}},fields:{_kind:0,_otherwise:null,_condition:null,_computeState:0,_computedKind:0},ctors:{ctor:function(kind,condition,otherwise){otherwise===void 0&&(otherwise=null);this.$initialize();this._kind=kind;this._otherwise=otherwise;this._condition=condition}},methods:{GetKind:function(){if(Bridge.staticEquals(this._condition,null))return this._kind;switch(this._computeState){case Kusto.Language.Editor.KustoFormatter.ComputationState.Computing:return this.GetPossibleKinds();case Kusto.Language.Editor.KustoFormatter.ComputationState.Uncomputed:this._computeState=Kusto.Language.Editor.KustoFormatter.ComputationState.Computing;this._computedKind=this._condition()?this._kind:this._otherwise!=null?this._otherwise.GetKind():Kusto.Language.Editor.KustoFormatter.SpacingKind.AlignOnly;this._computeState=Kusto.Language.Editor.KustoFormatter.ComputationState.Computed;break}return this._computedKind},GetPossibleKinds:function(){return Bridge.staticEquals(this._condition,null)?this._kind:this._otherwise!=null?this._kind|this._otherwise.GetPossibleKinds():this._kind|Kusto.Language.Editor.KustoFormatter.SpacingKind.AlignOnly},Otherwise:function(rule){return Bridge.staticEquals(this._condition,null)?this:this._otherwise==null?new Kusto.Language.Editor.KustoFormatter.SpacingRule(this._kind,this._condition,rule):Bridge.staticEquals(this._otherwise._condition,null)&&!Bridge.staticEquals(rule._condition,null)?new Kusto.Language.Editor.KustoFormatter.SpacingRule(this._kind,this._condition,rule.Otherwise(this._otherwise)):new Kusto.Language.Editor.KustoFormatter.SpacingRule(this._kind,this._condition,this._otherwise.Otherwise(rule))}}});Bridge.define("Kusto.Language.Editor.KustoOutliner",{statics:{methods:{GetOutlines:function(code,options){var outlines=new(System.Collections.Generic.List$1(Kusto.Language.Editor.OutlineRange).ctor);return options.Queries&&Kusto.Language.Editor.KustoOutliner.AddRootOutline(code,options,outlines),options.Statements&&code.Syntax.WalkNodes(function(node){var s;(s=Bridge.as(node,Kusto.Language.Syntax.Statement))!=null&&Kusto.Language.Editor.KustoOutliner.AddStatementOutline(code,s,options,outlines)}),new Kusto.Language.Editor.OutlineInfo(outlines)},OnSameLine:function(code,a,b){var _discard1={},_discard2={},lineA={},lineB={};return code.TryGetLineAndOffset(a.TextStart,lineA,_discard1)&&code.TryGetLineAndOffset(b.TextStart,lineB,_discard2)&&lineA.v===lineB.v},AddRootOutline:function(code,options,outlines){var collapsedText={},length;Kusto.Language.Editor.KustoOutliner.TryGetRootCollapsedText(code,options,collapsedText)&&(length=Kusto.Language.Parsing.TextFacts.TrimEnd$1(code.Text,0,code.Text.length),outlines.add(new Kusto.Language.Editor.OutlineRange(0,length,collapsedText.v)))},TryGetRootCollapsedText:function(code,options,collapsedText){return Kusto.Language.Editor.KustoOutliner.TryGetCollapsedText(code,0,code.Text.length,options,collapsedText)},TryGetCollapsedText:function(code,start,length,options,collapsedText){for(var len,newText,builder=new System.Text.StringBuilder,braces=!1,end=start+length|0,token=code.Syntax.GetTokenAt(start);token!=null&&token.TextStart<end;token=token.GetNextToken()){if(Bridge.referenceEquals(token.Text,"{")){braces=!0;break}else if(Bridge.referenceEquals(token.Text,"|")||Bridge.referenceEquals(token.Text,";"))break;if(token.Trivia.length>0&&token.TriviaStart>=start&&(builder.getLength()===0&&token.Trivia.length>0?(len=Math.min(token.Trivia.length,options.MaxCollapsedTextLength),builder.append(token.Trivia,0,len)):token.Text.length>0&&builder.append(" ")),(builder.getLength()+token.Text.length|0)<=options.MaxCollapsedTextLength)builder.append(token.Text);else break}return newText=builder.toString(),Kusto.Language.Parsing.TextFacts.IsWhitespaceOnly(newText)?(collapsedText.v=null,!1):(collapsedText.v=braces?(newText||"")+" { ... }":(newText||"")+" ...",!0)},AddStatementOutline:function(code,statement,options,outlines){var firstToken=statement.GetFirstToken(),lastToken=statement.GetLastToken(),collapsedText;firstToken==null||lastToken==null||Kusto.Language.Editor.KustoOutliner.OnSameLine(code,firstToken,lastToken)||(collapsedText={},Kusto.Language.Editor.KustoOutliner.TryGetCollapsedText(code,firstToken.TextStart,lastToken.End-firstToken.TextStart|0,options,collapsedText)&&outlines.add(new Kusto.Language.Editor.OutlineRange(firstToken.TextStart,lastToken.End-firstToken.TextStart|0,collapsedText.v)))}}}});Bridge.define("Kusto.Language.Editor.KustoQualifier",{statics:{methods:{FullyQualify:function(query,globals){return Kusto.Language.Editor.KustoQualifier.Requalify(query,globals,null,null)},MinimallyQualify:function(query,globals){return Kusto.Language.Editor.KustoQualifier.Requalify(query,globals,globals.Cluster,globals.Database)},Requalify:function(text,globals,newCluster,newDatabase){if(!Bridge.referenceEquals(Kusto.Language.KustoCode.GetKind(text),Kusto.Language.Editor.CodeKinds.Query))return text;var code=Kusto.Language.KustoCode.ParseAndAnalyze(text,globals);return Kusto.Language.Editor.EditString.op_Implicit$1(Kusto.Language.Editor.KustoQualifier.Requalify$1(Kusto.Language.Editor.EditString.op_Implicit(text),code.Syntax,globals,newCluster,newDatabase))},Requalify$1:function(text,root,globals,cluster,database){var $t,$t1,$t2,$t3,edits=new(System.Collections.Generic.List$1(Kusto.Language.Editor.TextEdit).ctor),entityExpressions=root.GetDescendants(Kusto.Language.Syntax.Expression,function(n){return Bridge.referenceEquals(Kusto.Language.Editor.ActorUtilities.GetEntityExpression(n,globals),n)}),entity,groupPart,entityCluster;$t=Bridge.getEnumerator(entityExpressions,Kusto.Language.Syntax.Expression);try{while($t.moveNext())if(entity=$t.Current,groupPart=Kusto.Language.Editor.ActorUtilities.GetEntityExpressionEntityGroupElementPart(entity),groupPart==null){var clusterPart=Kusto.Language.Editor.ActorUtilities.GetEntityExpressionClusterPart(entity),databasePart=Kusto.Language.Editor.ActorUtilities.GetEntityExpressionDatabasePart(entity),entityPart=Kusto.Language.Editor.ActorUtilities.GetEntityExpressionEntityPart(entity,globals),entityPartStart=entityPart!=null?entityPart.TextStart:entity.End,entitySymbol=Kusto.Language.Editor.ActorUtilities.GetEntityReference(entityPart),entityDatabase=databasePart!=null?Bridge.as(databasePart.ResultType,Kusto.Language.Symbols.DatabaseSymbol):entitySymbol==null?globals.Database:globals.GetDatabase$2(entitySymbol);if(entityDatabase!=null&&Bridge.referenceEquals(entityDatabase.Name,"")&&(entityDatabase=null),entityCluster=clusterPart!=null?Bridge.as(clusterPart.ResultType,Kusto.Language.Symbols.ClusterSymbol):entityDatabase==null?databasePart!=null?globals.Cluster:null:globals.GetCluster(entityDatabase),entityCluster!=null&&Bridge.referenceEquals(entityCluster.Name,"")&&(entityCluster=null),Bridge.referenceEquals(entityCluster,cluster)&&Bridge.referenceEquals(entityDatabase,database)&&cluster!=null&&database!=null&&entityPart!=null)edits.add(Kusto.Language.Editor.TextEdit.Deletion(entity.TextStart,entityPartStart-entity.TextStart|0));else if(Bridge.referenceEquals(entityCluster,cluster)&&cluster!=null){var dbQualifier=($t1=Kusto.Language.Editor.KustoQualifier.GetDatabaseQualifier(databasePart,entityDatabase),$t1!=null?$t1:""),entityText=entityPart!=null?entityPart.ToString(Kusto.Language.Syntax.IncludeTrivia.Interior):"",replacementText=Kusto.Language.Editor.KustoQualifier.JoinPath([dbQualifier,entityText]);edits.add(Kusto.Language.Editor.TextEdit.Replacement(entity.TextStart,entity.Width,replacementText))}else{var dbQualifier1=($t2=Kusto.Language.Editor.KustoQualifier.GetDatabaseQualifier(databasePart,entityDatabase),$t2!=null?$t2:""),clusterQualifier=($t3=Kusto.Language.Editor.KustoQualifier.GetClusterQualifier(clusterPart,entityCluster),$t3!=null?$t3:""),entityText1=entityPart!=null?entityPart.ToString(Kusto.Language.Syntax.IncludeTrivia.Interior):"",replacementText1=Kusto.Language.Editor.KustoQualifier.JoinPath([clusterQualifier,dbQualifier1,entityText1]);edits.add(Kusto.Language.Editor.TextEdit.Replacement(entity.TextStart,entity.Width,replacementText1))}}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return text.ApplyAll$1(edits)},JoinPath:function(elements){var $t,builder,element;elements===void 0&&(elements=[]);builder=new System.Text.StringBuilder;$t=Bridge.getEnumerator(elements);try{while($t.moveNext())element=$t.Current,System.String.isNullOrWhiteSpace(element)||(builder.getLength()>0&&builder.append("."),builder.append(element))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return builder.toString()},GetDatabaseQualifier:function(dbPart,entityDatabase){if(dbPart!=null)return dbPart.ToString(Kusto.Language.Syntax.IncludeTrivia.Interior);if(entityDatabase!=null){var dbName=entityDatabase.AlternateName.length>0?entityDatabase.AlternateName:entityDatabase.Name,dbNameLiteral=Kusto.Language.KustoFacts.GetSingleQuotedStringLiteral(dbName);return System.String.format("database({0})",[dbNameLiteral])}return null},GetClusterQualifier:function(clusterPart,entityCluster){if(clusterPart!=null)return clusterPart.ToString(Kusto.Language.Syntax.IncludeTrivia.Interior);if(entityCluster!=null){var clusterNameLiteral=Kusto.Language.KustoFacts.GetSingleQuotedStringLiteral(entityCluster.Name);return System.String.format("cluster({0})",[clusterNameLiteral])}return null}}}});Bridge.define("Kusto.Language.Editor.KustoQuickInfoBuilder",{statics:{fields:{MaxColumns:0},ctors:{init:function(){this.MaxColumns=7}},methods:{GetQuickInfoKind:function(severity){switch(severity){case Kusto.Language.DiagnosticSeverity.Error:return Kusto.Language.Editor.QuickInfoKind.Error;case Kusto.Language.DiagnosticSeverity.Warning:return Kusto.Language.Editor.QuickInfoKind.Warning;case Kusto.Language.DiagnosticSeverity.Suggestion:return Kusto.Language.Editor.QuickInfoKind.Suggestion;default:return Kusto.Language.Editor.QuickInfoKind.Text}},GetDescription:function(symbol){var t,c,p,f,o,eg,eges;do return Bridge.is(symbol,Kusto.Language.Symbols.TableSymbol)?(t=Bridge.cast(symbol,Kusto.Language.Symbols.TableSymbol),t.Description):Bridge.is(symbol,Kusto.Language.Symbols.ColumnSymbol)?(c=Bridge.cast(symbol,Kusto.Language.Symbols.ColumnSymbol),c.Description):Bridge.is(symbol,Kusto.Language.Symbols.ParameterSymbol)?(p=Bridge.cast(symbol,Kusto.Language.Symbols.ParameterSymbol),p.Description):Bridge.is(symbol,Kusto.Language.Symbols.FunctionSymbol)?(f=Bridge.cast(symbol,Kusto.Language.Symbols.FunctionSymbol),f.Description):Bridge.is(symbol,Kusto.Language.Symbols.OptionSymbol)?(o=Bridge.cast(symbol,Kusto.Language.Symbols.OptionSymbol),o.Description):Bridge.is(symbol,Kusto.Language.Symbols.EntityGroupSymbol)?(eg=Bridge.cast(symbol,Kusto.Language.Symbols.EntityGroupSymbol),"Entity Group"):Bridge.is(symbol,Kusto.Language.Symbols.EntityGroupElementSymbol)?(eges=Bridge.cast(symbol,Kusto.Language.Symbols.EntityGroupElementSymbol),Kusto.Language.Editor.KustoQuickInfoBuilder.GetDescription(eges.UnderlyingSymbol)):"";while(0)},GetNameClassificationKind:function(symbol){var _discard12,_discard13,_discard14,_discard15,_discard16,_discard17,_discard18,_discard19,_discard20,_discard21,eges,s;do return Bridge.is(symbol,Kusto.Language.Symbols.ColumnSymbol)?(_discard12=Bridge.cast(symbol,Kusto.Language.Symbols.ColumnSymbol),Kusto.Language.Editor.ClassificationKind.Column):Bridge.is(symbol,Kusto.Language.Symbols.DatabaseSymbol)?(_discard13=Bridge.cast(symbol,Kusto.Language.Symbols.DatabaseSymbol),Kusto.Language.Editor.ClassificationKind.Database):Bridge.is(symbol,Kusto.Language.Symbols.FunctionSymbol)?(_discard14=Bridge.cast(symbol,Kusto.Language.Symbols.FunctionSymbol),Kusto.Language.Editor.ClassificationKind.Function):Bridge.is(symbol,Kusto.Language.Symbols.OperatorSymbol)?(_discard15=Bridge.cast(symbol,Kusto.Language.Symbols.OperatorSymbol),Kusto.Language.Editor.ClassificationKind.MathOperator):Bridge.is(symbol,Kusto.Language.Symbols.ParameterSymbol)?(_discard16=Bridge.cast(symbol,Kusto.Language.Symbols.ParameterSymbol),Kusto.Language.Editor.ClassificationKind.Parameter):Bridge.is(symbol,Kusto.Language.Symbols.PatternSymbol)?(_discard17=Bridge.cast(symbol,Kusto.Language.Symbols.PatternSymbol),Kusto.Language.Editor.ClassificationKind.Function):Bridge.is(symbol,Kusto.Language.Symbols.TableSymbol)?(_discard18=Bridge.cast(symbol,Kusto.Language.Symbols.TableSymbol),Kusto.Language.Editor.ClassificationKind.Table):Bridge.is(symbol,Kusto.Language.Symbols.VariableSymbol)?(_discard19=Bridge.cast(symbol,Kusto.Language.Symbols.VariableSymbol),Kusto.Language.Editor.ClassificationKind.Variable):Bridge.is(symbol,Kusto.Language.Symbols.CommandSymbol)?(_discard20=Bridge.cast(symbol,Kusto.Language.Symbols.CommandSymbol),Kusto.Language.Editor.ClassificationKind.Command):Bridge.is(symbol,Kusto.Language.Symbols.OptionSymbol)?(_discard21=Bridge.cast(symbol,Kusto.Language.Symbols.OptionSymbol),Kusto.Language.Editor.ClassificationKind.Option):Bridge.is(symbol,Kusto.Language.Symbols.EntityGroupElementSymbol)?(eges=Bridge.cast(symbol,Kusto.Language.Symbols.EntityGroupElementSymbol),Kusto.Language.Editor.KustoQuickInfoBuilder.GetNameClassificationKind(eges.UnderlyingSymbol)):Bridge.is(symbol,Kusto.Language.Symbols.ScalarSymbol)?(s=Bridge.cast(symbol,Kusto.Language.Symbols.ScalarSymbol),Bridge.referenceEquals(s,Kusto.Language.Symbols.ScalarTypes.String)?Kusto.Language.Editor.ClassificationKind.StringLiteral:Kusto.Language.Editor.ClassificationKind.Literal):Kusto.Language.Editor.ClassificationKind.PlainText;while(0)},GetSignatureDisplay:function(sig,texts){var i,p;for(texts.add(new Kusto.Language.Editor.ClassifiedText.ctor(Kusto.Language.Editor.ClassificationKind.Punctuation,"(")),i=0;i<System.Array.getCount(sig.Parameters,Kusto.Language.Symbols.Parameter);i=i+1|0)i>0&&texts.add(new Kusto.Language.Editor.ClassifiedText.ctor(Kusto.Language.Editor.ClassificationKind.Punctuation,", ")),p=System.Array.getItem(sig.Parameters,i,Kusto.Language.Symbols.Parameter),p.IsOptional?(texts.add(new Kusto.Language.Editor.ClassifiedText.ctor(Kusto.Language.Editor.ClassificationKind.Punctuation,"[")),texts.add(new Kusto.Language.Editor.ClassifiedText.ctor(Kusto.Language.Editor.ClassificationKind.SignatureParameter,p.Name)),texts.add(new Kusto.Language.Editor.ClassifiedText.ctor(Kusto.Language.Editor.ClassificationKind.Punctuation,"]"))):texts.add(new Kusto.Language.Editor.ClassifiedText.ctor(Kusto.Language.Editor.ClassificationKind.SignatureParameter,p.Name));sig.HasRepeatableParameters&&(texts.add(new Kusto.Language.Editor.ClassifiedText.ctor(Kusto.Language.Editor.ClassificationKind.Punctuation,", ")),texts.add(new Kusto.Language.Editor.ClassifiedText.ctor(Kusto.Language.Editor.ClassificationKind.Punctuation,"...")));texts.add(new Kusto.Language.Editor.ClassifiedText.ctor(Kusto.Language.Editor.ClassificationKind.Punctuation,")"))},GetTypeText:function(symbol){var builder=new System.Text.StringBuilder;return Kusto.Language.Editor.KustoQuickInfoBuilder.GetTypeText$1(symbol,builder,!1),builder.toString()},GetTypeText$1:function(type,builder,nested){var ts,tus,cs,db,gs,eges,dbag,darray,dprim;do{if(Bridge.is(type,Kusto.Language.Symbols.TableSymbol)){ts=Bridge.cast(type,Kusto.Language.Symbols.TableSymbol);builder.append("table(");Kusto.Language.Editor.KustoQuickInfoBuilder.GetTypeSchemaText(ts.Columns,builder);builder.append(")");break}if(Bridge.is(type,Kusto.Language.Symbols.TupleSymbol)){tus=Bridge.cast(type,Kusto.Language.Symbols.TupleSymbol);builder.append("tuple(");Kusto.Language.Editor.KustoQuickInfoBuilder.GetTypeSchemaText(tus.Columns,builder);builder.append(")");break}if(Bridge.is(type,Kusto.Language.Symbols.ClusterSymbol)){cs=Bridge.cast(type,Kusto.Language.Symbols.ClusterSymbol);builder.append(System.String.format("cluster({0})",[Kusto.Language.KustoFacts.GetSingleQuotedStringLiteral(cs.Name)]));break}if(Bridge.is(type,Kusto.Language.Symbols.DatabaseSymbol)){db=Bridge.cast(type,Kusto.Language.Symbols.DatabaseSymbol);builder.append(System.String.format("database({0})",[Kusto.Language.KustoFacts.GetSingleQuotedStringLiteral(db.Name)]));break}if(Bridge.is(type,Kusto.Language.Symbols.GraphSymbol)){gs=Bridge.cast(type,Kusto.Language.Symbols.GraphSymbol);builder.append("graph(");builder.append("edge(");Kusto.Language.Editor.KustoQuickInfoBuilder.GetTypeSchemaText(gs.EdgeShape.Columns,builder);builder.append(")");gs.NodeShape!=null&&(builder.append(", "),builder.append("node("),Kusto.Language.Editor.KustoQuickInfoBuilder.GetTypeSchemaText(gs.NodeShape.Columns,builder),builder.append(")"));builder.append(")");break}if(Bridge.is(type,Kusto.Language.Symbols.EntityGroupElementSymbol)){eges=Bridge.cast(type,Kusto.Language.Symbols.EntityGroupElementSymbol);Kusto.Language.Editor.KustoQuickInfoBuilder.GetTypeText$1(eges.UnderlyingSymbol,builder,!1);break}if(Bridge.is(type,Kusto.Language.Symbols.DynamicBagSymbol)){dbag=Bridge.cast(type,Kusto.Language.Symbols.DynamicBagSymbol);nested||builder.append("dynamic(");builder.append("bag(");Kusto.Language.Editor.KustoQuickInfoBuilder.GetTypeSchemaText(dbag.Properties,builder);builder.append(")");nested||builder.append(")");break}if(Bridge.is(type,Kusto.Language.Symbols.DynamicArraySymbol)){darray=Bridge.cast(type,Kusto.Language.Symbols.DynamicArraySymbol);nested||builder.append("dynamic(");builder.append("array(");Kusto.Language.Editor.KustoQuickInfoBuilder.GetTypeText$1(darray.ElementType,builder,!0);builder.append(")");nested||builder.append(")");break}if(Bridge.is(type,Kusto.Language.Symbols.DynamicPrimitiveSymbol)){dprim=Bridge.cast(type,Kusto.Language.Symbols.DynamicPrimitiveSymbol);nested||builder.append("dynamic(");Kusto.Language.Editor.KustoQuickInfoBuilder.GetTypeText$1(dprim.UnderlyingType,builder,!0);nested||builder.append(")");break}type!=null&&builder.append(type.Name);break}while(0)},GetTypeSchemaText:function(columns,builder){for(var maxCol=Math.min(Kusto.Language.Editor.KustoQuickInfoBuilder.MaxColumns,System.Array.getCount(columns,Kusto.Language.Symbols.ColumnSymbol)),i=0;i<maxCol;i=i+1|0)i>0&&builder.append(", "),builder.append(System.Array.getItem(columns,i,Kusto.Language.Symbols.ColumnSymbol).Name);maxCol<System.Array.getCount(columns,Kusto.Language.Symbols.ColumnSymbol)&&builder.append(", ...")}}},fields:{_service:null,_code:null,_options:null},ctors:{ctor:function(service,code,options){this.$initialize();this._service=service;this._code=code;this._options=options}},methods:{GetQuickInfo:function(position,cancellationToken){if(this._code.HasSemantics){var symbolInfo=this.GetSymbolInfo$1(position)||this.GetSyntaxInfo(position),diagnosticInfo=this._options.ShowDiagnostics?this.GetDiagnosticInfo(position,cancellationToken):null;if(symbolInfo!=null)return diagnosticInfo!=null?new Kusto.Language.Editor.QuickInfo.ctor([symbolInfo,diagnosticInfo]):new Kusto.Language.Editor.QuickInfo.ctor([symbolInfo]);else if(diagnosticInfo!=null)return new Kusto.Language.Editor.QuickInfo.ctor([diagnosticInfo])}return Kusto.Language.Editor.QuickInfo.Empty},GetSymbolInfo$1:function(position){var token=Kusto.Language.Editor.KustoServiceHelpers.GetTokenWithAffinity(this._code,position),node,expr,bn,bne,fc;if(token!=null&&position>=token.TextStart&&(node=token.Parent)!=null)if((expr=node.GetFirstAncestorOrSelf(Kusto.Language.Syntax.Expression))!=null)return(bn=Bridge.as(expr.Parent,Kusto.Language.Syntax.BracketedName))!=null&&(bne=Bridge.as(bn.Parent,Kusto.Language.Syntax.Expression))!=null&&(expr=bne),(fc=Bridge.as(expr.Parent,Kusto.Language.Syntax.FunctionCallExpression))!=null&&(expr=fc),expr.IsLiteral&&expr.ResultType!=null&&expr.ResultType.IsScalar?this.GetSymbolInfo(expr.ResultType,null,expr.ResultType,expr.ConstantValueInfo,Kusto.Language.Editor.QuickInfoKind.Literal):this.GetSymbolInfo(expr.ReferencedSymbol,expr.ReferencedSignature,expr.ResultType,expr.ConstantValueInfo);else if(node.ReferencedSymbol!=null)return this.GetSymbolInfo(node.ReferencedSymbol,null,null,null);return null},GetSymbolInfo:function(symbol,signature,type,value,itemKind){if(itemKind===void 0&&(itemKind=null),symbol!=null){var texts=new(System.Collections.Generic.List$1(Kusto.Language.Editor.ClassifiedText).ctor);return this.GetSymbolDisplayText(symbol,signature,type,value,texts),itemKind==null&&(itemKind=this.GetItemKind(symbol)),new Kusto.Language.Editor.QuickInfoItem.$ctor1(System.Nullable.getValue(itemKind),texts)}else return null},GetItemKind:function(symbol){var _discard1,_discard2,_discard3,f,_discard4,_discard5,_discard6,_discard7,v,_discard8,_discard9,_discard10,_discard11,gs;do return Bridge.is(symbol,Kusto.Language.Symbols.ClusterSymbol)?(_discard1=Bridge.cast(symbol,Kusto.Language.Symbols.ClusterSymbol),Kusto.Language.Editor.QuickInfoKind.Cluster):Bridge.is(symbol,Kusto.Language.Symbols.ColumnSymbol)?(_discard2=Bridge.cast(symbol,Kusto.Language.Symbols.ColumnSymbol),Kusto.Language.Editor.QuickInfoKind.Column):Bridge.is(symbol,Kusto.Language.Symbols.DatabaseSymbol)?(_discard3=Bridge.cast(symbol,Kusto.Language.Symbols.DatabaseSymbol),Kusto.Language.Editor.QuickInfoKind.Database):Bridge.is(symbol,Kusto.Language.Symbols.FunctionSymbol)?(f=Bridge.cast(symbol,Kusto.Language.Symbols.FunctionSymbol),this._code.Globals.IsBuiltInFunction(f)?Kusto.Language.Editor.QuickInfoKind.BuiltInFunction:this._code.Globals.IsDatabaseFunction(f)?Kusto.Language.Editor.QuickInfoKind.DatabaseFunction:Kusto.Language.Editor.QuickInfoKind.LocalFunction):Bridge.is(symbol,Kusto.Language.Symbols.OperatorSymbol)?(_discard4=Bridge.cast(symbol,Kusto.Language.Symbols.OperatorSymbol),Kusto.Language.Editor.QuickInfoKind.Operator):Bridge.is(symbol,Kusto.Language.Symbols.ParameterSymbol)?(_discard5=Bridge.cast(symbol,Kusto.Language.Symbols.ParameterSymbol),Kusto.Language.Editor.QuickInfoKind.Parameter):Bridge.is(symbol,Kusto.Language.Symbols.PatternSymbol)?(_discard6=Bridge.cast(symbol,Kusto.Language.Symbols.PatternSymbol),Kusto.Language.Editor.QuickInfoKind.Pattern):Bridge.is(symbol,Kusto.Language.Symbols.TableSymbol)?(_discard7=Bridge.cast(symbol,Kusto.Language.Symbols.TableSymbol),Kusto.Language.Editor.QuickInfoKind.Table):Bridge.is(symbol,Kusto.Language.Symbols.VariableSymbol)?(v=Bridge.cast(symbol,Kusto.Language.Symbols.VariableSymbol),Bridge.is(v.Type,Kusto.Language.Symbols.FunctionSymbol)||Bridge.is(v.Type,Kusto.Language.Symbols.PatternSymbol)||Bridge.is(v.Type,Kusto.Language.Symbols.TableSymbol)||Bridge.is(v.Type,Kusto.Language.Symbols.GraphSymbol)||Bridge.is(v.Type,Kusto.Language.Symbols.ScalarSymbol)?this.GetItemKind(v.Type):Kusto.Language.Editor.QuickInfoKind.Variable):Bridge.is(symbol,Kusto.Language.Symbols.ScalarSymbol)?(_discard8=Bridge.cast(symbol,Kusto.Language.Symbols.ScalarSymbol),Kusto.Language.Editor.QuickInfoKind.Type):Bridge.is(symbol,Kusto.Language.Symbols.CommandSymbol)?(_discard9=Bridge.cast(symbol,Kusto.Language.Symbols.CommandSymbol),Kusto.Language.Editor.QuickInfoKind.Command):Bridge.is(symbol,Kusto.Language.Symbols.OptionSymbol)?(_discard10=Bridge.cast(symbol,Kusto.Language.Symbols.OptionSymbol),Kusto.Language.Editor.QuickInfoKind.Option):Bridge.is(symbol,Kusto.Language.Symbols.GraphSymbol)?(_discard11=Bridge.cast(symbol,Kusto.Language.Symbols.GraphSymbol),Kusto.Language.Editor.QuickInfoKind.Graph):Bridge.is(symbol,Kusto.Language.Symbols.GroupSymbol)?(gs=Bridge.cast(symbol,Kusto.Language.Symbols.GroupSymbol),System.Array.getCount(gs.Members,Kusto.Language.Symbols.Symbol)>0)?this.GetItemKind(System.Array.getItem(gs.Members,0,Kusto.Language.Symbols.Symbol)):Kusto.Language.Editor.QuickInfoKind.Text:Kusto.Language.Editor.QuickInfoKind.Text;while(0)},GetSyntaxInfo:function(position){return null},GetDiagnosticInfo:function(position,cancellationToken){var $t,diagnostics=this._service.GetCombinedDiagnostics(!1,this._options.DiagnosticFilter,cancellationToken),bestDx=null,d,end;$t=Bridge.getEnumerator(diagnostics,Kusto.Language.Diagnostic);try{while($t.moveNext())d=$t.Current,end=d.End>d.Start?d.End:d.End+1|0,position>=d.Start&&position<end&&(bestDx==null||d.Start>bestDx.Start)&&(bestDx=d)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return bestDx!=null?new Kusto.Language.Editor.QuickInfoItem.$ctor2(Kusto.Language.Editor.KustoQuickInfoBuilder.GetQuickInfoKind(bestDx.Severity),bestDx.Message):null},GetSymbolDisplayText:function(symbol,signature,returnType,value,texts){var gs,lines,i,subsym,v,nameKind,fs,vs,kind,text,description;if((gs=Bridge.as(symbol,Kusto.Language.Symbols.GroupSymbol))!=null){for(lines=Math.min(System.Array.getCount(gs.Members,Kusto.Language.Symbols.Symbol),5),i=0;i<lines;i=i+1|0)subsym=System.Array.getItem(gs.Members,i,Kusto.Language.Symbols.Symbol),i>0&&texts.add(new Kusto.Language.Editor.ClassifiedText.$ctor1("\n")),this.GetSymbolDisplayText(subsym,null,null,null,texts);lines<System.Array.getCount(gs.Members,Kusto.Language.Symbols.Symbol)&&texts.add(new Kusto.Language.Editor.ClassifiedText.$ctor1(System.String.format("\n+ ({0}) additional",[Bridge.box(System.Array.getCount(gs.Members,Kusto.Language.Symbols.Symbol)-lines|0,System.Int32)])))}else Bridge.is(symbol,Kusto.Language.Symbols.ScalarSymbol)?texts.add(new Kusto.Language.Editor.ClassifiedText.ctor(Kusto.Language.Editor.ClassificationKind.Identifier,symbol.Name)):(v=Bridge.as(symbol,Kusto.Language.Symbols.VariableSymbol))!=null&&(Bridge.is(v.Type,Kusto.Language.Symbols.FunctionSymbol)||Bridge.is(v.Type,Kusto.Language.Symbols.PatternSymbol))?this.GetSymbolDisplayText(v.Type,null,returnType,value,texts):symbol!=null&&(nameKind=Kusto.Language.Editor.KustoQuickInfoBuilder.GetNameClassificationKind(symbol),texts.add(new Kusto.Language.Editor.ClassifiedText.ctor(nameKind,symbol.Name)),(fs=Bridge.as(symbol,Kusto.Language.Symbols.FunctionSymbol))!=null&&Kusto.Language.Editor.KustoQuickInfoBuilder.GetSignatureDisplay(signature||System.Array.getItem(fs.Signatures,0,Kusto.Language.Symbols.Signature),texts),returnType==null&&(vs=Bridge.as(symbol,Kusto.Language.Symbols.VariableSymbol))!=null&&(returnType=vs.Type),returnType==null||Bridge.referenceEquals(returnType,Kusto.Language.Symbols.ScalarTypes.Unknown)||returnType.IsError||(texts.add(new Kusto.Language.Editor.ClassifiedText.ctor(Kusto.Language.Editor.ClassificationKind.Punctuation,": ")),texts.add(new Kusto.Language.Editor.ClassifiedText.ctor(Kusto.Language.Editor.ClassificationKind.Type,Kusto.Language.Editor.KustoQuickInfoBuilder.GetTypeText(returnType)))),value!=null&&value.RawText!=null&&(texts.add(new Kusto.Language.Editor.ClassifiedText.ctor(Kusto.Language.Editor.ClassificationKind.Punctuation," = ")),kind=Bridge.is(value.Value,System.String)?Kusto.Language.Editor.ClassificationKind.StringLiteral:Kusto.Language.Editor.ClassificationKind.Literal,text=value.RawText,text.length>40&&(text=(text.substr(0,40)||"")+" ..."),texts.add(new Kusto.Language.Editor.ClassifiedText.ctor(kind,text))),this._options.ShowDescriptions&&(description=Kusto.Language.Editor.KustoQuickInfoBuilder.GetDescription(symbol),System.String.isNullOrEmpty(description)||texts.add(new Kusto.Language.Editor.ClassifiedText.ctor(Kusto.Language.Editor.ClassificationKind.Comment,"\n\n"+(description||"")))))}}});Bridge.define("Kusto.Language.Editor.KustoRelatedElementFinder",{statics:{methods:{GetNextMatchingToken:function(token,matchingText){for(var child,t,parent=token.Parent,index=parent.GetChildIndex(token),i=index+1|0,n=parent.ChildCount;i<n;i=i+1|0)if(child=parent.GetChild(i),(t=Bridge.as(child,Kusto.Language.Syntax.SyntaxToken))!=null&&Bridge.referenceEquals(t.Text,matchingText))return t;return null},GetPreviousMatchingToken:function(token,matchingText){for(var child,t,parent=token.Parent,index=parent.GetChildIndex(token),i=index-1|0;i>=0;i=i-1|0)if(child=parent.GetChild(i),(t=Bridge.as(child,Kusto.Language.Syntax.SyntaxToken))!=null&&Bridge.referenceEquals(t.Text,matchingText))return t;return null},IsPartOfNameReferenceOrDeclaration:function(token){var name=token.Parent.GetFirstAncestorOrSelf(Kusto.Language.Syntax.Name);return name!=null&&(Bridge.is(name.Parent,Kusto.Language.Syntax.NameReference)||Bridge.is(name.Parent,Kusto.Language.Syntax.NameDeclaration))},AreSymbolsEqual:function(symbol,element,options){var canSee=(options&Kusto.Language.Editor.FindRelatedOptions.SeeThroughVariables)!=0,n,d;return(n=Bridge.as(element,Kusto.Language.Syntax.NameReference))!=null&&(Bridge.referenceEquals(n.ReferencedSymbol,symbol)||canSee&&Bridge.referenceEquals(n.ReferencedSymbol,Kusto.Language.Symbols.Symbol.GetResultType(symbol)))||(d=Bridge.as(element,Kusto.Language.Syntax.NameDeclaration))!=null&&(Bridge.referenceEquals(d.ReferencedSymbol,symbol)||canSee&&Bridge.referenceEquals(Kusto.Language.Symbols.Symbol.GetResultType(d.ReferencedSymbol),symbol))}}},fields:{_code:null},ctors:{ctor:function(code){this.$initialize();this._code=code}},methods:{FindRelatedElements:function(position,options){var token,prev,elements,current,currentIndex;return(options===void 0&&(options=0),token=this._code.Syntax.GetTokenAt(position),token==null||position>token.TriviaStart&&position<(token.TextStart-1|0))?Kusto.Language.Editor.RelatedInfo.Empty:(prev=token!=null?token.GetPreviousToken():null,position===token.TriviaStart&&(token.Trivia.length>0||prev!=null&&this.IsRelatable(prev)&&!this.IsRelatable(token))&&(token=token.GetPreviousToken()),token==null)?Kusto.Language.Editor.RelatedInfo.Empty:(elements=new(System.Collections.Generic.List$1(Kusto.Language.Editor.RelatedElement).ctor),this.IsBracket(token)?this.GetRelatedBrackets(token,elements):Kusto.Language.Editor.KustoRelatedElementFinder.IsPartOfNameReferenceOrDeclaration(token)&&this.GetRelatedNameReferencesAndDeclarations(token,elements,options),elements.Count>1&&(current=System.Linq.Enumerable.from(elements,Kusto.Language.Editor.RelatedElement).firstOrDefault(function(r){return r.Start===token.TextStart},null),current!=null))?(currentIndex=elements.indexOf(current),new Kusto.Language.Editor.RelatedInfo(elements,currentIndex)):Kusto.Language.Editor.RelatedInfo.Empty},IsRelatable:function(token){return this.IsBracket(token)||Kusto.Language.Editor.KustoRelatedElementFinder.IsPartOfNameReferenceOrDeclaration(token)},IsBracket:function(token){switch(token.Text){case"{":case"}":case"(":case")":return!0;case"[":case"]":return!Kusto.Language.Editor.KustoRelatedElementFinder.IsPartOfNameReferenceOrDeclaration(token);default:return!1}},GetRelatedBrackets:function(token,elements){switch(token.Text){case"{":this.GetRelatedBracketsNext(token,"}",elements);break;case"}":this.GetRelatedBracketsPrevious(token,"{",elements);break;case"(":this.GetRelatedBracketsNext(token,")",elements);break;case")":this.GetRelatedBracketsPrevious(token,"(",elements);break;case"[":this.GetRelatedBracketsNext(token,"]",elements);break;case"]":this.GetRelatedBracketsPrevious(token,"[",elements);break}},GetRelatedBracketsNext:function(token,matchingText,elements){var t;(t=Kusto.Language.Editor.KustoRelatedElementFinder.GetNextMatchingToken(token,matchingText))!=null&&(elements.add(new Kusto.Language.Editor.RelatedElement.$ctor2(token.TextStart,token.Text.length,Kusto.Language.Editor.RelatedElementKind.Syntax)),elements.add(new Kusto.Language.Editor.RelatedElement.$ctor2(t.TextStart,t.Text.length,Kusto.Language.Editor.RelatedElementKind.Syntax)))},GetRelatedBracketsPrevious:function(token,matchingText,elements){var t;(t=Kusto.Language.Editor.KustoRelatedElementFinder.GetPreviousMatchingToken(token,matchingText))!=null&&(elements.add(new Kusto.Language.Editor.RelatedElement.$ctor2(t.TextStart,t.Text.length,Kusto.Language.Editor.RelatedElementKind.Syntax)),elements.add(new Kusto.Language.Editor.RelatedElement.$ctor2(token.TextStart,token.Text.length,Kusto.Language.Editor.RelatedElementKind.Syntax)))},GetRelatedNameReferencesAndDeclarations:function(token,elements,options){var $t,symbol=($t=token.Parent.GetFirstAncestorOrSelf(Kusto.Language.Syntax.SyntaxNode,function(n){return n.ReferencedSymbol!=null}))!=null?$t.ReferencedSymbol:null;symbol!=null&&this._code.Syntax.WalkElements(function(e){var kind=new Kusto.Language.Editor.RelatedElementKind,nd,nr;kind=(nd=Bridge.as(e,Kusto.Language.Syntax.NameDeclaration))!=null?Kusto.Language.Editor.RelatedElementKind.Declaration:(nr=Bridge.as(e,Kusto.Language.Syntax.NameReference))!=null?Kusto.Language.Editor.RelatedElementKind.Reference:Kusto.Language.Editor.RelatedElementKind.Other;Kusto.Language.Editor.KustoRelatedElementFinder.AreSymbolsEqual(symbol,e,options)&&elements.add(new Kusto.Language.Editor.RelatedElement.$ctor3(e.TextStart,e.Width,kind,e.TextStart,e.TextStart))})}}});Bridge.define("Kusto.Language.Editor.KustoServiceHelpers",{statics:{methods:{GetTokenWithAffinity:function(code,position){var token=code.Syntax.GetTokenAt(position),previous=token.GetPreviousToken();return Kusto.Language.Editor.KustoServiceHelpers.HasAffinity(token,position)?token:previous!=null&&Kusto.Language.Editor.KustoServiceHelpers.HasAffinity(previous,position)?previous:null},HasAffinity:function(token,position){return position>token.TextStart&&position<token.End||position===token.TextStart&&Kusto.Language.Editor.KustoServiceHelpers.IsNameLikeToken(token.Kind)||position===token.End&&Kusto.Language.Editor.KustoServiceHelpers.IsNameLikeToken(token.Kind)},IsNameLikeToken:function(kind){switch(Kusto.Language.Syntax.SyntaxFacts.GetCategory(kind)){case Kusto.Language.Syntax.SyntaxCategory.Identifier:case Kusto.Language.Syntax.SyntaxCategory.Keyword:return!0;default:return kind===Kusto.Language.Syntax.SyntaxKind.BangToken}},GetTokenLeftOfPosition:function(code,position){var token=code.Syntax.GetTokenAt(position),hasAffinity=token!=null&&Kusto.Language.Editor.KustoServiceHelpers.HasAffinity(token,position);return token!=null&&(position<=token.TextStart||!hasAffinity||token.Kind===Kusto.Language.Syntax.SyntaxKind.EndOfTextToken)&&(token=token.GetPreviousToken()),token},GetCompleteExpressionLeftOfPosition:function(code,position){var token=Kusto.Language.Editor.KustoServiceHelpers.GetTokenLeftOfPosition(code,position),expr=token!=null?token.GetFirstAncestorOrSelf(Kusto.Language.Syntax.Expression):null;return expr!=null&&expr.End===token.End&&!expr.HasMissingChildren()?expr:null}}}});Bridge.define("Kusto.Language.Editor.MinimalTextKind",{$kind:"enum",statics:{fields:{RemoveLeadingWhitespaceAndComments:0,MinimizeWhitespaceAndRemoveComments:1,SingleLine:2}}});Bridge.define("Kusto.Language.Editor.OutlineInfo",{statics:{fields:{Empty:null},ctors:{init:function(){this.Empty=new Kusto.Language.Editor.OutlineInfo(null)}}},props:{Ranges:null},ctors:{ctor:function(ranges){this.$initialize();this.Ranges=ranges||Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Editor.OutlineRange).Instance}}});Bridge.define("Kusto.Language.Editor.OutlineRange",{props:{Start:0,Length:0,CollapsedText:null},ctors:{ctor:function(start,length,collapsedText){var $t;this.$initialize();this.Start=start;this.Length=length;this.CollapsedText=($t=collapsedText,$t!=null?$t:"")}}});Bridge.define("Kusto.Language.Editor.OutliningOptions",{statics:{fields:{Default:null},ctors:{init:function(){this.Default=new Kusto.Language.Editor.OutliningOptions(120,!0,!1)}}},props:{MaxCollapsedTextLength:0,Queries:!1,Statements:!1},ctors:{ctor:function(maxLength,queries,statements){this.$initialize();this.MaxCollapsedTextLength=maxLength;this.Queries=queries;this.Statements=statements}},methods:{With:function(maxLength,queries,statements){maxLength===void 0&&(maxLength=null);queries===void 0&&(queries=null);statements===void 0&&(statements=null);var newMaxLength=System.Nullable.hasValue(maxLength)?System.Nullable.getValue(maxLength):this.MaxCollapsedTextLength,newQueries=System.Nullable.hasValue(queries)?System.Nullable.getValue(queries):this.Queries,newStatements=System.Nullable.hasValue(statements)?System.Nullable.getValue(statements):this.Statements;return System.Nullable.neq(maxLength,this.MaxCollapsedTextLength)||newQueries!==this.Queries||newStatements!==this.Statements?new Kusto.Language.Editor.OutliningOptions(newMaxLength,newQueries,newStatements):this},WithMaxCollapesedTextlength:function(length){return this.With(length,void 0,void 0)},WithQueries:function(enable){return this.With(void 0,enable,void 0)},WithStatements:function(enable){return this.With(void 0,void 0,enable)}}});Bridge.define("Kusto.Language.Editor.ParserPath$1",function(TInput){return{statics:{methods:{From:function(path){var $t,current=null,parser;$t=Bridge.getEnumerator(path,Kusto.Language.Parsing.Parser$1(TInput));try{while($t.moveNext())parser=$t.Current,current=new(Kusto.Language.Editor.ParserPath$1(TInput).ctor)(current,parser)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return current}}},fields:{_parent:null,_parser:null,_children:null},props:{Parser:{get:function(){return this._parser}},Parent:{get:function(){return this._parent}},ChildCount:{get:function(){return this._parser.ChildParserCount}}},ctors:{ctor:function(parentPath,parser){this.$initialize();this._parent=parentPath;this._parser=parser},$ctor1:function(parser){Kusto.Language.Editor.ParserPath$1(TInput).ctor.call(this,null,parser)}},methods:{GetChild:function(index){var tmp,i;if(index<0||index>=this.ChildCount)return null;if(this._children==null&&this.ChildCount>0){for(tmp=System.Array.init(this.ChildCount,null,Kusto.Language.Editor.ParserPath$1(TInput)),i=0;i<tmp.length;i=i+1|0)tmp[System.Array.index(i,tmp)]=new(Kusto.Language.Editor.ParserPath$1(TInput).ctor)(this,this._parser.GetChildParser(i));Kusto.Language.Utils.Interlocked.CompareExchange(System.Array.type(Kusto.Language.Editor.ParserPath$1(TInput)),Bridge.ref(this,"_children"),tmp,null)}return this._children[System.Array.index(index,this._children)]}}}});Bridge.define("Kusto.Language.Editor.PlacementStyle",{$kind:"enum",statics:{fields:{None:0,NewLine:1,Smart:2}}});Bridge.define("Kusto.Language.Editor.PositionBias",{$kind:"enum",statics:{fields:{Left:0,Right:1}}});Bridge.define("Kusto.Language.Editor.QuickInfo",{statics:{fields:{Empty:null},ctors:{init:function(){this.Empty=new Kusto.Language.Editor.QuickInfo.$ctor1(null)}},methods:{GetKindText:function(kind){switch(kind){case Kusto.Language.Editor.QuickInfoKind.Text:default:return null;case Kusto.Language.Editor.QuickInfoKind.Table:return"table";case Kusto.Language.Editor.QuickInfoKind.Database:return"database";case Kusto.Language.Editor.QuickInfoKind.Cluster:return"cluster";case Kusto.Language.Editor.QuickInfoKind.Literal:return"literal";case Kusto.Language.Editor.QuickInfoKind.Type:return"type";case Kusto.Language.Editor.QuickInfoKind.Pattern:return"pattern";case Kusto.Language.Editor.QuickInfoKind.Parameter:return"parameter";case Kusto.Language.Editor.QuickInfoKind.Scalar:return"scalar";case Kusto.Language.Editor.QuickInfoKind.Variable:return"variable";case Kusto.Language.Editor.QuickInfoKind.LocalFunction:case Kusto.Language.Editor.QuickInfoKind.BuiltInFunction:case Kusto.Language.Editor.QuickInfoKind.DatabaseFunction:return"function";case Kusto.Language.Editor.QuickInfoKind.Operator:return"operator";case Kusto.Language.Editor.QuickInfoKind.Graph:return"graph"}}}},fields:{_text:null},props:{Items:null,Text:{get:function(){return this._text==null&&(this._text=this.BuildText()),this._text}}},ctors:{$ctor2:function(text){this.$initialize();this._text=text;this.Items=System.Array.init([new Kusto.Language.Editor.QuickInfoItem.$ctor2(Kusto.Language.Editor.QuickInfoKind.Text,text)],Kusto.Language.Editor.QuickInfoItem)},ctor:function(items){items===void 0&&(items=[]);Kusto.Language.Editor.QuickInfo.$ctor1.call(this,Bridge.cast(items,System.Collections.Generic.IEnumerable$1(Kusto.Language.Editor.QuickInfoItem)))},$ctor1:function(items){this.$initialize();this.Items=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Editor.QuickInfoItem,items)}},methods:{BuildText:function(){var $t,sb=new System.Text.StringBuilder,item,kindText;$t=Bridge.getEnumerator(this.Items,Kusto.Language.Editor.QuickInfoItem);try{while($t.moveNext())item=$t.Current,sb.getLength()>0&&sb.append("\n\n"),kindText=Kusto.Language.Editor.QuickInfo.GetKindText(item.Kind),kindText!=null&&sb.append(String.fromCharCode(40)).append(kindText).append(") "),sb.append(item.Text)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return sb.toString()}}});Bridge.define("Kusto.Language.Editor.QuickInfoItem",{fields:{_text:null},props:{Kind:0,Parts:null,Text:{get:function(){return this._text==null&&(this._text=System.String.concat(Bridge.toArray(System.Linq.Enumerable.from(this.Parts,Kusto.Language.Editor.ClassifiedText).select(function(s){return s.Text})))),this._text}}},ctors:{$ctor2:function(kind,text){Kusto.Language.Editor.QuickInfoItem.ctor.call(this,kind,[new Kusto.Language.Editor.ClassifiedText.$ctor1(text)])},ctor:function(kind,parts){parts===void 0&&(parts=[]);Kusto.Language.Editor.QuickInfoItem.$ctor1.call(this,kind,Bridge.cast(parts,System.Collections.Generic.IEnumerable$1(Kusto.Language.Editor.ClassifiedText)))},$ctor1:function(kind,parts){this.$initialize();this.Kind=kind;this.Parts=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Editor.ClassifiedText,parts)}}});Bridge.define("Kusto.Language.Editor.QuickInfoKind",{$kind:"enum",statics:{fields:{Text:0,Error:1,Warning:2,Suggestion:3,Column:4,Table:5,Database:6,Cluster:7,Literal:8,Type:9,Pattern:10,Parameter:11,Scalar:12,Variable:13,LocalFunction:14,BuiltInFunction:15,DatabaseFunction:16,Operator:17,Command:18,Option:19,Graph:20}}});Bridge.define("Kusto.Language.Editor.QuickInfoOptions",{statics:{fields:{Default:null},ctors:{init:function(){this.Default=new Kusto.Language.Editor.QuickInfoOptions(!0,!0,null)}}},props:{ShowDescriptions:!1,ShowDiagnostics:!1,DiagnosticFilter:null},ctors:{ctor:function(showDescriptions,showDiagnostics,filter){this.$initialize();this.ShowDescriptions=showDescriptions;this.ShowDiagnostics=showDiagnostics;this.DiagnosticFilter=filter||Kusto.Language.Editor.DisabledDiagnostics.Default}},methods:{With:function(showDiagnostics,showDescriptions,filter){showDiagnostics===void 0&&(showDiagnostics=new(Kusto.Language.Utils.Optional$1(System.Boolean)));showDescriptions===void 0&&(showDescriptions=new(Kusto.Language.Utils.Optional$1(System.Boolean)));filter===void 0&&(filter=new(Kusto.Language.Utils.Optional$1(Kusto.Language.Editor.DisabledDiagnostics)));var newShowDiagnostics=showDiagnostics.HasValue?showDiagnostics.Value:this.ShowDiagnostics,newShowDescriptions=showDescriptions.HasValue?showDescriptions.Value:this.ShowDescriptions,newFilter=filter.HasValue?filter.Value||Kusto.Language.Editor.DisabledDiagnostics.Default:this.DiagnosticFilter;return newShowDiagnostics===this.ShowDiagnostics&&newShowDescriptions===this.ShowDescriptions&&Bridge.referenceEquals(newFilter,this.DiagnosticFilter)?this:new Kusto.Language.Editor.QuickInfoOptions(newShowDescriptions,newShowDiagnostics,newFilter)},WithShowDescriptions:function(show){return this.With(void 0,Kusto.Language.Utils.Optional$1(System.Boolean).op_Implicit(show),void 0)},WithShowDiagnostics:function(show){return this.With(Kusto.Language.Utils.Optional$1(System.Boolean).op_Implicit(show),void 0,void 0)},WithDiagnosticFilter:function(filter){return this.With(void 0,void 0,Kusto.Language.Utils.Optional$1(Kusto.Language.Editor.DisabledDiagnostics).op_Implicit(filter))}}});Bridge.define("Kusto.Language.Editor.RelatedElement",{props:{Range:null,Start:{get:function(){return this.Range.Start}},Length:{get:function(){return this.Range.Length}},End:{get:function(){return this.Range.End}},Kind:0,CursorLeft:0,CursorRight:0},ctors:{init:function(){this.Range=new Kusto.Language.Editor.TextRange},$ctor1:function(range,kind,cursorLeft,cursorRight){this.$initialize();this.Range=range;this.Kind=kind;this.CursorLeft=cursorLeft;this.CursorRight=cursorRight},ctor:function(range,kind){Kusto.Language.Editor.RelatedElement.$ctor1.call(this,range,kind,range.Start,range.End)},$ctor3:function(start,length,kind,cursorLeft,cursorRight){Kusto.Language.Editor.RelatedElement.$ctor1.call(this,new Kusto.Language.Editor.TextRange.$ctor1(start,length),kind,cursorLeft,cursorRight)},$ctor2:function(start,length,kind){Kusto.Language.Editor.RelatedElement.$ctor1.call(this,new Kusto.Language.Editor.TextRange.$ctor1(start,length),kind,start,start+length|0)}}});Bridge.define("Kusto.Language.Editor.RelatedElementKind",{$kind:"enum",statics:{fields:{Syntax:0,Reference:1,Declaration:2,Other:3}}});Bridge.define("Kusto.Language.Editor.RelatedInfo",{statics:{fields:{Empty:null},ctors:{init:function(){this.Empty=new Kusto.Language.Editor.RelatedInfo(Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Editor.RelatedElement).Instance,0)}}},props:{Elements:null,CurrentIndex:0},ctors:{ctor:function(elements,currentIndex){this.$initialize();this.Elements=elements;this.CurrentIndex=currentIndex}},methods:{GetNextIndex:function(index){return index<(System.Array.getCount(this.Elements,Kusto.Language.Editor.RelatedElement)-1|0)?index+1|0:0},GetPreviousIndex:function(index){return index>0?index-1|0:System.Array.getCount(this.Elements,Kusto.Language.Editor.RelatedElement)-1|0}}});Bridge.define("Kusto.Language.Editor.TextEdit",{$kind:"struct",statics:{methods:{Replacement:function(start,deleteLength,insertText){return new Kusto.Language.Editor.TextEdit.$ctor1(start,deleteLength,insertText)},Deletion:function(start,deleteLength){return new Kusto.Language.Editor.TextEdit.$ctor1(start,deleteLength,"")},Insertion:function(start,text){return new Kusto.Language.Editor.TextEdit.$ctor1(start,0,text)},getDefaultValue:function(){return new Kusto.Language.Editor.TextEdit}}},props:{Start:0,DeleteLength:0,InsertText:null},ctors:{$ctor1:function(start,deleteLength,insertText){var $t;if(this.$initialize(),start<0)throw new System.ArgumentOutOfRangeException.$ctor4("start","negate start position");if(deleteLength<0)throw new System.ArgumentOutOfRangeException.$ctor4("deleteLength","negative delete length");this.Start=start;this.DeleteLength=deleteLength;this.InsertText=($t=insertText,$t!=null?$t:"")},ctor:function(){this.$initialize()}},methods:{getHashCode:function(){return Bridge.addHash([3907111321,this.Start,this.DeleteLength,this.InsertText])},equals:function(o){return Bridge.is(o,Kusto.Language.Editor.TextEdit)?Bridge.equals(this.Start,o.Start)&&Bridge.equals(this.DeleteLength,o.DeleteLength)&&Bridge.equals(this.InsertText,o.InsertText):!1},$clone:function(to){return this}}});Bridge.define("Kusto.Language.Editor.TextRange",{$kind:"struct",statics:{fields:{Empty:null},ctors:{init:function(){this.Empty=new Kusto.Language.Editor.TextRange;this.Empty=new Kusto.Language.Editor.TextRange.$ctor1(0,0)}},methods:{FromBounds:function(start,end){return new Kusto.Language.Editor.TextRange.$ctor1(start,end-start|0)},Overlaps:function(startA,lengthA,startB,lengthB){var endA=startA+lengthA|0,endB=startB+lengthB|0;return Math.max(startA,startB)<=Math.min(endA,endB)},getDefaultValue:function(){return new Kusto.Language.Editor.TextRange}}},props:{Start:0,Length:0,End:{get:function(){return this.Start+this.Length|0}}},ctors:{$ctor1:function(start,length){this.$initialize();this.Start=start;this.Length=length},ctor:function(){this.$initialize()}},methods:{Overlaps:function(other){return Kusto.Language.Editor.TextRange.Overlaps(this.Start,this.Length,other.Start,other.Length)},getHashCode:function(){return Bridge.addHash([3689334539,this.Start,this.Length])},equals:function(o){return Bridge.is(o,Kusto.Language.Editor.TextRange)?Bridge.equals(this.Start,o.Start)&&Bridge.equals(this.Length,o.Length):!1},$clone:function(to){var s=to||new Kusto.Language.Editor.TextRange;return s.Start=this.Start,s.Length=this.Length,s}}});Bridge.define("Kusto.Language.EngineCommands",{statics:{fields:{_schema0:null,_schema1:null,_schema2:null,_schema3:null,_schema4:null,_schema5:null,_schema6:null,_schema7:null,_schema8:null,_schema9:null,_schema10:null,_schema11:null,_schema12:null,_schema13:null,_schema14:null,_schema15:null,_schema16:null,_schema17:null,_schema18:null,_schema19:null,_schema20:null,_schema21:null,_schema22:null,_schema23:null,_schema24:null,_schema25:null,_schema26:null,_schema27:null,_schema28:null,_schema29:null,_schema30:null,_schema31:null,_schema32:null,_schema33:null,_schema34:null,_schema35:null,_schema36:null,_schema37:null,_schema38:null,_schema39:null,_schema40:null,_schema41:null,ShowDatabase:null,ShowDatabaseDetails:null,ShowDatabaseIdentity:null,ShowDatabasePolicies:null,ShowDatabaseDataStats:null,ShowDatabaseMetadata:null,ShowClusterDatabases:null,ShowClusterDatabasesDetails:null,ShowClusterDatabasesIdentity:null,ShowClusterDatabasesPolicies:null,ShowClusterDatabasesDataStats:null,ShowClusterDatabasesMetadata:null,CreateDatabase:null,AttachDatabase:null,DetachDatabase:null,AlterDatabasePrettyName:null,DropDatabasePrettyName:null,AlterDatabasePersistMetadata:null,SetAccess:null,ShowDatabaseSchema:null,ShowDatabaseSchemaAsJson:null,ShowDatabaseSchemaAsCslScript:null,ShowDatabaseCslSchema:null,ShowDatabaseSchemaViolations:null,ShowDatabasesSchema:null,ShowDatabasesSchemaAsJson:null,CreateDatabaseIngestionMapping:null,CreateOrAlterDatabaseIngestionMapping:null,AlterDatabaseIngestionMapping:null,AlterMergeDatabaseIngestionMapping:null,ShowDatabaseIngestionMappings:null,ShowIngestionMappings:null,DropDatabaseIngestionMapping:null,ShowTables:null,ShowTable:null,ShowTablesDetails:null,ShowTableDetails:null,ShowTableCslSchema:null,ShowTableSchemaAsJson:null,CreateTable:null,CreateTableBasedOnAnother:null,CreateMergeTable:null,DefineTable:null,CreateTables:null,CreateMergeTables:null,DefineTables:null,AlterTable:null,AlterMergeTable:null,AlterTableDocString:null,AlterTableFolder:null,RenameTable:null,RenameTables:null,DropTable:null,UndoDropTable:null,DropTables:null,CreateTableIngestionMapping:null,CreateOrAlterTableIngestionMapping:null,AlterTableIngestionMapping:null,AlterMergeTableIngestionMapping:null,ShowTableIngestionMappings:null,ShowTableIngestionMapping:null,DropTableIngestionMapping:null,RenameColumn:null,RenameColumns:null,AlterColumnType:null,DropColumn:null,DropTableColumns:null,AlterTableColumnDocStrings:null,AlterMergeTableColumnDocStrings:null,ShowFunctions:null,ShowFunction:null,CreateFunction:null,AlterFunction:null,CreateOrAlterFunction:null,DropFunction:null,DropFunctions:null,AlterFunctionDocString:null,AlterFunctionFolder:null,ShowExternalTables:null,ShowExternalTable:null,ShowExternalTableCslSchema:null,ShowExternalTableSchema:null,ShowExternalTableArtifacts:null,DropExternalTable:null,CreateStorageExternalTable:null,AlterStorageExternalTable:null,CreateOrAlterStorageExternalTable:null,CreateSqlExternalTable:null,AlterSqlExternalTable:null,CreateOrAlterSqlExternalTable:null,CreateExternalTableMapping:null,SetExternalTableAdmins:null,AddExternalTableAdmins:null,DropExternalTableAdmins:null,AlterExternalTableDocString:null,AlterExternalTableFolder:null,ShowExternalTablePrincipals:null,ShowFabric:null,AlterExternalTableMapping:null,ShowExternalTableMappings:null,ShowExternalTableMapping:null,DropExternalTableMapping:null,ShowWorkloadGroups:null,ShowWorkloadGroup:null,CreateOrAleterWorkloadGroup:null,AlterMergeWorkloadGroup:null,DropWorkloadGroup:null,ShowDatabasePolicyCaching:null,ShowTablePolicyCaching:null,ShowTableStarPolicyCaching:null,ShowColumnPolicyCaching:null,ShowMaterializedViewPolicyCaching:null,ShowClusterPolicyCaching:null,AlterDatabasePolicyCaching:null,AlterTablePolicyCaching:null,AlterTablesPolicyCaching:null,AlterColumnPolicyCaching:null,AlterMaterializedViewPolicyCaching:null,AlterClusterPolicyCaching:null,DeleteDatabasePolicyCaching:null,DeleteTablePolicyCaching:null,DeleteColumnPolicyCaching:null,DeleteMaterializedViewPolicyCaching:null,DeleteClusterPolicyCaching:null,ShowTablePolicyIngestionTime:null,ShowTableStarPolicyIngestionTime:null,AlterTablePolicyIngestionTime:null,AlterTablesPolicyIngestionTime:null,DeleteTablePolicyIngestionTime:null,ShowTablePolicyRetention:null,ShowTableStarPolicyRetention:null,ShowDatabasePolicyRetention:null,AlterTablePolicyRetention:null,AlterMaterializedViewPolicyRetention:null,AlterDatabasePolicyRetention:null,AlterTablesPolicyRetention:null,AlterMergeTablePolicyRetention:null,AlterMergeMaterializedViewPolicyRetention:null,AlterMergeDatabasePolicyRetention:null,DeleteTablePolicyRetention:null,DeleteDatabasePolicyRetention:null,ShowDatabasePolicyHardRetentionViolations:null,ShowDatabasePolicySoftRetentionViolations:null,ShowTablePolicyRowLevelSecurity:null,ShowTableStarPolicyRowLevelSecurity:null,AlterTablePolicyRowLevelSecurity:null,DeleteTablePolicyRowLevelSecurity:null,ShowMaterializedViewPolicyRowLevelSecurity:null,AlterMaterializedViewPolicyRowLevelSecurity:null,DeleteMaterializedViewPolicyRowLevelSecurity:null,ShowTablePolicyRowOrder:null,ShowTableStarPolicyRowOrder:null,AlterTablePolicyRowOrder:null,AlterTablesPolicyRowOrder:null,AlterMergeTablePolicyRowOrder:null,DeleteTablePolicyRowOrder:null,ShowTablePolicyUpdate:null,ShowTableStarPolicyUpdate:null,AlterTablePolicyUpdate:null,AlterMergeTablePolicyUpdate:null,DeleteTablePolicyUpdate:null,ShowClusterPolicyIngestionBatching:null,ShowDatabasePolicyIngestionBatching:null,ShowTablePolicyIngestionBatching:null,ShowTableStarPolicyIngestionBatching:null,AlterClusterPolicyIngestionBatching:null,AlterMergeClusterPolicyIngestionBatching:null,AlterDatabasePolicyIngestionBatching:null,AlterMergeDatabasePolicyIngestionBatching:null,AlterTablePolicyIngestionBatching:null,AlterMergeTablePolicyIngestionBatching:null,AlterTablesPolicyIngestionBatching:null,DeleteDatabasePolicyIngestionBatching:null,DeleteTablePolicyIngestionBatching:null,ShowDatabasePolicyEncoding:null,ShowTablePolicyEncoding:null,ShowColumnPolicyEncoding:null,AlterDatabasePolicyEncoding:null,AlterTablePolicyEncoding:null,AlterTableColumnsPolicyEncoding:null,AlterColumnPolicyEncoding:null,AlterColumnsPolicyEncodingByQuery:null,AlterColumnPolicyEncodingType:null,AlterMergeDatabasePolicyEncoding:null,AlterMergeTablePolicyEncoding:null,AlterMergeColumnPolicyEncoding:null,DeleteDatabasePolicyEncoding:null,DeleteTablePolicyEncoding:null,DeleteColumnPolicyEncoding:null,ShowDatabasePolicyMerge:null,ShowTablePolicyMerge:null,ShowTableStarPolicyMerge:null,AlterDatabasePolicyMerge:null,AlterTablePolicyMerge:null,AlterTablesPolicyMerge:null,AlterMergeDatabasePolicyMerge:null,AlterMergeTablePolicyMerge:null,AlterMergeMaterializedViewPolicyMerge:null,DeleteDatabasePolicyMerge:null,DeleteTablePolicyMerge:null,AlterTablePolicyMirroring:null,AlterMergeTablePolicyMirroring:null,AlterTablePolicyMirroringWithJson:null,AlterMergeTablePolicyMirroringWithJson:null,DeleteTablePolicyMirroring:null,ShowTablePolicyMirroring:null,ShowTableStarPolicyMirroring:null,AlterDatabasePolicyMirroring:null,AlterMergeDatabasePolicyMirroring:null,AlterDatabasePolicyMirroringWithJson:null,AlterMergeDatabasePolicyMirroringWithJson:null,DeleteDatabasePolicyMirroring:null,ShowDatabasePolicyMirroring:null,AlterDatabaseTableMirroringPolicyTemplates:null,AlterMergeDatabaseTableMirroringPolicyTemplates:null,ShowDatabaseTableMirroringPolicyTemplates:null,DropDatabaseTableMirroringPolicyTemplates:null,ApplyTableMirroringPolicyTemplateToTables:null,ShowTablePolicyPartitioning:null,ShowTableStarPolicyPartitioning:null,AlterTablePolicyPartitioning:null,AlterMergeTablePolicyPartitioning:null,AlterMaterializedViewPolicyPartitioning:null,AlterMergeMaterializedViewPolicyPartitioning:null,DeleteTablePolicyPartitioning:null,DeleteMaterializedViewPolicyPartitioning:null,ShowTablePolicyRestrictedViewAccess:null,ShowTableStarPolicyRestrictedViewAccess:null,AlterTablePolicyRestrictedViewAccess:null,AlterTablesPolicyRestrictedViewAccess:null,DeleteTablePolicyRestrictedViewAccess:null,ShowClusterPolicyRowStore:null,AlterClusterPolicyRowStore:null,AlterMergeClusterPolicyRowStore:null,DeleteClusterPolicyRowStore:null,ShowClusterPolicySandbox:null,AlterClusterPolicySandbox:null,DeleteClusterPolicySandbox:null,ShowClusterSandboxesStats:null,ShowDatabasePolicySharding:null,ShowTablePolicySharding:null,ShowTableStarPolicySharding:null,AlterDatabasePolicySharding:null,AlterTablePolicySharding:null,AlterMergeDatabasePolicySharding:null,AlterMergeTablePolicySharding:null,DeleteDatabasePolicySharding:null,DeleteTablePolicySharding:null,AlterClusterPolicySharding:null,AlterMergeClusterPolicySharding:null,DeleteClusterPolicySharding:null,ShowClusterPolicySharding:null,ShowDatabasePolicyShardsGrouping:null,AlterDatabasePolicyShardsGrouping:null,AlterMergeDatabasePolicyShardsGrouping:null,DeleteDatabasePolicyShardsGrouping:null,ShowDatabasePolicyStreamingIngestion:null,ShowTablePolicyStreamingIngestion:null,ShowClusterPolicyStreamingIngestion:null,AlterDatabasePolicyStreamingIngestion:null,AlterMergeDatabasePolicyStreamingIngestion:null,AlterTablePolicyStreamingIngestion:null,AlterMergeTablePolicyStreamingIngestion:null,AlterClusterPolicyStreamingIngestion:null,AlterMergeClusterPolicyStreamingIngestion:null,DeleteDatabasePolicyStreamingIngestion:null,DeleteTablePolicyStreamingIngestion:null,DeleteClusterPolicyStreamingIngestion:null,ShowDatabasePolicyManagedIdentity:null,ShowClusterPolicyManagedIdentity:null,AlterDatabasePolicyManagedIdentity:null,AlterMergeDatabasePolicyManagedIdentity:null,AlterClusterPolicyManagedIdentity:null,AlterMergeClusterPolicyManagedIdentity:null,DeleteDatabasePolicyManagedIdentity:null,DeleteClusterPolicyManagedIdentity:null,ShowTablePolicyAutoDelete:null,AlterTablePolicyAutoDelete:null,DeleteTablePolicyAutoDelete:null,ShowClusterPolicyCallout:null,AlterClusterPolicyCallout:null,AlterMergeClusterPolicyCallout:null,DeleteClusterPolicyCallout:null,ShowClusterPolicyCapacity:null,AlterClusterPolicyCapacity:null,AlterMergeClusterPolicyCapacity:null,ShowClusterPolicyRequestClassification:null,AlterClusterPolicyRequestClassification:null,AlterMergeClusterPolicyRequestClassification:null,DeleteClusterPolicyRequestClassification:null,ShowClusterPolicyMultiDatabaseAdmins:null,AlterClusterPolicyMultiDatabaseAdmins:null,AlterMergeClusterPolicyMultiDatabaseAdmins:null,ShowDatabasePolicyDiagnostics:null,ShowClusterPolicyDiagnostics:null,AlterDatabasePolicyDiagnostics:null,AlterMergeDatabasePolicyDiagnostics:null,AlterClusterPolicyDiagnostics:null,AlterMergeClusterPolicyDiagnostics:null,DeleteDatabasePolicyDiagnostics:null,ShowClusterPolicyQueryWeakConsistency:null,AlterClusterPolicyQueryWeakConsistency:null,AlterMergeClusterPolicyQueryWeakConsistency:null,ShowTablePolicyExtentTagsRetention:null,ShowTableStarPolicyExtentTagsRetention:null,ShowDatabasePolicyExtentTagsRetention:null,AlterTablePolicyExtentTagsRetention:null,AlterDatabasePolicyExtentTagsRetention:null,DeleteTablePolicyExtentTagsRetention:null,DeleteDatabasePolicyExtentTagsRetention:null,ShowPrincipalRoles:null,ShowDatabasePrincipalRoles:null,ShowTablePrincipalRoles:null,ShowExternalTablesPrincipalRoles:null,ShowFunctionPrincipalRoles:null,ShowClusterPrincipalRoles:null,ShowClusterPrincipals:null,ShowDatabasePrincipals:null,ShowTablePrincipals:null,ShowFunctionPrincipals:null,AddClusterRole:null,DropClusterRole:null,SetClusterRole:null,AddDatabaseRole:null,DropDatabaseRole:null,SetDatabaseRole:null,AddTableRole:null,DropTableRole:null,SetTableRole:null,AddFunctionRole:null,DropFunctionRole:null,SetFunctionRole:null,ShowClusterBlockedPrincipals:null,AddClusterBlockedPrincipals:null,DropClusterBlockedPrincipals:null,IngestIntoTable:null,IngestInlineIntoTable:null,SetTable:null,AppendTable:null,SetOrAppendTable:null,SetOrReplaceTable:null,ExportToStorage:null,ExportToSqlTable:null,ExportToExternalTable:null,CreateOrAlterContinuousExport:null,ShowContinuousExport:null,ShowContinuousExports:null,ShowClusterPendingContinuousExports:null,ShowContinuousExportExportedArtifacts:null,ShowContinuousExportFailures:null,SetContinuousExportCursor:null,DropContinuousExport:null,EnableContinuousExport:null,DisableContinuousExport:null,CreateMaterializedView:null,CreateMaterializedViewOverMaterializedView:null,RenameMaterializedView:null,ShowMaterializedView:null,ShowMaterializedViews:null,ShowMaterializedViewsDetails:null,ShowMaterializedViewDetails:null,ShowMaterializedViewPolicyRetention:null,ShowMaterializedViewPolicyMerge:null,ShowMaterializedViewPolicyPartitioning:null,ShowMaterializedViewExtents:null,AlterMaterializedView:null,AlterMaterializedViewOverMaterializedView:null,CreateOrAlterMaterializedView:null,CreateOrAlterMaterializedViewOverMaterializedView:null,DropMaterializedView:null,EnableDisableMaterializedView:null,ShowMaterializedViewPrincipals:null,ShowMaterializedViewSchemaAsJson:null,ShowMaterializedViewCslSchema:null,AlterMaterializedViewFolder:null,AlterMaterializedViewDocString:null,AlterMaterializedViewLookback:null,AlterMaterializedViewAutoUpdateSchema:null,ClearMaterializedViewData:null,SetMaterializedViewCursor:null,ShowTableOperationsMirroringStatus:null,ShowTableOperationsMirroringExportedArtifacts:null,ShowTableOperationsMirroringFailures:null,ShowCluster:null,ShowClusterDetails:null,ShowDiagnostics:null,ShowCapacity:null,ShowOperations:null,ShowOperationDetails:null,ShowJournal:null,ShowDatabaseJournal:null,ShowClusterJournal:null,ShowQueries:null,ShowRunningQueries:null,CancelQuery:null,ShowQueryPlan:null,ShowBasicAuthUsers:null,CreateBasicAuthUser:null,DropBasicAuthUser:null,ShowCache:null,AlterCache:null,ShowCommands:null,ShowCommandsAndQueries:null,ShowIngestionFailures:null,ShowDataOperations:null,ShowDatabaseKeyVaultSecrets:null,ShowClusterExtents:null,ShowClusterExtentsMetadata:null,ShowDatabaseExtents:null,ShowDatabaseExtentsMetadata:null,ShowDatabaseExtentTagsStatistics:null,ShowDatabaseExtentsPartitioningStatistics:null,ShowTableExtents:null,ShowTableExtentsMetadata:null,TableShardsGroupShow:null,TableShardsGroupMetadataShow:null,TableShardGroupsShow:null,TableShardGroupsStatisticsShow:null,TablesShardGroupsStatisticsShow:null,DatabaseShardGroupsStatisticsShow:null,MergeExtents:null,MergeExtentsDryrun:null,MoveExtentsFrom:null,MoveExtentsQuery:null,TableShuffleExtents:null,TableShuffleExtentsQuery:null,ReplaceExtents:null,DropExtent:null,DropExtents:null,DropExtentsPartitionMetadata:null,DropPretendExtentsByProperties:null,ShowVersion:null,ClearTableData:null,ClearTableCacheStreamingIngestionSchema:null,StoredQueryResultSet:null,StoredQueryResultSetOrReplace:null,StoredQueryResultsShow:null,StoredQueryResultShowSchema:null,StoredQueryResultDrop:null,StoredQueryResultsDrop:null,ShowCertificates:null,ShowCloudSettings:null,ShowCommConcurrency:null,ShowCommPools:null,ShowFabricCache:null,ShowFabricLocks:null,ShowFabricClocks:null,ShowFeatureFlags:null,ShowMemPools:null,ShowServicePoints:null,ShowTcpConnections:null,ShowTcpPorts:null,ShowThreadPools:null,ExecuteDatabaseScript:null,ExecuteClusterScript:null,CreateRequestSupport:null,ShowRequestSupport:null,ShowClusterAdminState:null,ClearRemoteClusterDatabaseSchema:null,ShowClusterMonitoring:null,ShowClusterScaleIn:null,ShowClusterServices:null,ShowClusterNetwork:null,AlterClusterStorageKeys:null,ShowClusterStorageKeysHash:null,AlterFabricServiceAssignmentsCommand:null,DropFabricServiceAssignmentsCommand:null,CreateEntityGroupCommand:null,CreateOrAlterEntityGroupCommand:null,AlterEntityGroup:null,AlterMergeEntityGroup:null,DropEntityGroup:null,ShowEntityGroup:null,ShowEntityGroups:null,AlterExtentContainersAdd:null,AlterExtentContainersDrop:null,AlterExtentContainersRecycle:null,AlterExtentContainersSet:null,ShowExtentContainers:null,DropEmptyExtentContainers:null,CleanDatabaseExtentContainers:null,ShowDatabaseExtentContainersCleanOperations:null,ClearDatabaseCacheQueryResults:null,ShowDatabaseCacheQueryResults:null,ShowDatabasesManagementGroups:null,AlterDatabaseStorageKeys:null,ClearDatabaseCacheStreamingIngestionSchema:null,ClearDatabaseCacheQueryWeakConsistency:null,ShowEntitySchema:null,ShowExtentDetails:null,ShowExtentColumnStorageStats:null,AttachExtentsIntoTableByContainer:null,AttachExtentsIntoTableByMetadata:null,AlterExtentTagsFromQuery:null,AlterMergeExtentTagsFromQuery:null,DropExtentTagsFromQuery:null,DropExtentTagsFromTable:null,DropExtentTagsRetention:null,MergeDatabaseShardGroups:null,AlterFollowerClusterConfiguration:null,AddFollowerDatabaseAuthorizedPrincipals:null,DropFollowerDatabaseAuthorizedPrincipals:null,AlterFollowerDatabaseAuthorizedPrincipals:null,DropFollowerDatabasePolicyCaching:null,AlterFollowerDatabaseChildEntities:null,AlterFollowerDatabaseConfiguration:null,DropFollowerDatabases:null,ShowFollowerDatabase:null,AlterFollowerTablesPolicyCaching:null,DropFollowerTablesPolicyCaching:null,ShowFreshness:null,ShowFunctionSchemaAsJson:null,SetMaterializedViewAdmins:null,AddMaterializedViewAdmins:null,DropMaterializedViewAdmins:null,SetMaterializedViewConcurrency:null,ClearMaterializedViewStatistics:null,ShowMaterializedViewStatistics:null,ShowMaterializedViewDiagnostics:null,ShowMaterializedViewFailures:null,ShowMemory:null,CancelOperation:null,DisablePlugin:null,EnablePlugin:null,ShowPlugins:null,ShowPrincipalAccess:null,ShowDatabasePurgeOperation:null,ShowQueryExecution:null,AlterPoliciesOfRetention:null,DeletePoliciesOfRetention:null,CreateRowStore:null,DropRowStore:null,ShowRowStore:null,ShowRowStores:null,ShowRowStoreTransactions:null,ShowRowStoreSeals:null,ShowSchema:null,ShowCallStacks:null,ShowStreamingIngestionFailures:null,ShowStreamingIngestionStatistics:null,AlterTableRowStoreReferencesDropKey:null,AlterTableRowStoreReferencesDropRowStore:null,AlterTableRowStoreReferencesDropBlockedKeys:null,AlterTableRowStoreReferencesDisableKey:null,AlterTableRowStoreReferencesDisableRowStore:null,AlterTableRowStoreReferencesDisableBlockedKeys:null,SetTableRowStoreReferences:null,ShowTableRowStoreReferences:null,AlterTableColumnStatistics:null,AlterTableColumnStatisticsMethod:null,ShowTableColumnStatitics:null,ShowTableDimensions:null,DeleteTableRecords:null,TableDataUpdate:null,TableDataUpdateShortSyntax:null,DeleteMaterializedViewRecords:null,ShowTableColumnsClassification:null,ShowTableRowStores:null,ShowTableRowStoreSealInfo:null,ShowTablesColumnStatistics:null,ShowTableDataStatistics:null,CreateTempStorage:null,DropTempStorage:null,DropStoredQueryResultContainers:null,DropUnusedStoredQueryResultContainers:null,EnableDatabaseMaintenanceMode:null,DisableDatabaseMaintenanceMode:null,EnableDatabaseStreamingIngestionMaintenanceMode:null,DisableDatabaseStreamingIngestionMaintenanceMode:null,ShowQueryCallTree:null,ShowExtentCorruptedDatetime:null,PatchExtentCorruptedDatetime:null,ClearClusterCredStoreCache:null,ClearClusterGroupMembershipCache:null,ClearExternalArtifactsCache:null,ShowDatabasesEntities:null,ShowDatabaseEntity:null,ReplaceDatabaseKeyVaultSecrets:null,All:null},ctors:{init:function(){this._schema0="(DatabaseName: string, PersistentStorage: string, Version: string, IsCurrent: bool, DatabaseAccessMode: string, PrettyName: string, ReservedSlot1: bool, DatabaseId: guid, InTransitionTo: string)";this._schema1="(DatabaseName: string, PersistentStorage: string, Version: string, IsCurrent: bool, DatabaseAccessMode: string, PrettyName: string, AuthorizedPrincipals: string, RetentionPolicy: string, MergePolicy: string, ReservedSlot1: string, CachingPolicy: string, ShardingPolicy: string, StreamingIngestionPolicy: string, IngestionBatchingPolicy: string, TotalSize: real, DatabaseId: guid, InTransitionTo: string)";this._schema2="(DatabaseName: string, PersistentStorage: string, Version: string, IsCurrent: bool, DatabaseAccessMode: string, PrettyName: string, CurrentUserIsUnrestrictedViewer: bool, DatabaseId: guid, InTransitionTo: string)";this._schema3="(DatabaseName: string, PersistentStorage: string, Version: string, IsCurrent: bool, DatabaseAccessMode: string, PrettyName: string, DatabaseId: guid, AuthorizedPrincipals: string, RetentionPolicy: string, MergePolicy: string, CachingPolicy: string, ShardingPolicy: string, StreamingIngestionPolicy: string, IngestionBatchingPolicy: string)";this._schema4="(DatabaseName: string, Version: string, PersistentStorage: string, MetadataPersistentStorage: string, DatabaseAccessMode: string)";this._schema5="(DatabaseName: string, PrettyName: string)";this._schema6="(DatabaseName: string, TableName: string, ColumnName: string, ColumnType: string, IsDefaultTable: bool, IsDefaultColumn: bool, PrettyName: string, Version: string, Folder: string, DocString: string)";this._schema7="(DatabaseSchema: string)";this._schema8="(Name: string, Kind: string, Mapping: string, LastUpdatedOn: datetime, Database: string)";this._schema9="(TableName: string, DatabaseName: string, Folder: string, DocString: string, TotalExtents: long, TotalExtentSize: real, TotalOriginalSize: real, TotalRowCount: long, HotExtents: long, HotExtentSize: real, HotOriginalSize: real, HotRowCount: long, AuthorizedPrincipals: string, RetentionPolicy: string, CachingPolicy: string, ShardingPolicy: string, MergePolicy: string, StreamingIngestionPolicy: string, IngestionBatchingPolicy: string, MinExtentsCreationTime: datetime, MaxExtentsCreationTime: datetime, RowOrderPolicy: string, TableId: guid)";this._schema10="(TableName: string, Schema: string, DatabaseName: string, Folder: string, DocString: string)";this._schema11="(TableName: string, DatabaseName: string, Folder: string, DocString: string)";this._schema12="(TableName: string, DatabaseName: string)";this._schema13="(Name: string, Kind: string, Mapping: string, LastUpdatedOn: datetime, Database: string, Table: string)";this._schema14="(EntityName: string, DataType: string, Policy: string)";this._schema15="(Name: string, Parameters: string, Body: string, Folder: string, DocString: string)";this._schema16="(TableName: string, TableType: string, Folder: string, DocString: string, Properties: string, ConnectionStrings: dynamic, Partitions: dynamic, PathFormat: string)";this._schema17="(TableName: string, TableType: string, Folder: string, DocString: string, Schema: string, Properties: string)";this._schema18="()";this._schema19="(WorkloadGroupName: string, WorkloadGroup:string)";this._schema20="(PolicyName: string, EntityName: string, Policy: string, ChildEntities: string, EntityType: string)";this._schema21="(Name: string, IsDefault: bool, Template: string)";this._schema22="(Scope: string, DisplayName: string, AADObjectID: string, Role: string)";this._schema23="(Role: string, PrincipalType: string, PrincipalDisplayName: string, PrincipalObjectId: string, PrincipalFQN: string, Notes: string, RoleAssignmentIdentifier: string)";this._schema24="(PrincipalType: string, PrincipalDisplayName: string, PrincipalObjectId: string, PrincipalFQN: string, Application: string, User: string, BlockedUntil: datetime, Reason: string)";this._schema25="(ExtentId: guid, OriginalSize: long, ExtentSize: long, ColumnSize: long, IndexSize: long, RowCount: long)";this._schema26="(Name: string, ExternalTableName: string, Query: string, ForcedLatency: timespan, IntervalBetweenRuns: timespan, CursorScopedTables: string, ExportProperties: string, LastRunTime: datetime, StartCursor: string, IsDisabled: bool, LastRunResult: string, ExportedTo: datetime, IsRunning: bool)";this._schema27="(Name: string, SourceTable: string, Query: string, MaterializedTo: datetime, LastRun: datetime, LastRunResult: string, IsHealthy: bool, IsEnabled: bool, Folder: string, DocString: string, AutoUpdateSchema: bool, EffectiveDateTime: datetime, Lookback:timespan)";this._schema28="(MaterializedViewName: string, DatabaseName: string, Folder: string, DocString: string, TotalExtents: long, TotalExtentSize: real, TotalOriginalSize: real, TotalRowCount: long, HotExtents: long, HotExtentSize: real, HotOriginalSize: real, HotRowCount: long, AuthorizedPrincipals: string, RetentionPolicy: string, CachingPolicy: string, ShardingPolicy: string, MergePolicy: string, MinExtentsCreationTime: datetime, MaxExtentsCreationTime: datetime)";this._schema29="(Timestamp: datetime, ExternalTableName: string, Path: string, NumRecords: long)";this._schema30="(Timestamp: datetime, OperationId: string, Name: string, LastSuccessRun: datetime, FailureKind: string, Details: string)";this._schema31="(Event: string, EventTimestamp: datetime, Database: string, EntityName: string, UpdatedEntityName: string, EntityVersion: string, EntityContainerName: string, OriginalEntityState: string, UpdatedEntityState: string, ChangeCommand: string, Principal: string, RootActivityId: guid, ClientRequestId: string, User: string, OriginalEntityVersion: string)";this._schema32="(ExtentId: guid, DatabaseName: string, TableName: string, MaxCreatedOn: datetime, OriginalSize: real, ExtentSize: real, CompressedSize: real, IndexSize: real, Blocks: long, Segments: long, ExtentContainerId: string, RowCount: long, MinCreatedOn: datetime, Tags: string, Kind: string, DeletedRowCount: long)";this._schema33="(ExtentId: guid, DatabaseName: string, TableName: string, ExtentMetadata: string)";this._schema34="(TableId: guid, long ShardGroupCount: long, ShardCount: long, RowCount: long, OriginalSize: long, ShardSize: long, CompressedSize: long, IndexSize: long, DeletedRowCount: long, V2ShardCount: long, V2RowCount: long)";this._schema35="(OriginalExtentId: string, ResultExtentId: string, Duration: timespan)";this._schema36="(OriginalExtentId: string, ResultExtentId: string, Details: string)";this._schema37="(ExtentId: guid, TableName: string, CreatedOn: datetime)";this._schema38="(StoredQueryResultId:guid, Name:string, DatabaseName:string, PrincipalIdentity:string, SizeInBytes:long, RowCount:long, CreatedOn:datetime, ExpiresOn:datetime)";this._schema39="(Name: string, Entities: string)";this._schema40="(ExtentContainerId:guid, Url:string, State:string, CreatedOn:datetime, MaxDateTime:datetime, IsRecyclable:bool, StoresDatabaseMetadataPointer:bool, HardDeletePeriod:timespan, ActiveMetadataContainer:bool, MetadataContainer:bool)";this._schema41="(DatabaseName:string, EntityType:string, EntityName:string, DocString:string, Folder:string, CslInputSchema:string, Content:string, CslOutputSchema:string, Properties:dynamic)";this.ShowDatabase=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowDatabase",Kusto.Language.EngineCommands._schema0,"DatabaseShowCommand(null, (PropertyName, PropertyValue)*)");this.ShowDatabaseDetails=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowDatabaseDetails",Kusto.Language.EngineCommands._schema1,"DatabaseShowCommand(flavor, (PropertyName, PropertyValue)*)");this.ShowDatabaseIdentity=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowDatabaseIdentity",Kusto.Language.EngineCommands._schema2,"DatabaseShowCommand('identity', (PropertyName, PropertyValue)*)");this.ShowDatabasePolicies=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowDatabasePolicies",Kusto.Language.EngineCommands._schema3,"DatabaseShowCommand('policies', (PropertyName, PropertyValue)*)");this.ShowDatabaseDataStats=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowDatabaseDataStats","(DatabaseName: string, PersistentStorage: string, Version: string, IsCurrent: bool, DatabaseAccessMode: string, PrettyName: string, CurrentUseIsUnrestrictedViewer: bool, DatabaseId: guid, OriginalSize: real, ExtentSize: real, CompressedSize: real, IndexSize: real, RowCount: long, HotOriginalSize: real, HotExtentSize: real, HotCompressedSize: real, HotIndexSize: real, HotRowCount: long)","DatabaseShowCommand('datastats', (PropertyName, PropertyValue)*)");this.ShowDatabaseMetadata=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowDatabaseMetadata",Kusto.Language.EngineCommands._schema4,"DatabaseShowCommand('metadata', (PropertyName, PropertyValue)*)");this.ShowClusterDatabases=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowClusterDatabases",Kusto.Language.EngineCommands._schema0,"DatabasesShowCommand(null, DatabaseName*, (PropertyName, PropertyValue)*)");this.ShowClusterDatabasesDetails=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowClusterDatabasesDetails",Kusto.Language.EngineCommands._schema1,"DatabasesShowCommand('details', DatabaseName*, (PropertyName, PropertyValue)*)");this.ShowClusterDatabasesIdentity=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowClusterDatabasesIdentity",Kusto.Language.EngineCommands._schema2,"DatabasesShowCommand('identity', DatabaseName*, (PropertyName, PropertyValue)*)");this.ShowClusterDatabasesPolicies=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowClusterDatabasesPolicies",Kusto.Language.EngineCommands._schema3,"DatabasesShowCommand('policies', DatabaseName*, (PropertyName, PropertyValue)*)");this.ShowClusterDatabasesDataStats=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowClusterDatabasesDataStats","(DatabaseName: string, PersistentStorage: string, Version: string, IsCurrent: bool, DatabaseAccessMode: string, PrettyName: string, DatabaseId: guid, OriginalSize: real, ExtentSize: real, CompressedSize: real, IndexSize: real, RowCount: long, HotOriginalSize: real, HotExtentSize: real, HotCompressedSize: real, HotIndexSize: real, HotRowCount: long)","DatabasesShowCommand('datastats', DatabaseName*, (PropertyName, PropertyValue)*)");this.ShowClusterDatabasesMetadata=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowClusterDatabasesMetadata",Kusto.Language.EngineCommands._schema4,"DatabasesShowCommand('metadata', DatabaseName*, (PropertyName, PropertyValue)*)");this.CreateDatabase=new Kusto.Language.Symbols.CommandSymbol.$ctor1("CreateDatabase","(DatabaseName: string, PersistentPath: string, Created: string, StoresMetadata: bool, StoresData: bool)","DatabaseCreateCommand(DatabaseName, Path*, IfNotExists?, (PropertyName, PropertyValue)*)");this.AttachDatabase=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AttachDatabase","(Step: string, Duration: string)","DatabaseAttachCommand(DatabaseName, Path, ReadOnly ?? 'ReadWrite', Version, (PropertyName, PropertyValue)*)");this.DetachDatabase=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DetachDatabase","(Table: string, NumberOfRemovedExtents: string)","DatabaseDetachCommand(DatabaseName, IfExists?, SkipSeal?)");this.AlterDatabasePrettyName=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterDatabasePrettyName",Kusto.Language.EngineCommands._schema5,"DatabaseSetPrettyNameCommand(DatabaseName, PrettyName)");this.DropDatabasePrettyName=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DropDatabasePrettyName",Kusto.Language.EngineCommands._schema5,"DatabaseSetPrettyNameCommand(DatabaseName, null)");this.AlterDatabasePersistMetadata=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterDatabasePersistMetadata","(Moniker: guid, Url: string, State: string, CreatedOn: datetime, MaxDateTime: datetime, IsRecyclable: bool, StoresDatabaseMetadata: bool, HardDeletePeriod: timespan)","DatabaseMetadataContainerAlterCommand(DatabaseName, Path, AllowNonEmptyContainer?)");this.SetAccess=new Kusto.Language.Symbols.CommandSymbol.$ctor1("SetAccess","(DatabaseName: string, RequestedAccessMode: string, Status: string)","DatabaseSetAccessModeCommand(DatabaseName, AccessMode)");this.ShowDatabaseSchema=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowDatabaseSchema",Kusto.Language.EngineCommands._schema6,"SchemaShowCommand(Details?, (DatabaseName, Version))");this.ShowDatabaseSchemaAsJson=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowDatabaseSchemaAsJson",Kusto.Language.EngineCommands._schema7,"SchemaShowAsJsonCommand((DatabaseName, Version), (PropertyName, PropertyValue)*)");this.ShowDatabaseSchemaAsCslScript=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowDatabaseSchemaAsCslScript","(DatabaseSchemaScript: string)","DatabaseSchemaShowAsCslCommand(Script?, (DatabaseName, Version), (PropertyName, PropertyValue)*)");this.ShowDatabaseCslSchema=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowDatabaseCslSchema",Kusto.Language.EngineCommands._schema10,"DatabaseSchemaShowAsCslCommand(Script?, (DatabaseName, Version))");this.ShowDatabaseSchemaViolations=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowDatabaseSchemaViolations","(EntityKind: string, EntityName: string, Property: string, Reason: string)","DatabaseSchemaViolationsShowCommand(DatabaseName)");this.ShowDatabasesSchema=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowDatabasesSchema",Kusto.Language.EngineCommands._schema6,"SchemaShowCommand(Details?, (DatabaseName, Version)*)");this.ShowDatabasesSchemaAsJson=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowDatabasesSchemaAsJson",Kusto.Language.EngineCommands._schema7,"SchemaShowAsJsonCommand((DatabaseName, Version)*, (PropertyName, PropertyValue)*)");this.CreateDatabaseIngestionMapping=new Kusto.Language.Symbols.CommandSymbol.$ctor1("CreateDatabaseIngestionMapping",Kusto.Language.EngineCommands._schema8);this.CreateOrAlterDatabaseIngestionMapping=new Kusto.Language.Symbols.CommandSymbol.$ctor1("CreateOrAlterDatabaseIngestionMapping",Kusto.Language.EngineCommands._schema8);this.AlterDatabaseIngestionMapping=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterDatabaseIngestionMapping",Kusto.Language.EngineCommands._schema8);this.AlterMergeDatabaseIngestionMapping=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMergeDatabaseIngestionMapping",Kusto.Language.EngineCommands._schema8);this.ShowDatabaseIngestionMappings=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowDatabaseIngestionMappings",Kusto.Language.EngineCommands._schema8);this.ShowIngestionMappings=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowIngestionMappings",Kusto.Language.EngineCommands._schema18);this.DropDatabaseIngestionMapping=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DropDatabaseIngestionMapping",Kusto.Language.EngineCommands._schema8);this.ShowTables=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTables",Kusto.Language.EngineCommands._schema11);this.ShowTable=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTable","(AttributeName: string, AttributeType: string, ExtentSize: long, CompressionRatio: real, IndexSize: long, IndexSizePercent: real, OriginalSize: long, AttributeId: guid, SharedIndexSize: long, StorageEngineVersion: string)");this.ShowTablesDetails=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTablesDetails",Kusto.Language.EngineCommands._schema9);this.ShowTableDetails=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTableDetails",Kusto.Language.EngineCommands._schema9);this.ShowTableCslSchema=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTableCslSchema",Kusto.Language.EngineCommands._schema10);this.ShowTableSchemaAsJson=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTableSchemaAsJson",Kusto.Language.EngineCommands._schema10);this.CreateTable=new Kusto.Language.Symbols.CommandSymbol.$ctor1("CreateTable",Kusto.Language.EngineCommands._schema10);this.CreateTableBasedOnAnother=new Kusto.Language.Symbols.CommandSymbol.$ctor1("CreateTableBasedOnAnother",Kusto.Language.EngineCommands._schema10);this.CreateMergeTable=new Kusto.Language.Symbols.CommandSymbol.$ctor1("CreateMergeTable",Kusto.Language.EngineCommands._schema10);this.DefineTable=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DefineTable",Kusto.Language.EngineCommands._schema10);this.CreateTables=new Kusto.Language.Symbols.CommandSymbol.$ctor1("CreateTables",Kusto.Language.EngineCommands._schema11);this.CreateMergeTables=new Kusto.Language.Symbols.CommandSymbol.$ctor1("CreateMergeTables",Kusto.Language.EngineCommands._schema11);this.DefineTables=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DefineTables",Kusto.Language.EngineCommands._schema11);this.AlterTable=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterTable",Kusto.Language.EngineCommands._schema10);this.AlterMergeTable=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMergeTable",Kusto.Language.EngineCommands._schema10);this.AlterTableDocString=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterTableDocString",Kusto.Language.EngineCommands._schema10);this.AlterTableFolder=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterTableFolder",Kusto.Language.EngineCommands._schema10);this.RenameTable=new Kusto.Language.Symbols.CommandSymbol.$ctor1("RenameTable",Kusto.Language.EngineCommands._schema11);this.RenameTables=new Kusto.Language.Symbols.CommandSymbol.$ctor1("RenameTables",Kusto.Language.EngineCommands._schema11);this.DropTable=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DropTable",Kusto.Language.EngineCommands._schema12);this.UndoDropTable=new Kusto.Language.Symbols.CommandSymbol.$ctor1("UndoDropTable","(ExtentId: guid, NumberOfRecords: long, Status: string, FailureReason: string)");this.DropTables=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DropTables",Kusto.Language.EngineCommands._schema12);this.CreateTableIngestionMapping=new Kusto.Language.Symbols.CommandSymbol.$ctor1("CreateTableIngestionMapping",Kusto.Language.EngineCommands._schema13);this.CreateOrAlterTableIngestionMapping=new Kusto.Language.Symbols.CommandSymbol.$ctor1("CreateOrAlterTableIngestionMapping",Kusto.Language.EngineCommands._schema13);this.AlterTableIngestionMapping=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterTableIngestionMapping",Kusto.Language.EngineCommands._schema13);this.AlterMergeTableIngestionMapping=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMergeTableIngestionMapping",Kusto.Language.EngineCommands._schema13);this.ShowTableIngestionMappings=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTableIngestionMappings",Kusto.Language.EngineCommands._schema13);this.ShowTableIngestionMapping=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTableIngestionMapping",Kusto.Language.EngineCommands._schema13);this.DropTableIngestionMapping=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DropTableIngestionMapping",Kusto.Language.EngineCommands._schema13);this.RenameColumn=new Kusto.Language.Symbols.CommandSymbol.$ctor1("RenameColumn",Kusto.Language.EngineCommands._schema14);this.RenameColumns=new Kusto.Language.Symbols.CommandSymbol.$ctor1("RenameColumns",Kusto.Language.EngineCommands._schema14);this.AlterColumnType=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterColumnType",Kusto.Language.EngineCommands._schema14);this.DropColumn=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DropColumn",Kusto.Language.EngineCommands._schema10);this.DropTableColumns=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DropTableColumns",Kusto.Language.EngineCommands._schema10);this.AlterTableColumnDocStrings=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterTableColumnDocStrings",Kusto.Language.EngineCommands._schema10);this.AlterMergeTableColumnDocStrings=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMergeTableColumnDocStrings",Kusto.Language.EngineCommands._schema10);this.ShowFunctions=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowFunctions",Kusto.Language.EngineCommands._schema15);this.ShowFunction=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowFunction",Kusto.Language.EngineCommands._schema15);this.CreateFunction=new Kusto.Language.Symbols.CommandSymbol.$ctor1("CreateFunction",Kusto.Language.EngineCommands._schema15);this.AlterFunction=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterFunction",Kusto.Language.EngineCommands._schema15);this.CreateOrAlterFunction=new Kusto.Language.Symbols.CommandSymbol.$ctor1("CreateOrAlterFunction",Kusto.Language.EngineCommands._schema15);this.DropFunction=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DropFunction","(Name: string)");this.DropFunctions=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DropFunctions",Kusto.Language.EngineCommands._schema15);this.AlterFunctionDocString=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterFunctionDocString",Kusto.Language.EngineCommands._schema15);this.AlterFunctionFolder=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterFunctionFolder",Kusto.Language.EngineCommands._schema15);this.ShowExternalTables=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowExternalTables",Kusto.Language.EngineCommands._schema16);this.ShowExternalTable=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowExternalTable",Kusto.Language.EngineCommands._schema16);this.ShowExternalTableCslSchema=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowExternalTableCslSchema",Kusto.Language.EngineCommands._schema10);this.ShowExternalTableSchema=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowExternalTableSchema",Kusto.Language.EngineCommands._schema10);this.ShowExternalTableArtifacts=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowExternalTableArtifacts","(Uri: string, Partition: dynamic, Size: long)");this.DropExternalTable=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DropExternalTable",Kusto.Language.EngineCommands._schema16);this.CreateStorageExternalTable=new Kusto.Language.Symbols.CommandSymbol.$ctor1("CreateStorageExternalTable",Kusto.Language.EngineCommands._schema16);this.AlterStorageExternalTable=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterStorageExternalTable",Kusto.Language.EngineCommands._schema17);this.CreateOrAlterStorageExternalTable=new Kusto.Language.Symbols.CommandSymbol.$ctor1("CreateOrAlterStorageExternalTable",Kusto.Language.EngineCommands._schema17);this.CreateSqlExternalTable=new Kusto.Language.Symbols.CommandSymbol.$ctor1("CreateSqlExternalTable",Kusto.Language.EngineCommands._schema16);this.AlterSqlExternalTable=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterSqlExternalTable",Kusto.Language.EngineCommands._schema17);this.CreateOrAlterSqlExternalTable=new Kusto.Language.Symbols.CommandSymbol.$ctor1("CreateOrAlterSqlExternalTable",Kusto.Language.EngineCommands._schema17);this.CreateExternalTableMapping=new Kusto.Language.Symbols.CommandSymbol.$ctor1("CreateExternalTableMapping",Kusto.Language.EngineCommands._schema13);this.SetExternalTableAdmins=new Kusto.Language.Symbols.CommandSymbol.$ctor1("SetExternalTableAdmins",Kusto.Language.EngineCommands._schema18);this.AddExternalTableAdmins=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AddExternalTableAdmins",Kusto.Language.EngineCommands._schema18);this.DropExternalTableAdmins=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DropExternalTableAdmins",Kusto.Language.EngineCommands._schema18);this.AlterExternalTableDocString=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterExternalTableDocString",Kusto.Language.EngineCommands._schema18);this.AlterExternalTableFolder=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterExternalTableFolder",Kusto.Language.EngineCommands._schema18);this.ShowExternalTablePrincipals=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowExternalTablePrincipals",Kusto.Language.EngineCommands._schema18);this.ShowFabric=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowFabric",Kusto.Language.EngineCommands._schema18);this.AlterExternalTableMapping=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterExternalTableMapping",Kusto.Language.EngineCommands._schema13);this.ShowExternalTableMappings=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowExternalTableMappings",Kusto.Language.EngineCommands._schema13);this.ShowExternalTableMapping=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowExternalTableMapping",Kusto.Language.EngineCommands._schema13);this.DropExternalTableMapping=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DropExternalTableMapping",Kusto.Language.EngineCommands._schema13);this.ShowWorkloadGroups=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowWorkloadGroups",Kusto.Language.EngineCommands._schema19);this.ShowWorkloadGroup=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowWorkloadGroup",Kusto.Language.EngineCommands._schema19);this.CreateOrAleterWorkloadGroup=new Kusto.Language.Symbols.CommandSymbol.$ctor1("CreateOrAleterWorkloadGroup",Kusto.Language.EngineCommands._schema19);this.AlterMergeWorkloadGroup=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMergeWorkloadGroup",Kusto.Language.EngineCommands._schema19);this.DropWorkloadGroup=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DropWorkloadGroup",Kusto.Language.EngineCommands._schema19);this.ShowDatabasePolicyCaching=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowDatabasePolicyCaching",Kusto.Language.EngineCommands._schema20);this.ShowTablePolicyCaching=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTablePolicyCaching",Kusto.Language.EngineCommands._schema20);this.ShowTableStarPolicyCaching=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTableStarPolicyCaching",Kusto.Language.EngineCommands._schema20);this.ShowColumnPolicyCaching=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowColumnPolicyCaching",Kusto.Language.EngineCommands._schema20);this.ShowMaterializedViewPolicyCaching=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowMaterializedViewPolicyCaching",Kusto.Language.EngineCommands._schema20);this.ShowClusterPolicyCaching=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowClusterPolicyCaching",Kusto.Language.EngineCommands._schema20);this.AlterDatabasePolicyCaching=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterDatabasePolicyCaching",Kusto.Language.EngineCommands._schema20);this.AlterTablePolicyCaching=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterTablePolicyCaching",Kusto.Language.EngineCommands._schema20);this.AlterTablesPolicyCaching=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterTablesPolicyCaching",Kusto.Language.EngineCommands._schema18);this.AlterColumnPolicyCaching=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterColumnPolicyCaching",Kusto.Language.EngineCommands._schema20);this.AlterMaterializedViewPolicyCaching=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMaterializedViewPolicyCaching",Kusto.Language.EngineCommands._schema20);this.AlterClusterPolicyCaching=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterClusterPolicyCaching",Kusto.Language.EngineCommands._schema20);this.DeleteDatabasePolicyCaching=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DeleteDatabasePolicyCaching",Kusto.Language.EngineCommands._schema20);this.DeleteTablePolicyCaching=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DeleteTablePolicyCaching",Kusto.Language.EngineCommands._schema20);this.DeleteColumnPolicyCaching=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DeleteColumnPolicyCaching",Kusto.Language.EngineCommands._schema20);this.DeleteMaterializedViewPolicyCaching=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DeleteMaterializedViewPolicyCaching",Kusto.Language.EngineCommands._schema20);this.DeleteClusterPolicyCaching=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DeleteClusterPolicyCaching",Kusto.Language.EngineCommands._schema20);this.ShowTablePolicyIngestionTime=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTablePolicyIngestionTime",Kusto.Language.EngineCommands._schema20);this.ShowTableStarPolicyIngestionTime=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTableStarPolicyIngestionTime",Kusto.Language.EngineCommands._schema20);this.AlterTablePolicyIngestionTime=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterTablePolicyIngestionTime",Kusto.Language.EngineCommands._schema20);this.AlterTablesPolicyIngestionTime=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterTablesPolicyIngestionTime",Kusto.Language.EngineCommands._schema20);this.DeleteTablePolicyIngestionTime=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DeleteTablePolicyIngestionTime",Kusto.Language.EngineCommands._schema20);this.ShowTablePolicyRetention=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTablePolicyRetention",Kusto.Language.EngineCommands._schema20);this.ShowTableStarPolicyRetention=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTableStarPolicyRetention",Kusto.Language.EngineCommands._schema20);this.ShowDatabasePolicyRetention=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowDatabasePolicyRetention",Kusto.Language.EngineCommands._schema20);this.AlterTablePolicyRetention=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterTablePolicyRetention",Kusto.Language.EngineCommands._schema20);this.AlterMaterializedViewPolicyRetention=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMaterializedViewPolicyRetention",Kusto.Language.EngineCommands._schema20);this.AlterDatabasePolicyRetention=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterDatabasePolicyRetention",Kusto.Language.EngineCommands._schema20);this.AlterTablesPolicyRetention=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterTablesPolicyRetention",Kusto.Language.EngineCommands._schema20);this.AlterMergeTablePolicyRetention=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMergeTablePolicyRetention",Kusto.Language.EngineCommands._schema20);this.AlterMergeMaterializedViewPolicyRetention=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMergeMaterializedViewPolicyRetention",Kusto.Language.EngineCommands._schema20);this.AlterMergeDatabasePolicyRetention=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMergeDatabasePolicyRetention",Kusto.Language.EngineCommands._schema20);this.DeleteTablePolicyRetention=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DeleteTablePolicyRetention",Kusto.Language.EngineCommands._schema20);this.DeleteDatabasePolicyRetention=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DeleteDatabasePolicyRetention",Kusto.Language.EngineCommands._schema20);this.ShowDatabasePolicyHardRetentionViolations=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowDatabasePolicyHardRetentionViolations",Kusto.Language.EngineCommands._schema18);this.ShowDatabasePolicySoftRetentionViolations=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowDatabasePolicySoftRetentionViolations",Kusto.Language.EngineCommands._schema18);this.ShowTablePolicyRowLevelSecurity=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTablePolicyRowLevelSecurity",Kusto.Language.EngineCommands._schema20);this.ShowTableStarPolicyRowLevelSecurity=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTableStarPolicyRowLevelSecurity",Kusto.Language.EngineCommands._schema20);this.AlterTablePolicyRowLevelSecurity=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterTablePolicyRowLevelSecurity",Kusto.Language.EngineCommands._schema20);this.DeleteTablePolicyRowLevelSecurity=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DeleteTablePolicyRowLevelSecurity",Kusto.Language.EngineCommands._schema20);this.ShowMaterializedViewPolicyRowLevelSecurity=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowMaterializedViewPolicyRowLevelSecurity",Kusto.Language.EngineCommands._schema20);this.AlterMaterializedViewPolicyRowLevelSecurity=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMaterializedViewPolicyRowLevelSecurity",Kusto.Language.EngineCommands._schema20);this.DeleteMaterializedViewPolicyRowLevelSecurity=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DeleteMaterializedViewPolicyRowLevelSecurity",Kusto.Language.EngineCommands._schema20);this.ShowTablePolicyRowOrder=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTablePolicyRowOrder",Kusto.Language.EngineCommands._schema20);this.ShowTableStarPolicyRowOrder=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTableStarPolicyRowOrder",Kusto.Language.EngineCommands._schema20);this.AlterTablePolicyRowOrder=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterTablePolicyRowOrder",Kusto.Language.EngineCommands._schema20);this.AlterTablesPolicyRowOrder=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterTablesPolicyRowOrder",Kusto.Language.EngineCommands._schema20);this.AlterMergeTablePolicyRowOrder=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMergeTablePolicyRowOrder",Kusto.Language.EngineCommands._schema20);this.DeleteTablePolicyRowOrder=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DeleteTablePolicyRowOrder",Kusto.Language.EngineCommands._schema20);this.ShowTablePolicyUpdate=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTablePolicyUpdate",Kusto.Language.EngineCommands._schema20);this.ShowTableStarPolicyUpdate=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTableStarPolicyUpdate",Kusto.Language.EngineCommands._schema20);this.AlterTablePolicyUpdate=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterTablePolicyUpdate",Kusto.Language.EngineCommands._schema20);this.AlterMergeTablePolicyUpdate=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMergeTablePolicyUpdate",Kusto.Language.EngineCommands._schema20);this.DeleteTablePolicyUpdate=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DeleteTablePolicyUpdate",Kusto.Language.EngineCommands._schema20);this.ShowClusterPolicyIngestionBatching=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowClusterPolicyIngestionBatching",Kusto.Language.EngineCommands._schema20);this.ShowDatabasePolicyIngestionBatching=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowDatabasePolicyIngestionBatching",Kusto.Language.EngineCommands._schema20);this.ShowTablePolicyIngestionBatching=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTablePolicyIngestionBatching",Kusto.Language.EngineCommands._schema20);this.ShowTableStarPolicyIngestionBatching=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTableStarPolicyIngestionBatching",Kusto.Language.EngineCommands._schema20);this.AlterClusterPolicyIngestionBatching=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterClusterPolicyIngestionBatching",Kusto.Language.EngineCommands._schema20);this.AlterMergeClusterPolicyIngestionBatching=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMergeClusterPolicyIngestionBatching",Kusto.Language.EngineCommands._schema20);this.AlterDatabasePolicyIngestionBatching=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterDatabasePolicyIngestionBatching",Kusto.Language.EngineCommands._schema20);this.AlterMergeDatabasePolicyIngestionBatching=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMergeDatabasePolicyIngestionBatching",Kusto.Language.EngineCommands._schema20);this.AlterTablePolicyIngestionBatching=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterTablePolicyIngestionBatching",Kusto.Language.EngineCommands._schema20);this.AlterMergeTablePolicyIngestionBatching=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMergeTablePolicyIngestionBatching",Kusto.Language.EngineCommands._schema20);this.AlterTablesPolicyIngestionBatching=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterTablesPolicyIngestionBatching",Kusto.Language.EngineCommands._schema20);this.DeleteDatabasePolicyIngestionBatching=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DeleteDatabasePolicyIngestionBatching",Kusto.Language.EngineCommands._schema20);this.DeleteTablePolicyIngestionBatching=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DeleteTablePolicyIngestionBatching",Kusto.Language.EngineCommands._schema20);this.ShowDatabasePolicyEncoding=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowDatabasePolicyEncoding",Kusto.Language.EngineCommands._schema20);this.ShowTablePolicyEncoding=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTablePolicyEncoding",Kusto.Language.EngineCommands._schema20);this.ShowColumnPolicyEncoding=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowColumnPolicyEncoding",Kusto.Language.EngineCommands._schema20);this.AlterDatabasePolicyEncoding=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterDatabasePolicyEncoding",Kusto.Language.EngineCommands._schema20);this.AlterTablePolicyEncoding=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterTablePolicyEncoding",Kusto.Language.EngineCommands._schema20);this.AlterTableColumnsPolicyEncoding=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterTableColumnsPolicyEncoding",Kusto.Language.EngineCommands._schema20);this.AlterColumnPolicyEncoding=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterColumnPolicyEncoding",Kusto.Language.EngineCommands._schema20);this.AlterColumnsPolicyEncodingByQuery=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterColumnsPolicyEncodingByQuery",Kusto.Language.EngineCommands._schema20);this.AlterColumnPolicyEncodingType=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterColumnPolicyEncodingType",Kusto.Language.EngineCommands._schema20);this.AlterMergeDatabasePolicyEncoding=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMergeDatabasePolicyEncoding",Kusto.Language.EngineCommands._schema20);this.AlterMergeTablePolicyEncoding=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMergeTablePolicyEncoding",Kusto.Language.EngineCommands._schema20);this.AlterMergeColumnPolicyEncoding=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMergeColumnPolicyEncoding",Kusto.Language.EngineCommands._schema20);this.DeleteDatabasePolicyEncoding=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DeleteDatabasePolicyEncoding",Kusto.Language.EngineCommands._schema20);this.DeleteTablePolicyEncoding=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DeleteTablePolicyEncoding",Kusto.Language.EngineCommands._schema20);this.DeleteColumnPolicyEncoding=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DeleteColumnPolicyEncoding",Kusto.Language.EngineCommands._schema20);this.ShowDatabasePolicyMerge=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowDatabasePolicyMerge",Kusto.Language.EngineCommands._schema20);this.ShowTablePolicyMerge=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTablePolicyMerge",Kusto.Language.EngineCommands._schema20);this.ShowTableStarPolicyMerge=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTableStarPolicyMerge",Kusto.Language.EngineCommands._schema20);this.AlterDatabasePolicyMerge=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterDatabasePolicyMerge",Kusto.Language.EngineCommands._schema20);this.AlterTablePolicyMerge=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterTablePolicyMerge",Kusto.Language.EngineCommands._schema20);this.AlterTablesPolicyMerge=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterTablesPolicyMerge",Kusto.Language.EngineCommands._schema20);this.AlterMergeDatabasePolicyMerge=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMergeDatabasePolicyMerge",Kusto.Language.EngineCommands._schema20);this.AlterMergeTablePolicyMerge=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMergeTablePolicyMerge",Kusto.Language.EngineCommands._schema20);this.AlterMergeMaterializedViewPolicyMerge=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMergeMaterializedViewPolicyMerge",Kusto.Language.EngineCommands._schema20);this.DeleteDatabasePolicyMerge=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DeleteDatabasePolicyMerge",Kusto.Language.EngineCommands._schema20);this.DeleteTablePolicyMerge=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DeleteTablePolicyMerge",Kusto.Language.EngineCommands._schema20);this.AlterTablePolicyMirroring=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterTablePolicyMirroring",Kusto.Language.EngineCommands._schema20);this.AlterMergeTablePolicyMirroring=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMergeTablePolicyMirroring",Kusto.Language.EngineCommands._schema20);this.AlterTablePolicyMirroringWithJson=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterTablePolicyMirroringWithJson",Kusto.Language.EngineCommands._schema20);this.AlterMergeTablePolicyMirroringWithJson=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMergeTablePolicyMirroringWithJson",Kusto.Language.EngineCommands._schema20);this.DeleteTablePolicyMirroring=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DeleteTablePolicyMirroring",Kusto.Language.EngineCommands._schema20);this.ShowTablePolicyMirroring=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTablePolicyMirroring",Kusto.Language.EngineCommands._schema20);this.ShowTableStarPolicyMirroring=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTableStarPolicyMirroring",Kusto.Language.EngineCommands._schema20);this.AlterDatabasePolicyMirroring=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterDatabasePolicyMirroring",Kusto.Language.EngineCommands._schema20);this.AlterMergeDatabasePolicyMirroring=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMergeDatabasePolicyMirroring",Kusto.Language.EngineCommands._schema20);this.AlterDatabasePolicyMirroringWithJson=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterDatabasePolicyMirroringWithJson",Kusto.Language.EngineCommands._schema20);this.AlterMergeDatabasePolicyMirroringWithJson=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMergeDatabasePolicyMirroringWithJson",Kusto.Language.EngineCommands._schema20);this.DeleteDatabasePolicyMirroring=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DeleteDatabasePolicyMirroring",Kusto.Language.EngineCommands._schema20);this.ShowDatabasePolicyMirroring=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowDatabasePolicyMirroring",Kusto.Language.EngineCommands._schema20);this.AlterDatabaseTableMirroringPolicyTemplates=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterDatabaseTableMirroringPolicyTemplates",Kusto.Language.EngineCommands._schema21);this.AlterMergeDatabaseTableMirroringPolicyTemplates=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMergeDatabaseTableMirroringPolicyTemplates",Kusto.Language.EngineCommands._schema21);this.ShowDatabaseTableMirroringPolicyTemplates=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowDatabaseTableMirroringPolicyTemplates",Kusto.Language.EngineCommands._schema21);this.DropDatabaseTableMirroringPolicyTemplates=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DropDatabaseTableMirroringPolicyTemplates",Kusto.Language.EngineCommands._schema20);this.ApplyTableMirroringPolicyTemplateToTables=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ApplyTableMirroringPolicyTemplateToTables",Kusto.Language.EngineCommands._schema18);this.ShowTablePolicyPartitioning=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTablePolicyPartitioning",Kusto.Language.EngineCommands._schema20);this.ShowTableStarPolicyPartitioning=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTableStarPolicyPartitioning",Kusto.Language.EngineCommands._schema20);this.AlterTablePolicyPartitioning=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterTablePolicyPartitioning",Kusto.Language.EngineCommands._schema20);this.AlterMergeTablePolicyPartitioning=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMergeTablePolicyPartitioning",Kusto.Language.EngineCommands._schema20);this.AlterMaterializedViewPolicyPartitioning=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMaterializedViewPolicyPartitioning",Kusto.Language.EngineCommands._schema20);this.AlterMergeMaterializedViewPolicyPartitioning=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMergeMaterializedViewPolicyPartitioning",Kusto.Language.EngineCommands._schema20);this.DeleteTablePolicyPartitioning=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DeleteTablePolicyPartitioning",Kusto.Language.EngineCommands._schema20);this.DeleteMaterializedViewPolicyPartitioning=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DeleteMaterializedViewPolicyPartitioning",Kusto.Language.EngineCommands._schema20);this.ShowTablePolicyRestrictedViewAccess=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTablePolicyRestrictedViewAccess",Kusto.Language.EngineCommands._schema20);this.ShowTableStarPolicyRestrictedViewAccess=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTableStarPolicyRestrictedViewAccess",Kusto.Language.EngineCommands._schema20);this.AlterTablePolicyRestrictedViewAccess=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterTablePolicyRestrictedViewAccess",Kusto.Language.EngineCommands._schema20);this.AlterTablesPolicyRestrictedViewAccess=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterTablesPolicyRestrictedViewAccess",Kusto.Language.EngineCommands._schema20);this.DeleteTablePolicyRestrictedViewAccess=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DeleteTablePolicyRestrictedViewAccess",Kusto.Language.EngineCommands._schema20);this.ShowClusterPolicyRowStore=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowClusterPolicyRowStore",Kusto.Language.EngineCommands._schema20);this.AlterClusterPolicyRowStore=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterClusterPolicyRowStore",Kusto.Language.EngineCommands._schema20);this.AlterMergeClusterPolicyRowStore=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMergeClusterPolicyRowStore",Kusto.Language.EngineCommands._schema20);this.DeleteClusterPolicyRowStore=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DeleteClusterPolicyRowStore",Kusto.Language.EngineCommands._schema20);this.ShowClusterPolicySandbox=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowClusterPolicySandbox",Kusto.Language.EngineCommands._schema20);this.AlterClusterPolicySandbox=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterClusterPolicySandbox",Kusto.Language.EngineCommands._schema20);this.DeleteClusterPolicySandbox=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DeleteClusterPolicySandbox",Kusto.Language.EngineCommands._schema20);this.ShowClusterSandboxesStats=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowClusterSandboxesStats",Kusto.Language.EngineCommands._schema20);this.ShowDatabasePolicySharding=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowDatabasePolicySharding",Kusto.Language.EngineCommands._schema20);this.ShowTablePolicySharding=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTablePolicySharding",Kusto.Language.EngineCommands._schema20);this.ShowTableStarPolicySharding=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTableStarPolicySharding",Kusto.Language.EngineCommands._schema20);this.AlterDatabasePolicySharding=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterDatabasePolicySharding",Kusto.Language.EngineCommands._schema20);this.AlterTablePolicySharding=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterTablePolicySharding",Kusto.Language.EngineCommands._schema20);this.AlterMergeDatabasePolicySharding=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMergeDatabasePolicySharding",Kusto.Language.EngineCommands._schema20);this.AlterMergeTablePolicySharding=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMergeTablePolicySharding",Kusto.Language.EngineCommands._schema20);this.DeleteDatabasePolicySharding=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DeleteDatabasePolicySharding",Kusto.Language.EngineCommands._schema20);this.DeleteTablePolicySharding=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DeleteTablePolicySharding",Kusto.Language.EngineCommands._schema20);this.AlterClusterPolicySharding=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterClusterPolicySharding",Kusto.Language.EngineCommands._schema20);this.AlterMergeClusterPolicySharding=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMergeClusterPolicySharding",Kusto.Language.EngineCommands._schema20);this.DeleteClusterPolicySharding=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DeleteClusterPolicySharding",Kusto.Language.EngineCommands._schema20);this.ShowClusterPolicySharding=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowClusterPolicySharding",Kusto.Language.EngineCommands._schema20);this.ShowDatabasePolicyShardsGrouping=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowDatabasePolicyShardsGrouping",Kusto.Language.EngineCommands._schema20);this.AlterDatabasePolicyShardsGrouping=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterDatabasePolicyShardsGrouping",Kusto.Language.EngineCommands._schema20);this.AlterMergeDatabasePolicyShardsGrouping=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMergeDatabasePolicyShardsGrouping",Kusto.Language.EngineCommands._schema20);this.DeleteDatabasePolicyShardsGrouping=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DeleteDatabasePolicyShardsGrouping",Kusto.Language.EngineCommands._schema20);this.ShowDatabasePolicyStreamingIngestion=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowDatabasePolicyStreamingIngestion",Kusto.Language.EngineCommands._schema20);this.ShowTablePolicyStreamingIngestion=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTablePolicyStreamingIngestion",Kusto.Language.EngineCommands._schema20);this.ShowClusterPolicyStreamingIngestion=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowClusterPolicyStreamingIngestion",Kusto.Language.EngineCommands._schema20);this.AlterDatabasePolicyStreamingIngestion=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterDatabasePolicyStreamingIngestion",Kusto.Language.EngineCommands._schema20);this.AlterMergeDatabasePolicyStreamingIngestion=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMergeDatabasePolicyStreamingIngestion",Kusto.Language.EngineCommands._schema20);this.AlterTablePolicyStreamingIngestion=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterTablePolicyStreamingIngestion",Kusto.Language.EngineCommands._schema20);this.AlterMergeTablePolicyStreamingIngestion=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMergeTablePolicyStreamingIngestion",Kusto.Language.EngineCommands._schema20);this.AlterClusterPolicyStreamingIngestion=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterClusterPolicyStreamingIngestion",Kusto.Language.EngineCommands._schema20);this.AlterMergeClusterPolicyStreamingIngestion=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMergeClusterPolicyStreamingIngestion",Kusto.Language.EngineCommands._schema20);this.DeleteDatabasePolicyStreamingIngestion=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DeleteDatabasePolicyStreamingIngestion",Kusto.Language.EngineCommands._schema20);this.DeleteTablePolicyStreamingIngestion=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DeleteTablePolicyStreamingIngestion",Kusto.Language.EngineCommands._schema20);this.DeleteClusterPolicyStreamingIngestion=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DeleteClusterPolicyStreamingIngestion",Kusto.Language.EngineCommands._schema20);this.ShowDatabasePolicyManagedIdentity=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowDatabasePolicyManagedIdentity",Kusto.Language.EngineCommands._schema20);this.ShowClusterPolicyManagedIdentity=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowClusterPolicyManagedIdentity",Kusto.Language.EngineCommands._schema20);this.AlterDatabasePolicyManagedIdentity=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterDatabasePolicyManagedIdentity",Kusto.Language.EngineCommands._schema20);this.AlterMergeDatabasePolicyManagedIdentity=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMergeDatabasePolicyManagedIdentity",Kusto.Language.EngineCommands._schema20);this.AlterClusterPolicyManagedIdentity=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterClusterPolicyManagedIdentity",Kusto.Language.EngineCommands._schema20);this.AlterMergeClusterPolicyManagedIdentity=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMergeClusterPolicyManagedIdentity",Kusto.Language.EngineCommands._schema20);this.DeleteDatabasePolicyManagedIdentity=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DeleteDatabasePolicyManagedIdentity",Kusto.Language.EngineCommands._schema20);this.DeleteClusterPolicyManagedIdentity=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DeleteClusterPolicyManagedIdentity",Kusto.Language.EngineCommands._schema20);this.ShowTablePolicyAutoDelete=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTablePolicyAutoDelete",Kusto.Language.EngineCommands._schema20);this.AlterTablePolicyAutoDelete=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterTablePolicyAutoDelete",Kusto.Language.EngineCommands._schema20);this.DeleteTablePolicyAutoDelete=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DeleteTablePolicyAutoDelete",Kusto.Language.EngineCommands._schema20);this.ShowClusterPolicyCallout=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowClusterPolicyCallout",Kusto.Language.EngineCommands._schema20);this.AlterClusterPolicyCallout=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterClusterPolicyCallout",Kusto.Language.EngineCommands._schema20);this.AlterMergeClusterPolicyCallout=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMergeClusterPolicyCallout",Kusto.Language.EngineCommands._schema20);this.DeleteClusterPolicyCallout=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DeleteClusterPolicyCallout",Kusto.Language.EngineCommands._schema20);this.ShowClusterPolicyCapacity=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowClusterPolicyCapacity",Kusto.Language.EngineCommands._schema20);this.AlterClusterPolicyCapacity=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterClusterPolicyCapacity",Kusto.Language.EngineCommands._schema20);this.AlterMergeClusterPolicyCapacity=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMergeClusterPolicyCapacity",Kusto.Language.EngineCommands._schema20);this.ShowClusterPolicyRequestClassification=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowClusterPolicyRequestClassification",Kusto.Language.EngineCommands._schema20);this.AlterClusterPolicyRequestClassification=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterClusterPolicyRequestClassification",Kusto.Language.EngineCommands._schema20);this.AlterMergeClusterPolicyRequestClassification=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMergeClusterPolicyRequestClassification",Kusto.Language.EngineCommands._schema20);this.DeleteClusterPolicyRequestClassification=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DeleteClusterPolicyRequestClassification",Kusto.Language.EngineCommands._schema20);this.ShowClusterPolicyMultiDatabaseAdmins=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowClusterPolicyMultiDatabaseAdmins",Kusto.Language.EngineCommands._schema20);this.AlterClusterPolicyMultiDatabaseAdmins=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterClusterPolicyMultiDatabaseAdmins",Kusto.Language.EngineCommands._schema20);this.AlterMergeClusterPolicyMultiDatabaseAdmins=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMergeClusterPolicyMultiDatabaseAdmins",Kusto.Language.EngineCommands._schema20);this.ShowDatabasePolicyDiagnostics=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowDatabasePolicyDiagnostics",Kusto.Language.EngineCommands._schema20);this.ShowClusterPolicyDiagnostics=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowClusterPolicyDiagnostics",Kusto.Language.EngineCommands._schema20);this.AlterDatabasePolicyDiagnostics=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterDatabasePolicyDiagnostics",Kusto.Language.EngineCommands._schema20);this.AlterMergeDatabasePolicyDiagnostics=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMergeDatabasePolicyDiagnostics",Kusto.Language.EngineCommands._schema20);this.AlterClusterPolicyDiagnostics=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterClusterPolicyDiagnostics",Kusto.Language.EngineCommands._schema20);this.AlterMergeClusterPolicyDiagnostics=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMergeClusterPolicyDiagnostics",Kusto.Language.EngineCommands._schema20);this.DeleteDatabasePolicyDiagnostics=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DeleteDatabasePolicyDiagnostics",Kusto.Language.EngineCommands._schema20);this.ShowClusterPolicyQueryWeakConsistency=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowClusterPolicyQueryWeakConsistency",Kusto.Language.EngineCommands._schema20);this.AlterClusterPolicyQueryWeakConsistency=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterClusterPolicyQueryWeakConsistency",Kusto.Language.EngineCommands._schema20);this.AlterMergeClusterPolicyQueryWeakConsistency=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMergeClusterPolicyQueryWeakConsistency",Kusto.Language.EngineCommands._schema20);this.ShowTablePolicyExtentTagsRetention=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTablePolicyExtentTagsRetention",Kusto.Language.EngineCommands._schema20);this.ShowTableStarPolicyExtentTagsRetention=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTableStarPolicyExtentTagsRetention",Kusto.Language.EngineCommands._schema20);this.ShowDatabasePolicyExtentTagsRetention=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowDatabasePolicyExtentTagsRetention",Kusto.Language.EngineCommands._schema20);this.AlterTablePolicyExtentTagsRetention=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterTablePolicyExtentTagsRetention",Kusto.Language.EngineCommands._schema20);this.AlterDatabasePolicyExtentTagsRetention=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterDatabasePolicyExtentTagsRetention",Kusto.Language.EngineCommands._schema20);this.DeleteTablePolicyExtentTagsRetention=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DeleteTablePolicyExtentTagsRetention",Kusto.Language.EngineCommands._schema20);this.DeleteDatabasePolicyExtentTagsRetention=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DeleteDatabasePolicyExtentTagsRetention",Kusto.Language.EngineCommands._schema20);this.ShowPrincipalRoles=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowPrincipalRoles",Kusto.Language.EngineCommands._schema22);this.ShowDatabasePrincipalRoles=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowDatabasePrincipalRoles",Kusto.Language.EngineCommands._schema22);this.ShowTablePrincipalRoles=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTablePrincipalRoles",Kusto.Language.EngineCommands._schema22);this.ShowExternalTablesPrincipalRoles=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowExternalTablesPrincipalRoles",Kusto.Language.EngineCommands._schema22);this.ShowFunctionPrincipalRoles=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowFunctionPrincipalRoles",Kusto.Language.EngineCommands._schema22);this.ShowClusterPrincipalRoles=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowClusterPrincipalRoles",Kusto.Language.EngineCommands._schema22);this.ShowClusterPrincipals=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowClusterPrincipals",Kusto.Language.EngineCommands._schema23);this.ShowDatabasePrincipals=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowDatabasePrincipals",Kusto.Language.EngineCommands._schema23);this.ShowTablePrincipals=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTablePrincipals",Kusto.Language.EngineCommands._schema23);this.ShowFunctionPrincipals=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowFunctionPrincipals",Kusto.Language.EngineCommands._schema23);this.AddClusterRole=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AddClusterRole",Kusto.Language.EngineCommands._schema23);this.DropClusterRole=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DropClusterRole",Kusto.Language.EngineCommands._schema23);this.SetClusterRole=new Kusto.Language.Symbols.CommandSymbol.$ctor1("SetClusterRole",Kusto.Language.EngineCommands._schema23);this.AddDatabaseRole=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AddDatabaseRole",Kusto.Language.EngineCommands._schema23);this.DropDatabaseRole=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DropDatabaseRole",Kusto.Language.EngineCommands._schema23);this.SetDatabaseRole=new Kusto.Language.Symbols.CommandSymbol.$ctor1("SetDatabaseRole",Kusto.Language.EngineCommands._schema23);this.AddTableRole=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AddTableRole",Kusto.Language.EngineCommands._schema23);this.DropTableRole=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DropTableRole",Kusto.Language.EngineCommands._schema23);this.SetTableRole=new Kusto.Language.Symbols.CommandSymbol.$ctor1("SetTableRole",Kusto.Language.EngineCommands._schema23);this.AddFunctionRole=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AddFunctionRole",Kusto.Language.EngineCommands._schema23);this.DropFunctionRole=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DropFunctionRole",Kusto.Language.EngineCommands._schema23);this.SetFunctionRole=new Kusto.Language.Symbols.CommandSymbol.$ctor1("SetFunctionRole",Kusto.Language.EngineCommands._schema23);this.ShowClusterBlockedPrincipals=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowClusterBlockedPrincipals",Kusto.Language.EngineCommands._schema24);this.AddClusterBlockedPrincipals=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AddClusterBlockedPrincipals",Kusto.Language.EngineCommands._schema24);this.DropClusterBlockedPrincipals=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DropClusterBlockedPrincipals",Kusto.Language.EngineCommands._schema24);this.IngestIntoTable=new Kusto.Language.Symbols.CommandSymbol.$ctor1("IngestIntoTable","(ExtentId: guid, ItemLoaded: string, Duration: string, HasErrors: string, OperationId: guid)");this.IngestInlineIntoTable=new Kusto.Language.Symbols.CommandSymbol.$ctor1("IngestInlineIntoTable","(ExtentId: guid)");this.SetTable=new Kusto.Language.Symbols.CommandSymbol.$ctor1("SetTable",Kusto.Language.EngineCommands._schema25);this.AppendTable=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AppendTable",Kusto.Language.EngineCommands._schema25);this.SetOrAppendTable=new Kusto.Language.Symbols.CommandSymbol.$ctor1("SetOrAppendTable",Kusto.Language.EngineCommands._schema25);this.SetOrReplaceTable=new Kusto.Language.Symbols.CommandSymbol.$ctor1("SetOrReplaceTable",Kusto.Language.EngineCommands._schema25);this.ExportToStorage=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ExportToStorage",Kusto.Language.EngineCommands._schema18);this.ExportToSqlTable=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ExportToSqlTable",Kusto.Language.EngineCommands._schema18);this.ExportToExternalTable=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ExportToExternalTable",Kusto.Language.EngineCommands._schema18);this.CreateOrAlterContinuousExport=new Kusto.Language.Symbols.CommandSymbol.$ctor1("CreateOrAlterContinuousExport",Kusto.Language.EngineCommands._schema18);this.ShowContinuousExport=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowContinuousExport",Kusto.Language.EngineCommands._schema26);this.ShowContinuousExports=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowContinuousExports",Kusto.Language.EngineCommands._schema26);this.ShowClusterPendingContinuousExports=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowClusterPendingContinuousExports",Kusto.Language.EngineCommands._schema26);this.ShowContinuousExportExportedArtifacts=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowContinuousExportExportedArtifacts",Kusto.Language.EngineCommands._schema29);this.ShowContinuousExportFailures=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowContinuousExportFailures",Kusto.Language.EngineCommands._schema30);this.SetContinuousExportCursor=new Kusto.Language.Symbols.CommandSymbol.$ctor1("SetContinuousExportCursor",Kusto.Language.EngineCommands._schema18);this.DropContinuousExport=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DropContinuousExport",Kusto.Language.EngineCommands._schema26);this.EnableContinuousExport=new Kusto.Language.Symbols.CommandSymbol.$ctor1("EnableContinuousExport",Kusto.Language.EngineCommands._schema26);this.DisableContinuousExport=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DisableContinuousExport",Kusto.Language.EngineCommands._schema26);this.CreateMaterializedView=new Kusto.Language.Symbols.CommandSymbol.$ctor1("CreateMaterializedView",Kusto.Language.EngineCommands._schema18);this.CreateMaterializedViewOverMaterializedView=new Kusto.Language.Symbols.CommandSymbol.$ctor1("CreateMaterializedViewOverMaterializedView",Kusto.Language.EngineCommands._schema18);this.RenameMaterializedView=new Kusto.Language.Symbols.CommandSymbol.$ctor1("RenameMaterializedView",Kusto.Language.EngineCommands._schema27);this.ShowMaterializedView=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowMaterializedView",Kusto.Language.EngineCommands._schema27);this.ShowMaterializedViews=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowMaterializedViews",Kusto.Language.EngineCommands._schema27);this.ShowMaterializedViewsDetails=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowMaterializedViewsDetails",Kusto.Language.EngineCommands._schema28);this.ShowMaterializedViewDetails=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowMaterializedViewDetails",Kusto.Language.EngineCommands._schema28);this.ShowMaterializedViewPolicyRetention=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowMaterializedViewPolicyRetention",Kusto.Language.EngineCommands._schema20);this.ShowMaterializedViewPolicyMerge=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowMaterializedViewPolicyMerge",Kusto.Language.EngineCommands._schema20);this.ShowMaterializedViewPolicyPartitioning=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowMaterializedViewPolicyPartitioning",Kusto.Language.EngineCommands._schema20);this.ShowMaterializedViewExtents=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowMaterializedViewExtents",Kusto.Language.EngineCommands._schema32);this.AlterMaterializedView=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMaterializedView",Kusto.Language.EngineCommands._schema27);this.AlterMaterializedViewOverMaterializedView=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMaterializedViewOverMaterializedView",Kusto.Language.EngineCommands._schema27);this.CreateOrAlterMaterializedView=new Kusto.Language.Symbols.CommandSymbol.$ctor1("CreateOrAlterMaterializedView",Kusto.Language.EngineCommands._schema27);this.CreateOrAlterMaterializedViewOverMaterializedView=new Kusto.Language.Symbols.CommandSymbol.$ctor1("CreateOrAlterMaterializedViewOverMaterializedView",Kusto.Language.EngineCommands._schema27);this.DropMaterializedView=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DropMaterializedView",Kusto.Language.EngineCommands._schema27);this.EnableDisableMaterializedView=new Kusto.Language.Symbols.CommandSymbol.$ctor1("EnableDisableMaterializedView",Kusto.Language.EngineCommands._schema27);this.ShowMaterializedViewPrincipals=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowMaterializedViewPrincipals",Kusto.Language.EngineCommands._schema23);this.ShowMaterializedViewSchemaAsJson=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowMaterializedViewSchemaAsJson",Kusto.Language.EngineCommands._schema10);this.ShowMaterializedViewCslSchema=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowMaterializedViewCslSchema",Kusto.Language.EngineCommands._schema10);this.AlterMaterializedViewFolder=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMaterializedViewFolder",Kusto.Language.EngineCommands._schema27);this.AlterMaterializedViewDocString=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMaterializedViewDocString",Kusto.Language.EngineCommands._schema27);this.AlterMaterializedViewLookback=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMaterializedViewLookback",Kusto.Language.EngineCommands._schema27);this.AlterMaterializedViewAutoUpdateSchema=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMaterializedViewAutoUpdateSchema",Kusto.Language.EngineCommands._schema27);this.ClearMaterializedViewData=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ClearMaterializedViewData",Kusto.Language.EngineCommands._schema37);this.SetMaterializedViewCursor=new Kusto.Language.Symbols.CommandSymbol.$ctor1("SetMaterializedViewCursor",Kusto.Language.EngineCommands._schema18);this.ShowTableOperationsMirroringStatus=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTableOperationsMirroringStatus","(TableName: string, IsEnabled: bool, ExportProperties: string, ManagedIdentityIdentifier: string, IsExportRunning: bool, LastExportStartTime: datetime, LastExportResult: string, LastExportedDataTime: datetime)");this.ShowTableOperationsMirroringExportedArtifacts=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTableOperationsMirroringExportedArtifacts",Kusto.Language.EngineCommands._schema29);this.ShowTableOperationsMirroringFailures=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTableOperationsMirroringFailures",Kusto.Language.EngineCommands._schema30);this.ShowCluster=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowCluster","(NodeId: string, Address: string, Name: string, StartTime: datetime, IsAdmin: bool, MachineTotalMemory: long, MachineAvailableMemory: long, ProcessorCount: int, EnvironmentDescription: string)");this.ShowClusterDetails=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowClusterDetails","(NodeId: string, Address: string, Name: string, StartTime: datetime, IsAdmin: bool, MachineTotalMemory: long, MachineAvailableMemory: long, ProcessorCount: int, EnvironmentDescription: string, NetAndClsVersion: string)");this.ShowDiagnostics=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowDiagnostics","(IsHealthy: bool, EnvironmentDescription: string, IsScaleOutRequired: bool, MachinesTotal: int, MachinesOffline: int, NodeLastRestartedOn: datetime, AdminLastElectedOn: datetime, ExtentsTotal: int, DiskColdAllocationPercentage: int, InstancesTargetBasedOnDataCapacity: int, TotalOriginalDataSize: real, TotalExtentSize: real, IngestionsLoadFactor: real, IngestionsInProgress: long, IngestionsSuccessRate: real, MergesInProgress: long, BuildVersion: string, BuildTime: datetime, ClusterDataCapacityFactor: real, IsDataWarmingRequired: bool, DataWarmingLastRunOn: datetime, MergesSuccessRate: real, NotHealthyReason: string, IsAttentionRequired: bool, AttentionRequiredReason: string, ProductVersion: string, FailedIngestOperations: int, FailedMergeOperations: int, MaxExtentsInSingleTable: int, TableWithMaxExtents: string, WarmExtentSize: real, NumberOfDatabases: int, PurgeExtentsRebuildLoadFactor: real, PurgeExtentsRebuildInProgress: long, PurgesInProgress: long, RowStoreLocalStorageCapacityFactor: real, ExportsLoadFactor: real, ExportsInProgress: long, PendingContinuousExports: long, MaxContinuousExportLatenessMinutes: long, RowStoreSealsInProgress: long, IsRowStoreUnhealthy: bool, MachinesSuspended: int, DataPartitioningLoadFactor: real, DataPartitioningOperationsInProgress: long, MinPartitioningPercentageInSingleTable: real, TableWithMinPartitioningPercentage: string, V3DataCapacityFactor: real, MaterializedViewsInProgress: long, DataPartitioningOperationsInProgress: real, IngestionCapacityUtilization: real, ShardsWarmingStatus: string, ShardsWarmingTemperature: real, ShardsWarmingDetails: string, StoredQueryResultsInProgress: long, HotDataDiskSpaceUsage: real, MirroringOperationsLoadFactor: real, MirroringOperationsInProgress: long, QueryAccelerationLoadFactor: real, QueryAccelerationInProgress: long)");this.ShowCapacity=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowCapacity","(Resource: string, Total: long, Consumed: long, Remaining: long)");this.ShowOperations=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowOperations","(OperationId: guid, Operation: string, NodeId: string, StartedOn: datetime, LastUpdatedOn: datetime, Duration: timespan, State: string, Status: string, RootActivityId: guid, ShouldRetry: bool, Database: string, Principal: string, User: string, AdminEpochStartTime: datetime)");this.ShowOperationDetails=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowOperationDetails",Kusto.Language.EngineCommands._schema18);this.ShowJournal=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowJournal",Kusto.Language.EngineCommands._schema31);this.ShowDatabaseJournal=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowDatabaseJournal",Kusto.Language.EngineCommands._schema31);this.ShowClusterJournal=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowClusterJournal",Kusto.Language.EngineCommands._schema31);this.ShowQueries=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowQueries","(ClientActivityId: string, Text: string, Database: string, StartedOn: datetime, LastUpdatedOn: datetime, Duration: timespan, State: string, RootActivityId: guid, User: string, FailureReason: string, TotalCpu: timespan, CacheStatistics: dynamic, Application: string, MemoryPeak: long, ScannedExtentsStatistics: dynamic, Principal: string, ClientRequestProperties: dynamic, ResultSetStatistics: dynamic, WorkloadGroup: string)");this.ShowRunningQueries=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowRunningQueries","(ClientActivityId: string, Text: string, Database: string, StartedOn: datetime, LastUpdatedOn: datetime, Duration: timespan, State: string, RootActivityId: guid, User: string, FailureReason: string, TotalCpu: timespan, CacheStatistics: dynamic, Application: string, MemoryPeak: long, ScannedEventStatistics: dynamic, Pricipal: string, ClientRequestProperties: dynamic, ResultSetStatistics: dynamic, WorkloadGroup: string)");this.CancelQuery=new Kusto.Language.Symbols.CommandSymbol.$ctor1("CancelQuery",Kusto.Language.EngineCommands._schema18);this.ShowQueryPlan=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowQueryPlan","(ResultType: string, Format: string, Content: string)");this.ShowBasicAuthUsers=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowBasicAuthUsers","(UserName: string)");this.CreateBasicAuthUser=new Kusto.Language.Symbols.CommandSymbol.$ctor1("CreateBasicAuthUser",Kusto.Language.EngineCommands._schema18);this.DropBasicAuthUser=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DropBasicAuthUser",Kusto.Language.EngineCommands._schema18);this.ShowCache=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowCache","(NodeId: string, TotalMemoryCapacity: long, MemoryCacheCapacity: long, MemoryCacheInUse: long, MemoryCacheHitCount: long, TotalDiskCapacity: long, DiskCacheCapacity: long, DiskCacheInUse: long, DiskCacheHitCount: long, DiskCacheMissCount: long, MemoryCacheDetails: string, DiskCacheDetails: string, WarmedShardsSize: long, ShardsSizeToWarm: long, HotShardsSize: long)");this.AlterCache=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterCache",Kusto.Language.EngineCommands._schema18);this.ShowCommands=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowCommands","(ClientActivityId: string, CommandType: string, Text: string, Database: string, StartedOn: datetime, LastUpdatedOn: datetime, Duration: timespan, State: string, RootActivityId: guid, User: string, FailureReason: string, Application: string, Principal: string, TotalCpu: timespan, ResourcesUtilization: dynamic, ClientRequestProperties: dynamic, WorkloadGroup: string)");this.ShowCommandsAndQueries=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowCommandsAndQueries","(ClientActivityId: string, CommandType: string, Text: string, Database: string, StartedOn: datetime, LastUpdatedOn: datetime, Duration: timespan, State: string, FailureReason: string, RootActivityId: guid, User: string, Application: string, Principal: string, ClientRequestProperties: dynamic, TotalCpu: timespan, MemoryPeak: long, CacheStatistics: dynamic, ScannedExtentsStatistics: dynamic, ResultSetStatistics: dynamic, WorkloadGroup: string)");this.ShowIngestionFailures=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowIngestionFailures","(OperationId: guid, Database: string, Table: string, FailedOn: datetime, IngestionSourcePath: string, Details: string, FailureKind: string, RootActivityId: guid, OperationKind: string, OriginatesFromUpdatePolicy: bool, ErrorCode: string, Principal: string, ShouldRetry: bool, User: string, IngestionProperties: string)");this.ShowDataOperations=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowDataOperations","(Timestamp: datetime, Database: string, Table: string, ClientActivityId: string, OperationKind: string, OriginalSize: long, ExtentSize: long, RowCount: long, Duration: timespan, TotalCpu: timespan, ExtentCount: long, Principal: string, Properties: string)");this.ShowDatabaseKeyVaultSecrets=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowDatabaseKeyVaultSecrets","(KeyVaultSecretId: string)");this.ShowClusterExtents=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowClusterExtents",Kusto.Language.EngineCommands._schema32);this.ShowClusterExtentsMetadata=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowClusterExtentsMetadata",Kusto.Language.EngineCommands._schema33);this.ShowDatabaseExtents=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowDatabaseExtents",Kusto.Language.EngineCommands._schema32);this.ShowDatabaseExtentsMetadata=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowDatabaseExtentsMetadata",Kusto.Language.EngineCommands._schema33);this.ShowDatabaseExtentTagsStatistics=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowDatabaseExtentTagsStatistics","(TableName: string, TotalExtentsCount: long, TaggedExtentsCount: long, TotalTagsCount: long, TotalTagsLength: long, DropByTagsCount: long, DropByTagsLength: long, IngestByTagsCount: long, IngestByTagsLength: long)");this.ShowDatabaseExtentsPartitioningStatistics=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowDatabaseExtentsPartitioningStatistics","(TableName: string, PartitioningPolicy: dynamic, TotalRowCount: long, PartitionedRowCount: long, PartitionedRowsPercentage: double)");this.ShowTableExtents=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTableExtents",Kusto.Language.EngineCommands._schema32);this.ShowTableExtentsMetadata=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTableExtentsMetadata",Kusto.Language.EngineCommands._schema33);this.TableShardsGroupShow=new Kusto.Language.Symbols.CommandSymbol.$ctor1("TableShardsGroupShow",Kusto.Language.EngineCommands._schema32);this.TableShardsGroupMetadataShow=new Kusto.Language.Symbols.CommandSymbol.$ctor1("TableShardsGroupMetadataShow",Kusto.Language.EngineCommands._schema33);this.TableShardGroupsShow=new Kusto.Language.Symbols.CommandSymbol.$ctor1("TableShardGroupsShow","(Id: guid, ShardCount: long, RowCount: long, OriginalSize: long, ShardSize: long, CompressedSize: long, IndexSize: long, DeletedRowCount: long, V2ShardCount: long, V2RowCount: long, DateTimeColumnRanges: dynamic, Partition: dynamic)");this.TableShardGroupsStatisticsShow=new Kusto.Language.Symbols.CommandSymbol.$ctor1("TableShardGroupsStatisticsShow",Kusto.Language.EngineCommands._schema34);this.TablesShardGroupsStatisticsShow=new Kusto.Language.Symbols.CommandSymbol.$ctor1("TablesShardGroupsStatisticsShow",Kusto.Language.EngineCommands._schema34);this.DatabaseShardGroupsStatisticsShow=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DatabaseShardGroupsStatisticsShow",Kusto.Language.EngineCommands._schema34);this.MergeExtents=new Kusto.Language.Symbols.CommandSymbol.$ctor1("MergeExtents",Kusto.Language.EngineCommands._schema35);this.MergeExtentsDryrun=new Kusto.Language.Symbols.CommandSymbol.$ctor1("MergeExtentsDryrun",Kusto.Language.EngineCommands._schema35);this.MoveExtentsFrom=new Kusto.Language.Symbols.CommandSymbol.$ctor1("MoveExtentsFrom",Kusto.Language.EngineCommands._schema36);this.MoveExtentsQuery=new Kusto.Language.Symbols.CommandSymbol.$ctor1("MoveExtentsQuery",Kusto.Language.EngineCommands._schema36);this.TableShuffleExtents=new Kusto.Language.Symbols.CommandSymbol.$ctor1("TableShuffleExtents",Kusto.Language.EngineCommands._schema36);this.TableShuffleExtentsQuery=new Kusto.Language.Symbols.CommandSymbol.$ctor1("TableShuffleExtentsQuery",Kusto.Language.EngineCommands._schema36);this.ReplaceExtents=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ReplaceExtents",Kusto.Language.EngineCommands._schema36);this.DropExtent=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DropExtent",Kusto.Language.EngineCommands._schema37);this.DropExtents=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DropExtents",Kusto.Language.EngineCommands._schema37);this.DropExtentsPartitionMetadata=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DropExtentsPartitionMetadata",Kusto.Language.EngineCommands._schema18);this.DropPretendExtentsByProperties=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DropPretendExtentsByProperties",Kusto.Language.EngineCommands._schema37);this.ShowVersion=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowVersion","(BuildVersion: string, BuildTime: datetime, ServiceType: string, ProductVersion: string)");this.ClearTableData=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ClearTableData","(Status: string)");this.ClearTableCacheStreamingIngestionSchema=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ClearTableCacheStreamingIngestionSchema","(NodeId: string, Status: string)");this.StoredQueryResultSet=new Kusto.Language.Symbols.CommandSymbol.$ctor1("StoredQueryResultSet",Kusto.Language.EngineCommands._schema18);this.StoredQueryResultSetOrReplace=new Kusto.Language.Symbols.CommandSymbol.$ctor1("StoredQueryResultSetOrReplace",Kusto.Language.EngineCommands._schema18);this.StoredQueryResultsShow=new Kusto.Language.Symbols.CommandSymbol.$ctor1("StoredQueryResultsShow",Kusto.Language.EngineCommands._schema38);this.StoredQueryResultShowSchema=new Kusto.Language.Symbols.CommandSymbol.$ctor1("StoredQueryResultShowSchema","(StoredQueryResult:string, Schema:string)");this.StoredQueryResultDrop=new Kusto.Language.Symbols.CommandSymbol.$ctor1("StoredQueryResultDrop",Kusto.Language.EngineCommands._schema38);this.StoredQueryResultsDrop=new Kusto.Language.Symbols.CommandSymbol.$ctor1("StoredQueryResultsDrop",Kusto.Language.EngineCommands._schema38);this.ShowCertificates=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowCertificates",Kusto.Language.EngineCommands._schema18);this.ShowCloudSettings=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowCloudSettings",Kusto.Language.EngineCommands._schema18);this.ShowCommConcurrency=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowCommConcurrency",Kusto.Language.EngineCommands._schema18);this.ShowCommPools=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowCommPools",Kusto.Language.EngineCommands._schema18);this.ShowFabricCache=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowFabricCache",Kusto.Language.EngineCommands._schema18);this.ShowFabricLocks=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowFabricLocks",Kusto.Language.EngineCommands._schema18);this.ShowFabricClocks=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowFabricClocks",Kusto.Language.EngineCommands._schema18);this.ShowFeatureFlags=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowFeatureFlags",Kusto.Language.EngineCommands._schema18);this.ShowMemPools=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowMemPools",Kusto.Language.EngineCommands._schema18);this.ShowServicePoints=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowServicePoints",Kusto.Language.EngineCommands._schema18);this.ShowTcpConnections=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTcpConnections",Kusto.Language.EngineCommands._schema18);this.ShowTcpPorts=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTcpPorts",Kusto.Language.EngineCommands._schema18);this.ShowThreadPools=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowThreadPools",Kusto.Language.EngineCommands._schema18);this.ExecuteDatabaseScript=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ExecuteDatabaseScript",Kusto.Language.EngineCommands._schema18);this.ExecuteClusterScript=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ExecuteClusterScript",Kusto.Language.EngineCommands._schema18);this.CreateRequestSupport=new Kusto.Language.Symbols.CommandSymbol.$ctor1("CreateRequestSupport",Kusto.Language.EngineCommands._schema18);this.ShowRequestSupport=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowRequestSupport",Kusto.Language.EngineCommands._schema18);this.ShowClusterAdminState=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowClusterAdminState",Kusto.Language.EngineCommands._schema18);this.ClearRemoteClusterDatabaseSchema=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ClearRemoteClusterDatabaseSchema",Kusto.Language.EngineCommands._schema18);this.ShowClusterMonitoring=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowClusterMonitoring",Kusto.Language.EngineCommands._schema18);this.ShowClusterScaleIn=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowClusterScaleIn",Kusto.Language.EngineCommands._schema18);this.ShowClusterServices=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowClusterServices","(NodeId: string, IsClusterAdmin: bool, IsFabricManager: bool, IsDatabaseAdmin: bool, IsWeakConsistencyNode: bool, IsRowStoreHostNode: bool, IsDataNode: bool)");this.ShowClusterNetwork=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowClusterNetwork",Kusto.Language.EngineCommands._schema18);this.AlterClusterStorageKeys=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterClusterStorageKeys",Kusto.Language.EngineCommands._schema18);this.ShowClusterStorageKeysHash=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowClusterStorageKeysHash",Kusto.Language.EngineCommands._schema18);this.AlterFabricServiceAssignmentsCommand=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterFabricServiceAssignmentsCommand",Kusto.Language.EngineCommands._schema18);this.DropFabricServiceAssignmentsCommand=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DropFabricServiceAssignmentsCommand",Kusto.Language.EngineCommands._schema18);this.CreateEntityGroupCommand=new Kusto.Language.Symbols.CommandSymbol.$ctor1("CreateEntityGroupCommand",Kusto.Language.EngineCommands._schema39);this.CreateOrAlterEntityGroupCommand=new Kusto.Language.Symbols.CommandSymbol.$ctor1("CreateOrAlterEntityGroupCommand",Kusto.Language.EngineCommands._schema39);this.AlterEntityGroup=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterEntityGroup",Kusto.Language.EngineCommands._schema39);this.AlterMergeEntityGroup=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMergeEntityGroup",Kusto.Language.EngineCommands._schema39);this.DropEntityGroup=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DropEntityGroup",Kusto.Language.EngineCommands._schema39);this.ShowEntityGroup=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowEntityGroup",Kusto.Language.EngineCommands._schema39);this.ShowEntityGroups=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowEntityGroups",Kusto.Language.EngineCommands._schema39);this.AlterExtentContainersAdd=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterExtentContainersAdd",Kusto.Language.EngineCommands._schema40);this.AlterExtentContainersDrop=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterExtentContainersDrop",Kusto.Language.EngineCommands._schema18);this.AlterExtentContainersRecycle=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterExtentContainersRecycle",Kusto.Language.EngineCommands._schema18);this.AlterExtentContainersSet=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterExtentContainersSet",Kusto.Language.EngineCommands._schema40);this.ShowExtentContainers=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowExtentContainers",Kusto.Language.EngineCommands._schema40);this.DropEmptyExtentContainers=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DropEmptyExtentContainers",Kusto.Language.EngineCommands._schema18);this.CleanDatabaseExtentContainers=new Kusto.Language.Symbols.CommandSymbol.$ctor1("CleanDatabaseExtentContainers",Kusto.Language.EngineCommands._schema18);this.ShowDatabaseExtentContainersCleanOperations=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowDatabaseExtentContainersCleanOperations",Kusto.Language.EngineCommands._schema18);this.ClearDatabaseCacheQueryResults=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ClearDatabaseCacheQueryResults",Kusto.Language.EngineCommands._schema18);this.ShowDatabaseCacheQueryResults=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowDatabaseCacheQueryResults",Kusto.Language.EngineCommands._schema18);this.ShowDatabasesManagementGroups=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowDatabasesManagementGroups",Kusto.Language.EngineCommands._schema18);this.AlterDatabaseStorageKeys=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterDatabaseStorageKeys",Kusto.Language.EngineCommands._schema18);this.ClearDatabaseCacheStreamingIngestionSchema=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ClearDatabaseCacheStreamingIngestionSchema",Kusto.Language.EngineCommands._schema18);this.ClearDatabaseCacheQueryWeakConsistency=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ClearDatabaseCacheQueryWeakConsistency",Kusto.Language.EngineCommands._schema18);this.ShowEntitySchema=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowEntitySchema",Kusto.Language.EngineCommands._schema18);this.ShowExtentDetails=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowExtentDetails",Kusto.Language.EngineCommands._schema18);this.ShowExtentColumnStorageStats=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowExtentColumnStorageStats",Kusto.Language.EngineCommands._schema18);this.AttachExtentsIntoTableByContainer=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AttachExtentsIntoTableByContainer",Kusto.Language.EngineCommands._schema18);this.AttachExtentsIntoTableByMetadata=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AttachExtentsIntoTableByMetadata",Kusto.Language.EngineCommands._schema18);this.AlterExtentTagsFromQuery=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterExtentTagsFromQuery",Kusto.Language.EngineCommands._schema18);this.AlterMergeExtentTagsFromQuery=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterMergeExtentTagsFromQuery",Kusto.Language.EngineCommands._schema18);this.DropExtentTagsFromQuery=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DropExtentTagsFromQuery",Kusto.Language.EngineCommands._schema18);this.DropExtentTagsFromTable=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DropExtentTagsFromTable",Kusto.Language.EngineCommands._schema18);this.DropExtentTagsRetention=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DropExtentTagsRetention",Kusto.Language.EngineCommands._schema18);this.MergeDatabaseShardGroups=new Kusto.Language.Symbols.CommandSymbol.$ctor1("MergeDatabaseShardGroups",Kusto.Language.EngineCommands._schema18);this.AlterFollowerClusterConfiguration=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterFollowerClusterConfiguration",Kusto.Language.EngineCommands._schema18);this.AddFollowerDatabaseAuthorizedPrincipals=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AddFollowerDatabaseAuthorizedPrincipals",Kusto.Language.EngineCommands._schema18);this.DropFollowerDatabaseAuthorizedPrincipals=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DropFollowerDatabaseAuthorizedPrincipals",Kusto.Language.EngineCommands._schema18);this.AlterFollowerDatabaseAuthorizedPrincipals=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterFollowerDatabaseAuthorizedPrincipals",Kusto.Language.EngineCommands._schema18);this.DropFollowerDatabasePolicyCaching=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DropFollowerDatabasePolicyCaching",Kusto.Language.EngineCommands._schema18);this.AlterFollowerDatabaseChildEntities=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterFollowerDatabaseChildEntities",Kusto.Language.EngineCommands._schema18);this.AlterFollowerDatabaseConfiguration=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterFollowerDatabaseConfiguration",Kusto.Language.EngineCommands._schema18);this.DropFollowerDatabases=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DropFollowerDatabases",Kusto.Language.EngineCommands._schema18);this.ShowFollowerDatabase=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowFollowerDatabase",Kusto.Language.EngineCommands._schema18);this.AlterFollowerTablesPolicyCaching=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterFollowerTablesPolicyCaching",Kusto.Language.EngineCommands._schema18);this.DropFollowerTablesPolicyCaching=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DropFollowerTablesPolicyCaching",Kusto.Language.EngineCommands._schema18);this.ShowFreshness=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowFreshness",Kusto.Language.EngineCommands._schema18);this.ShowFunctionSchemaAsJson=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowFunctionSchemaAsJson",Kusto.Language.EngineCommands._schema18);this.SetMaterializedViewAdmins=new Kusto.Language.Symbols.CommandSymbol.$ctor1("SetMaterializedViewAdmins",Kusto.Language.EngineCommands._schema18);this.AddMaterializedViewAdmins=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AddMaterializedViewAdmins",Kusto.Language.EngineCommands._schema18);this.DropMaterializedViewAdmins=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DropMaterializedViewAdmins",Kusto.Language.EngineCommands._schema18);this.SetMaterializedViewConcurrency=new Kusto.Language.Symbols.CommandSymbol.$ctor1("SetMaterializedViewConcurrency",Kusto.Language.EngineCommands._schema18);this.ClearMaterializedViewStatistics=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ClearMaterializedViewStatistics",Kusto.Language.EngineCommands._schema18);this.ShowMaterializedViewStatistics=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowMaterializedViewStatistics",Kusto.Language.EngineCommands._schema18);this.ShowMaterializedViewDiagnostics=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowMaterializedViewDiagnostics",Kusto.Language.EngineCommands._schema18);this.ShowMaterializedViewFailures=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowMaterializedViewFailures",Kusto.Language.EngineCommands._schema18);this.ShowMemory=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowMemory",Kusto.Language.EngineCommands._schema18);this.CancelOperation=new Kusto.Language.Symbols.CommandSymbol.$ctor1("CancelOperation",Kusto.Language.EngineCommands._schema18);this.DisablePlugin=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DisablePlugin",Kusto.Language.EngineCommands._schema18);this.EnablePlugin=new Kusto.Language.Symbols.CommandSymbol.$ctor1("EnablePlugin",Kusto.Language.EngineCommands._schema18);this.ShowPlugins=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowPlugins",Kusto.Language.EngineCommands._schema18);this.ShowPrincipalAccess=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowPrincipalAccess",Kusto.Language.EngineCommands._schema18);this.ShowDatabasePurgeOperation=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowDatabasePurgeOperation",Kusto.Language.EngineCommands._schema18);this.ShowQueryExecution=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowQueryExecution",Kusto.Language.EngineCommands._schema18);this.AlterPoliciesOfRetention=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterPoliciesOfRetention",Kusto.Language.EngineCommands._schema18);this.DeletePoliciesOfRetention=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DeletePoliciesOfRetention",Kusto.Language.EngineCommands._schema18);this.CreateRowStore=new Kusto.Language.Symbols.CommandSymbol.$ctor1("CreateRowStore",Kusto.Language.EngineCommands._schema18);this.DropRowStore=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DropRowStore",Kusto.Language.EngineCommands._schema18);this.ShowRowStore=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowRowStore","(RowStoreName:string,RowStoreId:guid,RowStoreKey:string,OrdinalFrom:long,OrdinalTo:long,EstimatedDataSize:long,MinWriteAheadLogOffset:long, LocalStorageSize:long,LocalStorageStartOffset:long,Status:int,StatusLastUpdatedOn:datetime,DatabaseName:string,TableName:string,AssignedToNode:string,LatestIngestionTime:datetime)");this.ShowRowStores=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowRowStores","(RowStoreName:string,RowStoreId:guid,WriteAheadLogStorage:string,PersistentStorage:string,IsActive:bool,AssignedToNode:string,NumberOfKeys:long,WriteAheadLogSize:long, WriteAheadLogStartOffset:long,LocalStorageSize:long,WriteAheadDistanceToSizeRatioThreshold:real,InsertsConcurrencyLimit:long,KeyInsertsConcurrencyLimit:long,UnsealedSizePerKeyLimit:long, NodeInsertsConcurrencyLimit:long,Status:string,StatusLastUpdatedOn:datetime,UsageTags:string,IsEmpty:bool,IsDataAvailableForQuery:bool)");this.ShowRowStoreTransactions=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowRowStoreTransactions",Kusto.Language.EngineCommands._schema18);this.ShowRowStoreSeals=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowRowStoreSeals",Kusto.Language.EngineCommands._schema18);this.ShowSchema=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowSchema",Kusto.Language.EngineCommands._schema18);this.ShowCallStacks=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowCallStacks",Kusto.Language.EngineCommands._schema18);this.ShowStreamingIngestionFailures=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowStreamingIngestionFailures","(Database: string, Table: string, Principal: string, RootActivityId: guid, IngestionProperties: dynamic, Count: long, FirstFailureOn: datetime, LastFailureOn: datetime, FailureKind: string, ErrorCode: string, Details: string)");this.ShowStreamingIngestionStatistics=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowStreamingIngestionStatistics","(Database:string, Table:string, StartTime:datetime, EndTime:datetime, Count:long, MinDuration:timespan, MaxDuration:timespan, AvgDuration:timespan, TotalDataSize:long, MinDataSize:long, MaxDataSize:long, TotalRowCount:long, MinRowCount:long, MaxRowCount:long, IngestionStatus:string, NumOfRowStoresReferences:int, Principal:string, NodeId:string, IngestionProperties:dynamic)");this.AlterTableRowStoreReferencesDropKey=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterTableRowStoreReferencesDropKey",Kusto.Language.EngineCommands._schema18);this.AlterTableRowStoreReferencesDropRowStore=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterTableRowStoreReferencesDropRowStore",Kusto.Language.EngineCommands._schema18);this.AlterTableRowStoreReferencesDropBlockedKeys=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterTableRowStoreReferencesDropBlockedKeys",Kusto.Language.EngineCommands._schema18);this.AlterTableRowStoreReferencesDisableKey=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterTableRowStoreReferencesDisableKey",Kusto.Language.EngineCommands._schema18);this.AlterTableRowStoreReferencesDisableRowStore=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterTableRowStoreReferencesDisableRowStore",Kusto.Language.EngineCommands._schema18);this.AlterTableRowStoreReferencesDisableBlockedKeys=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterTableRowStoreReferencesDisableBlockedKeys",Kusto.Language.EngineCommands._schema18);this.SetTableRowStoreReferences=new Kusto.Language.Symbols.CommandSymbol.$ctor1("SetTableRowStoreReferences",Kusto.Language.EngineCommands._schema18);this.ShowTableRowStoreReferences=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTableRowStoreReferences","(DatabaseName:string, TableName:string, RowstoreReferenceKey:string, RowStoreName:string, EnabledForIngestion:bool)");this.AlterTableColumnStatistics=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterTableColumnStatistics",Kusto.Language.EngineCommands._schema18);this.AlterTableColumnStatisticsMethod=new Kusto.Language.Symbols.CommandSymbol.$ctor1("AlterTableColumnStatisticsMethod",Kusto.Language.EngineCommands._schema18);this.ShowTableColumnStatitics=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTableColumnStatitics",Kusto.Language.EngineCommands._schema18);this.ShowTableDimensions=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTableDimensions",Kusto.Language.EngineCommands._schema18);this.DeleteTableRecords=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DeleteTableRecords",Kusto.Language.EngineCommands._schema18);this.TableDataUpdate=new Kusto.Language.Symbols.CommandSymbol.$ctor1("TableDataUpdate",Kusto.Language.EngineCommands._schema18);this.TableDataUpdateShortSyntax=new Kusto.Language.Symbols.CommandSymbol.$ctor1("TableDataUpdateShortSyntax",Kusto.Language.EngineCommands._schema18);this.DeleteMaterializedViewRecords=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DeleteMaterializedViewRecords",Kusto.Language.EngineCommands._schema18);this.ShowTableColumnsClassification=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTableColumnsClassification",Kusto.Language.EngineCommands._schema18);this.ShowTableRowStores=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTableRowStores","(DatabaseName:string,TableName:string,ExtentId:guid,IsSealed:bool,RowStoreName:string,RowStoreId:string,RowStoreKey:string,OrdinalFrom:long,OrdinalTo:long,WriteAheadLogSize:long,LocalStorageSize:long,EstimatedDataSize:long,MinWriteAheadLogOffset:long)");this.ShowTableRowStoreSealInfo=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTableRowStoreSealInfo",Kusto.Language.EngineCommands._schema18);this.ShowTablesColumnStatistics=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTablesColumnStatistics",Kusto.Language.EngineCommands._schema18);this.ShowTableDataStatistics=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowTableDataStatistics","(ColumnName: string, ColumnType: string, ColumnId: guid, OriginalSize: long, ExtentSize: long, CompressionRatio: real, DataCompressionSize: long, SharedIndexSize: long, IndexSize: long, IndexSizePercent: real,StorageEngineVersion: string, PresentRowCount: long, DeletedRowCount: long, SamplePercent: real, IncludeColdData: bool)");this.CreateTempStorage=new Kusto.Language.Symbols.CommandSymbol.$ctor1("CreateTempStorage",Kusto.Language.EngineCommands._schema18);this.DropTempStorage=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DropTempStorage",Kusto.Language.EngineCommands._schema18);this.DropStoredQueryResultContainers=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DropStoredQueryResultContainers",Kusto.Language.EngineCommands._schema18);this.DropUnusedStoredQueryResultContainers=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DropUnusedStoredQueryResultContainers",Kusto.Language.EngineCommands._schema18);this.EnableDatabaseMaintenanceMode=new Kusto.Language.Symbols.CommandSymbol.$ctor1("EnableDatabaseMaintenanceMode",Kusto.Language.EngineCommands._schema18);this.DisableDatabaseMaintenanceMode=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DisableDatabaseMaintenanceMode",Kusto.Language.EngineCommands._schema18);this.EnableDatabaseStreamingIngestionMaintenanceMode=new Kusto.Language.Symbols.CommandSymbol.$ctor1("EnableDatabaseStreamingIngestionMaintenanceMode",Kusto.Language.EngineCommands._schema18);this.DisableDatabaseStreamingIngestionMaintenanceMode=new Kusto.Language.Symbols.CommandSymbol.$ctor1("DisableDatabaseStreamingIngestionMaintenanceMode",Kusto.Language.EngineCommands._schema18);this.ShowQueryCallTree=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowQueryCallTree",Kusto.Language.EngineCommands._schema18);this.ShowExtentCorruptedDatetime=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowExtentCorruptedDatetime",Kusto.Language.EngineCommands._schema18);this.PatchExtentCorruptedDatetime=new Kusto.Language.Symbols.CommandSymbol.$ctor1("PatchExtentCorruptedDatetime",Kusto.Language.EngineCommands._schema18);this.ClearClusterCredStoreCache=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ClearClusterCredStoreCache",Kusto.Language.EngineCommands._schema18);this.ClearClusterGroupMembershipCache=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ClearClusterGroupMembershipCache",Kusto.Language.EngineCommands._schema18);this.ClearExternalArtifactsCache=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ClearExternalArtifactsCache",Kusto.Language.EngineCommands._schema18);this.ShowDatabasesEntities=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowDatabasesEntities",Kusto.Language.EngineCommands._schema41);this.ShowDatabaseEntity=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ShowDatabaseEntity",Kusto.Language.EngineCommands._schema41);this.ReplaceDatabaseKeyVaultSecrets=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ReplaceDatabaseKeyVaultSecrets",Kusto.Language.EngineCommands._schema18);this.All=System.Array.init([Kusto.Language.EngineCommands.ShowDatabase,Kusto.Language.EngineCommands.ShowDatabaseDetails,Kusto.Language.EngineCommands.ShowDatabaseIdentity,Kusto.Language.EngineCommands.ShowDatabasePolicies,Kusto.Language.EngineCommands.ShowDatabaseDataStats,Kusto.Language.EngineCommands.ShowDatabaseMetadata,Kusto.Language.EngineCommands.ShowClusterDatabases,Kusto.Language.EngineCommands.ShowClusterDatabasesDetails,Kusto.Language.EngineCommands.ShowClusterDatabasesIdentity,Kusto.Language.EngineCommands.ShowClusterDatabasesPolicies,Kusto.Language.EngineCommands.ShowClusterDatabasesDataStats,Kusto.Language.EngineCommands.ShowClusterDatabasesMetadata,Kusto.Language.EngineCommands.CreateDatabase,Kusto.Language.EngineCommands.AttachDatabase,Kusto.Language.EngineCommands.DetachDatabase,Kusto.Language.EngineCommands.AlterDatabasePrettyName,Kusto.Language.EngineCommands.DropDatabasePrettyName,Kusto.Language.EngineCommands.AlterDatabasePersistMetadata,Kusto.Language.EngineCommands.SetAccess,Kusto.Language.EngineCommands.ShowDatabaseSchema,Kusto.Language.EngineCommands.ShowDatabaseSchemaAsJson,Kusto.Language.EngineCommands.ShowDatabaseSchemaAsCslScript,Kusto.Language.EngineCommands.ShowDatabaseCslSchema,Kusto.Language.EngineCommands.ShowDatabaseSchemaViolations,Kusto.Language.EngineCommands.ShowDatabasesSchema,Kusto.Language.EngineCommands.ShowDatabasesSchemaAsJson,Kusto.Language.EngineCommands.CreateDatabaseIngestionMapping,Kusto.Language.EngineCommands.CreateOrAlterDatabaseIngestionMapping,Kusto.Language.EngineCommands.AlterDatabaseIngestionMapping,Kusto.Language.EngineCommands.AlterMergeDatabaseIngestionMapping,Kusto.Language.EngineCommands.ShowDatabaseIngestionMappings,Kusto.Language.EngineCommands.ShowIngestionMappings,Kusto.Language.EngineCommands.DropDatabaseIngestionMapping,Kusto.Language.EngineCommands.ShowTables,Kusto.Language.EngineCommands.ShowTable,Kusto.Language.EngineCommands.ShowTablesDetails,Kusto.Language.EngineCommands.ShowTableDetails,Kusto.Language.EngineCommands.ShowTableCslSchema,Kusto.Language.EngineCommands.ShowTableSchemaAsJson,Kusto.Language.EngineCommands.CreateTable,Kusto.Language.EngineCommands.CreateTableBasedOnAnother,Kusto.Language.EngineCommands.CreateMergeTable,Kusto.Language.EngineCommands.DefineTable,Kusto.Language.EngineCommands.CreateTables,Kusto.Language.EngineCommands.CreateMergeTables,Kusto.Language.EngineCommands.DefineTables,Kusto.Language.EngineCommands.AlterTable,Kusto.Language.EngineCommands.AlterMergeTable,Kusto.Language.EngineCommands.AlterTableDocString,Kusto.Language.EngineCommands.AlterTableFolder,Kusto.Language.EngineCommands.RenameTable,Kusto.Language.EngineCommands.RenameTables,Kusto.Language.EngineCommands.DropTable,Kusto.Language.EngineCommands.UndoDropTable,Kusto.Language.EngineCommands.DropTables,Kusto.Language.EngineCommands.CreateTableIngestionMapping,Kusto.Language.EngineCommands.CreateOrAlterTableIngestionMapping,Kusto.Language.EngineCommands.AlterTableIngestionMapping,Kusto.Language.EngineCommands.AlterMergeTableIngestionMapping,Kusto.Language.EngineCommands.ShowTableIngestionMappings,Kusto.Language.EngineCommands.ShowTableIngestionMapping,Kusto.Language.EngineCommands.DropTableIngestionMapping,Kusto.Language.EngineCommands.RenameColumn,Kusto.Language.EngineCommands.RenameColumns,Kusto.Language.EngineCommands.AlterColumnType,Kusto.Language.EngineCommands.DropColumn,Kusto.Language.EngineCommands.DropTableColumns,Kusto.Language.EngineCommands.AlterTableColumnDocStrings,Kusto.Language.EngineCommands.AlterMergeTableColumnDocStrings,Kusto.Language.EngineCommands.ShowFunctions,Kusto.Language.EngineCommands.ShowFunction,Kusto.Language.EngineCommands.CreateFunction,Kusto.Language.EngineCommands.AlterFunction,Kusto.Language.EngineCommands.CreateOrAlterFunction,Kusto.Language.EngineCommands.DropFunction,Kusto.Language.EngineCommands.DropFunctions,Kusto.Language.EngineCommands.AlterFunctionDocString,Kusto.Language.EngineCommands.AlterFunctionFolder,Kusto.Language.EngineCommands.ShowExternalTables,Kusto.Language.EngineCommands.ShowExternalTable,Kusto.Language.EngineCommands.ShowExternalTableCslSchema,Kusto.Language.EngineCommands.ShowExternalTableSchema,Kusto.Language.EngineCommands.ShowExternalTableArtifacts,Kusto.Language.EngineCommands.DropExternalTable,Kusto.Language.EngineCommands.CreateStorageExternalTable,Kusto.Language.EngineCommands.AlterStorageExternalTable,Kusto.Language.EngineCommands.CreateOrAlterStorageExternalTable,Kusto.Language.EngineCommands.CreateSqlExternalTable,Kusto.Language.EngineCommands.AlterSqlExternalTable,Kusto.Language.EngineCommands.CreateOrAlterSqlExternalTable,Kusto.Language.EngineCommands.CreateExternalTableMapping,Kusto.Language.EngineCommands.SetExternalTableAdmins,Kusto.Language.EngineCommands.AddExternalTableAdmins,Kusto.Language.EngineCommands.DropExternalTableAdmins,Kusto.Language.EngineCommands.AlterExternalTableDocString,Kusto.Language.EngineCommands.AlterExternalTableFolder,Kusto.Language.EngineCommands.ShowExternalTablePrincipals,Kusto.Language.EngineCommands.ShowFabric,Kusto.Language.EngineCommands.AlterExternalTableMapping,Kusto.Language.EngineCommands.ShowExternalTableMappings,Kusto.Language.EngineCommands.ShowExternalTableMapping,Kusto.Language.EngineCommands.DropExternalTableMapping,Kusto.Language.EngineCommands.ShowWorkloadGroups,Kusto.Language.EngineCommands.ShowWorkloadGroup,Kusto.Language.EngineCommands.CreateOrAleterWorkloadGroup,Kusto.Language.EngineCommands.AlterMergeWorkloadGroup,Kusto.Language.EngineCommands.DropWorkloadGroup,Kusto.Language.EngineCommands.ShowDatabasePolicyCaching,Kusto.Language.EngineCommands.ShowTablePolicyCaching,Kusto.Language.EngineCommands.ShowTableStarPolicyCaching,Kusto.Language.EngineCommands.ShowColumnPolicyCaching,Kusto.Language.EngineCommands.ShowMaterializedViewPolicyCaching,Kusto.Language.EngineCommands.ShowClusterPolicyCaching,Kusto.Language.EngineCommands.AlterDatabasePolicyCaching,Kusto.Language.EngineCommands.AlterTablePolicyCaching,Kusto.Language.EngineCommands.AlterTablesPolicyCaching,Kusto.Language.EngineCommands.AlterColumnPolicyCaching,Kusto.Language.EngineCommands.AlterMaterializedViewPolicyCaching,Kusto.Language.EngineCommands.AlterClusterPolicyCaching,Kusto.Language.EngineCommands.DeleteDatabasePolicyCaching,Kusto.Language.EngineCommands.DeleteTablePolicyCaching,Kusto.Language.EngineCommands.DeleteColumnPolicyCaching,Kusto.Language.EngineCommands.DeleteMaterializedViewPolicyCaching,Kusto.Language.EngineCommands.DeleteClusterPolicyCaching,Kusto.Language.EngineCommands.ShowTablePolicyIngestionTime,Kusto.Language.EngineCommands.ShowTableStarPolicyIngestionTime,Kusto.Language.EngineCommands.AlterTablePolicyIngestionTime,Kusto.Language.EngineCommands.AlterTablesPolicyIngestionTime,Kusto.Language.EngineCommands.DeleteTablePolicyIngestionTime,Kusto.Language.EngineCommands.ShowTablePolicyRetention,Kusto.Language.EngineCommands.ShowTableStarPolicyRetention,Kusto.Language.EngineCommands.ShowDatabasePolicyRetention,Kusto.Language.EngineCommands.AlterTablePolicyRetention,Kusto.Language.EngineCommands.AlterMaterializedViewPolicyRetention,Kusto.Language.EngineCommands.AlterDatabasePolicyRetention,Kusto.Language.EngineCommands.AlterTablesPolicyRetention,Kusto.Language.EngineCommands.AlterMergeTablePolicyRetention,Kusto.Language.EngineCommands.AlterMergeMaterializedViewPolicyRetention,Kusto.Language.EngineCommands.AlterMergeDatabasePolicyRetention,Kusto.Language.EngineCommands.DeleteTablePolicyRetention,Kusto.Language.EngineCommands.DeleteDatabasePolicyRetention,Kusto.Language.EngineCommands.ShowDatabasePolicyHardRetentionViolations,Kusto.Language.EngineCommands.ShowDatabasePolicySoftRetentionViolations,Kusto.Language.EngineCommands.ShowTablePolicyRowLevelSecurity,Kusto.Language.EngineCommands.ShowTableStarPolicyRowLevelSecurity,Kusto.Language.EngineCommands.AlterTablePolicyRowLevelSecurity,Kusto.Language.EngineCommands.DeleteTablePolicyRowLevelSecurity,Kusto.Language.EngineCommands.ShowMaterializedViewPolicyRowLevelSecurity,Kusto.Language.EngineCommands.AlterMaterializedViewPolicyRowLevelSecurity,Kusto.Language.EngineCommands.DeleteMaterializedViewPolicyRowLevelSecurity,Kusto.Language.EngineCommands.ShowTablePolicyRowOrder,Kusto.Language.EngineCommands.ShowTableStarPolicyRowOrder,Kusto.Language.EngineCommands.AlterTablePolicyRowOrder,Kusto.Language.EngineCommands.AlterTablesPolicyRowOrder,Kusto.Language.EngineCommands.AlterMergeTablePolicyRowOrder,Kusto.Language.EngineCommands.DeleteTablePolicyRowOrder,Kusto.Language.EngineCommands.ShowTablePolicyUpdate,Kusto.Language.EngineCommands.ShowTableStarPolicyUpdate,Kusto.Language.EngineCommands.AlterTablePolicyUpdate,Kusto.Language.EngineCommands.AlterMergeTablePolicyUpdate,Kusto.Language.EngineCommands.DeleteTablePolicyUpdate,Kusto.Language.EngineCommands.ShowClusterPolicyIngestionBatching,Kusto.Language.EngineCommands.ShowDatabasePolicyIngestionBatching,Kusto.Language.EngineCommands.ShowTablePolicyIngestionBatching,Kusto.Language.EngineCommands.ShowTableStarPolicyIngestionBatching,Kusto.Language.EngineCommands.AlterClusterPolicyIngestionBatching,Kusto.Language.EngineCommands.AlterMergeClusterPolicyIngestionBatching,Kusto.Language.EngineCommands.AlterDatabasePolicyIngestionBatching,Kusto.Language.EngineCommands.AlterMergeDatabasePolicyIngestionBatching,Kusto.Language.EngineCommands.AlterTablePolicyIngestionBatching,Kusto.Language.EngineCommands.AlterMergeTablePolicyIngestionBatching,Kusto.Language.EngineCommands.AlterTablesPolicyIngestionBatching,Kusto.Language.EngineCommands.DeleteDatabasePolicyIngestionBatching,Kusto.Language.EngineCommands.DeleteTablePolicyIngestionBatching,Kusto.Language.EngineCommands.ShowDatabasePolicyEncoding,Kusto.Language.EngineCommands.ShowTablePolicyEncoding,Kusto.Language.EngineCommands.ShowColumnPolicyEncoding,Kusto.Language.EngineCommands.AlterDatabasePolicyEncoding,Kusto.Language.EngineCommands.AlterTablePolicyEncoding,Kusto.Language.EngineCommands.AlterTableColumnsPolicyEncoding,Kusto.Language.EngineCommands.AlterColumnPolicyEncoding,Kusto.Language.EngineCommands.AlterColumnsPolicyEncodingByQuery,Kusto.Language.EngineCommands.AlterColumnPolicyEncodingType,Kusto.Language.EngineCommands.AlterMergeDatabasePolicyEncoding,Kusto.Language.EngineCommands.AlterMergeTablePolicyEncoding,Kusto.Language.EngineCommands.AlterMergeColumnPolicyEncoding,Kusto.Language.EngineCommands.DeleteDatabasePolicyEncoding,Kusto.Language.EngineCommands.DeleteTablePolicyEncoding,Kusto.Language.EngineCommands.DeleteColumnPolicyEncoding,Kusto.Language.EngineCommands.ShowDatabasePolicyMerge,Kusto.Language.EngineCommands.ShowTablePolicyMerge,Kusto.Language.EngineCommands.ShowTableStarPolicyMerge,Kusto.Language.EngineCommands.AlterDatabasePolicyMerge,Kusto.Language.EngineCommands.AlterTablePolicyMerge,Kusto.Language.EngineCommands.AlterTablesPolicyMerge,Kusto.Language.EngineCommands.AlterMergeDatabasePolicyMerge,Kusto.Language.EngineCommands.AlterMergeTablePolicyMerge,Kusto.Language.EngineCommands.AlterMergeMaterializedViewPolicyMerge,Kusto.Language.EngineCommands.DeleteDatabasePolicyMerge,Kusto.Language.EngineCommands.DeleteTablePolicyMerge,Kusto.Language.EngineCommands.AlterTablePolicyMirroring,Kusto.Language.EngineCommands.AlterMergeTablePolicyMirroring,Kusto.Language.EngineCommands.AlterTablePolicyMirroringWithJson,Kusto.Language.EngineCommands.AlterMergeTablePolicyMirroringWithJson,Kusto.Language.EngineCommands.DeleteTablePolicyMirroring,Kusto.Language.EngineCommands.ShowTablePolicyMirroring,Kusto.Language.EngineCommands.ShowTableStarPolicyMirroring,Kusto.Language.EngineCommands.AlterDatabasePolicyMirroring,Kusto.Language.EngineCommands.AlterMergeDatabasePolicyMirroring,Kusto.Language.EngineCommands.AlterDatabasePolicyMirroringWithJson,Kusto.Language.EngineCommands.AlterMergeDatabasePolicyMirroringWithJson,Kusto.Language.EngineCommands.DeleteDatabasePolicyMirroring,Kusto.Language.EngineCommands.ShowDatabasePolicyMirroring,Kusto.Language.EngineCommands.AlterDatabaseTableMirroringPolicyTemplates,Kusto.Language.EngineCommands.AlterMergeDatabaseTableMirroringPolicyTemplates,Kusto.Language.EngineCommands.ShowDatabaseTableMirroringPolicyTemplates,Kusto.Language.EngineCommands.DropDatabaseTableMirroringPolicyTemplates,Kusto.Language.EngineCommands.ApplyTableMirroringPolicyTemplateToTables,Kusto.Language.EngineCommands.ShowTablePolicyPartitioning,Kusto.Language.EngineCommands.ShowTableStarPolicyPartitioning,Kusto.Language.EngineCommands.AlterTablePolicyPartitioning,Kusto.Language.EngineCommands.AlterMergeTablePolicyPartitioning,Kusto.Language.EngineCommands.AlterMaterializedViewPolicyPartitioning,Kusto.Language.EngineCommands.AlterMergeMaterializedViewPolicyPartitioning,Kusto.Language.EngineCommands.DeleteTablePolicyPartitioning,Kusto.Language.EngineCommands.DeleteMaterializedViewPolicyPartitioning,Kusto.Language.EngineCommands.ShowTablePolicyRestrictedViewAccess,Kusto.Language.EngineCommands.ShowTableStarPolicyRestrictedViewAccess,Kusto.Language.EngineCommands.AlterTablePolicyRestrictedViewAccess,Kusto.Language.EngineCommands.AlterTablesPolicyRestrictedViewAccess,Kusto.Language.EngineCommands.DeleteTablePolicyRestrictedViewAccess,Kusto.Language.EngineCommands.ShowClusterPolicyRowStore,Kusto.Language.EngineCommands.AlterClusterPolicyRowStore,Kusto.Language.EngineCommands.AlterMergeClusterPolicyRowStore,Kusto.Language.EngineCommands.DeleteClusterPolicyRowStore,Kusto.Language.EngineCommands.ShowClusterPolicySandbox,Kusto.Language.EngineCommands.AlterClusterPolicySandbox,Kusto.Language.EngineCommands.DeleteClusterPolicySandbox,Kusto.Language.EngineCommands.ShowClusterSandboxesStats,Kusto.Language.EngineCommands.ShowDatabasePolicySharding,Kusto.Language.EngineCommands.ShowTablePolicySharding,Kusto.Language.EngineCommands.ShowTableStarPolicySharding,Kusto.Language.EngineCommands.AlterDatabasePolicySharding,Kusto.Language.EngineCommands.AlterTablePolicySharding,Kusto.Language.EngineCommands.AlterMergeDatabasePolicySharding,Kusto.Language.EngineCommands.AlterMergeTablePolicySharding,Kusto.Language.EngineCommands.DeleteDatabasePolicySharding,Kusto.Language.EngineCommands.DeleteTablePolicySharding,Kusto.Language.EngineCommands.AlterClusterPolicySharding,Kusto.Language.EngineCommands.AlterMergeClusterPolicySharding,Kusto.Language.EngineCommands.DeleteClusterPolicySharding,Kusto.Language.EngineCommands.ShowClusterPolicySharding,Kusto.Language.EngineCommands.ShowDatabasePolicyShardsGrouping,Kusto.Language.EngineCommands.AlterDatabasePolicyShardsGrouping,Kusto.Language.EngineCommands.AlterMergeDatabasePolicyShardsGrouping,Kusto.Language.EngineCommands.DeleteDatabasePolicyShardsGrouping,Kusto.Language.EngineCommands.ShowDatabasePolicyStreamingIngestion,Kusto.Language.EngineCommands.ShowTablePolicyStreamingIngestion,Kusto.Language.EngineCommands.ShowClusterPolicyStreamingIngestion,Kusto.Language.EngineCommands.AlterDatabasePolicyStreamingIngestion,Kusto.Language.EngineCommands.AlterMergeDatabasePolicyStreamingIngestion,Kusto.Language.EngineCommands.AlterTablePolicyStreamingIngestion,Kusto.Language.EngineCommands.AlterMergeTablePolicyStreamingIngestion,Kusto.Language.EngineCommands.AlterClusterPolicyStreamingIngestion,Kusto.Language.EngineCommands.AlterMergeClusterPolicyStreamingIngestion,Kusto.Language.EngineCommands.DeleteDatabasePolicyStreamingIngestion,Kusto.Language.EngineCommands.DeleteTablePolicyStreamingIngestion,Kusto.Language.EngineCommands.DeleteClusterPolicyStreamingIngestion,Kusto.Language.EngineCommands.ShowDatabasePolicyManagedIdentity,Kusto.Language.EngineCommands.ShowClusterPolicyManagedIdentity,Kusto.Language.EngineCommands.AlterDatabasePolicyManagedIdentity,Kusto.Language.EngineCommands.AlterMergeDatabasePolicyManagedIdentity,Kusto.Language.EngineCommands.AlterClusterPolicyManagedIdentity,Kusto.Language.EngineCommands.AlterMergeClusterPolicyManagedIdentity,Kusto.Language.EngineCommands.DeleteDatabasePolicyManagedIdentity,Kusto.Language.EngineCommands.DeleteClusterPolicyManagedIdentity,Kusto.Language.EngineCommands.ShowTablePolicyAutoDelete,Kusto.Language.EngineCommands.AlterTablePolicyAutoDelete,Kusto.Language.EngineCommands.DeleteTablePolicyAutoDelete,Kusto.Language.EngineCommands.ShowClusterPolicyCallout,Kusto.Language.EngineCommands.AlterClusterPolicyCallout,Kusto.Language.EngineCommands.AlterMergeClusterPolicyCallout,Kusto.Language.EngineCommands.DeleteClusterPolicyCallout,Kusto.Language.EngineCommands.ShowClusterPolicyCapacity,Kusto.Language.EngineCommands.AlterClusterPolicyCapacity,Kusto.Language.EngineCommands.AlterMergeClusterPolicyCapacity,Kusto.Language.EngineCommands.ShowClusterPolicyRequestClassification,Kusto.Language.EngineCommands.AlterClusterPolicyRequestClassification,Kusto.Language.EngineCommands.AlterMergeClusterPolicyRequestClassification,Kusto.Language.EngineCommands.DeleteClusterPolicyRequestClassification,Kusto.Language.EngineCommands.ShowClusterPolicyMultiDatabaseAdmins,Kusto.Language.EngineCommands.AlterClusterPolicyMultiDatabaseAdmins,Kusto.Language.EngineCommands.AlterMergeClusterPolicyMultiDatabaseAdmins,Kusto.Language.EngineCommands.ShowDatabasePolicyDiagnostics,Kusto.Language.EngineCommands.ShowClusterPolicyDiagnostics,Kusto.Language.EngineCommands.AlterDatabasePolicyDiagnostics,Kusto.Language.EngineCommands.AlterMergeDatabasePolicyDiagnostics,Kusto.Language.EngineCommands.AlterClusterPolicyDiagnostics,Kusto.Language.EngineCommands.AlterMergeClusterPolicyDiagnostics,Kusto.Language.EngineCommands.DeleteDatabasePolicyDiagnostics,Kusto.Language.EngineCommands.ShowClusterPolicyQueryWeakConsistency,Kusto.Language.EngineCommands.AlterClusterPolicyQueryWeakConsistency,Kusto.Language.EngineCommands.AlterMergeClusterPolicyQueryWeakConsistency,Kusto.Language.EngineCommands.ShowTablePolicyExtentTagsRetention,Kusto.Language.EngineCommands.ShowTableStarPolicyExtentTagsRetention,Kusto.Language.EngineCommands.ShowDatabasePolicyExtentTagsRetention,Kusto.Language.EngineCommands.AlterTablePolicyExtentTagsRetention,Kusto.Language.EngineCommands.AlterDatabasePolicyExtentTagsRetention,Kusto.Language.EngineCommands.DeleteTablePolicyExtentTagsRetention,Kusto.Language.EngineCommands.DeleteDatabasePolicyExtentTagsRetention,Kusto.Language.EngineCommands.ShowPrincipalRoles,Kusto.Language.EngineCommands.ShowDatabasePrincipalRoles,Kusto.Language.EngineCommands.ShowTablePrincipalRoles,Kusto.Language.EngineCommands.ShowExternalTablesPrincipalRoles,Kusto.Language.EngineCommands.ShowFunctionPrincipalRoles,Kusto.Language.EngineCommands.ShowClusterPrincipalRoles,Kusto.Language.EngineCommands.ShowClusterPrincipals,Kusto.Language.EngineCommands.ShowDatabasePrincipals,Kusto.Language.EngineCommands.ShowTablePrincipals,Kusto.Language.EngineCommands.ShowFunctionPrincipals,Kusto.Language.EngineCommands.AddClusterRole,Kusto.Language.EngineCommands.DropClusterRole,Kusto.Language.EngineCommands.SetClusterRole,Kusto.Language.EngineCommands.AddDatabaseRole,Kusto.Language.EngineCommands.DropDatabaseRole,Kusto.Language.EngineCommands.SetDatabaseRole,Kusto.Language.EngineCommands.AddTableRole,Kusto.Language.EngineCommands.DropTableRole,Kusto.Language.EngineCommands.SetTableRole,Kusto.Language.EngineCommands.AddFunctionRole,Kusto.Language.EngineCommands.DropFunctionRole,Kusto.Language.EngineCommands.SetFunctionRole,Kusto.Language.EngineCommands.ShowClusterBlockedPrincipals,Kusto.Language.EngineCommands.AddClusterBlockedPrincipals,Kusto.Language.EngineCommands.DropClusterBlockedPrincipals,Kusto.Language.EngineCommands.IngestIntoTable,Kusto.Language.EngineCommands.IngestInlineIntoTable,Kusto.Language.EngineCommands.SetTable,Kusto.Language.EngineCommands.AppendTable,Kusto.Language.EngineCommands.SetOrAppendTable,Kusto.Language.EngineCommands.SetOrReplaceTable,Kusto.Language.EngineCommands.ExportToStorage,Kusto.Language.EngineCommands.ExportToSqlTable,Kusto.Language.EngineCommands.ExportToExternalTable,Kusto.Language.EngineCommands.CreateOrAlterContinuousExport,Kusto.Language.EngineCommands.ShowContinuousExport,Kusto.Language.EngineCommands.ShowContinuousExports,Kusto.Language.EngineCommands.ShowClusterPendingContinuousExports,Kusto.Language.EngineCommands.ShowContinuousExportExportedArtifacts,Kusto.Language.EngineCommands.ShowContinuousExportFailures,Kusto.Language.EngineCommands.SetContinuousExportCursor,Kusto.Language.EngineCommands.DropContinuousExport,Kusto.Language.EngineCommands.EnableContinuousExport,Kusto.Language.EngineCommands.DisableContinuousExport,Kusto.Language.EngineCommands.CreateMaterializedView,Kusto.Language.EngineCommands.CreateMaterializedViewOverMaterializedView,Kusto.Language.EngineCommands.RenameMaterializedView,Kusto.Language.EngineCommands.ShowMaterializedView,Kusto.Language.EngineCommands.ShowMaterializedViews,Kusto.Language.EngineCommands.ShowMaterializedViewsDetails,Kusto.Language.EngineCommands.ShowMaterializedViewDetails,Kusto.Language.EngineCommands.ShowMaterializedViewPolicyRetention,Kusto.Language.EngineCommands.ShowMaterializedViewPolicyMerge,Kusto.Language.EngineCommands.ShowMaterializedViewPolicyPartitioning,Kusto.Language.EngineCommands.ShowMaterializedViewExtents,Kusto.Language.EngineCommands.AlterMaterializedView,Kusto.Language.EngineCommands.AlterMaterializedViewOverMaterializedView,Kusto.Language.EngineCommands.CreateOrAlterMaterializedView,Kusto.Language.EngineCommands.CreateOrAlterMaterializedViewOverMaterializedView,Kusto.Language.EngineCommands.DropMaterializedView,Kusto.Language.EngineCommands.EnableDisableMaterializedView,Kusto.Language.EngineCommands.ShowMaterializedViewPrincipals,Kusto.Language.EngineCommands.ShowMaterializedViewSchemaAsJson,Kusto.Language.EngineCommands.ShowMaterializedViewCslSchema,Kusto.Language.EngineCommands.AlterMaterializedViewFolder,Kusto.Language.EngineCommands.AlterMaterializedViewDocString,Kusto.Language.EngineCommands.AlterMaterializedViewLookback,Kusto.Language.EngineCommands.AlterMaterializedViewAutoUpdateSchema,Kusto.Language.EngineCommands.ClearMaterializedViewData,Kusto.Language.EngineCommands.SetMaterializedViewCursor,Kusto.Language.EngineCommands.ShowTableOperationsMirroringStatus,Kusto.Language.EngineCommands.ShowTableOperationsMirroringExportedArtifacts,Kusto.Language.EngineCommands.ShowTableOperationsMirroringFailures,Kusto.Language.EngineCommands.ShowCluster,Kusto.Language.EngineCommands.ShowClusterDetails,Kusto.Language.EngineCommands.ShowDiagnostics,Kusto.Language.EngineCommands.ShowCapacity,Kusto.Language.EngineCommands.ShowOperations,Kusto.Language.EngineCommands.ShowOperationDetails,Kusto.Language.EngineCommands.ShowJournal,Kusto.Language.EngineCommands.ShowDatabaseJournal,Kusto.Language.EngineCommands.ShowClusterJournal,Kusto.Language.EngineCommands.ShowQueries,Kusto.Language.EngineCommands.ShowRunningQueries,Kusto.Language.EngineCommands.CancelQuery,Kusto.Language.EngineCommands.ShowQueryPlan,Kusto.Language.EngineCommands.ShowBasicAuthUsers,Kusto.Language.EngineCommands.CreateBasicAuthUser,Kusto.Language.EngineCommands.DropBasicAuthUser,Kusto.Language.EngineCommands.ShowCache,Kusto.Language.EngineCommands.AlterCache,Kusto.Language.EngineCommands.ShowCommands,Kusto.Language.EngineCommands.ShowCommandsAndQueries,Kusto.Language.EngineCommands.ShowIngestionFailures,Kusto.Language.EngineCommands.ShowDataOperations,Kusto.Language.EngineCommands.ShowDatabaseKeyVaultSecrets,Kusto.Language.EngineCommands.ShowClusterExtents,Kusto.Language.EngineCommands.ShowClusterExtentsMetadata,Kusto.Language.EngineCommands.ShowDatabaseExtents,Kusto.Language.EngineCommands.ShowDatabaseExtentsMetadata,Kusto.Language.EngineCommands.ShowDatabaseExtentTagsStatistics,Kusto.Language.EngineCommands.ShowDatabaseExtentsPartitioningStatistics,Kusto.Language.EngineCommands.ShowTableExtents,Kusto.Language.EngineCommands.ShowTableExtentsMetadata,Kusto.Language.EngineCommands.TableShardsGroupShow,Kusto.Language.EngineCommands.TableShardsGroupMetadataShow,Kusto.Language.EngineCommands.TableShardGroupsShow,Kusto.Language.EngineCommands.TableShardGroupsStatisticsShow,Kusto.Language.EngineCommands.TablesShardGroupsStatisticsShow,Kusto.Language.EngineCommands.DatabaseShardGroupsStatisticsShow,Kusto.Language.EngineCommands.MergeExtents,Kusto.Language.EngineCommands.MergeExtentsDryrun,Kusto.Language.EngineCommands.MoveExtentsFrom,Kusto.Language.EngineCommands.MoveExtentsQuery,Kusto.Language.EngineCommands.TableShuffleExtents,Kusto.Language.EngineCommands.TableShuffleExtentsQuery,Kusto.Language.EngineCommands.ReplaceExtents,Kusto.Language.EngineCommands.DropExtent,Kusto.Language.EngineCommands.DropExtents,Kusto.Language.EngineCommands.DropExtentsPartitionMetadata,Kusto.Language.EngineCommands.DropPretendExtentsByProperties,Kusto.Language.EngineCommands.ShowVersion,Kusto.Language.EngineCommands.ClearTableData,Kusto.Language.EngineCommands.ClearTableCacheStreamingIngestionSchema,Kusto.Language.EngineCommands.StoredQueryResultSet,Kusto.Language.EngineCommands.StoredQueryResultSetOrReplace,Kusto.Language.EngineCommands.StoredQueryResultsShow,Kusto.Language.EngineCommands.StoredQueryResultShowSchema,Kusto.Language.EngineCommands.StoredQueryResultDrop,Kusto.Language.EngineCommands.StoredQueryResultsDrop,Kusto.Language.EngineCommands.ShowCertificates,Kusto.Language.EngineCommands.ShowCloudSettings,Kusto.Language.EngineCommands.ShowCommConcurrency,Kusto.Language.EngineCommands.ShowCommPools,Kusto.Language.EngineCommands.ShowFabricCache,Kusto.Language.EngineCommands.ShowFabricLocks,Kusto.Language.EngineCommands.ShowFabricClocks,Kusto.Language.EngineCommands.ShowFeatureFlags,Kusto.Language.EngineCommands.ShowMemPools,Kusto.Language.EngineCommands.ShowServicePoints,Kusto.Language.EngineCommands.ShowTcpConnections,Kusto.Language.EngineCommands.ShowTcpPorts,Kusto.Language.EngineCommands.ShowThreadPools,Kusto.Language.EngineCommands.ExecuteDatabaseScript,Kusto.Language.EngineCommands.ExecuteClusterScript,Kusto.Language.EngineCommands.CreateRequestSupport,Kusto.Language.EngineCommands.ShowRequestSupport,Kusto.Language.EngineCommands.ShowClusterAdminState,Kusto.Language.EngineCommands.ClearRemoteClusterDatabaseSchema,Kusto.Language.EngineCommands.ShowClusterMonitoring,Kusto.Language.EngineCommands.ShowClusterScaleIn,Kusto.Language.EngineCommands.ShowClusterServices,Kusto.Language.EngineCommands.ShowClusterNetwork,Kusto.Language.EngineCommands.AlterClusterStorageKeys,Kusto.Language.EngineCommands.ShowClusterStorageKeysHash,Kusto.Language.EngineCommands.AlterFabricServiceAssignmentsCommand,Kusto.Language.EngineCommands.DropFabricServiceAssignmentsCommand,Kusto.Language.EngineCommands.CreateEntityGroupCommand,Kusto.Language.EngineCommands.CreateOrAlterEntityGroupCommand,Kusto.Language.EngineCommands.AlterEntityGroup,Kusto.Language.EngineCommands.AlterMergeEntityGroup,Kusto.Language.EngineCommands.DropEntityGroup,Kusto.Language.EngineCommands.ShowEntityGroup,Kusto.Language.EngineCommands.ShowEntityGroups,Kusto.Language.EngineCommands.AlterExtentContainersAdd,Kusto.Language.EngineCommands.AlterExtentContainersDrop,Kusto.Language.EngineCommands.AlterExtentContainersRecycle,Kusto.Language.EngineCommands.AlterExtentContainersSet,Kusto.Language.EngineCommands.ShowExtentContainers,Kusto.Language.EngineCommands.DropEmptyExtentContainers,Kusto.Language.EngineCommands.CleanDatabaseExtentContainers,Kusto.Language.EngineCommands.ShowDatabaseExtentContainersCleanOperations,Kusto.Language.EngineCommands.ClearDatabaseCacheQueryResults,Kusto.Language.EngineCommands.ShowDatabaseCacheQueryResults,Kusto.Language.EngineCommands.ShowDatabasesManagementGroups,Kusto.Language.EngineCommands.AlterDatabaseStorageKeys,Kusto.Language.EngineCommands.ClearDatabaseCacheStreamingIngestionSchema,Kusto.Language.EngineCommands.ClearDatabaseCacheQueryWeakConsistency,Kusto.Language.EngineCommands.ShowEntitySchema,Kusto.Language.EngineCommands.ShowExtentDetails,Kusto.Language.EngineCommands.ShowExtentColumnStorageStats,Kusto.Language.EngineCommands.AttachExtentsIntoTableByContainer,Kusto.Language.EngineCommands.AttachExtentsIntoTableByMetadata,Kusto.Language.EngineCommands.AlterExtentTagsFromQuery,Kusto.Language.EngineCommands.AlterMergeExtentTagsFromQuery,Kusto.Language.EngineCommands.DropExtentTagsFromQuery,Kusto.Language.EngineCommands.DropExtentTagsFromTable,Kusto.Language.EngineCommands.DropExtentTagsRetention,Kusto.Language.EngineCommands.MergeDatabaseShardGroups,Kusto.Language.EngineCommands.AlterFollowerClusterConfiguration,Kusto.Language.EngineCommands.AddFollowerDatabaseAuthorizedPrincipals,Kusto.Language.EngineCommands.DropFollowerDatabaseAuthorizedPrincipals,Kusto.Language.EngineCommands.AlterFollowerDatabaseAuthorizedPrincipals,Kusto.Language.EngineCommands.DropFollowerDatabasePolicyCaching,Kusto.Language.EngineCommands.AlterFollowerDatabaseChildEntities,Kusto.Language.EngineCommands.AlterFollowerDatabaseConfiguration,Kusto.Language.EngineCommands.DropFollowerDatabases,Kusto.Language.EngineCommands.ShowFollowerDatabase,Kusto.Language.EngineCommands.AlterFollowerTablesPolicyCaching,Kusto.Language.EngineCommands.DropFollowerTablesPolicyCaching,Kusto.Language.EngineCommands.ShowFreshness,Kusto.Language.EngineCommands.ShowFunctionSchemaAsJson,Kusto.Language.EngineCommands.SetMaterializedViewAdmins,Kusto.Language.EngineCommands.AddMaterializedViewAdmins,Kusto.Language.EngineCommands.DropMaterializedViewAdmins,Kusto.Language.EngineCommands.SetMaterializedViewConcurrency,Kusto.Language.EngineCommands.ClearMaterializedViewStatistics,Kusto.Language.EngineCommands.ShowMaterializedViewStatistics,Kusto.Language.EngineCommands.ShowMaterializedViewDiagnostics,Kusto.Language.EngineCommands.ShowMaterializedViewFailures,Kusto.Language.EngineCommands.ShowMemory,Kusto.Language.EngineCommands.CancelOperation,Kusto.Language.EngineCommands.DisablePlugin,Kusto.Language.EngineCommands.EnablePlugin,Kusto.Language.EngineCommands.ShowPlugins,Kusto.Language.EngineCommands.ShowPrincipalAccess,Kusto.Language.EngineCommands.ShowDatabasePurgeOperation,Kusto.Language.EngineCommands.ShowQueryExecution,Kusto.Language.EngineCommands.AlterPoliciesOfRetention,Kusto.Language.EngineCommands.DeletePoliciesOfRetention,Kusto.Language.EngineCommands.CreateRowStore,Kusto.Language.EngineCommands.DropRowStore,Kusto.Language.EngineCommands.ShowRowStore,Kusto.Language.EngineCommands.ShowRowStores,Kusto.Language.EngineCommands.ShowRowStoreTransactions,Kusto.Language.EngineCommands.ShowRowStoreSeals,Kusto.Language.EngineCommands.ShowSchema,Kusto.Language.EngineCommands.ShowCallStacks,Kusto.Language.EngineCommands.ShowStreamingIngestionFailures,Kusto.Language.EngineCommands.ShowStreamingIngestionStatistics,Kusto.Language.EngineCommands.AlterTableRowStoreReferencesDropKey,Kusto.Language.EngineCommands.AlterTableRowStoreReferencesDropRowStore,Kusto.Language.EngineCommands.AlterTableRowStoreReferencesDropBlockedKeys,Kusto.Language.EngineCommands.AlterTableRowStoreReferencesDisableKey,Kusto.Language.EngineCommands.AlterTableRowStoreReferencesDisableRowStore,Kusto.Language.EngineCommands.AlterTableRowStoreReferencesDisableBlockedKeys,Kusto.Language.EngineCommands.SetTableRowStoreReferences,Kusto.Language.EngineCommands.ShowTableRowStoreReferences,Kusto.Language.EngineCommands.AlterTableColumnStatistics,Kusto.Language.EngineCommands.AlterTableColumnStatisticsMethod,Kusto.Language.EngineCommands.ShowTableColumnStatitics,Kusto.Language.EngineCommands.ShowTableDimensions,Kusto.Language.EngineCommands.DeleteTableRecords,Kusto.Language.EngineCommands.TableDataUpdate,Kusto.Language.EngineCommands.TableDataUpdateShortSyntax,Kusto.Language.EngineCommands.DeleteMaterializedViewRecords,Kusto.Language.EngineCommands.ShowTableColumnsClassification,Kusto.Language.EngineCommands.ShowTableRowStores,Kusto.Language.EngineCommands.ShowTableRowStoreSealInfo,Kusto.Language.EngineCommands.ShowTablesColumnStatistics,Kusto.Language.EngineCommands.ShowTableDataStatistics,Kusto.Language.EngineCommands.CreateTempStorage,Kusto.Language.EngineCommands.DropTempStorage,Kusto.Language.EngineCommands.DropStoredQueryResultContainers,Kusto.Language.EngineCommands.DropUnusedStoredQueryResultContainers,Kusto.Language.EngineCommands.EnableDatabaseMaintenanceMode,Kusto.Language.EngineCommands.DisableDatabaseMaintenanceMode,Kusto.Language.EngineCommands.EnableDatabaseStreamingIngestionMaintenanceMode,Kusto.Language.EngineCommands.DisableDatabaseStreamingIngestionMaintenanceMode,Kusto.Language.EngineCommands.ShowQueryCallTree,Kusto.Language.EngineCommands.ShowExtentCorruptedDatetime,Kusto.Language.EngineCommands.PatchExtentCorruptedDatetime,Kusto.Language.EngineCommands.ClearClusterCredStoreCache,Kusto.Language.EngineCommands.ClearClusterGroupMembershipCache,Kusto.Language.EngineCommands.ClearExternalArtifactsCache,Kusto.Language.EngineCommands.ShowDatabasesEntities,Kusto.Language.EngineCommands.ShowDatabaseEntity,Kusto.Language.EngineCommands.ReplaceDatabaseKeyVaultSecrets],Kusto.Language.Symbols.CommandSymbol)}}}});Bridge.define("Kusto.Language.FunctionBodyFacts",{props:{Flags:0,NonVariableComputedReturnType:null,HasSyntaxErrors:!1,HasVariableReturnType:{get:function(){return(this.Flags&Kusto.Language.FunctionBodyFlags.VariableReturn)!=0}},HasClusterCall:{get:function(){return(this.Flags&Kusto.Language.FunctionBodyFlags.Cluster)!=0}},HasDatabaseCall:{get:function(){return(this.Flags&Kusto.Language.FunctionBodyFlags.Database)!=0}},HasUnqualifiedTableCall:{get:function(){return(this.Flags&Kusto.Language.FunctionBodyFlags.UnqualifiedTable)!=0}},HasQualifiedTableCall:{get:function(){return(this.Flags&Kusto.Language.FunctionBodyFlags.QualifiedTable)!=0}},HasExternalTableCall:{get:function(){return(this.Flags&Kusto.Language.FunctionBodyFlags.ExternalTable)!=0}},HasMaterializedViewCall:{get:function(){return(this.Flags&Kusto.Language.FunctionBodyFlags.MaterializedView)!=0}},IsInteresting:{get:function(){return this.Flags!==Kusto.Language.FunctionBodyFlags.None}}},ctors:{ctor:function(flags,nonVariableReturnType,hasSyntaxErrors){this.$initialize();this.Flags=flags;this.NonVariableComputedReturnType=nonVariableReturnType;this.HasSyntaxErrors=hasSyntaxErrors}}});Bridge.define("Kusto.Language.FunctionBodyFlags",{$kind:"enum",statics:{fields:{None:0,Cluster:1,Database:2,UnqualifiedTable:4,QualifiedTable:8,ExternalTable:16,VariableReturn:32,MaterializedView:64}},$flags:!0});Bridge.define("Kusto.Language.Syntax.SyntaxTree",{statics:{methods:{ComputeMaxDepth:function(root){var maxDepth=0,depth=0;return Kusto.Language.Syntax.SyntaxElement.WalkNodes(root,function(e){depth=depth+1|0;depth>maxDepth&&(maxDepth=depth)},function(e){Bridge.identity(depth,depth=depth-1|0)},void 0),maxDepth}}},fields:{_depth:0},props:{Root:null,Original:null,OffsetInOriginal:0,Depth:{get:function(){return this._depth===-1&&(this._depth=Kusto.Language.Syntax.SyntaxTree.ComputeMaxDepth(this.Root)),this._depth}},IsSafeToRecurse:{get:function(){return this.Depth<=Kusto.Language.KustoCode.MaxAnalyzableSyntaxDepth}}},ctors:{init:function(){this._depth=-1},ctor:function(root,original,offsetInOriginal){original===void 0&&(original=null);offsetInOriginal===void 0&&(offsetInOriginal=0);this.$initialize();this.Root=root;this.Original=original;this.OffsetInOriginal=offsetInOriginal;root.SetTree(this);root.InitializeTriviaStarts()}}});Bridge.define("Kusto.Language.FunctionHelpers",{statics:{fields:{MaxRepeat:0},ctors:{init:function(){this.MaxRepeat=32767}},methods:{MakePrefixedTuple:function(context,parameterName,baseTuple){var $t,functionPrefix=($t=Bridge.cast(context.Signature.Symbol,Kusto.Language.Symbols.FunctionSymbol).ResultNamePrefix,$t!=null?$t:context.Signature.Symbol.Name),argumentPrefix=context.GetResultName(context.GetArgument$1(parameterName));return new Kusto.Language.Symbols.TupleSymbol.$ctor1(System.Linq.Enumerable.from(baseTuple.Columns,Kusto.Language.Symbols.ColumnSymbol).select(function(c){return c.WithName(Kusto.Language.FunctionHelpers.MakeColumnName([functionPrefix,argumentPrefix,c.Name])).WithOriginalColumns([c])}))},MakeColumnName:function(nameParts){return nameParts===void 0&&(nameParts=[]),nameParts.length===1?nameParts[System.Array.index(0,nameParts)]:Bridge.toArray(System.Linq.Enumerable.from(nameParts,System.String).where(function(p){return p!=null})).join("_")},AddReferencedColumn:function(columns,context,parameterName){var arg=context.GetArgument$1(parameterName),cs;arg!=null&&(cs=Bridge.as(arg.ReferencedSymbol,Kusto.Language.Symbols.ColumnSymbol))!=null&&columns.add(cs)},AddReferencedColumns:function(columns,context,parameterName){columns.AddRange(System.Linq.Enumerable.from(context.GetArguments$1(parameterName),Kusto.Language.Syntax.Expression).select(function(a){return a.ReferencedSymbol}).ofType(Kusto.Language.Symbols.ColumnSymbol))},GetConstantValue:function(expr){var $t,$t1;return $t=($t1=expr.ConstantValue)!=null?Bridge.toString($t1):null,$t!=null?$t:""},GetConstantValues:function(expressions){for(var expr,list=new(System.Collections.Generic.List$1(System.String).ctor),i=0;i<expressions.Count;i=i+1|0)expr=expressions.getItem$1(i).Element$1,list.add(Kusto.Language.FunctionHelpers.GetConstantValue(expr));return list},MakeValidNameFragment:function(text){return System.Linq.Enumerable.from(text,System.Char).all(function(c){return Kusto.Language.Parsing.TextFacts.IsLetterOrDigit(c)})?text:System.String.fromCharArray(System.Linq.Enumerable.from(text,System.Char).select(function(c){return Kusto.Language.Parsing.TextFacts.IsLetterOrDigit(c)?c:95}).ToArray(System.Char))},GetSummarizeByColumns:function(args){if(System.Array.getCount(args,Kusto.Language.Syntax.Expression)>0){var op=System.Array.getItem(args,0,Kusto.Language.Syntax.Expression).GetFirstAncestorOrSelf(Kusto.Language.Syntax.SummarizeOperator);if(op!=null&&op.ByClause!=null)return Kusto.Language.FunctionHelpers.GetColumnSymbols(op.ByClause.Expressions)}return Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Symbols.ColumnSymbol).Instance},GetColumnSymbols:function(exprs){for(var expr,c,symbols=null,i=0;i<exprs.Count;i=i+1|0)expr=exprs.getItem$1(i).Element$1,expr=Kusto.Language.Binding.Binder.GetUnderlyingExpression(expr),(c=Kusto.Language.Binding.Binder.GetResultColumn(expr))!=null&&(symbols==null&&(symbols=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor)),symbols.add(c));return symbols||Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Symbols.ColumnSymbol).Instance},IsBoolean:function(expr){var lit;return Bridge.referenceEquals(expr.ResultType,Kusto.Language.Symbols.ScalarTypes.Bool)||(lit=Bridge.as(expr,Kusto.Language.Syntax.LiteralExpression))!=null&&lit.Kind===Kusto.Language.Syntax.SyntaxKind.BooleanLiteralExpression}}}});Bridge.define("Kusto.Language.Functions",{statics:{fields:{s_angleLiteralValues:null,ConvertAngle:null,s_energyLiteralValues:null,ConvertEnergy:null,s_forceLiteralValues:null,ConvertForce:null,s_lengthLiteralValues:null,ConvertLength:null,s_massLiteralValues:null,ConvertMass:null,s_speedLiteralValues:null,ConvertSpeed:null,s_temperatureLiteralValues:null,ConvertTemperature:null,s_volumeLiteralValues:null,ConvertVolume:null,Cluster:null,Database:null,Table:null,ExternalTable:null,MaterializedView:null,StoredQueryResult:null,Strcat:null,StrcatArray:null,ArrayStrcat:null,StrcatDelim:null,Strcmp:null,Strrep:null,Strlen:null,StringSize:null,ToUpper:null,ToLower:null,ToUtf8_Deprecated:null,UnicodeCodepointsFromString:null,Substring:null,RegexQuote:null,IndexOf:null,IndexOfRegex:null,HasAnyIndex:null,Reverse:null,Split:null,ParseCommandLine:null,Extract:null,ExtractAll_Deprecated:null,ExtractAll:null,ExtractJson_Deprecated:null,ExtractJson:null,Replace:null,ReplaceRegex:null,ReplaceString:null,ReplaceStrings:null,TrimStart:null,TrimEnd:null,Trim:null,CountOf:null,Translate:null,MakeString_Deprecated:null,UnicodeCodepointsToString:null,ToString:null,ToHex:null,ToDynamic_:null,ToObject_Deprecated:null,ToLong:null,ToInt:null,ToReal:null,ToDouble:null,ToDateTime:null,ToTimespan:null,ToTime:null,ToBool:null,ToBoolean:null,ToDecimal:null,ToGuid:null,GetType:null,UrlEncode:null,UrlEncode_Component:null,UrlDecode:null,Base64EncodeString:null,Base64EncodeToString:null,Base64DecodeString:null,Base64DecodeToString:null,Base64DecodeToArray:null,Base64DecodeToGuid:null,Base64EncodeFromGuid:null,Base64EncodeFromArray:null,ZlibDecompressString:null,ZlibCompressString:null,GzipDecompressString:null,GzipCompressString:null,Lz4CompressDynamicArray:null,ParseCsv:null,ParseJson_Deprecated:null,ParseJson:null,ParseXml:null,ParseUrlResult:null,ParseUrl_Deprecated:null,ParseUrl:null,ParseUrlQueryResult:null,ParseUrlQuery_Deprecated:null,ParseUrlQuery:null,ParseIPV4:null,ParseIPV4Mask:null,FormatIPV4:null,FormatIPV4Mask:null,Ipv4Compare:null,Ipv4IsMatch:null,Ipv4IsInRange:null,Ipv4IsInAnyRange:null,Ipv4NetmaskSuffix:null,Ipv4IsPrivate:null,Ipv4RangeToCidrList:null,ParseIPV6:null,ParseIPV6Mask:null,Ipv6Compare:null,Ipv6IsMatch:null,Ipv6IsInRange:null,Ipv6IsInAnyRange:null,Ipv6LookupRanges:null,ParsePathResult:null,ParsePath:null,ParseUserAgentResult:null,ParseUserAgent:null,ParseVersion:null,FormatDatetime:null,FormatTimespan:null,MakeDatetime:null,MakeTimespan:null,DatetimeAdd:null,DatetimeDiff:null,DayOfWeek:null,DayOfMonth:null,DayOfYear:null,HourOfDay:null,WeekOfYear:null,WeekOfYearISO:null,MonthOfYear:null,StartOfDay:null,StartOfWeek:null,StartOfMonth:null,StartOfYear:null,EndOfDay:null,EndOfWeek:null,EndOfMonth:null,EndOfYear:null,GetYear:null,GetMonth:null,DatePart:null,DatetimePart:null,Now:null,Ago:null,UnixTimeSecondsToDateTime:null,UnixTimeMillisecondsToDateTime:null,UnixTimeMicrosecondsToDateTime:null,UnixTimeNanosecondsToDateTime:null,DatetimeLocalToUtc:null,DatetimeUtcToLocal:null,DateTimeListTimezones:null,PunycodeDecode:null,PunycodeEncode:null,PunycodeDomainDecode:null,PunycodeDomainEncode:null,HashCrc32:null,HashManyCrc32:null,HashDjb2:null,InternalHashXXH64:null,Hash:null,HashXXH64:null,HashSha256:null,HashMd5:null,HashSha1:null,HashCombine:null,HashMany:null,Iif:null,Iff:null,Case:null,Assert:null,Bin:null,Floor:null,BinAt:null,BinAuto:null,Not:null,NotNull_Deprecated:null,IsNotNull:null,IsNull:null,NotEmpty_Deprecated:null,IsNotEmpty:null,IsEmpty:null,IsAscii:null,IsUtf8:null,IsColumnExists:null,ColumnIfExists_Deprecated:null,ColumnIfExists:null,Around:null,BinaryAnd:null,BinaryOr:null,BinaryXor:null,BinaryNot:null,BinaryShiftRight:null,BinaryShiftLeft:null,BitsetCountOnes:null,TreePath:null,Repeat:null,Arraylength_Deprecated:null,ArrayLength:null,ArrayReverse:null,Range:null,ArrayConcat:null,ArrayIff:null,ArrayIif:null,ArrayIndexOf:null,SetHasElement:null,ArraySlice:null,ArraySplit:null,ArrayShiftLeft:null,ArrayShiftRight:null,ArrayRotateLeft:null,ArrayRotateRight:null,m_ArraySort_ArraysArg:null,m_ArraySort_NullsLastArg:null,ArraySortAsc:null,ArraySortDesc:null,BagKeys:null,Zip:null,Pack:null,PackDictionary:null,BagPack:null,BagPackColumns:null,PackAll:null,PackArray:null,SetUnion:null,SetIntersect:null,SetDifference:null,SetEquals:null,BagMerge:null,DynamicToJson:null,BagRemoveKeys:null,BagZip:null,JaccardIndex:null,BagHasKey:null,BagSetKey:null,PercentileTDigest:null,PercentileArrayTDigest:null,PercentRankTDigest:null,RankTDigest:null,TdigestIsValid:null,HllIsValid:null,TDigestMerge:null,MergeTDigest:null,HllMerge:null,DCountHll:null,HllNormalize:null,SeriesFir:null,SeriesStats:null,SeriesStatsDynamic:null,ArraySum:null,SeriesFft:null,SeriesIfft:null,SeriesFitPoly:null,SeriesFitLine:null,SeriesFitLineDynamic:null,SeriesFit2Lines:null,SeriesFit2LinesDynamic:null,SeriesOutliers:null,SeriesIIR:null,SeriesPeriodsDetect:null,SeriesPeriodsValidate:null,SeriesFillBackwards:null,SeriesFillForward:null,SeriesFillConst:null,SeriesFillLinear:null,SeriesAdd:null,SeriesSubtract:null,SeriesMultiply:null,SeriesDivide:null,SeriesPow:null,SeriesGreater:null,SeriesGreaterEquals:null,SeriesLess:null,SeriesLessEquals:null,SeriesEquals:null,SeriesNotEquals:null,SeriesSeasonal:null,SeriesExp:null,SeriesSign:null,SeriesAbs:null,SeriesSin:null,SeriesAsin:null,SeriesCos:null,SeriesAcos:null,SeriesTan:null,SeriesAtan:null,SeriesLog:null,SeriesFloor:null,SeriesCeiling:null,SeriesDecompose:null,SeriesDecomposeForecast:null,SeriesDecomposeAnomalies:null,SeriesPearsonCorrelation:null,SeriesDotProduct:null,SeriesMagnitude:null,SeriesSum:null,SeriesCosineSimilarity:null,Round:null,Ceiling:null,Pow:null,Sqrt:null,Log:null,Log2:null,Log10:null,Exp:null,Exp2:null,Exp10:null,PI:null,Cos:null,Sin:null,Tan:null,Acos:null,Asin:null,Atan:null,Atan2:null,Abs:null,Cot:null,Degrees:null,Radians:null,Sign:null,Rand:null,BetaCdf:null,BetaInv:null,BetaPdf:null,Gamma:null,LogGamma:null,Erf:null,Erfc:null,IsNan:null,IsInf:null,IsFinite:null,Coalesce:null,MaxOf:null,MinOf:null,WelchTest:null,GeoAngle:null,GeoAzimuth:null,GeoDistance2Points:null,GeoDistancePointToLine:null,GeoDistancePointToPolygon:null,GeoPointInCircle:null,GeoPointInPolygon:null,GeoPointBuffer:null,GeoLineBuffer:null,GeoPolygonBuffer:null,GeoIntersects2Lines:null,GeoIntersection2Lines:null,GeoIntersectsLineWithPolygon:null,GeoIntersectionLineWithPolygon:null,GeoIntersects2Polygons:null,GeoIntersection2Polygons:null,GeoPolygonsUnion:null,GeoLinesUnion:null,GeoPolygonToS2Cells:null,GeoLineToS2Cells:null,GeoPolygonS2CellCoveringLevel:null,GeoLineS2CellCoveringLevel:null,GeoLengthToS2CellLevel:null,GeoPolygonDensify:null,GeoPolygonArea:null,GeoPolygonCentroid:null,GeoPolygonPerimeter:null,GeoLineLength:null,GeoLineCentroid:null,GeoLineDensify:null,GeoLineSimplify:null,GeoPolygonSimplify:null,GeoSimplifyPolygonsArray:null,GeoLineValidate:null,GeoPolygonValidate:null,GeoPointToGeohash:null,GeohashToCentralPoint:null,GeohashToPolygon:null,GeohashNeighbors:null,GeoPointToS2Cell:null,GeoS2CellToCentralPoint:null,GeoS2CellNeighbors:null,GeoS2CellToPolygon:null,GeoPointToH3Cell:null,GeoH3CellToCentralPoint:null,GeoH3CellToPolygon:null,GeoH3CellNeighbors:null,GeoH3CellChildren:null,GeoH3CellParent:null,GeoH3CellRings:null,GeoH3CellLevel:null,GeoPolygonToH3Cells:null,_All:null,Map:null,InnerNodes:null,CurrentClusterEndpoint:null,CurrentDatabase:null,CurrentPrincipal:null,CurrentPrincipalDetailsResult:null,CurrentPrincipalDetails:null,CurrentPrincipalIsMemberOf:null,ExtentId:null,ExtentId2:null,ExtentTags:null,CurrentNodeId:null,IngestionTime:null,CursorAfter:null,CursorBeforeOrAt:null,CursorCurrent:null,CursorCurrent2:null,FormatBytes:null,RowNumber:null,RowCumSum:null,RowRank:null,RowRankMin:null,RowRankDense:null,RowWindowSession:null,Prev:null,Next:null,RowstoreOrdinalRange:null,EstimateDataSize:null,NewGuid:null,HasIpv4:null,HasIpv4Prefix:null,HasAnyIpv4:null,HasAnyIpv4Prefix:null,Invoke:null,Cast:null,IpGeoLocation:null},props:{All:null},ctors:{init:function(){this.s_angleLiteralValues=System.Array.init(["Arcminute","Arcsecond","Centiradian","Deciradian","Degree","Gradian","Microdegree","Microradian","Millidegree","Milliradian","Nanodegree","Nanoradian","NatoMil","Radian","Revolution","Tilt"],System.String);this.ConvertAngle=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("convert_angle",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.Parameter.$ctor3("from",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Expression,Kusto.Language.Functions.s_angleLiteralValues),new Kusto.Language.Symbols.Parameter.$ctor3("to",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Expression,Kusto.Language.Functions.s_angleLiteralValues)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.s_energyLiteralValues=System.Array.init(["BritishThermalUnit","Calorie","DecathermEc","DecathermImperial","DecathermUs","ElectronVolt","Erg","FootPound","GigabritishThermalUnit","GigaelectronVolt","Gigajoule","GigawattDay","GigawattHour","HorsepowerHour","Joule","KilobritishThermalUnit","Kilocalorie","KiloelectronVolt","Kilojoule","KilowattDay","KilowattHour","MegabritishThermalUnit","Megacalorie","MegaelectronVolt","Megajoule","MegawattDay","MegawattHour","Millijoule","TeraelectronVolt","TerawattDay","TerawattHour","ThermEc","ThermImperial","ThermUs","WattDay","WattHour"],System.String);this.ConvertEnergy=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("convert_energy",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.Parameter.$ctor3("from",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Expression,Kusto.Language.Functions.s_energyLiteralValues),new Kusto.Language.Symbols.Parameter.$ctor3("to",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Expression,Kusto.Language.Functions.s_energyLiteralValues)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.s_forceLiteralValues=System.Array.init(["Decanewton","Dyn","KilogramForce","Kilonewton","KiloPond","KilopoundForce","Meganewton","Micronewton","Millinewton","Newton","OunceForce","Poundal","PoundForce","ShortTonForce","TonneForce"],System.String);this.ConvertForce=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("convert_force",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.Parameter.$ctor3("from",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Expression,Kusto.Language.Functions.s_forceLiteralValues),new Kusto.Language.Symbols.Parameter.$ctor3("to",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Expression,Kusto.Language.Functions.s_forceLiteralValues)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.s_lengthLiteralValues=System.Array.init(["Angstrom","AstronomicalUnit","Centimeter","Chain","DataMile","Decameter","Decimeter","DtpPica","DtpPoint","Fathom","Foot","Hand","Hectometer","Inch","KilolightYear","Kilometer","Kiloparsec","LightYear","MegalightYear","Megaparsec","Meter","Microinch","Micrometer","Mil","Mile","Millimeter","Nanometer","NauticalMile","Parsec","PrinterPica","PrinterPoint","Shackle","SolarRadius","Twip","UsSurveyFoot","Yard"],System.String);this.ConvertLength=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("convert_length",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.Parameter.$ctor3("from",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Expression,Kusto.Language.Functions.s_lengthLiteralValues),new Kusto.Language.Symbols.Parameter.$ctor3("to",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Expression,Kusto.Language.Functions.s_lengthLiteralValues)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.s_massLiteralValues=System.Array.init(["Centigram","Decagram","Decigram","EarthMass","Grain","Gram","Hectogram","Kilogram","Kilopound","Kilotonne","LongHundredweight","LongTon","Megapound","Megatonne","Microgram","Milligram","Nanogram","Ounce","Pound","ShortHundredweight","ShortTon","Slug","SolarMass","Stone","Tonne"],System.String);this.ConvertMass=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("convert_mass",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.Parameter.$ctor3("from",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Expression,Kusto.Language.Functions.s_massLiteralValues),new Kusto.Language.Symbols.Parameter.$ctor3("to",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Expression,Kusto.Language.Functions.s_massLiteralValues)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.s_speedLiteralValues=System.Array.init(["CentimeterPerHour","CentimeterPerMinute","CentimeterPerSecond","DecimeterPerMinute","DecimeterPerSecond","FootPerHour","FootPerMinute","FootPerSecond","InchPerHour","InchPerMinute","InchPerSecond","KilometerPerHour","KilometerPerMinute","KilometerPerSecond","Knot","MeterPerHour","MeterPerMinute","MeterPerSecond","MicrometerPerMinute","MicrometerPerSecond","MilePerHour","MillimeterPerHour","MillimeterPerMinute","MillimeterPerSecond","NanometerPerMinute","NanometerPerSecond","UsSurveyFootPerHour","UsSurveyFootPerMinute","UsSurveyFootPerSecond","YardPerHour","YardPerMinute","YardPerSecond"],System.String);this.ConvertSpeed=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("convert_speed",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.Parameter.$ctor3("from",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Expression,Kusto.Language.Functions.s_speedLiteralValues),new Kusto.Language.Symbols.Parameter.$ctor3("to",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Expression,Kusto.Language.Functions.s_speedLiteralValues)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.s_temperatureLiteralValues=System.Array.init(["DegreeCelsius","DegreeDelisle","DegreeFahrenheit","DegreeNewton","DegreeRankine","DegreeReaumur","DegreeRoemer","Kelvin","MillidegreeCelsius","SolarTemperature"],System.String);this.ConvertTemperature=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("convert_temperature",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.Parameter.$ctor3("from",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Expression,Kusto.Language.Functions.s_temperatureLiteralValues),new Kusto.Language.Symbols.Parameter.$ctor3("to",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Expression,Kusto.Language.Functions.s_temperatureLiteralValues)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.s_volumeLiteralValues=System.Array.init(["AcreFoot","AuTablespoon","BoardFoot","Centiliter","CubicCentimeter","CubicDecimeter","CubicFoot","CubicHectometer","CubicInch","CubicKilometer","CubicMeter","CubicMicrometer","CubicMile","CubicMillimeter","CubicYard","Decaliter","DecausGallon","Deciliter","DeciusGallon","HectocubicFoot","HectocubicMeter","Hectoliter","HectousGallon","ImperialBeerBarrel","ImperialGallon","ImperialOunce","ImperialPint","KilocubicFoot","KilocubicMeter","KiloimperialGallon","Kiloliter","KilousGallon","Liter","MegacubicFoot","MegaimperialGallon","Megaliter","MegausGallon","MetricCup","MetricTeaspoon","Microliter","Milliliter","OilBarrel","UkTablespoon","UsBeerBarrel","UsCustomaryCup","UsGallon","UsLegalCup","UsOunce","UsPint","UsQuart","UsTablespoon","UsTeaspoon"],System.String);this.ConvertVolume=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("convert_volume",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.Parameter.$ctor3("from",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Expression,Kusto.Language.Functions.s_volumeLiteralValues),new Kusto.Language.Symbols.Parameter.$ctor3("to",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Expression,Kusto.Language.Functions.s_volumeLiteralValues)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.Cluster=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("cluster",Kusto.Language.Symbols.ReturnTypeKind.Parameter0Cluster,[new Kusto.Language.Symbols.Parameter.$ctor2("name",Kusto.Language.Symbols.ScalarTypes.String)]);this.Database=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("database",Kusto.Language.Symbols.ReturnTypeKind.Parameter0Database,[new Kusto.Language.Symbols.Parameter.$ctor3("name",Kusto.Language.Symbols.ScalarTypes.String,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]);this.Table=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("table",Kusto.Language.Symbols.ReturnTypeKind.Parameter0Table,[new Kusto.Language.Symbols.Parameter.$ctor2("name",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor3("query_data_scope",Kusto.Language.Symbols.ScalarTypes.String,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]);this.ExternalTable=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("external_table",Kusto.Language.Symbols.ReturnTypeKind.Parameter0ExternalTable,[new Kusto.Language.Symbols.Parameter.$ctor2("name",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor3("mapping",Kusto.Language.Symbols.ScalarTypes.String,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]);this.MaterializedView=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("materialized_view",Kusto.Language.Symbols.ReturnTypeKind.Parameter0MaterializedView,[new Kusto.Language.Symbols.Parameter.$ctor2("name",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor3("max_age",Kusto.Language.Symbols.ScalarTypes.TimeSpan,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]);this.StoredQueryResult=new Kusto.Language.Symbols.FunctionSymbol.ctor("stored_query_result",function(context){return Kusto.Language.Symbols.TableSymbol.Empty.WithIsOpen(!0)},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.$ctor2("name",Kusto.Language.Symbols.ScalarTypes.String)]);this.Strcat=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("strcat",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.ctor("arg",Kusto.Language.Symbols.ParameterTypeKind.Scalar,0,void 0,void 0,!1,void 0,1,64,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.StrcatArray=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("strcat_array",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.ctor("array",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("delimiter",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.ArrayStrcat=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("array_strcat",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.ctor("array",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("delimiter",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.StrcatDelim=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("strcat_delim",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.ctor("delimiter",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.ctor("arg",Kusto.Language.Symbols.ParameterTypeKind.Scalar,0,void 0,void 0,!1,void 0,2,64,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.Strcmp=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("strcmp",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("s1",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.ctor("s2",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).ConstantFoldable();this.Strrep=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("strrep",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.$ctor2("multiplier",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.Parameter.ctor("delimiter",Kusto.Language.Symbols.ParameterTypeKind.Scalar,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.Strlen=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("strlen",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("string",Kusto.Language.Symbols.ParameterTypeKind.StringOrDynamic)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.NameAndFirstArgument).ConstantFoldable();this.StringSize=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("string_size",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("string",Kusto.Language.Symbols.ParameterTypeKind.StringOrDynamic)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.NameAndFirstArgument).ConstantFoldable();this.ToUpper=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("toupper",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.ToLower=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("tolower",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.ToUtf8_Deprecated=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("to_utf8",Kusto.Language.Symbols.ScalarTypes.DynamicArray,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable().Obsolete("unicode_codepoints_from_string");this.UnicodeCodepointsFromString=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("unicode_codepoints_from_string",Kusto.Language.Symbols.ScalarTypes.DynamicArray,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.Substring=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("substring",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.ctor("string",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.ctor("start",Kusto.Language.Symbols.ParameterTypeKind.Integer),new Kusto.Language.Symbols.Parameter.ctor("length",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.RegexQuote=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("regex_quote",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.ctor("string",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.IndexOf=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("indexof",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("string",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.ctor("match",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.ctor("start",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.ctor("length",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.ctor("occurrence",Kusto.Language.Symbols.ParameterTypeKind.Integer,Kusto.Language.Symbols.ArgumentKind.Constant,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.IndexOfRegex=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("indexof_regex",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("string",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.ctor("match",Kusto.Language.Symbols.ParameterTypeKind.Scalar,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("start",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.ctor("length",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.ctor("occurrence",Kusto.Language.Symbols.ParameterTypeKind.Integer,Kusto.Language.Symbols.ArgumentKind.Constant,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.HasAnyIndex=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("has_any_index",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("source",Kusto.Language.Symbols.ParameterTypeKind.StringOrDynamic),new Kusto.Language.Symbols.Parameter.ctor("values",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.Reverse=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("reverse",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.Split=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("split",Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfString,[new Kusto.Language.Symbols.Parameter.ctor("source",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.$ctor2("delimiter",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.ctor("requestedIndex",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.ParseCommandLine=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("parse_command_line",Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfString,[new Kusto.Language.Symbols.Parameter.ctor("command",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.$ctor2("parser",Kusto.Language.Symbols.ScalarTypes.String)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.Extract=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("extract",[new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.$ctor3("regex",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.$ctor2("captureGroup",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.Parameter.$ctor2("source",Kusto.Language.Symbols.ScalarTypes.String)]),new Kusto.Language.Symbols.Signature.$ctor2(Kusto.Language.Symbols.ReturnTypeKind.ParameterNLiteral,[new Kusto.Language.Symbols.Parameter.$ctor3("regex",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.$ctor2("captureGroup",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.Parameter.$ctor2("source",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor3("typeLiteral",Kusto.Language.Symbols.ScalarTypes.Type,Kusto.Language.Symbols.ArgumentKind.Literal)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.ExtractAll_Deprecated=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("extractall",[new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DynamicArray,[new Kusto.Language.Symbols.Parameter.$ctor3("regex",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.$ctor2("source",Kusto.Language.Symbols.ScalarTypes.String)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DynamicArray,[new Kusto.Language.Symbols.Parameter.$ctor3("regex",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("captureGroups",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.$ctor2("source",Kusto.Language.Symbols.ScalarTypes.String)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable().Obsolete("extract_all");this.ExtractAll=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("extract_all",[new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DynamicArray,[new Kusto.Language.Symbols.Parameter.$ctor3("regex",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.$ctor2("source",Kusto.Language.Symbols.ScalarTypes.String)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DynamicArray,[new Kusto.Language.Symbols.Parameter.$ctor3("regex",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("captureGroups",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.$ctor2("source",Kusto.Language.Symbols.ScalarTypes.String)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.ExtractJson_Deprecated=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("extractjson",[new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.$ctor3("jsonPath",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.$ctor2("jsonText",Kusto.Language.Symbols.ScalarTypes.String)]),new Kusto.Language.Symbols.Signature.$ctor2(Kusto.Language.Symbols.ReturnTypeKind.ParameterNLiteral,[new Kusto.Language.Symbols.Parameter.$ctor3("jsonPath",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.$ctor2("jsonText",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor3("type",Kusto.Language.Symbols.ScalarTypes.Type,Kusto.Language.Symbols.ArgumentKind.Literal)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.ExtractJson=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("extract_json",[new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.$ctor3("jsonPath",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.$ctor2("jsonText",Kusto.Language.Symbols.ScalarTypes.String)]),new Kusto.Language.Symbols.Signature.$ctor2(Kusto.Language.Symbols.ReturnTypeKind.ParameterNLiteral,[new Kusto.Language.Symbols.Parameter.$ctor3("jsonPath",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.$ctor2("jsonText",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor3("type",Kusto.Language.Symbols.ScalarTypes.Type,Kusto.Language.Symbols.ArgumentKind.Literal)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.Replace=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("replace",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.$ctor3("regex",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.$ctor3("rewrite",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.$ctor2("source",Kusto.Language.Symbols.ScalarTypes.String)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable().Obsolete("replace_regex' or 'replace_string");this.ReplaceRegex=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("replace_regex",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.$ctor2("source",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor3("lookup_regex",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.$ctor3("rewrite_pattern",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Constant)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.ReplaceString=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("replace_string",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.$ctor2("text",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor2("lookup",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor2("rewrite",Kusto.Language.Symbols.ScalarTypes.String)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.ReplaceStrings=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("replace_strings",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.$ctor2("text",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.ctor("lookups",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("rewrites",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.TrimStart=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("trim_start",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.$ctor3("regex",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.$ctor2("source",Kusto.Language.Symbols.ScalarTypes.String)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.TrimEnd=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("trim_end",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.$ctor3("regex",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.$ctor2("source",Kusto.Language.Symbols.ScalarTypes.String)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.Trim=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("trim",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.$ctor3("regex",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.$ctor2("source",Kusto.Language.Symbols.ScalarTypes.String)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.CountOf=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("countof",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.$ctor2("source",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor2("search",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor3("kind",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Literal,System.Array.init(["normal","regex"],System.Object),void 0,!0,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.Translate=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("translate",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.$ctor2("searchList",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor2("replacementList",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor2("source",Kusto.Language.Symbols.ScalarTypes.String)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.MakeString_Deprecated=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("make_string",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.IntegerOrArray,0,void 0,void 0,!1,void 0,1,Kusto.Language.FunctionHelpers.MaxRepeat,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable().Obsolete("unicode_codepoints_to_string");this.UnicodeCodepointsToString=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("unicode_codepoints_to_string",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.IntegerOrArray,0,void 0,void 0,!1,void 0,1,Kusto.Language.FunctionHelpers.MaxRepeat,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.ToString=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("tostring",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.ToHex=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("tohex",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Integer),new Kusto.Language.Symbols.Parameter.ctor("minLength",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.ToDynamic_=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("todynamic",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.String)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.ToObject_Deprecated=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("toobject",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.String)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).Obsolete("todynamic");this.ToLong=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("tolong",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.ToInt=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("toint",Kusto.Language.Symbols.ScalarTypes.Int,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.ToReal=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("toreal",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.ToDouble=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("todouble",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.ToDateTime=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("todatetime",Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.ToTimespan=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("totimespan",Kusto.Language.Symbols.ScalarTypes.TimeSpan,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.ToTime=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("totime",Kusto.Language.Symbols.ScalarTypes.TimeSpan,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).Obsolete("totimespan").ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.ToBool=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("tobool",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.ToBoolean=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("toboolean",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.ToDecimal=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("todecimal",Kusto.Language.Symbols.ScalarTypes.Decimal,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.ToGuid=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("toguid",Kusto.Language.Symbols.ScalarTypes.Guid,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.StringOrDynamic)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.GetType=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("gettype",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("type");this.UrlEncode=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("url_encode",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.$ctor2("url",Kusto.Language.Symbols.ScalarTypes.String)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.UrlEncode_Component=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("url_encode_component",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.$ctor2("url",Kusto.Language.Symbols.ScalarTypes.String)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.UrlDecode=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("url_decode",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.$ctor2("encoded_url",Kusto.Language.Symbols.ScalarTypes.String)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.Base64EncodeString=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("base64_encodestring",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.$ctor2("string",Kusto.Language.Symbols.ScalarTypes.String)]).ConstantFoldable().Obsolete("base64_encode_tostring").WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.Base64EncodeToString=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("base64_encode_tostring",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.$ctor2("string",Kusto.Language.Symbols.ScalarTypes.String)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.Base64DecodeString=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("base64_decodestring",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.$ctor2("base64_string",Kusto.Language.Symbols.ScalarTypes.String)]).ConstantFoldable().Obsolete("base64_decode_tostring").WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.Base64DecodeToString=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("base64_decode_tostring",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.$ctor2("base64_string",Kusto.Language.Symbols.ScalarTypes.String)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.Base64DecodeToArray=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("base64_decode_toarray",Kusto.Language.Symbols.ScalarTypes.DynamicArray,[new Kusto.Language.Symbols.Parameter.$ctor2("base64_string",Kusto.Language.Symbols.ScalarTypes.String)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.Base64DecodeToGuid=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("base64_decode_toguid",Kusto.Language.Symbols.ScalarTypes.Guid,[new Kusto.Language.Symbols.Parameter.$ctor2("base64_string",Kusto.Language.Symbols.ScalarTypes.String)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.Base64EncodeFromGuid=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("base64_encode_fromguid",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.$ctor2("guid",Kusto.Language.Symbols.ScalarTypes.Guid)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.Base64EncodeFromArray=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("base64_encode_fromarray",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.ctor("base64_string_decoded_as_array",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.ZlibDecompressString=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("zlib_decompress_from_base64_string",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.$ctor2("string",Kusto.Language.Symbols.ScalarTypes.String)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.ZlibCompressString=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("zlib_compress_to_base64_string",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.$ctor2("string",Kusto.Language.Symbols.ScalarTypes.String)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.GzipDecompressString=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("gzip_decompress_from_base64_string",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.$ctor2("string",Kusto.Language.Symbols.ScalarTypes.String)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.GzipCompressString=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("gzip_compress_to_base64_string",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.$ctor2("string",Kusto.Language.Symbols.ScalarTypes.String)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.Lz4CompressDynamicArray=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("__lz4_compress_dynamic_array_to_base64_string",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.ctor("dynamic",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)]).ConstantFoldable().Hide().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.ParseCsv=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("parse_csv",Kusto.Language.Symbols.ScalarTypes.DynamicArray,[new Kusto.Language.Symbols.Parameter.$ctor2("csv_text",Kusto.Language.Symbols.ScalarTypes.String)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.ParseJson_Deprecated=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("parsejson",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("json_text",Kusto.Language.Symbols.ScalarTypes.String)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable().Obsolete("parse_json");this.ParseJson=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("parse_json",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("json_text",Kusto.Language.Symbols.ScalarTypes.String)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.ParseXml=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("parse_xml",Kusto.Language.Symbols.ScalarTypes.DynamicBag,[new Kusto.Language.Symbols.Parameter.$ctor2("xml_text",Kusto.Language.Symbols.ScalarTypes.String)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.ParseUrlResult=Kusto.Language.Symbols.ScalarTypes.GetDynamicBag([new Kusto.Language.Symbols.ColumnSymbol("Scheme",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Host",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Port",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Path",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Username",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Password",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Query Parameters",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.ColumnSymbol("Fragment",Kusto.Language.Symbols.ScalarTypes.String)]);this.ParseUrl_Deprecated=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("parseurl",Kusto.Language.Functions.ParseUrlResult,[new Kusto.Language.Symbols.Parameter.$ctor2("url",Kusto.Language.Symbols.ScalarTypes.String)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable().Obsolete("parse_url");this.ParseUrl=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("parse_url",Kusto.Language.Functions.ParseUrlResult,[new Kusto.Language.Symbols.Parameter.$ctor2("url",Kusto.Language.Symbols.ScalarTypes.String)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.ParseUrlQueryResult=Kusto.Language.Symbols.ScalarTypes.GetDynamicBag([new Kusto.Language.Symbols.ColumnSymbol("Query Parameters",Kusto.Language.Symbols.ScalarTypes.Dynamic)]);this.ParseUrlQuery_Deprecated=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("parseurlquery",Kusto.Language.Functions.ParseUrlQueryResult,[new Kusto.Language.Symbols.Parameter.$ctor2("query",Kusto.Language.Symbols.ScalarTypes.String)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable().Obsolete("parse_urlquery");this.ParseUrlQuery=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("parse_urlquery",Kusto.Language.Functions.ParseUrlQueryResult,[new Kusto.Language.Symbols.Parameter.$ctor2("query",Kusto.Language.Symbols.ScalarTypes.String)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.ParseIPV4=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("parse_ipv4",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.$ctor2("ip",Kusto.Language.Symbols.ScalarTypes.String)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.ParseIPV4Mask=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("parse_ipv4_mask",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.$ctor2("ip",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor2("prefix",Kusto.Language.Symbols.ScalarTypes.Long)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.FormatIPV4=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("format_ipv4",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.ctor("ip",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.$ctor3("prefix",Kusto.Language.Symbols.ScalarTypes.Long,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.FormatIPV4Mask=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("format_ipv4_mask",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.ctor("ip",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.$ctor2("prefix",Kusto.Language.Symbols.ScalarTypes.Long)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.Ipv4Compare=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("ipv4_compare",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.$ctor2("ip1",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor2("ip2",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor3("prefix",Kusto.Language.Symbols.ScalarTypes.Long,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.Ipv4IsMatch=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("ipv4_is_match",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("ip1",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor2("ip2",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor3("prefix",Kusto.Language.Symbols.ScalarTypes.Long,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.Ipv4IsInRange=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("ipv4_is_in_range",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("ip",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor2("ip_range",Kusto.Language.Symbols.ScalarTypes.String)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.Ipv4IsInAnyRange=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("ipv4_is_in_any_range",[new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("ip",Kusto.Language.Symbols.ParameterTypeKind.StringOrDynamic),new Kusto.Language.Symbols.Parameter.$ctor3("ranges",Kusto.Language.Symbols.ScalarTypes.String,0,void 0,void 0,!1,void 0,1,Kusto.Language.FunctionHelpers.MaxRepeat,void 0,void 0)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("ip",Kusto.Language.Symbols.ParameterTypeKind.StringOrDynamic),new Kusto.Language.Symbols.Parameter.ctor("ranges",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.Ipv4NetmaskSuffix=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("ipv4_netmask_suffix",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.$ctor2("ip",Kusto.Language.Symbols.ScalarTypes.String)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.Ipv4IsPrivate=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("ipv4_is_private",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("ip",Kusto.Language.Symbols.ScalarTypes.String)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.Ipv4RangeToCidrList=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("ipv4_range_to_cidr_list",Kusto.Language.Symbols.ScalarTypes.DynamicArray,[new Kusto.Language.Symbols.Parameter.$ctor2("start_ip",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor2("end_ip",Kusto.Language.Symbols.ScalarTypes.String)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.ParseIPV6=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("parse_ipv6",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.$ctor2("ip",Kusto.Language.Symbols.ScalarTypes.String)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.ParseIPV6Mask=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("parse_ipv6_mask",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.$ctor2("ip",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor2("prefix",Kusto.Language.Symbols.ScalarTypes.Long)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.Ipv6Compare=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("ipv6_compare",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.$ctor2("ip1",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor2("ip2",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor3("prefix",Kusto.Language.Symbols.ScalarTypes.Long,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.Ipv6IsMatch=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("ipv6_is_match",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("ip1",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor2("ip2",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor3("prefix",Kusto.Language.Symbols.ScalarTypes.Long,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.Ipv6IsInRange=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("ipv6_is_in_range",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("ip",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor2("ip_range",Kusto.Language.Symbols.ScalarTypes.String)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.Ipv6IsInAnyRange=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("ipv6_is_in_any_range",[new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("ip",Kusto.Language.Symbols.ParameterTypeKind.StringOrDynamic),new Kusto.Language.Symbols.Parameter.$ctor3("ranges",Kusto.Language.Symbols.ScalarTypes.String,0,void 0,void 0,!1,void 0,1,Kusto.Language.FunctionHelpers.MaxRepeat,void 0,void 0)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("ip",Kusto.Language.Symbols.ParameterTypeKind.StringOrDynamic),new Kusto.Language.Symbols.Parameter.ctor("ranges",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.Ipv6LookupRanges=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("__ipv6_lookup_ranges",[new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DynamicArray,[new Kusto.Language.Symbols.Parameter.ctor("ip",Kusto.Language.Symbols.ParameterTypeKind.StringOrDynamic),new Kusto.Language.Symbols.Parameter.ctor("ranges",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).Hide();this.ParsePathResult=Kusto.Language.Symbols.ScalarTypes.GetDynamicBag([new Kusto.Language.Symbols.ColumnSymbol("Scheme",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("RootPath",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("DirectoryPath",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("DirectoryName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Filename",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Extension",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("AlternateDataStreamName",Kusto.Language.Symbols.ScalarTypes.String)]);this.ParsePath=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("parse_path",Kusto.Language.Functions.ParsePathResult,[new Kusto.Language.Symbols.Parameter.$ctor2("path",Kusto.Language.Symbols.ScalarTypes.String)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.ParseUserAgentResult=Kusto.Language.Symbols.ScalarTypes.GetDynamicBag([new Kusto.Language.Symbols.ColumnSymbol("Browser",Kusto.Language.Symbols.ScalarTypes.GetDynamicBag([new Kusto.Language.Symbols.ColumnSymbol("Family",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("MajorVersion",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("MinorVersion",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Patch",Kusto.Language.Symbols.ScalarTypes.String)])),new Kusto.Language.Symbols.ColumnSymbol("OperatingSystem",Kusto.Language.Symbols.ScalarTypes.GetDynamicBag([new Kusto.Language.Symbols.ColumnSymbol("Family",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("MajorVersion",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("MinorVersion",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Patch",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("PatchMinor",Kusto.Language.Symbols.ScalarTypes.String)])),new Kusto.Language.Symbols.ColumnSymbol("Device",Kusto.Language.Symbols.ScalarTypes.GetDynamicBag([new Kusto.Language.Symbols.ColumnSymbol("Family",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Brand",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Model",Kusto.Language.Symbols.ScalarTypes.String)]))]);this.ParseUserAgent=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("parse_user_agent",Kusto.Language.Functions.ParseUserAgentResult,[new Kusto.Language.Symbols.Parameter.$ctor2("user_agent",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.ctor("look_for",Kusto.Language.Symbols.ParameterTypeKind.StringOrArray,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.ParseVersion=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("parse_version",Kusto.Language.Symbols.ScalarTypes.Decimal,[new Kusto.Language.Symbols.Parameter.$ctor2("version",Kusto.Language.Symbols.ScalarTypes.String)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.FormatDatetime=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("format_datetime",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.$ctor2("date",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor3("format",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.LiteralNotEmpty)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.FormatTimespan=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("format_timespan",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.$ctor2("timespan",Kusto.Language.Symbols.ScalarTypes.TimeSpan),new Kusto.Language.Symbols.Parameter.$ctor3("format",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.LiteralNotEmpty)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.MakeDatetime=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("make_datetime",[new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.ctor("year",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("month",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("day",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("hour",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.ctor("minute",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.ctor("second",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)])]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.OnlyArgument);this.MakeTimespan=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("make_timespan",[new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.TimeSpan,[new Kusto.Language.Symbols.Parameter.ctor("days",Kusto.Language.Symbols.ParameterTypeKind.Integer),new Kusto.Language.Symbols.Parameter.ctor("hours",Kusto.Language.Symbols.ParameterTypeKind.Integer),new Kusto.Language.Symbols.Parameter.ctor("minutes",Kusto.Language.Symbols.ParameterTypeKind.Integer),new Kusto.Language.Symbols.Parameter.ctor("seconds",Kusto.Language.Symbols.ParameterTypeKind.Integer)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.TimeSpan,[new Kusto.Language.Symbols.Parameter.ctor("hours",Kusto.Language.Symbols.ParameterTypeKind.Integer),new Kusto.Language.Symbols.Parameter.ctor("minutes",Kusto.Language.Symbols.ParameterTypeKind.Integer),new Kusto.Language.Symbols.Parameter.ctor("seconds",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.TimeSpan,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)])]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.OnlyArgument);this.DatetimeAdd=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("datetime_add",Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.$ctor3("part",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Literal,Kusto.Language.KustoFacts.DateDiffParts),new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Integer),new Kusto.Language.Symbols.Parameter.$ctor2("datetime",Kusto.Language.Symbols.ScalarTypes.DateTime)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.DatetimeDiff=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("datetime_diff",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.$ctor3("part",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Literal,Kusto.Language.KustoFacts.DateDiffParts),new Kusto.Language.Symbols.Parameter.$ctor2("datetime1",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor2("datetime2",Kusto.Language.Symbols.ScalarTypes.DateTime)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.DayOfWeek=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("dayofweek",Kusto.Language.Symbols.ScalarTypes.TimeSpan,[new Kusto.Language.Symbols.Parameter.$ctor2("date",Kusto.Language.Symbols.ScalarTypes.DateTime)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.DayOfMonth=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("dayofmonth",Kusto.Language.Symbols.ScalarTypes.Int,[new Kusto.Language.Symbols.Parameter.$ctor2("date",Kusto.Language.Symbols.ScalarTypes.DateTime)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.DayOfYear=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("dayofyear",Kusto.Language.Symbols.ScalarTypes.Int,[new Kusto.Language.Symbols.Parameter.$ctor2("date",Kusto.Language.Symbols.ScalarTypes.DateTime)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.HourOfDay=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("hourofday",Kusto.Language.Symbols.ScalarTypes.Int,[new Kusto.Language.Symbols.Parameter.$ctor2("date",Kusto.Language.Symbols.ScalarTypes.DateTime)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.WeekOfYear=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("weekofyear",Kusto.Language.Symbols.ScalarTypes.Int,[new Kusto.Language.Symbols.Parameter.$ctor2("date",Kusto.Language.Symbols.ScalarTypes.DateTime)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).Obsolete("week_of_year");this.WeekOfYearISO=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("week_of_year",Kusto.Language.Symbols.ScalarTypes.Int,[new Kusto.Language.Symbols.Parameter.$ctor2("date",Kusto.Language.Symbols.ScalarTypes.DateTime)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.MonthOfYear=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("monthofyear",Kusto.Language.Symbols.ScalarTypes.Int,[new Kusto.Language.Symbols.Parameter.$ctor2("date",Kusto.Language.Symbols.ScalarTypes.DateTime)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.StartOfDay=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("startofday",Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.$ctor2("date",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor3("offset",Kusto.Language.Symbols.ScalarTypes.Long,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.StartOfWeek=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("startofweek",Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.$ctor2("date",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor3("offset",Kusto.Language.Symbols.ScalarTypes.Long,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.StartOfMonth=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("startofmonth",Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.$ctor2("date",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor3("offset",Kusto.Language.Symbols.ScalarTypes.Long,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.StartOfYear=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("startofyear",Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.$ctor2("date",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor3("offset",Kusto.Language.Symbols.ScalarTypes.Long,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.EndOfDay=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("endofday",Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.$ctor2("date",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor3("offset",Kusto.Language.Symbols.ScalarTypes.Long,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.EndOfWeek=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("endofweek",Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.$ctor2("date",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor3("offset",Kusto.Language.Symbols.ScalarTypes.Long,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.EndOfMonth=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("endofmonth",Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.$ctor2("date",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor3("offset",Kusto.Language.Symbols.ScalarTypes.Long,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.EndOfYear=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("endofyear",Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.$ctor2("date",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor3("offset",Kusto.Language.Symbols.ScalarTypes.Long,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.GetYear=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("getyear",Kusto.Language.Symbols.ScalarTypes.Int,[new Kusto.Language.Symbols.Parameter.$ctor2("date",Kusto.Language.Symbols.ScalarTypes.DateTime)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.GetMonth=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("getmonth",Kusto.Language.Symbols.ScalarTypes.Int,[new Kusto.Language.Symbols.Parameter.$ctor2("date",Kusto.Language.Symbols.ScalarTypes.DateTime)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.DatePart=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("datepart",Kusto.Language.Symbols.ScalarTypes.Int,[new Kusto.Language.Symbols.Parameter.$ctor3("part",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Literal,Kusto.Language.KustoFacts.DateTimeParts),new Kusto.Language.Symbols.Parameter.$ctor2("date",Kusto.Language.Symbols.ScalarTypes.DateTime)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).Obsolete("datetime_part");this.DatetimePart=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("datetime_part",Kusto.Language.Symbols.ScalarTypes.Int,[new Kusto.Language.Symbols.Parameter.$ctor3("part",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Literal,Kusto.Language.KustoFacts.DateTimeParts),new Kusto.Language.Symbols.Parameter.$ctor2("date",Kusto.Language.Symbols.ScalarTypes.DateTime)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.Now=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("now",Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.$ctor3("offset",Kusto.Language.Symbols.ScalarTypes.TimeSpan,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.Ago=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("ago",Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.$ctor3("timespan",Kusto.Language.Symbols.ScalarTypes.TimeSpan,0,void 0,Kusto.Language.KustoFacts.AgoExamples,!1,void 0,1,1,void 0,void 0)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.UnixTimeSecondsToDateTime=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("unixtime_seconds_todatetime",Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.ctor("number",Kusto.Language.Symbols.ParameterTypeKind.Number)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.UnixTimeMillisecondsToDateTime=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("unixtime_milliseconds_todatetime",Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.ctor("number",Kusto.Language.Symbols.ParameterTypeKind.Number)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.UnixTimeMicrosecondsToDateTime=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("unixtime_microseconds_todatetime",Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.ctor("number",Kusto.Language.Symbols.ParameterTypeKind.Number)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.UnixTimeNanosecondsToDateTime=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("unixtime_nanoseconds_todatetime",Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.ctor("number",Kusto.Language.Symbols.ParameterTypeKind.Number)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.DatetimeLocalToUtc=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("datetime_local_to_utc",Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.$ctor2("from",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor2("timezone",Kusto.Language.Symbols.ScalarTypes.String)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.DatetimeUtcToLocal=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("datetime_utc_to_local",Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.$ctor2("from",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor2("timezone",Kusto.Language.Symbols.ScalarTypes.String)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.DateTimeListTimezones=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("datetime_list_timezones",Kusto.Language.Symbols.ScalarTypes.DynamicArray).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.PunycodeDecode=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("punycode_to_string",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.$ctor2("string",Kusto.Language.Symbols.ScalarTypes.String)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.PunycodeEncode=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("punycode_from_string",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.$ctor2("string",Kusto.Language.Symbols.ScalarTypes.String)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.PunycodeDomainDecode=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("punycode_domain_from_string",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.$ctor2("string",Kusto.Language.Symbols.ScalarTypes.String)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.PunycodeDomainEncode=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("punycode_domain_to_string",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.$ctor2("string",Kusto.Language.Symbols.ScalarTypes.String)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.HashCrc32=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("__hash_crc32",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("source",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic),new Kusto.Language.Symbols.Parameter.ctor("mod",Kusto.Language.Symbols.ParameterTypeKind.Integer),new Kusto.Language.Symbols.Parameter.ctor("seed",Kusto.Language.Symbols.ParameterTypeKind.Integer)]).ConstantFoldable().Hide();this.HashManyCrc32=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("__hash_many_crc32",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("arg",Kusto.Language.Symbols.ParameterTypeKind.Scalar,0,void 0,void 0,!1,void 0,1,2,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable().Hide();this.HashDjb2=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("__hash_djb2",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("source",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic),new Kusto.Language.Symbols.Parameter.ctor("mod",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable().Hide();this.InternalHashXXH64=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("__hash_xxh64",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("source",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic),new Kusto.Language.Symbols.Parameter.ctor("mod",Kusto.Language.Symbols.ParameterTypeKind.Integer),new Kusto.Language.Symbols.Parameter.ctor("seed",Kusto.Language.Symbols.ParameterTypeKind.Integer)]).ConstantFoldable().Hide();this.Hash=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("hash",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("source",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic),new Kusto.Language.Symbols.Parameter.ctor("mod",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.HashXXH64=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("hash_xxhash64",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("source",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic),new Kusto.Language.Symbols.Parameter.ctor("mod",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.HashSha256=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("hash_sha256",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.ctor("source",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.HashMd5=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("hash_md5",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.ctor("source",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.HashSha1=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("hash_sha1",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.ctor("source",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.HashCombine=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("hash_combine",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("source",Kusto.Language.Symbols.ParameterTypeKind.Scalar,0,void 0,void 0,!1,void 0,2,Kusto.Language.FunctionHelpers.MaxRepeat,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.HashMany=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("hash_many",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("source",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic,0,void 0,void 0,!1,void 0,1,Kusto.Language.FunctionHelpers.MaxRepeat,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.Iif=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("iif",Kusto.Language.Symbols.ReturnTypeKind.CommonNonDynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("if",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.Parameter.ctor("then",Kusto.Language.Symbols.ParameterTypeKind.CommonScalarOrDynamic),new Kusto.Language.Symbols.Parameter.ctor("else",Kusto.Language.Symbols.ParameterTypeKind.CommonScalarOrDynamic)]).ConstantFoldable();this.Iff=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("iff",Kusto.Language.Symbols.ReturnTypeKind.CommonNonDynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("if",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.Parameter.ctor("then",Kusto.Language.Symbols.ParameterTypeKind.CommonScalarOrDynamic),new Kusto.Language.Symbols.Parameter.ctor("else",Kusto.Language.Symbols.ParameterTypeKind.CommonScalarOrDynamic)]).ConstantFoldable();this.Case=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("case",[new Kusto.Language.Symbols.Signature.$ctor2(Kusto.Language.Symbols.ReturnTypeKind.CommonNonDynamic,[new Kusto.Language.Symbols.Parameter.$ctor3("predicate",Kusto.Language.Symbols.ScalarTypes.Bool,0,void 0,void 0,!1,void 0,1,Kusto.Language.FunctionHelpers.MaxRepeat,void 0,void 0),new Kusto.Language.Symbols.Parameter.ctor("then",Kusto.Language.Symbols.ParameterTypeKind.CommonScalarOrDynamic,0,void 0,void 0,!1,void 0,1,Kusto.Language.FunctionHelpers.MaxRepeat,void 0,void 0),new Kusto.Language.Symbols.Parameter.ctor("else",Kusto.Language.Symbols.ParameterTypeKind.CommonScalarOrDynamic)]).WithLayout(Kusto.Language.Symbols.ParameterLayouts.BlockRepeating)]).ConstantFoldable();this.Assert=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("assert",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("predicate",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.Parameter.$ctor2("message",Kusto.Language.Symbols.ScalarTypes.String)]);this.Bin=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("bin",[new Kusto.Language.Symbols.Signature.$ctor2(Kusto.Language.Symbols.ReturnTypeKind.Widest,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("roundTo",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.TimeSpan,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.TimeSpan),new Kusto.Language.Symbols.Parameter.$ctor2("roundTo",Kusto.Language.Symbols.ScalarTypes.TimeSpan)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor2("roundTo",Kusto.Language.Symbols.ScalarTypes.DateTime)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor2("roundTo",Kusto.Language.Symbols.ScalarTypes.TimeSpan)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.Floor=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("floor",[new Kusto.Language.Symbols.Signature.$ctor2(Kusto.Language.Symbols.ReturnTypeKind.Widest,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("roundTo",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.TimeSpan,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.TimeSpan),new Kusto.Language.Symbols.Parameter.$ctor2("roundTo",Kusto.Language.Symbols.ScalarTypes.TimeSpan)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor2("roundTo",Kusto.Language.Symbols.ScalarTypes.DateTime)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor2("roundTo",Kusto.Language.Symbols.ScalarTypes.TimeSpan)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.BinAt=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("bin_at",[new Kusto.Language.Symbols.Signature.$ctor2(Kusto.Language.Symbols.ReturnTypeKind.Widest,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("bin_size",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("fixed_point",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.TimeSpan,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.TimeSpan),new Kusto.Language.Symbols.Parameter.ctor("bin_size",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.$ctor2("fixed_point",Kusto.Language.Symbols.ScalarTypes.TimeSpan)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.TimeSpan,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.TimeSpan),new Kusto.Language.Symbols.Parameter.$ctor2("bin_size",Kusto.Language.Symbols.ScalarTypes.TimeSpan),new Kusto.Language.Symbols.Parameter.$ctor2("fixed_point",Kusto.Language.Symbols.ScalarTypes.TimeSpan)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.ctor("bin_size",Kusto.Language.Symbols.ParameterTypeKind.Summable),new Kusto.Language.Symbols.Parameter.$ctor2("fixed_point",Kusto.Language.Symbols.ScalarTypes.DateTime)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.BinAuto=new Kusto.Language.Symbols.FunctionSymbol.ctor("bin_auto",function(context){var $t,valueType;return(valueType=($t=context.GetArgument$1("value"))!=null?$t.ResultType:Bridge.as(null,Kusto.Language.Symbols.ScalarSymbol))!=null?valueType.IsNumeric?Kusto.Language.Symbols.TypeFacts.PromoteToLong(Kusto.Language.Symbols.TypeFacts.GetCommonScalarType([valueType,context.GetResultType("query_bin_auto_size"),context.GetResultType("query_bin_auto_at")])):Kusto.Language.Symbols.TypeFacts.PromoteToLong(valueType):Kusto.Language.Symbols.ScalarTypes.Unknown},Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Summable)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable().Hide();this.Not=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("not",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("expression",Kusto.Language.Symbols.ScalarTypes.Bool)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.NotNull_Deprecated=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("notnull",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("expression",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).Obsolete("isnotnull");this.IsNotNull=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("isnotnull",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("expression",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.IsNull=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("isnull",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("expression",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.NotEmpty_Deprecated=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("notempty",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).Obsolete("isnotempty");this.IsNotEmpty=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("isnotempty",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.IsEmpty=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("isempty",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.IsAscii=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("isascii",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.IsUtf8=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("isutf8",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.IsColumnExists=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("iscolumnexists",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor3("column_name",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Constant)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).Hide();this.ColumnIfExists_Deprecated=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("columnifexists",Kusto.Language.Symbols.ReturnTypeKind.Parameter1,[new Kusto.Language.Symbols.Parameter.$ctor3("column_name",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("defaultValue",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgumentValueIfColumn).Obsolete("column_ifexists");this.ColumnIfExists=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("column_ifexists",Kusto.Language.Symbols.ReturnTypeKind.Parameter1,[new Kusto.Language.Symbols.Parameter.$ctor3("column_name",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("defaultValue",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgumentValueIfColumn);this.Around=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("around",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.ctor("center",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.ctor("delta",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.BinaryAnd=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("binary_and",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("value1",Kusto.Language.Symbols.ParameterTypeKind.Integer),new Kusto.Language.Symbols.Parameter.ctor("value2",Kusto.Language.Symbols.ParameterTypeKind.Integer)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.BinaryOr=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("binary_or",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("value1",Kusto.Language.Symbols.ParameterTypeKind.Integer),new Kusto.Language.Symbols.Parameter.ctor("value2",Kusto.Language.Symbols.ParameterTypeKind.Integer)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.BinaryXor=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("binary_xor",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("value1",Kusto.Language.Symbols.ParameterTypeKind.Integer),new Kusto.Language.Symbols.Parameter.ctor("value2",Kusto.Language.Symbols.ParameterTypeKind.Integer)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.BinaryNot=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("binary_not",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Integer)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.BinaryShiftRight=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("binary_shift_right",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Integer),new Kusto.Language.Symbols.Parameter.ctor("shift",Kusto.Language.Symbols.ParameterTypeKind.Integer)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.BinaryShiftLeft=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("binary_shift_left",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Integer),new Kusto.Language.Symbols.Parameter.ctor("shift",Kusto.Language.Symbols.ParameterTypeKind.Integer)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.BitsetCountOnes=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("bitset_count_ones",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Integer)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.TreePath=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("treepath",Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfString,[new Kusto.Language.Symbols.Parameter.ctor("object",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("tree").ConstantFoldable();this.Repeat=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("repeat",Kusto.Language.Symbols.ReturnTypeKind.Parameter0Array,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.$ctor2("count",Kusto.Language.Symbols.ScalarTypes.Long)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("repeat").ConstantFoldable();this.Arraylength_Deprecated=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("arraylength",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("array",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable().Obsolete("array_length");this.ArrayLength=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("array_length",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("array",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.ArrayReverse=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("array_reverse",Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.Range=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("range",Kusto.Language.Symbols.ReturnTypeKind.Parameter0Array,[new Kusto.Language.Symbols.Parameter.ctor("start",Kusto.Language.Symbols.ParameterTypeKind.Summable),new Kusto.Language.Symbols.Parameter.ctor("stop",Kusto.Language.Symbols.ParameterTypeKind.Summable),new Kusto.Language.Symbols.Parameter.ctor("step",Kusto.Language.Symbols.ParameterTypeKind.Summable,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.ArrayConcat=new Kusto.Language.Symbols.FunctionSymbol.ctor("array_concat",function(context){var arrays=context.GetArguments$1("array");return Kusto.Language.Symbols.TypeFacts.GetCommonResultType$2(arrays,Kusto.Language.Symbols.Conversion.None)||Kusto.Language.Symbols.ScalarTypes.DynamicArray},Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("array",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray,0,void 0,void 0,!1,void 0,1,64,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.ArrayIff=new Kusto.Language.Symbols.FunctionSymbol.ctor("array_iff",function(context){var whenTrue=context.GetArgument$1("when_true"),whenFalse=context.GetArgument$1("when_true"),commonResult=Kusto.Language.Symbols.TypeFacts.GetCommonResultType([whenTrue,whenFalse]);return Bridge.is(commonResult,Kusto.Language.Symbols.DynamicSymbol)||(commonResult=Kusto.Language.Symbols.ScalarTypes.GetDynamicArray(commonResult)),commonResult},Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("condition_array",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("when_true",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.ctor("when_false",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.ArrayIif=new Kusto.Language.Symbols.FunctionSymbol.ctor("array_iif",function(context){var whenTrue=context.GetArgument$1("when_true"),whenFalse=context.GetArgument$1("when_true"),commonResult=Kusto.Language.Symbols.TypeFacts.GetCommonResultType([whenTrue,whenFalse]);return Bridge.is(commonResult,Kusto.Language.Symbols.DynamicSymbol)||(commonResult=Kusto.Language.Symbols.ScalarTypes.GetDynamicArray(commonResult)),commonResult},Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("condition_array",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("when_true",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.ctor("when_false",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).ConstantFoldable().Hide();this.ArrayIndexOf=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("array_index_of",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("array",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.ctor("start",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.ctor("length",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.ctor("occurrence",Kusto.Language.Symbols.ParameterTypeKind.Integer,Kusto.Language.Symbols.ArgumentKind.Constant,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).ConstantFoldable();this.SetHasElement=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("set_has_element",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("set",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).ConstantFoldable();this.ArraySlice=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("array_slice",Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("array",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("start",Kusto.Language.Symbols.ParameterTypeKind.Integer),new Kusto.Language.Symbols.Parameter.ctor("end",Kusto.Language.Symbols.ParameterTypeKind.Integer)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.ArraySplit=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("array_split",[new Kusto.Language.Symbols.Signature.$ctor2(Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("array",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("index",Kusto.Language.Symbols.ParameterTypeKind.Integer)]),new Kusto.Language.Symbols.Signature.$ctor2(Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("array",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("indices",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.ArrayShiftLeft=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("array_shift_left",Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("array",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("shift_count",Kusto.Language.Symbols.ParameterTypeKind.Integer),new Kusto.Language.Symbols.Parameter.ctor("default_value",Kusto.Language.Symbols.ParameterTypeKind.Scalar,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.ArrayShiftRight=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("array_shift_right",Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("array",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("shift_count",Kusto.Language.Symbols.ParameterTypeKind.Integer),new Kusto.Language.Symbols.Parameter.ctor("default_value",Kusto.Language.Symbols.ParameterTypeKind.Scalar,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.ArrayRotateLeft=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("array_rotate_left",Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("array",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("rotate_count",Kusto.Language.Symbols.ParameterTypeKind.Integer)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.ArrayRotateRight=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("array_rotate_right",Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("array",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("rotate_count",Kusto.Language.Symbols.ParameterTypeKind.Integer)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.m_ArraySort_ArraysArg=new Kusto.Language.Symbols.Parameter.ctor("arrays",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray,0,void 0,void 0,!1,void 0,1,64,void 0,void 0);this.m_ArraySort_NullsLastArg=new Kusto.Language.Symbols.Parameter.$ctor3("nulls_last",Kusto.Language.Symbols.ScalarTypes.Bool,Kusto.Language.Symbols.ArgumentKind.Constant,void 0,void 0,!1,void 0,0,1,void 0,void 0);this.ArraySortAsc=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("array_sort_asc",[new Kusto.Language.Symbols.Signature.ctor(Kusto.Language.Functions.GetArraySortResult,Kusto.Language.Symbols.Tabularity.Scalar,[Kusto.Language.Functions.m_ArraySort_ArraysArg,Kusto.Language.Functions.m_ArraySort_NullsLastArg]).WithLayout$1(Kusto.Language.Functions.ValidateArgumentsForArraySort)]);this.ArraySortDesc=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("array_sort_desc",[new Kusto.Language.Symbols.Signature.ctor(Kusto.Language.Functions.GetArraySortResult,Kusto.Language.Symbols.Tabularity.Scalar,[Kusto.Language.Functions.m_ArraySort_ArraysArg,Kusto.Language.Functions.m_ArraySort_NullsLastArg]).WithLayout$1(Kusto.Language.Functions.ValidateArgumentsForArraySort)]);this.BagKeys=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("bag_keys",Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfString,[new Kusto.Language.Symbols.Parameter.ctor("object",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.Zip=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("zip",Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfArray,[new Kusto.Language.Symbols.Parameter.ctor("array",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray,0,void 0,void 0,!1,void 0,2,64,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.Pack=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("pack",[new Kusto.Language.Symbols.Signature.ctor(Kusto.Language.Functions.GetBagPackReturnType,Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.$ctor3("key",Kusto.Language.Symbols.ScalarTypes.String,0,void 0,void 0,!1,void 0,1,Kusto.Language.FunctionHelpers.MaxRepeat,void 0,void 0),new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar,0,void 0,void 0,!1,void 0,1,Kusto.Language.FunctionHelpers.MaxRepeat,void 0,void 0)]).WithLayout(Kusto.Language.Symbols.ParameterLayouts.BlockRepeating)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).Obsolete("bag_pack").ConstantFoldable();this.PackDictionary=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("pack_dictionary",[new Kusto.Language.Symbols.Signature.ctor(Kusto.Language.Functions.GetBagPackReturnType,Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.$ctor3("key",Kusto.Language.Symbols.ScalarTypes.String,0,void 0,void 0,!1,void 0,1,Kusto.Language.FunctionHelpers.MaxRepeat,void 0,void 0),new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar,0,void 0,void 0,!1,void 0,1,Kusto.Language.FunctionHelpers.MaxRepeat,void 0,void 0)]).WithLayout(Kusto.Language.Symbols.ParameterLayouts.BlockRepeating)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).Obsolete("bag_pack").ConstantFoldable();this.BagPack=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("bag_pack",[new Kusto.Language.Symbols.Signature.ctor(Kusto.Language.Functions.GetBagPackReturnType,Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.$ctor3("key",Kusto.Language.Symbols.ScalarTypes.String,0,void 0,void 0,!1,void 0,1,Kusto.Language.FunctionHelpers.MaxRepeat,void 0,void 0),new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar,0,void 0,void 0,!1,void 0,1,Kusto.Language.FunctionHelpers.MaxRepeat,void 0,void 0)]).WithLayout(Kusto.Language.Symbols.ParameterLayouts.BlockRepeating)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.BagPackColumns=new Kusto.Language.Symbols.FunctionSymbol.ctor("bag_pack_columns",Kusto.Language.Functions.GetBagPackColumnsReturnType,Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar,Kusto.Language.Symbols.ArgumentKind.Column,void 0,void 0,!1,void 0,1,Kusto.Language.FunctionHelpers.MaxRepeat,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.PackAll=new Kusto.Language.Symbols.FunctionSymbol.ctor("pack_all",function(context){var $t;return Kusto.Language.Symbols.ScalarTypes.GetDynamicBag$1(($t=context.RowScope)!=null?$t.Columns:null)},Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("ignore_null_empty",Kusto.Language.Symbols.ParameterTypeKind.Scalar,Kusto.Language.Symbols.ArgumentKind.Literal,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.PackArray=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("pack_array",[new Kusto.Language.Symbols.Signature.ctor(function(context){var values=context.GetArguments$1("value"),type=Kusto.Language.Symbols.TypeFacts.GetCommonResultType$2(values);return Kusto.Language.Symbols.ScalarTypes.GetDynamicArray(type)},Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar,0,void 0,void 0,!1,void 0,1,Kusto.Language.FunctionHelpers.MaxRepeat,void 0,void 0)]),new Kusto.Language.Symbols.Signature.ctor(function(context){return context.RowScope!=null?Kusto.Language.Symbols.ScalarTypes.GetDynamicArray(Kusto.Language.Symbols.TypeFacts.GetCommonColumnType(context.RowScope.Columns)):Kusto.Language.Symbols.ScalarTypes.DynamicArray},Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar,Kusto.Language.Symbols.ArgumentKind.StarOnly)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.SetUnion=new Kusto.Language.Symbols.FunctionSymbol.ctor("set_union",Kusto.Language.Functions.GetSetType,Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("set",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray,0,void 0,void 0,!1,void 0,2,64,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.SetIntersect=new Kusto.Language.Symbols.FunctionSymbol.ctor("set_intersect",Kusto.Language.Functions.GetSetType,Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("set",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray,0,void 0,void 0,!1,void 0,2,64,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.SetDifference=new Kusto.Language.Symbols.FunctionSymbol.ctor("set_difference",Kusto.Language.Functions.GetSetType,Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("set",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray,0,void 0,void 0,!1,void 0,2,64,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.SetEquals=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("set_equals",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("set1",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("set2",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.BagMerge=new Kusto.Language.Symbols.FunctionSymbol.ctor("bag_merge",function(context){var bags=context.GetArguments$1("bag"),merged,i,obj;if(System.Array.getCount(bags,Kusto.Language.Syntax.Expression)>0&&(merged=Bridge.as(System.Array.getItem(bags,0,Kusto.Language.Syntax.Expression).ResultType,Kusto.Language.Symbols.DynamicBagSymbol))!=null){for(i=1;i<System.Array.getCount(bags,Kusto.Language.Syntax.Expression);i=i+1|0)(obj=Bridge.as(System.Array.getItem(bags,i,Kusto.Language.Syntax.Expression).ResultType,Kusto.Language.Symbols.DynamicBagSymbol))!=null&&(merged=Kusto.Language.Symbols.ScalarTypes.GetDynamicBag$1(Kusto.Language.Symbols.TypeFacts.Union(merged.Properties,obj.Properties)));return merged}return Kusto.Language.Symbols.ScalarTypes.DynamicBag},Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("bag",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag,0,void 0,void 0,!1,void 0,2,64,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.DynamicToJson=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("dynamic_to_json",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.ctor("dynamic",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.BagRemoveKeys=new Kusto.Language.Symbols.FunctionSymbol.ctor("bag_remove_keys",function(context){var bag=context.GetArgument$1("bag"),keys=context.GetArgument$1("keys"),bs,ja,namesToRemove,newProps;return bag!=null&&(bs=Bridge.as(bag.ResultType,Kusto.Language.Symbols.DynamicBagSymbol))!=null&&(ja=Bridge.as(keys,Kusto.Language.Syntax.JsonArrayExpression))!=null?(namesToRemove=Kusto.Language.Utils.ListExtensions.ToHashSetEx(System.String,Kusto.Language.FunctionHelpers.GetConstantValues(ja.Values)),newProps=System.Linq.Enumerable.from(bs.Properties,Kusto.Language.Symbols.ColumnSymbol).where(function(p){return!namesToRemove.contains(p.Name)}).toList(Kusto.Language.Symbols.ColumnSymbol),Kusto.Language.Symbols.ScalarTypes.GetDynamicBag$1(newProps)):Kusto.Language.Symbols.ScalarTypes.DynamicBag},Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("bag",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag),new Kusto.Language.Symbols.Parameter.ctor("keys",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.BagZip=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("bag_zip",Kusto.Language.Symbols.ScalarTypes.DynamicBag,[new Kusto.Language.Symbols.Parameter.ctor("keys",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("values",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.JaccardIndex=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("jaccard_index",Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfReal,[new Kusto.Language.Symbols.Parameter.ctor("set",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray,0,void 0,void 0,!1,void 0,2,2,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.BagHasKey=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("bag_has_key",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("bag",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag),new Kusto.Language.Symbols.Parameter.$ctor2("key",Kusto.Language.Symbols.ScalarTypes.String)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.BagSetKey=new Kusto.Language.Symbols.FunctionSymbol.ctor("bag_set_key",function(context){var bag=context.GetArgument$1("bag"),key=context.GetArgument$1("key"),value=context.GetArgument$1("value"),name,type,currentBag,newProperty;return bag!=null&&key!=null&&(name=Bridge.as(key.ConstantValue,System.String))!=null&&!System.String.isNullOrWhiteSpace(name)&&!Kusto.Language.Functions.IsJsonPath(name)&&value!=null&&(type=Bridge.as(value.ResultType,Kusto.Language.Symbols.ScalarSymbol))!=null?(currentBag=Bridge.as(bag.ResultType,Kusto.Language.Symbols.DynamicBagSymbol)||Kusto.Language.Symbols.ScalarTypes.DynamicBag,newProperty=new Kusto.Language.Symbols.ColumnSymbol(name,type),currentBag.AddOrUpdateProperty(newProperty)):(bag!=null?bag.ResultType:null)||Kusto.Language.Symbols.ScalarTypes.DynamicBag},Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("bag",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag),new Kusto.Language.Symbols.Parameter.$ctor3("key",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.PercentileTDigest=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("percentile_tdigest",[new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.ctor("tdigest",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.$ctor2("percentile1",Kusto.Language.Symbols.ScalarTypes.Real)]),new Kusto.Language.Symbols.Signature.$ctor2(Kusto.Language.Symbols.ReturnTypeKind.ParameterNLiteral,[new Kusto.Language.Symbols.Parameter.ctor("tdigest",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.$ctor2("percentile1",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.Parameter.$ctor3("type",Kusto.Language.Symbols.ScalarTypes.Type,Kusto.Language.Symbols.ArgumentKind.Literal)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.NameAndFirstArgument);this.PercentileArrayTDigest=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("percentiles_array_tdigest",[new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DynamicArray,[new Kusto.Language.Symbols.Parameter.ctor("tdigest",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.$ctor3("percentile",Kusto.Language.Symbols.ScalarTypes.Real,0,void 0,void 0,!1,void 0,1,Kusto.Language.FunctionHelpers.MaxRepeat,void 0,void 0)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DynamicArray,[new Kusto.Language.Symbols.Parameter.ctor("tdigest",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("percentiles",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)])]).WithResultNamePrefix("percentile_tdigest").WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument);this.PercentRankTDigest=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("percentrank_tdigest",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("digest",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.RankTDigest=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("rank_tdigest",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("digest",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.TdigestIsValid=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("tdigest_isvalid",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("digest",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).Hide();this.HllIsValid=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("hll_isvalid",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("hll",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).Hide();this.TDigestMerge=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("tdigest_merge",Kusto.Language.Symbols.ScalarTypes.DynamicArray,[new Kusto.Language.Symbols.Parameter.ctor("tdigest",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray,0,void 0,void 0,!1,void 0,2,16,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixOnly).WithResultNamePrefix("tdigests_merge_result");this.MergeTDigest=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("merge_tdigest",Kusto.Language.Symbols.ScalarTypes.DynamicArray,[new Kusto.Language.Symbols.Parameter.ctor("tdigest",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray,0,void 0,void 0,!1,void 0,2,16,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixOnly).WithResultNamePrefix("tdigests_merge_result");this.HllMerge=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("hll_merge",Kusto.Language.Symbols.ScalarTypes.DynamicArray,[new Kusto.Language.Symbols.Parameter.ctor("hll",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray,0,void 0,void 0,!1,void 0,2,16,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixOnly).WithResultNamePrefix("hll_merged_result");this.DCountHll=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("dcount_hll",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("hll",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.NameAndFirstArgument);this.HllNormalize=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("__hll_normalize",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor3("hll",Kusto.Language.Symbols.ScalarTypes.Dynamic,0,void 0,void 0,!1,void 0,2,16,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).Hide();this.SeriesFir=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("series_fir",Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfReal,[new Kusto.Language.Symbols.Parameter.ctor("series",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("filter",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.$ctor3("normalize",Kusto.Language.Symbols.ScalarTypes.Bool,0,void 0,void 0,!1,void 0,0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.$ctor3("center",Kusto.Language.Symbols.ScalarTypes.Bool,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.SeriesStats=new Kusto.Language.Symbols.FunctionSymbol.ctor("series_stats",function(context){var source=context.GetArgument$1("series");return Kusto.Language.FunctionHelpers.MakePrefixedTuple(context,"series",new Kusto.Language.Symbols.TupleSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("min",Kusto.Language.Symbols.ScalarTypes.Real,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("min_idx",Kusto.Language.Symbols.ScalarTypes.Long,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("max",Kusto.Language.Symbols.ScalarTypes.Real,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("max_idx",Kusto.Language.Symbols.ScalarTypes.Long,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("avg",Kusto.Language.Symbols.ScalarTypes.Real,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("stdev",Kusto.Language.Symbols.ScalarTypes.Real,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("variance",Kusto.Language.Symbols.ScalarTypes.Real,void 0,void 0,source,void 0)]))},Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("series",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.$ctor3("ignore_nonfinite",Kusto.Language.Symbols.ScalarTypes.Bool,Kusto.Language.Symbols.ArgumentKind.Constant,void 0,void 0,!1,void 0,0,1,void 0,void 0)]);this.SeriesStatsDynamic=new Kusto.Language.Symbols.FunctionSymbol.ctor("series_stats_dynamic",function(context){var source=context.GetArgument$1("series");return new Kusto.Language.Symbols.DynamicBagSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("min",Kusto.Language.Symbols.ScalarTypes.Real,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("min_idx",Kusto.Language.Symbols.ScalarTypes.Long,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("max",Kusto.Language.Symbols.ScalarTypes.Real,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("max_idx",Kusto.Language.Symbols.ScalarTypes.Long,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("avg",Kusto.Language.Symbols.ScalarTypes.Real,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("stdev",Kusto.Language.Symbols.ScalarTypes.Real,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("variance",Kusto.Language.Symbols.ScalarTypes.Real,void 0,void 0,source,void 0)])},Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("series",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.$ctor3("ignore_nonfinite",Kusto.Language.Symbols.ScalarTypes.Bool,Kusto.Language.Symbols.ArgumentKind.Constant,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.ArraySum=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("array_sum",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("array",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.SeriesFft=new Kusto.Language.Symbols.FunctionSymbol.ctor("series_fft",function(context){var source=context.GetArgument$1("series");return Kusto.Language.FunctionHelpers.MakePrefixedTuple(context,"series",new Kusto.Language.Symbols.TupleSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("real",Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfReal,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("imag",Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfReal,void 0,void 0,source,void 0)]))},Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("series",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("series_imaginary",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]);this.SeriesIfft=new Kusto.Language.Symbols.FunctionSymbol.ctor("series_ifft",function(context){var source=context.GetArgument$1("series");return Kusto.Language.FunctionHelpers.MakePrefixedTuple(context,"series",new Kusto.Language.Symbols.TupleSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("real",Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfReal,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("imag",Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfReal,void 0,void 0,source,void 0)]))},Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("series",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("series_imaginary",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]);this.SeriesFitPoly=new Kusto.Language.Symbols.FunctionSymbol.ctor("series_fit_poly",function(context){var source=context.GetArgument$1("y_series");return Kusto.Language.FunctionHelpers.MakePrefixedTuple(context,"y_series",new Kusto.Language.Symbols.TupleSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("rsquare",Kusto.Language.Symbols.ScalarTypes.Real,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("coefficients",Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfReal,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("variance",Kusto.Language.Symbols.ScalarTypes.Real,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("rvariance",Kusto.Language.Symbols.ScalarTypes.Real,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("poly_fit",Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfReal,void 0,void 0,source,void 0)]))},Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("y_series",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("x_series",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray,0,void 0,void 0,!1,void 0,0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.$ctor3("degree",Kusto.Language.Symbols.ScalarTypes.Int,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]);this.SeriesFitLine=new Kusto.Language.Symbols.FunctionSymbol.ctor("series_fit_line",function(context){var source=context.GetArgument$1("series");return Kusto.Language.FunctionHelpers.MakePrefixedTuple(context,"series",new Kusto.Language.Symbols.TupleSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("rsquare",Kusto.Language.Symbols.ScalarTypes.Real,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("slope",Kusto.Language.Symbols.ScalarTypes.Real,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("variance",Kusto.Language.Symbols.ScalarTypes.Real,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("rvariance",Kusto.Language.Symbols.ScalarTypes.Real,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("interception",Kusto.Language.Symbols.ScalarTypes.Real,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("line_fit",Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfReal,void 0,void 0,source,void 0)]))},Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("series",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)]);this.SeriesFitLineDynamic=new Kusto.Language.Symbols.FunctionSymbol.ctor("series_fit_line_dynamic",function(context){var source=context.GetArgument$1("series");return Kusto.Language.Symbols.ScalarTypes.GetDynamicBag([new Kusto.Language.Symbols.ColumnSymbol("rsquare",Kusto.Language.Symbols.ScalarTypes.Real,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("slope",Kusto.Language.Symbols.ScalarTypes.Real,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("variance",Kusto.Language.Symbols.ScalarTypes.Real,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("rvariance",Kusto.Language.Symbols.ScalarTypes.Real,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("interception",Kusto.Language.Symbols.ScalarTypes.Real,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("line_fit",Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfReal,void 0,void 0,source,void 0)])},Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("series",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.SeriesFit2Lines=new Kusto.Language.Symbols.FunctionSymbol.ctor("series_fit_2lines",function(context){var source=context.GetArgument$1("array");return Kusto.Language.FunctionHelpers.MakePrefixedTuple(context,"array",new Kusto.Language.Symbols.TupleSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("rsquare",Kusto.Language.Symbols.ScalarTypes.Real,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("split_idx",Kusto.Language.Symbols.ScalarTypes.Long,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("variance",Kusto.Language.Symbols.ScalarTypes.Real,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("rvariance",Kusto.Language.Symbols.ScalarTypes.Real,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("line_fit",Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfReal,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("right_rsquare",Kusto.Language.Symbols.ScalarTypes.Real,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("right_slope",Kusto.Language.Symbols.ScalarTypes.Real,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("right_interception",Kusto.Language.Symbols.ScalarTypes.Real,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("right_variance",Kusto.Language.Symbols.ScalarTypes.Real,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("right_rvariance",Kusto.Language.Symbols.ScalarTypes.Real,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("left_rsquare",Kusto.Language.Symbols.ScalarTypes.Real,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("left_slope",Kusto.Language.Symbols.ScalarTypes.Real,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("left_interception",Kusto.Language.Symbols.ScalarTypes.Real,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("left_variance",Kusto.Language.Symbols.ScalarTypes.Real,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("left_rvariance",Kusto.Language.Symbols.ScalarTypes.Real,void 0,void 0,source,void 0)]))},Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("array",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)]);this.SeriesFit2LinesDynamic=new Kusto.Language.Symbols.FunctionSymbol.ctor("series_fit_2lines_dynamic",function(context){var source=context.GetArgument$1("array");return new Kusto.Language.Symbols.DynamicBagSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("rsquare",Kusto.Language.Symbols.ScalarTypes.Real,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("split_idx",Kusto.Language.Symbols.ScalarTypes.Long,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("variance",Kusto.Language.Symbols.ScalarTypes.Real,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("rvariance",Kusto.Language.Symbols.ScalarTypes.Real,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("line_fit",Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfReal,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("right_rsquare",Kusto.Language.Symbols.ScalarTypes.Real,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("right_slope",Kusto.Language.Symbols.ScalarTypes.Real,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("right_interception",Kusto.Language.Symbols.ScalarTypes.Real,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("right_variance",Kusto.Language.Symbols.ScalarTypes.Real,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("right_rvariance",Kusto.Language.Symbols.ScalarTypes.Real,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("left_rsquare",Kusto.Language.Symbols.ScalarTypes.Real,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("left_slope",Kusto.Language.Symbols.ScalarTypes.Real,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("left_interception",Kusto.Language.Symbols.ScalarTypes.Real,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("left_variance",Kusto.Language.Symbols.ScalarTypes.Real,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("left_rvariance",Kusto.Language.Symbols.ScalarTypes.Real,void 0,void 0,source,void 0)])},Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("series",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.SeriesOutliers=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("series_outliers",[new Kusto.Language.Symbols.Signature.$ctor2(Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("series",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.$ctor3("kind",Kusto.Language.Symbols.ScalarTypes.String,0,void 0,void 0,!1,void 0,0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.ctor("ignore_val",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]),new Kusto.Language.Symbols.Signature.$ctor2(Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("series",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.$ctor2("kind",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor2("ignore_val",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.Parameter.$ctor2("min_percentile",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.Parameter.$ctor3("max_percentile",Kusto.Language.Symbols.ScalarTypes.Real,0,void 0,void 0,!1,void 0,0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.ctor("test_points",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.SeriesIIR=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("series_iir",Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfReal,[new Kusto.Language.Symbols.Parameter.ctor("series",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("numerators",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("denominators",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.SeriesPeriodsDetect=new Kusto.Language.Symbols.FunctionSymbol.ctor("series_periods_detect",function(context){var source=context.GetArgument$1("series");return Kusto.Language.FunctionHelpers.MakePrefixedTuple(context,"series",new Kusto.Language.Symbols.TupleSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("periods",Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfReal,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("scores",Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfReal,void 0,void 0,source,void 0)]))},Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("series",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("min_period",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("max_period",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.$ctor2("num_periods",Kusto.Language.Symbols.ScalarTypes.Long)]);this.SeriesPeriodsValidate=new Kusto.Language.Symbols.FunctionSymbol.ctor("series_periods_validate",function(context){var source=context.GetArgument$1("series");return Kusto.Language.FunctionHelpers.MakePrefixedTuple(context,"series",new Kusto.Language.Symbols.TupleSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("periods",Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfReal,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("scores",Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfReal,void 0,void 0,source,void 0)]))},Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("series",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("period",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,1,16,void 0,void 0)]);this.SeriesFillBackwards=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("series_fill_backward",Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("series",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("missing_value_placeholder",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.SeriesFillForward=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("series_fill_forward",Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("series",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("missing_value_placeholder",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.SeriesFillConst=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("series_fill_const",Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("series",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("constant_value",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.ctor("missing_value_placeholder",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.SeriesFillLinear=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("series_fill_linear",Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("series",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("missing_value_placeholder",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.$ctor3("fill_edges",Kusto.Language.Symbols.ScalarTypes.Bool,0,void 0,void 0,!1,void 0,0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.ctor("constant_value",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.SeriesAdd=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("series_add",[new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DynamicArray,[new Kusto.Language.Symbols.Parameter.ctor("series1",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("series2",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DynamicArray,[new Kusto.Language.Symbols.Parameter.ctor("series1",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("series2",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DynamicArray,[new Kusto.Language.Symbols.Parameter.ctor("series1",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("series2",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.SeriesSubtract=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("series_subtract",[new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DynamicArray,[new Kusto.Language.Symbols.Parameter.ctor("series1",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("series2",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DynamicArray,[new Kusto.Language.Symbols.Parameter.ctor("series1",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("series2",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DynamicArray,[new Kusto.Language.Symbols.Parameter.ctor("series1",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("series2",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.SeriesMultiply=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("series_multiply",[new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DynamicArray,[new Kusto.Language.Symbols.Parameter.ctor("series1",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("series2",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DynamicArray,[new Kusto.Language.Symbols.Parameter.ctor("series1",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("series2",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DynamicArray,[new Kusto.Language.Symbols.Parameter.ctor("series1",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("series2",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.SeriesDivide=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("series_divide",[new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfReal,[new Kusto.Language.Symbols.Parameter.ctor("series1",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("series2",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfReal,[new Kusto.Language.Symbols.Parameter.ctor("series1",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("series2",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfReal,[new Kusto.Language.Symbols.Parameter.ctor("series1",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("series2",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.SeriesPow=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("series_pow",[new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfReal,[new Kusto.Language.Symbols.Parameter.ctor("series1",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("series2",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfReal,[new Kusto.Language.Symbols.Parameter.ctor("series1",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("series2",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfReal,[new Kusto.Language.Symbols.Parameter.ctor("series1",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("series2",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.SeriesGreater=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("series_greater",[new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfBool,[new Kusto.Language.Symbols.Parameter.ctor("series1",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("series2",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfBool,[new Kusto.Language.Symbols.Parameter.ctor("series1",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("series2",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfBool,[new Kusto.Language.Symbols.Parameter.ctor("series1",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("series2",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.SeriesGreaterEquals=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("series_greater_equals",[new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfBool,[new Kusto.Language.Symbols.Parameter.ctor("series1",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("series2",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfBool,[new Kusto.Language.Symbols.Parameter.ctor("series1",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("series2",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfBool,[new Kusto.Language.Symbols.Parameter.ctor("series1",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("series2",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.SeriesLess=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("series_less",[new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfBool,[new Kusto.Language.Symbols.Parameter.ctor("series1",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("series2",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfBool,[new Kusto.Language.Symbols.Parameter.ctor("series1",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("series2",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfBool,[new Kusto.Language.Symbols.Parameter.ctor("series1",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("series2",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.SeriesLessEquals=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("series_less_equals",[new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfBool,[new Kusto.Language.Symbols.Parameter.ctor("series1",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("series2",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfBool,[new Kusto.Language.Symbols.Parameter.ctor("series1",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("series2",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfBool,[new Kusto.Language.Symbols.Parameter.ctor("series1",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("series2",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.SeriesEquals=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("series_equals",[new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfBool,[new Kusto.Language.Symbols.Parameter.ctor("series1",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("series2",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfBool,[new Kusto.Language.Symbols.Parameter.ctor("series1",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("series2",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfBool,[new Kusto.Language.Symbols.Parameter.ctor("series1",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("series2",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.SeriesNotEquals=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("series_not_equals",[new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfBool,[new Kusto.Language.Symbols.Parameter.ctor("series1",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("series2",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfBool,[new Kusto.Language.Symbols.Parameter.ctor("series1",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("series2",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfBool,[new Kusto.Language.Symbols.Parameter.ctor("series1",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("series2",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.SeriesSeasonal=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("series_seasonal",[new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfReal,[new Kusto.Language.Symbols.Parameter.ctor("series",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfReal,[new Kusto.Language.Symbols.Parameter.ctor("series",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("period",Kusto.Language.Symbols.ParameterTypeKind.Integer)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfReal,[new Kusto.Language.Symbols.Parameter.ctor("series",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("period",Kusto.Language.Symbols.ParameterTypeKind.Integer),new Kusto.Language.Symbols.Parameter.ctor("test_points",Kusto.Language.Symbols.ParameterTypeKind.Integer)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.SeriesExp=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("series_exp",Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfReal,[new Kusto.Language.Symbols.Parameter.ctor("series",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.SeriesSign=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("series_sign",Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfLong,[new Kusto.Language.Symbols.Parameter.ctor("series",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.SeriesAbs=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("series_abs",Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("series",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.SeriesSin=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("series_sin",Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfReal,[new Kusto.Language.Symbols.Parameter.ctor("series",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.SeriesAsin=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("series_asin",Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfReal,[new Kusto.Language.Symbols.Parameter.ctor("series",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.SeriesCos=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("series_cos",Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfReal,[new Kusto.Language.Symbols.Parameter.ctor("series",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.SeriesAcos=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("series_acos",Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfReal,[new Kusto.Language.Symbols.Parameter.ctor("series",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.SeriesTan=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("series_tan",Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfReal,[new Kusto.Language.Symbols.Parameter.ctor("series",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.SeriesAtan=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("series_atan",Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfReal,[new Kusto.Language.Symbols.Parameter.ctor("series",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.SeriesLog=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("series_log",Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfReal,[new Kusto.Language.Symbols.Parameter.ctor("series",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.SeriesFloor=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("series_floor",Kusto.Language.Symbols.ScalarTypes.DynamicArray,[new Kusto.Language.Symbols.Parameter.ctor("series",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.SeriesCeiling=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("series_ceiling",Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("series",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.SeriesDecompose=new Kusto.Language.Symbols.FunctionSymbol.ctor("series_decompose",Kusto.Language.Functions.SeriesDecomposeResult,Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("series",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("period",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.$ctor3("trend",Kusto.Language.Symbols.ScalarTypes.String,0,void 0,void 0,!1,void 0,0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.ctor("test_points",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.ctor("seasonality_threshold",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]);this.SeriesDecomposeForecast=new Kusto.Language.Symbols.FunctionSymbol.ctor("series_decompose_forecast",Kusto.Language.Functions.SeriesDecomposeResult,Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("series",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("test_points",Kusto.Language.Symbols.ParameterTypeKind.Integer),new Kusto.Language.Symbols.Parameter.ctor("period",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.$ctor3("trend",Kusto.Language.Symbols.ScalarTypes.String,0,void 0,void 0,!1,void 0,0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.ctor("seasonality_threshold",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]);this.SeriesDecomposeAnomalies=new Kusto.Language.Symbols.FunctionSymbol.ctor("series_decompose_anomalies",Kusto.Language.Functions.SeriesDecomposeAnomaliesResult,Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("series",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("threshold",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.ctor("period",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.$ctor3("trend",Kusto.Language.Symbols.ScalarTypes.String,0,void 0,void 0,!1,void 0,0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.ctor("test_points",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.$ctor3("method",Kusto.Language.Symbols.ScalarTypes.String,0,void 0,void 0,!1,void 0,0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.ctor("seasonality_threshold",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]);this.SeriesPearsonCorrelation=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("series_pearson_correlation",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("series1",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("series2",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.SeriesDotProduct=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("series_dot_product",[new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("series1",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("series2",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("series1",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("series2",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("series1",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("series2",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.SeriesMagnitude=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("series_magnitude",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("series",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.SeriesSum=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("series_sum",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("series",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.SeriesCosineSimilarity=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("series_cosine_similarity",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("series1",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("series2",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.$ctor3("series1_magnitude",Kusto.Language.Symbols.ScalarTypes.Real,0,void 0,void 0,!1,void 0,0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.$ctor3("series2_magnitude",Kusto.Language.Symbols.ScalarTypes.Real,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.Round=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("round",Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("number",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.$ctor3("precision",Kusto.Language.Symbols.ScalarTypes.Long,Kusto.Language.Symbols.ArgumentKind.Constant,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.Ceiling=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("ceiling",Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("number",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.Pow=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("pow",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("base",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("exponent",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.Sqrt=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("sqrt",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("number",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.Log=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("log",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("number",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.Log2=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("log2",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("number",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.Log10=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("log10",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("number",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.Exp=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("exp",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("number",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.Exp2=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("exp2",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("number",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.Exp10=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("exp10",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("number",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.PI=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("pi",Kusto.Language.Symbols.ScalarTypes.Real).ConstantFoldable();this.Cos=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("cos",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("number",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.Sin=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("sin",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("number",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.Tan=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("tan",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("number",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.Acos=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("acos",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("number",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.Asin=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("asin",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("number",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.Atan=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("atan",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("number",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.Atan2=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("atan2",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("y",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("x",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.Abs=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("abs",[new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("number",Kusto.Language.Symbols.ParameterTypeKind.Integer)]),new Kusto.Language.Symbols.Signature.$ctor2(Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("number",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.TimeSpan,[new Kusto.Language.Symbols.Parameter.$ctor2("number",Kusto.Language.Symbols.ScalarTypes.TimeSpan)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.Cot=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("cot",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("number",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.Degrees=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("degrees",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("radians",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.Radians=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("radians",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("degrees",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.Sign=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("sign",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("number",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.Rand=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("rand",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("number",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.BetaCdf=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("beta_cdf",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("x",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("alpha",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("beta",Kusto.Language.Symbols.ParameterTypeKind.Number)]).ConstantFoldable();this.BetaInv=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("beta_inv",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("probability",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("alpha",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("beta",Kusto.Language.Symbols.ParameterTypeKind.Number)]).ConstantFoldable();this.BetaPdf=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("beta_pdf",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("x",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("alpha",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("beta",Kusto.Language.Symbols.ParameterTypeKind.Number)]).ConstantFoldable();this.Gamma=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("gamma",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("number",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.LogGamma=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("loggamma",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("number",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.Erf=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("erf",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("number",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.Erfc=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("erfc",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("number",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.IsNan=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("isnan",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("number",Kusto.Language.Symbols.ScalarTypes.Real)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.IsInf=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("isinf",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("number",Kusto.Language.Symbols.ScalarTypes.Real)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.IsFinite=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("isfinite",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("number",Kusto.Language.Symbols.ScalarTypes.Real)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.Coalesce=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("coalesce",Kusto.Language.Symbols.ReturnTypeKind.Common,[new Kusto.Language.Symbols.Parameter.ctor("arg",Kusto.Language.Symbols.ParameterTypeKind.CommonScalar,0,void 0,void 0,!1,void 0,2,64,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.MaxOf=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("max_of",Kusto.Language.Symbols.ReturnTypeKind.Common,[new Kusto.Language.Symbols.Parameter.ctor("arg",Kusto.Language.Symbols.ParameterTypeKind.CommonOrderable,0,void 0,void 0,!1,void 0,2,64,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.MinOf=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("min_of",Kusto.Language.Symbols.ReturnTypeKind.Common,[new Kusto.Language.Symbols.Parameter.ctor("arg",Kusto.Language.Symbols.ParameterTypeKind.CommonOrderable,0,void 0,void 0,!1,void 0,2,64,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.WelchTest=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("welch_test",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("mean1",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("variance1",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("count1",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("mean2",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("variance2",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("count2",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.GeoAngle=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("geo_angle",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("p1_longitude",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("p1_latitude",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("p2_longitude",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("p2_latitude",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("p3_longitude",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("p3_latitude",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.GeoAzimuth=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("geo_azimuth",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("p1_longitude",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("p1_latitude",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("p2_longitude",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("p2_latitude",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.GeoDistance2Points=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("geo_distance_2points",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("p1_longitude",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("p1_latitude",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("p2_longitude",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("p2_latitude",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.GeoDistancePointToLine=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("geo_distance_point_to_line",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("longitude",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("latitude",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("lineString",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.GeoDistancePointToPolygon=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("geo_distance_point_to_polygon",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("longitude",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("latitude",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("polygon",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.GeoPointInCircle=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("geo_point_in_circle",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("p_longitude",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("p_latitude",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("pc_longitude",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("pc_latitude",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("c_radius",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.GeoPointInPolygon=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("geo_point_in_polygon",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("longitude",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("latitude",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("polygon",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.GeoPointBuffer=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("geo_point_buffer",Kusto.Language.Symbols.ScalarTypes.GeoShape,[new Kusto.Language.Symbols.Parameter.ctor("longitude",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("latitude",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("radius",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("tolerance",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.GeoLineBuffer=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("geo_line_buffer",Kusto.Language.Symbols.ScalarTypes.GeoShape,[new Kusto.Language.Symbols.Parameter.ctor("lineString",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag),new Kusto.Language.Symbols.Parameter.ctor("radius",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("tolerance",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.GeoPolygonBuffer=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("geo_polygon_buffer",Kusto.Language.Symbols.ScalarTypes.GeoShape,[new Kusto.Language.Symbols.Parameter.ctor("polygon",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag),new Kusto.Language.Symbols.Parameter.ctor("radius",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("tolerance",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.GeoIntersects2Lines=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("geo_intersects_2lines",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("lineString1",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag),new Kusto.Language.Symbols.Parameter.ctor("lineString2",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.GeoIntersection2Lines=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("geo_intersection_2lines",Kusto.Language.Symbols.ScalarTypes.GeoShape,[new Kusto.Language.Symbols.Parameter.ctor("lineString1",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag),new Kusto.Language.Symbols.Parameter.ctor("lineString2",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.GeoIntersectsLineWithPolygon=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("geo_intersects_line_with_polygon",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("lineString",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag),new Kusto.Language.Symbols.Parameter.ctor("polygon",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.GeoIntersectionLineWithPolygon=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("geo_intersection_line_with_polygon",Kusto.Language.Symbols.ScalarTypes.GeoShape,[new Kusto.Language.Symbols.Parameter.ctor("lineString",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag),new Kusto.Language.Symbols.Parameter.ctor("polygon",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.GeoIntersects2Polygons=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("geo_intersects_2polygons",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("polygon1",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag),new Kusto.Language.Symbols.Parameter.ctor("polygon2",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.GeoIntersection2Polygons=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("geo_intersection_2polygons",Kusto.Language.Symbols.ScalarTypes.GeoShape,[new Kusto.Language.Symbols.Parameter.ctor("polygon1",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag),new Kusto.Language.Symbols.Parameter.ctor("polygon2",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.GeoPolygonsUnion=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("geo_union_polygons_array",Kusto.Language.Symbols.ScalarTypes.GeoShape,[new Kusto.Language.Symbols.Parameter.ctor("polygons",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.GeoLinesUnion=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("geo_union_lines_array",Kusto.Language.Symbols.ScalarTypes.GeoShape,[new Kusto.Language.Symbols.Parameter.ctor("lineStrings",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.GeoPolygonToS2Cells=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("geo_polygon_to_s2cells",Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfString,[new Kusto.Language.Symbols.Parameter.ctor("polygon",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag),new Kusto.Language.Symbols.Parameter.ctor("level",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.ctor("radius",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.GeoLineToS2Cells=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("geo_line_to_s2cells",Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfString,[new Kusto.Language.Symbols.Parameter.ctor("lineString",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag),new Kusto.Language.Symbols.Parameter.ctor("level",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.ctor("radius",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.GeoPolygonS2CellCoveringLevel=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("__geo_polygon_s2cell_covering_level",Kusto.Language.Symbols.ScalarTypes.Int,[new Kusto.Language.Symbols.Parameter.ctor("polygon",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable().Hide();this.GeoLineS2CellCoveringLevel=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("__geo_line_s2cell_covering_level",Kusto.Language.Symbols.ScalarTypes.Int,[new Kusto.Language.Symbols.Parameter.ctor("lineString",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable().Hide();this.GeoLengthToS2CellLevel=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("__geo_length_to_s2cell_level",Kusto.Language.Symbols.ScalarTypes.Int,[new Kusto.Language.Symbols.Parameter.ctor("length",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable().Hide();this.GeoPolygonDensify=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("geo_polygon_densify",Kusto.Language.Symbols.ScalarTypes.GeoShape,[new Kusto.Language.Symbols.Parameter.ctor("polygon",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag),new Kusto.Language.Symbols.Parameter.ctor("tolerance",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.ctor("preserve_crossing",Kusto.Language.Symbols.ParameterTypeKind.NumberOrBool,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.GeoPolygonArea=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("geo_polygon_area",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("polygon",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.GeoPolygonCentroid=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("geo_polygon_centroid",Kusto.Language.Symbols.ScalarTypes.GeoShape,[new Kusto.Language.Symbols.Parameter.ctor("polygon",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.GeoPolygonPerimeter=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("geo_polygon_perimeter",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("polygon",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.GeoLineLength=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("geo_line_length",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("lineString",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.GeoLineCentroid=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("geo_line_centroid",Kusto.Language.Symbols.ScalarTypes.GeoShape,[new Kusto.Language.Symbols.Parameter.ctor("lineString",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.GeoLineDensify=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("geo_line_densify",Kusto.Language.Symbols.ScalarTypes.GeoShape,[new Kusto.Language.Symbols.Parameter.ctor("lineString",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag),new Kusto.Language.Symbols.Parameter.ctor("tolerance",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.ctor("preserve_crossing",Kusto.Language.Symbols.ParameterTypeKind.NumberOrBool,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.GeoLineSimplify=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("geo_line_simplify",Kusto.Language.Symbols.ScalarTypes.GeoShape,[new Kusto.Language.Symbols.Parameter.ctor("lineString",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag),new Kusto.Language.Symbols.Parameter.ctor("tolerance",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.GeoPolygonSimplify=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("geo_polygon_simplify",Kusto.Language.Symbols.ScalarTypes.GeoShape,[new Kusto.Language.Symbols.Parameter.ctor("polygon",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag),new Kusto.Language.Symbols.Parameter.ctor("tolerance",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.GeoSimplifyPolygonsArray=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("geo_simplify_polygons_array",Kusto.Language.Symbols.ScalarTypes.GeoShape,[new Kusto.Language.Symbols.Parameter.ctor("polygons",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("tolerance",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.GeoLineValidate=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("__geo_line_validate",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.ctor("lineString",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable().Hide();this.GeoPolygonValidate=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("__geo_polygon_validate",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.ctor("polygon",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable().Hide();this.GeoPointToGeohash=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("geo_point_to_geohash",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.ctor("longitude",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("latitude",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("accuracy",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.GeohashToCentralPoint=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("geo_geohash_to_central_point",Kusto.Language.Symbols.ScalarTypes.GeoShape,[new Kusto.Language.Symbols.Parameter.$ctor2("geohash",Kusto.Language.Symbols.ScalarTypes.String)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.GeohashToPolygon=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("geo_geohash_to_polygon",Kusto.Language.Symbols.ScalarTypes.GeoShape,[new Kusto.Language.Symbols.Parameter.$ctor2("geohash",Kusto.Language.Symbols.ScalarTypes.String)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.GeohashNeighbors=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("geo_geohash_neighbors",Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfString,[new Kusto.Language.Symbols.Parameter.$ctor2("geohash",Kusto.Language.Symbols.ScalarTypes.String)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.GeoPointToS2Cell=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("geo_point_to_s2cell",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.ctor("longitude",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("latitude",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("level",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.GeoS2CellToCentralPoint=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("geo_s2cell_to_central_point",Kusto.Language.Symbols.ScalarTypes.GeoShape,[new Kusto.Language.Symbols.Parameter.$ctor2("s2cell",Kusto.Language.Symbols.ScalarTypes.String)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.GeoS2CellNeighbors=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("geo_s2cell_neighbors",Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfString,[new Kusto.Language.Symbols.Parameter.$ctor2("s2cell",Kusto.Language.Symbols.ScalarTypes.String)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.GeoS2CellToPolygon=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("geo_s2cell_to_polygon",Kusto.Language.Symbols.ScalarTypes.GeoShape,[new Kusto.Language.Symbols.Parameter.$ctor2("s2cell",Kusto.Language.Symbols.ScalarTypes.String)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.GeoPointToH3Cell=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("geo_point_to_h3cell",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.ctor("longitude",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("latitude",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("resolution",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.GeoH3CellToCentralPoint=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("geo_h3cell_to_central_point",Kusto.Language.Symbols.ScalarTypes.GeoShape,[new Kusto.Language.Symbols.Parameter.$ctor2("h3cell",Kusto.Language.Symbols.ScalarTypes.String)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.GeoH3CellToPolygon=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("geo_h3cell_to_polygon",Kusto.Language.Symbols.ScalarTypes.GeoShape,[new Kusto.Language.Symbols.Parameter.$ctor2("h3cell",Kusto.Language.Symbols.ScalarTypes.String)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.GeoH3CellNeighbors=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("geo_h3cell_neighbors",Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfString,[new Kusto.Language.Symbols.Parameter.$ctor2("h3cell",Kusto.Language.Symbols.ScalarTypes.String)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.GeoH3CellChildren=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("geo_h3cell_children",Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfString,[new Kusto.Language.Symbols.Parameter.$ctor2("h3cell",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.ctor("resolution",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.GeoH3CellParent=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("geo_h3cell_parent",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.$ctor2("h3cell",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.ctor("resolution",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.GeoH3CellRings=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("geo_h3cell_rings",Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfArrayOfString,[new Kusto.Language.Symbols.Parameter.$ctor2("h3cell",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.ctor("distance",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.GeoH3CellLevel=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("geo_h3cell_level",Kusto.Language.Symbols.ScalarTypes.Int,[new Kusto.Language.Symbols.Parameter.$ctor2("h3cell",Kusto.Language.Symbols.ScalarTypes.String)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.GeoPolygonToH3Cells=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("geo_polygon_to_h3cells",Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfString,[new Kusto.Language.Symbols.Parameter.ctor("polygon",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag),new Kusto.Language.Symbols.Parameter.ctor("resolution",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.ctor("radius",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this._All=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("all",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("items",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.$ctor3("expression",Kusto.Language.Symbols.ScalarTypes.Bool,Kusto.Language.Symbols.ArgumentKind.Expression_Parameter0_Element)]).WithCustomAvailability(function(context){var gm;return(gm=context.Location.GetFirstAncestor(Kusto.Language.Syntax.GraphMatchOperator))!=null&&gm.WhereClause!=null&&(Bridge.referenceEquals(gm.WhereClause,context.Location)||gm.WhereClause.IsAncestorOf(context.Location))}).Hide();this.Map=new Kusto.Language.Symbols.FunctionSymbol.ctor("map",function(context){if(System.Array.getCount(context.Arguments,Kusto.Language.Syntax.Expression)>1){var expr=System.Array.getItem(context.Arguments,1,Kusto.Language.Syntax.Expression);return Kusto.Language.Symbols.ScalarTypes.GetDynamicArray(expr.ResultType)}return Kusto.Language.Symbols.ScalarTypes.DynamicArray},Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("items",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray),new Kusto.Language.Symbols.Parameter.ctor("expression",Kusto.Language.Symbols.ParameterTypeKind.Scalar,Kusto.Language.Symbols.ArgumentKind.Expression_Parameter0_Element)]).WithCustomAvailability(function(context){var gm;return(gm=context.Location.GetFirstAncestor(Kusto.Language.Syntax.GraphMatchOperator))!=null&&gm.ProjectClause!=null&&(Bridge.referenceEquals(gm.ProjectClause,context.Location)||gm.ProjectClause.IsAncestorOf(context.Location))}).Hide();this.InnerNodes=new Kusto.Language.Symbols.FunctionSymbol.ctor("inner_nodes",function(context){var arg,graphMatch,p,gs;return System.Array.getCount(context.Arguments,Kusto.Language.Syntax.Expression)>0&&(arg=System.Array.getItem(context.Arguments,0,Kusto.Language.Syntax.Expression))!=null&&(graphMatch=arg.GetFirstAncestor(Kusto.Language.Syntax.GraphMatchOperator))!=null&&(p=Bridge.as(graphMatch.Parent,Kusto.Language.Syntax.PipeExpression))!=null&&(gs=Bridge.as(p.Expression.ResultType,Kusto.Language.Symbols.GraphSymbol))!=null?Kusto.Language.Symbols.ScalarTypes.GetDynamicArray(Kusto.Language.Symbols.ScalarTypes.GetDynamicBag$1(gs.NodeShape.Columns)):Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfBag},Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("edge",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).WithCustomAvailability(function(context){var inGM=context.Location.GetFirstAncestor(Kusto.Language.Syntax.GraphMatchOperator)!=null,fc,inAllOrMap=(fc=context.Location.GetFirstAncestor(Kusto.Language.Syntax.FunctionCallExpression,function(fce){return!Bridge.referenceEquals(fce.Name.SimpleName,Kusto.Language.Functions.InnerNodes.Name)}))!=null&&(Bridge.referenceEquals(fc.Name.SimpleName,Kusto.Language.Functions._All.Name)||Bridge.referenceEquals(fc.Name.SimpleName,Kusto.Language.Functions.Map.Name))&&(Bridge.referenceEquals(context.Location,fc.ArgumentList)||fc.ArgumentList.Expressions.Count>0&&fc.ArgumentList.Expressions.getItem$1(0).Element$1.IsAncestorOf(context.Location));return inGM&&inAllOrMap}).Hide();this.CurrentClusterEndpoint=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("current_cluster_endpoint",Kusto.Language.Symbols.ScalarTypes.String);this.CurrentDatabase=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("current_database",Kusto.Language.Symbols.ScalarTypes.String);this.CurrentPrincipal=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("current_principal",Kusto.Language.Symbols.ScalarTypes.String);this.CurrentPrincipalDetailsResult=Kusto.Language.Symbols.ScalarTypes.GetDynamicBag([new Kusto.Language.Symbols.ColumnSymbol("UserPrincipalName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("IdentityProvider",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Authority",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Mfa",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Type",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("DisplayName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("ObjectId",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("FQN",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Notes",Kusto.Language.Symbols.ScalarTypes.String)]);this.CurrentPrincipalDetails=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("current_principal_details",Kusto.Language.Functions.CurrentPrincipalDetailsResult).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.CurrentPrincipalIsMemberOf=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("current_principal_is_member_of",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("group",Kusto.Language.Symbols.ParameterTypeKind.StringOrArray,0,void 0,void 0,!1,void 0,1,64,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.ExtentId=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("extent_id",Kusto.Language.Symbols.ScalarTypes.Guid).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.ExtentId2=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("extentid",Kusto.Language.Symbols.ScalarTypes.Guid).Obsolete("extent_id");this.ExtentTags=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("extent_tags",Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfString).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.CurrentNodeId=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("current_node_id",Kusto.Language.Symbols.ScalarTypes.String).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).Hide();this.IngestionTime=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("ingestion_time",Kusto.Language.Symbols.ScalarTypes.DateTime).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixOnly).WithResultNamePrefix("$IngestionTime");this.CursorAfter=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("cursor_after",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("cursor",Kusto.Language.Symbols.ScalarTypes.String)]);this.CursorBeforeOrAt=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("cursor_before_or_at",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("cursor",Kusto.Language.Symbols.ScalarTypes.String)]);this.CursorCurrent=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("cursor_current",Kusto.Language.Symbols.ScalarTypes.String);this.CursorCurrent2=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("current_cursor",Kusto.Language.Symbols.ScalarTypes.String).Obsolete("cursor_current");this.FormatBytes=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("format_bytes",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.ctor("size",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("precision",Kusto.Language.Symbols.ParameterTypeKind.Number,Kusto.Language.Symbols.ArgumentKind.Constant,void 0,void 0,!1,void 0,0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.$ctor3("format",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Constant,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.RowNumber=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("row_number",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.$ctor3("startingIndex",Kusto.Language.Symbols.ScalarTypes.Long,0,void 0,void 0,!1,void 0,0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.$ctor3("restart",Kusto.Language.Symbols.ScalarTypes.Bool,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.RowCumSum=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("row_cumsum",Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("term",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.$ctor3("restart",Kusto.Language.Symbols.ScalarTypes.Bool,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.RowRank=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("row_rank",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("column",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic),new Kusto.Language.Symbols.Parameter.$ctor3("dense",Kusto.Language.Symbols.ScalarTypes.Bool,Kusto.Language.Symbols.ArgumentKind.Constant,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).Obsolete("row_rank_dense");this.RowRankMin=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("row_rank_min",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("term",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic),new Kusto.Language.Symbols.Parameter.$ctor3("restart",Kusto.Language.Symbols.ScalarTypes.Bool,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.RowRankDense=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("row_rank_dense",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("term",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic),new Kusto.Language.Symbols.Parameter.$ctor3("restart",Kusto.Language.Symbols.ScalarTypes.Bool,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.RowWindowSession=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("row_window_session",Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.$ctor2("expr",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor2("maxDistanceFromFirst",Kusto.Language.Symbols.ScalarTypes.TimeSpan),new Kusto.Language.Symbols.Parameter.$ctor2("maxDistanceBetweenNeighbors",Kusto.Language.Symbols.ScalarTypes.TimeSpan),new Kusto.Language.Symbols.Parameter.$ctor3("restart",Kusto.Language.Symbols.ScalarTypes.Bool,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.Prev=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("prev",Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("column",Kusto.Language.Symbols.ParameterTypeKind.Scalar,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.$ctor3("offset",Kusto.Language.Symbols.ScalarTypes.Long,0,void 0,void 0,!1,void 0,0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.ctor("default_value",Kusto.Language.Symbols.ParameterTypeKind.Scalar,Kusto.Language.Symbols.ArgumentKind.Constant,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.Next=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("next",Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("column",Kusto.Language.Symbols.ParameterTypeKind.Scalar,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.$ctor3("offset",Kusto.Language.Symbols.ScalarTypes.Long,0,void 0,void 0,!1,void 0,0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.ctor("default_value",Kusto.Language.Symbols.ParameterTypeKind.Scalar,Kusto.Language.Symbols.ArgumentKind.Constant,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.RowstoreOrdinalRange=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("rowstore_ordinal_range",Kusto.Language.Symbols.ScalarTypes.Dynamic).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).Hide();this.EstimateDataSize=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("estimate_data_size",[new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("column",Kusto.Language.Symbols.ParameterTypeKind.Scalar,Kusto.Language.Symbols.ArgumentKind.Column,void 0,void 0,!1,void 0,1,Kusto.Language.FunctionHelpers.MaxRepeat,void 0,void 0)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("column",Kusto.Language.Symbols.ParameterTypeKind.Scalar,Kusto.Language.Symbols.ArgumentKind.StarOnly)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.NewGuid=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("new_guid",Kusto.Language.Symbols.ScalarTypes.Guid).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.HasIpv4=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("has_ipv4",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("source",Kusto.Language.Symbols.ParameterTypeKind.StringOrDynamic),new Kusto.Language.Symbols.Parameter.$ctor2("ip",Kusto.Language.Symbols.ScalarTypes.String)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.HasIpv4Prefix=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("has_ipv4_prefix",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("source",Kusto.Language.Symbols.ParameterTypeKind.StringOrDynamic),new Kusto.Language.Symbols.Parameter.$ctor2("ip_prefix",Kusto.Language.Symbols.ScalarTypes.String)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.HasAnyIpv4=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("has_any_ipv4",[new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("source",Kusto.Language.Symbols.ParameterTypeKind.StringOrDynamic),new Kusto.Language.Symbols.Parameter.$ctor3("ips",Kusto.Language.Symbols.ScalarTypes.String,0,void 0,void 0,!1,void 0,1,Kusto.Language.FunctionHelpers.MaxRepeat,void 0,void 0)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("source",Kusto.Language.Symbols.ParameterTypeKind.StringOrDynamic),new Kusto.Language.Symbols.Parameter.ctor("ips",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.HasAnyIpv4Prefix=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("has_any_ipv4_prefix",[new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("source",Kusto.Language.Symbols.ParameterTypeKind.StringOrDynamic),new Kusto.Language.Symbols.Parameter.$ctor3("ip_prefixes",Kusto.Language.Symbols.ScalarTypes.String,0,void 0,void 0,!1,void 0,1,Kusto.Language.FunctionHelpers.MaxRepeat,void 0,void 0)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("source",Kusto.Language.Symbols.ParameterTypeKind.StringOrDynamic),new Kusto.Language.Symbols.Parameter.ctor("ip_prefixes",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.Invoke=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("__invoke",Kusto.Language.Symbols.ReturnTypeKind.Parameter1Literal,[new Kusto.Language.Symbols.Parameter.$ctor3("name",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Literal),new Kusto.Language.Symbols.Parameter.$ctor3("type",Kusto.Language.Symbols.ScalarTypes.Type,Kusto.Language.Symbols.ArgumentKind.Literal),new Kusto.Language.Symbols.Parameter.ctor("arg",Kusto.Language.Symbols.ParameterTypeKind.Any,0,void 0,void 0,!1,void 0,0,Kusto.Language.FunctionHelpers.MaxRepeat,void 0,void 0)]).ConstantFoldable().Hide();this.Cast=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("__cast",Kusto.Language.Symbols.ReturnTypeKind.Parameter0Literal,[new Kusto.Language.Symbols.Parameter.$ctor3("type",Kusto.Language.Symbols.ScalarTypes.Type,Kusto.Language.Symbols.ArgumentKind.Literal),new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).ConstantFoldable().Hide();this.IpGeoLocation=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("geo_info_from_ip_address",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("ip",Kusto.Language.Symbols.ScalarTypes.String)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.All=System.Array.init([Kusto.Language.Functions.Cluster,Kusto.Language.Functions.Database,Kusto.Language.Functions.Table,Kusto.Language.Functions.ExternalTable,Kusto.Language.Functions.MaterializedView,Kusto.Language.Functions.StoredQueryResult,Kusto.Language.Functions.Strcat,Kusto.Language.Functions.StrcatArray,Kusto.Language.Functions.ArrayStrcat,Kusto.Language.Functions.StrcatDelim,Kusto.Language.Functions.Strcmp,Kusto.Language.Functions.Strrep,Kusto.Language.Functions.Strlen,Kusto.Language.Functions.StringSize,Kusto.Language.Functions.ToUpper,Kusto.Language.Functions.ToLower,Kusto.Language.Functions.ToUtf8_Deprecated,Kusto.Language.Functions.UnicodeCodepointsFromString,Kusto.Language.Functions.Substring,Kusto.Language.Functions.RegexQuote,Kusto.Language.Functions.IndexOf,Kusto.Language.Functions.IndexOfRegex,Kusto.Language.Functions.HasAnyIndex,Kusto.Language.Functions.Reverse,Kusto.Language.Functions.Split,Kusto.Language.Functions.ParseCommandLine,Kusto.Language.Functions.Extract,Kusto.Language.Functions.ExtractAll_Deprecated,Kusto.Language.Functions.ExtractAll,Kusto.Language.Functions.ExtractJson_Deprecated,Kusto.Language.Functions.ExtractJson,Kusto.Language.Functions.Replace,Kusto.Language.Functions.ReplaceRegex,Kusto.Language.Functions.ReplaceString,Kusto.Language.Functions.ReplaceStrings,Kusto.Language.Functions.TrimStart,Kusto.Language.Functions.TrimEnd,Kusto.Language.Functions.Trim,Kusto.Language.Functions.CountOf,Kusto.Language.Functions.Translate,Kusto.Language.Functions.MakeString_Deprecated,Kusto.Language.Functions.UnicodeCodepointsToString,Kusto.Language.Functions.DatetimeLocalToUtc,Kusto.Language.Functions.DatetimeUtcToLocal,Kusto.Language.Functions.DateTimeListTimezones,Kusto.Language.Functions.ToString,Kusto.Language.Functions.ToHex,Kusto.Language.Functions.ToDynamic_,Kusto.Language.Functions.ToObject_Deprecated,Kusto.Language.Functions.ToLong,Kusto.Language.Functions.ToInt,Kusto.Language.Functions.ToReal,Kusto.Language.Functions.ToDouble,Kusto.Language.Functions.ToDateTime,Kusto.Language.Functions.ToTimespan,Kusto.Language.Functions.ToTime,Kusto.Language.Functions.ToBool,Kusto.Language.Functions.ToBoolean,Kusto.Language.Functions.ToDecimal,Kusto.Language.Functions.ToGuid,Kusto.Language.Functions.GetType,Kusto.Language.Functions.UrlEncode,Kusto.Language.Functions.UrlEncode_Component,Kusto.Language.Functions.UrlDecode,Kusto.Language.Functions.Base64EncodeString,Kusto.Language.Functions.Base64EncodeToString,Kusto.Language.Functions.Base64DecodeToArray,Kusto.Language.Functions.Base64EncodeFromArray,Kusto.Language.Functions.Base64DecodeString,Kusto.Language.Functions.Base64DecodeToString,Kusto.Language.Functions.Base64DecodeToGuid,Kusto.Language.Functions.Base64EncodeFromGuid,Kusto.Language.Functions.ZlibDecompressString,Kusto.Language.Functions.ZlibCompressString,Kusto.Language.Functions.GzipDecompressString,Kusto.Language.Functions.GzipCompressString,Kusto.Language.Functions.Lz4CompressDynamicArray,Kusto.Language.Functions.ParseCsv,Kusto.Language.Functions.ParseJson_Deprecated,Kusto.Language.Functions.ParseJson,Kusto.Language.Functions.ParseXml,Kusto.Language.Functions.ParseUrl_Deprecated,Kusto.Language.Functions.ParseUrl,Kusto.Language.Functions.ParseUrlQuery_Deprecated,Kusto.Language.Functions.ParseUrlQuery,Kusto.Language.Functions.ParseIPV4,Kusto.Language.Functions.ParseIPV4Mask,Kusto.Language.Functions.ParseIPV6,Kusto.Language.Functions.ParseIPV6Mask,Kusto.Language.Functions.ParsePath,Kusto.Language.Functions.ParseUserAgent,Kusto.Language.Functions.ParseVersion,Kusto.Language.Functions.FormatDatetime,Kusto.Language.Functions.FormatTimespan,Kusto.Language.Functions.MakeDatetime,Kusto.Language.Functions.MakeTimespan,Kusto.Language.Functions.DatetimeAdd,Kusto.Language.Functions.DatetimeDiff,Kusto.Language.Functions.DayOfWeek,Kusto.Language.Functions.DayOfMonth,Kusto.Language.Functions.DayOfYear,Kusto.Language.Functions.HourOfDay,Kusto.Language.Functions.WeekOfYear,Kusto.Language.Functions.WeekOfYearISO,Kusto.Language.Functions.MonthOfYear,Kusto.Language.Functions.StartOfDay,Kusto.Language.Functions.StartOfWeek,Kusto.Language.Functions.StartOfMonth,Kusto.Language.Functions.StartOfYear,Kusto.Language.Functions.EndOfDay,Kusto.Language.Functions.EndOfWeek,Kusto.Language.Functions.EndOfMonth,Kusto.Language.Functions.EndOfYear,Kusto.Language.Functions.GetYear,Kusto.Language.Functions.GetMonth,Kusto.Language.Functions.DatePart,Kusto.Language.Functions.DatetimePart,Kusto.Language.Functions.Now,Kusto.Language.Functions.Ago,Kusto.Language.Functions.UnixTimeSecondsToDateTime,Kusto.Language.Functions.UnixTimeMillisecondsToDateTime,Kusto.Language.Functions.UnixTimeMicrosecondsToDateTime,Kusto.Language.Functions.UnixTimeNanosecondsToDateTime,Kusto.Language.Functions.HashCrc32,Kusto.Language.Functions.HashDjb2,Kusto.Language.Functions.Hash,Kusto.Language.Functions.HashSha256,Kusto.Language.Functions.HashMd5,Kusto.Language.Functions.HashSha1,Kusto.Language.Functions.HashXXH64,Kusto.Language.Functions.InternalHashXXH64,Kusto.Language.Functions.HashCombine,Kusto.Language.Functions.HashMany,Kusto.Language.Functions.HashManyCrc32,Kusto.Language.Functions.Iif,Kusto.Language.Functions.Iff,Kusto.Language.Functions.Case,Kusto.Language.Functions.Assert,Kusto.Language.Functions.Bin,Kusto.Language.Functions.Floor,Kusto.Language.Functions.BinAt,Kusto.Language.Functions.BinAuto,Kusto.Language.Functions.Not,Kusto.Language.Functions.NotNull_Deprecated,Kusto.Language.Functions.IsNotNull,Kusto.Language.Functions.IsNull,Kusto.Language.Functions.NotEmpty_Deprecated,Kusto.Language.Functions.IsColumnExists,Kusto.Language.Functions.IsAscii,Kusto.Language.Functions.IsUtf8,Kusto.Language.Functions.IsNotEmpty,Kusto.Language.Functions.IsEmpty,Kusto.Language.Functions.ColumnIfExists_Deprecated,Kusto.Language.Functions.ColumnIfExists,Kusto.Language.Functions.Around,Kusto.Language.Functions.BinaryAnd,Kusto.Language.Functions.BinaryOr,Kusto.Language.Functions.BinaryXor,Kusto.Language.Functions.BinaryNot,Kusto.Language.Functions.BinaryShiftRight,Kusto.Language.Functions.BinaryShiftLeft,Kusto.Language.Functions.BitsetCountOnes,Kusto.Language.Functions.TreePath,Kusto.Language.Functions.Repeat,Kusto.Language.Functions.Arraylength_Deprecated,Kusto.Language.Functions.ArrayLength,Kusto.Language.Functions.Range,Kusto.Language.Functions.ArrayConcat,Kusto.Language.Functions.ArrayIif,Kusto.Language.Functions.ArrayIff,Kusto.Language.Functions.ArrayIndexOf,Kusto.Language.Functions.ArraySlice,Kusto.Language.Functions.ArraySplit,Kusto.Language.Functions.ArrayShiftLeft,Kusto.Language.Functions.ArrayShiftRight,Kusto.Language.Functions.ArrayReverse,Kusto.Language.Functions.ArrayRotateLeft,Kusto.Language.Functions.ArrayRotateRight,Kusto.Language.Functions.ArraySortAsc,Kusto.Language.Functions.ArraySortDesc,Kusto.Language.Functions.BagKeys,Kusto.Language.Functions.Zip,Kusto.Language.Functions.Pack,Kusto.Language.Functions.PackDictionary,Kusto.Language.Functions.BagPack,Kusto.Language.Functions.BagPackColumns,Kusto.Language.Functions.PackAll,Kusto.Language.Functions.PackArray,Kusto.Language.Functions.SetHasElement,Kusto.Language.Functions.SetUnion,Kusto.Language.Functions.SetIntersect,Kusto.Language.Functions.SetDifference,Kusto.Language.Functions.SetEquals,Kusto.Language.Functions.BagMerge,Kusto.Language.Functions.DynamicToJson,Kusto.Language.Functions.BagRemoveKeys,Kusto.Language.Functions.BagHasKey,Kusto.Language.Functions.JaccardIndex,Kusto.Language.Functions.BagSetKey,Kusto.Language.Functions.BagZip,Kusto.Language.Functions.PunycodeDecode,Kusto.Language.Functions.PunycodeEncode,Kusto.Language.Functions.PunycodeDomainDecode,Kusto.Language.Functions.PunycodeDomainEncode,Kusto.Language.Functions.PercentileTDigest,Kusto.Language.Functions.PercentileArrayTDigest,Kusto.Language.Functions.PercentRankTDigest,Kusto.Language.Functions.RankTDigest,Kusto.Language.Functions.TdigestIsValid,Kusto.Language.Functions.HllIsValid,Kusto.Language.Functions.TDigestMerge,Kusto.Language.Functions.MergeTDigest,Kusto.Language.Functions.HllMerge,Kusto.Language.Functions.DCountHll,Kusto.Language.Functions.HllNormalize,Kusto.Language.Functions.SeriesFir,Kusto.Language.Functions.SeriesStats,Kusto.Language.Functions.SeriesStatsDynamic,Kusto.Language.Functions.SeriesFft,Kusto.Language.Functions.SeriesIfft,Kusto.Language.Functions.SeriesFitLine,Kusto.Language.Functions.SeriesFitLineDynamic,Kusto.Language.Functions.SeriesFit2Lines,Kusto.Language.Functions.SeriesFit2LinesDynamic,Kusto.Language.Functions.SeriesOutliers,Kusto.Language.Functions.SeriesIIR,Kusto.Language.Functions.SeriesPeriodsDetect,Kusto.Language.Functions.SeriesPeriodsValidate,Kusto.Language.Functions.SeriesFillBackwards,Kusto.Language.Functions.SeriesFillForward,Kusto.Language.Functions.SeriesFillConst,Kusto.Language.Functions.SeriesFillLinear,Kusto.Language.Functions.SeriesFitPoly,Kusto.Language.Functions.SeriesAdd,Kusto.Language.Functions.SeriesSubtract,Kusto.Language.Functions.SeriesMultiply,Kusto.Language.Functions.SeriesDivide,Kusto.Language.Functions.SeriesPow,Kusto.Language.Functions.SeriesGreater,Kusto.Language.Functions.SeriesGreaterEquals,Kusto.Language.Functions.SeriesLess,Kusto.Language.Functions.SeriesLessEquals,Kusto.Language.Functions.SeriesEquals,Kusto.Language.Functions.SeriesNotEquals,Kusto.Language.Functions.SeriesExp,Kusto.Language.Functions.SeriesSign,Kusto.Language.Functions.SeriesAbs,Kusto.Language.Functions.SeriesSin,Kusto.Language.Functions.SeriesAsin,Kusto.Language.Functions.SeriesCos,Kusto.Language.Functions.SeriesAcos,Kusto.Language.Functions.SeriesTan,Kusto.Language.Functions.SeriesAtan,Kusto.Language.Functions.SeriesMagnitude,Kusto.Language.Functions.SeriesSum,Kusto.Language.Functions.SeriesLog,Kusto.Language.Functions.SeriesFloor,Kusto.Language.Functions.SeriesCeiling,Kusto.Language.Functions.ArraySum,Kusto.Language.Functions.SeriesSeasonal,Kusto.Language.Functions.SeriesDecompose,Kusto.Language.Functions.SeriesDecomposeForecast,Kusto.Language.Functions.SeriesDecomposeAnomalies,Kusto.Language.Functions.SeriesPearsonCorrelation,Kusto.Language.Functions.SeriesDotProduct,Kusto.Language.Functions.SeriesCosineSimilarity,Kusto.Language.Functions.Round,Kusto.Language.Functions.Ceiling,Kusto.Language.Functions.Pow,Kusto.Language.Functions.Sqrt,Kusto.Language.Functions.Log,Kusto.Language.Functions.Log2,Kusto.Language.Functions.Log10,Kusto.Language.Functions.Exp,Kusto.Language.Functions.Exp2,Kusto.Language.Functions.Exp10,Kusto.Language.Functions.PI,Kusto.Language.Functions.Cos,Kusto.Language.Functions.Sin,Kusto.Language.Functions.Tan,Kusto.Language.Functions.Acos,Kusto.Language.Functions.Asin,Kusto.Language.Functions.Atan,Kusto.Language.Functions.Atan2,Kusto.Language.Functions.Abs,Kusto.Language.Functions.Cot,Kusto.Language.Functions.Degrees,Kusto.Language.Functions.Radians,Kusto.Language.Functions.Sign,Kusto.Language.Functions.Rand,Kusto.Language.Functions.BetaCdf,Kusto.Language.Functions.BetaInv,Kusto.Language.Functions.BetaPdf,Kusto.Language.Functions.Gamma,Kusto.Language.Functions.LogGamma,Kusto.Language.Functions.Erf,Kusto.Language.Functions.Erfc,Kusto.Language.Functions.IsNan,Kusto.Language.Functions.IsInf,Kusto.Language.Functions.IsFinite,Kusto.Language.Functions.Coalesce,Kusto.Language.Functions.MaxOf,Kusto.Language.Functions.MinOf,Kusto.Language.Functions.WelchTest,Kusto.Language.Functions.GeoAngle,Kusto.Language.Functions.GeoAzimuth,Kusto.Language.Functions.GeoDistance2Points,Kusto.Language.Functions.GeoDistancePointToLine,Kusto.Language.Functions.GeoDistancePointToPolygon,Kusto.Language.Functions.GeoPointInCircle,Kusto.Language.Functions.GeoPointInPolygon,Kusto.Language.Functions.GeoIntersects2Lines,Kusto.Language.Functions.GeoIntersectsLineWithPolygon,Kusto.Language.Functions.GeoIntersects2Polygons,Kusto.Language.Functions.GeoIntersection2Lines,Kusto.Language.Functions.GeoIntersectionLineWithPolygon,Kusto.Language.Functions.GeoIntersection2Polygons,Kusto.Language.Functions.GeoPolygonsUnion,Kusto.Language.Functions.GeoSimplifyPolygonsArray,Kusto.Language.Functions.GeoLinesUnion,Kusto.Language.Functions.GeoPolygonToH3Cells,Kusto.Language.Functions.GeoPolygonToS2Cells,Kusto.Language.Functions.GeoPolygonS2CellCoveringLevel,Kusto.Language.Functions.GeoPolygonDensify,Kusto.Language.Functions.GeoPolygonArea,Kusto.Language.Functions.GeoPolygonBuffer,Kusto.Language.Functions.GeoPolygonCentroid,Kusto.Language.Functions.GeoPolygonValidate,Kusto.Language.Functions.GeoPolygonPerimeter,Kusto.Language.Functions.GeoPolygonSimplify,Kusto.Language.Functions.GeoLineS2CellCoveringLevel,Kusto.Language.Functions.GeoLineLength,Kusto.Language.Functions.GeoLineBuffer,Kusto.Language.Functions.GeoLineCentroid,Kusto.Language.Functions.GeoLineDensify,Kusto.Language.Functions.GeoLineSimplify,Kusto.Language.Functions.GeoLineValidate,Kusto.Language.Functions.GeoLineToS2Cells,Kusto.Language.Functions.GeoLengthToS2CellLevel,Kusto.Language.Functions.GeoPointToGeohash,Kusto.Language.Functions.GeohashToCentralPoint,Kusto.Language.Functions.GeohashToPolygon,Kusto.Language.Functions.GeohashNeighbors,Kusto.Language.Functions.GeoPointBuffer,Kusto.Language.Functions.GeoPointToS2Cell,Kusto.Language.Functions.GeoS2CellToCentralPoint,Kusto.Language.Functions.GeoS2CellToPolygon,Kusto.Language.Functions.GeoS2CellNeighbors,Kusto.Language.Functions.GeoPointToH3Cell,Kusto.Language.Functions.GeoH3CellToCentralPoint,Kusto.Language.Functions.GeoH3CellToPolygon,Kusto.Language.Functions.GeoH3CellNeighbors,Kusto.Language.Functions.GeoH3CellChildren,Kusto.Language.Functions.GeoH3CellParent,Kusto.Language.Functions.GeoH3CellRings,Kusto.Language.Functions.GeoH3CellLevel,Kusto.Language.Functions._All,Kusto.Language.Functions.Map,Kusto.Language.Functions.InnerNodes,Kusto.Language.Functions.Ipv4Compare,Kusto.Language.Functions.Ipv4IsMatch,Kusto.Language.Functions.Ipv6Compare,Kusto.Language.Functions.Ipv4IsPrivate,Kusto.Language.Functions.Ipv6IsMatch,Kusto.Language.Functions.Ipv6IsInRange,Kusto.Language.Functions.Ipv6IsInAnyRange,Kusto.Language.Functions.Ipv4IsInRange,Kusto.Language.Functions.Ipv4IsInAnyRange,Kusto.Language.Functions.Ipv4NetmaskSuffix,Kusto.Language.Functions.Ipv6LookupRanges,Kusto.Language.Functions.FormatIPV4,Kusto.Language.Functions.FormatIPV4Mask,Kusto.Language.Functions.FormatBytes,Kusto.Language.Functions.ConvertAngle,Kusto.Language.Functions.ConvertEnergy,Kusto.Language.Functions.ConvertForce,Kusto.Language.Functions.ConvertLength,Kusto.Language.Functions.ConvertMass,Kusto.Language.Functions.ConvertSpeed,Kusto.Language.Functions.ConvertTemperature,Kusto.Language.Functions.ConvertVolume,Kusto.Language.Functions.CurrentClusterEndpoint,Kusto.Language.Functions.CurrentDatabase,Kusto.Language.Functions.CurrentPrincipal,Kusto.Language.Functions.CurrentPrincipalDetails,Kusto.Language.Functions.CurrentPrincipalIsMemberOf,Kusto.Language.Functions.ExtentId,Kusto.Language.Functions.ExtentId2,Kusto.Language.Functions.ExtentTags,Kusto.Language.Functions.CurrentNodeId,Kusto.Language.Functions.IngestionTime,Kusto.Language.Functions.CursorAfter,Kusto.Language.Functions.CursorBeforeOrAt,Kusto.Language.Functions.CursorCurrent,Kusto.Language.Functions.CursorCurrent2,Kusto.Language.Functions.HasIpv4,Kusto.Language.Functions.HasIpv4Prefix,Kusto.Language.Functions.HasAnyIpv4,Kusto.Language.Functions.HasAnyIpv4Prefix,Kusto.Language.Functions.Ipv4RangeToCidrList,Kusto.Language.Functions.RowNumber,Kusto.Language.Functions.RowCumSum,Kusto.Language.Functions.RowRank,Kusto.Language.Functions.RowRankDense,Kusto.Language.Functions.RowRankMin,Kusto.Language.Functions.RowWindowSession,Kusto.Language.Functions.Prev,Kusto.Language.Functions.Next,Kusto.Language.Functions.RowstoreOrdinalRange,Kusto.Language.Functions.EstimateDataSize,Kusto.Language.Functions.NewGuid,Kusto.Language.Functions.Invoke,Kusto.Language.Functions.Cast,Kusto.Language.Functions.IpGeoLocation],Kusto.Language.Symbols.FunctionSymbol)}},methods:{ValidateArgumentsForArraySort:function(signature,$arguments,argumentParameters){for(var i=0;i<System.Array.getCount($arguments,Kusto.Language.Syntax.Expression);i=i+1|0)i<(System.Array.getCount($arguments,Kusto.Language.Syntax.Expression)-1|0)||!Kusto.Language.FunctionHelpers.IsBoolean(System.Array.getItem($arguments,i,Kusto.Language.Syntax.Expression))?argumentParameters.add(Kusto.Language.Functions.m_ArraySort_ArraysArg):argumentParameters.add(Kusto.Language.Functions.m_ArraySort_NullsLastArg)},GetArraySortResult:function(context){for(var result=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor),i=0;i<System.Array.getCount(context.Arguments,Kusto.Language.Syntax.Expression)&&Kusto.Language.Symbols.TypeFacts.IsDynamicArray(System.Array.getItem(context.Arguments,i,Kusto.Language.Syntax.Expression).ResultType);i=i+1|0){var argument=System.Array.getItem(context.Arguments,i,Kusto.Language.Syntax.Expression),argumentExpressionName=context.GetResultName(argument),resultColumnName=System.String.isNullOrEmpty(argumentExpressionName)?System.String.format("array{0}_sorted",[Bridge.box(i,System.Int32)]):System.String.format("{0}_sorted",[argumentExpressionName]),resultColumn=new Kusto.Language.Symbols.ColumnSymbol(resultColumnName,argument.ResultType,void 0,void 0,argument,void 0);result.add(resultColumn)}return new Kusto.Language.Symbols.TupleSymbol.$ctor1(result)},GetBagPackReturnType:function(context){for(var name,type,keys=context.GetArguments$1("key"),values=context.GetArguments$1("value"),columns=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).$ctor2)(System.Array.getCount(keys,Kusto.Language.Syntax.Expression)),i=0;i<System.Array.getCount(keys,Kusto.Language.Syntax.Expression);i=i+1|0)(name=Bridge.as(System.Array.getItem(keys,i,Kusto.Language.Syntax.Expression).ConstantValue,System.String))!=null&&(type=(i<System.Array.getCount(values,Kusto.Language.Syntax.Expression)?System.Array.getItem(values,i,Kusto.Language.Syntax.Expression).ResultType:null)||Kusto.Language.Symbols.ScalarTypes.Unknown,columns.add(new Kusto.Language.Symbols.ColumnSymbol(name,type)));return Kusto.Language.Symbols.ScalarTypes.GetDynamicBag$1(columns)},GetBagPackColumnsReturnType:function(context){for(var col,values=context.GetArguments$1("value"),columns=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).$ctor2)(System.Array.getCount(values,Kusto.Language.Syntax.Expression)),i=0;i<System.Array.getCount(values,Kusto.Language.Syntax.Expression);i=i+1|0)(col=Bridge.as(System.Array.getItem(values,i,Kusto.Language.Syntax.Expression).ReferencedSymbol,Kusto.Language.Symbols.ColumnSymbol))!=null&&columns.add(col);return Kusto.Language.Symbols.ScalarTypes.GetDynamicBag$1(columns)},GetSetType:function(context){var sets=context.GetArguments$1("set"),commonType=Kusto.Language.Symbols.TypeFacts.GetCommonResultType$2(sets);return Bridge.is(commonType,Kusto.Language.Symbols.DynamicArraySymbol)?commonType:Kusto.Language.Symbols.ScalarTypes.DynamicArray},IsJsonPath:function(key){return System.Linq.Enumerable.from(key,System.Char).contains(36)||System.Linq.Enumerable.from(key,System.Char).contains(46)||System.Linq.Enumerable.from(key,System.Char).contains(91)||System.Linq.Enumerable.from(key,System.Char).contains(93)},SeriesDecomposeResult:function(context){var source=context.GetArgument$1("series");return Kusto.Language.FunctionHelpers.MakePrefixedTuple(context,"series",new Kusto.Language.Symbols.TupleSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("baseline",Kusto.Language.Symbols.ScalarTypes.DynamicArray,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("seasonal",Kusto.Language.Symbols.ScalarTypes.DynamicArray,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("trend",Kusto.Language.Symbols.ScalarTypes.DynamicArray,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("residual",Kusto.Language.Symbols.ScalarTypes.DynamicArray,void 0,void 0,source,void 0)]))},SeriesDecomposeAnomaliesResult:function(context){var source=context.GetArgument$1("series");return Kusto.Language.FunctionHelpers.MakePrefixedTuple(context,"series",new Kusto.Language.Symbols.TupleSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("ad_flag",Kusto.Language.Symbols.ScalarTypes.DynamicArray,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("ad_score",Kusto.Language.Symbols.ScalarTypes.DynamicArray,void 0,void 0,source,void 0),new Kusto.Language.Symbols.ColumnSymbol("baseline",Kusto.Language.Symbols.ScalarTypes.DynamicArray,void 0,void 0,source,void 0)]))}}}});Bridge.define("Kusto.Language.GlobalState",{statics:{fields:{s_default:null},props:{Default:{get:function(){if(Kusto.Language.GlobalState.s_default==null){var globals=new Kusto.Language.GlobalState(Kusto.Language.KustoFacts.KustoWindowsNet,Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Symbols.ClusterSymbol).Instance,Kusto.Language.Symbols.ClusterSymbol.Unknown,Kusto.Language.Symbols.DatabaseSymbol.Unknown,Kusto.Language.Functions.All,Kusto.Language.Aggregates.All,Kusto.Language.PlugIns.All,Kusto.Language.Operators.All,Kusto.Language.ServerKinds.Engine,Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Symbols.Symbol).Instance,Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Symbols.Symbol).Instance,Kusto.Language.Options.All,Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.GlobalState.PropertyAndValue).Instance,null,null,null,null,null,null,null,null,null,null,null,null,null,null);Kusto.Language.Utils.Interlocked.CompareExchange(Kusto.Language.GlobalState,Bridge.ref(Kusto.Language.GlobalState,"s_default"),globals,null)}return Kusto.Language.GlobalState.s_default}}},methods:{AddOrReplace:function(T,list,newElement){var existingElement=System.Linq.Enumerable.from(list,T).firstOrDefault(function(s){return Bridge.referenceEquals(s.Name,newElement.Name)},function(){return Bridge.getDefaultValue(T)}),newList,index;return Bridge.referenceEquals(existingElement,newElement)?list:(newList=new(System.Collections.Generic.List$1(T).$ctor1)(list),existingElement!=null?(index=newList.indexOf(existingElement),index>=0?newList.setItem(index,newElement):newList.add(newElement)):newList.add(newElement),newList)},GetCommands:function(serverKind){switch(serverKind){case Kusto.Language.ServerKinds.Engine:return Kusto.Language.EngineCommands.All;case Kusto.Language.ServerKinds.DataManager:return Kusto.Language.DataManagerCommands.All;case Kusto.Language.ServerKinds.ClusterManager:return Kusto.Language.ClusterManagerCommands.All;case Kusto.Language.ServerKinds.AriaBridge:return Kusto.Language.AriaBridgeCommands.All;default:return Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Symbols.CommandSymbol).Instance}},Optional:function(T,value){return new(Kusto.Language.Utils.Optional$1(T).$ctor1)(value)}}},fields:{aggregatesMap:null,functionsMap:null,pluginMap:null,operatorMap:null,commandMap:null,optionMap:null,ambientSymbolsMap:null,clientSymbolsMap:null,propertyMap:null,reverseClusterMap:null,reverseDatabaseMap:null,reverseTableMap:null,ambientParameters:null},props:{Clusters:null,Cluster:null,Database:null,Domain:null,Functions:null,Aggregates:null,PlugIns:null,Operators:null,ServerKind:null,AmbientSymbols:null,ClientSymbols:null,Options:null,Properties:null,Cache:null,ParseOptions:null,Parameters:{get:function(){if(this.ambientParameters==null){var parameters=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Symbols.ParameterSymbol,System.Linq.Enumerable.from(this.AmbientSymbols).ofType(Kusto.Language.Symbols.ParameterSymbol));Kusto.Language.Utils.Interlocked.CompareExchange(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.ParameterSymbol),Bridge.ref(this,"ambientParameters"),parameters,null)}return this.ambientParameters}}},ctors:{ctor:function(domain,clusters,cluster,database,functions,aggregates,plugins,operators,serverKind,ambientSymbols,clientSymbols,options,properties,cache,parseOptions,reverseClusterMap,reverseDatabaseMap,reverseTableMap,functionsMap,aggregatesMap,pluginMap,operatorMap,commandMap,ambientSymbolsMap,clientSymbolsMap,optionMap,propertyMap){var $t,$t1;this.$initialize();this.Domain=($t=domain,$t!=null?$t:Kusto.Language.KustoFacts.KustoWindowsNet);this.Clusters=clusters||Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Symbols.ClusterSymbol).Instance;this.Cluster=cluster||Kusto.Language.Symbols.ClusterSymbol.Unknown;this.Database=database||Kusto.Language.Symbols.DatabaseSymbol.Unknown;this.Functions=functions||Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol).Instance;this.Aggregates=aggregates||Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol).Instance;this.PlugIns=plugins||Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol).Instance;this.Operators=operators||Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Symbols.OperatorSymbol).Instance;this.ServerKind=($t1=serverKind,$t1!=null?$t1:Kusto.Language.ServerKinds.Engine);this.AmbientSymbols=ambientSymbols||Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Symbols.Symbol).Instance;this.ClientSymbols=clientSymbols||Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Symbols.Symbol).Instance;this.Options=options||Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Symbols.OptionSymbol).Instance;this.Properties=properties||Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.GlobalState.PropertyAndValue).Instance;this.Cache=cache!=null?cache.WithGlobals(this):null;this.ParseOptions=parseOptions||Kusto.Language.ParseOptions.Default;this.reverseClusterMap=reverseClusterMap;this.reverseDatabaseMap=reverseDatabaseMap;this.reverseTableMap=reverseTableMap;this.functionsMap=functionsMap;this.aggregatesMap=aggregatesMap;this.pluginMap=pluginMap;this.operatorMap=operatorMap;this.commandMap=commandMap;this.ambientSymbolsMap=ambientSymbolsMap;this.clientSymbolsMap=clientSymbolsMap;this.optionMap=optionMap;this.propertyMap=propertyMap}},methods:{Copy:function(){return new Kusto.Language.GlobalState(this.Domain,this.Clusters,this.Cluster,this.Database,this.Functions,this.Aggregates,this.PlugIns,this.Operators,this.ServerKind,this.AmbientSymbols,this.ClientSymbols,this.Options,this.Properties,this.Cache,this.ParseOptions,this.reverseClusterMap,this.reverseDatabaseMap,this.reverseTableMap,this.functionsMap,this.aggregatesMap,this.pluginMap,this.operatorMap,this.commandMap,this.ambientSymbolsMap,this.clientSymbolsMap,this.optionMap,this.propertyMap)},With:function(domain,clusters,cluster,database,functions,aggregates,plugins,operators,serverKind,ambientSymbols,clientSymbols,options,properties,cache,parseOptions){domain===void 0&&(domain=new(Kusto.Language.Utils.Optional$1(System.String)));clusters===void 0&&(clusters=new(Kusto.Language.Utils.Optional$1(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.ClusterSymbol))));cluster===void 0&&(cluster=new(Kusto.Language.Utils.Optional$1(Kusto.Language.Symbols.ClusterSymbol)));database===void 0&&(database=new(Kusto.Language.Utils.Optional$1(Kusto.Language.Symbols.DatabaseSymbol)));functions===void 0&&(functions=new(Kusto.Language.Utils.Optional$1(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol))));aggregates===void 0&&(aggregates=new(Kusto.Language.Utils.Optional$1(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol))));plugins===void 0&&(plugins=new(Kusto.Language.Utils.Optional$1(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol))));operators===void 0&&(operators=new(Kusto.Language.Utils.Optional$1(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.OperatorSymbol))));serverKind===void 0&&(serverKind=new(Kusto.Language.Utils.Optional$1(System.String)));ambientSymbols===void 0&&(ambientSymbols=new(Kusto.Language.Utils.Optional$1(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.Symbol))));clientSymbols===void 0&&(clientSymbols=new(Kusto.Language.Utils.Optional$1(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.Symbol))));options===void 0&&(options=new(Kusto.Language.Utils.Optional$1(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.OptionSymbol))));properties===void 0&&(properties=new(Kusto.Language.Utils.Optional$1(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.GlobalState.PropertyAndValue))));cache===void 0&&(cache=new(Kusto.Language.Utils.Optional$1(Kusto.Language.KustoCache)));parseOptions===void 0&&(parseOptions=new(Kusto.Language.Utils.Optional$1(Kusto.Language.ParseOptions)));var useDomain=domain.HasValue?domain.Value:this.Domain,useClusters=clusters.HasValue?clusters.Value:this.Clusters,useCluster=cluster.HasValue?cluster.Value:this.Cluster,useDatabase=database.HasValue?database.Value:this.Database,useFunctions=functions.HasValue?functions.Value:this.Functions,useAggregates=aggregates.HasValue?aggregates.Value:this.Aggregates,usePlugins=plugins.HasValue?plugins.Value:this.PlugIns,useOperators=operators.HasValue?operators.Value:this.Operators,useServerKind=serverKind.HasValue?serverKind.Value:this.ServerKind,useAmbientSymbols=ambientSymbols.HasValue?ambientSymbols.Value:this.AmbientSymbols,useClientSymbols=clientSymbols.HasValue?clientSymbols.Value:this.ClientSymbols,useOptions=options.HasValue?options.Value:this.Options,useProperties=properties.HasValue?properties.Value:this.Properties,useCache=cache.HasValue?cache.Value:this.Cache,useParseOptions=parseOptions.HasValue?parseOptions.Value:this.ParseOptions;return Bridge.referenceEquals(useDomain,this.Domain)&&Bridge.referenceEquals(useClusters,this.Clusters)&&Bridge.referenceEquals(useCluster,this.Cluster)&&Bridge.referenceEquals(useDatabase,this.Database)&&Bridge.referenceEquals(useFunctions,this.Functions)&&Bridge.referenceEquals(useAggregates,this.Aggregates)&&Bridge.referenceEquals(usePlugins,this.PlugIns)&&Bridge.referenceEquals(useOperators,this.Operators)&&Bridge.referenceEquals(useServerKind,this.ServerKind)&&Bridge.referenceEquals(useAmbientSymbols,this.AmbientSymbols)&&Bridge.referenceEquals(useClientSymbols,this.ClientSymbols)&&Bridge.referenceEquals(useOptions,this.Options)&&Bridge.referenceEquals(useProperties,this.Properties)&&Bridge.referenceEquals(useCache,this.Cache)&&Bridge.referenceEquals(useParseOptions,this.ParseOptions)?this:new Kusto.Language.GlobalState(useDomain,useClusters,useCluster,useDatabase,useFunctions,useAggregates,usePlugins,useOperators,useServerKind,useAmbientSymbols,useClientSymbols,useOptions,useProperties,useCache,useParseOptions,Bridge.referenceEquals(useClusters,this.Clusters)?this.reverseClusterMap:null,Bridge.referenceEquals(useClusters,this.Clusters)?this.reverseDatabaseMap:null,Bridge.referenceEquals(useClusters,this.Clusters)?this.reverseTableMap:null,Bridge.referenceEquals(useFunctions,this.Functions)?this.functionsMap:null,Bridge.referenceEquals(useAggregates,this.Aggregates)?this.aggregatesMap:null,Bridge.referenceEquals(usePlugins,this.PlugIns)?this.pluginMap:null,Bridge.referenceEquals(useOperators,this.Operators)?this.operatorMap:null,Bridge.referenceEquals(useServerKind,this.ServerKind)?this.commandMap:null,Bridge.referenceEquals(useAmbientSymbols,this.AmbientSymbols)?this.ambientSymbolsMap:null,Bridge.referenceEquals(useClientSymbols,this.ClientSymbols)?this.clientSymbolsMap:null,Bridge.referenceEquals(useOptions,this.Options)?this.optionMap:null,Bridge.referenceEquals(useProperties,this.Properties)?this.propertyMap:null)},WithCache:function(){return this.Cache!=null?this:this.With(void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,Kusto.Language.Utils.Optional$1(Kusto.Language.KustoCache).op_Implicit(new Kusto.Language.KustoCache(this)),void 0)},WithParseOptions:function(parseOptions){return Bridge.referenceEquals(this.ParseOptions,parseOptions)?this:this.With(void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,Kusto.Language.Utils.Optional$1(Kusto.Language.ParseOptions).op_Implicit(parseOptions))},WithClusterList$1:function(clusters){if(Bridge.referenceEquals(this.Clusters,clusters))return this;else if(clusters==null)return this.With(void 0,Kusto.Language.GlobalState.Optional(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.ClusterSymbol),clusters),void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0).WithCluster(Kusto.Language.Symbols.ClusterSymbol.Unknown);else{var newCluster=System.Linq.Enumerable.from(clusters,Kusto.Language.Symbols.ClusterSymbol).firstOrDefault(Bridge.fn.bind(this,function(c){return Bridge.referenceEquals(c.Name,this.Cluster.Name)}),null)||Kusto.Language.Symbols.ClusterSymbol.Unknown;return this.With(void 0,Kusto.Language.GlobalState.Optional(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.ClusterSymbol),clusters),void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0).WithCluster(newCluster)}},WithClusterList:function(clusters){return clusters===void 0&&(clusters=[]),this.WithClusterList$1(Bridge.cast(clusters,System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.ClusterSymbol)))},AddOrReplaceCluster:function(cluster){if(Bridge.referenceEquals(cluster,Kusto.Language.Symbols.ClusterSymbol.Unknown)||Bridge.referenceEquals(cluster,this.Cluster)||System.Linq.Enumerable.from(this.Clusters,Kusto.Language.Symbols.ClusterSymbol).contains(cluster))return this;else{var newClusters=Kusto.Language.GlobalState.AddOrReplace(Kusto.Language.Symbols.ClusterSymbol,this.Clusters,cluster);return this.WithClusterList$1(newClusters)}},WithCluster:function(cluster){var newDb,newClusters;return Bridge.referenceEquals(this.Cluster,cluster)?this:Bridge.referenceEquals(cluster,Kusto.Language.Symbols.ClusterSymbol.Unknown)||cluster==null?this.With(void 0,void 0,Kusto.Language.Utils.Optional$1(Kusto.Language.Symbols.ClusterSymbol).op_Implicit(Kusto.Language.Symbols.ClusterSymbol.Unknown),Kusto.Language.Utils.Optional$1(Kusto.Language.Symbols.DatabaseSymbol).op_Implicit(Kusto.Language.Symbols.DatabaseSymbol.Unknown),void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0):System.Linq.Enumerable.from(this.Clusters,Kusto.Language.Symbols.ClusterSymbol).contains(cluster)?(newDb=cluster.GetDatabase(this.Database.Name)||Kusto.Language.Symbols.DatabaseSymbol.Unknown,this.With(void 0,void 0,Kusto.Language.Utils.Optional$1(Kusto.Language.Symbols.ClusterSymbol).op_Implicit(cluster),Kusto.Language.Utils.Optional$1(Kusto.Language.Symbols.DatabaseSymbol).op_Implicit(newDb),void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0)):(newClusters=Kusto.Language.GlobalState.AddOrReplace(Kusto.Language.Symbols.ClusterSymbol,this.Clusters,cluster),this.WithClusterList$1(newClusters).WithCluster(cluster))},WithCluster$1:function(clusterName){return this.WithCluster(this.GetCluster$1(clusterName)||Kusto.Language.Symbols.ClusterSymbol.Unknown)},WithDomain:function(domain){return System.String.isNullOrEmpty(domain)||domain.charCodeAt(0)===46||(domain="."+(domain||"")),this.With(Kusto.Language.Utils.Optional$1(System.String).op_Implicit(domain),void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0)},WithDatabase:function(database){var knownCluster,cluster;return database=database||Kusto.Language.Symbols.DatabaseSymbol.Unknown,Bridge.referenceEquals(this.Database,database)?this:Bridge.referenceEquals(database,Kusto.Language.Symbols.DatabaseSymbol.Unknown)||System.Linq.Enumerable.from(this.Cluster.Databases,Kusto.Language.Symbols.DatabaseSymbol).contains(database)?this.With(void 0,void 0,void 0,Kusto.Language.Utils.Optional$1(Kusto.Language.Symbols.DatabaseSymbol).op_Implicit(database),void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0):(knownCluster=this.GetCluster(database),knownCluster!=null?this.With(void 0,void 0,Kusto.Language.Utils.Optional$1(Kusto.Language.Symbols.ClusterSymbol).op_Implicit(knownCluster),Kusto.Language.Utils.Optional$1(Kusto.Language.Symbols.DatabaseSymbol).op_Implicit(database),void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0):(cluster=new Kusto.Language.Symbols.ClusterSymbol.ctor((database.Name||"")+":cluster",[database]),this.WithCluster(cluster).WithDatabase(database)))},WithDatabase$1:function(databaseName){return this.WithDatabase(this.Cluster.GetDatabase(databaseName)||Kusto.Language.Symbols.DatabaseSymbol.Unknown)},IsDatabaseTable:function(table){return this.GetDatabase$3(table)!=null},IsDatabaseFunction:function($function){return this.GetDatabase$1($function)!=null},IsDatabaseSymbol:function(symbol){return this.GetDatabase$2(symbol)!=null},WithFunctions:function(functions){return this.With(void 0,void 0,void 0,void 0,Kusto.Language.GlobalState.Optional(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol),functions),void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0)},GetCluster$1:function(name){var $t;return name==null?null:(name=($t=Kusto.Language.KustoFacts.GetHostName(name),$t!=null?$t:name),!Bridge.referenceEquals(this.Cluster,Kusto.Language.Symbols.ClusterSymbol.Unknown)&&(Kusto.Language.KustoFacts.IsHostName(name,this.Cluster.Name)||Kusto.Language.KustoFacts.IsShortHostName(name,this.Cluster.Name,this.Domain)))?this.Cluster:System.Linq.Enumerable.from(this.Clusters,Kusto.Language.Symbols.ClusterSymbol).firstOrDefault(function(c){return Kusto.Language.KustoFacts.IsHostName(name,c.Name)},null)||System.Linq.Enumerable.from(this.Clusters,Kusto.Language.Symbols.ClusterSymbol).firstOrDefault(Bridge.fn.bind(this,function(c){return Kusto.Language.KustoFacts.IsShortHostName(name,c.Name,this.Domain)}),null)},GetCluster:function(database){var $t,$t1,map,cluster,member,result;if(database==null)return null;if(this.reverseClusterMap==null){map=new(System.Collections.Generic.Dictionary$2(Kusto.Language.Symbols.Symbol,Kusto.Language.Symbols.ClusterSymbol).ctor);$t=Bridge.getEnumerator(this.Clusters,Kusto.Language.Symbols.ClusterSymbol);try{while($t.moveNext()){cluster=$t.Current;$t1=Bridge.getEnumerator(cluster.Members,Kusto.Language.Symbols.Symbol);try{while($t1.moveNext())member=$t1.Current,map.setItem(member,cluster)}finally{Bridge.is($t1,System.IDisposable)&&$t1.System$IDisposable$Dispose()}}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}Kusto.Language.Utils.Interlocked.CompareExchange(System.Collections.Generic.Dictionary$2(Kusto.Language.Symbols.Symbol,Kusto.Language.Symbols.ClusterSymbol),Bridge.ref(this,"reverseClusterMap"),map,null)}return result={},this.reverseClusterMap.tryGetValue(database,result),result.v},GetDatabase$3:function(table){return this.GetDatabase$2(Bridge.cast(table,Kusto.Language.Symbols.Symbol))},GetDatabase$1:function($function){return this.GetDatabase$2(Bridge.cast($function,Kusto.Language.Symbols.Symbol))},GetDatabase:function(entityGroup){return this.GetDatabase$2(Bridge.cast(entityGroup,Kusto.Language.Symbols.Symbol))},GetDatabase$2:function(symbol){var $t,$t1,map,database,member,result;if(symbol==null)return null;if(this.reverseDatabaseMap==null){map=new(System.Collections.Generic.Dictionary$2(Kusto.Language.Symbols.Symbol,Kusto.Language.Symbols.DatabaseSymbol).ctor);$t=Bridge.getEnumerator(System.Linq.Enumerable.from(this.Clusters,Kusto.Language.Symbols.ClusterSymbol).selectMany(function(c){return c.Databases}));try{while($t.moveNext()){database=$t.Current;$t1=Bridge.getEnumerator(database.Members,Kusto.Language.Symbols.Symbol);try{while($t1.moveNext())member=$t1.Current,map.setItem(member,database)}finally{Bridge.is($t1,System.IDisposable)&&$t1.System$IDisposable$Dispose()}}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}Kusto.Language.Utils.Interlocked.CompareExchange(System.Collections.Generic.Dictionary$2(Kusto.Language.Symbols.Symbol,Kusto.Language.Symbols.DatabaseSymbol),Bridge.ref(this,"reverseDatabaseMap"),map,null)}return result={},this.reverseDatabaseMap.tryGetValue(symbol,result),result.v},GetTable:function(column){var $t,$t1,map,table,col,result;if(column==null)return null;if(this.reverseTableMap==null){map=new(System.Collections.Generic.Dictionary$2(Kusto.Language.Symbols.Symbol,Kusto.Language.Symbols.TableSymbol).ctor);$t=Bridge.getEnumerator(System.Linq.Enumerable.from(this.Clusters,Kusto.Language.Symbols.ClusterSymbol).selectMany(function(c){return c.Databases}).selectMany(function(d){return d.Tables}));try{while($t.moveNext()){table=$t.Current;$t1=Bridge.getEnumerator(table.Columns,Kusto.Language.Symbols.ColumnSymbol);try{while($t1.moveNext())col=$t1.Current,map.setItem(col,table)}finally{Bridge.is($t1,System.IDisposable)&&$t1.System$IDisposable$Dispose()}}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}Kusto.Language.Utils.Interlocked.CompareExchange(System.Collections.Generic.Dictionary$2(Kusto.Language.Symbols.Symbol,Kusto.Language.Symbols.TableSymbol),Bridge.ref(this,"reverseTableMap"),map,null)}return result={},this.reverseTableMap.tryGetValue(column,result),result.v},GetFunction:function(name){var map,fn;return name==null?null:System.Array.getCount(this.Functions,Kusto.Language.Symbols.FunctionSymbol)===0?null:(this.functionsMap==null&&(map=Kusto.Language.Utils.ListExtensions.ToDictionaryLast(System.String,Kusto.Language.Symbols.FunctionSymbol,this.Functions,function(f){return f.Name}),Kusto.Language.Utils.Interlocked.CompareExchange(System.Collections.Generic.Dictionary$2(System.String,Kusto.Language.Symbols.FunctionSymbol),Bridge.ref(this,"functionsMap"),map,null)),fn={},this.functionsMap.tryGetValue(name,fn),fn.v)},WithAggregates:function(aggregates){return this.With(void 0,void 0,void 0,void 0,void 0,Kusto.Language.GlobalState.Optional(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol),aggregates),void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0)},GetAggregate:function(name){var map,fn;return name==null?null:System.Array.getCount(this.Aggregates,Kusto.Language.Symbols.FunctionSymbol)===0?null:(this.aggregatesMap==null&&(map=Kusto.Language.Utils.ListExtensions.ToDictionaryLast(System.String,Kusto.Language.Symbols.FunctionSymbol,this.Aggregates,function(f){return f.Name}),Kusto.Language.Utils.Interlocked.CompareExchange(System.Collections.Generic.Dictionary$2(System.String,Kusto.Language.Symbols.FunctionSymbol),Bridge.ref(this,"aggregatesMap"),map,null)),fn={},this.aggregatesMap.tryGetValue(name,fn),fn.v)},WithPlugIns:function(plugins){return this.With(void 0,void 0,void 0,void 0,void 0,void 0,Kusto.Language.GlobalState.Optional(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol),plugins),void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0)},GetPlugIn:function(name){var map,fn;return name==null||System.Array.getCount(this.PlugIns,Kusto.Language.Symbols.FunctionSymbol)===0?null:(this.pluginMap==null&&(map=Kusto.Language.Utils.ListExtensions.ToDictionaryLast(System.String,Kusto.Language.Symbols.FunctionSymbol,this.PlugIns,function(f){return f.Name}),Kusto.Language.Utils.Interlocked.CompareExchange(System.Collections.Generic.Dictionary$2(System.String,Kusto.Language.Symbols.FunctionSymbol),Bridge.ref(this,"pluginMap"),map,null)),fn={},this.pluginMap.tryGetValue(name,fn),fn.v)},IsAggregateFunction:function(fn){return fn!=null&&Bridge.referenceEquals(this.GetAggregate(fn.Name),fn)},IsBuiltInFunction:function(fn){return fn==null?!1:Bridge.referenceEquals(this.GetFunction(fn.Name),fn)||Bridge.referenceEquals(this.GetAggregate(fn.Name),fn)||Bridge.referenceEquals(this.GetPlugIn(fn.Name),fn)},IsBuiltInFunctionName:function(functionName){var $t,$t1,$t2;return System.String.isNullOrEmpty(functionName)?!1:Bridge.referenceEquals(($t=this.GetFunction(functionName))!=null?$t.Name:null,functionName)||Bridge.referenceEquals(($t1=this.GetAggregate(functionName))!=null?$t1.Name:null,functionName)||Bridge.referenceEquals(($t2=this.GetPlugIn(functionName))!=null?$t2.Name:null,functionName)},WithOperators:function(operators){return this.With(void 0,void 0,void 0,void 0,void 0,void 0,void 0,Kusto.Language.GlobalState.Optional(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.OperatorSymbol),operators),void 0,void 0,void 0,void 0,void 0,void 0,void 0)},GetOperator:function(kind){if(System.Array.getCount(this.Operators,Kusto.Language.Symbols.OperatorSymbol)===0)return null;this.operatorMap==null&&(this.operatorMap=Kusto.Language.Utils.ListExtensions.ToDictionaryLast(Kusto.Language.Symbols.OperatorKind,Kusto.Language.Symbols.OperatorSymbol,this.Operators,function(o){return o.OperatorKind}));var op={};return this.operatorMap.tryGetValue(kind,op),op.v},WithServerKind:function(serverKind){return this.With(void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,Kusto.Language.Utils.Optional$1(System.String).op_Implicit(serverKind),void 0,void 0,void 0,void 0,void 0,void 0)},GetCommand:function(name){var $t,commands,map,c,command;if(name==null)return null;if(this.commandMap==null){commands=Kusto.Language.GlobalState.GetCommands(this.ServerKind);map=new(System.Collections.Generic.Dictionary$2(System.String,Kusto.Language.Symbols.CommandSymbol).$ctor4)(System.Array.getCount(commands,Kusto.Language.Symbols.CommandSymbol));$t=Bridge.getEnumerator(commands,Kusto.Language.Symbols.CommandSymbol);try{while($t.moveNext())c=$t.Current,map.setItem(c.Name,c)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}Kusto.Language.Utils.Interlocked.CompareExchange(System.Collections.Generic.Dictionary$2(System.String,Kusto.Language.Symbols.CommandSymbol),Bridge.ref(this,"commandMap"),map,null)}return command={},this.commandMap.tryGetValue(name,command),command.v},WithAmbientSymbols:function(symbols){return this.With(void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,Kusto.Language.GlobalState.Optional(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.Symbol),symbols),void 0,void 0,void 0,void 0,void 0)},AddOrUpdateAmbientSymbols$1:function(symbols){return this.WithAmbientSymbols(Kusto.Language.Utils.ListExtensions.AddOrUpdate(Kusto.Language.Symbols.Symbol,System.String,this.AmbientSymbols,symbols,function(s){return s.Name}))},AddOrUpdateAmbientSymbols:function(symbols){return symbols===void 0&&(symbols=[]),this.AddOrUpdateAmbientSymbols$1(Bridge.cast(symbols,System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.Symbol)))},GetAmbientSymbol:function(name){var map,symbol;return name==null||System.Array.getCount(this.AmbientSymbols,Kusto.Language.Symbols.Symbol)===0?null:(this.ambientSymbolsMap==null&&(map=Kusto.Language.Utils.ListExtensions.ToDictionaryLast(System.String,Kusto.Language.Symbols.Symbol,this.AmbientSymbols,function(p){return p.Name}),Kusto.Language.Utils.Interlocked.CompareExchange(System.Collections.Generic.Dictionary$2(System.String,Kusto.Language.Symbols.Symbol),Bridge.ref(this,"ambientSymbolsMap"),map,null)),symbol={},this.ambientSymbolsMap.tryGetValue(name,symbol),symbol.v)},WithParameters:function(parameters){var ambientWithoutParameters=System.Linq.Enumerable.from(this.AmbientSymbols,Kusto.Language.Symbols.Symbol).where(function(s){return!Bridge.is(s,Kusto.Language.Symbols.ParameterSymbol)}),newList=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Symbols.Symbol,ambientWithoutParameters.concat(parameters).where(function(s){return s!=null}));return this.WithAmbientSymbols(newList)},AddParameters$1:function(parameters){return this.AddOrUpdateAmbientSymbols$1(parameters)},AddParameters:function(parameters){return parameters===void 0&&(parameters=[]),this.AddOrUpdateAmbientSymbols(parameters)},WithClientSymbols:function(symbols){return this.With(void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,Kusto.Language.GlobalState.Optional(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.Symbol),symbols),void 0,void 0,void 0,void 0)},AddOrUpdateClientSymbols$1:function(symbols){return this.WithClientSymbols(Kusto.Language.Utils.ListExtensions.AddOrUpdate(Kusto.Language.Symbols.Symbol,System.String,this.ClientSymbols,symbols,function(s){return s.Name}))},AddOrUpdateClientSymbols:function(symbols){return symbols===void 0&&(symbols=[]),this.AddOrUpdateClientSymbols$1(Bridge.cast(symbols,System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.Symbol)))},GetClientSymbol:function(name){var map,symbol;return name==null||System.Array.getCount(this.ClientSymbols,Kusto.Language.Symbols.Symbol)===0?null:(this.clientSymbolsMap==null&&(map=Kusto.Language.Utils.ListExtensions.ToDictionaryLast(System.String,Kusto.Language.Symbols.Symbol,this.ClientSymbols,function(p){return p.Name}),Kusto.Language.Utils.Interlocked.CompareExchange(System.Collections.Generic.Dictionary$2(System.String,Kusto.Language.Symbols.Symbol),Bridge.ref(this,"clientSymbolsMap"),map,null)),symbol={},this.clientSymbolsMap.tryGetValue(name,symbol),symbol.v)},WithOptions:function(options){return this.With(void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,Kusto.Language.GlobalState.Optional(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.OptionSymbol),options),void 0,void 0,void 0)},GetOption:function(name){var $t,map,opt,option;if(name==null)return null;if(this.optionMap==null){map=new(System.Collections.Generic.Dictionary$2(System.String,Kusto.Language.Symbols.OptionSymbol).ctor);$t=Bridge.getEnumerator(this.Options,Kusto.Language.Symbols.OptionSymbol);try{while($t.moveNext())opt=$t.Current,map.setItem(opt.Name,opt)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}Kusto.Language.Utils.Interlocked.CompareExchange(System.Collections.Generic.Dictionary$2(System.String,Kusto.Language.Symbols.OptionSymbol),Bridge.ref(this,"optionMap"),map,null)}return option={},this.optionMap.tryGetValue(name,option),option.v},GetProperty:function(T,property){var map,value;return property==null?Bridge.getDefaultValue(T):System.Array.getCount(this.Properties,Kusto.Language.GlobalState.PropertyAndValue)===0?property.DefaultValue:(this.propertyMap==null&&(map=Kusto.Language.Utils.ListExtensions.ToDictionaryLast$1(Kusto.Language.GlobalState.PropertyAndValue,Kusto.Language.GlobalStateProperty,System.Object,this.Properties,function(pv){return pv.Property},function(pv){return pv.Value}),Kusto.Language.Utils.Interlocked.CompareExchange(System.Collections.Generic.Dictionary$2(Kusto.Language.GlobalStateProperty,System.Object),Bridge.ref(this,"propertyMap"),map,null)),value={},this.propertyMap.tryGetValue(property,value)?Bridge.cast(Bridge.unbox(value.v,T),T):property.DefaultValue)},WithProperty:function(T,property,value){var $t,$t1,currentPropAndValue,index;if(property==null)return this;var list=null,hasCurrentValue=!1,currentValue={v:null};if(this.propertyMap!=null?hasCurrentValue=this.propertyMap.tryGetValue(property,currentValue):(currentPropAndValue=System.Linq.Enumerable.from(this.Properties,Kusto.Language.GlobalState.PropertyAndValue).firstOrDefault(function(p){return Bridge.referenceEquals(p.Property,property)},null),currentPropAndValue!=null&&(hasCurrentValue=!0,currentValue.v=currentPropAndValue.Value)),hasCurrentValue){if(Bridge.equals(currentValue.v,value))return this;if(list=($t=Kusto.Language.GlobalState.PropertyAndValue,System.Linq.Enumerable.from(this.Properties,$t).toList($t)),index=list.FindIndex$2(function(p){return Bridge.referenceEquals(p.Property,property)}),index>=0)return list.setItem(index,new Kusto.Language.GlobalState.PropertyAndValue(property,value)),this.With(void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,Kusto.Language.Utils.Optional$1(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.GlobalState.PropertyAndValue)).op_Implicit(list.AsReadOnly()),void 0,void 0)}return list==null&&(list=($t1=Kusto.Language.GlobalState.PropertyAndValue,System.Linq.Enumerable.from(this.Properties,$t1).toList($t1))),list.add(new Kusto.Language.GlobalState.PropertyAndValue(property,value)),this.With(void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,Kusto.Language.Utils.Optional$1(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.GlobalState.PropertyAndValue)).op_Implicit(list.AsReadOnly()),void 0,void 0)}}});Bridge.define("Kusto.Language.GlobalState.PropertyAndValue",{$kind:"nested class",props:{Property:null,Value:null},ctors:{ctor:function(property,value){this.$initialize();this.Property=property;this.Value=value}}});Bridge.define("Kusto.Language.GlobalStateProperty",{props:{Name:null},ctors:{ctor:function(name){var $t;this.$initialize();this.Name=($t=name,$t!=null?$t:function(){throw new System.ArgumentNullException.$ctor1("name");}())}}});Bridge.define("Kusto.Language.IncludeFunctionKind",{$kind:"enum",statics:{fields:{BuiltInFunctions:1,DatabaseFunctions:2,LocalFunctions:4,LocalViews:8,None:0,All:15}},$flags:!0});Bridge.define("Kusto.Language.KustoCache",{fields:{m_cache:null},props:{Globals:null},ctors:{init:function(){this.m_cache=new(System.Collections.Generic.Dictionary$2(System.Type,System.Object).ctor)},ctor:function(globals){this.$initialize();this.Globals=globals}},methods:{WithGlobals:function(globals){return Bridge.referenceEquals(this.Globals,globals)?this:new Kusto.Language.KustoCache(globals)},GetOrCreate:function(T){var value={};return this.m_cache.tryGetValue(T,value)||(value.v=Bridge.createInstance(T),this.m_cache.add(T,value.v)),Bridge.cast(Bridge.unbox(value.v,T),T)},GetOrCreate$1:function(T,creator){var value={};return this.m_cache.tryGetValue(T,value)||(value.v=creator(),this.m_cache.add(T,value.v)),Bridge.cast(Bridge.unbox(value.v,T),T)},TryGetValue:function(T,value){var obj={};return this.m_cache.tryGetValue(T,obj)?(value.v=Bridge.cast(Bridge.unbox(obj.v,T),T),!0):(value.v=Bridge.getDefaultValue(T),!1)}}});Bridge.define("Kusto.Language.KustoCode",{statics:{fields:{MaxAnalyzableSyntaxDepth:0},ctors:{init:function(){this.MaxAnalyzableSyntaxDepth=500}},methods:{Parse:function(text,globals){if(globals===void 0&&(globals=null),text==null)throw new System.ArgumentNullException.$ctor1("text");globals=globals||Kusto.Language.GlobalState.Default;globals=globals.WithParseOptions(globals.ParseOptions.WithAlwaysProduceEndTokens(!0));var tokens=Kusto.Language.Parsing.TokenParser.ParseTokens(text,globals.ParseOptions),starts=Kusto.Language.KustoCode.GetTokenStarts(tokens);return Kusto.Language.KustoCode.Create(text,globals,tokens,starts,!1,Bridge.getDefaultValue(Kusto.Language.Utils.CancellationToken))},ParseAndAnalyze:function(text,globals,cancellationToken){if(globals===void 0&&(globals=null),cancellationToken===void 0&&(cancellationToken=new Kusto.Language.Utils.CancellationToken),text==null)throw new System.ArgumentNullException.$ctor1("text");globals=globals||Kusto.Language.GlobalState.Default;globals=globals.WithParseOptions(globals.ParseOptions.WithAlwaysProduceEndTokens(!0));var tokens=Kusto.Language.Parsing.TokenParser.ParseTokens(text,globals.ParseOptions),starts=Kusto.Language.KustoCode.GetTokenStarts(tokens);return Kusto.Language.KustoCode.Create(text,globals,tokens,starts,!0,Bridge.getDefaultValue(Kusto.Language.Utils.CancellationToken))},GetTokenStarts:function(tokens){for(var starts=new(System.Collections.Generic.List$1(System.Int32).$ctor2)(tokens.length+1|0),start=0,i=0;i<tokens.length;i=i+1|0)starts.add(start),start=start+tokens[System.Array.index(i,tokens)].Length|0;return starts.add(start),starts},Create:function(text,globals,tokens,tokenStarts,analyze,cancellationToken){var grammar,syntax,kind,commandBlock,queryBlock;globals=globals||Kusto.Language.GlobalState.Default;kind=Kusto.Language.KustoCode.GetKind(text);switch(kind){case Kusto.Language.Editor.CodeKinds.Command:commandBlock=Kusto.Language.Parsing.CommandGrammar.From(globals).CommandBlock;grammar=commandBlock;syntax=Kusto.Language.Parsing.SyntaxParsers.ParseFirst$1(Kusto.Language.Syntax.CommandBlock,commandBlock,tokens);break;case Kusto.Language.Editor.CodeKinds.Directive:grammar=Kusto.Language.Parsing.DirectiveGrammar.DirectiveBlock;syntax=Kusto.Language.Parsing.SyntaxParsers.ParseFirst$1(Kusto.Language.Syntax.DirectiveBlock,Kusto.Language.Parsing.DirectiveGrammar.DirectiveBlock,tokens);break;case Kusto.Language.Editor.CodeKinds.Query:default:queryBlock=Kusto.Language.Parsing.QueryGrammar.From(globals).QueryBlock;grammar=queryBlock;switch(globals.ParseOptions.ParserKind){case Kusto.Language.ParserKind.Default:default:syntax=Kusto.Language.Parsing.QueryParser.ParseQuery(tokens,0,globals.ParseOptions);break;case Kusto.Language.ParserKind.Grammar:syntax=Kusto.Language.Parsing.SyntaxParsers.ParseFirst$1(Kusto.Language.Syntax.QueryBlock,queryBlock,tokens);break}break}var tree=new Kusto.Language.Syntax.SyntaxTree(syntax),localCache=null,resultType=null,analyzed=!1;return analyze&&(cancellationToken.ThrowIfCancellationRequested(),localCache=new Kusto.Language.Binding.LocalBindingCache,Kusto.Language.Binding.Binder.TryBind(tree,globals,localCache,null,cancellationToken)&&(resultType=Kusto.Language.KustoCode.DetermineResultType(syntax),analyzed=!0)),new Kusto.Language.KustoCode(text,kind,globals,grammar,tree,analyzed,resultType,tokens,tokenStarts,localCache)},DetermineResultType:function(root){var statements,qb,cb,es;do{if(Bridge.is(root,Kusto.Language.Syntax.QueryBlock)){qb=Bridge.cast(root,Kusto.Language.Syntax.QueryBlock);statements=qb.Statements;break}if(Bridge.is(root,Kusto.Language.Syntax.CommandBlock)){cb=Bridge.cast(root,Kusto.Language.Syntax.CommandBlock);statements=cb.Statements;break}return null}while(0);return statements.Count>0&&(es=Bridge.as(statements.getItem$1(statements.Count-1|0).Element$1,Kusto.Language.Syntax.ExpressionStatement))!=null?es.Expression.ResultType:null},GetKind:function(text){var token=Kusto.Language.Parsing.TokenParser.ParseToken(text,0);if(token!=null)if(token.Kind===Kusto.Language.Syntax.SyntaxKind.DotToken)return Kusto.Language.Editor.CodeKinds.Command;else if(token.Kind===Kusto.Language.Syntax.SyntaxKind.DirectiveToken)return Kusto.Language.Editor.CodeKinds.Directive;return Kusto.Language.Editor.CodeKinds.Query}}},fields:{lexerTokens:null,lexerTokenStarts:null,localCache:null,diagnostics:null,syntaxDiagnostics:null,lineStarts:null},props:{Text:null,Kind:null,Tree:null,Syntax:{get:function(){return this.Tree.Root}},Grammar:null,HasSemantics:!1,ResultType:null,Globals:null,MaxDepth:{get:function(){return this.Tree.Depth}},Dialect:{get:function(){switch(this.Kind){case Kusto.Language.Editor.CodeKinds.Command:switch(this.Globals.ServerKind){case Kusto.Language.ServerKinds.ClusterManager:return Kusto.Language.KustoDialect.ClusterManagerCommand;case Kusto.Language.ServerKinds.DataManager:return Kusto.Language.KustoDialect.DataManagerCommand;case Kusto.Language.ServerKinds.Engine:default:return Kusto.Language.KustoDialect.EngineCommand}case Kusto.Language.Editor.CodeKinds.Query:case Kusto.Language.Editor.CodeKinds.Directive:return Kusto.Language.KustoDialect.Query;default:return Kusto.Language.KustoDialect.Unknown}}}},ctors:{ctor:function(text,kind,globals,grammar,tree,hasSemantics,resultType,lexerTokens,lexerTokenStarts,localCache){this.$initialize();this.Text=text;this.Kind=kind;this.Globals=globals;this.Grammar=grammar;this.Tree=tree;this.HasSemantics=hasSemantics;this.ResultType=resultType;this.lexerTokens=lexerTokens;this.lexerTokenStarts=lexerTokenStarts;this.localCache=localCache}},methods:{Analyze:function(globals,cancellationToken){return globals===void 0&&(globals=null),cancellationToken===void 0&&(cancellationToken=new Kusto.Language.Utils.CancellationToken),globals==null&&(globals=this.Globals),this.HasSemantics&&Bridge.referenceEquals(this.Globals,globals)?this:Kusto.Language.KustoCode.Create(this.Text,globals,this.lexerTokens,this.lexerTokenStarts,!0,cancellationToken)},WithGlobals:function(globals,cancellationToken){return cancellationToken===void 0&&(cancellationToken=new Kusto.Language.Utils.CancellationToken),Bridge.referenceEquals(this.Globals,globals)?this:Kusto.Language.KustoCode.Create(this.Text,globals,this.lexerTokens,this.lexerTokenStarts,this.HasSemantics,cancellationToken)},GetDiagnostics:function(cancellationToken){if(cancellationToken===void 0&&(cancellationToken=new Kusto.Language.Utils.CancellationToken),this.diagnostics==null){var include=3,diagnostics=this.Syntax.GetContainedDiagnostics(include,cancellationToken);Kusto.Language.Utils.Interlocked.CompareExchange(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Diagnostic),Bridge.ref(this,"diagnostics"),diagnostics,null)}return this.diagnostics},GetSyntaxDiagnostics:function(cancellationToken){if(cancellationToken===void 0&&(cancellationToken=new Kusto.Language.Utils.CancellationToken),this.syntaxDiagnostics==null){var diagnostics=this.Syntax.GetContainedSyntaxDiagnostics();Kusto.Language.Utils.Interlocked.CompareExchange(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Diagnostic),Bridge.ref(this,"syntaxDiagnostics"),diagnostics,null)}return this.syntaxDiagnostics},GetSymbolsInScope:function(position,match,include,cancellationToken){match===void 0&&(match=12283);include===void 0&&(include=15);cancellationToken===void 0&&(cancellationToken=new Kusto.Language.Utils.CancellationToken);var symbols=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.Symbol).ctor);return this.HasSemantics&&Kusto.Language.Binding.Binder.GetSymbolsInScope(this.Tree,position,this.Globals,match,include,symbols,cancellationToken),Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Symbols.Symbol,symbols)},GetSpeculativeReferencedSymbol:function(position,name,match,cancellationToken){return(match===void 0&&(match=12283),cancellationToken===void 0&&(cancellationToken=new Kusto.Language.Utils.CancellationToken),this.HasSemantics)?Kusto.Language.Binding.Binder.GetReferencedSymbol(this.Tree,position,name,this.Globals,match,cancellationToken):null},GetColumnsInScope:function(position,cancellationToken){return(cancellationToken===void 0&&(cancellationToken=new Kusto.Language.Utils.CancellationToken),this.HasSemantics)?Kusto.Language.Binding.Binder.GetRowScope(this.Tree,position,this.Globals,cancellationToken):null},TryGetLineAndOffset:function(position,line,lineOffset){var tmp,success;return this.lineStarts==null&&(tmp=new(System.Collections.Generic.List$1(System.Int32).ctor),Kusto.Language.Parsing.TextFacts.GetLineStarts(this.Text,tmp),Kusto.Language.Utils.Interlocked.CompareExchange(System.Collections.Generic.List$1(System.Int32),Bridge.ref(this,"lineStarts"),tmp,null)),success=Kusto.Language.Parsing.TextFacts.TryGetLineAndOffset(this.lineStarts,position,line,lineOffset),success&&(position<0||position>this.Text.length)&&(success=!1),success},GetTokenIndex:function(position){var index;if(this.lexerTokens.length===0)return 0;var lastTokenIndex=this.lexerTokens.length-1|0,lastToken=this.lexerTokens[System.Array.index(lastTokenIndex,this.lexerTokens)],lastTokenStart=this.lexerTokenStarts.getItem(lastTokenIndex);return position>=(lastTokenStart+lastToken.Length|0)?this.lexerTokens.length-1|0:(index=this.lexerTokenStarts.BinarySearch(position),index>=0?index:~index-1|0)},GetLexicalTokens:function(){return this.lexerTokens}}});Bridge.define("Kusto.Language.KustoDialect",{$kind:"enum",statics:{fields:{Unknown:0,ClusterManagerCommand:1,DataManagerCommand:2,EngineCommand:3,Query:4}}});Bridge.define("Kusto.Language.KustoFacts",{statics:{fields:{HostNamePrefix:null,ParamTypes:null,ExtendedParamTypes:null,StorageTypes:null,_knownQueryOperatorParameterNames:null,ChartTypes:null,HiddenChartTypes:null,VisibleChartTypes:null,ChartProperties:null,ChartKinds:null,ChartLegends:null,ChartAxis:null,ChartYSplit:null,HintDistributions:null,HintRemotes:null,HintStrategies:null,HintSpreads:null,HintConcurrencies:null,DistinctHintStrategies:null,EvaluateHintDistributions:null,EvaluateHintRemotes:null,JoinKinds:null,GraphMarkComponentsKinds:null,JoinHintRemotes:null,JoinHintStrategies:null,LookupKinds:null,MakeSeriesKinds:null,MvExpandKinds:null,PartitionHintConcurrencies:null,PartitionHintSpreads:null,PartitionHintStrategies:null,PartitionedGraphMakeHintStrategies:null,ReduceByKinds:null,SearchKinds:null,SortHintStrategies:null,SummarizeHintStrategies:null,UnionWithSourceProperties:null,UnionKinds:null,CyclesKinds:null,UnionHintConcurrencies:null,UnionHintSpreads:null,ParseKinds:null,DataScopeValues:null,ScanKinds:null,ScanStepOutputValues:null,ToScalarKinds:null,ToTableKinds:null,LimitExamples:null,TopExamples:null,AgoExamples:null,KnownInternalFunctionNames:null,DateTimeParts:null,DateDiffParts:null,KeywordsAsIdentifiers:null,ExtendedKeywordsAsIdentifiers:null,SpecialKeywordsAsIdentifiers:null,ForkOperatorKinds:null,PostPipeOperatorKinds:null,singleQuoteStringEscapes:null,doubleQuoteStringEscapes:null,MultiLineStringQuote:null,AlternateMultiLineStringQuote:null,KustoWindowsNet:null,s_engineCommandKeywordsThatNeedBrackets:null},props:{KnownQueryOperatorParameterNames:{get:function(){return Kusto.Language.KustoFacts._knownQueryOperatorParameterNames==null&&(Kusto.Language.KustoFacts._knownQueryOperatorParameterNames=System.Linq.Enumerable.from(Kusto.Language.QueryOperatorParameters.AllParameters,Kusto.Language.QueryOperatorParameter).selectMany(function(p){return System.Linq.Enumerable.from(System.Array.init([p.Name],System.String),System.String).concat(p.Aliases)}).orderBy(function(n){return n}).ToArray(System.String)),Kusto.Language.KustoFacts._knownQueryOperatorParameterNames}},UnionIsFuzzyProperty:{get:function(){return"isfuzzy"}}},ctors:{init:function(){this.HostNamePrefix="://";this.ParamTypes=System.Array.init(["bool","boolean","date","datetime","decimal","double","dynamic","guid","int","int64","int8","long","real","string","time","timespan","uniqueid"],System.String);this.ExtendedParamTypes=System.Array.init(["bool","boolean","date","datetime","decimal","double","dynamic","float","guid","int","int16","int32","int64","int8","long","real","decimal","string","time","timespan","uint","uint16","uint32","uint64","uint8","ulong","uniqueid"],System.String);this.StorageTypes=Kusto.Language.KustoFacts.ExtendedParamTypes;this.ChartTypes=System.Array.init(["table","list","barchart","piechart","ladderchart","timechart","linechart","anomalychart","pivotchart","areachart","stackedareachart","scatterchart","timepivot","columnchart","timeline","3Dchart","card","treemap","plotly","graph"],System.String);this.HiddenChartTypes=System.Array.init(["3Dchart","graph"],System.String);this.VisibleChartTypes=System.Linq.Enumerable.from(Kusto.Language.KustoFacts.ChartTypes,System.String).where(function(c){return!System.Linq.Enumerable.from(Kusto.Language.KustoFacts.HiddenChartTypes,System.String).contains(c)}).ToArray(System.String);this.ChartProperties=System.Array.init(["title","xcolumn","series","ycolumns","anomalycolumns","kind","xtitle","ytitle","xaxis","yaxis","legend","ysplit","accumulate","ymin","ymax","xmax","xmin"],System.String);this.ChartKinds=System.Array.init(["default","unstacked","stacked","stacked100","map"],System.String);this.ChartLegends=System.Array.init(["visible","hidden"],System.String);this.ChartAxis=System.Array.init(["linear","log"],System.String);this.ChartYSplit=System.Array.init(["none","axes","panels"],System.String);this.HintDistributions=System.Array.init(["single","per_node","per_shard","default"],System.String);this.HintRemotes=System.Array.init(["auto","local"],System.String);this.HintStrategies=System.Array.init(["auto","broadcast","centralized","shuffle"],System.String);this.HintSpreads=System.Array.init(["auto","local"],System.String);this.HintConcurrencies=System.Array.init(["auto","left","local","right","unresolved"],System.String);this.DistinctHintStrategies=Kusto.Language.KustoFacts.HintStrategies;this.EvaluateHintDistributions=Kusto.Language.KustoFacts.HintDistributions;this.EvaluateHintRemotes=Kusto.Language.KustoFacts.HintRemotes;this.JoinKinds=System.Array.init(["inner","fullouter","innerunique","leftanti","leftantisemi","anti","leftouter","leftsemi","rightanti","rightantisemi","rightouter","rightsemi"],System.String);this.GraphMarkComponentsKinds=System.Array.init(["weak","strong"],System.String);this.JoinHintRemotes=System.Array.init(["auto","left","local","right","unresolved"],System.String);this.JoinHintStrategies=Kusto.Language.KustoFacts.HintStrategies;this.LookupKinds=System.Array.init(["inner","leftouter"],System.String);this.MakeSeriesKinds=System.Array.init(["nonempty"],System.String);this.MvExpandKinds=System.Array.init(["bag","array"],System.String);this.PartitionHintConcurrencies=Kusto.Language.KustoFacts.HintConcurrencies;this.PartitionHintSpreads=Kusto.Language.KustoFacts.HintSpreads;this.PartitionHintStrategies=System.Array.init(["shuffle","native","legacy"],System.String);this.PartitionedGraphMakeHintStrategies=System.Array.init(["shuffle","native"],System.String);this.ReduceByKinds=System.Array.init(["source"],System.String);this.SearchKinds=System.Array.init(["default","case_insensitive","case_sensitive"],System.String);this.SortHintStrategies=System.Array.init(["splitBlock","multipleBlocks"],System.String);this.SummarizeHintStrategies=System.Array.init(["shuffle"],System.String);this.UnionWithSourceProperties=System.Array.init(["withsource","with_source"],System.String);this.UnionKinds=System.Array.init(["inner","outer"],System.String);this.CyclesKinds=System.Array.init(["none","all","unique_edges"],System.String);this.UnionHintConcurrencies=Kusto.Language.KustoFacts.HintConcurrencies;this.UnionHintSpreads=Kusto.Language.KustoFacts.HintSpreads;this.ParseKinds=System.Array.init(["simple","regex","relaxed"],System.String);this.DataScopeValues=System.Array.init(["all","hotcache"],System.String);this.ScanKinds=System.Array.init(["partial","full"],System.String);this.ScanStepOutputValues=System.Array.init(["all","last","none"],System.String);this.ToScalarKinds=System.Array.init(["nooptimization"],System.String);this.ToTableKinds=System.Array.init(["nooptimization"],System.String);this.LimitExamples=System.Array.init(["10","100","1000"],System.String);this.TopExamples=System.Array.init(["10","100","1000"],System.String);this.AgoExamples=System.Array.init(["30min","1h","1d"],System.String);this.KnownInternalFunctionNames=System.Array.init(["__blackbox","__box","__cast","__columnifexists","__const_cast","__fetch_contextual_scalar_value","__geo_line_validate","__geo_polygon_validate","__getobject","__getobjectex","__has_ipv4","__has_ipv4_prefix","__hash_crc32","__hash_djb2","__hash_many_crc32","__hash_xxxh64","__invoke","__is_scalar","__lz4_compress_dynamic_array_to_base64_string","__make_const","__null","__null_as","__object","__query_parameter","__regex_complexity","__row_offset","__rowstore_ref","__search_wildcard","__search_wildcard_explicit_cols","__search_wildcard_explicit_cols_v35","__shard_record_position","__sql_add","__sql_divide","__sql_modulo","__sql_multiply","__sql_subtract","__trace_information","__var","__warning","__get_scalar"],System.String);this.DateTimeParts=System.Array.init(["year","quarter","month","week_of_year","day","dayofyear","hour","minute","second","millisecond","microsecond","nanosecond"],System.String);this.DateDiffParts=System.Array.init(["year","quarter","month","week","day","hour","minute","second","millisecond","microsecond","nanosecond"],System.String);this.KeywordsAsIdentifiers=System.Linq.Enumerable.from(Kusto.Language.Syntax.SyntaxFacts.GetKindsWithFixedText(),Kusto.Language.Syntax.SyntaxKind).where(function(k){return Kusto.Language.Syntax.SyntaxFacts.IsKeyword(k)&&Kusto.Language.Syntax.SyntaxFacts.CanBeIdentifier(k)}).ToArray(Kusto.Language.Syntax.SyntaxKind);this.ExtendedKeywordsAsIdentifiers=System.Linq.Enumerable.from(Kusto.Language.KustoFacts.KeywordsAsIdentifiers,Kusto.Language.Syntax.SyntaxKind).concat(System.Array.init([Kusto.Language.Syntax.SyntaxKind.AccumulateKeyword,Kusto.Language.Syntax.SyntaxKind.AsKeyword,Kusto.Language.Syntax.SyntaxKind.ByKeyword,Kusto.Language.Syntax.SyntaxKind.ContainsKeyword,Kusto.Language.Syntax.SyntaxKind.ConsumeKeyword,Kusto.Language.Syntax.SyntaxKind.CountKeyword,Kusto.Language.Syntax.SyntaxKind.DataTableKeyword,Kusto.Language.Syntax.SyntaxKind.DistinctKeyword,Kusto.Language.Syntax.SyntaxKind.EarliestKeyword,Kusto.Language.Syntax.SyntaxKind.ExtendKeyword,Kusto.Language.Syntax.SyntaxKind.ExternalDataKeyword,Kusto.Language.Syntax.SyntaxKind.FindKeyword,Kusto.Language.Syntax.SyntaxKind.FilterKeyword,Kusto.Language.Syntax.SyntaxKind.HasKeyword,Kusto.Language.Syntax.SyntaxKind.InKeyword,Kusto.Language.Syntax.SyntaxKind.InvokeKeyword,Kusto.Language.Syntax.SyntaxKind.LatestKeyword,Kusto.Language.Syntax.SyntaxKind.LimitKeyword,Kusto.Language.Syntax.SyntaxKind.MaterializeKeyword,Kusto.Language.Syntax.SyntaxKind.MdmKeyword,Kusto.Language.Syntax.SyntaxKind.OfKeyword,Kusto.Language.Syntax.SyntaxKind.ParseKeyword,Kusto.Language.Syntax.SyntaxKind.PlotlyKeyword,Kusto.Language.Syntax.SyntaxKind.PrintKeyword,Kusto.Language.Syntax.SyntaxKind.SampleKeyword,Kusto.Language.Syntax.SyntaxKind.SampleDistinctKeyword,Kusto.Language.Syntax.SyntaxKind.ScanKeyword,Kusto.Language.Syntax.SyntaxKind.SearchKeyword,Kusto.Language.Syntax.SyntaxKind.SerializeKeyword,Kusto.Language.Syntax.SyntaxKind.SetKeyword,Kusto.Language.Syntax.SyntaxKind.SortKeyword,Kusto.Language.Syntax.SyntaxKind.SqlKeyword,Kusto.Language.Syntax.SyntaxKind.SummarizeKeyword,Kusto.Language.Syntax.SyntaxKind.TakeKeyword,Kusto.Language.Syntax.SyntaxKind.TitleKeyword,Kusto.Language.Syntax.SyntaxKind.ToKeyword,Kusto.Language.Syntax.SyntaxKind.TopKeyword,Kusto.Language.Syntax.SyntaxKind.ToScalarKeyword,Kusto.Language.Syntax.SyntaxKind.ToTableKeyword,Kusto.Language.Syntax.SyntaxKind.TopNestedKeyword,Kusto.Language.Syntax.SyntaxKind.TopHittersKeyword,Kusto.Language.Syntax.SyntaxKind.VerboseKeyword,Kusto.Language.Syntax.SyntaxKind.ViewersKeyword,Kusto.Language.Syntax.SyntaxKind.WhereKeyword],Kusto.Language.Syntax.SyntaxKind)).ToArray(Kusto.Language.Syntax.SyntaxKind);this.SpecialKeywordsAsIdentifiers=System.Array.init([Kusto.Language.Syntax.SyntaxKind.KindKeyword,Kusto.Language.Syntax.SyntaxKind.WithSourceKeyword,Kusto.Language.Syntax.SyntaxKind.With_SourceKeyword],Kusto.Language.Syntax.SyntaxKind);this.ForkOperatorKinds=System.Array.init([Kusto.Language.Syntax.SyntaxKind.AsOperator,Kusto.Language.Syntax.SyntaxKind.CountOperator,Kusto.Language.Syntax.SyntaxKind.DistinctOperator,Kusto.Language.Syntax.SyntaxKind.ExecuteAndCacheOperator,Kusto.Language.Syntax.SyntaxKind.ExtendOperator,Kusto.Language.Syntax.SyntaxKind.FilterOperator,Kusto.Language.Syntax.SyntaxKind.InvokeOperator,Kusto.Language.Syntax.SyntaxKind.MvExpandOperator,Kusto.Language.Syntax.SyntaxKind.ParseOperator,Kusto.Language.Syntax.SyntaxKind.ParseWhereOperator,Kusto.Language.Syntax.SyntaxKind.ParseKvOperator,Kusto.Language.Syntax.SyntaxKind.ProjectOperator,Kusto.Language.Syntax.SyntaxKind.ProjectAwayOperator,Kusto.Language.Syntax.SyntaxKind.ProjectKeepOperator,Kusto.Language.Syntax.SyntaxKind.ProjectRenameOperator,Kusto.Language.Syntax.SyntaxKind.ProjectReorderOperator,Kusto.Language.Syntax.SyntaxKind.ReduceByOperator,Kusto.Language.Syntax.SyntaxKind.SampleDistinctOperator,Kusto.Language.Syntax.SyntaxKind.SampleOperator,Kusto.Language.Syntax.SyntaxKind.SortOperator,Kusto.Language.Syntax.SyntaxKind.SummarizeOperator,Kusto.Language.Syntax.SyntaxKind.TakeOperator,Kusto.Language.Syntax.SyntaxKind.TopHittersOperator,Kusto.Language.Syntax.SyntaxKind.TopNestedOperator,Kusto.Language.Syntax.SyntaxKind.TopOperator],Kusto.Language.Syntax.SyntaxKind);this.PostPipeOperatorKinds=System.Array.init([Kusto.Language.Syntax.SyntaxKind.AsOperator,Kusto.Language.Syntax.SyntaxKind.ConsumeOperator,Kusto.Language.Syntax.SyntaxKind.CountOperator,Kusto.Language.Syntax.SyntaxKind.DistinctOperator,Kusto.Language.Syntax.SyntaxKind.EvaluateOperator,Kusto.Language.Syntax.SyntaxKind.ExecuteAndCacheOperator,Kusto.Language.Syntax.SyntaxKind.ExtendOperator,Kusto.Language.Syntax.SyntaxKind.FacetOperator,Kusto.Language.Syntax.SyntaxKind.FilterOperator,Kusto.Language.Syntax.SyntaxKind.FindOperator,Kusto.Language.Syntax.SyntaxKind.ForkOperator,Kusto.Language.Syntax.SyntaxKind.GetSchemaOperator,Kusto.Language.Syntax.SyntaxKind.GraphMatchOperator,Kusto.Language.Syntax.SyntaxKind.GraphMergeOperator,Kusto.Language.Syntax.SyntaxKind.GraphToTableOperator,Kusto.Language.Syntax.SyntaxKind.InvokeOperator,Kusto.Language.Syntax.SyntaxKind.JoinOperator,Kusto.Language.Syntax.SyntaxKind.LookupOperator,Kusto.Language.Syntax.SyntaxKind.MakeSeriesOperator,Kusto.Language.Syntax.SyntaxKind.MakeGraphOperator,Kusto.Language.Syntax.SyntaxKind.MvApplyOperator,Kusto.Language.Syntax.SyntaxKind.MvExpandOperator,Kusto.Language.Syntax.SyntaxKind.ParseOperator,Kusto.Language.Syntax.SyntaxKind.ParseWhereOperator,Kusto.Language.Syntax.SyntaxKind.ParseKvOperator,Kusto.Language.Syntax.SyntaxKind.PartitionOperator,Kusto.Language.Syntax.SyntaxKind.PartitionByOperator,Kusto.Language.Syntax.SyntaxKind.ProjectAwayOperator,Kusto.Language.Syntax.SyntaxKind.ProjectKeepOperator,Kusto.Language.Syntax.SyntaxKind.ProjectOperator,Kusto.Language.Syntax.SyntaxKind.ProjectRenameOperator,Kusto.Language.Syntax.SyntaxKind.ProjectReorderOperator,Kusto.Language.Syntax.SyntaxKind.ReduceByOperator,Kusto.Language.Syntax.SyntaxKind.RenderOperator,Kusto.Language.Syntax.SyntaxKind.SampleDistinctOperator,Kusto.Language.Syntax.SyntaxKind.SampleOperator,Kusto.Language.Syntax.SyntaxKind.ScanOperator,Kusto.Language.Syntax.SyntaxKind.SearchOperator,Kusto.Language.Syntax.SyntaxKind.SerializeOperator,Kusto.Language.Syntax.SyntaxKind.SummarizeOperator,Kusto.Language.Syntax.SyntaxKind.TakeOperator,Kusto.Language.Syntax.SyntaxKind.SortOperator,Kusto.Language.Syntax.SyntaxKind.TopHittersOperator,Kusto.Language.Syntax.SyntaxKind.TopOperator,Kusto.Language.Syntax.SyntaxKind.TopNestedOperator,Kusto.Language.Syntax.SyntaxKind.UnionOperator],Kusto.Language.Syntax.SyntaxKind);this.singleQuoteStringEscapes=function(_o1){return _o1.add(39,"\\'"),_o1.add(92,"\\\\"),_o1.add(7,"\\a"),_o1.add(8,"\\b"),_o1.add(12,"\\f"),_o1.add(10,"\\n"),_o1.add(13,"\\r"),_o1.add(9,"\\t"),_o1}(new(System.Collections.Generic.Dictionary$2(System.Char,System.String).ctor));this.doubleQuoteStringEscapes=function(_o2){return _o2.add(34,'\\"'),_o2.add(92,"\\\\"),_o2.add(7,"\\a"),_o2.add(8,"\\b"),_o2.add(12,"\\f"),_o2.add(10,"\\n"),_o2.add(13,"\\r"),_o2.add(9,"\\t"),_o2}(new(System.Collections.Generic.Dictionary$2(System.Char,System.String).ctor));this.MultiLineStringQuote="```";this.AlternateMultiLineStringQuote="~~~";this.KustoWindowsNet=".kusto.windows.net";this.s_engineCommandKeywordsThatNeedBrackets=function(_o1){return _o1.add("__unique"),_o1.add("accumulate"),_o1.add("and"),_o1.add("application"),_o1.add("as"),_o1.add("asc"),_o1.add("between"),_o1.add("blockedprincipals"),_o1.add("boolean"),_o1.add("by"),_o1.add("byte"),_o1.add("bytes"),_o1.add("cachingpolicy"),_o1.add("callout"),_o1.add("callstacks"),_o1.add("cancel"),_o1.add("char"),_o1.add("clusteradmin"),_o1.add("concurrency"),_o1.add("configuration"),_o1.add("consume"),_o1.add("container"),_o1.add("containers"),_o1.add("contains"),_o1.add("count"),_o1.add("dataexport"),_o1.add("datasize"),_o1.add("datastats"),_o1.add("datatable"),_o1.add("date"),_o1.add("datetime"),_o1.add("datetime_pattern"),_o1.add("days"),_o1.add("decimal"),_o1.add("desc"),_o1.add("dimensions"),_o1.add("disabled"),_o1.add("distinct"),_o1.add("double"),_o1.add("dryrun"),_o1.add("dynamic"),_o1.add("earliest"),_o1.add("empty"),_o1.add("enabled"),_o1.add("encodingpolicy"),_o1.add("entity_group"),_o1.add("exclude"),_o1.add("expired_tables_cleanup"),_o1.add("extend"),_o1.add("extent_tags_retention"),_o1.add("extentsize"),_o1.add("external_data"),_o1.add("externaldata"),_o1.add("filter"),_o1.add("find"),_o1.add("first"),_o1.add("flags"),_o1.add("float"),_o1.add("follower"),_o1.add("for"),_o1.add("format_datetime"),_o1.add("GB"),_o1.add("getschema"),_o1.add("harddelete"),_o1.add("hardretention"),_o1.add("has"),_o1.add("has_all"),_o1.add("has_any"),_o1.add("hot_window"),_o1.add("identity"),_o1.add("in"),_o1.add("include"),_o1.add("int"),_o1.add("int16"),_o1.add("int32"),_o1.add("int64"),_o1.add("int8"),_o1.add("invoke"),_o1.add("journal"),_o1.add("kind"),_o1.add("last"),_o1.add("latest"),_o1.add("limit"),_o1.add("long"),_o1.add("materialize"),_o1.add("MB"),_o1.add("mdm"),_o1.add("missing"),_o1.add("mvapply"),_o1.add("mvexpand"),_o1.add("network"),_o1.add("of"),_o1.add("or"),_o1.add("order"),_o1.add("others"),_o1.add("parse"),_o1.add("pathformat"),_o1.add("print"),_o1.add("project"),_o1.add("queries"),_o1.add("query_results"),_o1.add("real"),_o1.add("recoverability"),_o1.add("restricted_view_access"),_o1.add("row_level_security"),_o1.add("rowstore"),_o1.add("rowstore_references"),_o1.add("rowstore_sealinfo"),_o1.add("rowstorepolicy"),_o1.add("rowstores"),_o1.add("sample"),_o1.add("scan"),_o1.add("seal"),_o1.add("seals"),_o1.add("search"),_o1.add("serialize"),_o1.add("set"),_o1.add("shards"),_o1.add("shuffle"),_o1.add("softdelete"),_o1.add("softretention"),_o1.add("sort"),_o1.add("sql"),_o1.add("startofday"),_o1.add("startofmonth"),_o1.add("startofweek"),_o1.add("startofyear"),_o1.add("statistics"),_o1.add("stored_query_result"),_o1.add("stored_query_results"),_o1.add("storedqueryresultcontainers"),_o1.add("string"),_o1.add("summarize"),_o1.add("tablepurge"),_o1.add("take"),_o1.add("time"),_o1.add("timespan"),_o1.add("title"),_o1.add("to"),_o1.add("top"),_o1.add("toscalar"),_o1.add("totable"),_o1.add("transactions"),_o1.add("trim"),_o1.add("uint"),_o1.add("uint16"),_o1.add("uint32"),_o1.add("uint64"),_o1.add("uint8"),_o1.add("ulong"),_o1.add("union"),_o1.add("uniqueid"),_o1.add("unrestrictedviewers"),_o1.add("until"),_o1.add("unused"),_o1.add("utilization"),_o1.add("verbose"),_o1.add("viewers"),_o1.add("views"),_o1.add("violations"),_o1.add("where"),_o1.add("writeaheadlog"),_o1}(new(System.Collections.Generic.HashSet$1(System.String).ctor))}},methods:{HasPipedInput:function(queryOp){var pe;return(pe=Bridge.as(queryOp.Parent,Kusto.Language.Syntax.PipeExpression))!=null&&Bridge.referenceEquals(pe.Operator,queryOp)||Kusto.Language.KustoFacts.IsChildOfPipeStartingExpression(queryOp)},IsChildOfPipeStartingExpression:function(expr){var fce,ps,mvas,pbo,mgpb,fwce,fwoc,pe,mvc,mve;return(fce=Bridge.as(expr.Parent,Kusto.Language.Syntax.ForkExpression))!=null&&Bridge.referenceEquals(fce.Expression,expr)||(ps=Bridge.as(expr.Parent,Kusto.Language.Syntax.PartitionSubquery))!=null&&Bridge.referenceEquals(ps.Subquery,expr)||(mvas=Bridge.as(expr.Parent,Kusto.Language.Syntax.MvApplySubqueryExpression))!=null&&Bridge.referenceEquals(mvas.Expression,expr)||(pbo=Bridge.as(expr.Parent,Kusto.Language.Syntax.PartitionByOperator))!=null&&Bridge.referenceEquals(pbo.Subquery,expr)||(mgpb=Bridge.as(expr.Parent,Kusto.Language.Syntax.MakeGraphPartitionedByClause))!=null&&Bridge.referenceEquals(mgpb.Subquery,expr)||(fwce=Bridge.as(expr.Parent,Kusto.Language.Syntax.FacetWithExpressionClause))!=null&&Bridge.referenceEquals(fwce.Expression,expr)||(fwoc=Bridge.as(expr.Parent,Kusto.Language.Syntax.FacetWithOperatorClause))!=null&&Bridge.referenceEquals(fwoc.Operator,expr)||(pe=Bridge.as(expr.Parent,Kusto.Language.Syntax.Expression))!=null&&Kusto.Language.KustoFacts.IsChildOfPipeStartingExpression(pe)||(mvc=Bridge.as(expr.Parent,Kusto.Language.Syntax.MaterializedViewCombineClause))!=null&&(mve=Bridge.as(mvc.Parent,Kusto.Language.Syntax.MaterializedViewCombineExpression))!=null&&Bridge.referenceEquals(mve.AggregationsClause,mvc)},CanBeIdentifier$1:function(text,dialect){if(System.String.isNullOrEmpty(text)||Kusto.Language.Parsing.TextFacts.IsDigit(text.charCodeAt(0))||Kusto.Language.Parsing.TokenParser.ScanIdentifier(text)!==text.length||Kusto.Language.Parsing.TokenParser.ScanBooleanLiteral(text)===text.length)return!1;switch(dialect){case Kusto.Language.KustoDialect.ClusterManagerCommand:case Kusto.Language.KustoDialect.DataManagerCommand:return!1;case Kusto.Language.KustoDialect.EngineCommand:return!Kusto.Language.KustoFacts.s_engineCommandKeywordsThatNeedBrackets.contains(text);case Kusto.Language.KustoDialect.Query:var kind={v:new Kusto.Language.Syntax.SyntaxKind};if(Kusto.Language.Syntax.SyntaxFacts.TryGetKind(text,kind)&&Kusto.Language.Syntax.SyntaxFacts.IsKeyword(kind.v)&&!Kusto.Language.Syntax.SyntaxFacts.CanBeIdentifier(kind.v))return!1;break}return!0},CanBeIdentifier:function(text){return Kusto.Language.KustoFacts.CanBeIdentifier$1(text,Kusto.Language.KustoDialect.Query)},BracketNameIfNecessary$1:function(name,dialect){return Kusto.Language.KustoFacts.CanBeIdentifier$1(name,dialect)?name:Kusto.Language.KustoFacts.GetBracketedName(name)},BracketNameIfNecessary:function(name){return Kusto.Language.KustoFacts.BracketNameIfNecessary$1(name,Kusto.Language.KustoDialect.Query)},GetBracketedName:function(name){return"["+(Kusto.Language.KustoFacts.GetStringLiteral(name)||"")+"]"},GetStringLiteral:function(text){return System.String.contains(text,"'")?Kusto.Language.KustoFacts.GetDoubleQuotedStringLiteral(text):Kusto.Language.KustoFacts.GetSingleQuotedStringLiteral(text)},GetSingleQuotedStringLiteral:function(text){return"'"+(Kusto.Language.KustoFacts.GetEscapedString(text,Kusto.Language.KustoFacts.singleQuoteStringEscapes)||"")+"'"},GetDoubleQuotedStringLiteral:function(text){return'"'+(Kusto.Language.KustoFacts.GetEscapedString(text,Kusto.Language.KustoFacts.doubleQuoteStringEscapes)||"")+'"'},GetMultiLineStringLiteral:function(text){return(Kusto.Language.KustoFacts.MultiLineStringQuote||"")+(text||"")+(Kusto.Language.KustoFacts.MultiLineStringQuote||"")},GetEscapedString:function(text,escapes){var $t,builder=new System.Text.StringBuilder,ch,escape;$t=Bridge.getEnumerator(text);try{while($t.moveNext())ch=$t.Current,escape={},escapes.System$Collections$Generic$IReadOnlyDictionary$2$System$Char$System$String$tryGetValue(ch,escape)?builder.append(escape.v):builder.append(String.fromCharCode(ch))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return builder.toString()},GetExpressionResultName:function(expr,defaultName,rowScope){return defaultName===void 0&&(defaultName=""),rowScope===void 0&&(rowScope=null),Kusto.Language.Binding.Binder.GetExpressionResultName(expr,defaultName,rowScope)},GetStringLiteralValue:function(literal){var start=0,end=literal.length,isVerbatim=!1,multiLineLiteral;if(end===0)return"";if((literal.charCodeAt(0)===104||literal.charCodeAt(0)===72)&&(start=start+1|0),start<literal.length&&literal.charCodeAt(start)===64&&(start=start+1|0,isVerbatim=!0),multiLineLiteral={},Kusto.Language.KustoFacts.TryParseMultiLineStringLiteral$1(start,literal,multiLineLiteral))return multiLineLiteral.v;if(start>=literal.length)return"";var startQuote=literal.charCodeAt(start),bracketed=startQuote===91,endQuote=bracketed?93:startQuote;return start=start+1|0,end>0&&literal.charCodeAt(end-1|0)===endQuote&&(end=end-1|0),end<=start?"":!isVerbatim&&!bracketed&&System.String.indexOf(literal,String.fromCharCode(92),start)>=start?Kusto.Language.KustoFacts.DecodeEscapes(literal,start,end-start|0):isVerbatim&&!bracketed&&Kusto.Language.KustoFacts.HasInteriorQuote(literal,start,end,endQuote)?Kusto.Language.KustoFacts.DecodeDoubleQuotes(literal,start,end-start|0,endQuote):start>0||end<literal.length?literal.substr(start,end-start|0):literal},TryParseMultiLineStringLiteral$1:function(start,text,literal){return Kusto.Language.KustoFacts.TryParseMultiLineStringLiteral(start,text,Kusto.Language.KustoFacts.MultiLineStringQuote,literal)||Kusto.Language.KustoFacts.TryParseMultiLineStringLiteral(start,text,Kusto.Language.KustoFacts.AlternateMultiLineStringQuote,literal)},TryParseMultiLineStringLiteral:function(start,text,quote,literal){var $t,twiceQuoteLen;return(start+quote.length|0)<text.length&&($t=quote.length,System.String.compare(text.substr(start,$t),quote.substr(0,$t),4))===0?(twiceQuoteLen=quote.length<<1,(text.length-start|0)>=twiceQuoteLen&&System.String.endsWith(text,quote,4)?(literal.v=text.substr(start+quote.length|0,(text.length-twiceQuoteLen|0)-start|0),!0):(literal.v=text.substr(start+quote.length|0),!0)):(literal.v=null,!1)},HasInteriorQuote:function(text,start,end,quote){var position=System.String.indexOf(text,String.fromCharCode(quote));return position>=0&&position<end},DecodeEscapes:function(text,start,length){for(var builder=new System.Text.StringBuilder,i={v:start},end=start+length|0,ch,ch2;i.v<end;)if(ch=text.charCodeAt(i.v),ch===92&&(i.v+1|0)<end){ch2=text.charCodeAt(i.v+1|0);switch(ch2){case 39:case 34:case 92:builder.append(String.fromCharCode(ch2));i.v=i.v+2|0;break;case 97:builder.append(String.fromCharCode(7));i.v=i.v+2|0;break;case 98:builder.append(String.fromCharCode(8));i.v=i.v+2|0;break;case 102:builder.append(String.fromCharCode(12));i.v=i.v+2|0;break;case 110:builder.append(String.fromCharCode(10));i.v=i.v+2|0;break;case 114:builder.append(String.fromCharCode(13));i.v=i.v+2|0;break;case 116:builder.append(String.fromCharCode(9));i.v=i.v+2|0;break;case 118:builder.append(String.fromCharCode(11));i.v=i.v+2|0;break;case 117:i.v=i.v+2|0;builder.append(String.fromCharCode(Kusto.Language.KustoFacts.DecodeHex(text,4,i)&65535));break;case 120:i.v=i.v+2|0;builder.append(String.fromCharCode(Kusto.Language.KustoFacts.DecodeHex(text,2,i)&65535));break;default:System.Char.isDigit(ch2)?(i.v=i.v+1|0,builder.append(String.fromCharCode(Kusto.Language.KustoFacts.DecodeOctal(text,3,i)&65535))):(i.v=i.v+2|0,builder.append(String.fromCharCode(ch2)));break}}else builder.append(String.fromCharCode(ch)),i.v=i.v+1|0;return builder.toString()},DecodeOctal:function(text,length,index){for(var value=0,count=0;count<3&&index.v<text.length&&System.Char.isDigit(text.charCodeAt(index.v));count=count+1|0,index.v=index.v+1|0)value=(value<<3)+(text.charCodeAt(index.v)-48|0)|0;return value},DecodeHex:function(text,length,index){for(var value=0,count=0,ch;count<length&&index.v<text.length;count=count+1|0,index.v=index.v+1|0)if(ch=text.charCodeAt(index.v),ch>=97&&ch<=102)value=(value<<4)+((ch-97|0)+10|0)|0;else if(ch>=65&&ch<=70)value=(value<<4)+((ch-65|0)+10|0)|0;else if(ch>=48&&ch<=57)value=(value<<4)+(ch-48|0)|0;else break;return value},DecodeDoubleQuotes:function(text,start,length,quote){for(var ch,builder=new System.Text.StringBuilder,i=start,end=start+length|0;i<end;i=i+1|0)ch=text.charCodeAt(i),ch===quote&&(i+1|0)<end&&text.charCodeAt(i+1|0)===quote&&(i=i+1|0),builder.append(String.fromCharCode(ch));return builder.toString()},IsHostName:function(name,hostName){return System.String.compare(name,hostName,5)===0},GetHostName:function(clusterUriOrName){var start=0,hostNamePrefixStart=System.String.indexOf(clusterUriOrName,Kusto.Language.KustoFacts.HostNamePrefix),end;for(hostNamePrefixStart>0&&(start=hostNamePrefixStart+Kusto.Language.KustoFacts.HostNamePrefix.length|0),end=start;end<clusterUriOrName.length&&Kusto.Language.KustoFacts.IsHostNameChar(clusterUriOrName.charCodeAt(end));)end=end+1|0;return start===0&&end===clusterUriOrName.length?clusterUriOrName:clusterUriOrName.substr(start,end-start|0)},IsHostNameChar:function(ch){return System.Char.isLetter(ch)||System.Char.isDigit(ch)||ch===45||ch===46||ch===95},GetFullHostName:function(hostname,defaultDomainSuffix){return Kusto.Language.KustoFacts.IsPossibleShortHostName(hostname)&&!System.String.isNullOrEmpty(defaultDomainSuffix)&&defaultDomainSuffix.charCodeAt(0)===46?(hostname||"")+(defaultDomainSuffix||""):hostname},HasShortHostName:function(hostname,defaultDomainSuffix){return!System.String.isNullOrEmpty(defaultDomainSuffix)&&defaultDomainSuffix.charCodeAt(0)===46&&System.String.endsWith(hostname,defaultDomainSuffix,5)&&hostname.length>defaultDomainSuffix.length&&Kusto.Language.KustoFacts.IsPossibleShortHostName$1(hostname,0,hostname.length-defaultDomainSuffix.length|0)},IsShortHostName:function(name,hostName,defaultDomainSuffix){return Kusto.Language.KustoFacts.HasShortHostName(hostName,defaultDomainSuffix)?(name.length+defaultDomainSuffix.length|0)!==hostName.length?!1:System.String.startsWith(hostName,name,5):!1},IsPossibleShortHostName:function(name){return Kusto.Language.KustoFacts.IsPossibleShortHostName$1(name,0,name.length)},IsPossibleShortHostName$1:function(name,start,len){return!System.String.isNullOrEmpty(name)&&name.charCodeAt(name.length-1|0)!==46&&Kusto.Language.KustoFacts.CountDots(name,start,len)<2},CountDots:function(text,start,len){for(var count=0,i=start,end=start+len|0;i<end;i=i+1|0)text.charCodeAt(i)===46&&(count=count+1|0);return count},GetShortHostName:function(hostName,defaultDomainSuffix){return hostName!=null&&Kusto.Language.KustoFacts.HasShortHostName(hostName,defaultDomainSuffix)?hostName.substr(0,hostName.length-defaultDomainSuffix.length|0):null},Matches:function(pattern,text,ignoreCase){if(ignoreCase===void 0&&(ignoreCase=!1),pattern==null)throw new System.ArgumentNullException.$ctor1("pattern");if(text==null)throw new System.ArgumentNullException.$ctor1("text");return pattern.length===0?!1:Kusto.Language.KustoFacts.Matches$1(pattern,0,text,0,ignoreCase)},Matches$1:function(pattern,patternSegmentStart,text,textPosition,ignoreCase){for(var asteriskPosition=System.String.indexOf(pattern,String.fromCharCode(42),patternSegmentStart),sawAsterisk=asteriskPosition>=0,patternSegmentEnd=sawAsterisk?asteriskPosition:pattern.length,nextPatternStart,patternSegmentLength,matchesPosition;sawAsterisk&&(asteriskPosition+1|0)<pattern.length&&pattern.charCodeAt(asteriskPosition+1|0)===42;)asteriskPosition=asteriskPosition+1|0;return nextPatternStart=sawAsterisk?asteriskPosition+1|0:pattern.length,patternSegmentLength=patternSegmentEnd-patternSegmentStart|0,patternSegmentLength===0?patternSegmentStart>=pattern.length?!0:Kusto.Language.KustoFacts.Matches$1(pattern,nextPatternStart,text,textPosition,ignoreCase):patternSegmentStart===0?sawAsterisk?patternSegmentLength>text.length||System.String.compare(text.substr(0,patternSegmentLength),pattern.substr(0,patternSegmentLength),ignoreCase)!==0?!1:Kusto.Language.KustoFacts.Matches$1(pattern,nextPatternStart,text,patternSegmentLength,ignoreCase):text.length===patternSegmentLength&&System.String.compare(text.substr(0,patternSegmentLength),pattern.substr(0,patternSegmentLength),ignoreCase)===0:sawAsterisk?(matchesPosition=Kusto.Language.KustoFacts.IndexOf(text,textPosition,pattern,patternSegmentStart,patternSegmentLength),matchesPosition===-1)?!1:Kusto.Language.KustoFacts.Matches$1(pattern,nextPatternStart,text,matchesPosition+patternSegmentLength|0,ignoreCase):patternSegmentLength<=(text.length-textPosition|0)&&System.String.compare(text.substr(text.length-patternSegmentLength|0,patternSegmentLength),pattern.substr(patternSegmentStart,patternSegmentLength),ignoreCase)===0},IndexOf:function(text,textStart,value,valueStart,valueLength){for(var firstChar=value.charCodeAt(valueStart),firstCharPosition;;){if(firstCharPosition=System.String.indexOf(text,String.fromCharCode(firstChar),textStart),firstCharPosition<textStart||(firstCharPosition+valueLength|0)>text.length)return-1;if(System.String.compare(text.substr(firstCharPosition,valueLength),value.substr(valueStart,valueLength))===0)return firstCharPosition;textStart=firstCharPosition+1|0}},GetSyntaxTabularity:function(expression,globals){var $t,fc,fn,dbFn;globals===void 0&&(globals=null);globals=globals||Kusto.Language.GlobalState.Default;do{if(Bridge.is(expression,Kusto.Language.Syntax.QueryOperator)||Bridge.is(expression,Kusto.Language.Syntax.PipeExpression)||Bridge.is(expression,Kusto.Language.Syntax.Command)||Bridge.is(expression,Kusto.Language.Syntax.DataTableExpression)||Bridge.is(expression,Kusto.Language.Syntax.ToTableExpression)){var _discard1=Bridge.as(expression,Kusto.Language.Syntax.QueryOperator),_discard2=Bridge.as(expression,Kusto.Language.Syntax.PipeExpression),_discard3=Bridge.as(expression,Kusto.Language.Syntax.Command),_discard4=Bridge.as(expression,Kusto.Language.Syntax.DataTableExpression),_discard5=Bridge.as(expression,Kusto.Language.Syntax.ToTableExpression);return Kusto.Language.Symbols.Tabularity.Tabular}if(Bridge.is(expression,Kusto.Language.Syntax.BinaryExpression)||Bridge.is(expression,Kusto.Language.Syntax.PrefixUnaryExpression)||Bridge.is(expression,Kusto.Language.Syntax.InExpression)||Bridge.is(expression,Kusto.Language.Syntax.HasAnyExpression)||Bridge.is(expression,Kusto.Language.Syntax.HasAllExpression)||Bridge.is(expression,Kusto.Language.Syntax.BetweenExpression)||Bridge.is(expression,Kusto.Language.Syntax.ElementExpression)||Bridge.is(expression,Kusto.Language.Syntax.BracketedExpression)||Bridge.is(expression,Kusto.Language.Syntax.LiteralExpression)||Bridge.is(expression,Kusto.Language.Syntax.CompoundStringLiteralExpression)||Bridge.is(expression,Kusto.Language.Syntax.DynamicExpression)||Bridge.is(expression,Kusto.Language.Syntax.ToScalarExpression)){var _discard6=Bridge.as(expression,Kusto.Language.Syntax.BinaryExpression),_discard7=Bridge.as(expression,Kusto.Language.Syntax.PrefixUnaryExpression),_discard8=Bridge.as(expression,Kusto.Language.Syntax.InExpression),_discard9=Bridge.as(expression,Kusto.Language.Syntax.HasAnyExpression),_discard10=Bridge.as(expression,Kusto.Language.Syntax.HasAllExpression),_discard11=Bridge.as(expression,Kusto.Language.Syntax.BetweenExpression),_discard12=Bridge.as(expression,Kusto.Language.Syntax.ElementExpression),_discard13=Bridge.as(expression,Kusto.Language.Syntax.BracketedExpression),_discard14=Bridge.as(expression,Kusto.Language.Syntax.LiteralExpression),_discard15=Bridge.as(expression,Kusto.Language.Syntax.CompoundStringLiteralExpression),_discard16=Bridge.as(expression,Kusto.Language.Syntax.DynamicExpression),_discard17=Bridge.as(expression,Kusto.Language.Syntax.ToScalarExpression);return Kusto.Language.Symbols.Tabularity.Scalar}return Bridge.is(expression,Kusto.Language.Syntax.FunctionCallExpression)?(fc=Bridge.cast(expression,Kusto.Language.Syntax.FunctionCallExpression),fn=globals.GetFunction(fc.Name.SimpleName),fn!=null)?fn.Tabularity:(dbFn=($t=globals.Database)!=null?$t.GetFunction(fc.Name.SimpleName):null,dbFn!=null)?dbFn.Tabularity:Kusto.Language.Symbols.Tabularity.Unknown:Kusto.Language.Symbols.Tabularity.Unknown}while(0)},GetSyntaxTabularity$1:function(statement,globals){globals===void 0&&(globals=null);var es;return statement!=null&&(es=Bridge.as(statement,Kusto.Language.Syntax.ExpressionStatement))!=null?Kusto.Language.KustoFacts.GetSyntaxTabularity(es.Expression,globals):Kusto.Language.Symbols.Tabularity.None},GetSyntaxTabularity$2:function(statements,globals){globals===void 0&&(globals=null);var es;return statements!=null&&statements.Count>0&&(es=Bridge.as(statements.getItem$1(statements.Count-1|0).Element$1,Kusto.Language.Syntax.ExpressionStatement))!=null?Kusto.Language.KustoFacts.GetSyntaxTabularity(es.Expression,globals):Kusto.Language.Symbols.Tabularity.None},GetLiteralType:function(kind){switch(kind){case Kusto.Language.Syntax.SyntaxKind.BooleanLiteralExpression:case Kusto.Language.Syntax.SyntaxKind.BooleanLiteralToken:return Kusto.Language.Symbols.ScalarTypes.Bool;case Kusto.Language.Syntax.SyntaxKind.StringLiteralExpression:case Kusto.Language.Syntax.SyntaxKind.StringLiteralToken:case Kusto.Language.Syntax.SyntaxKind.CompoundStringLiteralExpression:return Kusto.Language.Symbols.ScalarTypes.String;case Kusto.Language.Syntax.SyntaxKind.IntLiteralExpression:case Kusto.Language.Syntax.SyntaxKind.IntLiteralToken:return Kusto.Language.Symbols.ScalarTypes.Int;case Kusto.Language.Syntax.SyntaxKind.LongLiteralExpression:case Kusto.Language.Syntax.SyntaxKind.LongLiteralToken:return Kusto.Language.Symbols.ScalarTypes.Long;case Kusto.Language.Syntax.SyntaxKind.RealLiteralExpression:case Kusto.Language.Syntax.SyntaxKind.RealLiteralToken:return Kusto.Language.Symbols.ScalarTypes.Real;case Kusto.Language.Syntax.SyntaxKind.DecimalLiteralExpression:case Kusto.Language.Syntax.SyntaxKind.DecimalLiteralToken:return Kusto.Language.Symbols.ScalarTypes.Decimal;case Kusto.Language.Syntax.SyntaxKind.TimespanLiteralExpression:case Kusto.Language.Syntax.SyntaxKind.TimespanLiteralToken:return Kusto.Language.Symbols.ScalarTypes.TimeSpan;case Kusto.Language.Syntax.SyntaxKind.DateTimeLiteralExpression:case Kusto.Language.Syntax.SyntaxKind.DateTimeLiteralToken:return Kusto.Language.Symbols.ScalarTypes.DateTime;case Kusto.Language.Syntax.SyntaxKind.GuidLiteralExpression:case Kusto.Language.Syntax.SyntaxKind.GuidLiteralToken:case Kusto.Language.Syntax.SyntaxKind.RawGuidLiteralToken:return Kusto.Language.Symbols.ScalarTypes.Guid;case Kusto.Language.Syntax.SyntaxKind.TypeOfLiteralExpression:return Kusto.Language.Symbols.ScalarTypes.Type;case Kusto.Language.Syntax.SyntaxKind.DynamicExpression:return Kusto.Language.Symbols.ScalarTypes.Dynamic;default:return Kusto.Language.Symbols.ScalarTypes.Unknown}}}}});Bridge.define("Kusto.Language.Operators",{statics:{fields:{DateAndTimespan:null,StringOrDynamic:null,DynamicAddable:null,UnaryMinus:null,UnaryPlus:null,And:null,Or:null,Add:null,Subtract:null,Multiply:null,Divide:null,Modulo:null,LessThan:null,LessThanOrEqual:null,GreaterThan:null,GreaterThanOrEqual:null,Equal:null,NotEqual:null,EqualTilde:null,BangTilde:null,Has:null,HasCs:null,NotHas:null,NotHasCs:null,HasPrefix:null,HasPrefixCs:null,NotHasPrefix:null,NotHasPrefixCs:null,HasSuffix:null,HasSuffixCs:null,NotHasSuffix:null,NotHasSuffixCs:null,Like:null,LikeCs:null,NotLike:null,NotLikeCs:null,Contains:null,ContainsCs:null,NotContains:null,NotContainsCs:null,StartsWith:null,StartsWithCs:null,NotStartsWith:null,NotStartsWithCs:null,EndsWith:null,EndsWithCs:null,NotEndsWith:null,NotEndsWithCs:null,MatchRegex:null,Search:null,In:null,HasAny:null,HasAll:null,InCs:null,NotIn:null,NotInCs:null,Between:null,NotBetween:null},props:{All:null},ctors:{init:function(){this.DateAndTimespan=System.Array.init([Kusto.Language.Symbols.ScalarTypes.DateTime,Kusto.Language.Symbols.ScalarTypes.TimeSpan],Kusto.Language.Symbols.ScalarSymbol);this.StringOrDynamic=System.Array.init([Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ScalarTypes.Dynamic],Kusto.Language.Symbols.ScalarSymbol);this.DynamicAddable=System.Array.init([Kusto.Language.Symbols.ScalarTypes.Int,Kusto.Language.Symbols.ScalarTypes.Long,Kusto.Language.Symbols.ScalarTypes.Real,Kusto.Language.Symbols.ScalarTypes.Decimal,Kusto.Language.Symbols.ScalarTypes.TimeSpan,Kusto.Language.Symbols.ScalarTypes.DateTime],Kusto.Language.Symbols.ScalarSymbol);this.UnaryMinus=new Kusto.Language.Symbols.OperatorSymbol.ctor(Kusto.Language.Symbols.OperatorKind.UnaryMinus,[new Kusto.Language.Symbols.Signature.$ctor2(Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("operand",Kusto.Language.Symbols.ParameterTypeKind.Summable)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("operand",Kusto.Language.Symbols.ScalarTypes.Dynamic)])]);this.UnaryPlus=new Kusto.Language.Symbols.OperatorSymbol.ctor(Kusto.Language.Symbols.OperatorKind.UnaryPlus,[new Kusto.Language.Symbols.Signature.$ctor2(Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("operand",Kusto.Language.Symbols.ParameterTypeKind.Summable)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("operand",Kusto.Language.Symbols.ScalarTypes.Dynamic)])]);this.And=new Kusto.Language.Symbols.OperatorSymbol.ctor(Kusto.Language.Symbols.OperatorKind.And,[new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Bool)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Bool)]).Hide(),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Dynamic)]).Hide(),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Dynamic)]).Hide()]);this.Or=new Kusto.Language.Symbols.OperatorSymbol.ctor(Kusto.Language.Symbols.OperatorKind.Or,[new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Bool)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Bool)]).Hide(),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Dynamic)]).Hide(),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Dynamic)]).Hide()]);this.Add=new Kusto.Language.Symbols.OperatorSymbol.ctor(Kusto.Language.Symbols.OperatorKind.Add,[new Kusto.Language.Symbols.Signature.$ctor2(Kusto.Language.Symbols.ReturnTypeKind.Widest,[new Kusto.Language.Symbols.Parameter.ctor("left",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.TimeSpan,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.TimeSpan),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.TimeSpan)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.$ctor4("left",Kusto.Language.Operators.DateAndTimespan),new Kusto.Language.Symbols.Parameter.$ctor4("right",Kusto.Language.Operators.DateAndTimespan)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Dynamic)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Int)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Int),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Dynamic)]),new Kusto.Language.Symbols.Signature.$ctor2(Kusto.Language.Symbols.ReturnTypeKind.Parameter1,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor4("right",Kusto.Language.Operators.DynamicAddable)]),new Kusto.Language.Symbols.Signature.$ctor2(Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.$ctor4("left",Kusto.Language.Operators.DynamicAddable),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Dynamic)])]);this.Subtract=new Kusto.Language.Symbols.OperatorSymbol.ctor(Kusto.Language.Symbols.OperatorKind.Subtract,[new Kusto.Language.Symbols.Signature.$ctor2(Kusto.Language.Symbols.ReturnTypeKind.Widest,[new Kusto.Language.Symbols.Parameter.ctor("left",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.TimeSpan,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.TimeSpan),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.TimeSpan)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.TimeSpan,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.DateTime)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.TimeSpan)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.TimeSpan),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.DateTime)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Dynamic)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Int)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Int),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Dynamic)]),new Kusto.Language.Symbols.Signature.$ctor2(Kusto.Language.Symbols.ReturnTypeKind.Parameter1,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor4("right",Kusto.Language.Operators.DynamicAddable)]),new Kusto.Language.Symbols.Signature.$ctor2(Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.$ctor4("left",Kusto.Language.Operators.DynamicAddable),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Dynamic)])]);this.Multiply=new Kusto.Language.Symbols.OperatorSymbol.ctor(Kusto.Language.Symbols.OperatorKind.Multiply,[new Kusto.Language.Symbols.Signature.$ctor2(Kusto.Language.Symbols.ReturnTypeKind.Widest,[new Kusto.Language.Symbols.Parameter.ctor("left",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.TimeSpan,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.TimeSpan),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.TimeSpan)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.TimeSpan,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.TimeSpan),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.TimeSpan,[new Kusto.Language.Symbols.Parameter.ctor("left",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.TimeSpan)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.ctor("left",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.DateTime)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Dynamic)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Int)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Int),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Dynamic)]),new Kusto.Language.Symbols.Signature.$ctor2(Kusto.Language.Symbols.ReturnTypeKind.Parameter1,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor2(Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("left",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Dynamic)])]);this.Divide=new Kusto.Language.Symbols.OperatorSymbol.ctor(Kusto.Language.Symbols.OperatorKind.Divide,[new Kusto.Language.Symbols.Signature.$ctor2(Kusto.Language.Symbols.ReturnTypeKind.Widest,[new Kusto.Language.Symbols.Parameter.ctor("left",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.TimeSpan),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.TimeSpan)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.TimeSpan,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.TimeSpan),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.DateTime)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.TimeSpan)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Dynamic)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Int)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Int),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Dynamic)]),new Kusto.Language.Symbols.Signature.$ctor2(Kusto.Language.Symbols.ReturnTypeKind.Parameter1,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor2(Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("left",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Dynamic)])]);this.Modulo=new Kusto.Language.Symbols.OperatorSymbol.ctor(Kusto.Language.Symbols.OperatorKind.Modulo,[new Kusto.Language.Symbols.Signature.$ctor2(Kusto.Language.Symbols.ReturnTypeKind.Widest,[new Kusto.Language.Symbols.Parameter.ctor("left",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.TimeSpan,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.TimeSpan),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.TimeSpan)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.TimeSpan,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.TimeSpan),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.TimeSpan,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.DateTime)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.TimeSpan,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.TimeSpan)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Dynamic)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Int)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Int),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Dynamic)]),new Kusto.Language.Symbols.Signature.$ctor2(Kusto.Language.Symbols.ReturnTypeKind.Parameter1,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor2(Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("left",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Dynamic)])]);this.LessThan=new Kusto.Language.Symbols.OperatorSymbol.ctor(Kusto.Language.Symbols.OperatorKind.LessThan,[new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.NumberOrBool)]).Hide(),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("left",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.NumberOrBool)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.TimeSpan),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.TimeSpan)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.DateTime)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Dynamic)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("left",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Dynamic)])]);this.LessThanOrEqual=new Kusto.Language.Symbols.OperatorSymbol.ctor(Kusto.Language.Symbols.OperatorKind.LessThanOrEqual,[new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.NumberOrBool)]).Hide(),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("left",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.NumberOrBool)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.TimeSpan),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.TimeSpan)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.DateTime)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Dynamic)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("left",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Dynamic)])]);this.GreaterThan=new Kusto.Language.Symbols.OperatorSymbol.ctor(Kusto.Language.Symbols.OperatorKind.GreaterThan,[new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.NumberOrBool)]).Hide(),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("left",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.NumberOrBool)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.TimeSpan),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.TimeSpan)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.DateTime)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Dynamic)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("left",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Dynamic)])]);this.GreaterThanOrEqual=new Kusto.Language.Symbols.OperatorSymbol.ctor(Kusto.Language.Symbols.OperatorKind.GreaterThanOrEqual,[new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.NumberOrBool)]).Hide(),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("left",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.NumberOrBool)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.TimeSpan),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.TimeSpan)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.DateTime)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Dynamic)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("left",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Dynamic)])]);this.Equal=new Kusto.Language.Symbols.OperatorSymbol.ctor(Kusto.Language.Symbols.OperatorKind.Equal,[new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).Hide(),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("left",Kusto.Language.Symbols.ParameterTypeKind.NotBool),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("left",Kusto.Language.Symbols.ParameterTypeKind.NotBool,Kusto.Language.Symbols.ArgumentKind.StarOnly),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.Scalar)])]);this.NotEqual=new Kusto.Language.Symbols.OperatorSymbol.ctor(Kusto.Language.Symbols.OperatorKind.NotEqual,[new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).Hide(),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("left",Kusto.Language.Symbols.ParameterTypeKind.NotBool),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.Scalar)])]);this.EqualTilde=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.EqualTilde);this.BangTilde=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.BangTilde);this.Has=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.Has);this.HasCs=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.HasCs);this.NotHas=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.NotHas);this.NotHasCs=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.NotHasCs);this.HasPrefix=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.HasPrefix);this.HasPrefixCs=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.HasPrefixCs);this.NotHasPrefix=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.NotHasPrefix);this.NotHasPrefixCs=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.NotHasPrefixCs);this.HasSuffix=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.HasSuffix);this.HasSuffixCs=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.HasSuffixCs);this.NotHasSuffix=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.NotHasSuffix);this.NotHasSuffixCs=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.NotHasSuffixCs);this.Like=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.Like);this.LikeCs=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.LikeCs);this.NotLike=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.NotLike);this.NotLikeCs=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.NotLikeCs);this.Contains=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.Contains);this.ContainsCs=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.ContainsCs);this.NotContains=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.NotContains);this.NotContainsCs=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.NotContainsCs);this.StartsWith=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.StartsWith);this.StartsWithCs=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.StartsWithCs);this.NotStartsWith=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.NotStartsWith);this.NotStartsWithCs=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.NotStartsWithCs);this.EndsWith=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.EndsWith);this.EndsWithCs=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.EndsWithCs);this.NotEndsWith=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.NotEndsWith);this.NotEndsWithCs=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.NotEndsWithCs);this.MatchRegex=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.MatchRegex);this.Search=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.Search);this.In=new Kusto.Language.Symbols.OperatorSymbol.ctor(Kusto.Language.Symbols.OperatorKind.In,[new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.Parameter.ctor("table",Kusto.Language.Symbols.ParameterTypeKind.Tabular)]).Hide(),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.NotBool),new Kusto.Language.Symbols.Parameter.ctor("table",Kusto.Language.Symbols.ParameterTypeKind.Tabular)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar,0,void 0,void 0,!1,void 0,1,32767,void 0,void 0)]).Hide(),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.NotBool),new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar,0,void 0,void 0,!1,void 0,1,32767,void 0,void 0)])]);this.HasAny=new Kusto.Language.Symbols.OperatorSymbol.ctor(Kusto.Language.Symbols.OperatorKind.HasAny,[new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor4("value",Kusto.Language.Operators.StringOrDynamic),new Kusto.Language.Symbols.Parameter.ctor("table",Kusto.Language.Symbols.ParameterTypeKind.Tabular)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor4("value",Kusto.Language.Operators.StringOrDynamic),new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar,0,void 0,void 0,!1,void 0,1,32767,void 0,void 0)])]);this.HasAll=new Kusto.Language.Symbols.OperatorSymbol.ctor(Kusto.Language.Symbols.OperatorKind.HasAll,[new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor4("value",Kusto.Language.Operators.StringOrDynamic),new Kusto.Language.Symbols.Parameter.ctor("table",Kusto.Language.Symbols.ParameterTypeKind.Tabular)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor4("value",Kusto.Language.Operators.StringOrDynamic),new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar,0,void 0,void 0,!1,void 0,1,32767,void 0,void 0)])]);this.InCs=new Kusto.Language.Symbols.OperatorSymbol.ctor(Kusto.Language.Symbols.OperatorKind.InCs,[new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor4("value",Kusto.Language.Operators.StringOrDynamic),new Kusto.Language.Symbols.Parameter.ctor("table",Kusto.Language.Symbols.ParameterTypeKind.Tabular)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor4("value",Kusto.Language.Operators.StringOrDynamic),new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar,0,void 0,void 0,!1,void 0,1,32767,void 0,void 0)])]);this.NotIn=new Kusto.Language.Symbols.OperatorSymbol.ctor(Kusto.Language.Symbols.OperatorKind.NotIn,[new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.Parameter.ctor("table",Kusto.Language.Symbols.ParameterTypeKind.Tabular)]).Hide(),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.NotBool),new Kusto.Language.Symbols.Parameter.ctor("table",Kusto.Language.Symbols.ParameterTypeKind.Tabular)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar,0,void 0,void 0,!1,void 0,1,32767,void 0,void 0)]).Hide(),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.NotBool),new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar,0,void 0,void 0,!1,void 0,1,32767,void 0,void 0)])]);this.NotInCs=new Kusto.Language.Symbols.OperatorSymbol.ctor(Kusto.Language.Symbols.OperatorKind.NotInCs,[new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor4("value",Kusto.Language.Operators.StringOrDynamic),new Kusto.Language.Symbols.Parameter.ctor("table",Kusto.Language.Symbols.ParameterTypeKind.Tabular)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor4("value",Kusto.Language.Operators.StringOrDynamic),new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar,0,void 0,void 0,!1,void 0,1,32767,void 0,void 0)])]);this.Between=new Kusto.Language.Symbols.OperatorSymbol.ctor(Kusto.Language.Symbols.OperatorKind.Between,[new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("start",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("end",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Summable),new Kusto.Language.Symbols.Parameter.ctor("start",Kusto.Language.Symbols.ParameterTypeKind.Parameter0),new Kusto.Language.Symbols.Parameter.ctor("end",Kusto.Language.Symbols.ParameterTypeKind.Parameter0)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor2("start",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor2("end",Kusto.Language.Symbols.ScalarTypes.TimeSpan)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.$ctor2("start",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.ctor("end",Kusto.Language.Symbols.ParameterTypeKind.Parameter1)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.ctor("start",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("end",Kusto.Language.Symbols.ParameterTypeKind.Parameter1)])]);this.NotBetween=new Kusto.Language.Symbols.OperatorSymbol.ctor(Kusto.Language.Symbols.OperatorKind.NotBetween,[new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("start",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("end",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Summable),new Kusto.Language.Symbols.Parameter.ctor("start",Kusto.Language.Symbols.ParameterTypeKind.Parameter0),new Kusto.Language.Symbols.Parameter.ctor("end",Kusto.Language.Symbols.ParameterTypeKind.Parameter0)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor2("start",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor2("end",Kusto.Language.Symbols.ScalarTypes.TimeSpan)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.$ctor2("start",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.ctor("end",Kusto.Language.Symbols.ParameterTypeKind.Parameter1)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.ctor("start",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("end",Kusto.Language.Symbols.ParameterTypeKind.Parameter1)])]);this.All=System.Array.init([Kusto.Language.Operators.UnaryMinus,Kusto.Language.Operators.UnaryPlus,Kusto.Language.Operators.And,Kusto.Language.Operators.Or,Kusto.Language.Operators.Add,Kusto.Language.Operators.Subtract,Kusto.Language.Operators.Multiply,Kusto.Language.Operators.Divide,Kusto.Language.Operators.Modulo,Kusto.Language.Operators.LessThan,Kusto.Language.Operators.LessThanOrEqual,Kusto.Language.Operators.GreaterThan,Kusto.Language.Operators.GreaterThanOrEqual,Kusto.Language.Operators.Equal,Kusto.Language.Operators.NotEqual,Kusto.Language.Operators.EqualTilde,Kusto.Language.Operators.BangTilde,Kusto.Language.Operators.Has,Kusto.Language.Operators.HasCs,Kusto.Language.Operators.NotHas,Kusto.Language.Operators.NotHasCs,Kusto.Language.Operators.HasPrefix,Kusto.Language.Operators.HasPrefixCs,Kusto.Language.Operators.NotHasPrefix,Kusto.Language.Operators.NotHasPrefixCs,Kusto.Language.Operators.HasSuffix,Kusto.Language.Operators.HasSuffixCs,Kusto.Language.Operators.NotHasSuffix,Kusto.Language.Operators.NotHasSuffixCs,Kusto.Language.Operators.Like,Kusto.Language.Operators.LikeCs,Kusto.Language.Operators.NotLike,Kusto.Language.Operators.NotLikeCs,Kusto.Language.Operators.Contains,Kusto.Language.Operators.ContainsCs,Kusto.Language.Operators.NotContains,Kusto.Language.Operators.NotContainsCs,Kusto.Language.Operators.StartsWith,Kusto.Language.Operators.StartsWithCs,Kusto.Language.Operators.NotStartsWith,Kusto.Language.Operators.NotStartsWithCs,Kusto.Language.Operators.EndsWith,Kusto.Language.Operators.EndsWithCs,Kusto.Language.Operators.NotEndsWith,Kusto.Language.Operators.NotEndsWithCs,Kusto.Language.Operators.MatchRegex,Kusto.Language.Operators.Search,Kusto.Language.Operators.In,Kusto.Language.Operators.InCs,Kusto.Language.Operators.NotIn,Kusto.Language.Operators.NotInCs,Kusto.Language.Operators.Between,Kusto.Language.Operators.NotBetween,Kusto.Language.Operators.HasAny,Kusto.Language.Operators.HasAll],Kusto.Language.Symbols.OperatorSymbol)}},methods:{StringBinary:function(kind){return new Kusto.Language.Symbols.OperatorSymbol.ctor(kind,[new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("left",Kusto.Language.Symbols.ParameterTypeKind.StringOrDynamic),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.String)]),new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("left",Kusto.Language.Symbols.ParameterTypeKind.StringOrDynamic,Kusto.Language.Symbols.ArgumentKind.StarOnly),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.String)])])}}}});Bridge.define("Kusto.Language.Options",{statics:{fields:{BestEffort:null,DebugPython:null,DeferPartialQueryFailures:null,ErrorReportingPlacement:null,DoNotImpersonate:null,MaterializedViewShuffleQuery:null,MaxEntitiesToUnion:null,MaxMemoryConsumptionPerIterator:null,MaxMemoryConsumptionPerQueryPerNode:null,MaxOutputColumns:null,NoRequestTimeout:null,NoTruncation:null,ProgressiveProgressReportPeriod:null,ProgressiveQueryMinRowCountPerUpdate:null,PushSelectionThroughAggregation:null,QueryBinAutoAt:null,QueryBinAutoSize:null,QueryCursorAfterDefault:null,QueryCursorBeforeOrAtDefault:null,QueryCursorCurrent:null,QueryCursorDisabled:null,QueryCursorScopedTables:null,QueryDataScope:null,QueryDateTimeScopeColumn:null,QueryDateTimeScopeFrom:null,QueryDateTimeScopeTo:null,QueryDistributionNodesSpanSize:null,QueryFanoutNodesPercent:null,QueryFanoutThreadsPercent:null,QueryForceRowLevelSecurity:null,QueryLanguage:null,QueryLogQueryParameters:null,QueryNow:null,QueryResultsApplyGetSchema:null,QueryResultsCacheForceRefresh:null,QueryResultsCacheMaxAge:null,QueryResultsCachePerShardEnabled:null,QueryWeakConsistencySessionId:null,RequestAppName:null,RequestBlockRowLevelSecurity:null,RequestCalloutDisabled:null,RequestDescription:null,RequestExternalTableDisabled:null,RequestExternalDataDisabled:null,RequestReadOnly:null,RequestRemoteEntitiesDisabled:null,RequestSandboxedExecutionDisabled:null,RequestUser:null,ResultsProgressiveEnabled:null,ServerTimeout:null,TakeMaxRecords:null,TruncationMaxRecords:null,TruncationMaxSize:null,ValidatePermissions:null,V2NewlinesBetweenFrames:null,V2FragmentPrimaryTables:null,All:null},ctors:{init:function(){this.BestEffort=new Kusto.Language.Symbols.OptionSymbol.ctor("best_effort","If set, allows fuzzy resolution and connectivity issues of union legs. The set of union sources is reduced to the set of table references that exist and are accessible at the time.\r\nIf at least one such table is found, any failure will yield a warning in the query status results, but will not prevent the query execution.",Kusto.Language.Symbols.ScalarTypes.Bool);this.DebugPython=new Kusto.Language.Symbols.OptionSymbol.$ctor1("query_python_debug","If set, generate python debug query for the enumerated python node (default first).",System.Array.init([Kusto.Language.Symbols.ScalarTypes.Bool,Kusto.Language.Symbols.ScalarTypes.Int],Kusto.Language.Symbols.ScalarSymbol));this.DeferPartialQueryFailures=new Kusto.Language.Symbols.OptionSymbol.ctor("deferpartialqueryfailures","If true, disables reporting partial query failures as part of the result set.",Kusto.Language.Symbols.ScalarTypes.Bool);this.ErrorReportingPlacement=new Kusto.Language.Symbols.OptionSymbol.ctor("results_error_reporting_placement","Decides the placement of errors in the result set.",Kusto.Language.Symbols.ScalarTypes.String,System.Array.init(["'in_data'","'end_of_table'","'end_of_dataset'"],System.String));this.DoNotImpersonate=new Kusto.Language.Symbols.OptionSymbol.ctor("request_impersonation_disabled","If specified, indicates that the service should not impersonate the caller's identity.",Kusto.Language.Symbols.ScalarTypes.Bool);this.MaterializedViewShuffleQuery=new Kusto.Language.Symbols.OptionSymbol.ctor("materialized_view_shuffle","A hint to use shuffle strategy for materialized views that are referenced in the query.\r\nThe property is an array of materialized views names and the shuffle keys to use.\r\nexamples: 'dynamic(",Kusto.Language.Symbols.ScalarTypes.Dynamic);this.MaxEntitiesToUnion=new Kusto.Language.Symbols.OptionSymbol.ctor("query_max_entities_in_union","Overrides the default maximum number of columns a query is allowed to produce.",Kusto.Language.Symbols.ScalarTypes.Long);this.MaxMemoryConsumptionPerIterator=new Kusto.Language.Symbols.OptionSymbol.ctor("maxmemoryconsumptionperiterator","Overrides the default maximum amount of memory a query operator may allocate.",Kusto.Language.Symbols.ScalarTypes.Long);this.MaxMemoryConsumptionPerQueryPerNode=new Kusto.Language.Symbols.OptionSymbol.ctor("max_memory_consumption_per_query_per_node","Overrides the default maximum amount of memory a whole query may allocate per node.",Kusto.Language.Symbols.ScalarTypes.Long);this.MaxOutputColumns=new Kusto.Language.Symbols.OptionSymbol.ctor("maxoutputcolumns","Overrides the default maximum number of columns a query is allowed to produce.",Kusto.Language.Symbols.ScalarTypes.Long);this.NoRequestTimeout=new Kusto.Language.Symbols.OptionSymbol.ctor("norequesttimeout","Enables setting the request timeout to its maximum value. This option cannot be set via a set-statement.",Kusto.Language.Symbols.ScalarTypes.Bool);this.NoTruncation=new Kusto.Language.Symbols.OptionSymbol.ctor("notruncation","Enables suppressing truncation of the query results returned to the caller.",Kusto.Language.Symbols.ScalarTypes.Bool);this.ProgressiveProgressReportPeriod=new Kusto.Language.Symbols.OptionSymbol.$ctor1("query_results_progressive_update_period","Hint for Kusto as to how often to send progress frames (takes effect only if OptionResultsProgressiveEnabled is set)");this.ProgressiveQueryMinRowCountPerUpdate=new Kusto.Language.Symbols.OptionSymbol.$ctor1("query_results_progressive_row_count","Hint for Kusto as to how many records to send in each update (takes effect only if OptionResultsProgressiveEnabled is set)");this.PushSelectionThroughAggregation=new Kusto.Language.Symbols.OptionSymbol.ctor("push_selection_through_aggregation","If true, push simple selection through aggregation",Kusto.Language.Symbols.ScalarTypes.Bool);this.QueryBinAutoAt=new Kusto.Language.Symbols.OptionSymbol.$ctor1("query_bin_auto_at","When evaluating the bin_auto() function, the start value to use.");this.QueryBinAutoSize=new Kusto.Language.Symbols.OptionSymbol.$ctor1("query_bin_auto_size","When evaluating the bin_auto() function, the bin size value to use.");this.QueryCursorAfterDefault=new Kusto.Language.Symbols.OptionSymbol.ctor("query_cursor_after_default","The default parameter value of the cursor_after() function when called without parameters.",Kusto.Language.Symbols.ScalarTypes.String);this.QueryCursorBeforeOrAtDefault=new Kusto.Language.Symbols.OptionSymbol.ctor("query_cursor_before_or_at_default","The default parameter value of the cursor_before_or_at() function when called without parameters.",Kusto.Language.Symbols.ScalarTypes.String);this.QueryCursorCurrent=new Kusto.Language.Symbols.OptionSymbol.ctor("query_cursor_current","Overrides the cursor value returned by the cursor_current() or current_cursor() functions.",Kusto.Language.Symbols.ScalarTypes.String);this.QueryCursorDisabled=new Kusto.Language.Symbols.OptionSymbol.ctor("query_cursor_disabled","Disables usage of cursor functions in the context of the query.",Kusto.Language.Symbols.ScalarTypes.Bool);this.QueryCursorScopedTables=new Kusto.Language.Symbols.OptionSymbol.ctor("query_cursor_scoped_tables","List of table names that should be scoped to cursor_after_default .. cursor_before_or_at_default (upper bound is optional).",Kusto.Language.Symbols.ScalarTypes.Dynamic);this.QueryDataScope=new Kusto.Language.Symbols.OptionSymbol.ctor("query_datascope","Controls the query's datascope -- whether the query applies to all data or just part of it.",Kusto.Language.Symbols.ScalarTypes.String,System.Array.init(["'default'","'all'","'hotcache'"],System.String));this.QueryDateTimeScopeColumn=new Kusto.Language.Symbols.OptionSymbol.ctor("query_datetimescope_column","Controls the column name for the query's datetime scope (query_datetimescope_to / query_datetimescope_from).",Kusto.Language.Symbols.ScalarTypes.String);this.QueryDateTimeScopeFrom=new Kusto.Language.Symbols.OptionSymbol.ctor("query_datetimescope_from","Controls the query's datetime scope (earliest) -- used as auto-applied filter on query_datetimescope_column only (if defined).",Kusto.Language.Symbols.ScalarTypes.DateTime);this.QueryDateTimeScopeTo=new Kusto.Language.Symbols.OptionSymbol.ctor("query_datetimescope_to","Controls the query's datetime scope (latest) -- used as auto-applied filter on query_datetimescope_column only (if defined).",Kusto.Language.Symbols.ScalarTypes.DateTime);this.QueryDistributionNodesSpanSize=new Kusto.Language.Symbols.OptionSymbol.ctor("query_distribution_nodes_span","If set, controls the way the subquery merge behaves: the executing node will introduce an additional level\r\nin the query hierarchy for each subgroup of nodes; the size of the subgroup is set by this option.",Kusto.Language.Symbols.ScalarTypes.Int);this.QueryFanoutNodesPercent=new Kusto.Language.Symbols.OptionSymbol.ctor("query_fanout_nodes_percent","The percentage of nodes to fan out execution to.",Kusto.Language.Symbols.ScalarTypes.Int);this.QueryFanoutThreadsPercent=new Kusto.Language.Symbols.OptionSymbol.ctor("query_fanout_threads_percent","The percentage of threads to fan out execution to.",Kusto.Language.Symbols.ScalarTypes.Int);this.QueryForceRowLevelSecurity=new Kusto.Language.Symbols.OptionSymbol.ctor("query_force_row_level_security","If specified, forces Row Level Security rules, even if row_level_security policy is disabled",Kusto.Language.Symbols.ScalarTypes.Bool);this.QueryLanguage=new Kusto.Language.Symbols.OptionSymbol.ctor("query_language","Controls how the query text is to be interpreted.",Kusto.Language.Symbols.ScalarTypes.String,System.Array.init(["'csl'","'kql'","'sql'"],System.String));this.QueryLogQueryParameters=new Kusto.Language.Symbols.OptionSymbol.ctor("query_log_query_parameters","Enables logging of the query parameters, so that they can be viewed later in the `.show queries` journal.",Kusto.Language.Symbols.ScalarTypes.Bool);this.QueryNow=new Kusto.Language.Symbols.OptionSymbol.ctor("query_now","Overrides the datetime value returned by the now(0s) function.",Kusto.Language.Symbols.ScalarTypes.DateTime);this.QueryResultsApplyGetSchema=new Kusto.Language.Symbols.OptionSymbol.ctor("query_results_apply_getschema","If set, retrieves the schema of each tabular data in the results of the query instead of the data itself.",Kusto.Language.Symbols.ScalarTypes.Bool);this.QueryResultsCacheForceRefresh=new Kusto.Language.Symbols.OptionSymbol.ctor("query_results_cache_force_refresh","If set, forces query results cache refresh for a specific query. Must be used in combination with 'query_results_cache_max_age', and sent via ClientRequestProperties object (not as 'set' statement).",Kusto.Language.Symbols.ScalarTypes.Bool);this.QueryResultsCacheMaxAge=new Kusto.Language.Symbols.OptionSymbol.ctor("query_results_cache_max_age","If positive, controls the maximum age of the cached query results the service is allowed to return",Kusto.Language.Symbols.ScalarTypes.TimeSpan);this.QueryResultsCachePerShardEnabled=new Kusto.Language.Symbols.OptionSymbol.ctor("query_results_cache_per_shard","If set, enables per-shard query cache.",Kusto.Language.Symbols.ScalarTypes.Bool);this.QueryWeakConsistencySessionId=new Kusto.Language.Symbols.OptionSymbol.ctor("query_weakconsistency_session_id","Sets the query weak consistency session id. Takes effect when 'queryconsistency' mode is set to 'weakconsistency_by_session_id'.",Kusto.Language.Symbols.ScalarTypes.String);this.RequestAppName=new Kusto.Language.Symbols.OptionSymbol.ctor("request_app_name","Request application name to be used in the reporting (e.g. show queries).",Kusto.Language.Symbols.ScalarTypes.String);this.RequestBlockRowLevelSecurity=new Kusto.Language.Symbols.OptionSymbol.ctor("request_block_row_level_security","If specified, blocks access to tables for which row_level_security policy is enabled",Kusto.Language.Symbols.ScalarTypes.Bool);this.RequestCalloutDisabled=new Kusto.Language.Symbols.OptionSymbol.ctor("request_callout_disabled","If specified, indicates that the request can't call-out to a user-provided service.",Kusto.Language.Symbols.ScalarTypes.Bool);this.RequestDescription=new Kusto.Language.Symbols.OptionSymbol.ctor("request_description","Arbitrary text that the author of the request wants to include as the request description.",Kusto.Language.Symbols.ScalarTypes.String);this.RequestExternalTableDisabled=new Kusto.Language.Symbols.OptionSymbol.ctor("request_external_table_disabled","If specified, indicates that the request can't access external tables.",Kusto.Language.Symbols.ScalarTypes.Bool);this.RequestExternalDataDisabled=new Kusto.Language.Symbols.OptionSymbol.ctor("request_external_data_disabled","If specified, indicates that the request can't access external data (using externaldata operator) or external tables.",Kusto.Language.Symbols.ScalarTypes.Bool);this.RequestReadOnly=new Kusto.Language.Symbols.OptionSymbol.ctor("request_readonly","If specified, indicates that the request can't write anything.",Kusto.Language.Symbols.ScalarTypes.Bool);this.RequestRemoteEntitiesDisabled=new Kusto.Language.Symbols.OptionSymbol.ctor("request_remote_entities_disabled","If specified, indicates that the request can't access remote databases and clusters.",Kusto.Language.Symbols.ScalarTypes.Bool);this.RequestSandboxedExecutionDisabled=new Kusto.Language.Symbols.OptionSymbol.ctor("request_sandboxed_execution_disabled","If specified, indicates that the request can't invoke code in the sandbox.",Kusto.Language.Symbols.ScalarTypes.Bool);this.RequestUser=new Kusto.Language.Symbols.OptionSymbol.ctor("request_user","Request user to be used in the reporting (e.g. show queries).",Kusto.Language.Symbols.ScalarTypes.String);this.ResultsProgressiveEnabled=new Kusto.Language.Symbols.OptionSymbol.$ctor1("results_progressive_enabled","If set, enables the progressive query stream");this.ServerTimeout=new Kusto.Language.Symbols.OptionSymbol.ctor("servertimeout","Overrides the default request timeout. This option cannot be set via a set-statement.",Kusto.Language.Symbols.ScalarTypes.TimeSpan);this.TakeMaxRecords=new Kusto.Language.Symbols.OptionSymbol.ctor("query_take_max_records","Enables limiting query results to this number of records.",Kusto.Language.Symbols.ScalarTypes.Long);this.TruncationMaxRecords=new Kusto.Language.Symbols.OptionSymbol.ctor("truncationmaxrecords","Overrides the default maximum number of records a query is allowed to return to the caller (truncation).",Kusto.Language.Symbols.ScalarTypes.Long);this.TruncationMaxSize=new Kusto.Language.Symbols.OptionSymbol.ctor("truncationmaxsize","Overrides the default maximum data size a query is allowed to return to the caller (truncation).",Kusto.Language.Symbols.ScalarTypes.Long);this.ValidatePermissions=new Kusto.Language.Symbols.OptionSymbol.ctor("validate_permissions","Validates user's permissions to perform the query and doesn't run the query itself.",Kusto.Language.Symbols.ScalarTypes.Bool);this.V2NewlinesBetweenFrames=new Kusto.Language.Symbols.OptionSymbol.ctor("results_v2_newlines_between_frames","Adds new lines between frames in the results, in order to make it easier to parse them.",Kusto.Language.Symbols.ScalarTypes.Bool);this.V2FragmentPrimaryTables=new Kusto.Language.Symbols.OptionSymbol.ctor("results_v2_fragment_primary_tables","Causes primary tables to be sent in multiple fragments, each containing a subset of the rows.",Kusto.Language.Symbols.ScalarTypes.Bool);this.All=System.Array.init([Kusto.Language.Options.BestEffort,Kusto.Language.Options.DebugPython,Kusto.Language.Options.DeferPartialQueryFailures,Kusto.Language.Options.DoNotImpersonate,Kusto.Language.Options.ErrorReportingPlacement,Kusto.Language.Options.MaterializedViewShuffleQuery,Kusto.Language.Options.MaxEntitiesToUnion,Kusto.Language.Options.MaxMemoryConsumptionPerIterator,Kusto.Language.Options.MaxMemoryConsumptionPerQueryPerNode,Kusto.Language.Options.MaxOutputColumns,Kusto.Language.Options.NoRequestTimeout,Kusto.Language.Options.NoTruncation,Kusto.Language.Options.ProgressiveProgressReportPeriod,Kusto.Language.Options.ProgressiveQueryMinRowCountPerUpdate,Kusto.Language.Options.PushSelectionThroughAggregation,Kusto.Language.Options.QueryBinAutoAt,Kusto.Language.Options.QueryBinAutoSize,Kusto.Language.Options.QueryCursorAfterDefault,Kusto.Language.Options.QueryCursorBeforeOrAtDefault,Kusto.Language.Options.QueryCursorCurrent,Kusto.Language.Options.QueryCursorDisabled,Kusto.Language.Options.QueryCursorScopedTables,Kusto.Language.Options.QueryDataScope,Kusto.Language.Options.QueryDateTimeScopeColumn,Kusto.Language.Options.QueryDateTimeScopeFrom,Kusto.Language.Options.QueryDateTimeScopeTo,Kusto.Language.Options.QueryDistributionNodesSpanSize,Kusto.Language.Options.QueryFanoutNodesPercent,Kusto.Language.Options.QueryFanoutThreadsPercent,Kusto.Language.Options.QueryForceRowLevelSecurity,Kusto.Language.Options.QueryLanguage,Kusto.Language.Options.QueryLogQueryParameters,Kusto.Language.Options.QueryNow,Kusto.Language.Options.QueryResultsApplyGetSchema,Kusto.Language.Options.QueryResultsCacheForceRefresh,Kusto.Language.Options.QueryResultsCacheMaxAge,Kusto.Language.Options.QueryResultsCachePerShardEnabled,Kusto.Language.Options.QueryWeakConsistencySessionId,Kusto.Language.Options.RequestAppName,Kusto.Language.Options.RequestBlockRowLevelSecurity,Kusto.Language.Options.RequestCalloutDisabled,Kusto.Language.Options.RequestDescription,Kusto.Language.Options.RequestExternalTableDisabled,Kusto.Language.Options.RequestExternalDataDisabled,Kusto.Language.Options.RequestReadOnly,Kusto.Language.Options.RequestRemoteEntitiesDisabled,Kusto.Language.Options.RequestSandboxedExecutionDisabled,Kusto.Language.Options.RequestUser,Kusto.Language.Options.ResultsProgressiveEnabled,Kusto.Language.Options.ServerTimeout,Kusto.Language.Options.TakeMaxRecords,Kusto.Language.Options.TruncationMaxRecords,Kusto.Language.Options.TruncationMaxSize,Kusto.Language.Options.ValidatePermissions,Kusto.Language.Options.V2NewlinesBetweenFrames,Kusto.Language.Options.V2FragmentPrimaryTables],Kusto.Language.Symbols.OptionSymbol)}}}});Bridge.define("Kusto.Language.ParseOptions",{inherits:function(){return[System.IEquatable$1(Kusto.Language.ParseOptions)]},statics:{fields:{Default:null},ctors:{init:function(){this.Default=new Kusto.Language.ParseOptions(!0,!1,!1,Kusto.Language.ParserKind.Default)}}},props:{AlwaysProduceEndToken:!1,AllowLiteralsWithLineBreaks:!1,AllowNonAdjacentWildcardParts:!1,ParserKind:0},alias:["equalsT","System$IEquatable$1$Kusto$Language$ParseOptions$equalsT"],ctors:{ctor:function(alwaysProduceEndTokens,allowLiteralsWithLineBreaks,allowNonAdjacentWildcardParts,parserKind){this.$initialize();this.AlwaysProduceEndToken=alwaysProduceEndTokens;this.AllowLiteralsWithLineBreaks=allowLiteralsWithLineBreaks;this.AllowNonAdjacentWildcardParts=allowNonAdjacentWildcardParts;this.ParserKind=parserKind}},methods:{With:function(alwaysProduceEndTokens,allowLiteralsWithLineBreaks,allowNonAdjacentWildcardParts,parserKind){var $t,$t1,$t2,$t3;alwaysProduceEndTokens===void 0&&(alwaysProduceEndTokens=null);allowLiteralsWithLineBreaks===void 0&&(allowLiteralsWithLineBreaks=null);allowNonAdjacentWildcardParts===void 0&&(allowNonAdjacentWildcardParts=null);parserKind===void 0&&(parserKind=null);var newAlwaysProduceEndTokens=($t=alwaysProduceEndTokens,$t!=null?$t:this.AlwaysProduceEndToken),newAllowLiteralsWithLineBreaks=($t1=allowLiteralsWithLineBreaks,$t1!=null?$t1:this.AllowLiteralsWithLineBreaks),newAllowNonAdjacentWildcardParts=($t2=allowNonAdjacentWildcardParts,$t2!=null?$t2:this.AllowNonAdjacentWildcardParts),newParserKind=($t3=parserKind,$t3!=null?$t3:this.ParserKind);return newAlwaysProduceEndTokens!==this.AlwaysProduceEndToken||newAllowLiteralsWithLineBreaks!==this.AllowLiteralsWithLineBreaks||newAllowNonAdjacentWildcardParts!==this.AllowNonAdjacentWildcardParts||newParserKind!==this.ParserKind?new Kusto.Language.ParseOptions(newAlwaysProduceEndTokens,newAllowLiteralsWithLineBreaks,newAllowNonAdjacentWildcardParts,newParserKind):this},WithAlwaysProduceEndTokens:function(alwaysProduceEndTokens){return this.With(alwaysProduceEndTokens,void 0,void 0,void 0)},WithAllowLiteralsWithLineBreaks:function(allow){return this.With(void 0,allow,void 0,void 0)},WithAllowNonAdjacentWildcardParts:function(allow){return this.With(void 0,void 0,allow,void 0)},WithParserKind:function(kind){return this.With(void 0,void 0,void 0,kind)},equalsT:function(other){return this.EqualExceptForParseKind(other)&&other.ParserKind===this.ParserKind},EqualExceptForParseKind:function(other){return other.AlwaysProduceEndToken===this.AlwaysProduceEndToken&&other.AllowLiteralsWithLineBreaks===this.AllowLiteralsWithLineBreaks&&other.AllowNonAdjacentWildcardParts===this.AllowNonAdjacentWildcardParts}}});Bridge.define("Kusto.Language.ParserKind",{$kind:"enum",statics:{fields:{Grammar:0,Default:1}}});Bridge.define("Kusto.Language.Parsing.AllowedNameKind",{$kind:"enum",statics:{fields:{DeclaredOrKnown:0,KnownOnly:1,DeclaredOnly:2}}});Bridge.define("Kusto.Language.Parsing.ApplyKind",{$kind:"enum",statics:{fields:{One:0,ZeroOrOne:1,ZeroOrMore:2}}});Bridge.define("Kusto.Language.Parsing.Parser$1",function(TInput){return{fields:{description:null},props:{Tag:null,Annotations:null,Description:{get:function(){return this.description==null&&(this.description=System.String.isNullOrEmpty(this.Tag)?Kusto.Language.Parsing.Describer.Describe(TInput,this):System.String.format("{0}: {1}",this.Tag,Kusto.Language.Parsing.Describer.Describe(TInput,this.WithTag(null)))),this.description}},IsHidden:!1,IsOptional:{get:function(){return!1}},IsRequired:{get:function(){return!1}},IsAlternation:{get:function(){return!1}},IsSequence:{get:function(){return!1}},IsRepetition:{get:function(){return!1}},IsMatch:{get:function(){return!1}},IsForward:{get:function(){return!1}},IsNegation:{get:function(){return!1}},IsConditional:{get:function(){return!1}}},ctors:{init:function(){this.Tag="";this.Annotations=Kusto.Language.Utils.EmptyReadOnlyList$1(System.Object).Instance;this.IsHidden=!1}},methods:{WithTag:function(tag){var $t,clone;return tag=($t=tag,$t!=null?$t:""),Bridge.referenceEquals(tag,this.Tag)?this:(clone=this.Clone(),clone.Tag=tag,clone.Annotations=this.Annotations,clone.IsHidden=this.IsHidden,clone)},WithAnnotations:function(annotations){var list=Kusto.Language.Utils.ListExtensions.ToReadOnly(System.Object,annotations),clone;return Bridge.referenceEquals(this.Annotations,list)?this:(clone=this.Clone(),clone.Annotations=list,clone.Tag=this.Tag,clone.IsHidden=this.IsHidden,clone)},WithIsHidden:function(isHidden){if(isHidden!==this.IsHidden){var clone=this.Clone();return clone.IsHidden=isHidden,clone.Tag=this.Tag,clone.Annotations=this.Annotations,clone}else return this},Hide:function(){return this.WithIsHidden(!0)},GetChildParserIndex:function(childParser){for(var childCount=this.ChildParserCount,i=0;i<childCount;i=i+1|0)if(Bridge.referenceEquals(this.GetChildParser(i),childParser))return i;return-1}}}});Bridge.define("Kusto.Language.Parsing.CommandGrammar",{statics:{fields:{s_recentGrammar:null,s_defaultCommandGrammar:null,UnknownCommandToken:null,UnknownCommand:null,CommandLimiter:null,BadCommand:null},ctors:{init:function(){this.UnknownCommandToken=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxToken,[Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.BarToken),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.LessThanBarToken),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.EndOfTextToken),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.SemicolonToken)])),Kusto.Language.Parsing.SyntaxParsers.AnyToken);this.UnknownCommand=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SyntaxToken),Kusto.Language.Syntax.Command,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.DotToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).OneOrMore$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SyntaxToken),Kusto.Language.Parsing.CommandGrammar.UnknownCommandToken,function(tokens){return new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SyntaxToken).$ctor1)(tokens)}),function(dot,parts){return Bridge.cast(new Kusto.Language.Syntax.UnknownCommand(dot,parts),Kusto.Language.Syntax.Command)}).WithTag$1("<unknown-command>");this.CommandLimiter=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Match$2(function(source,start){for(var pos=start+1|0;!source.IsEnd(pos)&&!Kusto.Language.Parsing.CommandGrammar.IsPossibleStartOfCommand(source.Peek(pos));)pos=pos+1|0;return pos-start|0});this.BadCommand=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Command,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.DotToken),function(dot){return Bridge.cast(new Kusto.Language.Syntax.BadCommand(dot,System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingCommand()],Kusto.Language.Diagnostic)),Kusto.Language.Syntax.Command)}).WithTag$1("<bad-command>")}},methods:{From:function(globals){var grammar,foundInCache,recent,newRecent;return Bridge.referenceEquals(globals.ServerKind,Kusto.Language.GlobalState.Default.ServerKind)?Kusto.Language.Parsing.CommandGrammar.GetDefaultCommandGrammar():(grammar={v:null},foundInCache=!1,globals.Cache!=null&&(foundInCache=globals.Cache.TryGetValue(Kusto.Language.Parsing.CommandGrammar,grammar)),grammar.v==null&&(recent=Kusto.Language.Parsing.CommandGrammar.s_recentGrammar,recent!=null&&Bridge.referenceEquals(recent.ServerKind,globals.ServerKind)?grammar.v=recent.Grammar:(grammar.v=Kusto.Language.Parsing.CommandGrammar.CreateCommandGrammar(globals),newRecent=new Kusto.Language.Parsing.CommandGrammar.RecentGrammar(globals.ServerKind,grammar.v),Kusto.Language.Utils.Interlocked.CompareExchange(Kusto.Language.Parsing.CommandGrammar.RecentGrammar,Bridge.ref(Kusto.Language.Parsing.CommandGrammar,"s_recentGrammar"),newRecent,recent))),globals.Cache==null||foundInCache||(grammar.v=globals.Cache.GetOrCreate$1(Kusto.Language.Parsing.CommandGrammar,function(){return grammar.v})),grammar.v)},GetDefaultCommandGrammar:function(){if(Kusto.Language.Parsing.CommandGrammar.s_defaultCommandGrammar==null){var grammar=Kusto.Language.Parsing.CommandGrammar.CreateCommandGrammar(Kusto.Language.GlobalState.Default);Kusto.Language.Utils.Interlocked.CompareExchange(Kusto.Language.Parsing.CommandGrammar,Bridge.ref(Kusto.Language.Parsing.CommandGrammar,"s_defaultCommandGrammar"),grammar,null)}return Kusto.Language.Parsing.CommandGrammar.s_defaultCommandGrammar},CreateCommandGrammar:function(globals){switch(globals.ServerKind){case Kusto.Language.ServerKinds.Engine:return new Kusto.Language.Parsing.EngineCommandGrammar(globals);case Kusto.Language.ServerKinds.DataManager:return new Kusto.Language.Parsing.DataManagerCommandGrammar(globals);case Kusto.Language.ServerKinds.ClusterManager:return new Kusto.Language.Parsing.ClusterManagerCommandGrammar(globals);case Kusto.Language.ServerKinds.AriaBridge:return new Kusto.Language.Parsing.AriaBridgeCommandGrammar(globals);default:return new Kusto.Language.Parsing.CommandGrammar(globals)}},IsBetterSyntax:function(command1,command2){if(!command1.ContainsSyntaxDiagnostics&&!command2.ContainsSyntaxDiagnostics||command1.ContainsSyntaxDiagnostics&&!command2.ContainsSyntaxDiagnostics)return!1;if(!command1.ContainsSyntaxDiagnostics&&command2.ContainsSyntaxDiagnostics)return!0;var dx1=command1.GetContainedSyntaxDiagnostics(),dx2=command2.GetContainedSyntaxDiagnostics();return System.Array.getItem(dx1,0,Kusto.Language.Diagnostic).Start>System.Array.getItem(dx2,0,Kusto.Language.Diagnostic).Start?!0:(System.Array.getItem(dx1,0,Kusto.Language.Diagnostic).Start<System.Array.getItem(dx2,0,Kusto.Language.Diagnostic).Start,!1)},IsPossibleStartOfCommand:function(token,isFirstToken){if(isFirstToken===void 0&&(isFirstToken=!1),token.Kind===Kusto.Language.Syntax.SyntaxKind.DotToken)if(Kusto.Language.Parsing.TextFacts.HasLineBreaks(token.Trivia)){var lastLineStart=Kusto.Language.Parsing.TextFacts.GetLastLineBreakEnd(token.Trivia);if(lastLineStart>=0&&Kusto.Language.Parsing.TextFacts.IsWhitespaceOnly$1(token.Trivia,lastLineStart,token.Trivia.length-lastLineStart|0))return!0}else if(isFirstToken&&(token.Trivia.length===0||Kusto.Language.Parsing.TextFacts.IsWhitespaceOnly(token.Trivia)))return!0;return!1},CreateMissingCommandStatement:function(source,start){return new Kusto.Language.Syntax.ExpressionStatement(new Kusto.Language.Syntax.BadCommand(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.DotToken),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingCommand()],Kusto.Language.Diagnostic)))},Custom$9:function(parsers,shape){return shape===void 0&&(shape=null),shape==null&&(shape=Kusto.Language.Syntax.CustomNode.GetDefaultShape(System.Array.getCount(parsers,Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)))),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Produce(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Sequence$1(parsers),function(items){return Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape,System.Linq.Enumerable.from(items).select(function(x){return Bridge.cast(x,Kusto.Language.Syntax.SyntaxElement)}).ToArray(Kusto.Language.Syntax.SyntaxElement)),Kusto.Language.Syntax.SyntaxElement)})},Custom$8:function(parser,shape){return shape===void 0&&(shape=null),Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([parser],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),shape!=null?System.Array.init([shape],Kusto.Language.Syntax.CustomElementDescriptor):null)},Custom$7:function(parser1,parser2,shape){return shape===void 0&&(shape=null),Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([parser1,parser2],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),shape)},Custom$6:function(parser1,parser2,parser3,shape){return shape===void 0&&(shape=null),Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([parser1,parser2,parser3],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),shape)},Custom$5:function(parser1,parser2,parser3,parser4,shape){return shape===void 0&&(shape=null),Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([parser1,parser2,parser3,parser4],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),shape)},Custom$4:function(parser1,parser2,parser3,parser4,parser5,shape){return shape===void 0&&(shape=null),Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([parser1,parser2,parser3,parser4,parser5],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),shape)},Custom$3:function(parser1,parser2,parser3,parser4,parser5,parser6,shape){return shape===void 0&&(shape=null),Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([parser1,parser2,parser3,parser4,parser5,parser6],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),shape)},Custom$2:function(parser1,parser2,parser3,parser4,parser5,parser6,parser7,shape){return shape===void 0&&(shape=null),Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([parser1,parser2,parser3,parser4,parser5,parser6,parser7],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),shape)},Custom$1:function(parser1,parser2,parser3,parser4,parser5,parser6,parser7,parser8,shape){return shape===void 0&&(shape=null),Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([parser1,parser2,parser3,parser4,parser5,parser6,parser7,parser8],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),shape)},Custom:function(parser1,parser2,parser3,parser4,parser5,parser6,parser7,parser8,parser9,shape){return shape===void 0&&(shape=null),Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([parser1,parser2,parser3,parser4,parser5,parser6,parser7,parser8,parser9],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),shape)},CD$1:function(name,hint,isOptional){return hint===void 0&&(hint=524288),isOptional===void 0&&(isOptional=!1),Kusto.Language.Syntax.CustomElementDescriptor.From$2(name,hint,isOptional)},CD:function(hint,isOptional){return hint===void 0&&(hint=524288),isOptional===void 0&&(isOptional=!1),Kusto.Language.Syntax.CustomElementDescriptor.From(hint,isOptional)},Command:function(commandName,contentParser){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Syntax.Command,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.DotToken),contentParser,function(dot,custom){return Bridge.cast(new Kusto.Language.Syntax.CustomCommand(commandName,dot,custom),Kusto.Language.Syntax.Command)}).WithTag$1(System.String.format("<{0}>",[commandName]))},CreateMissingToken$1:function(text){return Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken$3(text)},CreateMissingToken:function(texts){return Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken$2(texts)},CreateMissingToken$2:function(texts){return texts===void 0&&(texts=[]),Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken$2(texts)},Token$1:function(text,asKind,ckind){var $t;return asKind===void 0&&(asKind=null),ckind===void 0&&(ckind=null),Kusto.Language.Parsing.SyntaxParsers.Token$5(text,asKind,($t=ckind,$t!=null?$t:Kusto.Language.Parsing.SyntaxParsers.GetCompletionKind$1(text,Kusto.Language.Editor.CompletionKind.Keyword))).Cast(Kusto.Language.Syntax.SyntaxElement)},Token:function(text,ckind){return Kusto.Language.Parsing.SyntaxParsers.Token$5(text,null,ckind).Cast(Kusto.Language.Syntax.SyntaxElement)},Token$2:function(texts){return texts===void 0&&(texts=[]),Kusto.Language.Parsing.SyntaxParsers.Token$3(texts,Kusto.Language.Editor.CompletionKind.Keyword,3).Cast(Kusto.Language.Syntax.SyntaxElement)},RequiredToken:function(text,asKind,ckind){return asKind===void 0&&(asKind=null),ckind===void 0&&(ckind=null),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1(text,asKind,ckind),function(){return Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(text)})},RequiredToken$1:function(texts){return texts===void 0&&(texts=[]),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$2(texts),function(){return Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$2(texts)})},ZeroOrMoreList:function(elementParser,separatorParser,fnMissingElement,allowTrailingSeparator){return separatorParser===void 0&&(separatorParser=null),fnMissingElement===void 0&&(fnMissingElement=null),allowTrailingSeparator===void 0&&(allowTrailingSeparator=!1),separatorParser!=null?Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).OList(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Syntax.SyntaxElement,elementParser,separatorParser,null,null,null,fnMissingElement,null,!1,allowTrailingSeparator,function(list){return Bridge.cast(Kusto.Language.Parsing.SyntaxParsers.MakeSeparatedList$1(Kusto.Language.Syntax.SyntaxElement,list),Kusto.Language.Syntax.SyntaxElement)}):Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).List$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Syntax.SyntaxElement,elementParser,null,!1,function(elements){return Bridge.cast(new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SyntaxElement).ctor)(System.Linq.Enumerable.from(elements).ofType(Kusto.Language.Syntax.SyntaxElement).ToArray(Kusto.Language.Syntax.SyntaxElement)),Kusto.Language.Syntax.SyntaxElement)})},ZeroOrMoreCommaList:function(elementParser,fnMissingElement,allowTrailingSeparator){return fnMissingElement===void 0&&(fnMissingElement=null),allowTrailingSeparator===void 0&&(allowTrailingSeparator=!1),Kusto.Language.Parsing.CommandGrammar.ZeroOrMoreList(elementParser,Kusto.Language.Parsing.CommandGrammar.Token$1(","),fnMissingElement,allowTrailingSeparator)},OneOrMoreList:function(elementParser,separatorParser,fnMissingElement,allowTrailingSeparator){return separatorParser===void 0&&(separatorParser=null),fnMissingElement===void 0&&(fnMissingElement=null),allowTrailingSeparator===void 0&&(allowTrailingSeparator=!1),separatorParser!=null?Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).OList(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Syntax.SyntaxElement,elementParser,separatorParser,null,null,null,fnMissingElement,null,!0,allowTrailingSeparator,function(list){return Bridge.cast(Kusto.Language.Parsing.SyntaxParsers.MakeSeparatedList$1(Kusto.Language.Syntax.SyntaxElement,list),Kusto.Language.Syntax.SyntaxElement)}):Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).List$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Syntax.SyntaxElement,elementParser,null,!0,function(elements){return Bridge.cast(new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SyntaxElement).ctor)(System.Linq.Enumerable.from(elements).ofType(Kusto.Language.Syntax.SyntaxElement).ToArray(Kusto.Language.Syntax.SyntaxElement)),Kusto.Language.Syntax.SyntaxElement)})},OneOrMoreCommaList:function(elementParser,fnMissingElement,allowTrailingSeparator){return fnMissingElement===void 0&&(fnMissingElement=null),allowTrailingSeparator===void 0&&(allowTrailingSeparator=!1),Kusto.Language.Parsing.CommandGrammar.OneOrMoreList(elementParser,Kusto.Language.Parsing.CommandGrammar.Token$1(","),fnMissingElement,allowTrailingSeparator)}}},props:{Globals:null,CommandBlock:null,PredefinedRules:null},ctors:{ctor:function(globals){var $t,$t1,commandStatement,commandBlockSkippedTokens,scriptElement;this.$initialize();var queryInputCore=null,scriptInputCore=null,queryInput=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Forward(Kusto.Language.Syntax.SyntaxElement,function(){return queryInputCore}).WithTag$1("<query-input>"),scriptInput=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Forward(Kusto.Language.Syntax.SyntaxElement,function(){return scriptInputCore}).WithTag$1("<script-input>"),queryParser=Kusto.Language.Parsing.QueryGrammar.From(globals),rules=($t=new Kusto.Language.Parsing.PredefinedRuleParsers(queryParser,queryInput,scriptInput),this.PredefinedRules=$t,$t),commandParsers=($t1=Kusto.Language.Parsing.Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Command),System.Linq.Enumerable.from(this.CreateCommandParsers(rules),$t1).ToArray($t1)),bestCommand=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Best$2(Kusto.Language.Syntax.Command,commandParsers,function(command1,command2){return Kusto.Language.Parsing.CommandGrammar.IsBetterSyntax(command1,command2)}),commandSkippedTokens=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SkippedTokens,Kusto.Language.Parsing.CommandGrammar.UnknownCommandToken,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SyntaxToken),Kusto.Language.Syntax.SkippedTokens,Kusto.Language.Parsing.SyntaxParsers.List(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.CommandGrammar.UnknownCommandToken),function(tokens){return new Kusto.Language.Syntax.SkippedTokens(tokens)})),commandAndSkippedTokens=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyOptional(Kusto.Language.Syntax.Command,bestCommand,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$10(Kusto.Language.Syntax.Command,Kusto.Language.Syntax.SkippedTokens,Kusto.Language.Syntax.Command,_left,commandSkippedTokens,function(cmd,skippedTokens){return Bridge.cast(new Kusto.Language.Syntax.CommandAndSkippedTokens(cmd,skippedTokens),Kusto.Language.Syntax.Command)})}),command=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Command,[commandAndSkippedTokens,Kusto.Language.Parsing.CommandGrammar.UnknownCommand,Kusto.Language.Parsing.CommandGrammar.BadCommand]).WithTag$1("<command>"),commandPipeExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyZeroOrMore(Kusto.Language.Syntax.Expression,command.Cast(Kusto.Language.Syntax.Expression),function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.QueryOperator,Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.BarToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.QueryOperator,queryParser.FollowingPipeElementExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingQueryOperator),function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.PipeExpression(left,op,right),Kusto.Language.Syntax.Expression)}).WithTag("<command-pipe-expression>")});queryInputCore=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.DotToken),commandPipeExpression.Cast(Kusto.Language.Syntax.SyntaxElement)),queryParser.StatementList.Cast(Kusto.Language.Syntax.SyntaxElement)]);commandStatement=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.Statement,commandPipeExpression,function(cmd){return Bridge.cast(new Kusto.Language.Syntax.ExpressionStatement(cmd),Kusto.Language.Syntax.Statement)});commandBlockSkippedTokens=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SkippedTokens,Kusto.Language.Parsing.SyntaxParsers.AnyTokenButEnd,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SyntaxToken),Kusto.Language.Syntax.SkippedTokens,Kusto.Language.Parsing.SyntaxParsers.List(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.SyntaxParsers.AnyTokenButEnd),function(tokens){return new Kusto.Language.Syntax.SkippedTokens(tokens)}));this.CommandBlock=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)),Kusto.Language.Syntax.SkippedTokens,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.CommandBlock,Kusto.Language.Parsing.SyntaxParsers.SeparatedList(Kusto.Language.Syntax.Statement,commandStatement,Kusto.Language.Syntax.SyntaxKind.SemicolonToken,queryParser.Statement,Kusto.Language.Parsing.CommandGrammar.CreateMissingCommandStatement,Kusto.Language.Parsing.SyntaxParsers.EndOfText,!0,!0),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SkippedTokens,commandBlockSkippedTokens),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.EndOfTextToken)),function(statements,skipped,end){return new Kusto.Language.Syntax.CommandBlock(statements,skipped,end)});scriptElement=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxElement,commandPipeExpression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.SemicolonToken)),function(cmd,semi){return Bridge.cast(new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression))(cmd,semi),Kusto.Language.Syntax.SyntaxElement)});scriptInputCore=Kusto.Language.Parsing.CommandGrammar.OneOrMoreList(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Limit(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.CommandLimiter,scriptElement),void 0,Kusto.Language.Parsing.CommandGrammar.CreateMissingCommandStatement,!1)}},methods:{CreateCommandParsers:function(rules){return System.Array.init(0,null,Kusto.Language.Parsing.Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Command))}}});Bridge.define("Kusto.Language.Parsing.Source$1",function(T){return{}});Bridge.define("Kusto.Language.Parsing.CharScanners",{statics:{fields:{Letter:null,Digit:null,HexDigit:null,Whitespace:null,LineBreak:null},ctors:{init:function(){this.Letter=Kusto.Language.Parsing.Parsers$1(System.Char).Match$3(Kusto.Language.Parsing.TextFacts.IsLetter).WithTag("<letter>");this.Digit=Kusto.Language.Parsing.Parsers$1(System.Char).Match$3(Kusto.Language.Parsing.TextFacts.IsDigit).WithTag("<digit>");this.HexDigit=Kusto.Language.Parsing.Parsers$1(System.Char).Match$3(Kusto.Language.Parsing.TextFacts.IsHexDigit).WithTag("<hex-digit>");this.Whitespace=Kusto.Language.Parsing.Parsers$1(System.Char).Match$3(Kusto.Language.Parsing.TextFacts.IsWhitespace).WithTag("<whitespace>");this.LineBreak=Kusto.Language.Parsing.Parsers$1(System.Char).Or([Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.CharScanners.Char(13),Kusto.Language.Parsing.Parsers$1(System.Char).Optional(Kusto.Language.Parsing.CharScanners.Char(10))]),Kusto.Language.Parsing.CharScanners.Char(10),Kusto.Language.Parsing.CharScanners.Char(8232),Kusto.Language.Parsing.CharScanners.Char(8233)]).WithTag("<line-break>")}},methods:{Chars:function(text,ignoreCase){return ignoreCase===void 0&&(ignoreCase=!1),Kusto.Language.Parsing.Parsers$1(System.Char).Match$5(text,ignoreCase)},Char:function(ch,ignoreCase){return ignoreCase===void 0&&(ignoreCase=!1),Kusto.Language.Parsing.Parsers$1(System.Char).Match$4(ch,ignoreCase)}}}});Bridge.define("Kusto.Language.Parsing.CommandGrammar.RecentGrammar",{$kind:"nested class",props:{ServerKind:null,Grammar:null},ctors:{ctor:function(serverKind,grammar){this.$initialize();this.ServerKind=serverKind;this.Grammar=grammar}}});Bridge.define("Kusto.Language.Parsing.Describer",{statics:{methods:{Describe:function(TInput,parser,showRequired){showRequired===void 0&&(showRequired=!0);var builder=new(Kusto.Language.Parsing.Describer.Writer$1(TInput))(showRequired);return builder.Visit(parser),builder.toString()}}}});Bridge.define("Kusto.Language.Parsing.ParserVisitor$1",function(TInput){return{}});Bridge.define("Kusto.Language.Parsing.DirectiveGrammar",{statics:{fields:{DirectiveBlock:null},ctors:{init:function(){this.DirectiveBlock=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SyntaxToken),Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.DirectiveBlock,Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.DirectiveToken),Kusto.Language.Parsing.SyntaxParsers.List(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.SyntaxParsers.AnyTokenButEnd),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.EndOfTextToken)),function(directive,list,end){return new Kusto.Language.Syntax.DirectiveBlock(directive,list,end)})}}}});Bridge.define("Kusto.Language.Parsing.ElementAndSeparator$2",function(TElement,TSeparator){return{$kind:"struct",statics:{methods:{getDefaultValue:function(){return new(Kusto.Language.Parsing.ElementAndSeparator$2(TElement,TSeparator))}}},props:{Element:Bridge.getDefaultValue(TElement),Separator:Bridge.getDefaultValue(TSeparator)},ctors:{$ctor1:function(element,separator){if(separator===void 0&&(separator=Bridge.getDefaultValue(TSeparator)),this.$initialize(),element==null)throw new System.ArgumentNullException.$ctor1("element");this.Element=element;this.Separator=separator},ctor:function(){this.$initialize()}},methods:{getHashCode:function(){return Bridge.addHash([6275862524,this.Element,this.Separator])},equals:function(o){return Bridge.is(o,Kusto.Language.Parsing.ElementAndSeparator$2(TElement,TSeparator))?Bridge.equals(this.Element,o.Element)&&Bridge.equals(this.Separator,o.Separator):!1},$clone:function(to){return this}}}});Bridge.define("Kusto.Language.Parsing.OffsetValue$1",function(TValue){return{$kind:"struct",statics:{methods:{getDefaultValue:function(){return new(Kusto.Language.Parsing.OffsetValue$1(TValue))}}},fields:{Offset:0,Value:Bridge.getDefaultValue(TValue)},ctors:{$ctor1:function(offset,value){this.$initialize();this.Offset=offset;this.Value=value},ctor:function(){this.$initialize()}},methods:{getHashCode:function(){return Bridge.addHash([3575795744,this.Offset,this.Value])},equals:function(o){return Bridge.is(o,Kusto.Language.Parsing.OffsetValue$1(TValue))?Bridge.equals(this.Offset,o.Offset)&&Bridge.equals(this.Value,o.Value):!1},$clone:function(to){var s=to||new(Kusto.Language.Parsing.OffsetValue$1(TValue));return s.Offset=this.Offset,s.Value=this.Value,s}}}});Bridge.define("Kusto.Language.Parsing.ParseResult$1",function(TOutput){return{$kind:"struct",statics:{methods:{getDefaultValue:function(){return new(Kusto.Language.Parsing.ParseResult$1(TOutput))}}},props:{Length:0,Value:Bridge.getDefaultValue(TOutput),Succeeded:{get:function(){return this.Length>=0}}},ctors:{$ctor1:function(length,value){this.$initialize();this.Length=length;this.Value=value},ctor:function(){this.$initialize()}},methods:{getHashCode:function(){return Bridge.addHash([3880525866,this.Length,this.Value])},equals:function(o){return Bridge.is(o,Kusto.Language.Parsing.ParseResult$1(TOutput))?Bridge.equals(this.Length,o.Length)&&Bridge.equals(this.Value,o.Value):!1},$clone:function(to){return this}}}});Bridge.define("Kusto.Language.Parsing.ParserExtensions",{statics:{methods:{Parse$1:function(parser,text,output){return parser.Parse(new Kusto.Language.Parsing.TextSource.ctor(text),0,output,0)},Parse:function(TOutput,parser,text){return parser.Parse$1(new Kusto.Language.Parsing.TextSource.ctor(text),0)},TryParse:function(TOutput,parser,text,value){var result=Kusto.Language.Parsing.ParserExtensions.Parse(TOutput,parser,text);return value.v=result.Value,result.Length>0}}}});Bridge.define("Kusto.Language.Parsing.Parsers$1",function(TInput){return{statics:{fields:{Any:null},ctors:{init:function(){this.Any=Kusto.Language.Parsing.Parsers$1(TInput).Match$3(function(t){return!0}).WithTag("<any>")}},methods:{And:function(parsers){return parsers===void 0&&(parsers=[]),new(Kusto.Language.Parsing.SequenceParser$1(TInput))(parsers)},Apply:function(TLeft,TOutput,leftParser,fnRightParser){return new(Kusto.Language.Parsing.ApplyParser$3(TInput,TLeft,TOutput).$ctor1)(Kusto.Language.Parsing.ApplyKind.One,leftParser,fnRightParser(Bridge.getDefaultValue(Kusto.Language.Parsing.Parsers$1.LeftValue$1(TInput,TLeft))))},ApplyOptional:function(TOutput,leftParser,fnRightParser){return new(Kusto.Language.Parsing.ApplyParser$3(TInput,TOutput,TOutput).$ctor1)(Kusto.Language.Parsing.ApplyKind.ZeroOrOne,leftParser,fnRightParser(Bridge.getDefaultValue(Kusto.Language.Parsing.Parsers$1.LeftValue$1(TInput,TOutput))))},ApplyZeroOrMore:function(TOutput,leftParser,fnRightParser){return new(Kusto.Language.Parsing.ApplyParser$3(TInput,TOutput,TOutput).$ctor1)(Kusto.Language.Parsing.ApplyKind.ZeroOrMore,leftParser,fnRightParser(Bridge.getDefaultValue(Kusto.Language.Parsing.Parsers$1.LeftValue$1(TInput,TOutput))))},Best:function(parsers){return parsers===void 0&&(parsers=[]),new(Kusto.Language.Parsing.BestParser$1(TInput))(parsers)},Best$1:function(TOutput,parsers){return parsers===void 0&&(parsers=[]),new(Kusto.Language.Parsing.BestParser$2(TInput,TOutput))(parsers)},Best$2:function(TOutput,parsers,fnBetter){return new(Kusto.Language.Parsing.BestParser$2(TInput,TOutput))(parsers,fnBetter)},Best$3:function(TOutput,parsers){return parsers===void 0&&(parsers=[]),new(Kusto.Language.Parsing.RightParser$2(TInput,TOutput).$ctor1)(new(Kusto.Language.Parsing.BestParser$2(TInput,TOutput))(System.Linq.Enumerable.from(parsers,Kusto.Language.Parsing.RightParser$2(TInput,TOutput)).select(function(p){return p.Parser}).ToArray(Kusto.Language.Parsing.Parser$2(TInput,TOutput))))},Convert$1:function(TOutput,pattern,producer){return new(Kusto.Language.Parsing.ConvertParser$2(TInput,TOutput).ctor)(pattern,producer)},Convert$3:function(TOutput,pattern,producer){return new(Kusto.Language.Parsing.ConvertParser$2(TInput,TOutput).$ctor3)(pattern,producer)},Convert$4:function(TOutput,pattern,producer){return Kusto.Language.Parsing.Parsers$1(System.Char).Convert$1(TOutput,pattern,function(source,start,length){var ts,builder,i;if((ts=Bridge.as(source,Kusto.Language.Parsing.TextSource))!=null)return producer(ts.PeekText$1(start,length));else{for(builder=new System.Text.StringBuilder,i=0;i<length;i=i+1|0)builder.append(String.fromCharCode(source.Peek(start+i|0)));return producer(builder.toString())}})},Convert$2:function(TOutput,pattern,producer){return new(Kusto.Language.Parsing.ConvertParser$2(TInput,TOutput).$ctor2)(pattern,producer)},Convert:function(TOutput,pattern,value){return Kusto.Language.Parsing.Parsers$1(TInput).Convert$2(TOutput,pattern,function(t){return value})},Count:function(scanner){return Kusto.Language.Parsing.Parsers$1(TInput).Convert$1(System.Int32,scanner,function(source,start,length){return length})},Fails:function(parser){return new(Kusto.Language.Parsing.FailsParser$1(TInput))(parser)},First$1:function(TOutput,parsers){return parsers===void 0&&(parsers=[]),new(Kusto.Language.Parsing.FirstParser$2(TInput,TOutput))(parsers)},First:function(parsers){return parsers===void 0&&(parsers=[]),new(Kusto.Language.Parsing.FirstParser$1(TInput))(parsers)},First$2:function(TOutput,parsers){return parsers===void 0&&(parsers=[]),new(Kusto.Language.Parsing.RightParser$2(TInput,TOutput).$ctor1)(new(Kusto.Language.Parsing.FirstParser$2(TInput,TOutput))(System.Linq.Enumerable.from(parsers,Kusto.Language.Parsing.RightParser$2(TInput,TOutput)).select(function(p){return p.Parser}).ToArray(Kusto.Language.Parsing.Parser$2(TInput,TOutput))))},Forward:function(TOutput,deferredParser){return new(Kusto.Language.Parsing.ForwardParser$2(TInput,TOutput))(deferredParser)},If$1:function(TOutput,test,parser){return new(Kusto.Language.Parsing.IfParser$2(TInput,TOutput))(test,parser)},If$2:function(TOutput,test,parser){return new(Kusto.Language.Parsing.RightParser$2(TInput,TOutput).$ctor1)(new(Kusto.Language.Parsing.IfParser$2(TInput,TOutput))(test,parser.Parser))},If:function(test,parser){return new(Kusto.Language.Parsing.IfParser$1(TInput))(test,parser)},Limit:function(TOutput,limiter,limited){return new(Kusto.Language.Parsing.LimitParser$2(TInput,TOutput))(limiter,limited)},List:function(TElement,TProducer,elementParser,oneOrMore,producer){return Kusto.Language.Parsing.Parsers$1(TInput).List$1(TElement,TProducer,elementParser,null,oneOrMore,producer)},List$1:function(TElement,TProducer,elementParser,fnMissingElement,oneOrMore,producer){if(oneOrMore)if(Bridge.staticEquals(fnMissingElement,null))return Kusto.Language.Parsing.Parsers$1(TInput).OneOrMore$1(TElement,TProducer,elementParser,producer);else{var requiredElement=Kusto.Language.Parsing.Parsers$1(TInput).Required$1(TElement,elementParser,fnMissingElement);return Kusto.Language.Parsing.Parsers$1(TInput).Produce$1(TElement,TProducer,Kusto.Language.Parsing.Parsers$1(TInput).Sequence([requiredElement,Kusto.Language.Parsing.Parsers$1(TInput).ZeroOrMore(elementParser)]),producer)}else return Kusto.Language.Parsing.Parsers$1(TInput).ZeroOrMore$1(TElement,TProducer,elementParser,producer)},List$3:function(TElement,TSeparator,TProducer,elementParser,separatorParser,secondaryElementParser,fnMissingElement,fnMissingSeparator,fnMissingSecondaryElement,endOfList,oneOrMore,allowTrailingSeparator,producer){return Kusto.Language.Parsing.Parsers$1(TInput).OList(TElement,TSeparator,TProducer,elementParser,separatorParser,secondaryElementParser,fnMissingElement,fnMissingSeparator,fnMissingSecondaryElement,endOfList,oneOrMore,allowTrailingSeparator,function(list){return Kusto.Language.Parsing.Parsers$1.ElementAndSeparatorProducer$3(TInput,TElement,TSeparator,TProducer).Produce(list,producer)})},List$5:function(TElement,TSeparator,TProducer,elementParser,separatorParser,fnMissingElement,fnMissingSeparator,endOfList,oneOrMore,allowTrailingSeparator,producer){return Kusto.Language.Parsing.Parsers$1(TInput).List$3(TElement,TSeparator,TProducer,elementParser,separatorParser,elementParser,fnMissingElement,fnMissingSeparator,fnMissingElement,endOfList,oneOrMore,allowTrailingSeparator,producer)},List$2:function(TElement,TSeparator,TProducer,elementParser,separatorParser,secondaryElementParser,oneOrMore,producer){return Kusto.Language.Parsing.Parsers$1(TInput).List$3(TElement,TSeparator,TProducer,elementParser,separatorParser,secondaryElementParser,null,null,null,null,oneOrMore,!1,producer)},List$4:function(TElement,TSeparator,TProducer,elementParser,separatorParser,oneOrMore,producer){return Kusto.Language.Parsing.Parsers$1(TInput).List$3(TElement,TSeparator,TProducer,elementParser,separatorParser,elementParser,null,null,null,null,oneOrMore,!1,producer)},OList$1:function(TElement,TSeparator,TProducer,elementParser,separatorParser,fnMissingElement,fnMissingSeparator,endOfList,oneOrMore,allowTrailingSeparator,producer){return Kusto.Language.Parsing.Parsers$1(TInput).OList(TElement,TSeparator,TProducer,elementParser,separatorParser,elementParser,fnMissingElement,fnMissingSeparator,fnMissingElement,endOfList,oneOrMore,allowTrailingSeparator,producer)},OList:function(TElement,TSeparator,TProducer,primaryElementParser,separatorParser,secondaryElementParser,fnMissingPrimaryElement,fnMissingSeparator,fnMissingSecondaryElement,endOfList,oneOrMore,allowTrailingSeparator,producer){var secondaryParser,secondaryParser1,secondaryParser2,secondaryParser3;secondaryElementParser==null&&(secondaryElementParser=primaryElementParser);var requiredPrimaryElementParser=Bridge.staticEquals(fnMissingPrimaryElement,null)?primaryElementParser:Kusto.Language.Parsing.Parsers$1(TInput).Required$1(TElement,primaryElementParser,fnMissingPrimaryElement),requiredSecondaryElementParser=Bridge.staticEquals(fnMissingSecondaryElement,null)?secondaryElementParser:Kusto.Language.Parsing.Parsers$1(TInput).Required$1(TElement,secondaryElementParser,fnMissingSecondaryElement),requiredSeparatorParser=Bridge.staticEquals(fnMissingSeparator,null)?separatorParser:Kusto.Language.Parsing.Parsers$1(TInput).Required$1(TSeparator,separatorParser,fnMissingSeparator),emptyList=function(){return producer(System.Array.init([],System.Object))};return oneOrMore?allowTrailingSeparator?(secondaryParser=Kusto.Language.Parsing.Parsers$1(TInput).Sequence([separatorParser,secondaryElementParser]),Bridge.staticEquals(fnMissingSeparator,null)||endOfList==null||(secondaryParser=Kusto.Language.Parsing.Parsers$1(TInput).First([secondaryParser,Kusto.Language.Parsing.Parsers$1(TInput).If(Kusto.Language.Parsing.Parsers$1(TInput).Not(endOfList),Kusto.Language.Parsing.Parsers$1(TInput).Sequence([requiredSeparatorParser,secondaryElementParser])).Hide()])),Kusto.Language.Parsing.Parsers$1(TInput).Produce(TProducer,Kusto.Language.Parsing.Parsers$1(TInput).Sequence([requiredPrimaryElementParser,Kusto.Language.Parsing.Parsers$1(TInput).ZeroOrMore(secondaryParser),Kusto.Language.Parsing.Parsers$1(TInput).Optional$1(TSeparator,separatorParser)]),producer)):(secondaryParser1=Kusto.Language.Parsing.Parsers$1(TInput).Sequence([separatorParser,requiredSecondaryElementParser]),Bridge.staticEquals(fnMissingSeparator,null)||endOfList==null||(secondaryParser1=Kusto.Language.Parsing.Parsers$1(TInput).First([secondaryParser1,Kusto.Language.Parsing.Parsers$1(TInput).If(Kusto.Language.Parsing.Parsers$1(TInput).Not(endOfList),Kusto.Language.Parsing.Parsers$1(TInput).Sequence([requiredSeparatorParser,secondaryElementParser])).Hide()])),Kusto.Language.Parsing.Parsers$1(TInput).Produce(TProducer,Kusto.Language.Parsing.Parsers$1(TInput).Sequence([requiredPrimaryElementParser,Kusto.Language.Parsing.Parsers$1(TInput).ZeroOrMore(secondaryParser1)]),producer)):allowTrailingSeparator?(secondaryParser2=Kusto.Language.Parsing.Parsers$1(TInput).Sequence([separatorParser,secondaryElementParser]),Bridge.staticEquals(fnMissingSeparator,null)||endOfList==null||(secondaryParser2=Kusto.Language.Parsing.Parsers$1(TInput).First([secondaryParser2,Kusto.Language.Parsing.Parsers$1(TInput).If(Kusto.Language.Parsing.Parsers$1(TInput).Not(endOfList),Kusto.Language.Parsing.Parsers$1(TInput).Sequence([requiredSeparatorParser,secondaryElementParser])).Hide()])),Kusto.Language.Parsing.Parsers$1(TInput).Optional$2(TProducer,Kusto.Language.Parsing.Parsers$1(TInput).Produce(TProducer,Kusto.Language.Parsing.Parsers$1(TInput).Sequence([Kusto.Language.Parsing.Parsers$1(TInput).First$1(TElement,[Kusto.Language.Parsing.Parsers$1(TInput).If$1(TElement,separatorParser,requiredPrimaryElementParser).Hide$1(),primaryElementParser]),Kusto.Language.Parsing.Parsers$1(TInput).ZeroOrMore(secondaryParser2),Kusto.Language.Parsing.Parsers$1(TInput).Optional$1(TSeparator,separatorParser)]),producer),emptyList)):(secondaryParser3=Kusto.Language.Parsing.Parsers$1(TInput).Sequence([separatorParser,requiredSecondaryElementParser]),Bridge.staticEquals(fnMissingSeparator,null)||endOfList==null||(secondaryParser3=Kusto.Language.Parsing.Parsers$1(TInput).First([secondaryParser3,Kusto.Language.Parsing.Parsers$1(TInput).If(Kusto.Language.Parsing.Parsers$1(TInput).Not(endOfList),Kusto.Language.Parsing.Parsers$1(TInput).Sequence([requiredSeparatorParser,secondaryElementParser])).Hide()])),Kusto.Language.Parsing.Parsers$1(TInput).Optional$2(TProducer,Kusto.Language.Parsing.Parsers$1(TInput).Produce(TProducer,Kusto.Language.Parsing.Parsers$1(TInput).Sequence([Kusto.Language.Parsing.Parsers$1(TInput).First$1(TElement,[Kusto.Language.Parsing.Parsers$1(TInput).If$1(TElement,separatorParser,requiredPrimaryElementParser).Hide$1(),primaryElementParser]),Kusto.Language.Parsing.Parsers$1(TInput).ZeroOrMore(secondaryParser3)]),producer),emptyList))},Map:function(TOutput,keyValuePairs){return new(Kusto.Language.Parsing.MapParser$2(TInput,TOutput).$ctor1)(System.Linq.Enumerable.from(keyValuePairs,System.Collections.Generic.KeyValuePair$2(System.Collections.Generic.IEnumerable$1(TInput),TOutput)).toDictionary(function(kvp){return kvp.key},function(kvp){return function(){return kvp.value}},System.Collections.Generic.IEnumerable$1(TInput),Function))},Map$1:function(TOutput,keyValuePairs){return new(Kusto.Language.Parsing.MapParser$2(TInput,TOutput).$ctor1)(keyValuePairs)},Match$3:function(predicate){return new(Kusto.Language.Parsing.MatchParser$1(TInput).$ctor1)(predicate)},Match$2:function(consumer){return new(Kusto.Language.Parsing.MatchParser$1(TInput).ctor)(consumer)},Match:function(item){return Kusto.Language.Parsing.Parsers$1(TInput).Match$1(item,System.Collections.Generic.EqualityComparer$1(TInput).def)},Match$1:function(item,comparer){return Kusto.Language.Parsing.Parsers$1(TInput).Match$3(function(i){return comparer.equals2(i,item)})},Match$4:function(ch,ignoreCase){if(ignoreCase===void 0&&(ignoreCase=!1),ignoreCase){var chUpper=String.fromCharCode(ch).toUpperCase().charCodeAt(0),chLower=String.fromCharCode(ch).toLowerCase().charCodeAt(0);return Kusto.Language.Parsing.Parsers$1(System.Char).Match$3(function(c){return c===ch||c===chUpper||c===chLower})}else return Kusto.Language.Parsing.Parsers$1(System.Char).Match$3(function(c){return c===ch})},Match$5:function(text,ignoreCase){if(ignoreCase===void 0&&(ignoreCase=!1),text.length===1)return Kusto.Language.Parsing.Parsers$1(TInput).Match$4(text.charCodeAt(0),ignoreCase);if(ignoreCase){var lower=text.toLowerCase(),upper=text.toUpperCase();return Kusto.Language.Parsing.Parsers$1(System.Char).Match$2(function(source,start){var ts,i,ch;if((ts=Bridge.as(source,Kusto.Language.Parsing.TextSource))!=null)return ts.Matches$1(start,text,!0)?text.length:-1;else{for(i=0;i<text.length;i=i+1|0)if(ch=source.Peek(start+i|0),ch!==lower.charCodeAt(i)&&ch!==upper.charCodeAt(i))return~i;return text.length}})}else return Kusto.Language.Parsing.Parsers$1(System.Char).Match$2(function(source,start){var ts,i;if((ts=Bridge.as(source,Kusto.Language.Parsing.TextSource))!=null)return ts.Matches(start,text)?text.length:-1;else{for(i=0;i<text.length;i=i+1|0)if(source.Peek(start+i|0)!==text.charCodeAt(i))return~i;return text.length}})},Match$7:function(TOutput,predicate,producer){return new(Kusto.Language.Parsing.MatchParser$2(TInput,TOutput).$ctor1)(predicate,producer)},Match$6:function(TOutput,consumer,producer){return new(Kusto.Language.Parsing.MatchParser$2(TInput,TOutput).ctor)(consumer,producer)},MatchAny$1:function(items){return Kusto.Language.Parsing.Parsers$1(TInput).MatchAny$2(items,System.Collections.Generic.EqualityComparer$1(TInput).def)},MatchAny:function(items){return items===void 0&&(items=[]),Kusto.Language.Parsing.Parsers$1(TInput).MatchAny$2(items,System.Collections.Generic.EqualityComparer$1(TInput).def)},MatchAny$2:function(items,comparer){var hashset=new(System.Collections.Generic.HashSet$1(TInput).$ctor2)(items,comparer);return Kusto.Language.Parsing.Parsers$1(TInput).Match$3(function(item){return System.Linq.Enumerable.from(items,TInput).contains(item)})},MatchSequence:function(items){return Kusto.Language.Parsing.Parsers$1(TInput).MatchSequence$1(items,System.Collections.Generic.EqualityComparer$1(TInput).def)},MatchSequence$1:function(items,comparer){return new(Kusto.Language.Parsing.MatchParser$1(TInput).ctor)(function(source,start){for(var i=0;i<System.Array.getCount(items,TInput);i=i+1|0)if(source.IsEnd(start+i|0)||!comparer.equals2(System.Array.getItem(items,i,TInput),source.Peek(start+i|0)))return~i;return System.Array.getCount(items,TInput)})},Not:function(parser){return new(Kusto.Language.Parsing.NotParser$1(TInput))(parser)},OneOrMore$1:function(TParser,TProducer,parser,producer){return Kusto.Language.Parsing.Parsers$1(TInput).Produce$1(TParser,TProducer,Kusto.Language.Parsing.Parsers$1(TInput).OneOrMore(parser),producer)},OneOrMore:function(parser){return new(Kusto.Language.Parsing.OneOrMoreParser$1(TInput))(parser)},Optional:function(parser){return new(Kusto.Language.Parsing.ZeroOrMoreParser$1(TInput))(parser,!0)},Optional$1:function(TOutput,parser){return new(Kusto.Language.Parsing.OptionalParser$2(TInput,TOutput))(parser,function(){return Bridge.getDefaultValue(TOutput)})},Optional$2:function(TOutput,parser,producer){return new(Kusto.Language.Parsing.OptionalParser$2(TInput,TOutput))(parser,producer)},Or:function(parsers){return parsers===void 0&&(parsers=[]),new(Kusto.Language.Parsing.BestParser$1(TInput))(parsers)},Produce:function(TOutput,parser,producer){return new(Kusto.Language.Parsing.ProduceParser$2(TInput,TOutput))(parser,Kusto.Language.Parsing.Parsers$1(TInput).Produce$2(System.Object,TOutput,producer))},Produce$1:function(TElement,TOutput,parser,producer){return new(Kusto.Language.Parsing.ProduceParser$2(TInput,TOutput))(parser,Kusto.Language.Parsing.Parsers$1(TInput).Produce$2(TElement,TOutput,producer))},Produce$2:function(TElement,TOutput,producer){return function(list,start){return Kusto.Language.Parsing.Parsers$1.ElementProducer$2(TInput,TElement,TOutput).Produce(list,start,producer)}},Required:function(TOutput,parser,producer){return new(Kusto.Language.Parsing.RequiredParser$2(TInput,TOutput))(parser,function(source,start){return producer()})},Required$1:function(TOutput,parser,producer){return new(Kusto.Language.Parsing.RequiredParser$2(TInput,TOutput))(parser,producer)},Rule:function(TParser1,TOutput,parser1,producer){return new(Kusto.Language.Parsing.RuleParser$2(TInput,TOutput))(System.Array.init([parser1],Kusto.Language.Parsing.Parser$1(TInput)),function(list,start){return producer(Bridge.cast(Bridge.unbox(list.getItem(start),TParser1),TParser1))},function(source,start){var result1=parser1.Parse$1(source,start),produced;return result1.Length<0?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(result1.Length,Bridge.getDefaultValue(TOutput)):(produced=producer(result1.Value),new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(result1.Length,produced))})},Rule$1:function(TParser1,TParser2,TOutput,parser1,parser2,producer){return new(Kusto.Language.Parsing.RuleParser$2(TInput,TOutput))(System.Array.init([parser1,parser2],Kusto.Language.Parsing.Parser$1(TInput)),function(list,start){return producer(Bridge.cast(Bridge.unbox(list.getItem(start),TParser1),TParser1),Bridge.cast(Bridge.unbox(list.getItem(start+1|0),TParser2),TParser2))},function(source,start){var result1=parser1.Parse$1(source,start),len,result2,produced;return result1.Length<0?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(result1.Length,Bridge.getDefaultValue(TOutput)):(len=result1.Length,result2=parser2.Parse$1(source,start+len|0),result2.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result2.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result2.Length|0,produced=producer(result1.Value,result2.Value),new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(len,produced))})},Rule$2:function(TParser1,TParser2,TParser3,TOutput,parser1,parser2,parser3,producer){return new(Kusto.Language.Parsing.RuleParser$2(TInput,TOutput))(System.Array.init([parser1,parser2,parser3],Kusto.Language.Parsing.Parser$1(TInput)),function(list,start){return producer(Bridge.cast(Bridge.unbox(list.getItem(start),TParser1),TParser1),Bridge.cast(Bridge.unbox(list.getItem(start+1|0),TParser2),TParser2),Bridge.cast(Bridge.unbox(list.getItem(start+2|0),TParser3),TParser3))},function(source,start){var result1=parser1.Parse$1(source,start),len,result2,result3,produced;return result1.Length<0?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(result1.Length,Bridge.getDefaultValue(TOutput)):(len=result1.Length,result2=parser2.Parse$1(source,start+len|0),result2.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result2.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result2.Length|0,result3=parser3.Parse$1(source,start+len|0),result3.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result3.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result3.Length|0,produced=producer(result1.Value,result2.Value,result3.Value),new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(len,produced))})},Rule$3:function(TParser1,TParser2,TParser3,TParser4,TOutput,parser1,parser2,parser3,parser4,producer){return new(Kusto.Language.Parsing.RuleParser$2(TInput,TOutput))(System.Array.init([parser1,parser2,parser3,parser4],Kusto.Language.Parsing.Parser$1(TInput)),function(list,start){return producer(Bridge.cast(Bridge.unbox(list.getItem(start),TParser1),TParser1),Bridge.cast(Bridge.unbox(list.getItem(start+1|0),TParser2),TParser2),Bridge.cast(Bridge.unbox(list.getItem(start+2|0),TParser3),TParser3),Bridge.cast(Bridge.unbox(list.getItem(start+3|0),TParser4),TParser4))},function(source,start){var result1=parser1.Parse$1(source,start),len,result2,result3,result4,produced;return result1.Length<0?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(result1.Length,Bridge.getDefaultValue(TOutput)):(len=result1.Length,result2=parser2.Parse$1(source,start+len|0),result2.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result2.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result2.Length|0,result3=parser3.Parse$1(source,start+len|0),result3.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result3.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result3.Length|0,result4=parser4.Parse$1(source,start+len|0),result4.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result4.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result4.Length|0,produced=producer(result1.Value,result2.Value,result3.Value,result4.Value),new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(len,produced))})},Rule$4:function(TParser1,TParser2,TParser3,TParser4,TParser5,TOutput,parser1,parser2,parser3,parser4,parser5,producer){return new(Kusto.Language.Parsing.RuleParser$2(TInput,TOutput))(System.Array.init([parser1,parser2,parser3,parser4,parser5],Kusto.Language.Parsing.Parser$1(TInput)),function(list,start){return producer(Bridge.cast(Bridge.unbox(list.getItem(start),TParser1),TParser1),Bridge.cast(Bridge.unbox(list.getItem(start+1|0),TParser2),TParser2),Bridge.cast(Bridge.unbox(list.getItem(start+2|0),TParser3),TParser3),Bridge.cast(Bridge.unbox(list.getItem(start+3|0),TParser4),TParser4),Bridge.cast(Bridge.unbox(list.getItem(start+4|0),TParser5),TParser5))},function(source,start){var result1=parser1.Parse$1(source,start),len,result2,result3,result4,result5,produced;return result1.Length<0?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(result1.Length,Bridge.getDefaultValue(TOutput)):(len=result1.Length,result2=parser2.Parse$1(source,start+len|0),result2.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result2.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result2.Length|0,result3=parser3.Parse$1(source,start+len|0),result3.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result3.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result3.Length|0,result4=parser4.Parse$1(source,start+len|0),result4.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result4.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result4.Length|0,result5=parser5.Parse$1(source,start+len|0),result5.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result5.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result5.Length|0,produced=producer(result1.Value,result2.Value,result3.Value,result4.Value,result5.Value),new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(len,produced))})},Rule$5:function(TParser1,TParser2,TParser3,TParser4,TParser5,TParser6,TOutput,parser1,parser2,parser3,parser4,parser5,parser6,producer){return new(Kusto.Language.Parsing.RuleParser$2(TInput,TOutput))(System.Array.init([parser1,parser2,parser3,parser4,parser5,parser6],Kusto.Language.Parsing.Parser$1(TInput)),function(list,start){return producer(Bridge.cast(Bridge.unbox(list.getItem(start),TParser1),TParser1),Bridge.cast(Bridge.unbox(list.getItem(start+1|0),TParser2),TParser2),Bridge.cast(Bridge.unbox(list.getItem(start+2|0),TParser3),TParser3),Bridge.cast(Bridge.unbox(list.getItem(start+3|0),TParser4),TParser4),Bridge.cast(Bridge.unbox(list.getItem(start+4|0),TParser5),TParser5),Bridge.cast(Bridge.unbox(list.getItem(start+5|0),TParser6),TParser6))},function(source,start){var result1=parser1.Parse$1(source,start),len,result2,result3,result4,result5,result6,produced;return result1.Length<0?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(result1.Length,Bridge.getDefaultValue(TOutput)):(len=result1.Length,result2=parser2.Parse$1(source,start+len|0),result2.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result2.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result2.Length|0,result3=parser3.Parse$1(source,start+len|0),result3.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result3.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result3.Length|0,result4=parser4.Parse$1(source,start+len|0),result4.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result4.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result4.Length|0,result5=parser5.Parse$1(source,start+len|0),result5.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result5.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result5.Length|0,result6=parser6.Parse$1(source,start+len|0),result6.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result6.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result6.Length|0,produced=producer(result1.Value,result2.Value,result3.Value,result4.Value,result5.Value,result6.Value),new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(len,produced))})},Rule$6:function(TParser1,TParser2,TParser3,TParser4,TParser5,TParser6,TParser7,TOutput,parser1,parser2,parser3,parser4,parser5,parser6,parser7,producer){return new(Kusto.Language.Parsing.RuleParser$2(TInput,TOutput))(System.Array.init([parser1,parser2,parser3,parser4,parser5,parser6,parser7],Kusto.Language.Parsing.Parser$1(TInput)),function(list,start){return producer(Bridge.cast(Bridge.unbox(list.getItem(start),TParser1),TParser1),Bridge.cast(Bridge.unbox(list.getItem(start+1|0),TParser2),TParser2),Bridge.cast(Bridge.unbox(list.getItem(start+2|0),TParser3),TParser3),Bridge.cast(Bridge.unbox(list.getItem(start+3|0),TParser4),TParser4),Bridge.cast(Bridge.unbox(list.getItem(start+4|0),TParser5),TParser5),Bridge.cast(Bridge.unbox(list.getItem(start+5|0),TParser6),TParser6),Bridge.cast(Bridge.unbox(list.getItem(start+6|0),TParser7),TParser7))},function(source,start){var result1=parser1.Parse$1(source,start),len,result2,result3,result4,result5,result6,result7,produced;return result1.Length<0?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(result1.Length,Bridge.getDefaultValue(TOutput)):(len=result1.Length,result2=parser2.Parse$1(source,start+len|0),result2.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result2.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result2.Length|0,result3=parser3.Parse$1(source,start+len|0),result3.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result3.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result3.Length|0,result4=parser4.Parse$1(source,start+len|0),result4.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result4.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result4.Length|0,result5=parser5.Parse$1(source,start+len|0),result5.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result5.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result5.Length|0,result6=parser6.Parse$1(source,start+len|0),result6.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result6.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result6.Length|0,result7=parser7.Parse$1(source,start+len|0),result7.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result7.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result7.Length|0,produced=producer(result1.Value,result2.Value,result3.Value,result4.Value,result5.Value,result6.Value,result7.Value),new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(len,produced))})},Rule$7:function(TParser1,TParser2,TParser3,TParser4,TParser5,TParser6,TParser7,TParser8,TOutput,parser1,parser2,parser3,parser4,parser5,parser6,parser7,parser8,producer){return new(Kusto.Language.Parsing.RuleParser$2(TInput,TOutput))(System.Array.init([parser1,parser2,parser3,parser4,parser5,parser6,parser7,parser8],Kusto.Language.Parsing.Parser$1(TInput)),function(list,start){return producer(Bridge.cast(Bridge.unbox(list.getItem(start),TParser1),TParser1),Bridge.cast(Bridge.unbox(list.getItem(start+1|0),TParser2),TParser2),Bridge.cast(Bridge.unbox(list.getItem(start+2|0),TParser3),TParser3),Bridge.cast(Bridge.unbox(list.getItem(start+3|0),TParser4),TParser4),Bridge.cast(Bridge.unbox(list.getItem(start+4|0),TParser5),TParser5),Bridge.cast(Bridge.unbox(list.getItem(start+5|0),TParser6),TParser6),Bridge.cast(Bridge.unbox(list.getItem(start+6|0),TParser7),TParser7),Bridge.cast(Bridge.unbox(list.getItem(start+7|0),TParser8),TParser8))},function(source,start){var result1=parser1.Parse$1(source,start),len,result2,result3,result4,result5,result6,result7,result8,produced;return result1.Length<0?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(result1.Length,Bridge.getDefaultValue(TOutput)):(len=result1.Length,result2=parser2.Parse$1(source,start+len|0),result2.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result2.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result2.Length|0,result3=parser3.Parse$1(source,start+len|0),result3.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result3.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result3.Length|0,result4=parser4.Parse$1(source,start+len|0),result4.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result4.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result4.Length|0,result5=parser5.Parse$1(source,start+len|0),result5.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result5.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result5.Length|0,result6=parser6.Parse$1(source,start+len|0),result6.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result6.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result6.Length|0,result7=parser7.Parse$1(source,start+len|0),result7.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result7.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result7.Length|0,result8=parser8.Parse$1(source,start+len|0),result8.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result8.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result8.Length|0,produced=producer(result1.Value,result2.Value,result3.Value,result4.Value,result5.Value,result6.Value,result7.Value,result8.Value),new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(len,produced))})},Rule$8:function(TParser1,TParser2,TParser3,TParser4,TParser5,TParser6,TParser7,TParser8,TParser9,TOutput,parser1,parser2,parser3,parser4,parser5,parser6,parser7,parser8,parser9,producer){return new(Kusto.Language.Parsing.RuleParser$2(TInput,TOutput))(System.Array.init([parser1,parser2,parser3,parser4,parser5,parser6,parser7,parser8,parser9],Kusto.Language.Parsing.Parser$1(TInput)),function(list,start){return producer(Bridge.cast(Bridge.unbox(list.getItem(start),TParser1),TParser1),Bridge.cast(Bridge.unbox(list.getItem(start+1|0),TParser2),TParser2),Bridge.cast(Bridge.unbox(list.getItem(start+2|0),TParser3),TParser3),Bridge.cast(Bridge.unbox(list.getItem(start+3|0),TParser4),TParser4),Bridge.cast(Bridge.unbox(list.getItem(start+4|0),TParser5),TParser5),Bridge.cast(Bridge.unbox(list.getItem(start+5|0),TParser6),TParser6),Bridge.cast(Bridge.unbox(list.getItem(start+6|0),TParser7),TParser7),Bridge.cast(Bridge.unbox(list.getItem(start+7|0),TParser8),TParser8),Bridge.cast(Bridge.unbox(list.getItem(start+8|0),TParser9),TParser9))},function(source,start){var result1=parser1.Parse$1(source,start),len,result2,result3,result4,result5,result6,result7,result8,result9,produced;return result1.Length<0?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(result1.Length,Bridge.getDefaultValue(TOutput)):(len=result1.Length,result2=parser2.Parse$1(source,start+len|0),result2.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result2.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result2.Length|0,result3=parser3.Parse$1(source,start+len|0),result3.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result3.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result3.Length|0,result4=parser4.Parse$1(source,start+len|0),result4.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result4.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result4.Length|0,result5=parser5.Parse$1(source,start+len|0),result5.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result5.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result5.Length|0,result6=parser6.Parse$1(source,start+len|0),result6.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result6.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result6.Length|0,result7=parser7.Parse$1(source,start+len|0),result7.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result7.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result7.Length|0,result8=parser8.Parse$1(source,start+len|0),result8.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result8.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result8.Length|0,result9=parser9.Parse$1(source,start+len|0),result9.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result9.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result9.Length|0,produced=producer(result1.Value,result2.Value,result3.Value,result4.Value,result5.Value,result6.Value,result7.Value,result8.Value,result9.Value),new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(len,produced))})},Rule$9:function(TLeft,TOutput,left,producer){return new(Kusto.Language.Parsing.RightParser$2(TInput,TOutput).$ctor1)(new(Kusto.Language.Parsing.RuleParser$2(TInput,TOutput))(System.Array.init([],Kusto.Language.Parsing.Parser$1(TInput)),function(list,start){return producer(Bridge.cast(Bridge.unbox(list.getItem(start),TLeft),TLeft))}))},Rule$10:function(TLeft,TParser1,TOutput,left,parser1,producer){return new(Kusto.Language.Parsing.RightParser$2(TInput,TOutput).$ctor1)(new(Kusto.Language.Parsing.RuleParser$2(TInput,TOutput))(System.Array.init([parser1],Kusto.Language.Parsing.Parser$1(TInput)),function(list,start){return producer(Bridge.cast(Bridge.unbox(list.getItem(start),TLeft),TLeft),Bridge.cast(Bridge.unbox(list.getItem(start+1|0),TParser1),TParser1))}))},Rule$11:function(TLeft,TParser1,TParser2,TOutput,left,parser1,parser2,producer){return new(Kusto.Language.Parsing.RightParser$2(TInput,TOutput).$ctor1)(new(Kusto.Language.Parsing.RuleParser$2(TInput,TOutput))(System.Array.init([parser1,parser2],Kusto.Language.Parsing.Parser$1(TInput)),function(list,start){return producer(Bridge.cast(Bridge.unbox(list.getItem(start),TLeft),TLeft),Bridge.cast(Bridge.unbox(list.getItem(start+1|0),TParser1),TParser1),Bridge.cast(Bridge.unbox(list.getItem(start+2|0),TParser2),TParser2))}))},Rule$12:function(TLeft,TParser1,TParser2,TParser3,TOutput,left,parser1,parser2,parser3,producer){return new(Kusto.Language.Parsing.RightParser$2(TInput,TOutput).$ctor1)(new(Kusto.Language.Parsing.RuleParser$2(TInput,TOutput))(System.Array.init([parser1,parser2,parser3],Kusto.Language.Parsing.Parser$1(TInput)),function(list,start){return producer(Bridge.cast(Bridge.unbox(list.getItem(start),TLeft),TLeft),Bridge.cast(Bridge.unbox(list.getItem(start+1|0),TParser1),TParser1),Bridge.cast(Bridge.unbox(list.getItem(start+2|0),TParser2),TParser2),Bridge.cast(Bridge.unbox(list.getItem(start+3|0),TParser3),TParser3))}))},Sequence:function(parsers){return parsers===void 0&&(parsers=[]),new(Kusto.Language.Parsing.SequenceParser$1(TInput))(parsers)},Sequence$1:function(parsers){return new(Kusto.Language.Parsing.SequenceParser$1(TInput))(parsers)},Text:function(pattern){return Kusto.Language.Parsing.Parsers$1(System.Char).Convert$1(System.String,pattern,function(source,start,length){return Bridge.cast(source,Kusto.Language.Parsing.TextSource).PeekText$1(start,length)})},Text$1:function(text){return Kusto.Language.Parsing.Parsers$1(System.Char).Convert(System.String,Kusto.Language.Parsing.Parsers$1(TInput).Match$5(text),text)},TextAndOffset:function(pattern){return Kusto.Language.Parsing.Parsers$1(System.Char).Convert$1(Kusto.Language.Parsing.OffsetValue$1(System.String),pattern,function(source,start,length){return new(Kusto.Language.Parsing.OffsetValue$1(System.String).$ctor1)(start,Bridge.cast(source,Kusto.Language.Parsing.TextSource).PeekText$1(start,length))})},Value:function(TOutput,fnValue){return Kusto.Language.Parsing.Parsers$1(TInput).Match$6(TOutput,function(source,start){return 0},function(source,start,length){return fnValue()})},ZeroOrMore$1:function(TParser,TProducer,parser,producer){return Kusto.Language.Parsing.Parsers$1(TInput).Produce$1(TParser,TProducer,Kusto.Language.Parsing.Parsers$1(TInput).ZeroOrMore(parser),producer)},ZeroOrMore:function(parser){return new(Kusto.Language.Parsing.ZeroOrMoreParser$1(TInput))(parser)},ZeroOrOne:function(parser){return new(Kusto.Language.Parsing.ZeroOrMoreParser$1(TInput))(parser,!0)}}}}});Bridge.define("Kusto.Language.Parsing.Parsers$1.ElementAndSeparatorProducer$3",function(TInput,TElement,TSeparator,TProducer){return{$kind:"nested class",statics:{fields:{listPool:null},ctors:{init:function(){this.listPool=new(Kusto.Language.Utils.ObjectPool$1(System.Collections.Generic.List$1(Kusto.Language.Parsing.ElementAndSeparator$2(TElement,TSeparator))))(function(){return new(System.Collections.Generic.List$1(Kusto.Language.Parsing.ElementAndSeparator$2(TElement,TSeparator)).ctor)},function(list){list.clear()})}},methods:{Produce:function(output,producer){var list=Kusto.Language.Parsing.Parsers$1.ElementAndSeparatorProducer$3(TInput,TElement,TSeparator,TProducer).listPool.AllocateFromPool(),i,element,separator;try{for(i=0;i<System.Array.getCount(output,System.Object);i=i+2|0)element=Bridge.cast(Bridge.unbox(System.Array.getItem(output,i,System.Object),TElement),TElement),separator=i<(System.Array.getCount(output,System.Object)-1|0)?Bridge.cast(Bridge.unbox(System.Array.getItem(output,i+1|0,System.Object),TSeparator),TSeparator):Bridge.getDefaultValue(TSeparator),list.add(new(Kusto.Language.Parsing.ElementAndSeparator$2(TElement,TSeparator).$ctor1)(element,separator));return producer(list)}finally{Kusto.Language.Parsing.Parsers$1.ElementAndSeparatorProducer$3(TInput,TElement,TSeparator,TProducer).listPool.ReturnToPool(list)}}}}}});Bridge.define("Kusto.Language.Parsing.Parsers$1.ElementProducer$2",function(TInput,TElement,TProducer){return{$kind:"nested class",statics:{fields:{listPool:null},ctors:{init:function(){this.listPool=new(Kusto.Language.Utils.ObjectPool$1(System.Collections.Generic.List$1(TElement)))(function(){return new(System.Collections.Generic.List$1(TElement).ctor)},function(list){list.clear()})}},methods:{Produce:function(output,outputStart,producer){var list=Kusto.Language.Parsing.Parsers$1.ElementProducer$2(TInput,TElement,TProducer).listPool.AllocateFromPool(),i;try{for(i=outputStart;i<output.Count;i=i+1|0)list.add(Bridge.cast(Bridge.unbox(output.getItem(i),TElement),TElement));return producer(list)}finally{Kusto.Language.Parsing.Parsers$1.ElementProducer$2(TInput,TElement,TProducer).listPool.ReturnToPool(list)}}}}}});Bridge.define("Kusto.Language.Parsing.Parsers$1.LeftValue$1",function(TInput,TLeft){return{$kind:"nested struct",statics:{methods:{getDefaultValue:function(){return new(Kusto.Language.Parsing.Parsers$1.LeftValue$1(TInput,TLeft))}}},methods:{$clone:function(to){return this}}}});Bridge.define("Kusto.Language.Parsing.ParserVisitor$2",function(TInput,TResult){return{}});Bridge.define("Kusto.Language.Parsing.PredefinedRuleParsers",{props:{Value:null,StringLiteral:null,BracketedStringLiteral:null,RawGuidLiteral:null,GuidLiteral:null,AnyGuidLiteralOrString:null,Type:null,NameDeclaration:null,QualifiedNameDeclaration:null,WildcardedNameDeclaration:null,QualifiedWildcardedNameDeclaration:null,ColumnNameReference:null,TableNameReference:null,ExternalTableNameReference:null,MaterializedViewNameReference:null,FunctionNameReference:null,EntityGroupNameReference:null,DatabaseNameReference:null,ClusterNameReference:null,DatabaseOrTableNameReference:null,DatabaseOrTableOrColumnNameReference:null,TableOrColumnNameReference:null,DatabaseTableNameReference:null,DatabaseTableColumnNameReference:null,TableColumnNameReference:null,DatabaseExternalTableNameReference:null,DatabaseMaterializedViewNameReference:null,DatabaseFunctionNameReference:null,DatabaseEntityGroupNameReference:null,FunctionDeclaration:null,FunctionBody:null,QueryInput:null,ScriptInput:null,InputText:null,BracketedInputText:null,MissingStringLiteral:null,MissingValue:null,MissingType:null,MissingNameReference:null,MissingNameDeclaration:null,MissingFunctionDeclaration:null,MissingFunctionBody:null,MissingExpression:null,MissingStatement:null,MissingInputText:null},ctors:{ctor:function(queryParser,queryInput,scriptInput){var StringName,BracketedStringLiteralToken,BracketedStringLiteralName,Name,databaseOrExternalTableNameReference,databaseOrMaterializedViewNameReference,databaseOrFunctionNameReference,databaseOrEntityGroupNameReference,WildcardedOrNameDeclaration,InputTextTokens,InputTextBuilder,BracketedInputTextTokens;this.$initialize();this.MissingStringLiteral=function(source,start){return Bridge.cast(Kusto.Language.Parsing.QueryGrammar.CreateMissingStringLiteral(source,start),Kusto.Language.Syntax.SyntaxElement)};this.MissingValue=function(source,start){return Bridge.cast(Kusto.Language.Parsing.QueryGrammar.CreateMissingValue(source,start),Kusto.Language.Syntax.SyntaxElement)};this.MissingType=function(source,start){return Bridge.cast(Kusto.Language.Parsing.QueryGrammar.CreateMissingType(source,start),Kusto.Language.Syntax.SyntaxElement)};this.MissingNameReference=function(source,start){return Bridge.cast(Kusto.Language.Parsing.QueryGrammar.CreateMissingNameReference(source,start),Kusto.Language.Syntax.SyntaxElement)};this.MissingNameDeclaration=function(source,start){return Bridge.cast(Kusto.Language.Parsing.QueryGrammar.CreateMissingNameDeclaration(source,start),Kusto.Language.Syntax.SyntaxElement)};this.MissingExpression=function(source,start){return Bridge.cast(Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression(source,start),Kusto.Language.Syntax.SyntaxElement)};this.MissingStatement=function(source,start){return Bridge.cast(Kusto.Language.Parsing.QueryGrammar.CreateMissingStatement(source,start),Kusto.Language.Syntax.SyntaxElement)};this.MissingFunctionDeclaration=function(source,start){return Bridge.cast(new Kusto.Language.Syntax.FunctionDeclaration(null,new Kusto.Language.Syntax.FunctionParameters(Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.FunctionParameter)).Empty(),Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken)),new Kusto.Language.Syntax.FunctionBody(Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken(Kusto.Language.Syntax.SyntaxKind.OpenBraceToken),Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)).Empty(),null,null,Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken(Kusto.Language.Syntax.SyntaxKind.CloseBraceToken))),Kusto.Language.Syntax.SyntaxElement)};this.MissingFunctionBody=function(source,start){return Bridge.cast(new Kusto.Language.Syntax.FunctionBody(Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken(Kusto.Language.Syntax.SyntaxKind.OpenBraceToken),Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)).Empty(),null,null,Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken(Kusto.Language.Syntax.SyntaxKind.CloseBraceToken)),Kusto.Language.Syntax.SyntaxElement)};this.MissingInputText=function(source,start){return Bridge.cast(Kusto.Language.Syntax.SyntaxToken.Other("","",Kusto.Language.Syntax.SyntaxKind.InputTextToken),Kusto.Language.Syntax.SyntaxElement)};this.RawGuidLiteral=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.RawGuidLiteralToken),function(token){return Bridge.cast(new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.GuidLiteralExpression,token),Kusto.Language.Syntax.SyntaxElement)});this.GuidLiteral=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.GuidLiteralToken),function(token){return Bridge.cast(new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.GuidLiteralExpression,token),Kusto.Language.Syntax.SyntaxElement)});this.StringLiteral=queryParser.StringLiteral.Cast(Kusto.Language.Syntax.SyntaxElement);this.AnyGuidLiteralOrString=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[this.GuidLiteral,this.StringLiteral,this.RawGuidLiteral]);StringName=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Name,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.StringLiteralToken),function(token){return Bridge.cast(new Kusto.Language.Syntax.TokenName(token),Kusto.Language.Syntax.Name)});BracketedStringLiteralToken=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Convert$3(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.SyntaxParsers.Token$5("["),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ZeroOrMore(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Match$3(function(t){return!Bridge.referenceEquals(t.Text,"]")&&!Bridge.referenceEquals(t.Text,"[")&&!Kusto.Language.Parsing.TextFacts.HasLineBreaks(t.Trivia)&&!Kusto.Language.Parsing.TextFacts.HasLineBreaks(t.Text)})),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.SyntaxParsers.Token$5("]"))]),function(list){var text=System.String.concat(Bridge.toArray(System.Linq.Enumerable.from(list,Kusto.Language.Parsing.LexicalToken).select(function(e){return((Bridge.referenceEquals(e,System.Array.getItem(list,0,Kusto.Language.Parsing.LexicalToken))?"":e.Trivia)||"")+(e.Text||"")})));return Kusto.Language.Syntax.SyntaxToken.Literal(System.Array.getItem(list,0,Kusto.Language.Parsing.LexicalToken).Trivia,text,Kusto.Language.Syntax.SyntaxKind.StringLiteralToken)}).WithTag$1("<bracketed-string>");this.BracketedStringLiteral=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxElement,BracketedStringLiteralToken,function(token){return Bridge.cast(new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.StringLiteralExpression,token),Kusto.Language.Syntax.SyntaxElement)});BracketedStringLiteralName=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Name,BracketedStringLiteralToken,function(token){return Bridge.cast(new Kusto.Language.Syntax.TokenName(token),Kusto.Language.Syntax.Name)});Name=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Name,[queryParser.IdentifierName,queryParser.BracketedName,queryParser.BracedName,StringName,BracketedStringLiteralName]).WithTag$1("<name>");this.NameDeclaration=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.Name,Kusto.Language.Syntax.SyntaxElement,Name,function(name){return Bridge.cast(new Kusto.Language.Syntax.NameDeclaration.ctor(name),Kusto.Language.Syntax.SyntaxElement)}).WithTag$1("<name>");this.QualifiedNameDeclaration=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyZeroOrMore(Kusto.Language.Syntax.SyntaxElement,this.NameDeclaration,Bridge.fn.bind(this,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Syntax.SyntaxElement,_left,Kusto.Language.Parsing.SyntaxParsers.Token$5(".").Hide$1(),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,this.NameDeclaration,this.MissingNameReference),function(expr,dot,selector){return Bridge.cast(new Kusto.Language.Syntax.PathExpression(Bridge.cast(expr,Kusto.Language.Syntax.Expression),dot,Bridge.cast(selector,Kusto.Language.Syntax.Expression)),Kusto.Language.Syntax.SyntaxElement)})})).WithTag$1("<qualified_name>");this.ColumnNameReference=Kusto.Language.Parsing.SyntaxParsers.WithCompletionHint(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.Name,Kusto.Language.Syntax.SyntaxElement,Name,function(name){return Bridge.cast(new Kusto.Language.Syntax.NameReference.ctor(name,Kusto.Language.Symbols.SymbolMatch.Column),Kusto.Language.Syntax.SyntaxElement)}),Kusto.Language.Editor.CompletionHint.Column).WithTag$1("<column>");this.TableNameReference=Kusto.Language.Parsing.SyntaxParsers.WithCompletionHint(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.Name,Kusto.Language.Syntax.SyntaxElement,Name,function(name){return Bridge.cast(new Kusto.Language.Syntax.NameReference.ctor(name,Kusto.Language.Symbols.SymbolMatch.Table),Kusto.Language.Syntax.SyntaxElement)}),Kusto.Language.Editor.CompletionHint.Table).WithTag$1("<table>");this.ExternalTableNameReference=Kusto.Language.Parsing.SyntaxParsers.WithCompletionHint(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.Name,Kusto.Language.Syntax.SyntaxElement,Name,function(name){return Bridge.cast(new Kusto.Language.Syntax.NameReference.ctor(name,Kusto.Language.Symbols.SymbolMatch.ExternalTable),Kusto.Language.Syntax.SyntaxElement)}),Kusto.Language.Editor.CompletionHint.ExternalTable).WithTag$1("<externaltable>");this.MaterializedViewNameReference=Kusto.Language.Parsing.SyntaxParsers.WithCompletionHint(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.Name,Kusto.Language.Syntax.SyntaxElement,Name,function(name){return Bridge.cast(new Kusto.Language.Syntax.NameReference.ctor(name,Kusto.Language.Symbols.SymbolMatch.MaterializedView),Kusto.Language.Syntax.SyntaxElement)}),Kusto.Language.Editor.CompletionHint.MaterializedView).WithTag$1("<materializedview>");this.EntityGroupNameReference=Kusto.Language.Parsing.SyntaxParsers.WithCompletionHint(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.Name,Kusto.Language.Syntax.SyntaxElement,Name,function(name){return Bridge.cast(new Kusto.Language.Syntax.NameReference.ctor(name,Kusto.Language.Symbols.SymbolMatch.EntityGroup),Kusto.Language.Syntax.SyntaxElement)}),Kusto.Language.Editor.CompletionHint.EntityGroup).WithTag$1("<entitygroup>");this.DatabaseNameReference=Kusto.Language.Parsing.SyntaxParsers.WithCompletionHint(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.Name,Kusto.Language.Syntax.SyntaxElement,Name,function(name){return Bridge.cast(new Kusto.Language.Syntax.NameReference.ctor(name,Kusto.Language.Symbols.SymbolMatch.Database),Kusto.Language.Syntax.SyntaxElement)}),Kusto.Language.Editor.CompletionHint.Database).WithTag$1("<database>");this.ClusterNameReference=Kusto.Language.Parsing.SyntaxParsers.WithCompletionHint(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.Name,Kusto.Language.Syntax.SyntaxElement,Name,function(name){return Bridge.cast(new Kusto.Language.Syntax.NameReference.ctor(name,Kusto.Language.Symbols.SymbolMatch.Cluster),Kusto.Language.Syntax.SyntaxElement)}),Kusto.Language.Editor.CompletionHint.Cluster).WithTag$1("<cluster>");this.FunctionNameReference=Kusto.Language.Parsing.SyntaxParsers.WithCompletionHint(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.Name,Kusto.Language.Syntax.SyntaxElement,Name,function(name){return Bridge.cast(new Kusto.Language.Syntax.NameReference.ctor(name,Kusto.Language.Symbols.SymbolMatch.Function),Kusto.Language.Syntax.SyntaxElement)}),Kusto.Language.Editor.CompletionHint.DatabaseFunction).WithTag$1("<function>");this.DatabaseOrTableNameReference=Kusto.Language.Parsing.SyntaxParsers.WithCompletionHint(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.Name,Kusto.Language.Syntax.SyntaxElement,Name,function(name){return Bridge.cast(new Kusto.Language.Syntax.NameReference.ctor(name,66),Kusto.Language.Syntax.SyntaxElement)}),49152).WithTag$1("<database_or_table>");this.DatabaseTableNameReference=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyZeroOrMore(Kusto.Language.Syntax.SyntaxElement,this.DatabaseOrTableNameReference,Bridge.fn.bind(this,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Syntax.SyntaxElement,_left,Kusto.Language.Parsing.SyntaxParsers.Token$5(".").Hide$1(),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,this.TableNameReference,this.MissingNameReference),function(expr,dot,selector){return Bridge.cast(new Kusto.Language.Syntax.PathExpression(Bridge.cast(expr,Kusto.Language.Syntax.Expression),dot,Bridge.cast(selector,Kusto.Language.Syntax.Expression)),Kusto.Language.Syntax.SyntaxElement)})})).WithTag$1("<database_table>");this.DatabaseOrTableOrColumnNameReference=Kusto.Language.Parsing.SyntaxParsers.WithCompletionHint(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.Name,Kusto.Language.Syntax.SyntaxElement,Name,function(name){return Bridge.cast(new Kusto.Language.Syntax.NameReference.ctor(name,67),Kusto.Language.Syntax.SyntaxElement)}),57344).WithTag$1("<database_or_table_or_column>");this.DatabaseTableColumnNameReference=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyZeroOrMore(Kusto.Language.Syntax.SyntaxElement,this.DatabaseOrTableOrColumnNameReference,Bridge.fn.bind(this,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Syntax.SyntaxElement,_left,Kusto.Language.Parsing.SyntaxParsers.Token$5(".").Hide$1(),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,this.DatabaseOrTableOrColumnNameReference,this.MissingNameReference),function(expr,dot,selector){return Bridge.cast(new Kusto.Language.Syntax.PathExpression(Bridge.cast(expr,Kusto.Language.Syntax.Expression),dot,Bridge.cast(selector,Kusto.Language.Syntax.Expression)),Kusto.Language.Syntax.SyntaxElement)})})).WithTag$1("<database_table_column>");this.TableOrColumnNameReference=Kusto.Language.Parsing.SyntaxParsers.WithCompletionHint(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.Name,Kusto.Language.Syntax.SyntaxElement,Name,function(name){return Bridge.cast(new Kusto.Language.Syntax.NameReference.ctor(name,3),Kusto.Language.Syntax.SyntaxElement)}),24576).WithTag$1("<table_or_column>");this.TableColumnNameReference=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyZeroOrMore(Kusto.Language.Syntax.SyntaxElement,this.TableOrColumnNameReference,Bridge.fn.bind(this,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Syntax.SyntaxElement,_left,Kusto.Language.Parsing.SyntaxParsers.Token$5(".").Hide$1(),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,this.TableOrColumnNameReference,this.MissingNameReference),function(expr,dot,selector){return Bridge.cast(new Kusto.Language.Syntax.PathExpression(Bridge.cast(expr,Kusto.Language.Syntax.Expression),dot,Bridge.cast(selector,Kusto.Language.Syntax.Expression)),Kusto.Language.Syntax.SyntaxElement)})})).WithTag$1("<table_column>");databaseOrExternalTableNameReference=Kusto.Language.Parsing.SyntaxParsers.WithCompletionHint(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.Name,Kusto.Language.Syntax.SyntaxElement,Name,function(name){return Bridge.cast(new Kusto.Language.Syntax.NameReference.ctor(name,68),Kusto.Language.Syntax.SyntaxElement)}),67141632).WithTag$1("<database_or_externaltable>");this.DatabaseExternalTableNameReference=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyZeroOrMore(Kusto.Language.Syntax.SyntaxElement,databaseOrExternalTableNameReference,Bridge.fn.bind(this,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Syntax.SyntaxElement,_left,Kusto.Language.Parsing.SyntaxParsers.Token$5(".").Hide$1(),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,this.ExternalTableNameReference,this.MissingNameReference),function(expr,dot,selector){return Bridge.cast(new Kusto.Language.Syntax.PathExpression(Bridge.cast(expr,Kusto.Language.Syntax.Expression),dot,Bridge.cast(selector,Kusto.Language.Syntax.Expression)),Kusto.Language.Syntax.SyntaxElement)})})).WithTag$1("<database_externaltable>");databaseOrMaterializedViewNameReference=Kusto.Language.Parsing.SyntaxParsers.WithCompletionHint(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.Name,Kusto.Language.Syntax.SyntaxElement,Name,function(name){return Bridge.cast(new Kusto.Language.Syntax.NameReference.ctor(name,2112),Kusto.Language.Syntax.SyntaxElement)}),16809984).WithTag$1("<database_or_materializedview>");this.DatabaseMaterializedViewNameReference=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyZeroOrMore(Kusto.Language.Syntax.SyntaxElement,databaseOrMaterializedViewNameReference,Bridge.fn.bind(this,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Syntax.SyntaxElement,_left,Kusto.Language.Parsing.SyntaxParsers.Token$5(".").Hide$1(),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,this.MaterializedViewNameReference,this.MissingNameReference),function(expr,dot,selector){return Bridge.cast(new Kusto.Language.Syntax.PathExpression(Bridge.cast(expr,Kusto.Language.Syntax.Expression),dot,Bridge.cast(selector,Kusto.Language.Syntax.Expression)),Kusto.Language.Syntax.SyntaxElement)})})).WithTag$1("<database_materializedview>");databaseOrFunctionNameReference=Kusto.Language.Parsing.SyntaxParsers.WithCompletionHint(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.Name,Kusto.Language.Syntax.SyntaxElement,Name,function(name){return Bridge.cast(new Kusto.Language.Syntax.NameReference.ctor(name,72),Kusto.Language.Syntax.SyntaxElement)}),33792).WithTag$1("<database_or_function>");this.DatabaseFunctionNameReference=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyZeroOrMore(Kusto.Language.Syntax.SyntaxElement,databaseOrFunctionNameReference,Bridge.fn.bind(this,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Syntax.SyntaxElement,_left,Kusto.Language.Parsing.SyntaxParsers.Token$5(".").Hide$1(),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,this.FunctionNameReference,this.MissingNameReference),function(expr,dot,selector){return Bridge.cast(new Kusto.Language.Syntax.PathExpression(Bridge.cast(expr,Kusto.Language.Syntax.Expression),dot,Bridge.cast(selector,Kusto.Language.Syntax.Expression)),Kusto.Language.Syntax.SyntaxElement)})})).WithTag$1("<database_function>");databaseOrEntityGroupNameReference=Kusto.Language.Parsing.SyntaxParsers.WithCompletionHint(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.Name,Kusto.Language.Syntax.SyntaxElement,Name,function(name){return Bridge.cast(new Kusto.Language.Syntax.NameReference.ctor(name,320),Kusto.Language.Syntax.SyntaxElement)}),163840).WithTag$1("<database_or_entitygroup>");this.DatabaseEntityGroupNameReference=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyZeroOrMore(Kusto.Language.Syntax.SyntaxElement,databaseOrEntityGroupNameReference,Bridge.fn.bind(this,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Syntax.SyntaxElement,_left,Kusto.Language.Parsing.SyntaxParsers.Token$5(".").Hide$1(),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,this.EntityGroupNameReference,this.MissingNameReference),function(expr,dot,selector){return Bridge.cast(new Kusto.Language.Syntax.PathExpression(Bridge.cast(expr,Kusto.Language.Syntax.Expression),dot,Bridge.cast(selector,Kusto.Language.Syntax.Expression)),Kusto.Language.Syntax.SyntaxElement)})})).WithTag$1("<database_entitygroup>");this.Value=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[this.GuidLiteral,this.RawGuidLiteral,queryParser.Literal.Cast(Kusto.Language.Syntax.SyntaxElement)]);this.Type=queryParser.ParamTypeExtended.Cast(Kusto.Language.Syntax.SyntaxElement);this.WildcardedNameDeclaration=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxElement,queryParser.WildcardedIdentifier,function(id){return Bridge.cast(new Kusto.Language.Syntax.NameDeclaration.ctor(new Kusto.Language.Syntax.WildcardedName(id)),Kusto.Language.Syntax.SyntaxElement)});WildcardedOrNameDeclaration=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[this.WildcardedNameDeclaration,this.NameDeclaration]);this.QualifiedWildcardedNameDeclaration=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([this.NameDeclaration,Kusto.Language.Parsing.SyntaxParsers.Token$5("."),WildcardedOrNameDeclaration]),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Syntax.SyntaxElement,this.NameDeclaration,Kusto.Language.Parsing.SyntaxParsers.Token$5("."),WildcardedOrNameDeclaration,function(qual,dot,name){return Bridge.cast(new Kusto.Language.Syntax.PathExpression(Bridge.cast(qual,Kusto.Language.Syntax.Expression),dot,Bridge.cast(name,Kusto.Language.Syntax.Expression)),Kusto.Language.Syntax.SyntaxElement)})),this.WildcardedNameDeclaration.Cast(Kusto.Language.Syntax.SyntaxElement)]);this.FunctionDeclaration=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.FunctionParameters,Kusto.Language.Syntax.FunctionBody,Kusto.Language.Syntax.SyntaxElement,queryParser.FunctionParameters,queryParser.FunctionBody,function(p,b){return Bridge.cast(new Kusto.Language.Syntax.FunctionDeclaration(null,p,b),Kusto.Language.Syntax.SyntaxElement)});this.FunctionBody=queryParser.FunctionBody.Cast(Kusto.Language.Syntax.SyntaxElement);this.QueryInput=queryInput;this.ScriptInput=scriptInput;InputTextTokens=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ZeroOrMore(Kusto.Language.Parsing.SyntaxParsers.AnyTokenButEnd);InputTextBuilder=function(source,start,length){var i;if(length>0){var builder=new System.Text.StringBuilder,token=source.Peek(start),trivia=token.Trivia;for(builder.append(source.Peek(start).Text),i=1;i<length;i=i+1|0)token=source.Peek(start+i|0),builder.append(token.Trivia),builder.append(token.Text);return Kusto.Language.Syntax.SyntaxToken.Other(trivia,builder.toString(),Kusto.Language.Syntax.SyntaxKind.InputTextToken)}else return Kusto.Language.Syntax.SyntaxToken.Other("","",Kusto.Language.Syntax.SyntaxKind.InputTextToken)};this.InputText=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Convert$1(Kusto.Language.Syntax.SyntaxToken,InputTextTokens,InputTextBuilder).Cast(Kusto.Language.Syntax.SyntaxElement);BracketedInputTextTokens=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ZeroOrMore(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.SyntaxParsers.Token$5("]")));this.BracketedInputText=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Convert$1(Kusto.Language.Syntax.SyntaxToken,BracketedInputTextTokens,InputTextBuilder).Cast(Kusto.Language.Syntax.SyntaxElement)}}});Bridge.define("Kusto.Language.Parsing.QueryGrammar",{statics:{fields:{s_currentGrammar:null,_extendedKeywordsAsIdentifiers:null,StringOperatorMap:null},ctors:{init:function(){this._extendedKeywordsAsIdentifiers=Kusto.Language.Utils.ListExtensions.ToHashSetEx(Kusto.Language.Syntax.SyntaxKind,Kusto.Language.KustoFacts.ExtendedKeywordsAsIdentifiers);this.StringOperatorMap=function(_o1){return _o1.add(Kusto.Language.Syntax.SyntaxKind.EqualTildeToken,Kusto.Language.Syntax.SyntaxKind.EqualTildeExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.BangTildeToken,Kusto.Language.Syntax.SyntaxKind.BangTildeExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.HasKeyword,Kusto.Language.Syntax.SyntaxKind.HasExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.ColonToken,Kusto.Language.Syntax.SyntaxKind.SearchExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.NotHasKeyword,Kusto.Language.Syntax.SyntaxKind.NotHasExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.HasCsKeyword,Kusto.Language.Syntax.SyntaxKind.HasCsExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.NotHasCsKeyword,Kusto.Language.Syntax.SyntaxKind.NotHasCsExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.HasPrefixKeyword,Kusto.Language.Syntax.SyntaxKind.HasPrefixExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.NotHasPrefixKeyword,Kusto.Language.Syntax.SyntaxKind.NotHasPrefixExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.HasPrefixCsKeyword,Kusto.Language.Syntax.SyntaxKind.HasPrefixCsExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.NotHasPrefixCsKeyword,Kusto.Language.Syntax.SyntaxKind.NotHasPrefixCsExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.HasSuffixKeyword,Kusto.Language.Syntax.SyntaxKind.HasSuffixExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.NotHasSuffixKeyword,Kusto.Language.Syntax.SyntaxKind.NotHasSuffixExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.HasSuffixCsKeyword,Kusto.Language.Syntax.SyntaxKind.HasSuffixCsExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.NotHasSuffixCsKeyword,Kusto.Language.Syntax.SyntaxKind.NotHasSuffixCsExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.LikeKeyword,Kusto.Language.Syntax.SyntaxKind.LikeExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.NotLikeKeyword,Kusto.Language.Syntax.SyntaxKind.NotLikeExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.LikeCsKeyword,Kusto.Language.Syntax.SyntaxKind.LikeCsExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.NotLikeCsKeyword,Kusto.Language.Syntax.SyntaxKind.NotLikeCsExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.ContainsKeyword,Kusto.Language.Syntax.SyntaxKind.ContainsExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.NotContainsKeyword,Kusto.Language.Syntax.SyntaxKind.NotContainsExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.NotBangContainsKeyword,Kusto.Language.Syntax.SyntaxKind.NotContainsExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.ContainsCsKeyword,Kusto.Language.Syntax.SyntaxKind.ContainsCsExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.Contains_CsKeyword,Kusto.Language.Syntax.SyntaxKind.ContainsCsExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.NotContainsCsKeyword,Kusto.Language.Syntax.SyntaxKind.NotContainsCsExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.NotBangContainsCsKeyword,Kusto.Language.Syntax.SyntaxKind.NotContainsCsExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.StartsWithKeyword,Kusto.Language.Syntax.SyntaxKind.StartsWithExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.NotStartsWithKeyword,Kusto.Language.Syntax.SyntaxKind.NotStartsWithExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.StartsWithCsKeyword,Kusto.Language.Syntax.SyntaxKind.StartsWithCsExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.NotStartsWithCsKeyword,Kusto.Language.Syntax.SyntaxKind.NotStartsWithCsExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.EndsWithKeyword,Kusto.Language.Syntax.SyntaxKind.EndsWithExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.NotEndsWithKeyword,Kusto.Language.Syntax.SyntaxKind.NotEndsWithExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.EndsWithCsKeyword,Kusto.Language.Syntax.SyntaxKind.EndsWithCsExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.NotEndsWithCsKeyword,Kusto.Language.Syntax.SyntaxKind.NotEndsWithCsExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.MatchesRegexKeyword,Kusto.Language.Syntax.SyntaxKind.MatchesRegexExpression),_o1}(new(System.Collections.Generic.Dictionary$2(Kusto.Language.Syntax.SyntaxKind,Kusto.Language.Syntax.SyntaxKind).ctor))}},methods:{From:function(globals){var cg=Kusto.Language.Parsing.QueryGrammar.s_currentGrammar,newCachedGrammar;return cg!=null&&cg.Options.EqualExceptForParseKind(globals.ParseOptions)?cg.Grammar:(newCachedGrammar={},globals.Cache!=null?globals.Cache.TryGetValue(Kusto.Language.Parsing.QueryGrammar.CachedGrammar,newCachedGrammar)||(newCachedGrammar.v=globals.Cache.GetOrCreate$1(Kusto.Language.Parsing.QueryGrammar.CachedGrammar,function(){return new Kusto.Language.Parsing.QueryGrammar.CachedGrammar(new Kusto.Language.Parsing.QueryGrammar(globals.ParseOptions),globals.ParseOptions)})):newCachedGrammar.v=new Kusto.Language.Parsing.QueryGrammar.CachedGrammar(new Kusto.Language.Parsing.QueryGrammar(globals.ParseOptions),globals.ParseOptions),Kusto.Language.Utils.Interlocked.CompareExchange(Kusto.Language.Parsing.QueryGrammar.CachedGrammar,Bridge.ref(Kusto.Language.Parsing.QueryGrammar,"s_currentGrammar"),newCachedGrammar.v,cg),newCachedGrammar.v.Grammar)},IsExtendedKeywordAsIdentifier:function(token){return Kusto.Language.Syntax.SyntaxFacts.IsKeyword(token.Kind)&&Kusto.Language.Parsing.QueryGrammar._extendedKeywordsAsIdentifiers.contains(token.Kind)},IsKeywordAsIdentifier:function(token){return Kusto.Language.Syntax.SyntaxFacts.GetCategory(token.Kind)===Kusto.Language.Syntax.SyntaxCategory.Keyword&&Kusto.Language.Syntax.SyntaxFacts.CanBeIdentifier(token.Kind)},CreateMissingNameDeclaration:function(source,start){return source===void 0&&(source=null),start===void 0&&(start=0),new Kusto.Language.Syntax.NameDeclaration.$ctor1(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingName()],Kusto.Language.Diagnostic))},CreateMissingNameDeclarationExpression:function(source,start){return new Kusto.Language.Syntax.NameDeclaration.$ctor1(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingName()],Kusto.Language.Diagnostic))},CreateMissingNameReference:function(source,start){return new Kusto.Language.Syntax.NameReference.$ctor2(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingName()],Kusto.Language.Diagnostic))},CreateMissingExpression:function(source,start){source===void 0&&(source=null);start===void 0&&(start=0);var token,dx=source!=null&&(token=source.Peek(start))!=null&&Kusto.Language.Syntax.SyntaxFacts.IsKeyword(token.Kind)?Kusto.Language.DiagnosticFacts.GetMissingExpressionWithKeyword(token.Text):Kusto.Language.DiagnosticFacts.GetMissingExpression();return new Kusto.Language.Syntax.NameReference.$ctor2(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken),System.Array.init([dx],Kusto.Language.Diagnostic))},CreateMissingNamedExpression:function(source,start){return new Kusto.Language.Syntax.SimpleNamedExpression(new Kusto.Language.Syntax.NameDeclaration.$ctor1(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken)),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.EqualToken),new Kusto.Language.Syntax.NameReference.$ctor2(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken)),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingName()],Kusto.Language.Diagnostic))},CreateMissingScanAssignment:function(source,start){return new Kusto.Language.Syntax.ScanAssignment(new Kusto.Language.Syntax.NameReference.$ctor2(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken)),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.EqualEqualToken),new Kusto.Language.Syntax.NameReference.$ctor2(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken)),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingName()],Kusto.Language.Diagnostic))},CreateMissingValue:function(source,start){return new Kusto.Language.Syntax.NameReference.$ctor2(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingValue()],Kusto.Language.Diagnostic))},CreateMissingType:function(source,start){return new Kusto.Language.Syntax.PrimitiveTypeExpression(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingTypeName()],Kusto.Language.Diagnostic))},CreateMissingLongLiteral:function(source,start){return new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.LongLiteralExpression,Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.LongLiteralToken),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingNumber()],Kusto.Language.Diagnostic))},CreateMissingRealLiteral:function(source,start){return new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.RealLiteralExpression,Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.RealLiteralToken),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingNumber()],Kusto.Language.Diagnostic))},CreateMissingStringLiteral:function(source,start){return new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.StringLiteralExpression,Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.StringLiteralToken),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingString()],Kusto.Language.Diagnostic))},CreateMissingBooleanLiteral:function(source,start){return new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.BooleanLiteralExpression,Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.BooleanLiteralToken),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingBoolean()],Kusto.Language.Diagnostic))},CreateMissingTypeOfLiteral:function(source,start){return new Kusto.Language.Syntax.TypeOfLiteralExpression(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.TypeOfKeyword),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)).Empty(),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingTypeOfLiteral()],Kusto.Language.Diagnostic))},CreateMissingJsonValue:function(source,start){return new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.StringLiteralExpression,Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.StringLiteralToken),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingJsonValue()],Kusto.Language.Diagnostic))},CreateMissingJsonPair:function(source,start){return new Kusto.Language.Syntax.JsonPair(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.StringLiteralToken),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.ColonToken),new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.StringLiteralExpression,Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.StringLiteralToken)),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingJsonPair()],Kusto.Language.Diagnostic))},CreateMissingJoinOnClause:function(source,start){return new Kusto.Language.Syntax.JoinOnClause(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.JoinOnClause),Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)).Empty(),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingJoinOnClause()],Kusto.Language.Diagnostic))},CreateMissingArgumentList:function(source,start){return source===void 0&&(source=null),start===void 0&&(start=0),new Kusto.Language.Syntax.ExpressionList(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.OpenParenToken,Kusto.Language.DiagnosticFacts.GetTokenExpected([Kusto.Language.Syntax.SyntaxKind.OpenParenToken])),Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)).Empty(),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.CloseParenToken,Kusto.Language.DiagnosticFacts.GetTokenExpected([Kusto.Language.Syntax.SyntaxKind.CloseParenToken])))},CreateMissingFunctionCall:function(source,start){return new Kusto.Language.Syntax.FunctionCallExpression(new Kusto.Language.Syntax.NameReference.$ctor2(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken)),new Kusto.Language.Syntax.ExpressionList(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)).Empty(),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.CloseParenToken)),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingFunctionCall()],Kusto.Language.Diagnostic))},CreateMissingFunctionCallExpression:function(source,start){return new Kusto.Language.Syntax.FunctionCallExpression(new Kusto.Language.Syntax.NameReference.$ctor2(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken)),new Kusto.Language.Syntax.ExpressionList(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)).Empty(),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.CloseParenToken)),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingFunctionCall()],Kusto.Language.Diagnostic))},CreateMissingSchemaType:function(source,start){return new Kusto.Language.Syntax.SchemaTypeExpression(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)).Empty(),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingSchemaDeclaration()],Kusto.Language.Diagnostic))},CreateMissingRowSchema:function(source,start){return new Kusto.Language.Syntax.RowSchema(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),null,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NameAndTypeDeclaration)).Empty(),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingSchemaDeclaration()],Kusto.Language.Diagnostic))},CreateMissingEvaluateRowSchema:function(source,start){return new Kusto.Language.Syntax.EvaluateRowSchema(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),null,null,null,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NameAndTypeDeclaration)).Empty(),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingSchemaDeclaration()],Kusto.Language.Diagnostic))},CreateMissingQueryOperator:function(source,start){return new Kusto.Language.Syntax.BadQueryOperator(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken),System.Array.init([Kusto.Language.DiagnosticFacts.GetQueryOperatorExpected()],Kusto.Language.Diagnostic))},CreateMissingQueryOperatorExpression:function(source,start){return new Kusto.Language.Syntax.BadQueryOperator(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken),System.Array.init([Kusto.Language.DiagnosticFacts.GetQueryOperatorExpected()],Kusto.Language.Diagnostic))},CreateMissingMakeSeriesExpression:function(source,start){return new Kusto.Language.Syntax.MakeSeriesExpression(Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression(source,start),null)},CreateMissingMvExpandExpression:function(source,start){return new Kusto.Language.Syntax.MvExpandExpression(Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression(source,start),null)},CreateMissingMvApplyExpression:function(source,start){return new Kusto.Language.Syntax.MvApplyExpression(Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression(source,start),null)},CreateMissingMvApplySubqueryExpression:function(source,start){return new Kusto.Language.Syntax.MvApplySubqueryExpression(Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression(source,start),Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken))},CreateMissingForkExpression:function(source,start){return new Kusto.Language.Syntax.ForkExpression(null,Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression(source,start),Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken))},CreateMissingPartitionOperand:function(source,start){return new Kusto.Language.Syntax.PartitionSubquery(Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression(source,start),Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken))},CreateMissingStatement:function(source,start){return new Kusto.Language.Syntax.ExpressionStatement(new Kusto.Language.Syntax.NameReference.$ctor2(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken)),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingStatement()],Kusto.Language.Diagnostic))},CreateMissingStatementElement:function(source,start){return new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement))(Kusto.Language.Parsing.QueryGrammar.CreateMissingStatement(source,start))},CreateMissingNameAndTypeDeclaration:function(source,start){return new Kusto.Language.Syntax.NameAndTypeDeclaration(new Kusto.Language.Syntax.NameDeclaration.$ctor1(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken)),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.ColonToken),new Kusto.Language.Syntax.PrimitiveTypeExpression(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.StringKeyword)),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingParameter()],Kusto.Language.Diagnostic))},CreateMissingFunctionParameter:function(source,start){return new Kusto.Language.Syntax.FunctionParameter(new Kusto.Language.Syntax.NameAndTypeDeclaration(new Kusto.Language.Syntax.NameDeclaration.$ctor1(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken)),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.ColonToken),new Kusto.Language.Syntax.PrimitiveTypeExpression(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.StringKeyword))),null,System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingParameter()],Kusto.Language.Diagnostic))},CreateMissingNamedParameter:function(source,start){return new Kusto.Language.Syntax.NamedParameter(new Kusto.Language.Syntax.NameDeclaration.$ctor1(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken)),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.EqualToken),new Kusto.Language.Syntax.NameReference.$ctor2(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken)),Kusto.Language.Editor.CompletionHint.None,System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingParameter()],Kusto.Language.Diagnostic))},CreateMissingFunctionDeclaration:function(source,start){return new Kusto.Language.Syntax.FunctionDeclaration(null,new Kusto.Language.Syntax.FunctionParameters(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.FunctionParameter)).Empty(),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.CloseParenToken)),new Kusto.Language.Syntax.FunctionBody(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.OpenBraceToken),Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)).Empty(),null,null,Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.CloseBraceToken)),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingFunctionDeclaration()],Kusto.Language.Diagnostic))},CreateMissingTokenLiteral:function(tokens){var diagnostic=Kusto.Language.DiagnosticFacts.GetTokenExpected$1(tokens);return function(source,start){return new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.TokenLiteralExpression,Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken),System.Array.init([diagnostic],Kusto.Language.Diagnostic))}},CreateMissingTokenLiteral$1:function(tokens){return tokens===void 0&&(tokens=[]),Kusto.Language.Parsing.QueryGrammar.CreateMissingTokenLiteral(Bridge.cast(tokens,System.Collections.Generic.IReadOnlyList$1(System.String)))},CreateMissingMakeGraphTableAndKeyClause:function(source,start){return new Kusto.Language.Syntax.MakeGraphTableAndKeyClause(new Kusto.Language.Syntax.NameReference.$ctor2(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken)),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.OnKeyword),new Kusto.Language.Syntax.NameReference.$ctor2(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken)),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingExpression()],Kusto.Language.Diagnostic))},CreateMissingGraphMatchPatternNotation:function(source,start){return new Kusto.Language.Syntax.GraphMatchPatternNode(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),new Kusto.Language.Syntax.NameDeclaration.$ctor1(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken)),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingGraphMatchPatternElement()],Kusto.Language.Diagnostic))},CreateMissingGraphMatchPattern:function(source,start){return new Kusto.Language.Syntax.GraphMatchPattern(new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.GraphMatchPatternNotation).$ctor1)(System.Array.init([Kusto.Language.Parsing.QueryGrammar.CreateMissingGraphMatchPatternNotation(source,start)],Kusto.Language.Syntax.GraphMatchPatternNotation),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingGraphMatchPattern()],Kusto.Language.Diagnostic)))},CreateMissingGraphToTableOutputClause:function(source,start){return new Kusto.Language.Syntax.GraphToTableOutputClause(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),new Kusto.Language.Syntax.GraphToTableAsClause(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.QueryGrammar.CreateMissingNameDeclaration()),null)},CreateMissingTopNestedClause:function(source,start){return source===void 0&&(source=null),start===void 0&&(start=0),new Kusto.Language.Syntax.TopNestedClause(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.TopNestedKeyword),null,Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.OfKeyword),new Kusto.Language.Syntax.NameReference.$ctor2(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken)),null,Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.ByKeyword),new Kusto.Language.Syntax.NameReference.$ctor2(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken)),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingClause()],Kusto.Language.Diagnostic))},CreateMissingPatternMatch:function(source,start){return source===void 0&&(source=null),start===void 0&&(start=0),new Kusto.Language.Syntax.PatternMatch(new Kusto.Language.Syntax.ExpressionList(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)).Empty(),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.CloseParenToken)),null,Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.EqualToken),new Kusto.Language.Syntax.FunctionBody(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.OpenBraceToken),Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)).Empty(),null,null,Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.CloseBraceToken)),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.SemicolonToken),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingPatternMatch()],Kusto.Language.Diagnostic))},CreateMissingMaterializedViewCombineBaseClause:function(source,start){return source===void 0&&(source=null),start===void 0&&(start=0),new Kusto.Language.Syntax.MaterializedViewCombineClause(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.MaterializedViewCombineClause),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression(source,start),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingClause$1("base")],Kusto.Language.Diagnostic))},CreateMissingMaterializedViewCombineDeltaClause:function(source,start){return source===void 0&&(source=null),start===void 0&&(start=0),new Kusto.Language.Syntax.MaterializedViewCombineClause(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.MaterializedViewCombineClause),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression(source,start),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingClause$1("delta")],Kusto.Language.Diagnostic))},CreateMissingMaterializedViewCombineAggregatesClause:function(source,start){return source===void 0&&(source=null),start===void 0&&(start=0),new Kusto.Language.Syntax.MaterializedViewCombineClause(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.MaterializedViewCombineClause),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression(source,start),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingClause$1("aggregates")],Kusto.Language.Diagnostic))},CreateMissingMaterializedViewCombineNameClause:function(source,start){return source===void 0&&(source=null),start===void 0&&(start=0),new Kusto.Language.Syntax.MaterializedViewCombineNameClause(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression(source,start),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.CloseParenToken))},AsIdentifierNameDeclaration:function(tokenParser){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.NameDeclaration,tokenParser,function(keyword){return new Kusto.Language.Syntax.NameDeclaration.$ctor1(keyword)})},AsIdentifierNameReference:function(tokenParser){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,tokenParser,function(keyword){return Bridge.cast(new Kusto.Language.Syntax.NameReference.$ctor2(keyword),Kusto.Language.Syntax.Expression)})},AsPrimitiveTypeExpression:function(tokenParser){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.TypeExpression,tokenParser,function(typeToken){return Bridge.cast(new Kusto.Language.Syntax.PrimitiveTypeExpression(typeToken),Kusto.Language.Syntax.TypeExpression)})},AsTokenLiteral:function(tokenParser){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,tokenParser,function(token){return Bridge.cast(new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.TokenLiteralExpression,token),Kusto.Language.Syntax.Expression)})},IsTokenVisible:function(tokenKind){switch(tokenKind){case Kusto.Language.Syntax.SyntaxKind.LikeCsKeyword:case Kusto.Language.Syntax.SyntaxKind.LikeKeyword:case Kusto.Language.Syntax.SyntaxKind.NotLikeCsKeyword:case Kusto.Language.Syntax.SyntaxKind.NotLikeKeyword:case Kusto.Language.Syntax.SyntaxKind.ContainsCsKeyword:case Kusto.Language.Syntax.SyntaxKind.NotContainsCsKeyword:case Kusto.Language.Syntax.SyntaxKind.NotContainsKeyword:return!1;default:return!0}}}},props:{QueryBlock:null,Statement:null,StatementList:null,FunctionBody:null,FunctionParameters:null,QueryOperator:null,PipeExpression:null,PipeSubExpression:null,MacroExpandSubQuery:null,FollowingPipeElementExpression:null,Expression:null,NamedExpression:null,UnnamedExpression:null,SimpleNameDeclaration:null,SimpleNameDeclarationExpression:null,BracketedNameDeclaration:null,IdentifierName:null,BracketedName:null,BracedName:null,ParamTypeExtended:null,SchemaType:null,SimpleNameReference:null,WildcardedNameReference:null,WildcardedIdentifier:null,Literal:null,StringLiteral:null,LiteralList:null,SkippedTokens:null},ctors:{ctor:function(options){this.$initialize();this.Initialize(options)}},methods:{Initialize:function(options){var DataScopeClause=null,InToken=null,QueryParameterCommaList=null,QueryParameterList=null,GetQueryOperatorParameterParsers=null,QueryParameter=null,QueryParameterName=null,NameReferenceList=null,QParameter=null,ExpressionCore=null,UnnamedExpressionCore=null,NameAndTypeDeclarationCore=null,LiteralCore=null,StringOrCompoundStringLiteralCore=null,JsonValueCore=null,PrimaryExpressionCore=null,FunctionCallOrPathCore=null,ForkPipeOperatorCore=null,ForkPipeExpressionCore=null,LetStatementCore=null,DeclareQueryParametersStatementCore=null,FunctionParameterCore=null,PipeExpressionCore=null,PipeSubExpressionCore=null,ContextualSubExpressionCore=null,NameAndTypeDeclaration,RowSchema,EvaluateRowSchema,InitialPipeElementExpression,FunctionBodyStatement,FunctionBodyStatementList,FunctionDeclaration,OptionValueClause,SetOptionStatement;this.Expression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Forward(Kusto.Language.Syntax.Expression,function(){return ExpressionCore}).WithTag$1("<expression>");this.UnnamedExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Forward(Kusto.Language.Syntax.Expression,function(){return UnnamedExpressionCore}).WithTag$1("<expression>");NameAndTypeDeclaration=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Forward(Kusto.Language.Syntax.NameAndTypeDeclaration,function(){return NameAndTypeDeclarationCore}).WithTag$1("<name-and-type>");this.Literal=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Forward(Kusto.Language.Syntax.Expression,function(){return LiteralCore}).WithTag$1("<literal>");var StringOrCompoundStringLiteral=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Forward(Kusto.Language.Syntax.Expression,function(){return StringOrCompoundStringLiteralCore}).WithTag$1("<string-literal>"),JsonValue=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Forward(Kusto.Language.Syntax.Expression,function(){return JsonValueCore}).WithTag$1("<json-value>"),PrimaryExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Forward(Kusto.Language.Syntax.Expression,function(){return PrimaryExpressionCore}).WithTag$1("<primary-expression>"),FunctionCallOrPath=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Forward(Kusto.Language.Syntax.Expression,function(){return FunctionCallOrPathCore}).WithTag$1("<function-call-or-path>"),ForkPipeOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Forward(Kusto.Language.Syntax.QueryOperator,function(){return ForkPipeOperatorCore}).WithTag$1("<fork-pipe-operator>"),ForkPipeExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Forward(Kusto.Language.Syntax.Expression,function(){return ForkPipeExpressionCore}).WithTag$1("<fork-pipe-expression>");this.PipeExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Forward(Kusto.Language.Syntax.Expression,function(){return PipeExpressionCore}).WithTag$1("<pipe-expression>");this.PipeSubExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Forward(Kusto.Language.Syntax.Expression,function(){return PipeSubExpressionCore}).WithTag$1("<pipe-sub-expression>");this.MacroExpandSubQuery=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Forward(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)),Bridge.fn.bind(this,function(){return this.StatementList})).WithTag$1("<macro-expand-subquery>");var ContextualSubExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Forward(Kusto.Language.Syntax.Expression,function(){return ContextualSubExpressionCore}).WithTag$1("<contextual-sub-expression>"),LetStatement=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Forward(Kusto.Language.Syntax.Statement,function(){return LetStatementCore}).WithTag$1("<let>"),DeclareQueryParametersStatement=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Forward(Kusto.Language.Syntax.Statement,function(){return DeclareQueryParametersStatementCore}).WithTag$1("<query-parameters>"),FunctionParameter=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Forward(Kusto.Language.Syntax.FunctionParameter,function(){return FunctionParameterCore}).WithTag$1("<function-parameter>"),ScanIdentifierName=Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.IdentifierToken),ScanExtendedKeywordAsIdentifier=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Match$3(function(t){return Kusto.Language.Parsing.QueryGrammar.IsExtendedKeywordAsIdentifier(t)}).WithTag("<extendedKeywordAsIdentifier>"),ScanKeywordAsIdentifier=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Match$3(function(t){return Kusto.Language.Parsing.QueryGrammar.IsKeywordAsIdentifier(t)}).WithTag("<keywordAsIdentifier>"),KeywordAsIdentifier=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Match$7(Kusto.Language.Syntax.SyntaxToken,function(t){return Kusto.Language.Parsing.QueryGrammar.IsKeywordAsIdentifier(t)},function(t){return Kusto.Language.Syntax.SyntaxToken.From(t)}).WithTag$1("<keywordAsIdentifier>");this.IdentifierName=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Name,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxToken,[Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.IdentifierToken),KeywordAsIdentifier]),function(token){return Bridge.cast(new Kusto.Language.Syntax.TokenName(token),Kusto.Language.Syntax.Name)});this.BracketedName=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Name,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.OpenBracketToken),StringOrCompoundStringLiteral,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.CloseBracketToken),function(open,name,close){return Bridge.cast(new Kusto.Language.Syntax.BracketedName(open,name,close),Kusto.Language.Syntax.Name)});this.BracedName=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.Name,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.OpenBraceToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Match$3(function(t){return t.Kind===Kusto.Language.Syntax.SyntaxKind.IdentifierToken&&t.Trivia.length===0}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Match$3(function(t){return t.Kind===Kusto.Language.Syntax.SyntaxKind.CloseBraceToken&&t.Trivia.length===0})]),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Name,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.OpenBraceToken),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.IdentifierToken),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.CloseBraceToken),function(open,name,close){return Bridge.cast(new Kusto.Language.Syntax.BracedName(open,name,close),Kusto.Language.Syntax.Name)}));var IdentifierNameDeclaration=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.NameDeclaration,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.IdentifierToken),function(id){return new Kusto.Language.Syntax.NameDeclaration.$ctor1(id)}).WithTag$1("<identifer>"),IdentifierNameReference=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.IdentifierToken),function(id){return Bridge.cast(new Kusto.Language.Syntax.NameReference.$ctor2(id),Kusto.Language.Syntax.Expression)}).WithTag$1("<identifer>"),ClientParameterReference=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.Name,Kusto.Language.Syntax.Expression,this.BracedName,function(name){return Bridge.cast(new Kusto.Language.Syntax.NameReference.ctor(name,Kusto.Language.Symbols.SymbolMatch.None),Kusto.Language.Syntax.Expression)}).WithTag$1("<client-parameter>"),ScanBracketedName=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.OpenBracketToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).OneOrMore(Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.StringLiteralToken)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.CloseBracketToken))]);this.BracketedNameDeclaration=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.NameDeclaration,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.OpenBracketToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,StringOrCompoundStringLiteral,Kusto.Language.Parsing.QueryGrammar.CreateMissingStringLiteral),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.CloseBracketToken),function(openBracket,name,closeBracket){return new Kusto.Language.Syntax.NameDeclaration.ctor(new Kusto.Language.Syntax.BracketedName(openBracket,name,closeBracket))});var BracketedNameReference=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.OpenBracketToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,StringOrCompoundStringLiteral,Kusto.Language.Parsing.QueryGrammar.CreateMissingStringLiteral),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.CloseBracketToken),function(openBracket,name,closeBracket){return Bridge.cast(new Kusto.Language.Syntax.NameReference.$ctor1(new Kusto.Language.Syntax.BracketedName(openBracket,name,closeBracket)),Kusto.Language.Syntax.Expression)}),KeywordAsIdentifierNameDeclaration=Kusto.Language.Parsing.QueryGrammar.AsIdentifierNameDeclaration(KeywordAsIdentifier).WithTag$1("<keywordAsIdentifier>"),ExtendedKeywordAsIdentifierToken=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Match$7(Kusto.Language.Syntax.SyntaxToken,function(t){return Kusto.Language.Parsing.QueryGrammar.IsExtendedKeywordAsIdentifier(t)},function(lt){return Kusto.Language.Syntax.SyntaxToken.From(lt)}),ExtendedKeywordAsIdentifierNameDeclaration=Kusto.Language.Parsing.QueryGrammar.AsIdentifierNameDeclaration(ExtendedKeywordAsIdentifierToken).WithTag$1("<extendedKeywordAsIdentifierNameDeclaration>"),KeywordAsIdentifierNameReference=Kusto.Language.Parsing.QueryGrammar.AsIdentifierNameReference(KeywordAsIdentifier).WithTag$1("<keywordAsIdentifierNameReference>"),ExtendedKeywordAsIdentifierNameReference=Kusto.Language.Parsing.QueryGrammar.AsIdentifierNameReference(ExtendedKeywordAsIdentifierToken).WithTag$1("<extendedKeywordAsIdentifierNameReference>"),NameTokenLiteral=Kusto.Language.Parsing.QueryGrammar.AsTokenLiteral(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxToken,[Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.IdentifierToken),KeywordAsIdentifier])),ScanSimpleName=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Or([ScanIdentifierName,ScanBracketedName,ScanKeywordAsIdentifier]),ScanExtendedName=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Or([ScanIdentifierName,ScanBracketedName,ScanExtendedKeywordAsIdentifier]);this.SimpleNameDeclaration=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.NameDeclaration,[IdentifierNameDeclaration,this.BracketedNameDeclaration,KeywordAsIdentifierNameDeclaration]).WithTag$1("<name>");this.SimpleNameDeclarationExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.NameDeclaration,Kusto.Language.Syntax.Expression,this.SimpleNameDeclaration,function(nd){return Bridge.cast(nd,Kusto.Language.Syntax.Expression)});this.SimpleNameReference=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[IdentifierNameReference,BracketedNameReference,KeywordAsIdentifierNameReference,ClientParameterReference]).WithTag$1("<name>");var ExtendedNameDeclaration=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.NameDeclaration,[IdentifierNameDeclaration,this.BracketedNameDeclaration,ExtendedKeywordAsIdentifierNameDeclaration]).WithTag$1("<name>"),ExtendedNameDeclarationExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.NameDeclaration,Kusto.Language.Syntax.Expression,ExtendedNameDeclaration,function(nd){return Bridge.cast(nd,Kusto.Language.Syntax.Expression)}),ExtendedNameReference=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[IdentifierNameReference,BracketedNameReference,ExtendedKeywordAsIdentifierNameReference,ClientParameterReference]).WithTag$1("<name>"),InvalidKeywordAsNameReference=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Match$6(Kusto.Language.Syntax.Expression,function(source,start){return Kusto.Language.Parsing.QueryParser.IsKeywordInNamePosition(source,start)?1:-1},function(source,start,length){return Bridge.cast(new Kusto.Language.Syntax.NameReference.$ctor1(new Kusto.Language.Syntax.TokenName(Kusto.Language.Syntax.SyntaxToken.From(source.Peek(start))),System.Array.init([Kusto.Language.DiagnosticFacts.GetNameRequiresBrackets(source.Peek(start).Text)],Kusto.Language.Diagnostic)),Kusto.Language.Syntax.Expression)}),DashedName=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Match$6(Kusto.Language.Syntax.TokenName,function(source,start){return Kusto.Language.Parsing.QueryParser.ScanDashedName(source,start)},function(source,start,length){return new Kusto.Language.Syntax.TokenName(Kusto.Language.Parsing.SyntaxParsers.ProduceSyntaxToken(source,start,length))}),ParamTypeToken=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxToken,[Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.BoolKeyword,Kusto.Language.Editor.CompletionKind.ScalarType),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.BooleanKeyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.DateKeyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.DateTimeKeyword,Kusto.Language.Editor.CompletionKind.ScalarType),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.DecimalKeyword,Kusto.Language.Editor.CompletionKind.ScalarType),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.DoubleKeyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.DynamicKeyword,Kusto.Language.Editor.CompletionKind.ScalarType),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.GuidKeyword,Kusto.Language.Editor.CompletionKind.ScalarType),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.IntKeyword,Kusto.Language.Editor.CompletionKind.ScalarType),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.Int64Keyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.Int8Keyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.LongKeyword,Kusto.Language.Editor.CompletionKind.ScalarType),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.RealKeyword,Kusto.Language.Editor.CompletionKind.ScalarType),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.StringKeyword,Kusto.Language.Editor.CompletionKind.ScalarType),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.TimeKeyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.TimespanKeyword,Kusto.Language.Editor.CompletionKind.ScalarType),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.UniqueIdKeyword).Hide$1()]),ParamType=Kusto.Language.Parsing.QueryGrammar.AsPrimitiveTypeExpression(ParamTypeToken).WithTag$1("<param-type>"),ParamTypeExtendedToken=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxToken,[Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.BoolKeyword,Kusto.Language.Editor.CompletionKind.ScalarType),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.BooleanKeyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.DateKeyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.DateTimeKeyword,Kusto.Language.Editor.CompletionKind.ScalarType),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.DecimalKeyword,Kusto.Language.Editor.CompletionKind.ScalarType),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.DoubleKeyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.DynamicKeyword,Kusto.Language.Editor.CompletionKind.ScalarType),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.FloatKeyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.GuidKeyword,Kusto.Language.Editor.CompletionKind.ScalarType),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.IntKeyword,Kusto.Language.Editor.CompletionKind.ScalarType),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.Int16Keyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.Int32Keyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.Int64Keyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.Int8Keyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.LongKeyword,Kusto.Language.Editor.CompletionKind.ScalarType),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.RealKeyword,Kusto.Language.Editor.CompletionKind.ScalarType),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.DecimalKeyword,Kusto.Language.Editor.CompletionKind.ScalarType),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.StringKeyword,Kusto.Language.Editor.CompletionKind.ScalarType),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.TimeKeyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.TimespanKeyword,Kusto.Language.Editor.CompletionKind.ScalarType),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.UIntKeyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.UInt16Keyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.UInt32Keyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.UInt64Keyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.UInt8Keyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.ULongKeyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.UniqueIdKeyword).Hide$1()]);this.ParamTypeExtended=Kusto.Language.Parsing.QueryGrammar.AsPrimitiveTypeExpression(ParamTypeExtendedToken);var IdentifierTypeExpression=Kusto.Language.Parsing.QueryGrammar.AsPrimitiveTypeExpression(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxToken,[Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.IdentifierToken),KeywordAsIdentifier])),InvalidParamType=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Convert$2(Kusto.Language.Syntax.TypeExpression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First([ParamTypeExtendedToken,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.IdentifierToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Match$3(function(tk){return Kusto.Language.Syntax.SyntaxFacts.IsKeyword(tk.Kind)})]),function(token){return Bridge.cast(new Kusto.Language.Syntax.PrimitiveTypeExpression(Kusto.Language.Syntax.SyntaxToken.From(token),System.Array.init([Kusto.Language.DiagnosticFacts.GetInvalidTypeName(token.Text)],Kusto.Language.Diagnostic)),Kusto.Language.Syntax.TypeExpression)}),ScanSchemaTypeStart=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([ScanExtendedName,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.ColonToken),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken)]),StarExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.AsteriskToken).Hide$1(),function(star){return Bridge.cast(new Kusto.Language.Syntax.StarExpression(star),Kusto.Language.Syntax.Expression)}),SchemaAsteriskType=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SchemaTypeExpression,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),StarExpression,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(openParen,star,closeParen){return new Kusto.Language.Syntax.SchemaTypeExpression(openParen,new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)).ctor)([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression))(star)]),closeParen)}),SchemaMultipartType=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SchemaTypeExpression,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.SyntaxParsers.CommaList(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.NameAndTypeDeclaration,Kusto.Language.Syntax.Expression,NameAndTypeDeclaration,function(nat){return Bridge.cast(nat,Kusto.Language.Syntax.Expression)}),Kusto.Language.Parsing.QueryGrammar.CreateMissingNameAndTypeDeclaration,!1,!0,void 0),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(openParen,columns,closeParen){return new Kusto.Language.Syntax.SchemaTypeExpression(openParen,columns,closeParen)});this.SchemaType=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SchemaTypeExpression,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SchemaTypeExpression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.AsteriskToken)]),SchemaAsteriskType),SchemaMultipartType]);NameAndTypeDeclarationCore=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.NameAndTypeDeclaration,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.TypeExpression,Kusto.Language.Syntax.NameAndTypeDeclaration,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.ColonToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.TypeExpression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.TypeExpression,[ParamType,InvalidParamType]),Kusto.Language.Parsing.QueryGrammar.CreateMissingType),function(colon,type){return new Kusto.Language.Syntax.NameAndTypeDeclaration(Kusto.Language.Parsing.QueryGrammar.CreateMissingNameDeclaration(),colon,type)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.NameAndTypeDeclaration,ScanSchemaTypeStart,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.NameDeclaration,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SchemaTypeExpression,Kusto.Language.Syntax.NameAndTypeDeclaration,ExtendedNameDeclaration,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.ColonToken),this.SchemaType,function(name,colon,type){return new Kusto.Language.Syntax.NameAndTypeDeclaration(name,colon,type)})),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.NameDeclaration,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.TypeExpression,Kusto.Language.Syntax.NameAndTypeDeclaration,ExtendedNameDeclaration,Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.ColonToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.TypeExpression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.TypeExpression,[ParamType,InvalidParamType]),Kusto.Language.Parsing.QueryGrammar.CreateMissingType),function(name,colon,type){return new Kusto.Language.Syntax.NameAndTypeDeclaration(name,colon,type)})]);var BooleanLiteral=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.BooleanLiteralToken),function(token){return Bridge.cast(new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.BooleanLiteralExpression,token),Kusto.Language.Syntax.Expression)}).WithTag$1("<bool-literal>"),BooleanLiteralWithCompletion=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Or([Kusto.Language.Parsing.SyntaxParsers.Token$5("true"),Kusto.Language.Parsing.SyntaxParsers.Token$5("false")]),BooleanLiteral),BooleanLiteral]),LongLiteral=Kusto.Language.Parsing.SyntaxParsers.WithCompletion(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.LongLiteralToken),function(token){return Bridge.cast(new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.LongLiteralExpression,token),Kusto.Language.Syntax.Expression)}).WithTag$1("<long-literal>"),[new Kusto.Language.Editor.CompletionItem.$ctor1(Kusto.Language.Editor.CompletionKind.ScalarPrefix,"long()","long(",")","long",void 0,Kusto.Language.Editor.CompletionRank.Function,3,!1)]),RealLiteral=Kusto.Language.Parsing.SyntaxParsers.WithCompletion(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.RealLiteralToken),function(token){return Bridge.cast(new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.RealLiteralExpression,token),Kusto.Language.Syntax.Expression)}).WithTag$1("<real-literal>"),[new Kusto.Language.Editor.CompletionItem.$ctor1(Kusto.Language.Editor.CompletionKind.ScalarPrefix,"real()","real(",")","real",void 0,Kusto.Language.Editor.CompletionRank.Function,3,!1),new Kusto.Language.Editor.CompletionItem.$ctor1(Kusto.Language.Editor.CompletionKind.ScalarPrefix,"double()","double(",")","double",void 0,Kusto.Language.Editor.CompletionRank.Function,3,!1)]),DecimalLiteral=Kusto.Language.Parsing.SyntaxParsers.WithCompletion(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.DecimalLiteralToken),function(token){return Bridge.cast(new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.DecimalLiteralExpression,token),Kusto.Language.Syntax.Expression)}).WithTag$1("<decimal-literal>"),[new Kusto.Language.Editor.CompletionItem.$ctor1(Kusto.Language.Editor.CompletionKind.ScalarPrefix,"decimal()","decimal(",")","decimal",void 0,Kusto.Language.Editor.CompletionRank.Function,3,!1)]),IntLiteral=Kusto.Language.Parsing.SyntaxParsers.WithCompletion(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.IntLiteralToken),function(token){return Bridge.cast(new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.IntLiteralExpression,token),Kusto.Language.Syntax.Expression)}).WithTag$1("<int-literal>"),[new Kusto.Language.Editor.CompletionItem.$ctor1(Kusto.Language.Editor.CompletionKind.ScalarPrefix,"int()","int(",")","int",void 0,Kusto.Language.Editor.CompletionRank.Function,3,!1)]),GuidLiteral=Kusto.Language.Parsing.SyntaxParsers.WithCompletion(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.GuidLiteralToken),function(token){return Bridge.cast(new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.GuidLiteralExpression,token),Kusto.Language.Syntax.Expression)}).WithTag$1("<guid-literal>"),[new Kusto.Language.Editor.CompletionItem.$ctor1(Kusto.Language.Editor.CompletionKind.ScalarPrefix,"guid()","guid(",")","guid",void 0,Kusto.Language.Editor.CompletionRank.Function,3,!1)]),RawGuidLiteral=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.RawGuidLiteralToken),function(token){return Bridge.cast(new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.GuidLiteralExpression,token),Kusto.Language.Syntax.Expression)}).WithTag$1("<raw-guid-literal>"),DateTimeLiteral=Kusto.Language.Parsing.SyntaxParsers.WithCompletion(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.DateTimeLiteralToken),function(token){return Bridge.cast(new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.DateTimeLiteralExpression,token),Kusto.Language.Syntax.Expression)}).WithTag$1("<datetime-literal>"),[new Kusto.Language.Editor.CompletionItem.$ctor1(Kusto.Language.Editor.CompletionKind.ScalarPrefix,"datetime()","datetime(",")","datetime",void 0,Kusto.Language.Editor.CompletionRank.Function,3,!1)]),TimespanLiteral=Kusto.Language.Parsing.SyntaxParsers.WithCompletion(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.TimespanLiteralToken),function(token){return Bridge.cast(new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.TimespanLiteralExpression,token),Kusto.Language.Syntax.Expression)}).WithTag$1("<timespan-literal>"),[new Kusto.Language.Editor.CompletionItem.$ctor1(Kusto.Language.Editor.CompletionKind.ScalarPrefix,"timespan()","timespan(",")","timespan",void 0,Kusto.Language.Editor.CompletionRank.Function,3,!1)]);this.StringLiteral=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.StringLiteralToken),function(token){return Bridge.cast(new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.StringLiteralExpression,token),Kusto.Language.Syntax.Expression)}).WithTag$1("<string-literal>");var TypeofElement=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.NameAndTypeDeclaration,Kusto.Language.Syntax.Expression,NameAndTypeDeclaration,function(nat){return Bridge.cast(nat,Kusto.Language.Syntax.Expression)}),StarExpression]),ScanTypeOfScalar=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.TypeOfKeyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Or([ParamType,this.ParamTypeExtended.Hide$1(),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.IdentifierToken).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.CloseParenToken)])])]),ScanTypeOfTabular=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.TypeOfKeyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken)]),TypeofLiteral=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.Expression,ScanTypeOfScalar,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.TypeExpression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.TypeOfKeyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.TypeExpression,[ParamType,this.ParamTypeExtended.Hide$1(),IdentifierTypeExpression.Hide$1()]),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(keyword,openParen,type,closeParen){return Bridge.cast(new Kusto.Language.Syntax.TypeOfLiteralExpression(keyword,openParen,new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)).ctor)([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression))(type)]),closeParen),Kusto.Language.Syntax.Expression)})),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.Expression,ScanTypeOfTabular,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.TypeOfKeyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.SyntaxParsers.CommaList(Kusto.Language.Syntax.Expression,TypeofElement,Kusto.Language.Parsing.QueryGrammar.CreateMissingType,!0,!1,void 0),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(keyword,openParen,list,closeParen){return Bridge.cast(new Kusto.Language.Syntax.TypeOfLiteralExpression(keyword,openParen,list,closeParen),Kusto.Language.Syntax.Expression)}))]).WithTag$1("<typeof-literal>");StringOrCompoundStringLiteralCore=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).OneOrMore$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.StringLiteralToken),function(list){return System.Array.getCount(list,Kusto.Language.Syntax.SyntaxToken)===1?Bridge.cast(new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.StringLiteralExpression,System.Array.getItem(list,0,Kusto.Language.Syntax.SyntaxToken)),Kusto.Language.Syntax.Expression):new Kusto.Language.Syntax.CompoundStringLiteralExpression(new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SyntaxToken).$ctor1)(list))}).WithTag$1("<string-literal>");var IsSignedNumericLiteral=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Match$2(function(source,start){var sign=source.Peek(start),number=source.Peek(start+1|0);return sign!=null&&number!=null&&(sign.Kind===Kusto.Language.Syntax.SyntaxKind.PlusToken||sign.Kind===Kusto.Language.Syntax.SyntaxKind.MinusToken)&&number.Trivia.length===0&&(number.Kind===Kusto.Language.Syntax.SyntaxKind.LongLiteralToken||number.Kind===Kusto.Language.Syntax.SyntaxKind.RealLiteralToken||number.Kind===Kusto.Language.Syntax.SyntaxKind.TimespanLiteralToken)&&number.Text.length>0&&System.Char.isDigit(number.Text.charCodeAt(0))?2:-1}),SignedNumericLiteral=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.Expression,IsSignedNumericLiteral,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxToken,[Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.MinusToken),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.PlusToken)]).Hide$1(),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[LongLiteral,RealLiteral,TimespanLiteral]),function(sign,expr){var lit=Bridge.cast(expr,Kusto.Language.Syntax.LiteralExpression),combinedToken=Kusto.Language.Syntax.SyntaxToken.Literal(sign.Trivia,(sign.Text||"")+(lit.Token.Text||""),lit.Token.Kind);return Bridge.cast(new Kusto.Language.Syntax.LiteralExpression(lit.Kind,combinedToken),Kusto.Language.Syntax.Expression)})),NumericLiteral=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[LongLiteral,IntLiteral,RealLiteral,DateTimeLiteral,TimespanLiteral,SignedNumericLiteral]).WithTag$1("<numeric-constant>"),IdentifierTokenLiteral=Kusto.Language.Parsing.QueryGrammar.AsTokenLiteral(Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.IdentifierToken)).WithTag$1("<identifier>"),KeywordTokenLiteral=Kusto.Language.Parsing.QueryGrammar.AsTokenLiteral(KeywordAsIdentifier).WithTag$1("<keyword>"),IdentifierOrKeywordTokenLiteral=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[IdentifierTokenLiteral,KeywordTokenLiteral]),NullLiteralExpression=Kusto.Language.Parsing.SyntaxParsers.WithCompletion(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token$5("null"),function(token){return Bridge.cast(new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.NullLiteralExpression,token),Kusto.Language.Syntax.Expression)}),[new Kusto.Language.Editor.CompletionItem.$ctor1(Kusto.Language.Editor.CompletionKind.Syntax,"null")]),JsonPair=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.JsonPair,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.JsonPair,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.StringLiteralToken),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.ColonToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,JsonValue,Kusto.Language.Parsing.QueryGrammar.CreateMissingJsonValue),function(name,colon,value){return new Kusto.Language.Syntax.JsonPair(name,colon,value)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.JsonPair,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.ColonToken).Hide$1(),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,JsonValue,Kusto.Language.Parsing.QueryGrammar.CreateMissingJsonValue),function(colonToken,value){return new Kusto.Language.Syntax.JsonPair(Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken(Kusto.Language.Syntax.SyntaxKind.StringLiteralToken,Kusto.Language.DiagnosticFacts.GetMissingString()),colonToken,value)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.JsonPair,JsonValue.Hide$1(),function(value){return new Kusto.Language.Syntax.JsonPair(Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken(Kusto.Language.Syntax.SyntaxKind.StringLiteralToken,Kusto.Language.DiagnosticFacts.GetMissingString()),Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken(Kusto.Language.Syntax.SyntaxKind.ColonToken),value)})]).WithTag$1("<json-pair>"),JsonObject=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.JsonPair)),Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.OpenBraceToken),Kusto.Language.Parsing.SyntaxParsers.CommaList(Kusto.Language.Syntax.JsonPair,JsonPair,Kusto.Language.Parsing.QueryGrammar.CreateMissingJsonPair),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.CloseBraceToken),function(openBrace,list,closeBrace){return Bridge.cast(new Kusto.Language.Syntax.JsonObjectExpression(openBrace,list,closeBrace),Kusto.Language.Syntax.Expression)}).WithTag$1("<json-object>"),JsonArray=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.OpenBracketToken),Kusto.Language.Parsing.SyntaxParsers.CommaList(Kusto.Language.Syntax.Expression,JsonValue,Kusto.Language.Parsing.QueryGrammar.CreateMissingJsonValue),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.CloseBracketToken),function(openBracket,values,closeBracket){return Bridge.cast(new Kusto.Language.Syntax.JsonArrayExpression(openBracket,values,closeBracket),Kusto.Language.Syntax.Expression)}).WithTag$1("<json-array>"),DynamicLiteral=Kusto.Language.Parsing.SyntaxParsers.WithCompletion(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.DynamicKeyword,Kusto.Language.Editor.CompletionKind.ScalarPrefix),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[NullLiteralExpression,JsonValue]),Kusto.Language.Parsing.QueryGrammar.CreateMissingJsonValue),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(dynamicKeyword,openParen,value,closeParen){return Bridge.cast(new Kusto.Language.Syntax.DynamicExpression(dynamicKeyword,openParen,value,closeParen),Kusto.Language.Syntax.Expression)}).WithTag$1("<dynamic-literal>"),[new Kusto.Language.Editor.CompletionItem.$ctor1(Kusto.Language.Editor.CompletionKind.ScalarPrefix,"dynamic()","dynamic(",")","dynamic",void 0,Kusto.Language.Editor.CompletionRank.Function,3,!1)]),JsonNumber=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.MinusToken).Hide$1(),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[LongLiteral,RealLiteral]),function(unaryOp,value){return Bridge.cast(new Kusto.Language.Syntax.PrefixUnaryExpression(Kusto.Language.Syntax.SyntaxKind.UnaryMinusExpression,unaryOp,value),Kusto.Language.Syntax.Expression)}),LongLiteral,RealLiteral]);JsonValueCore=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[StringOrCompoundStringLiteral,JsonNumber,TimespanLiteral,BooleanLiteral,DateTimeLiteral,GuidLiteral,DecimalLiteral,DynamicLiteral,NullLiteralExpression,JsonObject,JsonArray,ClientParameterReference]);LiteralCore=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[StringOrCompoundStringLiteral,BooleanLiteral,LongLiteral,RealLiteral,DecimalLiteral,IntLiteral,GuidLiteral,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.RawGuidLiteralToken),function(tk){return Bridge.cast(new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.GuidLiteralExpression,tk,System.Array.init([Kusto.Language.DiagnosticFacts.GetRawGuidLiteralNotAllowed()],Kusto.Language.Diagnostic)),Kusto.Language.Syntax.Expression)}),DateTimeLiteral,TimespanLiteral,SignedNumericLiteral,DynamicLiteral,TypeofLiteral,ClientParameterReference]).WithTag$1("<literal>");var ForcedSignedRealLiteral=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.Expression,IsSignedNumericLiteral,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxToken,[Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.MinusToken),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.PlusToken)]).Hide$1(),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[LongLiteral,RealLiteral]),function(sign,expr){var lit=Bridge.cast(expr,Kusto.Language.Syntax.LiteralExpression),combinedToken=Kusto.Language.Syntax.SyntaxToken.Literal(sign.Trivia,(sign.Text||"")+(lit.Token.Text||""),lit.Token.Kind);return Bridge.cast(new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.RealLiteralExpression,combinedToken),Kusto.Language.Syntax.Expression)})),ForcedRealLiteral=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxToken,[Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.LongLiteralToken),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.IntLiteralToken),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.RealLiteralToken),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.DecimalLiteralToken)]),function(token){return Bridge.cast(new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.RealLiteralExpression,token),Kusto.Language.Syntax.Expression)}),ForcedSignedRealLiteral]).WithTag$1("<forced-real-literal>"),AnyQueryOperatorParameterValue=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[this.Literal.Hide$1(),IdentifierOrKeywordTokenLiteral,this.SimpleNameReference]),AnyQueryOperatorParameterForcedRealValue=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[ForcedRealLiteral.Hide$1(),this.Literal.Hide$1(),IdentifierOrKeywordTokenLiteral,this.SimpleNameReference]);QParameter=function(tokenParser,hasEquals,equalsNeeded,valueParser,fnMissingValue,expressionHint){return hasEquals?equalsNeeded?Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.NamedParameter,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([tokenParser,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.EqualToken)]),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.NameDeclaration,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.NamedParameter,Kusto.Language.Parsing.QueryGrammar.AsIdentifierNameDeclaration(tokenParser),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.EqualToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,valueParser,fnMissingValue||Kusto.Language.Parsing.QueryGrammar.CreateMissingValue),function(name,equal,value){return new Kusto.Language.Syntax.NamedParameter(name,equal,value,expressionHint)})):Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.NameDeclaration,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.NamedParameter,Kusto.Language.Parsing.QueryGrammar.AsIdentifierNameDeclaration(tokenParser),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.EqualToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,valueParser,fnMissingValue||Kusto.Language.Parsing.QueryGrammar.CreateMissingValue),function(name,equal,value){return new Kusto.Language.Syntax.NamedParameter(name,equal,value,expressionHint)}):Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.NameDeclaration,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.NamedParameter,Kusto.Language.Parsing.QueryGrammar.AsIdentifierNameDeclaration(tokenParser),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,valueParser,fnMissingValue||Kusto.Language.Parsing.QueryGrammar.CreateMissingValue),function(name,value){return new Kusto.Language.Syntax.NamedParameter(name,Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.EqualToken),value,expressionHint)})};NameReferenceList=function(nameParser){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NameReference)),Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.OneOrMoreCommaList(Kusto.Language.Syntax.NameReference,nameParser,function(source,start){return Bridge.cast(Kusto.Language.Parsing.QueryGrammar.CreateMissingNameReference(source,start),Kusto.Language.Syntax.NameReference)}),function(list){return Bridge.cast(new Kusto.Language.Syntax.NameReferenceList(list),Kusto.Language.Syntax.Expression)})};QueryParameterName=function(parameter){var parser;return parser=parameter.IsHidden?Kusto.Language.Parsing.SyntaxParsers.HiddenToken$2(parameter.Name):parameter.HasNoEquals?Kusto.Language.Parsing.SyntaxParsers.Token$5(parameter.Name):parameter.ValueKind===Kusto.Language.QueryOperatorParameterValueKind.StringLiteral?Kusto.Language.Parsing.SyntaxParsers.Token$5(parameter.Name,void 0,void 0,3,System.String.format('{0}="|"',[parameter.Name])):Kusto.Language.Parsing.SyntaxParsers.Token$5(parameter.Name,void 0,void 0,3,System.String.format("{0}=",[parameter.Name])),System.Array.getCount(parameter.Aliases,System.String)>0&&(parser=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxToken,System.Linq.Enumerable.from(System.Array.init([parser],Kusto.Language.Parsing.Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxToken)),Kusto.Language.Parsing.Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxToken)).concat(System.Linq.Enumerable.from(parameter.Aliases,System.String).select(function(a){return Kusto.Language.Parsing.SyntaxParsers.HiddenToken$2(a)})).ToArray(Kusto.Language.Parsing.Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxToken)))),parser};QueryParameter=Bridge.fn.bind(this,function(parameter,equalsNeeded,allParameters){var hasEquals=!parameter.HasNoEquals;switch(parameter.ValueKind){case Kusto.Language.QueryOperatorParameterValueKind.Any:return QParameter(QueryParameterName(parameter),hasEquals,equalsNeeded,AnyQueryOperatorParameterValue,Kusto.Language.Parsing.QueryGrammar.CreateMissingValue,0);case Kusto.Language.QueryOperatorParameterValueKind.StringLiteral:return QParameter(QueryParameterName(parameter),hasEquals,equalsNeeded,AnyQueryOperatorParameterValue,Kusto.Language.Parsing.QueryGrammar.CreateMissingStringLiteral,0);case Kusto.Language.QueryOperatorParameterValueKind.BoolLiteral:return QParameter(QueryParameterName(parameter),hasEquals,equalsNeeded,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[BooleanLiteralWithCompletion,AnyQueryOperatorParameterValue]),Kusto.Language.Parsing.QueryGrammar.CreateMissingBooleanLiteral,0);case Kusto.Language.QueryOperatorParameterValueKind.IntegerLiteral:case Kusto.Language.QueryOperatorParameterValueKind.NumericLiteral:case Kusto.Language.QueryOperatorParameterValueKind.SummableLiteral:return QParameter(QueryParameterName(parameter),hasEquals,equalsNeeded,AnyQueryOperatorParameterValue,Kusto.Language.Parsing.QueryGrammar.CreateMissingLongLiteral,0);case Kusto.Language.QueryOperatorParameterValueKind.ForcedRealLiteral:return QParameter(QueryParameterName(parameter),hasEquals,equalsNeeded,AnyQueryOperatorParameterForcedRealValue,Kusto.Language.Parsing.QueryGrammar.CreateMissingRealLiteral,0);case Kusto.Language.QueryOperatorParameterValueKind.ScalarLiteral:return QParameter(QueryParameterName(parameter),hasEquals,equalsNeeded,AnyQueryOperatorParameterValue,void 0,0);case Kusto.Language.QueryOperatorParameterValueKind.String:return QParameter(QueryParameterName(parameter),hasEquals,equalsNeeded,FunctionCallOrPath,void 0,0);case Kusto.Language.QueryOperatorParameterValueKind.Word:case Kusto.Language.QueryOperatorParameterValueKind.WordOrNumber:return System.Array.getCount(parameter.Values,System.String)>0?QParameter(QueryParameterName(parameter),hasEquals,equalsNeeded,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[Kusto.Language.Parsing.QueryGrammar.AsTokenLiteral(Kusto.Language.Parsing.SyntaxParsers.Token$3(parameter.Values)),AnyQueryOperatorParameterValue]),Kusto.Language.Parsing.QueryGrammar.CreateMissingTokenLiteral(parameter.Values),0):QParameter(QueryParameterName(parameter),hasEquals,equalsNeeded,AnyQueryOperatorParameterValue,Kusto.Language.Parsing.QueryGrammar.CreateMissingTokenLiteral$1(["token"]),0);case Kusto.Language.QueryOperatorParameterValueKind.NameDeclaration:return QParameter(QueryParameterName(parameter),hasEquals,equalsNeeded,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[this.SimpleNameDeclarationExpression,AnyQueryOperatorParameterValue]),Kusto.Language.Parsing.QueryGrammar.CreateMissingNameDeclarationExpression,0);case Kusto.Language.QueryOperatorParameterValueKind.Column:return QParameter(QueryParameterName(parameter),hasEquals,equalsNeeded,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[this.SimpleNameReference,AnyQueryOperatorParameterValue]),Kusto.Language.Parsing.QueryGrammar.CreateMissingNameReference,Kusto.Language.Editor.CompletionHint.Column);case Kusto.Language.QueryOperatorParameterValueKind.ColumnList:var allParameterNames=System.Linq.Enumerable.from(allParameters,Kusto.Language.QueryOperatorParameter).select(function(p){return p.Name}).toList(System.String),nameRule=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.NameReference,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.SyntaxParsers.Token$3(allParameterNames),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.EqualToken)])),ExtendedNameReference.Cast(Kusto.Language.Syntax.NameReference)),nameList=NameReferenceList(nameRule);return QParameter(QueryParameterName(parameter),hasEquals,equalsNeeded,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[nameList,AnyQueryOperatorParameterValue]),void 0,Kusto.Language.Editor.CompletionHint.Column);default:throw new System.InvalidOperationException.$ctor1(System.String.format("Unhandled query operator parameter kind: {0}",[Bridge.box(parameter.ValueKind,Kusto.Language.QueryOperatorParameterValueKind,System.Enum.toStringFn(Kusto.Language.QueryOperatorParameterValueKind))]));}});var ParenthesizedExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.Expression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(openParen,expression,closeParen){return Bridge.cast(new Kusto.Language.Syntax.ParenthesizedExpression(openParen,expression,closeParen),Kusto.Language.Syntax.Expression)}),ScanRenameName=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Or([ScanIdentifierName,ScanExtendedKeywordAsIdentifier,ScanBracketedName]),ScanRenameList=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ZeroOrMore(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([ScanRenameName,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.CommaToken))])),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.CloseParenToken))]),RenameNameDeclaration=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.NameDeclaration,[IdentifierNameDeclaration,ExtendedKeywordAsIdentifierNameDeclaration,this.BracketedNameDeclaration]).WithTag$1("<name>"),RenameName=ExtendedNameDeclaration,RenameList=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NameDeclaration)),Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.RenameList,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.SyntaxParsers.CommaList(Kusto.Language.Syntax.NameDeclaration,RenameName,Kusto.Language.Parsing.QueryGrammar.CreateMissingNameDeclaration,!0,!1,void 0),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(openParen,list,closeParen){return new Kusto.Language.Syntax.RenameList(openParen,list,closeParen)});this.NamedExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([RenameName,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.EqualToken)]),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.NameDeclaration,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.Expression,RenameName,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.EqualToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.UnnamedExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),function(name,equals,expr){return Bridge.cast(new Kusto.Language.Syntax.SimpleNamedExpression(name,equals,expr),Kusto.Language.Syntax.Expression)})),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([DashedName,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.EqualToken)]),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.TokenName,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.Expression,DashedName,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.EqualToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.UnnamedExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),function(name,equals,expr){return Bridge.cast(new Kusto.Language.Syntax.SimpleNamedExpression(new Kusto.Language.Syntax.NameDeclaration.ctor(name,System.Array.init([Kusto.Language.DiagnosticFacts.GetNameRequiresBrackets(name.Name.Text)],Kusto.Language.Diagnostic)),equals,expr),Kusto.Language.Syntax.Expression)})),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([ScanRenameList,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.EqualToken)]),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.RenameList,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.Expression,RenameList,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.EqualToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.UnnamedExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),function(list,equals,expr){return Bridge.cast(new Kusto.Language.Syntax.CompoundNamedExpression(list,equals,expr),Kusto.Language.Syntax.Expression)})),this.UnnamedExpression]).WithTag$1("<expression>");var Argument=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.AsteriskToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Or([Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.CommaToken)])]),StarExpression),this.NamedExpression]),FunctionArgumentList=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.ExpressionList,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.SyntaxParsers.CommaList(Kusto.Language.Syntax.Expression,Argument,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(openParen,list,closeParen){return new Kusto.Language.Syntax.ExpressionList(openParen,list,closeParen)}),knownFunctionNames=System.Linq.Enumerable.from(Kusto.Language.Functions.All,Kusto.Language.Symbols.FunctionSymbol).select(function(f){return f.Name}).concat(System.Linq.Enumerable.from(Kusto.Language.Aggregates.All,Kusto.Language.Symbols.FunctionSymbol).select(function(f){return f.Name})).ToArray(System.String),ScanKnownFunctionNames=Kusto.Language.Parsing.SyntaxParsers.Token$3(knownFunctionNames).Hide$1(),KnownFunctionNameReference=Kusto.Language.Parsing.QueryGrammar.AsIdentifierNameReference(Kusto.Language.Parsing.SyntaxParsers.Token$3(knownFunctionNames).Hide$1()),ScanFunctionCall=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Or([ScanIdentifierName,ScanBracketedName,ScanKnownFunctionNames]),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken)]),FunctionCallNames=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[this.SimpleNameReference,KnownFunctionNameReference]),FunctionCall=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.ExpressionList,Kusto.Language.Syntax.Expression,FunctionCallNames,FunctionArgumentList,function(name,$arguments){return Bridge.cast(new Kusto.Language.Syntax.FunctionCallExpression(Bridge.cast(name,Kusto.Language.Syntax.NameReference),$arguments),Kusto.Language.Syntax.Expression)}).WithTag$1("<FunctionCall>"),RequiredFunctionCall=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[FunctionCall,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.Expression,FunctionCallNames,function(name){return Bridge.cast(new Kusto.Language.Syntax.FunctionCallExpression(Bridge.cast(name,Kusto.Language.Syntax.NameReference),Kusto.Language.Parsing.QueryGrammar.CreateMissingArgumentList()),Kusto.Language.Syntax.Expression)})]),Kusto.Language.Parsing.QueryGrammar.CreateMissingFunctionCallExpression),DotCompositeFunctionCall=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyZeroOrMore(Kusto.Language.Syntax.Expression,FunctionCall,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.DotToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.Expression,ScanFunctionCall,FunctionCall),function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.PathExpression(left,op,right),Kusto.Language.Syntax.Expression)})}),AtTokenSelector=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.AtToken),function(token){return Bridge.cast(new Kusto.Language.Syntax.AtExpression(token),Kusto.Language.Syntax.Expression)}),SpecialKeywordsAsIdentifierName=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token$2(Kusto.Language.KustoFacts.SpecialKeywordsAsIdentifiers),function(tk){return Bridge.cast(new Kusto.Language.Syntax.NameReference.$ctor1(new Kusto.Language.Syntax.TokenName(tk)),Kusto.Language.Syntax.Expression)}).Hide$1(),BarePathElementSelector=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[AtTokenSelector,IdentifierNameReference,KeywordAsIdentifierNameReference,SpecialKeywordsAsIdentifierName,ClientParameterReference]),ScanWildcard=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First([Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Match$3(function(t){return t.Kind===Kusto.Language.Syntax.SyntaxKind.IdentifierToken||Kusto.Language.Parsing.QueryGrammar.IsExtendedKeywordAsIdentifier(t)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Match$3(function(t){return t.Kind===Kusto.Language.Syntax.SyntaxKind.AsteriskToken&&t.Trivia.length===0||options.AllowNonAdjacentWildcardParts})]),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.AsteriskToken)]),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ZeroOrMore(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Match$3(function(t){return(t.Kind===Kusto.Language.Syntax.SyntaxKind.IdentifierToken||t.Kind===Kusto.Language.Syntax.SyntaxKind.LongLiteralToken||t.Kind===Kusto.Language.Syntax.SyntaxKind.AsteriskToken||Kusto.Language.Parsing.QueryGrammar.IsExtendedKeywordAsIdentifier(t))&&(t.Trivia.length===0||options.AllowNonAdjacentWildcardParts)}))]);this.WildcardedIdentifier=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Convert$1(Kusto.Language.Syntax.SyntaxToken,ScanWildcard.Hide(),function(source,start,len){var trivia=source.Peek(start).Trivia,text=Kusto.Language.Parsing.SyntaxParsers.GetCombinedTokenText(source,start,len),valueText=options.AllowNonAdjacentWildcardParts?Kusto.Language.Parsing.SyntaxParsers.GetCombinedTokenText(source,start,len,!1):text;return Kusto.Language.Syntax.SyntaxToken.Identifier(trivia,text,valueText)}).WithTag$1("<wildcard>");this.WildcardedNameReference=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,this.WildcardedIdentifier,function(token){return Bridge.cast(new Kusto.Language.Syntax.NameReference.$ctor1(new Kusto.Language.Syntax.WildcardedName(token)),Kusto.Language.Syntax.Expression)}).WithTag$1("<wildcard>");var ScanBracketedWildcardName=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.OpenBracketToken),ScanWildcard]),BracketedWildcardedNameReference=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.OpenBracketToken),this.WildcardedIdentifier,Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.CloseBracketToken),function(open,wildcard,close){return Bridge.cast(new Kusto.Language.Syntax.NameReference.$ctor1(new Kusto.Language.Syntax.BracketedWildcardedName(open,wildcard,close)),Kusto.Language.Syntax.Expression)}).WithTag$1("<bracketed-wildcard>"),InvocationExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.MinusToken).Hide$1(),FunctionCallOrPath,function(op,expr){return Bridge.cast(new Kusto.Language.Syntax.PrefixUnaryExpression(Kusto.Language.Syntax.SyntaxKind.UnaryMinusExpression,op,expr),Kusto.Language.Syntax.Expression)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.PlusToken).Hide$1(),FunctionCallOrPath,function(op,expr){return Bridge.cast(new Kusto.Language.Syntax.PrefixUnaryExpression(Kusto.Language.Syntax.SyntaxKind.UnaryPlusExpression,op,expr),Kusto.Language.Syntax.Expression)}),FunctionCallOrPath]),BracketedExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.OpenBracketToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.UnnamedExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingNameReference),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.CloseBracketToken),function(openBracket,expr,closeBracket){return Bridge.cast(new Kusto.Language.Syntax.BracketedExpression(openBracket,expr,closeBracket),Kusto.Language.Syntax.Expression)}),BracketedPathElementSelector=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.Expression,ScanBracketedName,BracketedNameReference),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.Expression,ScanBracketedWildcardName,BracketedWildcardedNameReference),BracketedExpression]),PathElementSelector=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[BarePathElementSelector,BracketedPathElementSelector]),BracketedEntityNamePathElementSelector=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.Expression,ScanBracketedWildcardName,BracketedWildcardedNameReference),BracketedNameReference]),PathElementSelectorOrFunctionCall=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.Expression,ScanFunctionCall,FunctionCall),PathElementSelector]),EntityPathExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyZeroOrMore(Kusto.Language.Syntax.Expression,PathElementSelectorOrFunctionCall,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$2(Kusto.Language.Syntax.Expression,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.DotToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,PathElementSelectorOrFunctionCall,Kusto.Language.Parsing.QueryGrammar.CreateMissingNameReference),function(left,dot,selector){return Bridge.cast(new Kusto.Language.Syntax.PathExpression(left,dot,selector),Kusto.Language.Syntax.Expression)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$10(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.Expression,_left,BracketedPathElementSelector,function(left,right){return Bridge.cast(new Kusto.Language.Syntax.ElementExpression(left,right),Kusto.Language.Syntax.Expression)})])}),ScanQualifiedEntityStart=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Or([Kusto.Language.Parsing.SyntaxParsers.HiddenToken$2(Kusto.Language.Functions.Database.Name),Kusto.Language.Parsing.SyntaxParsers.HiddenToken$2(Kusto.Language.Functions.Cluster.Name)]),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken)]),SimplePathExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyZeroOrMore(Kusto.Language.Syntax.Expression,PathElementSelector,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$2(Kusto.Language.Syntax.Expression,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.DotToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,PathElementSelector,Kusto.Language.Parsing.QueryGrammar.CreateMissingNameReference),function(left,dot,selector){return Bridge.cast(new Kusto.Language.Syntax.PathExpression(left,dot,selector),Kusto.Language.Syntax.Expression)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$10(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.Expression,_left,BracketedPathElementSelector,function(left,right){return Bridge.cast(new Kusto.Language.Syntax.ElementExpression(left,right),Kusto.Language.Syntax.Expression)})])}),ScanWildcardedEntityReferenceOrFunctionCall=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Or([ScanWildcard,ScanFunctionCall]),SimpleOrWildcardedEntityReference=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[this.WildcardedNameReference,this.SimpleNameReference]).WithTag$1("<simple-or-wildcarded-entity>"),WildcardedEntityReferencePathSelector=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[this.WildcardedNameReference,BarePathElementSelector,BracketedEntityNamePathElementSelector]),WildcardedEntityPathRoot=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyZeroOrMore(Kusto.Language.Syntax.Expression,PathElementSelectorOrFunctionCall,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$2(Kusto.Language.Syntax.Expression,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$2(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.DotToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(ScanWildcard)]),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.DotToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,PathElementSelectorOrFunctionCall,Kusto.Language.Parsing.QueryGrammar.CreateMissingNameReference),function(left,dot,selector){return Bridge.cast(new Kusto.Language.Syntax.PathExpression(left,dot,selector),Kusto.Language.Syntax.Expression)})),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$10(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.Expression,_left,BracketedPathElementSelector,function(left,right){return Bridge.cast(new Kusto.Language.Syntax.ElementExpression(left,right),Kusto.Language.Syntax.Expression)})])}),WildcardedEntityReference=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[this.WildcardedNameReference,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyOptional(Kusto.Language.Syntax.Expression,WildcardedEntityPathRoot,Bridge.fn.bind(this,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.DotToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.WildcardedNameReference,Kusto.Language.Parsing.QueryGrammar.CreateMissingNameReference),function(path,dot,selector){return Bridge.cast(new Kusto.Language.Syntax.PathExpression(path,dot,selector),Kusto.Language.Syntax.Expression)})}))]).WithTag$1("<wildcarded-entity-reference>"),ToScalarExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$4(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.NamedParameter,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.ToScalarKeyword,Kusto.Language.Editor.CompletionKind.ScalarPrefix),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.NamedParameter,QueryParameter(Kusto.Language.QueryOperatorParameters.ToScalarKindParameter,!1,void 0)),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.Expression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(name,kind,openParen,expression,closeParen){return Bridge.cast(new Kusto.Language.Syntax.ToScalarExpression(name,kind,openParen,expression,closeParen),Kusto.Language.Syntax.Expression)}),ToTableExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$4(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.NamedParameter,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.ToTableKeyword,Kusto.Language.Editor.CompletionKind.TabularPrefix).Hide$1(),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.NamedParameter,QueryParameter(Kusto.Language.QueryOperatorParameters.ToTableKindParameter,!1,void 0)),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.Expression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(name,kind,openParen,expression,closeParen){return Bridge.cast(new Kusto.Language.Syntax.ToTableExpression(name,kind,openParen,expression,closeParen),Kusto.Language.Syntax.Expression)});FunctionCallOrPathCore=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[ToTableExpression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyZeroOrMore(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[ToScalarExpression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.Expression,ScanFunctionCall,FunctionCall),PrimaryExpression]),function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$2(Kusto.Language.Syntax.Expression,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.DotToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,PathElementSelectorOrFunctionCall,Kusto.Language.Parsing.QueryGrammar.CreateMissingNameReference),function(left,dot,selector){return Bridge.cast(new Kusto.Language.Syntax.PathExpression(left,dot,selector),Kusto.Language.Syntax.Expression)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$10(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.Expression,_left,BracketedExpression,function(left,right){return Bridge.cast(new Kusto.Language.Syntax.ElementExpression(left,right),Kusto.Language.Syntax.Expression)})])})]);var RequiredFunctionCallOrPath=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,FunctionCallOrPath,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),UnaryPlusOrMinus=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.PlusToken).Hide$1(),RequiredFunctionCallOrPath,function(op,expr){return Bridge.cast(new Kusto.Language.Syntax.PrefixUnaryExpression(Kusto.Language.Syntax.SyntaxKind.UnaryPlusExpression,op,expr),Kusto.Language.Syntax.Expression)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.MinusToken).Hide$1(),RequiredFunctionCallOrPath,function(op,expr){return Bridge.cast(new Kusto.Language.Syntax.PrefixUnaryExpression(Kusto.Language.Syntax.SyntaxKind.UnaryMinusExpression,op,expr),Kusto.Language.Syntax.Expression)}),FunctionCallOrPath]),RequiredUnaryPlusOrMinus=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,UnaryPlusOrMinus,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),StringOperatorTokens=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxToken,System.Linq.Enumerable.from(Kusto.Language.Parsing.QueryGrammar.StringOperatorMap.Keys,Kusto.Language.Syntax.SyntaxKind).select(function(k){return Kusto.Language.Parsing.QueryGrammar.IsTokenVisible(k)?Kusto.Language.Parsing.SyntaxParsers.Token$1(k,Kusto.Language.Editor.CompletionKind.ScalarInfix,3,(Kusto.Language.Syntax.SyntaxFacts.GetText(k)||"")+' "|"'):Kusto.Language.Parsing.SyntaxParsers.Token$1(k).Hide$1()}).ToArray(Kusto.Language.Parsing.Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxToken))),StringOperation=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.AsteriskToken).Hide$1(),StringOperatorTokens,RequiredUnaryPlusOrMinus,function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.BinaryExpression(Kusto.Language.Parsing.QueryGrammar.StringOperatorMap.getItem(op.Kind),new Kusto.Language.Syntax.StarExpression(left),op,right),Kusto.Language.Syntax.Expression)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyOptional(Kusto.Language.Syntax.Expression,UnaryPlusOrMinus,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.Expression,_left,StringOperatorTokens,RequiredUnaryPlusOrMinus,function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.BinaryExpression(Kusto.Language.Parsing.QueryGrammar.StringOperatorMap.getItem(op.Kind),left,op,right),Kusto.Language.Syntax.Expression)})})]),RequiredStringOperation=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,StringOperation,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),Multiplicative=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyZeroOrMore(Kusto.Language.Syntax.Expression,StringOperation,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$2(Kusto.Language.Syntax.Expression,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.AsteriskToken,Kusto.Language.Editor.CompletionKind.ScalarInfix),RequiredStringOperation,function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.BinaryExpression(Kusto.Language.Syntax.SyntaxKind.MultiplyExpression,left,op,right),Kusto.Language.Syntax.Expression)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.SlashToken,Kusto.Language.Editor.CompletionKind.ScalarInfix),RequiredStringOperation,function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.BinaryExpression(Kusto.Language.Syntax.SyntaxKind.DivideExpression,left,op,right),Kusto.Language.Syntax.Expression)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.PercentToken,Kusto.Language.Editor.CompletionKind.ScalarInfix),RequiredStringOperation,function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.BinaryExpression(Kusto.Language.Syntax.SyntaxKind.ModuloExpression,left,op,right),Kusto.Language.Syntax.Expression)})])}),RequiredMultiplicative=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,Multiplicative,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),Additive=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyZeroOrMore(Kusto.Language.Syntax.Expression,Multiplicative,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$2(Kusto.Language.Syntax.Expression,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.PlusToken,Kusto.Language.Editor.CompletionKind.ScalarInfix),RequiredMultiplicative,function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.BinaryExpression(Kusto.Language.Syntax.SyntaxKind.AddExpression,left,op,right),Kusto.Language.Syntax.Expression)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.MinusToken,Kusto.Language.Editor.CompletionKind.ScalarInfix),RequiredMultiplicative,function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.BinaryExpression(Kusto.Language.Syntax.SyntaxKind.SubtractExpression,left,op,right),Kusto.Language.Syntax.Expression)})])}),RequiredAdditive=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,Additive,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),Relational=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyOptional(Kusto.Language.Syntax.Expression,Additive,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$2(Kusto.Language.Syntax.Expression,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.LessThanToken,Kusto.Language.Editor.CompletionKind.ScalarInfix),RequiredAdditive,function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.BinaryExpression(Kusto.Language.Syntax.SyntaxKind.LessThanExpression,left,op,right),Kusto.Language.Syntax.Expression)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.LessThanOrEqualToken,Kusto.Language.Editor.CompletionKind.ScalarInfix),RequiredAdditive,function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.BinaryExpression(Kusto.Language.Syntax.SyntaxKind.LessThanOrEqualExpression,left,op,right),Kusto.Language.Syntax.Expression)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.GreaterThanToken,Kusto.Language.Editor.CompletionKind.ScalarInfix),RequiredAdditive,function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.BinaryExpression(Kusto.Language.Syntax.SyntaxKind.GreaterThanExpression,left,op,right),Kusto.Language.Syntax.Expression)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.GreaterThanOrEqualToken,Kusto.Language.Editor.CompletionKind.ScalarInfix),RequiredAdditive,function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.BinaryExpression(Kusto.Language.Syntax.SyntaxKind.GreaterThanOrEqualExpression,left,op,right),Kusto.Language.Syntax.Expression)})])}),RequiredRelational=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,Relational,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),ExpressionCouple=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$4(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.ExpressionCouple,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.UnnamedExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.DotDotToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.UnnamedExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(openParen,first,dotDot,second,closeParen){return new Kusto.Language.Syntax.ExpressionCouple(openParen,first,dotDot,second,closeParen)}),InOperatorExpressionList=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.ExpressionList,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Best$1(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.SyntaxParsers.WithCompletionHint(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.SyntaxParsers.AnyToken,12)]),Kusto.Language.Parsing.SyntaxParsers.CommaList(Kusto.Language.Syntax.Expression,this.UnnamedExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression,!0,!1,void 0)),Kusto.Language.Parsing.SyntaxParsers.CommaList(Kusto.Language.Syntax.Expression,this.UnnamedExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression,!0,!1,void 0),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Kusto.Language.Parsing.SyntaxParsers.WithCompletionHint(Kusto.Language.Syntax.Expression,this.Expression,12),function(expr){return new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)).ctor)([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression))(expr)])})]),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(openParen,list,closeParen){return new Kusto.Language.Syntax.ExpressionList(openParen,list,closeParen)});InToken=function(inKind){var opText=Kusto.Language.Syntax.SyntaxFacts.GetText(inKind);return Kusto.Language.Parsing.SyntaxParsers.Token(inKind,[Kusto.Language.Parsing.SyntaxParsers.CreateCompletionItem$1(opText,Kusto.Language.Editor.CompletionKind.ScalarInfix,Kusto.Language.Editor.CompletionPriority.Normal,(opText||"")+" (|)",opText)])};var Equality=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.AsteriskToken).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.EqualEqualToken),Relational,function(asterisk,equal,expression){return Bridge.cast(new Kusto.Language.Syntax.BinaryExpression(Kusto.Language.Syntax.SyntaxKind.EqualExpression,new Kusto.Language.Syntax.StarExpression(asterisk),equal,expression),Kusto.Language.Syntax.Expression)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyOptional(Kusto.Language.Syntax.Expression,Relational,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$2(Kusto.Language.Syntax.Expression,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.EqualEqualToken,Kusto.Language.Editor.CompletionKind.ScalarInfix,Kusto.Language.Editor.CompletionPriority.Top),RequiredRelational,function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.BinaryExpression(Kusto.Language.Syntax.SyntaxKind.EqualExpression,left,op,right),Kusto.Language.Syntax.Expression)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.BangEqualToken,Kusto.Language.Editor.CompletionKind.ScalarInfix),RequiredRelational,function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.BinaryExpression(Kusto.Language.Syntax.SyntaxKind.NotEqualExpression,left,op,right),Kusto.Language.Syntax.Expression)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.LessThanGreaterThanToken,Kusto.Language.Editor.CompletionKind.ScalarInfix).Hide$1(),RequiredRelational,function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.BinaryExpression(Kusto.Language.Syntax.SyntaxKind.NotEqualExpression,left,op,right),Kusto.Language.Syntax.Expression)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.ExpressionList,Kusto.Language.Syntax.Expression,_left,InToken(Kusto.Language.Syntax.SyntaxKind.InKeyword),InOperatorExpressionList,function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.InExpression(Kusto.Language.Syntax.SyntaxKind.InExpression,left,op,right),Kusto.Language.Syntax.Expression)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.ExpressionList,Kusto.Language.Syntax.Expression,_left,InToken(Kusto.Language.Syntax.SyntaxKind.InCsKeyword),InOperatorExpressionList,function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.InExpression(Kusto.Language.Syntax.SyntaxKind.InCsExpression,left,op,right),Kusto.Language.Syntax.Expression)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.ExpressionList,Kusto.Language.Syntax.Expression,_left,InToken(Kusto.Language.Syntax.SyntaxKind.NotInKeyword),InOperatorExpressionList,function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.InExpression(Kusto.Language.Syntax.SyntaxKind.NotInExpression,left,op,right),Kusto.Language.Syntax.Expression)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.ExpressionList,Kusto.Language.Syntax.Expression,_left,InToken(Kusto.Language.Syntax.SyntaxKind.NotInCsKeyword),InOperatorExpressionList,function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.InExpression(Kusto.Language.Syntax.SyntaxKind.NotInCsExpression,left,op,right),Kusto.Language.Syntax.Expression)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.ExpressionList,Kusto.Language.Syntax.Expression,_left,InToken(Kusto.Language.Syntax.SyntaxKind.HasAnyKeyword),InOperatorExpressionList,function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.HasAnyExpression(Kusto.Language.Syntax.SyntaxKind.HasAnyKeyword,left,op,right),Kusto.Language.Syntax.Expression)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.ExpressionList,Kusto.Language.Syntax.Expression,_left,InToken(Kusto.Language.Syntax.SyntaxKind.HasAllKeyword),InOperatorExpressionList,function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.HasAllExpression(Kusto.Language.Syntax.SyntaxKind.HasAllKeyword,left,op,right),Kusto.Language.Syntax.Expression)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.ExpressionCouple,Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.BetweenKeyword,Kusto.Language.Editor.CompletionKind.ScalarInfix,3,(Kusto.Language.Syntax.SyntaxFacts.GetText(Kusto.Language.Syntax.SyntaxKind.BetweenKeyword)||"")+" (| .. )"),ExpressionCouple,function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.BetweenExpression(Kusto.Language.Syntax.SyntaxKind.BetweenExpression,left,op,right),Kusto.Language.Syntax.Expression)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.ExpressionCouple,Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.NotBetweenKeyword,Kusto.Language.Editor.CompletionKind.ScalarInfix,3,(Kusto.Language.Syntax.SyntaxFacts.GetText(Kusto.Language.Syntax.SyntaxKind.NotBetweenKeyword)||"")+" (| .. )"),ExpressionCouple,function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.BetweenExpression(Kusto.Language.Syntax.SyntaxKind.NotBetweenExpression,left,op,right),Kusto.Language.Syntax.Expression)})])})]),LogicalAnd=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyZeroOrMore(Kusto.Language.Syntax.Expression,Equality,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.AndKeyword,Kusto.Language.Editor.CompletionKind.ScalarInfix),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,Equality,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.BinaryExpression(Kusto.Language.Syntax.SyntaxKind.AndExpression,left,op,right),Kusto.Language.Syntax.Expression)})}),LogicalOr=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyZeroOrMore(Kusto.Language.Syntax.Expression,LogicalAnd,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.OrKeyword,Kusto.Language.Editor.CompletionKind.ScalarInfix),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,LogicalAnd,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.BinaryExpression(Kusto.Language.Syntax.SyntaxKind.OrExpression,left,op,right),Kusto.Language.Syntax.Expression)})});this.LiteralList=Kusto.Language.Parsing.SyntaxParsers.CommaList(Kusto.Language.Syntax.Expression,this.Literal,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression,!1,!0,void 0);RowSchema=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NameAndTypeDeclaration)),Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.RowSchema,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.CommaToken)),Kusto.Language.Parsing.SyntaxParsers.CommaList(Kusto.Language.Syntax.NameAndTypeDeclaration,NameAndTypeDeclaration,Kusto.Language.Parsing.QueryGrammar.CreateMissingNameAndTypeDeclaration,!1,!0,void 0),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(openParen,leadingComma,columns,closeParen){return new Kusto.Language.Syntax.RowSchema(openParen,leadingComma,columns,closeParen)});EvaluateRowSchema=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$5(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NameAndTypeDeclaration)),Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.EvaluateRowSchema,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.CommaToken)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.AsteriskToken)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.CommaToken)),Kusto.Language.Parsing.SyntaxParsers.CommaList(Kusto.Language.Syntax.NameAndTypeDeclaration,NameAndTypeDeclaration,Kusto.Language.Parsing.QueryGrammar.CreateMissingNameAndTypeDeclaration,!1,!0,void 0),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(openParen,leadingComma,asteriskToken,asteriskTokenComma,columns,closeParen){return new Kusto.Language.Syntax.EvaluateRowSchema(openParen,leadingComma,asteriskToken,asteriskTokenComma,columns,closeParen)});GetQueryOperatorParameterParsers=function(parameters,allowedNames,equalsNeeded){var $t,paramParsers=System.Linq.Enumerable.from(parameters,Kusto.Language.QueryOperatorParameter).select(function(p){return QueryParameter(p,equalsNeeded,parameters)}).toList(Kusto.Language.Parsing.Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.NamedParameter)),additionalParameters,ap;if(allowedNames!==Kusto.Language.Parsing.AllowedNameKind.DeclaredOnly){additionalParameters=System.Linq.Enumerable.from(Kusto.Language.QueryOperatorParameters.AllParameters,Kusto.Language.QueryOperatorParameter).where(function(p){return!System.Linq.Enumerable.from(parameters,Kusto.Language.QueryOperatorParameter).any(function(p2){return Bridge.referenceEquals(p.Name,p2.Name)})}).toList(Kusto.Language.QueryOperatorParameter);$t=Bridge.getEnumerator(additionalParameters);try{while($t.moveNext())ap=$t.Current,paramParsers.add(QueryParameter(ap,equalsNeeded,Kusto.Language.QueryOperatorParameters.AllParameters))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}return paramParsers};QueryParameterList=function(parameters,allowedNames,equalsNeeded){var $t,paramParsers=GetQueryOperatorParameterParsers(parameters,allowedNames,equalsNeeded),first=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.NamedParameter,($t=Kusto.Language.Parsing.Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.NamedParameter),System.Linq.Enumerable.from(paramParsers,$t).ToArray($t)));return Kusto.Language.Parsing.SyntaxParsers.List(Kusto.Language.Syntax.NamedParameter,first)};var DataTableExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$6(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Kusto.Language.Syntax.RowSchema,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.DataTableKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix),QueryParameterList(Kusto.Language.QueryOperatorParameters.DataTableParameters,0,!1),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.RowSchema,RowSchema,Kusto.Language.Parsing.QueryGrammar.CreateMissingRowSchema),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.OpenBracketToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.CommaToken)),this.LiteralList,Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.CloseBracketToken),function(keyword,parameters,schema,openBracket,leadingComma,values,closeBracket){return Bridge.cast(new Kusto.Language.Syntax.DataTableExpression(keyword,parameters,schema,openBracket,leadingComma,values,closeBracket),Kusto.Language.Syntax.Expression)}),ContextualDataTableExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.RowSchema,Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.ContextualDataTableKeyword).Hide$1(),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.UnnamedExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.RowSchema,RowSchema,Kusto.Language.Parsing.QueryGrammar.CreateMissingRowSchema),function(keyword,id,schema){return Bridge.cast(new Kusto.Language.Syntax.ContextualDataTableExpression(keyword,id,schema),Kusto.Language.Syntax.Expression)}),ExternalDataWithClausePropertyValue=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[this.StringLiteral,LongLiteral,RealLiteral,BooleanLiteral,DateTimeLiteral,TypeofLiteral,RawGuidLiteral,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.NameDeclaration,Kusto.Language.Syntax.Expression,RenameName,function(n){return Bridge.cast(n,Kusto.Language.Syntax.Expression)})]),ExternalDataWithClauseProperty=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.NameDeclaration,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.NamedParameter,RenameName,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.EqualToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,ExternalDataWithClausePropertyValue,Kusto.Language.Parsing.QueryGrammar.CreateMissingValue),function(name,equals,value){return new Kusto.Language.Syntax.NamedParameter(name,equals,value)}),ExternalDataWithClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NamedParameter)),Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.ExternalDataWithClause,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.WithKeyword),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.SyntaxParsers.CommaList(Kusto.Language.Syntax.NamedParameter,ExternalDataWithClauseProperty,Kusto.Language.Parsing.QueryGrammar.CreateMissingNamedParameter),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(keyword,openParen,list,closeParen){return new Kusto.Language.Syntax.ExternalDataWithClause(keyword,openParen,list,closeParen)}),ExternalDataExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$6(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Kusto.Language.Syntax.RowSchema,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.ExternalDataWithClause,Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxToken,[Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.ExternalDataKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.External_DataKeyword).Hide$1()]),QueryParameterList(Kusto.Language.QueryOperatorParameters.ExternalDataWithClauseProperties,0,!1),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.RowSchema,RowSchema,Kusto.Language.Parsing.QueryGrammar.CreateMissingRowSchema),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.OpenBracketToken),Kusto.Language.Parsing.SyntaxParsers.CommaList(Kusto.Language.Syntax.Expression,this.Literal,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression,!0,!0,void 0),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.CloseBracketToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.ExternalDataWithClause,ExternalDataWithClause),function(keyword,parameters,schema,openBracket,name,closeBracket,withClause){return Bridge.cast(new Kusto.Language.Syntax.ExternalDataExpression(keyword,parameters,schema,openBracket,name,closeBracket,withClause),Kusto.Language.Syntax.Expression)}),ConsumeOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.ConsumeKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix).Hide$1(),QueryParameterList(Kusto.Language.QueryOperatorParameters.ConsumeParameters,0,!1),function(consume,parameters){return Bridge.cast(new Kusto.Language.Syntax.ConsumeOperator(consume,parameters),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<consume>"),CountAsIdentifierClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.CountAsIdentifierClause,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.AsKeyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.IdentifierToken),function(asKeyword,identifier){return new Kusto.Language.Syntax.CountAsIdentifierClause(asKeyword,identifier)}),CountOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.CountAsIdentifierClause,Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.CountKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix,Kusto.Language.Editor.CompletionPriority.High),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.CountAsIdentifierClause,CountAsIdentifierClause),function(countKeyword,asIdentifier){return Bridge.cast(new Kusto.Language.Syntax.CountOperator(countKeyword,asIdentifier),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<count>"),ExecuteAndCacheOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.ExecuteAndCacheKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix),function(keyword){return Bridge.cast(new Kusto.Language.Syntax.ExecuteAndCacheOperator(keyword),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<execute-and-cache>"),ExtendOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.ExtendKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix,Kusto.Language.Editor.CompletionPriority.High),Kusto.Language.Parsing.SyntaxParsers.CommaList(Kusto.Language.Syntax.Expression,this.NamedExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression,!0,!1,void 0),function(keyword,list){return Bridge.cast(new Kusto.Language.Syntax.ExtendOperator(keyword,list),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<extend>"),FacetWithClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.FacetWithClause,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.FacetWithClause,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.WithKeyword),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,ForkPipeExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingQueryOperatorExpression),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(withKeyword,openParen,expr,closeParen){return Bridge.cast(new Kusto.Language.Syntax.FacetWithExpressionClause(withKeyword,openParen,expr,closeParen),Kusto.Language.Syntax.FacetWithClause)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.QueryOperator,Kusto.Language.Syntax.FacetWithClause,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.WithKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.QueryOperator,ForkPipeOperator,Kusto.Language.Parsing.QueryGrammar.CreateMissingQueryOperator),function(withKeyword,op){return Bridge.cast(new Kusto.Language.Syntax.FacetWithOperatorClause(withKeyword,op),Kusto.Language.Syntax.FacetWithClause)})]),FacetOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Kusto.Language.Syntax.FacetWithClause,Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.FacetKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.ByKeyword),Kusto.Language.Parsing.SyntaxParsers.SeparatedList$1(Kusto.Language.Syntax.Expression,SimplePathExpression,Kusto.Language.Syntax.SyntaxKind.CommaToken,Kusto.Language.Parsing.QueryGrammar.CreateMissingNameReference,void 0,!0,!1),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.FacetWithClause,FacetWithClause),function(facetKeyword,byKeyword,list,withClause){return Bridge.cast(new Kusto.Language.Syntax.FacetOperator(facetKeyword,byKeyword,list,withClause),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<facet>"),FilterOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxToken,[Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.WhereKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix,Kusto.Language.Editor.CompletionPriority.Top),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.FilterKeyword).Hide$1()]),QueryParameterList(Kusto.Language.QueryOperatorParameters.FilterParameters,0,!0),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.NamedExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),function(keyword,parameters,condition){return Bridge.cast(new Kusto.Language.Syntax.FilterOperator(keyword,parameters,condition),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<filter>"),GetSchemaOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.NamedParameter,Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.GetSchemaKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix,Kusto.Language.Editor.CompletionPriority.Low),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.NamedParameter,QueryParameter(Kusto.Language.QueryOperatorParameters.GetSchemaKind,!1,void 0)),function(keyword,kind){return Bridge.cast(new Kusto.Language.Syntax.GetSchemaOperator(keyword,kind),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<get-schema>"),AsOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Kusto.Language.Syntax.NameDeclaration,Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.AsKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix,Kusto.Language.Editor.CompletionPriority.Low),QueryParameterList(Kusto.Language.QueryOperatorParameters.AsParameters,0,!0),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.NameDeclaration,this.SimpleNameDeclaration,Kusto.Language.Parsing.QueryGrammar.CreateMissingNameDeclaration),function(keyword,parameters,name){return Bridge.cast(new Kusto.Language.Syntax.AsOperator(keyword,parameters,name),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<as>"),FindOperand=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Best$1(Kusto.Language.Syntax.Expression,[WildcardedEntityReference,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyOptional(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[BracketedEntityNamePathElementSelector,BarePathElementSelector]),function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.QueryOperator,Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.BarToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.QueryOperator,AsOperator,Kusto.Language.Parsing.QueryGrammar.CreateMissingQueryOperator),function(left,bar,op){return Bridge.cast(new Kusto.Language.Syntax.PipeExpression(left,bar,op),Kusto.Language.Syntax.Expression)})})]),FindInClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.FindInClause,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.InKeyword),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.SyntaxParsers.CommaList(Kusto.Language.Syntax.Expression,FindOperand,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression,!0,!1,void 0),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(inKeyword,openParen,exprs,closeParen){return new Kusto.Language.Syntax.FindInClause(inKeyword,openParen,exprs,closeParen)}),ColumnNameReference=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[IdentifierNameReference,KeywordAsIdentifierNameReference,BracketedNameReference,ClientParameterReference]).WithTag$1("<column>"),TypedColumnNameReference=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyOptional(Kusto.Language.Syntax.Expression,ColumnNameReference,Bridge.fn.bind(this,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.TypeExpression,Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.ColonToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.TypeExpression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.TypeExpression,[this.ParamTypeExtended,InvalidParamType]),Kusto.Language.Parsing.QueryGrammar.CreateMissingType),function(name,colon,type){return Bridge.cast(new Kusto.Language.Syntax.TypedColumnReference(Bridge.cast(name,Kusto.Language.Syntax.NameReference),colon,type),Kusto.Language.Syntax.Expression)})})),PackExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.PackKeyword),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.AsteriskToken,Kusto.Language.Editor.CompletionKind.Syntax),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(pack,openParen,asterisk,closeParen){return Bridge.cast(new Kusto.Language.Syntax.PackExpression(pack,openParen,asterisk,closeParen),Kusto.Language.Syntax.Expression)}),FindProjectColumn=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[PackExpression,StarExpression,TypedColumnNameReference]),FindProjectClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.FindProjectClause,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Kusto.Language.Syntax.FindProjectClause,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.ProjectKeyword),Kusto.Language.Parsing.SyntaxParsers.CommaList(Kusto.Language.Syntax.Expression,FindProjectColumn,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression,!0,!1,void 0),function(token,list){return new Kusto.Language.Syntax.FindProjectClause(token,list)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.FindProjectClause,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.ProjectSmartKeyword),function(token){return new Kusto.Language.Syntax.FindProjectClause(token,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)).Empty())})]),FindProjectAwayClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Kusto.Language.Syntax.FindProjectClause,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind._ProjectAwayKeyword),Kusto.Language.Parsing.SyntaxParsers.CommaList(Kusto.Language.Syntax.Expression,FindProjectColumn,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression,!0,!1,void 0),function(token,list){return new Kusto.Language.Syntax.FindProjectClause(token,list)});DataScopeClause=function(ckind){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.DataScopeClause,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.DataScopeKeyword,ckind).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.EqualToken),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$3(Kusto.Language.KustoFacts.DataScopeValues),function(dataScopeKeyword,equalToken,valueToken){return new Kusto.Language.Syntax.DataScopeClause(dataScopeKeyword,equalToken,valueToken)})};var FindOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$7(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.DataScopeClause,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Kusto.Language.Syntax.FindInClause,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.FindProjectClause,Kusto.Language.Syntax.FindProjectClause,Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.FindKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.DataScopeClause,DataScopeClause(Kusto.Language.Editor.CompletionKind.Syntax)),QueryParameterList(Kusto.Language.QueryOperatorParameters.FindParameters,0,!0),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.FindInClause,FindInClause),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.WhereKeyword)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.UnnamedExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.FindProjectClause,FindProjectClause),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.FindProjectClause,FindProjectAwayClause).Hide$1(),function(findKeyword,dataScope,parameters,inClause,whereKeyword,condition,project,projectAway){return Bridge.cast(new Kusto.Language.Syntax.FindOperator(findKeyword,dataScope,parameters,inClause,whereKeyword||(parameters.ChildCount>0||inClause!=null?Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken(Kusto.Language.Syntax.SyntaxKind.WhereKeyword):null),condition,project,projectAway),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<find>"),SearchPredicate=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[this.UnnamedExpression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyOptional(Kusto.Language.Syntax.Expression,StarExpression,Bridge.fn.bind(this,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.AndKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.UnnamedExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.BinaryExpression(Kusto.Language.Syntax.SyntaxKind.AndExpression,left,op,right),Kusto.Language.Syntax.Expression)})}))]),SearchOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$4(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Kusto.Language.Syntax.DataScopeClause,Kusto.Language.Syntax.FindInClause,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.SearchKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix),QueryParameterList(Kusto.Language.QueryOperatorParameters.SearchParameters,0,!0),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.DataScopeClause,DataScopeClause(Kusto.Language.Editor.CompletionKind.Syntax)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.FindInClause,FindInClause),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,SearchPredicate,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),function(keyword,parameters,dataScope,inClause,predicate){return Bridge.cast(new Kusto.Language.Syntax.SearchOperator(keyword,parameters,dataScope,inClause,predicate),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<search>"),NameEqualsClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.NameEqualsClause,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Or([Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.IdentifierToken),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.OpenBracketToken)]),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.NameDeclaration,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.NameEqualsClause,this.SimpleNameDeclaration,Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.EqualToken),function(name,equalsToken){return new Kusto.Language.Syntax.NameEqualsClause(name,equalsToken)})),ForkExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Kusto.Language.Syntax.NameEqualsClause,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.ForkExpression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.NameEqualsClause,NameEqualsClause),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[ForkPipeExpression,this.Expression.Hide$1()]),Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(nameClause,openParen,expr,closeParen){return new Kusto.Language.Syntax.ForkExpression(nameClause,openParen,expr,closeParen)}),ForkOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.ForkExpression),Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.ForkKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.List(Kusto.Language.Syntax.ForkExpression,ForkExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingForkExpression,!0),function(forkKeyword,list){return Bridge.cast(new Kusto.Language.Syntax.ForkOperator(forkKeyword,list),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<fork>"),JoinEqualityExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyOptional(Kusto.Language.Syntax.Expression,FunctionCallOrPath,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.EqualEqualToken,Kusto.Language.Editor.CompletionKind.ScalarInfix),RequiredFunctionCallOrPath,function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.BinaryExpression(Kusto.Language.Syntax.SyntaxKind.EqualExpression,left,op,right),Kusto.Language.Syntax.Expression)})}),JoinAndExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyZeroOrMore(Kusto.Language.Syntax.Expression,JoinEqualityExpression,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.AndKeyword,Kusto.Language.Editor.CompletionKind.ScalarInfix),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,JoinEqualityExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.BinaryExpression(Kusto.Language.Syntax.SyntaxKind.AndExpression,left,op,right),Kusto.Language.Syntax.Expression)})}),JoinOnExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Best$1(Kusto.Language.Syntax.Expression,[JoinAndExpression,this.UnnamedExpression.Hide$1()]),JoinOnClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Kusto.Language.Syntax.JoinConditionClause,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.OnKeyword),Kusto.Language.Parsing.SyntaxParsers.CommaList(Kusto.Language.Syntax.Expression,JoinOnExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression,!0,!1,void 0),function(onKeyword,list){return Bridge.cast(new Kusto.Language.Syntax.JoinOnClause(onKeyword,list),Kusto.Language.Syntax.JoinConditionClause)}),JoinWhereClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.JoinConditionClause,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.WhereKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.UnnamedExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),function(keyword,predicate){return Bridge.cast(new Kusto.Language.Syntax.JoinWhereClause(keyword,predicate),Kusto.Language.Syntax.JoinConditionClause)}),JoinOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.JoinConditionClause,Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.JoinKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix,Kusto.Language.Editor.CompletionPriority.High),QueryParameterList(Kusto.Language.QueryOperatorParameters.JoinParameters,0,!0),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.UnnamedExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.JoinConditionClause,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.JoinConditionClause,[JoinOnClause,JoinWhereClause.Hide$1()])),function(joinKeyword,parameters,expr,condition){return Bridge.cast(new Kusto.Language.Syntax.JoinOperator(joinKeyword,parameters,expr,condition),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<join>"),LookupOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.JoinConditionClause,Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.LookupKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix,Kusto.Language.Editor.CompletionPriority.High),QueryParameterList(Kusto.Language.QueryOperatorParameters.LookupParameters,0,!0),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.UnnamedExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.JoinConditionClause,JoinOnClause,Kusto.Language.Parsing.QueryGrammar.CreateMissingJoinOnClause),function(LookupKeyword,parameters,expr,onClause){return Bridge.cast(new Kusto.Language.Syntax.LookupOperator(LookupKeyword,parameters,expr,onClause),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<lookup>"),MakeSeriesOnClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.MakeSeriesOnClause,Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.OnKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.NamedExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),function(keyword,expr){return new Kusto.Language.Syntax.MakeSeriesOnClause(keyword,expr)}),MakeSeriesInRangeClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$4(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.MakeSeriesRangeClause,Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.InKeyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.RangeKeyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.SyntaxParsers.CommaList(Kusto.Language.Syntax.Expression,this.NamedExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(inKeyword,rangeKeyword,openParen,list,closeParen){return Bridge.cast(new Kusto.Language.Syntax.MakeSeriesInRangeClause(inKeyword,rangeKeyword,new Kusto.Language.Syntax.ExpressionList(openParen,list,closeParen)),Kusto.Language.Syntax.MakeSeriesRangeClause)}),MakeSeriesFromClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.MakeSeriesFromClause,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.FromKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.UnnamedExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),function(FromToken,fromEx){return new Kusto.Language.Syntax.MakeSeriesFromClause(FromToken,fromEx)}),MakeSeriesToClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.MakeSeriesToClause,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.ToKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.UnnamedExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),function(ToToken,toEx){return new Kusto.Language.Syntax.MakeSeriesToClause(ToToken,toEx)}),MakeSeriesStepClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.MakeSeriesStepClause,Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.StepKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.UnnamedExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),function(stepToken,stepEx){return new Kusto.Language.Syntax.MakeSeriesStepClause(stepToken,stepEx)}),MakeSeriesFromToStepClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.MakeSeriesRangeClause,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxToken,[Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.FromKeyword),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.ToKeyword),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.StepKeyword)]),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.MakeSeriesFromClause,Kusto.Language.Syntax.MakeSeriesToClause,Kusto.Language.Syntax.MakeSeriesStepClause,Kusto.Language.Syntax.MakeSeriesRangeClause,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.MakeSeriesFromClause,MakeSeriesFromClause),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.MakeSeriesToClause,MakeSeriesToClause),MakeSeriesStepClause,function(fromClause,toClause,stepClause){return Bridge.cast(new Kusto.Language.Syntax.MakeSeriesFromToStepClause(fromClause,toClause,stepClause),Kusto.Language.Syntax.MakeSeriesRangeClause)})),MakeSeriesByClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Kusto.Language.Syntax.MakeSeriesByClause,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.ByKeyword),Kusto.Language.Parsing.SyntaxParsers.CommaList(Kusto.Language.Syntax.Expression,this.NamedExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression,!0,!1,void 0),function(keyword,list){return new Kusto.Language.Syntax.MakeSeriesByClause(keyword,list)}),DefaultExpressionClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.DefaultExpressionClause,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.DefaultKeyword),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.EqualToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.NamedExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),function(defaultKeyword,equalToken,expr){return new Kusto.Language.Syntax.DefaultExpressionClause(defaultKeyword,equalToken,expr)}),MakeSeriesExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.DefaultExpressionClause,Kusto.Language.Syntax.MakeSeriesExpression,this.NamedExpression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.DefaultExpressionClause,DefaultExpressionClause),function(agg,defexp){return new Kusto.Language.Syntax.MakeSeriesExpression(agg,defexp)}),MakeSeriesOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$5(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MakeSeriesExpression)),Kusto.Language.Syntax.MakeSeriesOnClause,Kusto.Language.Syntax.MakeSeriesRangeClause,Kusto.Language.Syntax.MakeSeriesByClause,Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.MakeSeriesKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix),QueryParameterList(Kusto.Language.QueryOperatorParameters.MakeSeriesParameters,0,!0),Kusto.Language.Parsing.SyntaxParsers.SeparatedList$1(Kusto.Language.Syntax.MakeSeriesExpression,MakeSeriesExpression,Kusto.Language.Syntax.SyntaxKind.CommaToken,Kusto.Language.Parsing.QueryGrammar.CreateMissingMakeSeriesExpression,void 0,!0,!1),MakeSeriesOnClause,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.MakeSeriesRangeClause,[MakeSeriesFromToStepClause,MakeSeriesInRangeClause]),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.MakeSeriesByClause,MakeSeriesByClause),function(keyword,parameters,aggregates,onClause,rangeClause,byClause){return Bridge.cast(new Kusto.Language.Syntax.MakeSeriesOperator(keyword,parameters,aggregates,onClause,rangeClause,byClause),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<make-series>"),ToTypeOfClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.ToTypeOfClause,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.ToKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,TypeofLiteral,Kusto.Language.Parsing.QueryGrammar.CreateMissingTypeOfLiteral),function(toKeyword,typeOfLiteral){return new Kusto.Language.Syntax.ToTypeOfClause(toKeyword,Bridge.cast(typeOfLiteral,Kusto.Language.Syntax.TypeOfLiteralExpression))}),MvExpandExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.MvExpandExpression,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.MvExpandExpression,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.ToKeyword).Hide$1(),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.ToTypeOfClause,Kusto.Language.Syntax.MvExpandExpression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.NamedExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),ToTypeOfClause,function(expr,toTypeOfClause){return new Kusto.Language.Syntax.MvExpandExpression(expr,toTypeOfClause)})),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.ToTypeOfClause,Kusto.Language.Syntax.MvExpandExpression,this.NamedExpression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.ToTypeOfClause,ToTypeOfClause),function(expr,toTypeOfClause){return new Kusto.Language.Syntax.MvExpandExpression(expr,toTypeOfClause)})]),MvExpandExpressionList=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MvExpandExpression)),[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MvExpandExpression)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.ToKeyword),TypeofLiteral,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Fails(Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.CommaToken))]),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.ToTypeOfClause,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MvExpandExpression)),ToTypeOfClause,function(clause){return new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MvExpandExpression)).ctor)(System.Array.init([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MvExpandExpression))(new Kusto.Language.Syntax.MvExpandExpression(null,clause))],Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MvExpandExpression)))})).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.SeparatedList$1(Kusto.Language.Syntax.MvExpandExpression,MvExpandExpression,Kusto.Language.Syntax.SyntaxKind.CommaToken,Kusto.Language.Parsing.QueryGrammar.CreateMissingMvExpandExpression,void 0,!0,!1)]),MvExpandRowLimitClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.MvExpandRowLimitClause,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.LimitKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.UnnamedExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),function(keyword,expr){return new Kusto.Language.Syntax.MvExpandRowLimitClause(keyword,expr)}),MvExpandOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MvExpandExpression)),Kusto.Language.Syntax.MvExpandRowLimitClause,Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxToken,[Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.MvExpandKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.MvDashExpandKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix)]),QueryParameterList(Kusto.Language.QueryOperatorParameters.MvExpandParameters,0,!0),MvExpandExpressionList,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.MvExpandRowLimitClause,MvExpandRowLimitClause),function(keyword,parameters,list,rowLimit){return Bridge.cast(new Kusto.Language.Syntax.MvExpandOperator(keyword,parameters,list,rowLimit),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<mvexpand>"),MvApplyExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.MvApplyExpression,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.MvApplyExpression,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.ToKeyword).Hide$1(),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.ToTypeOfClause,Kusto.Language.Syntax.MvApplyExpression,ToTypeOfClause,function(clause){return new Kusto.Language.Syntax.MvApplyExpression(Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression(),clause)})),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.ToTypeOfClause,Kusto.Language.Syntax.MvApplyExpression,this.NamedExpression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.ToTypeOfClause,ToTypeOfClause),function(expr,toTypeOfClause){return new Kusto.Language.Syntax.MvApplyExpression(expr,toTypeOfClause)})]),MvApplyExpressionList=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MvApplyExpression)),[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MvApplyExpression)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.ToKeyword),TypeofLiteral,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Fails(Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.CommaToken))]),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.ToTypeOfClause,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MvApplyExpression)),ToTypeOfClause,function(clause){return new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MvApplyExpression)).ctor)(System.Array.init([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MvApplyExpression))(new Kusto.Language.Syntax.MvApplyExpression(null,clause))],Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MvApplyExpression)))})).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.SeparatedList$1(Kusto.Language.Syntax.MvApplyExpression,MvApplyExpression,Kusto.Language.Syntax.SyntaxKind.CommaToken,Kusto.Language.Parsing.QueryGrammar.CreateMissingMvApplyExpression,void 0,!0,!1)]),MvApplyRowLimitClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.MvApplyRowLimitClause,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.LimitKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.UnnamedExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),function(keyword,expr){return new Kusto.Language.Syntax.MvApplyRowLimitClause(keyword,expr)}),MvApplyContextIdClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.MvApplyContextIdClause,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.IdKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.UnnamedExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),function(keyword,expr){return new Kusto.Language.Syntax.MvApplyContextIdClause(keyword,expr)}),MvApplySubqueryExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.MvApplySubqueryExpression,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,ContextualSubExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(openParen,expr,closeParen){return new Kusto.Language.Syntax.MvApplySubqueryExpression(openParen,expr,closeParen)}),MvApplyOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$6(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MvApplyExpression)),Kusto.Language.Syntax.MvApplyRowLimitClause,Kusto.Language.Syntax.MvApplyContextIdClause,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.MvApplySubqueryExpression,Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxToken,[Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.MvApplyKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.MvDashApplyKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix)]),QueryParameterList(Kusto.Language.QueryOperatorParameters.MvApplyParameters,0,!0),MvApplyExpressionList,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.MvApplyRowLimitClause,MvApplyRowLimitClause),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.MvApplyContextIdClause,MvApplyContextIdClause).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.OnKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.MvApplySubqueryExpression,MvApplySubqueryExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingMvApplySubqueryExpression),function(keyword,parameters,list,rowLimit,contextId,onKeyword,subquery){return Bridge.cast(new Kusto.Language.Syntax.MvApplyOperator(keyword,parameters,list,rowLimit,contextId,onKeyword,subquery),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<mvapply>"),EvaluateSchemaClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.EvaluateRowSchema,Kusto.Language.Syntax.EvaluateSchemaClause,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.ColonToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.EvaluateRowSchema,EvaluateRowSchema,Kusto.Language.Parsing.QueryGrammar.CreateMissingEvaluateRowSchema),function(keyword,expr){return new Kusto.Language.Syntax.EvaluateSchemaClause(keyword,expr)}),EvaluateOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.EvaluateSchemaClause,Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.EvaluateKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix,Kusto.Language.Editor.CompletionPriority.Low),QueryParameterList(Kusto.Language.QueryOperatorParameters.EvaluateParameters,0,!1),RequiredFunctionCall,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.EvaluateSchemaClause,EvaluateSchemaClause),function(keyword,parameters,expr,schema){return Bridge.cast(new Kusto.Language.Syntax.EvaluateOperator(keyword,parameters,Bridge.cast(expr,Kusto.Language.Syntax.FunctionCallExpression),schema),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<evaluate>"),NameAndOptionalTypeDeclaration=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyOptional(Kusto.Language.Syntax.Expression,ExtendedNameDeclarationExpression,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.TypeExpression,Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.ColonToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.TypeExpression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.TypeExpression,[ParamType,InvalidParamType]),Kusto.Language.Parsing.QueryGrammar.CreateMissingType),function(name,colon,type){return Bridge.cast(new Kusto.Language.Syntax.NameAndTypeDeclaration(Bridge.cast(name,Kusto.Language.Syntax.NameDeclaration),colon,type),Kusto.Language.Syntax.Expression)})}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.TypeExpression,Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.ColonToken).Hide$1(),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.TypeExpression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.TypeExpression,[ParamType,InvalidParamType]),Kusto.Language.Parsing.QueryGrammar.CreateMissingType),function(colon,type){return Bridge.cast(new Kusto.Language.Syntax.NameAndTypeDeclaration(Kusto.Language.Parsing.QueryGrammar.CreateMissingNameDeclaration(),colon,type),Kusto.Language.Syntax.Expression)})]),ParseWithExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[StarExpression,StringOrCompoundStringLiteral,NameAndOptionalTypeDeclaration]),ParseOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$4(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SyntaxNode),Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.ParseKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix,Kusto.Language.Editor.CompletionPriority.Low),QueryParameterList(Kusto.Language.QueryOperatorParameters.ParseParameters,0,!0),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.UnnamedExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.WithKeyword),Kusto.Language.Parsing.SyntaxParsers.List(Kusto.Language.Syntax.SyntaxNode,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxNode,ParseWithExpression,function(e){return Bridge.cast(e,Kusto.Language.Syntax.SyntaxNode)})),function(parseKeyword,parameters,expr,withKeyword,expressions){return Bridge.cast(new Kusto.Language.Syntax.ParseOperator(parseKeyword,parameters,expr,withKeyword,expressions),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<parse>"),ParseWhereOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$4(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SyntaxNode),Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.ParseWhereKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix,Kusto.Language.Editor.CompletionPriority.Low),QueryParameterList(Kusto.Language.QueryOperatorParameters.ParseParameters,0,!0),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.UnnamedExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.WithKeyword),Kusto.Language.Parsing.SyntaxParsers.List(Kusto.Language.Syntax.SyntaxNode,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxNode,ParseWithExpression,function(e){return Bridge.cast(e,Kusto.Language.Syntax.SyntaxNode)})),function(parseKeyword,parameters,expr,withKeyword,expressions){return Bridge.cast(new Kusto.Language.Syntax.ParseWhereOperator(parseKeyword,parameters,expr,withKeyword,expressions),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<parse-where>");QueryParameterCommaList=function(parameters,allowedNames,equalsNeeded){var $t,paramParsers=GetQueryOperatorParameterParsers(parameters,allowedNames,equalsNeeded),first=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.NamedParameter,($t=Kusto.Language.Parsing.Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.NamedParameter),System.Linq.Enumerable.from(paramParsers,$t).ToArray($t)));return Kusto.Language.Parsing.SyntaxParsers.CommaList(Kusto.Language.Syntax.NamedParameter,first,Kusto.Language.Parsing.QueryGrammar.CreateMissingNamedParameter)};var ParseKvWithClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NamedParameter)),Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.ParseKvWithClause,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.WithKeyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),QueryParameterCommaList(Kusto.Language.QueryOperatorParameters.ParseKvWithProperties,0,!1),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(withKeyword,openParen,properties,closeParen){return new Kusto.Language.Syntax.ParseKvWithClause(withKeyword,openParen,properties,closeParen)}),ParseKvOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$4(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.RowSchema,Kusto.Language.Syntax.ParseKvWithClause,Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.ParseKvKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix,Kusto.Language.Editor.CompletionPriority.Low),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.UnnamedExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.AsKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.RowSchema,RowSchema,Kusto.Language.Parsing.QueryGrammar.CreateMissingRowSchema),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.ParseKvWithClause,ParseKvWithClause),function(parseKvKeyword,expression,asKeyword,keys,withClause){return Bridge.cast(new Kusto.Language.Syntax.ParseKvOperator(parseKvKeyword,expression,asKeyword,keys,withClause),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<parse-kv>"),PartitionScopeClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.PartitionScope,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.InKeyword).Hide$1(),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[FunctionCall,DynamicLiteral]),Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),function(inKeyword,expr){return new Kusto.Language.Syntax.PartitionScope(inKeyword,expr)}),PartitionQueryExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.PartitionOperand,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.OpenBraceToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.Expression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.CloseBraceToken),function(openBrace,expr,closeBrace){return Bridge.cast(new Kusto.Language.Syntax.PartitionQuery(openBrace,expr,closeBrace),Kusto.Language.Syntax.PartitionOperand)}),PartitionSubqueryExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.PartitionOperand,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[this.PipeSubExpression,this.Expression.Hide$1()]),Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(openParen,expr,closeParen){return Bridge.cast(new Kusto.Language.Syntax.PartitionSubquery(openParen,expr,closeParen),Kusto.Language.Syntax.PartitionOperand)}),PartitionOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$5(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.PartitionScope,Kusto.Language.Syntax.PartitionOperand,Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.PartitionKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix,Kusto.Language.Editor.CompletionPriority.Low),QueryParameterList(Kusto.Language.QueryOperatorParameters.PartitionParameters,0,!1),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.ByKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,SimplePathExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingNameReference),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.PartitionScope,PartitionScopeClause),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.PartitionOperand,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.PartitionOperand,[PartitionSubqueryExpression,PartitionQueryExpression]),Kusto.Language.Parsing.QueryGrammar.CreateMissingPartitionOperand),function(partitionKeyword,parameters,byKeyword,byExpression,scope,operand){return Bridge.cast(new Kusto.Language.Syntax.PartitionOperator(partitionKeyword,parameters,byKeyword,byExpression,scope,operand),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<partition>"),PartitionByIdClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.PartitionByIdClause,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.IdKeyword),this.Literal,function(keyword,value){return new Kusto.Language.Syntax.PartitionByIdClause(keyword,value)}),PartitionByOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$6(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.PartitionByIdClause,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.HiddenToken(Kusto.Language.Syntax.SyntaxKind.PartitionByKeyword),QueryParameterList(Kusto.Language.QueryOperatorParameters.PartitionByParameters,0,!1),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,SimplePathExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingNameReference),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.PartitionByIdClause,PartitionByIdClause),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,ContextualSubExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(keyword,parameters,entity,idClause,openParen,subQuery,closeParen){return Bridge.cast(new Kusto.Language.Syntax.PartitionByOperator(keyword,parameters,entity,idClause,openParen,subQuery,closeParen),Kusto.Language.Syntax.QueryOperator)}),ProjectOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.ProjectKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix,Kusto.Language.Editor.CompletionPriority.High),Kusto.Language.Parsing.SyntaxParsers.CommaList(Kusto.Language.Syntax.Expression,this.NamedExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),function(keyword,list){return Bridge.cast(new Kusto.Language.Syntax.ProjectOperator(keyword,list),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<project>"),ProjectAwayOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.ProjectAwayKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix,Kusto.Language.Editor.CompletionPriority.High),Kusto.Language.Parsing.SyntaxParsers.CommaList(Kusto.Language.Syntax.Expression,SimpleOrWildcardedEntityReference,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),function(keyword,list){return Bridge.cast(new Kusto.Language.Syntax.ProjectAwayOperator(keyword,list),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<project-away>"),ProjectKeepOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.ProjectKeepKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix,Kusto.Language.Editor.CompletionPriority.High),Kusto.Language.Parsing.SyntaxParsers.CommaList(Kusto.Language.Syntax.Expression,SimpleOrWildcardedEntityReference,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression,!0,!1,void 0),function(keyword,list){return Bridge.cast(new Kusto.Language.Syntax.ProjectKeepOperator(keyword,list),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<project-keep>"),ProjectRenameOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.ProjectRenameKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix,Kusto.Language.Editor.CompletionPriority.High),Kusto.Language.Parsing.SyntaxParsers.CommaList(Kusto.Language.Syntax.Expression,this.NamedExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),function(keyword,list){return Bridge.cast(new Kusto.Language.Syntax.ProjectRenameOperator(keyword,list),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<project-rename>"),SampleOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.SampleKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix,Kusto.Language.Editor.CompletionPriority.Low),QueryParameterList(Kusto.Language.QueryOperatorParameters.SampleParameters,0,!0),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.NamedExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),function(sampleKeyword,parameters,expression){return Bridge.cast(new Kusto.Language.Syntax.SampleOperator(sampleKeyword,parameters,expression),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<sample>"),SampleDistinctOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$4(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.SampleDistinctKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix,Kusto.Language.Editor.CompletionPriority.Low),QueryParameterList(Kusto.Language.QueryOperatorParameters.SampleDistinctParameters,0,!0),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.NamedExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.OfKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.NamedExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),function(keyword,parameters,expr,ofKeyword,ofExpr){return Bridge.cast(new Kusto.Language.Syntax.SampleDistinctOperator(keyword,parameters,expr,ofKeyword,ofExpr),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<sample-distinct>"),ReduceByWithClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NamedParameter)),Kusto.Language.Syntax.ReduceByWithClause,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.WithKeyword),QueryParameterCommaList(Kusto.Language.QueryOperatorParameters.ReduceWithParameters,0,!1),function(keyword,list){return new Kusto.Language.Syntax.ReduceByWithClause(keyword,list)}),ReduceByOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$4(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.ReduceByWithClause,Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.ReduceKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix,Kusto.Language.Editor.CompletionPriority.Low),QueryParameterList(Kusto.Language.QueryOperatorParameters.ReduceParameters,0,!1),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.ByKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.NamedExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.ReduceByWithClause,ReduceByWithClause),function(reduceKeyword,parameters,byKeyword,expr,withClause){return Bridge.cast(new Kusto.Language.Syntax.ReduceByOperator(reduceKeyword,parameters,byKeyword,expr,withClause),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<reduce-by>"),SummarizeBinClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SimpleNamedExpression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.BinKeyword),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.EqualToken)]),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SimpleNamedExpression,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.BinKeyword),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.EqualToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.UnnamedExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),function(bin,equal,value){return new Kusto.Language.Syntax.SimpleNamedExpression(new Kusto.Language.Syntax.NameDeclaration.ctor(new Kusto.Language.Syntax.TokenName(bin)),equal,value)})),SummarizeByExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.BinKeyword),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.EqualToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Match$3(function(tk){return Kusto.Language.Syntax.SyntaxFacts.IsLiteral(tk.Kind)})])),this.NamedExpression),SummarizeByClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Kusto.Language.Syntax.SimpleNamedExpression,Kusto.Language.Syntax.SummarizeByClause,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.ByKeyword),Kusto.Language.Parsing.SyntaxParsers.CommaList(Kusto.Language.Syntax.Expression,SummarizeByExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression,!0,!1,void 0),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SimpleNamedExpression,SummarizeBinClause.Hide$1()),function(byKeyword,expressions,binClause){return new Kusto.Language.Syntax.SummarizeByClause(byKeyword,expressions,binClause)}).WithTag$1("<summarize-by>"),SummarizeExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.ByKeyword)),this.NamedExpression),SummarizeOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Kusto.Language.Syntax.SummarizeByClause,Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.SummarizeKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix,Kusto.Language.Editor.CompletionPriority.High),QueryParameterList(Kusto.Language.QueryOperatorParameters.SummarizeParameters,0,!0),Kusto.Language.Parsing.SyntaxParsers.SeparatedList$1(Kusto.Language.Syntax.Expression,SummarizeExpression,Kusto.Language.Syntax.SyntaxKind.CommaToken,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression,void 0,!1,!1),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SummarizeByClause,SummarizeByClause),function(summarizeKeyword,parameters,aggregates,byClause){return Bridge.cast(new Kusto.Language.Syntax.SummarizeOperator(summarizeKeyword,parameters,aggregates,byClause),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<summarize>"),DistinctOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.DistinctKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix),QueryParameterList(Kusto.Language.QueryOperatorParameters.DistinctParameters,0,!0),Kusto.Language.Parsing.SyntaxParsers.CommaList(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[StarExpression,this.NamedExpression]),Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression,!0,!1,void 0),function(keyword,parameters,list){return Bridge.cast(new Kusto.Language.Syntax.DistinctOperator(keyword,parameters,list),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<distinct>"),TakeOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxToken,[Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.LimitKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix,Kusto.Language.Editor.CompletionPriority.High),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.TakeKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix)]),QueryParameterList(Kusto.Language.QueryOperatorParameters.TakeParameters,0,!0),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Examples(Kusto.Language.Syntax.Expression,this.NamedExpression,Kusto.Language.KustoFacts.LimitExamples),Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),function(keyword,parameters,expression){return Bridge.cast(new Kusto.Language.Syntax.TakeOperator(keyword,parameters,expression),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<take>"),MissingFirstOrLastToken=Kusto.Language.Syntax.SyntaxToken.Missing$1("",Kusto.Language.Syntax.SyntaxKind.FirstKeyword,System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingFirstOrLast()],Kusto.Language.Diagnostic)),OrderingNullsClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.OrderingNullsClause,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.NullsKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxToken,[Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.FirstKeyword),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.LastKeyword)]),function(){return MissingFirstOrLastToken.Clone$1()}),function(keyword,firstOrLast){return new Kusto.Language.Syntax.OrderingNullsClause(keyword,firstOrLast)}),OrderingClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.OrderingNullsClause,Kusto.Language.Syntax.OrderingClause,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.SyntaxParsers.Token$2(System.Array.init([Kusto.Language.Syntax.SyntaxKind.AscKeyword,Kusto.Language.Syntax.SyntaxKind.DescKeyword],Kusto.Language.Syntax.SyntaxKind))),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.OrderingNullsClause,OrderingNullsClause),function(ascOrDesc,nullsClause){return new Kusto.Language.Syntax.OrderingClause(ascOrDesc,nullsClause)}),SortExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyOptional(Kusto.Language.Syntax.Expression,this.NamedExpression,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$10(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.OrderingClause,Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.OrderingClause,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Or([Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.AscKeyword),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.DescKeyword),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.NullsKeyword)]),OrderingClause),function(left,right){return Bridge.cast(new Kusto.Language.Syntax.OrderedExpression(left,right),Kusto.Language.Syntax.Expression)})}),SortOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxToken,[Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.OrderKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix,Kusto.Language.Editor.CompletionPriority.High),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.SortKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix,Kusto.Language.Editor.CompletionPriority.High)]),QueryParameterList(Kusto.Language.QueryOperatorParameters.SortParameters,0,!1).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.ByKeyword),Kusto.Language.Parsing.SyntaxParsers.CommaList(Kusto.Language.Syntax.Expression,SortExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression,!0,!1,void 0),function(keyword,parameters,byKeyword,list){return Bridge.cast(new Kusto.Language.Syntax.SortOperator(keyword,parameters,byKeyword,list),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<sort>"),ReorderOrderingClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.OrderingClause,Kusto.Language.Parsing.SyntaxParsers.Token$2(System.Array.init([Kusto.Language.Syntax.SyntaxKind.AscKeyword,Kusto.Language.Syntax.SyntaxKind.DescKeyword,Kusto.Language.Syntax.SyntaxKind.GrannyAscKeyword,Kusto.Language.Syntax.SyntaxKind.GrannyDescKeyword],Kusto.Language.Syntax.SyntaxKind)),function(ascOrDesc){return new Kusto.Language.Syntax.OrderingClause(ascOrDesc,null)}),ReorderExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyOptional(Kusto.Language.Syntax.Expression,SimpleOrWildcardedEntityReference,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$10(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.OrderingClause,Kusto.Language.Syntax.Expression,_left,ReorderOrderingClause,function(left,right){return Bridge.cast(new Kusto.Language.Syntax.OrderedExpression(left,right),Kusto.Language.Syntax.Expression)})}),ProjectReorderOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.ProjectReorderKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix,Kusto.Language.Editor.CompletionPriority.High),Kusto.Language.Parsing.SyntaxParsers.CommaList(Kusto.Language.Syntax.Expression,ReorderExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),function(keyword,list){return Bridge.cast(new Kusto.Language.Syntax.ProjectReorderOperator(keyword,list),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<project-reorder>"),ScanAssignment=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.ScanAssignment,ExtendedNameReference,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.EqualToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.UnnamedExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),function(name,equals,expr){return new Kusto.Language.Syntax.ScanAssignment(Bridge.cast(name,Kusto.Language.Syntax.NameReference),equals,expr)}).WithTag$1("<assignment>"),ScanComputationClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.ScanAssignment)),Kusto.Language.Syntax.ScanComputationClause,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.FatArrowToken),Kusto.Language.Parsing.SyntaxParsers.CommaList(Kusto.Language.Syntax.ScanAssignment,ScanAssignment,Kusto.Language.Parsing.QueryGrammar.CreateMissingScanAssignment,!0,!1,void 0),function(token,list){return new Kusto.Language.Syntax.ScanComputationClause(token,list)}),ScanStepOutput=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.ScanStepOutput,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.OutputKeyword),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.EqualToken),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$3(Kusto.Language.KustoFacts.ScanStepOutputValues),function(output,equality,outputKind){return new Kusto.Language.Syntax.ScanStepOutput(output,equality,outputKind)}),ScanStep=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$7(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.NameDeclaration,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.ScanStepOutput,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.ScanComputationClause,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.ScanStep,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.StepKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.NameDeclaration,RenameName,Kusto.Language.Parsing.QueryGrammar.CreateMissingNameDeclaration),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.SyntaxParsers.HiddenToken(Kusto.Language.Syntax.SyntaxKind.OptionalKeyword)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.ScanStepOutput,ScanStepOutput.Hide$1()),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.ColonToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.UnnamedExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.ScanComputationClause,ScanComputationClause),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.SemicolonToken),function(step,name,optional,output,colon,predicate,computation,semi){return new Kusto.Language.Syntax.ScanStep(step,name,optional,output,colon,predicate,computation,semi)}),ScanOrderByClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Kusto.Language.Syntax.ScanOrderByClause,Kusto.Language.Parsing.SyntaxParsers.HiddenToken(Kusto.Language.Syntax.SyntaxKind.OrderKeyword),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.ByKeyword),Kusto.Language.Parsing.SyntaxParsers.CommaList(Kusto.Language.Syntax.Expression,SortExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression,!0,!1,System.Array.init([Kusto.Language.Syntax.SyntaxKind.PartitionKeyword,Kusto.Language.Syntax.SyntaxKind.DeclareKeyword,Kusto.Language.Syntax.SyntaxKind.WithKeyword],Kusto.Language.Syntax.SyntaxKind)),function(order,by,list){return new Kusto.Language.Syntax.ScanOrderByClause(order,by,list)}),ScanPartitionByClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Kusto.Language.Syntax.ScanPartitionByClause,Kusto.Language.Parsing.SyntaxParsers.HiddenToken(Kusto.Language.Syntax.SyntaxKind.PartitionKeyword),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.ByKeyword),Kusto.Language.Parsing.SyntaxParsers.CommaList(Kusto.Language.Syntax.Expression,this.UnnamedExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression,!0,!1,System.Array.init([Kusto.Language.Syntax.SyntaxKind.DeclareKeyword,Kusto.Language.Syntax.SyntaxKind.WithKeyword],Kusto.Language.Syntax.SyntaxKind)),function(partition,by,list){return new Kusto.Language.Syntax.ScanPartitionByClause(partition,by,list)}),ScanDeclareClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.FunctionParameter)),Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.ScanDeclareClause,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.DeclareKeyword),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.SyntaxParsers.CommaList(Kusto.Language.Syntax.FunctionParameter,FunctionParameter,Kusto.Language.Parsing.QueryGrammar.CreateMissingFunctionParameter,!1,!1,System.Array.init([Kusto.Language.Syntax.SyntaxKind.WithKeyword],Kusto.Language.Syntax.SyntaxKind)),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(declare,open,declarations,close){return new Kusto.Language.Syntax.ScanDeclareClause(declare,open,declarations,close)}),ScanOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$8(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Kusto.Language.Syntax.ScanOrderByClause,Kusto.Language.Syntax.ScanPartitionByClause,Kusto.Language.Syntax.ScanDeclareClause,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.ScanStep),Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.ScanKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix),QueryParameterList(Kusto.Language.QueryOperatorParameters.ScanParameters,0,!1),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.ScanOrderByClause,ScanOrderByClause),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.ScanPartitionByClause,ScanPartitionByClause),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.ScanDeclareClause,ScanDeclareClause),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.WithKeyword,new Kusto.Language.Editor.CompletionItem.$ctor1(Kusto.Language.Editor.CompletionKind.Syntax,"with","with (",")")),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.SyntaxParsers.List(Kusto.Language.Syntax.ScanStep,ScanStep),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(scan,parameters,orderBy,partitionBy,declare,$with,openParen,steps,closeParen){return Bridge.cast(new Kusto.Language.Syntax.ScanOperator(scan,parameters,orderBy,partitionBy,declare,$with,openParen,steps,closeParen),Kusto.Language.Syntax.QueryOperator)}),TopHittersByClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.TopHittersByClause,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.ByKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.NamedExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),function(keyword,expression){return new Kusto.Language.Syntax.TopHittersByClause(keyword,expression)}),TopHittersOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$4(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.TopHittersByClause,Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.TopHittersKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Examples(Kusto.Language.Syntax.Expression,this.NamedExpression,Kusto.Language.KustoFacts.TopExamples),Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.OfKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.NamedExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.TopHittersByClause,TopHittersByClause),function(keyword,expr,ofKeyword,ofExpr,byClause){return Bridge.cast(new Kusto.Language.Syntax.TopHittersOperator(keyword,expr,ofKeyword,ofExpr,byClause),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<top-hitters>"),TopOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$4(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.TopKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix),QueryParameterList(Kusto.Language.QueryOperatorParameters.TopParameters,0,!0),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Examples(Kusto.Language.Syntax.Expression,this.NamedExpression,Kusto.Language.KustoFacts.TopExamples),Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.ByKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,SortExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),function(keyword,parameters,expr,byKeyword,byExpr){return Bridge.cast(new Kusto.Language.Syntax.TopOperator(keyword,parameters,expr,byKeyword,byExpr),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<top>"),TopNestedWithOthersClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.TopNestedWithOthersClause,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.WithKeyword),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.OthersKeyword),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.EqualToken),this.Literal,function(withKeyword,othersKeyword,equals,expression){return new Kusto.Language.Syntax.TopNestedWithOthersClause(withKeyword,othersKeyword,equals,expression)}),TopNestedByExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyOptional(Kusto.Language.Syntax.Expression,this.NamedExpression,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$10(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.OrderingClause,Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.OrderingClause,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Or([Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.AscKeyword),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.DescKeyword),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.NullsKeyword)]),OrderingClause),function(expr,orderingClause){return Bridge.cast(new Kusto.Language.Syntax.OrderedExpression(expr,orderingClause),Kusto.Language.Syntax.Expression)})}),TopNestedClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$6(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.TopNestedWithOthersClause,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.TopNestedClause,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.TopNestedKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.Expression,this.NamedExpression),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.OfKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.NamedExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.TopNestedWithOthersClause,TopNestedWithOthersClause),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.ByKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,TopNestedByExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),function(keyword,expr,ofKeyword,ofExpr,withOthersClause,byKeyword,byExpr){return new Kusto.Language.Syntax.TopNestedClause(keyword,expr,ofKeyword,ofExpr,withOthersClause,byKeyword,byExpr)}),TopNestedOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.TopNestedKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.TopNestedClause)),Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.CommaList(Kusto.Language.Syntax.TopNestedClause,TopNestedClause,Kusto.Language.Parsing.QueryGrammar.CreateMissingTopNestedClause,!0,!1,void 0),function(list){return Bridge.cast(new Kusto.Language.Syntax.TopNestedOperator(list),Kusto.Language.Syntax.QueryOperator)})).WithTag$1("<top-nested>"),UnionExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[ParenthesizedExpression,WildcardedEntityReference,BracketedEntityNamePathElementSelector,BarePathElementSelector]),UnionOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.UnionKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix),QueryParameterList(Kusto.Language.QueryOperatorParameters.UnionParameters,0,!0),Kusto.Language.Parsing.SyntaxParsers.CommaList(Kusto.Language.Syntax.Expression,UnionExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression,!0,!1,void 0),function(keyword,parameters,list){return Bridge.cast(new Kusto.Language.Syntax.UnionOperator(keyword,parameters,list),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<union>"),SerializeOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.SerializeKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix,Kusto.Language.Editor.CompletionPriority.Low),QueryParameterList(Kusto.Language.QueryOperatorParameters.SerializedParameters,0,!0),Kusto.Language.Parsing.SyntaxParsers.CommaList(Kusto.Language.Syntax.Expression,this.NamedExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression,!1,!1,void 0),function(keyword,parameters,exprs){return Bridge.cast(new Kusto.Language.Syntax.SerializeOperator(keyword,parameters,exprs),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<serialize>"),RangeOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.RangeKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Fails(Kusto.Language.Parsing.SyntaxParsers.Token$5("("))]),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$7(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.NameDeclaration,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.RangeKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.NameDeclaration,this.SimpleNameDeclaration,Kusto.Language.Parsing.QueryGrammar.CreateMissingNameDeclaration),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.FromKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.UnnamedExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.ToKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.UnnamedExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.StepKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.UnnamedExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),function(rangeToken,name,FromToken,fromEx,ToToken,toEx,stepToken,stepEx){return Bridge.cast(new Kusto.Language.Syntax.RangeOperator(rangeToken,name,FromToken,fromEx,ToToken,toEx,stepToken,stepEx),Kusto.Language.Syntax.QueryOperator)})).WithTag$1("<range>"),InvokeOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.InvokeKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix,Kusto.Language.Editor.CompletionPriority.Low),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,DotCompositeFunctionCall,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),function(keyword,$function){return Bridge.cast(new Kusto.Language.Syntax.InvokeOperator(keyword,$function),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<invoke>"),RenderWithClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$4(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NamedParameter)),Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.RenderWithClause,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.WithKeyword),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.CommaToken)),QueryParameterCommaList(Kusto.Language.QueryOperatorParameters.RenderWithProperties,0,!1),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(withKeyword,openParen,leadingComma,properties,closeParen){return new Kusto.Language.Syntax.RenderWithClause(withKeyword,openParen,leadingComma,properties,closeParen)}),RenderChartType=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxToken,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxToken,System.Linq.Enumerable.from(Kusto.Language.KustoFacts.ChartTypes,System.String).select(function(c){return System.Linq.Enumerable.from(Kusto.Language.KustoFacts.HiddenChartTypes,System.String).contains(c)?Kusto.Language.Parsing.SyntaxParsers.Token$5(c).Hide$1():Kusto.Language.Parsing.SyntaxParsers.Token$4(c,Kusto.Language.Editor.CompletionKind.RenderChart)}).ToArray(Kusto.Language.Parsing.Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxToken))),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.IdentifierToken)]),DeprecatedRenderByPropertyName=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.NameReference,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Or([Kusto.Language.Parsing.SyntaxParsers.Token$5("kind"),Kusto.Language.Parsing.SyntaxParsers.Token$5("title"),Kusto.Language.Parsing.SyntaxParsers.Token$5("accumulate"),Kusto.Language.Parsing.SyntaxParsers.Token$5("with")])),this.SimpleNameReference.Cast(Kusto.Language.Syntax.NameReference)),DeprecatedRenderProperty=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.NamedParameter,[QueryParameter(Kusto.Language.QueryOperatorParameters.RenderKind.Hide(),!1,void 0),QueryParameter(Kusto.Language.QueryOperatorParameters.RenderTitle.Hide(),!1,void 0),QueryParameter(Kusto.Language.QueryOperatorParameters.RenderAccumulate.Hide(),!1,void 0),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.NamedParameter,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.WithKeyword).Hide$1(),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken))]),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.NamedParameter,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.WithKeyword).Hide$1(),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.Literal,Kusto.Language.Parsing.QueryGrammar.CreateMissingValue),function(keyword,value){return new Kusto.Language.Syntax.NamedParameter(new Kusto.Language.Syntax.NameDeclaration.ctor(new Kusto.Language.Syntax.TokenName(keyword)),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.EqualToken),value)})),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.NamedParameter,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.ByKeyword).Hide$1(),NameReferenceList(DeprecatedRenderByPropertyName),function(keyword,list){return new Kusto.Language.Syntax.NamedParameter(new Kusto.Language.Syntax.NameDeclaration.ctor(new Kusto.Language.Syntax.TokenName(keyword)),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.EqualToken),list)})]),RenderOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Kusto.Language.Syntax.RenderWithClause,Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.RenderKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix,Kusto.Language.Editor.CompletionPriority.High),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Kusto.Language.Syntax.SyntaxToken,RenderChartType,function(){return Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken$2(Kusto.Language.KustoFacts.ChartTypes)}),Kusto.Language.Parsing.SyntaxParsers.List(Kusto.Language.Syntax.NamedParameter,DeprecatedRenderProperty),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.RenderWithClause,RenderWithClause),function(keyword,chart,parameters,withClause){return Bridge.cast(new Kusto.Language.Syntax.RenderOperator(keyword,chart,parameters,withClause,null),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<render>"),PrintOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.PrintKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix),Kusto.Language.Parsing.SyntaxParsers.CommaList(Kusto.Language.Syntax.Expression,this.NamedExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression,!0,!1,void 0),function(keyword,exprs){return Bridge.cast(new Kusto.Language.Syntax.PrintOperator(keyword,exprs),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<print>"),AssertSchemaOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.RowSchema,Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.AssertSchemaKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.RowSchema,RowSchema,Kusto.Language.Parsing.QueryGrammar.CreateMissingRowSchema),function(keyword,schema){return Bridge.cast(new Kusto.Language.Syntax.AssertSchemaOperator(keyword,schema),Kusto.Language.Syntax.QueryOperator)}).Hide$1(),EntityGroup=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.EntityGroupKeyword),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.OpenBracketToken),Kusto.Language.Parsing.SyntaxParsers.CommaList(Kusto.Language.Syntax.Expression,this.UnnamedExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression,!0,!1,void 0),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.CloseBracketToken),function(keyword,open,entitiesList,close){return Bridge.cast(new Kusto.Language.Syntax.EntityGroup(keyword,open,entitiesList,close),Kusto.Language.Syntax.Expression)}),macroExpandScopeReferenceName=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.NameDeclaration,Kusto.Language.Syntax.MacroExpandScopeReferenceName,Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.AsKeyword),IdentifierNameDeclaration,function(asKeyword,macroReferenceName){return new Kusto.Language.Syntax.MacroExpandScopeReferenceName(asKeyword,macroReferenceName)}),MacroExpandOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$6(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.MacroExpandScopeReferenceName,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)),Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.MacroExpandKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix,Kusto.Language.Editor.CompletionPriority.High),QueryParameterList(Kusto.Language.QueryOperatorParameters.TakeParameters,0,!0),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[EntityGroup,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.Expression,ScanQualifiedEntityStart,EntityPathExpression),this.SimpleNameReference]),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.MacroExpandScopeReferenceName,macroExpandScopeReferenceName),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),this.MacroExpandSubQuery,Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(macroExpandKeyword,parameters,entitygroup,scopeReferenceName,openParen,statementList,closeParen){return Bridge.cast(new Kusto.Language.Syntax.MacroExpandOperator(macroExpandKeyword,parameters,entitygroup,scopeReferenceName,openParen,statementList,closeParen),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<macro-expand>"),MakeGraphTableAndKeyClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.MakeGraphTableAndKeyClause,InvocationExpression,Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.OnKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.SimpleNameReference,Kusto.Language.Parsing.QueryGrammar.CreateMissingNameReference),function(table,onKeyword,column){return new Kusto.Language.Syntax.MakeGraphTableAndKeyClause(table,onKeyword,Bridge.cast(column,Kusto.Language.Syntax.NameReference))}).WithTag$1("<table-and-key-clause>"),MakeGraphWithTablesAndKeysClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MakeGraphTableAndKeyClause)),Kusto.Language.Syntax.MakeGraphWithClause,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.WithKeyword),Kusto.Language.Parsing.SyntaxParsers.CommaList(Kusto.Language.Syntax.MakeGraphTableAndKeyClause,MakeGraphTableAndKeyClause,Kusto.Language.Parsing.QueryGrammar.CreateMissingMakeGraphTableAndKeyClause,!0,!1,System.Array.init([Kusto.Language.Syntax.SyntaxKind.PartitionedByKeyword],Kusto.Language.Syntax.SyntaxKind)),function(withKeyword,tablesAndKeys){return Bridge.cast(new Kusto.Language.Syntax.MakeGraphWithTablesAndKeysClause(withKeyword,tablesAndKeys),Kusto.Language.Syntax.MakeGraphWithClause)}).WithTag$1("<make-graph-with-tables-and-keys-clause>"),MakeGraphWithImplicitIdClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.NameDeclaration,Kusto.Language.Syntax.MakeGraphWithClause,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.WithNodeIdKeyword,void 0,3,System.String.format("{0}=",[Kusto.Language.Syntax.SyntaxFacts.GetText(Kusto.Language.Syntax.SyntaxKind.WithNodeIdKeyword)])),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.EqualToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.NameDeclaration,this.SimpleNameDeclaration,Kusto.Language.Parsing.QueryGrammar.CreateMissingNameDeclaration),function(withNodeId,equals,name){return Bridge.cast(new Kusto.Language.Syntax.MakeGraphWithImplicitIdClause(withNodeId,equals,name),Kusto.Language.Syntax.MakeGraphWithClause)}).WithTag$1("<make-graph-with-implicit-node-id-clause>"),MakeGraphPartitionedByClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$4(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.MakeGraphPartitionedByClause,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.PartitionedByKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,SimplePathExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingNameReference),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,ContextualSubExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(keyword,entity,openParen,subQuery,closeParen){return new Kusto.Language.Syntax.MakeGraphPartitionedByClause(keyword,Bridge.cast(entity,Kusto.Language.Syntax.NameReference),openParen,subQuery,closeParen)}).WithTag$1("<make-graph-partitioned-by-clause>"),MakeGraphOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$6(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.MakeGraphWithClause,Kusto.Language.Syntax.MakeGraphPartitionedByClause,Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.MakeGraphKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix),QueryParameterList(Kusto.Language.QueryOperatorParameters.GraphMakeParameters,0,!0),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.SimpleNameReference,Kusto.Language.Parsing.QueryGrammar.CreateMissingNameReference),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxToken,[Kusto.Language.Parsing.SyntaxParsers.Token$5("-->",Kusto.Language.Syntax.SyntaxKind.DashDashGreaterThanToken),Kusto.Language.Parsing.SyntaxParsers.Token$5("--",Kusto.Language.Syntax.SyntaxKind.DashDashToken).Hide$1()]),function(){return Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken$1(System.Array.init([Kusto.Language.Syntax.SyntaxKind.DashDashGreaterThanToken,Kusto.Language.Syntax.SyntaxKind.DashDashToken],Kusto.Language.Syntax.SyntaxKind))}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.SimpleNameReference,Kusto.Language.Parsing.QueryGrammar.CreateMissingNameReference),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.MakeGraphWithClause,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.MakeGraphWithClause,[MakeGraphWithImplicitIdClause,MakeGraphWithTablesAndKeysClause])),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.MakeGraphPartitionedByClause,MakeGraphPartitionedByClause),function(keyword,parameters,sourceColumn,direction,targetColumn,withClause,partitionedByClause){return Bridge.cast(new Kusto.Language.Syntax.MakeGraphOperator(keyword,parameters,Bridge.cast(sourceColumn,Kusto.Language.Syntax.NameReference),direction,Bridge.cast(targetColumn,Kusto.Language.Syntax.NameReference),withClause,partitionedByClause),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<make-graph>"),GraphMarkComponentsOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.GraphMarkComponentsKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix),QueryParameterList(Kusto.Language.QueryOperatorParameters.GraphMarkComponentsParameters,0,!0),function(graphMarkComponentsKeyword,parameters){return Bridge.cast(new Kusto.Language.Syntax.GraphMarkComponentsOperator(graphMarkComponentsKeyword,parameters),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<graph-mark-components>"),GraphMergeOperaor=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.JoinConditionClause,Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.GraphMergeKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix).Hide$1(),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,InvocationExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.JoinConditionClause,JoinOnClause),function(keyword,graph,onClause){return Bridge.cast(new Kusto.Language.Syntax.GraphMergeOperator(keyword,graph,onClause),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<graph-merge>"),GraphToTableAsClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.NameDeclaration,Kusto.Language.Syntax.GraphToTableAsClause,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.AsKeyword,Kusto.Language.Editor.CompletionKind.Keyword,Kusto.Language.Editor.CompletionPriority.Low),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.NameDeclaration,this.SimpleNameDeclaration,Kusto.Language.Parsing.QueryGrammar.CreateMissingNameDeclaration),function(keyword,name){return new Kusto.Language.Syntax.GraphToTableAsClause(keyword,name)}).WithTag$1("<graph-to-table-as-clause>"),GraphToTableNodesClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.GraphToTableAsClause,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Kusto.Language.Syntax.GraphToTableOutputClause,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.NodesKeyword,Kusto.Language.Editor.CompletionKind.Keyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.GraphToTableAsClause,GraphToTableAsClause),QueryParameterList(Kusto.Language.QueryOperatorParameters.GraphToTableNodesParameters,0,!0),function(keyword,asClause,parameters){return new Kusto.Language.Syntax.GraphToTableOutputClause(keyword,asClause,parameters)}).WithTag$1("graph-to-table-output-nodes-clause"),GraphToTableEdgesClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.GraphToTableAsClause,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Kusto.Language.Syntax.GraphToTableOutputClause,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.GraphEdgesKeyword,Kusto.Language.Editor.CompletionKind.Keyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.GraphToTableAsClause,GraphToTableAsClause),QueryParameterList(Kusto.Language.QueryOperatorParameters.GraphToTableEdgesParameters,0,!0),function(keyword,asClause,parameters){return new Kusto.Language.Syntax.GraphToTableOutputClause(keyword,asClause,parameters)}).WithTag$1("graph-to-table-output-edges-clause"),GraphToTableOutputClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.GraphToTableOutputClause,[GraphToTableNodesClause,GraphToTableEdgesClause]).WithTag$1("<graph-to-table-output-clause>"),GraphToTableOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.GraphToTableOutputClause)),Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.GraphToTableKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix),Kusto.Language.Parsing.SyntaxParsers.CommaList(Kusto.Language.Syntax.GraphToTableOutputClause,GraphToTableOutputClause,Kusto.Language.Parsing.QueryGrammar.CreateMissingGraphToTableOutputClause,!0,!1,void 0),function(keyword,outputClause){return Bridge.cast(new Kusto.Language.Syntax.GraphToTableOperator(keyword,outputClause),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<graph-to-table>"),WhereClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.WhereClause,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.WhereKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.Expression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),function(keyword,expression){return new Kusto.Language.Syntax.WhereClause(keyword,expression)}),ProjectClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Kusto.Language.Syntax.ProjectClause,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.ProjectKeyword),Kusto.Language.Parsing.SyntaxParsers.CommaList(Kusto.Language.Syntax.Expression,this.NamedExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression,!0,!1,void 0),function(keyword,list){return new Kusto.Language.Syntax.ProjectClause(keyword,list)}),GraphMatchPatternEdgeRange=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.GraphMatchPatternEdgeRange,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.AsteriskToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,InvocationExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.DotDotToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,InvocationExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),function(asterisk,rangeStart,dotDotToken,rangeEnd){return new Kusto.Language.Syntax.GraphMatchPatternEdgeRange(asterisk,rangeStart,dotDotToken,rangeEnd)}),GraphMatchPatternEdge=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.GraphMatchPatternNotation,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.GraphMatchPatternNotation,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxToken,[Kusto.Language.Parsing.SyntaxParsers.MatchText("-->",Kusto.Language.Syntax.SyntaxKind.DashDashGreaterThanToken),Kusto.Language.Parsing.SyntaxParsers.MatchText("<--",Kusto.Language.Syntax.SyntaxKind.LessThanDashDashToken),Kusto.Language.Parsing.SyntaxParsers.MatchText("--",Kusto.Language.Syntax.SyntaxKind.DashDashToken)]),function(token){return Bridge.cast(new Kusto.Language.Syntax.GraphMatchPatternEdge(token,null,null,null),Kusto.Language.Syntax.GraphMatchPatternNotation)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.NameDeclaration,Kusto.Language.Syntax.GraphMatchPatternEdgeRange,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.GraphMatchPatternNotation,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxToken,[Kusto.Language.Parsing.SyntaxParsers.MatchText("<-[",Kusto.Language.Syntax.SyntaxKind.LessThanDashBracketToken),Kusto.Language.Parsing.SyntaxParsers.MatchText("-[",Kusto.Language.Syntax.SyntaxKind.DashBracketToken)]),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.NameDeclaration,this.SimpleNameDeclaration),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.GraphMatchPatternEdgeRange,GraphMatchPatternEdgeRange),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxToken,[Kusto.Language.Parsing.SyntaxParsers.MatchText("]->",Kusto.Language.Syntax.SyntaxKind.BracketDashGreaterThanToken),Kusto.Language.Parsing.SyntaxParsers.MatchText("]-",Kusto.Language.Syntax.SyntaxKind.BracketDashToken)]),function(firstToken,name,range,lastToken){return Bridge.cast(new Kusto.Language.Syntax.GraphMatchPatternEdge(firstToken,name,range,lastToken),Kusto.Language.Syntax.GraphMatchPatternNotation)})]),GraphMatchPatternNode=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.NameDeclaration,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.GraphMatchPatternNotation,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.NameDeclaration,this.SimpleNameDeclaration),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(open,name,close){return Bridge.cast(new Kusto.Language.Syntax.GraphMatchPatternNode(open,name,close),Kusto.Language.Syntax.GraphMatchPatternNotation)}),GraphMatchPattern=Kusto.Language.Parsing.SyntaxParsers.WithCompletion(Kusto.Language.Syntax.GraphMatchPattern,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.GraphMatchPatternNotation),Kusto.Language.Syntax.GraphMatchPattern,Kusto.Language.Parsing.SyntaxParsers.List(Kusto.Language.Syntax.GraphMatchPatternNotation,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.GraphMatchPatternNotation,[GraphMatchPatternNode,GraphMatchPatternEdge]),Kusto.Language.Parsing.QueryGrammar.CreateMissingGraphMatchPatternNotation,!0),function(elements){return new Kusto.Language.Syntax.GraphMatchPattern(elements)}),[new Kusto.Language.Editor.CompletionItem.$ctor1(Kusto.Language.Editor.CompletionKind.Syntax,"(n1)-[e]->(n2)"),new Kusto.Language.Editor.CompletionItem.$ctor1(Kusto.Language.Editor.CompletionKind.Syntax,"(n1)-[e1]->(n2)-[e2]->(n3)"),new Kusto.Language.Editor.CompletionItem.$ctor1(Kusto.Language.Editor.CompletionKind.Syntax,"(n1)-[e*1..3]->(n2)")]),GraphMatchPatternClause=Kusto.Language.Parsing.SyntaxParsers.CommaList(Kusto.Language.Syntax.GraphMatchPattern,GraphMatchPattern,Kusto.Language.Parsing.QueryGrammar.CreateMissingGraphMatchPattern,!0,!1,System.Array.init([Kusto.Language.Syntax.SyntaxKind.WhereKeyword,Kusto.Language.Syntax.SyntaxKind.ProjectKeyword],Kusto.Language.Syntax.SyntaxKind)).WithTag$1("<graph-match-pattern-clause>"),GraphMatchOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$4(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.GraphMatchPattern)),Kusto.Language.Syntax.WhereClause,Kusto.Language.Syntax.ProjectClause,Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.GraphMatchKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix),QueryParameterList(Kusto.Language.QueryOperatorParameters.GraphMatchParameters,0,!0),GraphMatchPatternClause,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.WhereClause,WhereClause),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.ProjectClause,ProjectClause),function(keyword,parameters,patterns,whereClause,projectClause){return Bridge.cast(new Kusto.Language.Syntax.GraphMatchOperator(keyword,parameters,patterns,whereClause,projectClause),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<graph-match-operator>"),PrePipeQueryOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.QueryOperator,[EvaluateOperator,FindOperator,SearchOperator,UnionOperator,MacroExpandOperator,RangeOperator,PrintOperator]),BadQueryOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.IdentifierToken),function(id){return Bridge.cast(new Kusto.Language.Syntax.BadQueryOperator(id,System.Array.init([Kusto.Language.DiagnosticFacts.GetQueryOperatorExpected()],Kusto.Language.Diagnostic)),Kusto.Language.Syntax.QueryOperator)}),PostPipeQueryOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.QueryOperator,[AsOperator,AssertSchemaOperator,ConsumeOperator,CountOperator,DistinctOperator,EvaluateOperator,ExecuteAndCacheOperator,ExtendOperator,FacetOperator,FilterOperator,ForkOperator,GetSchemaOperator,GraphMatchOperator,GraphMergeOperaor,GraphMarkComponentsOperator.Hide$1(),GraphToTableOperator,InvokeOperator,JoinOperator,LookupOperator,MakeGraphOperator,MakeSeriesOperator,MvApplyOperator,MvExpandOperator,ParseOperator,ParseWhereOperator,ParseKvOperator,PartitionByOperator,PartitionOperator,ProjectOperator,ProjectAwayOperator,ProjectKeepOperator,ProjectRenameOperator,ProjectReorderOperator,ReduceByOperator,RenderOperator,SampleOperator,SampleDistinctOperator,ScanOperator,SearchOperator,SerializeOperator,SortOperator,SummarizeOperator,TakeOperator,TopHittersOperator,TopOperator,TopNestedOperator,UnionOperator]);this.QueryOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.QueryOperator,[PrePipeQueryOperator,PostPipeQueryOperator]);ForkPipeOperatorCore=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.QueryOperator,[CountOperator,ExtendOperator,FilterOperator,ParseOperator,ParseWhereOperator,ParseKvOperator,TakeOperator,TopNestedOperator,ProjectOperator,ProjectAwayOperator,ProjectKeepOperator,ProjectRenameOperator,ProjectReorderOperator,SummarizeOperator,DistinctOperator,TopHittersOperator,TopOperator,SortOperator,MvExpandOperator,MvApplyOperator,ReduceByOperator,SampleOperator,SampleDistinctOperator,AsOperator,InvokeOperator,ExecuteAndCacheOperator,ScanOperator,this.QueryOperator.Hide$1()]);ForkPipeExpressionCore=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyZeroOrMore(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.QueryOperator,Kusto.Language.Syntax.Expression,ForkPipeOperator,function(o){return Bridge.cast(o,Kusto.Language.Syntax.Expression)}),function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.QueryOperator,Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.BarToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.QueryOperator,ForkPipeOperator,Kusto.Language.Parsing.QueryGrammar.CreateMissingQueryOperator),function(left,pipeToken,right){return Bridge.cast(new Kusto.Language.Syntax.PipeExpression(left,pipeToken,right),Kusto.Language.Syntax.Expression)})});InitialPipeElementExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.QueryOperator,Kusto.Language.Syntax.Expression,PrePipeQueryOperator,function(o){return Bridge.cast(o,Kusto.Language.Syntax.Expression)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(ScanSimpleName),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.QueryOperator,Kusto.Language.Syntax.Expression,PostPipeQueryOperator,function(o){return Bridge.cast(o,Kusto.Language.Syntax.Expression)}).Hide$1()),this.UnnamedExpression]);this.FollowingPipeElementExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.QueryOperator,[PostPipeQueryOperator,PrePipeQueryOperator.Hide$1(),BadQueryOperator.Hide$1()]);PipeExpressionCore=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyZeroOrMore(Kusto.Language.Syntax.Expression,InitialPipeElementExpression,Bridge.fn.bind(this,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.QueryOperator,Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.BarToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.QueryOperator,this.FollowingPipeElementExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingQueryOperator),function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.PipeExpression(left,op,right),Kusto.Language.Syntax.Expression)})}));PipeSubExpressionCore=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyZeroOrMore(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[PostPipeQueryOperator.Cast(Kusto.Language.Syntax.Expression),InitialPipeElementExpression.Hide$1()]),Bridge.fn.bind(this,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.QueryOperator,Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.BarToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.QueryOperator,this.FollowingPipeElementExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingQueryOperator),function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.PipeExpression(left,op,right),Kusto.Language.Syntax.Expression)})}));ContextualSubExpressionCore=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyZeroOrMore(Kusto.Language.Syntax.Expression,ContextualDataTableExpression,Bridge.fn.bind(this,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.QueryOperator,Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.BarToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.QueryOperator,this.FollowingPipeElementExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingQueryOperator),function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.PipeExpression(left,op,right),Kusto.Language.Syntax.Expression)})})),this.PipeSubExpression]);UnnamedExpressionCore=LogicalOr;ExpressionCore=PipeExpressionCore;var AliasStatement=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$4(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.NameDeclaration,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.Statement,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.AliasKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.DatabaseKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.NameDeclaration,this.SimpleNameDeclaration,Kusto.Language.Parsing.QueryGrammar.CreateMissingNameDeclaration),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.EqualToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.UnnamedExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),function(aliasKeyword,databaseKeyword,name,equalToken,expression){return Bridge.cast(new Kusto.Language.Syntax.AliasStatement(aliasKeyword,databaseKeyword,name,equalToken,expression),Kusto.Language.Syntax.Statement)}).WithTag$1("<alias>"),MaterializeExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.MaterializeKeyword),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.PipeExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(keyword,openParen,expr,closeParen){return Bridge.cast(new Kusto.Language.Syntax.MaterializeExpression(keyword,openParen,expr,closeParen),Kusto.Language.Syntax.Expression)}),DefaultValueDeclaration=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.DefaultValueDeclaration,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.EqualToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[this.Literal,NameTokenLiteral]),Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),function(equalToken,value){return new Kusto.Language.Syntax.DefaultValueDeclaration(equalToken,value)});FunctionParameterCore=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.NameAndTypeDeclaration,Kusto.Language.Syntax.DefaultValueDeclaration,Kusto.Language.Syntax.FunctionParameter,NameAndTypeDeclaration,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.DefaultValueDeclaration,DefaultValueDeclaration),function(nameAndType,defaultValue){return new Kusto.Language.Syntax.FunctionParameter(nameAndType,defaultValue)});this.FunctionParameters=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.FunctionParameter)),Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.FunctionParameters,Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.SyntaxParsers.CommaList(Kusto.Language.Syntax.FunctionParameter,FunctionParameter,Kusto.Language.Parsing.QueryGrammar.CreateMissingFunctionParameter,!1,!1,void 0),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(openParen,parameters,closeParen){return new Kusto.Language.Syntax.FunctionParameters(openParen,parameters,closeParen)});FunctionBodyStatement=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement),[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.Statement,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement),LetStatement,Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.SemicolonToken),function(statement,semicolon){return new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement))(statement,semicolon)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.Statement,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement),DeclareQueryParametersStatement,Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.SemicolonToken),function(statement,semicolon){return new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement))(statement,semicolon)})]);FunctionBodyStatementList=Kusto.Language.Parsing.SyntaxParsers.List(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement),FunctionBodyStatement,Kusto.Language.Parsing.QueryGrammar.CreateMissingStatementElement,!1).WithTag$1("<statement-list>");this.FunctionBody=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$4(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)),Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.FunctionBody,Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.OpenBraceToken),FunctionBodyStatementList,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.Expression,this.Expression),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.SemicolonToken)),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.CloseBraceToken),function(openBrace,statements,expr,semicolon,closeBrace){return new Kusto.Language.Syntax.FunctionBody(openBrace,statements,expr,semicolon,closeBrace)});FunctionDeclaration=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.FunctionParameters,Kusto.Language.Syntax.FunctionBody,Kusto.Language.Syntax.FunctionDeclaration,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.ViewKeyword)),this.FunctionParameters,this.FunctionBody,function(view,parameters,body){return new Kusto.Language.Syntax.FunctionDeclaration(view,parameters,body)}).WithTag$1("<function-declaration>");LetStatementCore=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Statement,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.Statement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.LetKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix),ScanSimpleName,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.EqualToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.ViewKeyword)),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Or([Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.AsteriskToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([ScanSimpleName,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.ColonToken)])])]),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.NameDeclaration,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.FunctionDeclaration,Kusto.Language.Syntax.Statement,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.LetKeyword),this.SimpleNameDeclaration,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.EqualToken),FunctionDeclaration,function(letKeyword,name,equal,expression){return Bridge.cast(new Kusto.Language.Syntax.LetStatement(letKeyword,name,equal,expression),Kusto.Language.Syntax.Statement)})),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.Statement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.LetKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix),ScanSimpleName,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.EqualToken),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.MaterializeKeyword)]),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.NameDeclaration,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.Statement,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.LetKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.NameDeclaration,this.SimpleNameDeclaration,Kusto.Language.Parsing.QueryGrammar.CreateMissingNameDeclaration),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.EqualToken),MaterializeExpression,function(keyword,name,equal,expr){return Bridge.cast(new Kusto.Language.Syntax.LetStatement(keyword,name,equal,expr),Kusto.Language.Syntax.Statement)})),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.Statement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.LetKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix),ScanSimpleName,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.EqualToken),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.EntityGroupKeyword)]),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.NameDeclaration,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.Statement,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.LetKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.NameDeclaration,this.SimpleNameDeclaration,Kusto.Language.Parsing.QueryGrammar.CreateMissingNameDeclaration),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.EqualToken),EntityGroup,function(keyword,name,equal,expr){return Bridge.cast(new Kusto.Language.Syntax.LetStatement(keyword,name,equal,expr),Kusto.Language.Syntax.Statement)})),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.NameDeclaration,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.Statement,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.LetKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.NameDeclaration,this.SimpleNameDeclaration,Kusto.Language.Parsing.QueryGrammar.CreateMissingNameDeclaration),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.EqualToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.Expression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),function(letKeyword,name,equalToken,expression){return Bridge.cast(new Kusto.Language.Syntax.LetStatement(letKeyword,name,equalToken,expression),Kusto.Language.Syntax.Statement)})]);OptionValueClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.OptionValueClause,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.EqualToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.UnnamedExpression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),function(equal,expr){return new Kusto.Language.Syntax.OptionValueClause(equal,expr)});SetOptionStatement=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.NameDeclaration,Kusto.Language.Syntax.OptionValueClause,Kusto.Language.Syntax.Statement,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.SetKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.NameDeclaration,this.SimpleNameDeclaration,Kusto.Language.Parsing.QueryGrammar.CreateMissingNameDeclaration),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.OptionValueClause,OptionValueClause),function(keyword,name,value){return Bridge.cast(new Kusto.Language.Syntax.SetOptionStatement(keyword,name,value),Kusto.Language.Syntax.Statement)}).WithTag$1("<set-option>");DeclareQueryParametersStatementCore=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$4(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.FunctionParameter)),Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Statement,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.DeclareKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.QueryParametersKeyword),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.SyntaxParsers.CommaList(Kusto.Language.Syntax.FunctionParameter,FunctionParameter,Kusto.Language.Parsing.QueryGrammar.CreateMissingFunctionParameter,!0,!1,void 0),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(declareKeyword,queryParametersKeyword,open,list,close){return Bridge.cast(new Kusto.Language.Syntax.QueryParametersStatement(declareKeyword,queryParametersKeyword,open,list,close),Kusto.Language.Syntax.Statement)});var Restriction=Kusto.Language.Parsing.SyntaxParsers.WithCompletionHint(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.Expression,ScanWildcardedEntityReferenceOrFunctionCall,WildcardedEntityReference),this.SimpleNameReference]),84164608),RestrictStatement=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$5(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Statement,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.RestrictKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.AccessKeyword),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.ToKeyword),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.SyntaxParsers.CommaList(Kusto.Language.Syntax.Expression,Restriction,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression,!0,!1,void 0),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(restrictKeyword,accessKeyword,toKeyword,openParen,list,closeParen){return Bridge.cast(new Kusto.Language.Syntax.RestrictStatement(restrictKeyword,accessKeyword,toKeyword,openParen,list,closeParen),Kusto.Language.Syntax.Statement)}).WithTag$1("<restrict>"),PatternPathValue=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.PatternPathValue,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.DotToken),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.OpenBracketToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.StringLiteral,Kusto.Language.Parsing.QueryGrammar.CreateMissingStringLiteral),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.CloseBracketToken),function(dot,openBracket,value,closeBracket){return new Kusto.Language.Syntax.PatternPathValue(dot,openBracket,value,closeBracket)}),PatternMatchStatementElement=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Kusto.Language.Syntax.Statement,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement),LetStatement,Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.SemicolonToken),function(statement,semicolon){return new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement))(statement,semicolon)}),PatternMatchBody=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$4(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)),Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.FunctionBody,Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.OpenBraceToken),Kusto.Language.Parsing.SyntaxParsers.List(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement),PatternMatchStatementElement,Kusto.Language.Parsing.QueryGrammar.CreateMissingStatementElement,!1),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.Expression,this.Expression),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.SemicolonToken)),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.CloseBraceToken),function(open,statements,expression,semi,close){return new Kusto.Language.Syntax.FunctionBody(open,statements,expression,semi,close)}),PatternMatchValue=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[this.StringLiteral,this.UnnamedExpression.Hide$1()]),PatternMatch=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$6(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.PatternPathValue,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.FunctionBody,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.PatternMatch,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.SyntaxParsers.CommaList(Kusto.Language.Syntax.Expression,PatternMatchValue,Kusto.Language.Parsing.QueryGrammar.CreateMissingStringLiteral,!0,!1,void 0),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.PatternPathValue,PatternPathValue),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.EqualToken),PatternMatchBody,Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.SemicolonToken),function(openParen,exprs,closeParen,path,equalToken,body,semicolon){return new Kusto.Language.Syntax.PatternMatch(new Kusto.Language.Syntax.ExpressionList(openParen,exprs,closeParen),path,equalToken,body,semicolon)}),PatternPathParameter=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.NameAndTypeDeclaration,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.PatternPathParameter,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.OpenBracketToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.NameAndTypeDeclaration,NameAndTypeDeclaration,Kusto.Language.Parsing.QueryGrammar.CreateMissingNameAndTypeDeclaration),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.CloseBracketToken),function(openBracket,parameter,closeBracket){return new Kusto.Language.Syntax.PatternPathParameter(openBracket,parameter,closeBracket)}),PatternDeclaration=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$7(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NameAndTypeDeclaration)),Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.PatternPathParameter,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.PatternMatch),Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.PatternDeclaration,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.EqualToken),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.SyntaxParsers.CommaList(Kusto.Language.Syntax.NameAndTypeDeclaration,NameAndTypeDeclaration,Kusto.Language.Parsing.QueryGrammar.CreateMissingNameAndTypeDeclaration,!1,!1,void 0),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.PatternPathParameter,PatternPathParameter),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.OpenBraceToken),Kusto.Language.Parsing.SyntaxParsers.List(Kusto.Language.Syntax.PatternMatch,PatternMatch,Kusto.Language.Parsing.QueryGrammar.CreateMissingPatternMatch,!0),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.CloseBraceToken),function(equal,openParen,parameters,closeParen,pathParameter,openBrace,patterns,closeBrace){return new Kusto.Language.Syntax.PatternDeclaration(equal,openParen,parameters,closeParen,pathParameter,openBrace,patterns,closeBrace)}),DeclarePatternStatement=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.NameDeclaration,Kusto.Language.Syntax.PatternDeclaration,Kusto.Language.Syntax.Statement,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.DeclareKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.PatternKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.NameDeclaration,this.SimpleNameDeclaration,Kusto.Language.Parsing.QueryGrammar.CreateMissingNameDeclaration),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.PatternDeclaration,PatternDeclaration),function(declareKeyword,patternKeyword,name,pattern){return Bridge.cast(new Kusto.Language.Syntax.PatternStatement(declareKeyword,patternKeyword,name,pattern),Kusto.Language.Syntax.Statement)}).WithTag$1("<pattern-statement>"),QueryStatement=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.Statement,this.Expression,function(expr){return Bridge.cast(new Kusto.Language.Syntax.ExpressionStatement(expr),Kusto.Language.Syntax.Statement)}),PrimaryPathSelector=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyOptional(Kusto.Language.Syntax.Expression,PathElementSelector,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$10(Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.DataScopeClause,Kusto.Language.Syntax.Expression,_left,DataScopeClause(Kusto.Language.Editor.CompletionKind.TabularSuffix),function(path,clause){return Bridge.cast(new Kusto.Language.Syntax.DataScopeExpression(path,clause),Kusto.Language.Syntax.Expression)})}),ParenthesizedSummarizeOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.QueryOperator,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token$5("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.QueryOperator,SummarizeOperator,Kusto.Language.Parsing.QueryGrammar.CreateMissingQueryOperator),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$4(")"),function(openParen,summarize,closeParen){return Bridge.cast(new Kusto.Language.Syntax.ParenthesizedExpression(openParen,summarize,closeParen),Kusto.Language.Syntax.Expression)}),MaterializedViewCombineViewNameClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.MaterializedViewCombineNameClause,Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.SyntaxParsers.WithCompletionHint(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.Expression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(open,expression,close){return new Kusto.Language.Syntax.MaterializedViewCombineNameClause(open,expression,close)}),MaterializedViewCombineBaseClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.MaterializedViewCombineClause,Kusto.Language.Parsing.SyntaxParsers.WithCompletion(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.SyntaxParsers.Token$5("base"),[new Kusto.Language.Editor.CompletionItem.$ctor1(Kusto.Language.Editor.CompletionKind.Syntax,"base","base (",")")]),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.SyntaxParsers.WithCompletionHint(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.Expression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(keyword,open,expression,close){return new Kusto.Language.Syntax.MaterializedViewCombineClause(keyword,open,expression,close)}),MaterializedViewCombineDeltaClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.Expression,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.MaterializedViewCombineClause,Kusto.Language.Parsing.SyntaxParsers.WithCompletion(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.SyntaxParsers.Token$5("delta"),[new Kusto.Language.Editor.CompletionItem.$ctor1(Kusto.Language.Editor.CompletionKind.Syntax,"delta","delta (",")")]),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.SyntaxParsers.WithCompletionHint(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.Expression,this.Expression,Kusto.Language.Parsing.QueryGrammar.CreateMissingExpression),Kusto.Language.Editor.CompletionHint.Tabular),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(keyword,open,expression,close){return new Kusto.Language.Syntax.MaterializedViewCombineClause(keyword,open,expression,close)}),MaterializedViewCombineAggregationsClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.QueryOperator,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.MaterializedViewCombineClause,Kusto.Language.Parsing.SyntaxParsers.WithCompletion(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.SyntaxParsers.Token$5("aggregations"),[new Kusto.Language.Editor.CompletionItem.$ctor1(Kusto.Language.Editor.CompletionKind.Syntax,"aggregations","aggregations (summarize ",")")]),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.SyntaxParsers.WithCompletionHint(Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.QueryOperator,SummarizeOperator,Kusto.Language.Parsing.QueryGrammar.CreateMissingQueryOperator),Kusto.Language.Editor.CompletionHint.Query),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$1(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(keyword,open,summarize,close){return new Kusto.Language.Syntax.MaterializedViewCombineClause(keyword,open,summarize,close)}),MaterializedViewCombineExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$4(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.MaterializedViewCombineNameClause,Kusto.Language.Syntax.MaterializedViewCombineClause,Kusto.Language.Syntax.MaterializedViewCombineClause,Kusto.Language.Syntax.MaterializedViewCombineClause,Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.MaterializedViewCombineKeyword,Kusto.Language.Editor.CompletionKind.TabularPrefix).Hide$1(),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.MaterializedViewCombineNameClause,MaterializedViewCombineViewNameClause,Kusto.Language.Parsing.QueryGrammar.CreateMissingMaterializedViewCombineNameClause),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.MaterializedViewCombineClause,MaterializedViewCombineBaseClause,Kusto.Language.Parsing.QueryGrammar.CreateMissingMaterializedViewCombineBaseClause),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.MaterializedViewCombineClause,MaterializedViewCombineDeltaClause,Kusto.Language.Parsing.QueryGrammar.CreateMissingMaterializedViewCombineDeltaClause),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.MaterializedViewCombineClause,MaterializedViewCombineAggregationsClause,Kusto.Language.Parsing.QueryGrammar.CreateMissingMaterializedViewCombineAggregatesClause),function(keyword,viewname,baseClause,deltaClause,aggregatesClause){return Bridge.cast(new Kusto.Language.Syntax.MaterializedViewCombineExpression(keyword,viewname,baseClause,deltaClause,aggregatesClause),Kusto.Language.Syntax.Expression)}),ScanKeywordInNamePosition=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Match$2(function(source,start){return Kusto.Language.Parsing.QueryParser.IsKeywordInNamePosition(source,start)?1:-1});PrimaryExpressionCore=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Expression,[this.Literal,ParenthesizedExpression,DataTableExpression,ContextualDataTableExpression,ExternalDataExpression,MaterializedViewCombineExpression,PrimaryPathSelector,InvalidKeywordAsNameReference]);this.Statement=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.Statement,[AliasStatement,LetStatement,SetOptionStatement,DeclarePatternStatement,DeclareQueryParametersStatement,RestrictStatement,QueryStatement]).WithTag$1("<statement>");this.StatementList=Kusto.Language.Parsing.SyntaxParsers.SeparatedList$1(Kusto.Language.Syntax.Statement,this.Statement,Kusto.Language.Syntax.SyntaxKind.SemicolonToken,Kusto.Language.Parsing.QueryGrammar.CreateMissingStatement,Kusto.Language.Parsing.SyntaxParsers.EndOfText,!1,!0);this.SkippedTokens=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Convert$3(Kusto.Language.Syntax.SkippedTokens,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).OneOrMore(Kusto.Language.Parsing.SyntaxParsers.AnyTokenButEnd),function(list){return new Kusto.Language.Syntax.SkippedTokens(new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SyntaxToken).$ctor1)(System.Linq.Enumerable.from(list,Kusto.Language.Parsing.LexicalToken).select(function(tok,i){return i===0?Kusto.Language.Syntax.SyntaxToken.From(tok,Kusto.Language.DiagnosticFacts.GetIncompleteFragment()):Kusto.Language.Syntax.SyntaxToken.From(tok)})))}).WithTag$1("<skipped-tokens>");this.QueryBlock=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)),Kusto.Language.Syntax.SkippedTokens,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.QueryBlock,this.StatementList,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SkippedTokens,this.SkippedTokens),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.EndOfTextToken)),function(statements,skipped,end){return new Kusto.Language.Syntax.QueryBlock(statements,skipped,end)})}}});Bridge.define("Kusto.Language.Parsing.QueryGrammar.CachedGrammar",{$kind:"nested class",fields:{Grammar:null,Options:null},ctors:{ctor:function(grammar,options){this.$initialize();this.Grammar=grammar;this.Options=options}}});Bridge.define("Kusto.Language.Parsing.QueryParser",{statics:{fields:{MaxDepth:0,NoToken:null,s_extendedKeyordsAsIdentifiers:null,CreateMissingStringLiteral:null,CreateMissingBoolLiteral:null,CreateMissingLongLiteral:null,CreateMissingRealLiteral:null,CreateMissingJsonValue:null,CreateMissingJsonPair:null,CreateMissingType:null,CreateMissingTypeExpression:null,CreateMissingNameAndTypeDeclaration:null,CreateMissingNameAndTypeDeclarationExpression:null,CreateMissingValue:null,CreateMissingIdentifierName:null,CreateMissingSchemaType:null,CreateMissingRowSchema:null,CreateMissingEvaluateRowSchema:null,CreateMissingNamedParameter:null,CreateMissingQueryOperator:null,CreateMissingQueryOperatorExpression:null,FnScanCommonListEnd:null,FnParseNameReference:null,FnParseLiteral:null,FnParseJsonValue:null,FnParseJsonPair:null,FnParseTypeOfElement:null,FnParseNameAndTypeDeclaration:null,FnParseNameAndTypeDeclarationExpression:null,s_dataTableParameters:null,FnParseExternalDataProperty:null,FnParseBarePathElementSelector:null,_specialKeywordsAsIdentifiers:null,FnParseRenameNameDeclaration:null,FnParseNamedExpression:null,FnParseArgument:null,s_functionsWithKeywordNames:null,FnParseUnnamedExpression:null,FnScanQueryOperatorParameterNameListEnd:null,FnParseQueryOperatorParameter:null,s_nameToDefaultQueryOperatorParameterMap:null,s_knownQueryOperaterParameterNames:null,s_multiTokenQueryOperatorParameterNames:null,FnParseNameReferenceListName:null,FnParseBracketedEntityNamePathElementSelector:null,FnParseSimplePathExpression:null,FnParseWildcardedEntityExpression:null,s_consumeOperatorParameterMap:null,FnScanFacetExpressionListEnd:null,s_filterOperatorKeywords:null,s_filterOperatorParameterMap:null,FnParseFindOperand_NameWithOptionalAsOperator:null,FindOperandParsers:null,FnParseFindOperand:null,FnParseTypeColumnNameReference:null,FnParseFindProjectColumn:null,s_findOperatorParameterMap:null,s_searchOperatorParameterMap:null,FnParseForkExpression:null,s_partitionOperatorParameterMap:null,s_joinOperatorParameterMap:null,s_GraphMarkComponentsParametersMap:null,s_lookupOperatorParameterMap:null,FnParseMakeSeriesExpression:null,s_makeSeriesOperatorParameterMap:null,s_makeSeriesExpressionListEnds:null,FnScanMakeSeriesExpressionListEnd:null,FnParseMvExpandExpression:null,s_mvExpandExpressionListEnd:null,FnScanMvExpandExpressionListEnd:null,s_mvExpandOperatorParameterMap:null,FnParseMvApplyExpression:null,s_mvApplyExpressionListEnd:null,FnScanMvApplyExpressionListEnd:null,s_mvApplyOperatorParmeterMap:null,s_evaluateOperatorParameterMap:null,FnParseParseWithExpression:null,s_parseOperatorParameterMap:null,s_parseKvOperatorWithParametersMap:null,FnParseSimpleOrWildcardedNameReferenceExpression:null,FnParseProjectReorderExpression:null,s_sampleOperatorParameterMap:null,s_sampleDistinctOperatorParameterMap:null,s_reduceOperatorWithParameterMap:null,s_reduceOperatorParameterMap:null,FnScanSummarizeByClauseExpressionListEnd:null,s_summarizeOperatorParameterMap:null,FnScanSummarizeExpressionListEnd:null,FnParseDistinctExpression:null,s_distinctOperatorParameterMap:null,s_takeOperatorParameterMap:null,FnParseOrderedExpression:null,s_sortOperatorParameterMap:null,FnParseScanAssignment:null,CreateMissingScanAssignment:null,FnParseScanStep:null,s_scanListEnd:null,FnScanScanListEnd:null,s_scanOperatorParameterMap:null,s_partitionByParameters:null,s_topOperatorParameterMap:null,FnParseTopNestedClause:null,CreateMissingTopNestedClause:null,ParseUnionExpressionParsers:null,FnParseUnionExpression:null,s_unionOperatorParameterMap:null,s_asOperatorParameterMap:null,s_serializeOperatorParameterMap:null,s_renderOperatorWithPropertiesMap:null,s_renderDeprecatedParameterNameListEndNames:null,FnRenderDeprecatedParameterNameListEnd:null,FnParseDeprecatedRenderProperty:null,s_graphMakeParameterMap:null,CreateMissingDirectionToken:null,CreateMissingMakeGraphTableAndKeyClause:null,FnParseMakeGraphTableAndKeyClause:null,FnScanMakeGraphWhereClauseListEnd:null,s_rangeEndTokens:null,FnCreateMissingGraphMatchPatternNotation:null,FnCreateMissingGraphMatchPattern:null,FnParseGraphMatchPatternNotation:null,FnParseGraphMatchPattern:null,CreateGraphToTableOutputClause:null,FnParseGraphToTableOutputClause:null,s_graphMatchParameterMap:null,s_graphToTableOperatorEdgesParameterMap:null,s_graphToTableOperatorNodesParameterMap:null,FnParseFunctionParameter:null,CreateMissingFunctionParameter:null,FnParseFunctionBodyStatements:null,CreateMissingStatement:null,CreateMissingStatementElement:null,ParseRestrictExpressionParsers:null,FnParseRestrictExpression:null,FnParsePatternMatchStatementElement:null,FnParsePatternMatch:null,CreateMissingPatternMatch:null},ctors:{init:function(){this.MaxDepth=300;this.NoToken=new Kusto.Language.Parsing.LexicalToken.$ctor1(Kusto.Language.Syntax.SyntaxKind.None,"","");this.s_extendedKeyordsAsIdentifiers=Kusto.Language.Utils.ListExtensions.ToHashSetEx(Kusto.Language.Syntax.SyntaxKind,Kusto.Language.KustoFacts.ExtendedKeywordsAsIdentifiers);this.CreateMissingStringLiteral=function(){return new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.StringLiteralExpression,Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.StringLiteralToken),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingString()],Kusto.Language.Diagnostic))};this.CreateMissingBoolLiteral=function(){return new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.BooleanLiteralExpression,Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.BooleanLiteralToken),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingBoolean()],Kusto.Language.Diagnostic))};this.CreateMissingLongLiteral=function(){return new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.LongLiteralExpression,Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.LongLiteralToken),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingNumber()],Kusto.Language.Diagnostic))};this.CreateMissingRealLiteral=function(){return new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.RealLiteralExpression,Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.RealLiteralToken),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingNumber()],Kusto.Language.Diagnostic))};this.CreateMissingJsonValue=function(){return new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.StringLiteralExpression,Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.StringLiteralToken),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingJsonValue()],Kusto.Language.Diagnostic))};this.CreateMissingJsonPair=function(){return new Kusto.Language.Syntax.JsonPair(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.StringLiteralToken),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.ColonToken),new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.StringLiteralExpression,Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.StringLiteralToken)),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingJsonPair()],Kusto.Language.Diagnostic))};this.CreateMissingType=function(){return new Kusto.Language.Syntax.PrimitiveTypeExpression(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingTypeName()],Kusto.Language.Diagnostic))};this.CreateMissingTypeExpression=function(){return Kusto.Language.Parsing.QueryParser.CreateMissingType()};this.CreateMissingNameAndTypeDeclaration=function(){return new Kusto.Language.Syntax.NameAndTypeDeclaration(new Kusto.Language.Syntax.NameDeclaration.$ctor1(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken)),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.ColonToken),new Kusto.Language.Syntax.PrimitiveTypeExpression(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.StringKeyword)),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingParameter()],Kusto.Language.Diagnostic))};this.CreateMissingNameAndTypeDeclarationExpression=function(){return Kusto.Language.Parsing.QueryParser.CreateMissingNameAndTypeDeclaration()};this.CreateMissingValue=function(){return new Kusto.Language.Syntax.NameReference.$ctor2(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingValue()],Kusto.Language.Diagnostic))};this.CreateMissingIdentifierName=function(){return new Kusto.Language.Syntax.TokenName(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingExpression()],Kusto.Language.Diagnostic))};this.CreateMissingSchemaType=function(){return new Kusto.Language.Syntax.SchemaTypeExpression(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)).Empty(),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingSchemaDeclaration()],Kusto.Language.Diagnostic))};this.CreateMissingRowSchema=function(){return new Kusto.Language.Syntax.RowSchema(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),null,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NameAndTypeDeclaration)).Empty(),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingSchemaDeclaration()],Kusto.Language.Diagnostic))};this.CreateMissingEvaluateRowSchema=function(){return new Kusto.Language.Syntax.EvaluateRowSchema(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),null,null,null,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NameAndTypeDeclaration)).Empty(),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingSchemaDeclaration()],Kusto.Language.Diagnostic))};this.CreateMissingNamedParameter=function(){return new Kusto.Language.Syntax.NamedParameter(new Kusto.Language.Syntax.NameDeclaration.$ctor1(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken)),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.EqualToken),new Kusto.Language.Syntax.NameReference.$ctor2(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken)),0,System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingParameter()],Kusto.Language.Diagnostic))};this.CreateMissingQueryOperator=function(){return new Kusto.Language.Syntax.BadQueryOperator(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken),System.Array.init([Kusto.Language.DiagnosticFacts.GetQueryOperatorExpected()],Kusto.Language.Diagnostic))};this.CreateMissingQueryOperatorExpression=function(){return new Kusto.Language.Syntax.BadQueryOperator(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken),System.Array.init([Kusto.Language.DiagnosticFacts.GetQueryOperatorExpected()],Kusto.Language.Diagnostic))};this.FnScanCommonListEnd=function(qp){return qp.ScanCommonListEnd()};this.FnParseNameReference=function(qp){return qp.ParseNameReference()};this.FnParseLiteral=function(qp){return qp.ParseLiteral()};this.FnParseJsonValue=function(qp){return qp.ParseJsonValue()};this.FnParseJsonPair=function(qp){return qp.ParseJsonPair()};this.FnParseTypeOfElement=function(qp){return qp.ParseTypeOfElement()};this.FnParseNameAndTypeDeclaration=function(qp){return qp.ParseNameAndTypeDeclaration()};this.FnParseNameAndTypeDeclarationExpression=function(qp){return Bridge.cast(qp.ParseNameAndTypeDeclaration(),Kusto.Language.Syntax.Expression)};this.s_dataTableParameters=Kusto.Language.Parsing.QueryParser.CreateQueryOperatorParameterMap(Kusto.Language.QueryOperatorParameters.DataTableParameters);this.FnParseExternalDataProperty=function(qp){return qp.ParseExternalDataProperty()};this.FnParseBarePathElementSelector=function(qp){return qp.ParseBarePathElementSelector()};this._specialKeywordsAsIdentifiers=Kusto.Language.Utils.ListExtensions.ToHashSetEx(Kusto.Language.Syntax.SyntaxKind,Kusto.Language.KustoFacts.SpecialKeywordsAsIdentifiers);this.FnParseRenameNameDeclaration=function(qp){return qp.ParseRenameNameDeclaration()};this.FnParseNamedExpression=function(qp){return qp.ParseNamedExpression()};this.FnParseArgument=function(qp){return qp.ParseArgument()};this.s_functionsWithKeywordNames=System.Linq.Enumerable.from(Kusto.Language.Functions.All,Kusto.Language.Symbols.FunctionSymbol).select(function(f){return f.Name}).concat(System.Linq.Enumerable.from(Kusto.Language.Aggregates.All,Kusto.Language.Symbols.FunctionSymbol).select(function(f){return f.Name})).where(function(n){return Kusto.Language.Syntax.SyntaxFacts.IsKeyword$1(n)&&!Kusto.Language.Syntax.SyntaxFacts.IsKeywordThatCanBeIdentifier(n)||Kusto.Language.Parsing.QueryParser.IsMultiTokenName(n)}).toList(System.String);this.FnParseUnnamedExpression=function(qp){return qp.ParseUnnamedExpression()};this.FnScanQueryOperatorParameterNameListEnd=function(qp){return qp.ScanQueryOperatorParameterNameListEnd()};this.FnParseQueryOperatorParameter=function(qp){return qp.ParseQueryOperatorParameter()};this.s_nameToDefaultQueryOperatorParameterMap=Kusto.Language.Parsing.QueryParser.CreateQueryOperatorParameterMap(Kusto.Language.QueryOperatorParameters.AllParameters);this.s_knownQueryOperaterParameterNames=new(System.Collections.Generic.HashSet$1(System.String).$ctor1)(System.Linq.Enumerable.from(Kusto.Language.Parsing.QueryParser.s_nameToDefaultQueryOperatorParameterMap.System$Collections$Generic$IReadOnlyDictionary$2$System$String$Kusto$Language$QueryOperatorParameter$Keys,System.String).concat(Kusto.Language.KustoFacts.KnownQueryOperatorParameterNames));this.s_multiTokenQueryOperatorParameterNames=System.Linq.Enumerable.from(Kusto.Language.Parsing.QueryParser.s_knownQueryOperaterParameterNames,System.String).where(Kusto.Language.Parsing.QueryParser.IsMultiTokenName).toList(System.String);this.FnParseNameReferenceListName=function(qp){return qp.ParseNameReferenceListName()};this.FnParseBracketedEntityNamePathElementSelector=function(qp){return qp.ParseBracketedEntityNamePathElementSelector()};this.FnParseSimplePathExpression=function(qp){return qp.ParseSimplePathExpression()};this.FnParseWildcardedEntityExpression=function(qp){return qp.ParseWildcardedEntityExpression()};this.s_consumeOperatorParameterMap=Kusto.Language.Parsing.QueryParser.CreateQueryOperatorParameterMap(Kusto.Language.QueryOperatorParameters.ConsumeParameters);this.FnScanFacetExpressionListEnd=function(qp){return qp.ScanCustomListEnd(Kusto.Language.Syntax.SyntaxKind.WithKeyword)};this.s_filterOperatorKeywords=System.Array.init([Kusto.Language.Syntax.SyntaxKind.WhereKeyword,Kusto.Language.Syntax.SyntaxKind.FilterKeyword],Kusto.Language.Syntax.SyntaxKind);this.s_filterOperatorParameterMap=Kusto.Language.Parsing.QueryParser.CreateQueryOperatorParameterMap(Kusto.Language.QueryOperatorParameters.FilterParameters);this.FnParseFindOperand_NameWithOptionalAsOperator=function(qp){return qp.ParseFindOperand_NameWithOptionalAsOperator()};this.FindOperandParsers=System.Array.init([Kusto.Language.Parsing.QueryParser.FnParseFindOperand_NameWithOptionalAsOperator,Kusto.Language.Parsing.QueryParser.FnParseWildcardedEntityExpression],Function);this.FnParseFindOperand=function(qp){return qp.ParseFindOperand()};this.FnParseTypeColumnNameReference=function(qp){return qp.ParseTypedColumnNameReference()};this.FnParseFindProjectColumn=function(qp){return qp.ParseFindProjectColumn()};this.s_findOperatorParameterMap=Kusto.Language.Parsing.QueryParser.CreateQueryOperatorParameterMap(Kusto.Language.QueryOperatorParameters.FindParameters);this.s_searchOperatorParameterMap=Kusto.Language.Parsing.QueryParser.CreateQueryOperatorParameterMap(Kusto.Language.QueryOperatorParameters.SearchParameters);this.FnParseForkExpression=function(qp){return qp.ParseForkExpression()};this.s_partitionOperatorParameterMap=Kusto.Language.Parsing.QueryParser.CreateQueryOperatorParameterMap(Kusto.Language.QueryOperatorParameters.PartitionParameters);this.s_joinOperatorParameterMap=Kusto.Language.Parsing.QueryParser.CreateQueryOperatorParameterMap(Kusto.Language.QueryOperatorParameters.JoinParameters);this.s_GraphMarkComponentsParametersMap=Kusto.Language.Parsing.QueryParser.CreateQueryOperatorParameterMap(Kusto.Language.QueryOperatorParameters.GraphMarkComponentsParameters);this.s_lookupOperatorParameterMap=Kusto.Language.Parsing.QueryParser.CreateQueryOperatorParameterMap(Kusto.Language.QueryOperatorParameters.LookupParameters);this.FnParseMakeSeriesExpression=function(qp){return qp.ParseMakeSeriesExpression()};this.s_makeSeriesOperatorParameterMap=Kusto.Language.Parsing.QueryParser.CreateQueryOperatorParameterMap(Kusto.Language.QueryOperatorParameters.MakeSeriesParameters);this.s_makeSeriesExpressionListEnds=System.Array.init([Kusto.Language.Syntax.SyntaxKind.OnKeyword,Kusto.Language.Syntax.SyntaxKind.FromKeyword,Kusto.Language.Syntax.SyntaxKind.InKeyword],Kusto.Language.Syntax.SyntaxKind);this.FnScanMakeSeriesExpressionListEnd=function(qp){return qp.ScanCustomListEnd$1(Kusto.Language.Parsing.QueryParser.s_makeSeriesExpressionListEnds)};this.FnParseMvExpandExpression=function(qp){return qp.ParseMvExpandExpression()};this.s_mvExpandExpressionListEnd=System.Array.init([Kusto.Language.Syntax.SyntaxKind.LimitKeyword],Kusto.Language.Syntax.SyntaxKind);this.FnScanMvExpandExpressionListEnd=function(qp){return qp.ScanCustomListEnd$1(Kusto.Language.Parsing.QueryParser.s_mvExpandExpressionListEnd)};this.s_mvExpandOperatorParameterMap=Kusto.Language.Parsing.QueryParser.CreateQueryOperatorParameterMap(Kusto.Language.QueryOperatorParameters.MvExpandParameters);this.FnParseMvApplyExpression=function(qp){return qp.ParseMvApplyExpression()};this.s_mvApplyExpressionListEnd=System.Array.init([Kusto.Language.Syntax.SyntaxKind.LimitKeyword,Kusto.Language.Syntax.SyntaxKind.IdKeyword,Kusto.Language.Syntax.SyntaxKind.OnKeyword],Kusto.Language.Syntax.SyntaxKind);this.FnScanMvApplyExpressionListEnd=function(qp){return qp.ScanMvApplyExpressionListEnd()};this.s_mvApplyOperatorParmeterMap=Kusto.Language.Parsing.QueryParser.CreateQueryOperatorParameterMap(Kusto.Language.QueryOperatorParameters.MvApplyParameters);this.s_evaluateOperatorParameterMap=Kusto.Language.Parsing.QueryParser.CreateQueryOperatorParameterMap(Kusto.Language.QueryOperatorParameters.EvaluateParameters);this.FnParseParseWithExpression=function(qp){return qp.ParseParseWithExpression()};this.s_parseOperatorParameterMap=Kusto.Language.Parsing.QueryParser.CreateQueryOperatorParameterMap(Kusto.Language.QueryOperatorParameters.ParseParameters);this.s_parseKvOperatorWithParametersMap=Kusto.Language.Parsing.QueryParser.CreateQueryOperatorParameterMap(Kusto.Language.QueryOperatorParameters.ParseKvWithProperties);this.FnParseSimpleOrWildcardedNameReferenceExpression=function(qp){return qp.ParseWildcardedNameReference()||qp.ParseNameReference()};this.FnParseProjectReorderExpression=function(qp){return qp.ParseProjectReorderExpression()};this.s_sampleOperatorParameterMap=Kusto.Language.Parsing.QueryParser.CreateQueryOperatorParameterMap(Kusto.Language.QueryOperatorParameters.SampleParameters);this.s_sampleDistinctOperatorParameterMap=Kusto.Language.Parsing.QueryParser.CreateQueryOperatorParameterMap(Kusto.Language.QueryOperatorParameters.SampleDistinctParameters);this.s_reduceOperatorWithParameterMap=Kusto.Language.Parsing.QueryParser.CreateQueryOperatorParameterMap(Kusto.Language.QueryOperatorParameters.ReduceWithParameters);this.s_reduceOperatorParameterMap=Kusto.Language.Parsing.QueryParser.CreateQueryOperatorParameterMap(Kusto.Language.QueryOperatorParameters.ReduceWithParameters);this.FnScanSummarizeByClauseExpressionListEnd=function(qp){return qp.ScanSummarizeByClauseExpressionListEnd()};this.s_summarizeOperatorParameterMap=Kusto.Language.Parsing.QueryParser.CreateQueryOperatorParameterMap(Kusto.Language.QueryOperatorParameters.SummarizeParameters);this.FnScanSummarizeExpressionListEnd=function(qp){return qp.ScanCustomListEnd(Kusto.Language.Syntax.SyntaxKind.ByKeyword)};this.FnParseDistinctExpression=function(qp){return qp.ParseDistinctExpression()};this.s_distinctOperatorParameterMap=Kusto.Language.Parsing.QueryParser.CreateQueryOperatorParameterMap(Kusto.Language.QueryOperatorParameters.DistinctParameters);this.s_takeOperatorParameterMap=Kusto.Language.Parsing.QueryParser.CreateQueryOperatorParameterMap(Kusto.Language.QueryOperatorParameters.TakeParameters);this.FnParseOrderedExpression=function(qp){return qp.ParseOrderedExpression()};this.s_sortOperatorParameterMap=Kusto.Language.Parsing.QueryParser.CreateQueryOperatorParameterMap(Kusto.Language.QueryOperatorParameters.SortParameters);this.FnParseScanAssignment=function(qp){return qp.ParseScanAssignment()};this.CreateMissingScanAssignment=function(){return new Kusto.Language.Syntax.ScanAssignment(new Kusto.Language.Syntax.NameReference.$ctor2(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken)),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.EqualEqualToken),new Kusto.Language.Syntax.NameReference.$ctor2(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken)),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingName()],Kusto.Language.Diagnostic))};this.FnParseScanStep=function(qp){return qp.ParseScanStep()};this.s_scanListEnd=System.Array.init([Kusto.Language.Syntax.SyntaxKind.PartitionKeyword,Kusto.Language.Syntax.SyntaxKind.OrderKeyword,Kusto.Language.Syntax.SyntaxKind.ByKeyword,Kusto.Language.Syntax.SyntaxKind.DeclareKeyword,Kusto.Language.Syntax.SyntaxKind.WithKeyword],Kusto.Language.Syntax.SyntaxKind);this.FnScanScanListEnd=function(qp){return qp.ScanCustomListEnd$1(Kusto.Language.Parsing.QueryParser.s_scanListEnd)};this.s_scanOperatorParameterMap=Kusto.Language.Parsing.QueryParser.CreateQueryOperatorParameterMap(Kusto.Language.QueryOperatorParameters.ScanParameters);this.s_partitionByParameters=Kusto.Language.Parsing.QueryParser.CreateQueryOperatorParameterMap(Kusto.Language.QueryOperatorParameters.PartitionByParameters);this.s_topOperatorParameterMap=Kusto.Language.Parsing.QueryParser.CreateQueryOperatorParameterMap(Kusto.Language.QueryOperatorParameters.TopParameters);this.FnParseTopNestedClause=function(qp){return qp.ParseTopNestedClause()};this.CreateMissingTopNestedClause=function(){return new Kusto.Language.Syntax.TopNestedClause(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.TopNestedKeyword),null,Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.OfKeyword),new Kusto.Language.Syntax.NameReference.$ctor2(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken)),null,Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.ByKeyword),new Kusto.Language.Syntax.NameReference.$ctor2(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken)),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingClause()],Kusto.Language.Diagnostic))};this.ParseUnionExpressionParsers=System.Array.init([Kusto.Language.Parsing.QueryParser.FnParseBracketedEntityNamePathElementSelector,Kusto.Language.Parsing.QueryParser.FnParseWildcardedEntityExpression,Kusto.Language.Parsing.QueryParser.FnParseBarePathElementSelector],Function);this.FnParseUnionExpression=function(qp){return qp.ParseUnionExpression()};this.s_unionOperatorParameterMap=Kusto.Language.Parsing.QueryParser.CreateQueryOperatorParameterMap(Kusto.Language.QueryOperatorParameters.UnionParameters);this.s_asOperatorParameterMap=Kusto.Language.Parsing.QueryParser.CreateQueryOperatorParameterMap(Kusto.Language.QueryOperatorParameters.AsParameters);this.s_serializeOperatorParameterMap=Kusto.Language.Parsing.QueryParser.CreateQueryOperatorParameterMap(Kusto.Language.QueryOperatorParameters.SerializedParameters);this.s_renderOperatorWithPropertiesMap=Kusto.Language.Parsing.QueryParser.CreateQueryOperatorParameterMap(Kusto.Language.QueryOperatorParameters.RenderWithProperties);this.s_renderDeprecatedParameterNameListEndNames=System.Array.init(["kind","title","accumulate","with","by"],System.String);this.FnRenderDeprecatedParameterNameListEnd=function(qp){return qp.ScanToken(Kusto.Language.Parsing.QueryParser.s_renderDeprecatedParameterNameListEndNames)>0};this.FnParseDeprecatedRenderProperty=function(qp){return qp.ParseDeprecatedRenderProperty()};this.s_graphMakeParameterMap=Kusto.Language.Parsing.QueryParser.CreateQueryOperatorParameterMap(Kusto.Language.QueryOperatorParameters.GraphMakeParameters);this.CreateMissingDirectionToken=function(){return Kusto.Language.Parsing.QueryParser.CreateMissingToken$1(System.Array.init([Kusto.Language.Syntax.SyntaxKind.DashDashGreaterThanToken,Kusto.Language.Syntax.SyntaxKind.DashDashToken],Kusto.Language.Syntax.SyntaxKind))};this.CreateMissingMakeGraphTableAndKeyClause=function(){return new Kusto.Language.Syntax.MakeGraphTableAndKeyClause(new Kusto.Language.Syntax.NameReference.$ctor2(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken)),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.OnKeyword),new Kusto.Language.Syntax.NameReference.$ctor2(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken)),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingExpression()],Kusto.Language.Diagnostic))};this.FnParseMakeGraphTableAndKeyClause=function(qp){return qp.ParseMakeGraphTableAndKeyClause()};this.FnScanMakeGraphWhereClauseListEnd=function(qp){return qp.ScanMakeGraphTableAndKeyClauseListEnd()};this.s_rangeEndTokens=System.Array.init([Kusto.Language.Syntax.SyntaxKind.BracketDashGreaterThanToken,Kusto.Language.Syntax.SyntaxKind.BracketDashToken],Kusto.Language.Syntax.SyntaxKind);this.FnCreateMissingGraphMatchPatternNotation=function(){return new Kusto.Language.Syntax.GraphMatchPatternNode(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),new Kusto.Language.Syntax.NameDeclaration.$ctor1(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken)),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingGraphMatchPattern()],Kusto.Language.Diagnostic))};this.FnCreateMissingGraphMatchPattern=function(){return new Kusto.Language.Syntax.GraphMatchPattern(new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.GraphMatchPatternNotation).ctor)([Kusto.Language.Parsing.QueryParser.FnCreateMissingGraphMatchPatternNotation()]))};this.FnParseGraphMatchPatternNotation=function(qp){return qp.ParseGraphMatchPatternNode()||qp.ParseGraphMatchPatternEdge()};this.FnParseGraphMatchPattern=function(qp){return new Kusto.Language.Syntax.GraphMatchPattern(qp.ParseList(Kusto.Language.Syntax.GraphMatchPatternNotation,Kusto.Language.Parsing.QueryParser.FnParseGraphMatchPatternNotation,Kusto.Language.Parsing.QueryParser.FnCreateMissingGraphMatchPatternNotation,void 0,!0))};this.CreateGraphToTableOutputClause=function(){return new Kusto.Language.Syntax.GraphToTableOutputClause(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),new Kusto.Language.Syntax.GraphToTableAsClause(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),new Kusto.Language.Syntax.NameDeclaration.$ctor1(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken))),null,System.Array.init([Kusto.Language.DiagnosticFacts.GetIncorrectNumberOfOutputGraphEntities()],Kusto.Language.Diagnostic))};this.FnParseGraphToTableOutputClause=function(qp){return qp.ParseGraphToTableOutputClause()};this.s_graphMatchParameterMap=Kusto.Language.Parsing.QueryParser.CreateQueryOperatorParameterMap(Kusto.Language.QueryOperatorParameters.GraphMatchParameters);this.s_graphToTableOperatorEdgesParameterMap=Kusto.Language.Parsing.QueryParser.CreateQueryOperatorParameterMap(Kusto.Language.QueryOperatorParameters.GraphToTableEdgesParameters);this.s_graphToTableOperatorNodesParameterMap=Kusto.Language.Parsing.QueryParser.CreateQueryOperatorParameterMap(Kusto.Language.QueryOperatorParameters.GraphToTableNodesParameters);this.FnParseFunctionParameter=function(qp){return qp.ParseFunctionParameter()};this.CreateMissingFunctionParameter=function(){return new Kusto.Language.Syntax.FunctionParameter(new Kusto.Language.Syntax.NameAndTypeDeclaration(new Kusto.Language.Syntax.NameDeclaration.$ctor1(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken)),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.ColonToken),new Kusto.Language.Syntax.PrimitiveTypeExpression(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.StringKeyword))),null,System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingParameter()],Kusto.Language.Diagnostic))};this.FnParseFunctionBodyStatements=function(qp){return qp.ParseFunctionBodyStatement()};this.CreateMissingStatement=function(){return new Kusto.Language.Syntax.ExpressionStatement(new Kusto.Language.Syntax.NameReference.$ctor2(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken)),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingStatement()],Kusto.Language.Diagnostic))};this.CreateMissingStatementElement=function(){return new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement))(new Kusto.Language.Syntax.ExpressionStatement(new Kusto.Language.Syntax.NameReference.$ctor2(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken)),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingStatement()],Kusto.Language.Diagnostic)))};this.ParseRestrictExpressionParsers=System.Array.init([Kusto.Language.Parsing.QueryParser.FnParseWildcardedEntityExpression,Kusto.Language.Parsing.QueryParser.FnParseNameReference],Function);this.FnParseRestrictExpression=function(qp){return qp.ParseRestrictExpression()};this.FnParsePatternMatchStatementElement=function(qp){return qp.ParsePatternMatchStatementElement()};this.FnParsePatternMatch=function(qp){return qp.ParsePatternMatch()};this.CreateMissingPatternMatch=function(){return new Kusto.Language.Syntax.PatternMatch(new Kusto.Language.Syntax.ExpressionList(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)).Empty(),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.CloseParenToken)),null,Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.EqualToken),new Kusto.Language.Syntax.FunctionBody(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.OpenBraceToken),Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)).Empty(),null,null,Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.CloseBraceToken)),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.SemicolonToken),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingPatternMatch()],Kusto.Language.Diagnostic))}}},methods:{ParseExpression:function(tokens,start,options){return start===void 0&&(start=0),options===void 0&&(options=null),new Kusto.Language.Parsing.QueryParser.ctor(tokens,start,options).ParseExpression()},ParseExpression$1:function(text,options){return options===void 0&&(options=null),Kusto.Language.Parsing.QueryParser.ParseExpression(Kusto.Language.Parsing.TokenParser.ParseTokens(text,options),0,options)},ParseQuery:function(tokens,start,options){return start===void 0&&(start=0),options===void 0&&(options=null),new Kusto.Language.Parsing.QueryParser.ctor(tokens,start,options).ParseQuery()},ParseQuery$1:function(text,options){return options===void 0&&(options=null),Kusto.Language.Parsing.QueryParser.ParseQuery(Kusto.Language.Parsing.TokenParser.ParseTokens(text,options),0,options)},ParseFunctionParameters:function(tokens,start,options){return start===void 0&&(start=0),options===void 0&&(options=null),new Kusto.Language.Parsing.QueryParser.ctor(tokens,start,options).ParseFunctionParameters()},ParseFunctionParameters$1:function(text,options){return options===void 0&&(options=null),Kusto.Language.Parsing.QueryParser.ParseFunctionParameters(Kusto.Language.Parsing.TokenParser.ParseTokens(text,options),0,options)},ParseFunctionParameter:function(tokens,start,options){return start===void 0&&(start=0),options===void 0&&(options=null),new Kusto.Language.Parsing.QueryParser.ctor(tokens,start,options).ParseFunctionParameter()},ParseFunctionParameter$1:function(text,options){return options===void 0&&(options=null),Kusto.Language.Parsing.QueryParser.ParseFunctionParameter(Kusto.Language.Parsing.TokenParser.ParseTokens(text,options),0,options)},ParseFunctionBody:function(tokens,start,options){return start===void 0&&(start=0),options===void 0&&(options=null),new Kusto.Language.Parsing.QueryParser.ctor(tokens,start,options).ParseFunctionBody()},ParseFunctionBody$1:function(text,options){return options===void 0&&(options=null),Kusto.Language.Parsing.QueryParser.ParseFunctionBody(Kusto.Language.Parsing.TokenParser.ParseTokens(text,options),0,options)},ParseEntityPath:function(tokens,start,options){return start===void 0&&(start=0),options===void 0&&(options=null),new Kusto.Language.Parsing.QueryParser.ctor(tokens,start,options).ParseEntityPathExpression()},ParseEntityPath$1:function(text,options){return options===void 0&&(options=null),Kusto.Language.Parsing.QueryParser.ParseEntityPath(Kusto.Language.Parsing.TokenParser.ParseTokens(text,options),0,options)},ParseEntityGroup:function(tokens,start,options){return start===void 0&&(start=0),options===void 0&&(options=null),new Kusto.Language.Parsing.QueryParser.ctor(tokens,start,options).ParseEntityGroup()},ParseEntityGroup$1:function(text,options){return options===void 0&&(options=null),Kusto.Language.Parsing.QueryParser.ParseEntityGroup(Kusto.Language.Parsing.TokenParser.ParseTokens(text,options),0,options)},ParseLiteral:function(tokens,start,options){return start===void 0&&(start=0),options===void 0&&(options=null),new Kusto.Language.Parsing.QueryParser.ctor(tokens,start,options).ParseLiteral()},ParseLiteral$1:function(text,options){return options===void 0&&(options=null),Kusto.Language.Parsing.QueryParser.ParseLiteral(Kusto.Language.Parsing.TokenParser.ParseTokens(text,options),0,options)},ParseRowSchema:function(tokens,start,options){return start===void 0&&(start=0),options===void 0&&(options=null),new Kusto.Language.Parsing.QueryParser.ctor(tokens,start,options).ParseRowSchema()},ParseRowSchema$1:function(text,options){return options===void 0&&(options=null),Kusto.Language.Parsing.QueryParser.ParseRowSchema(Kusto.Language.Parsing.TokenParser.ParseTokens(text,options),0,options)},CreateMissingToken:function(kind){return Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken(kind)},CreateMissingToken$1:function(kinds){return Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken$1(kinds)},CreateMissingNameToken:function(texts){return Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken,Kusto.Language.DiagnosticFacts.GetTokenExpected$1(texts))},CreateMissingTokenLiteral:function(tokens){return tokens===void 0&&(tokens=null),new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.TokenLiteralExpression,Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken),System.Array.init([tokens!=null&&System.Array.getCount(tokens,System.String)>0?Kusto.Language.DiagnosticFacts.GetTokenExpected$1(tokens):Kusto.Language.DiagnosticFacts.GetTokenExpected$3(["token"])],Kusto.Language.Diagnostic))},CreateMissingTypeOfLiteral:function(){return new Kusto.Language.Syntax.TypeOfLiteralExpression(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.TypeOfKeyword),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)).Empty(),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingTypeOfLiteral()],Kusto.Language.Diagnostic))},CreateMissingArgumentList:function(){return new Kusto.Language.Syntax.ExpressionList(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.OpenParenToken,Kusto.Language.DiagnosticFacts.GetTokenExpected([Kusto.Language.Syntax.SyntaxKind.OpenParenToken])),Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)).Empty(),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.CloseParenToken,Kusto.Language.DiagnosticFacts.GetTokenExpected([Kusto.Language.Syntax.SyntaxKind.CloseParenToken])))},CreateMissingFunctionCallExpression:function(){return new Kusto.Language.Syntax.FunctionCallExpression(new Kusto.Language.Syntax.NameReference.$ctor2(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken)),new Kusto.Language.Syntax.ExpressionList(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)).Empty(),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.CloseParenToken)),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingFunctionCall()],Kusto.Language.Diagnostic))},CreateMissingMaterializedViewCombineClause:function(name){return new Kusto.Language.Syntax.MaterializedViewCombineClause(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.MaterializedViewCombineClause),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),new Kusto.Language.Syntax.NameReference.$ctor2(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken)),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingClause$1(name)],Kusto.Language.Diagnostic))},IsKeywordInNamePosition:function(source,start){var token,nextToken;if((token=source.Peek(start))!=null&&Kusto.Language.Syntax.SyntaxFacts.IsKeyword(token.Kind)&&(nextToken=source.Peek(start+1|0))!=null)switch(nextToken.Kind){case Kusto.Language.Syntax.SyntaxKind.AndKeyword:case Kusto.Language.Syntax.SyntaxKind.OrKeyword:case Kusto.Language.Syntax.SyntaxKind.EqualEqualToken:case Kusto.Language.Syntax.SyntaxKind.BangEqualToken:case Kusto.Language.Syntax.SyntaxKind.EqualTildeToken:case Kusto.Language.Syntax.SyntaxKind.BangTildeToken:case Kusto.Language.Syntax.SyntaxKind.GreaterThanToken:case Kusto.Language.Syntax.SyntaxKind.GreaterThanOrEqualToken:case Kusto.Language.Syntax.SyntaxKind.LessThanToken:case Kusto.Language.Syntax.SyntaxKind.LessThanOrEqualToken:case Kusto.Language.Syntax.SyntaxKind.AsteriskToken:case Kusto.Language.Syntax.SyntaxKind.SlashToken:case Kusto.Language.Syntax.SyntaxKind.PercentToken:case Kusto.Language.Syntax.SyntaxKind.HasKeyword:case Kusto.Language.Syntax.SyntaxKind.NotHasKeyword:case Kusto.Language.Syntax.SyntaxKind.HasCsKeyword:case Kusto.Language.Syntax.SyntaxKind.NotHasCsKeyword:case Kusto.Language.Syntax.SyntaxKind.HasPrefixKeyword:case Kusto.Language.Syntax.SyntaxKind.NotHasPrefixKeyword:case Kusto.Language.Syntax.SyntaxKind.HasPrefixCsKeyword:case Kusto.Language.Syntax.SyntaxKind.NotHasPrefixCsKeyword:case Kusto.Language.Syntax.SyntaxKind.HasSuffixKeyword:case Kusto.Language.Syntax.SyntaxKind.NotHasSuffixKeyword:case Kusto.Language.Syntax.SyntaxKind.HasSuffixCsKeyword:case Kusto.Language.Syntax.SyntaxKind.NotHasSuffixCsKeyword:case Kusto.Language.Syntax.SyntaxKind.LikeKeyword:case Kusto.Language.Syntax.SyntaxKind.NotLikeKeyword:case Kusto.Language.Syntax.SyntaxKind.LikeCsKeyword:case Kusto.Language.Syntax.SyntaxKind.NotLikeCsKeyword:case Kusto.Language.Syntax.SyntaxKind.ContainsKeyword:case Kusto.Language.Syntax.SyntaxKind.NotContainsKeyword:case Kusto.Language.Syntax.SyntaxKind.NotBangContainsKeyword:case Kusto.Language.Syntax.SyntaxKind.ContainsCsKeyword:case Kusto.Language.Syntax.SyntaxKind.Contains_CsKeyword:case Kusto.Language.Syntax.SyntaxKind.NotContainsCsKeyword:case Kusto.Language.Syntax.SyntaxKind.NotBangContainsCsKeyword:case Kusto.Language.Syntax.SyntaxKind.StartsWithKeyword:case Kusto.Language.Syntax.SyntaxKind.NotStartsWithKeyword:case Kusto.Language.Syntax.SyntaxKind.StartsWithCsKeyword:case Kusto.Language.Syntax.SyntaxKind.NotStartsWithCsKeyword:case Kusto.Language.Syntax.SyntaxKind.EndsWithKeyword:case Kusto.Language.Syntax.SyntaxKind.NotEndsWithKeyword:case Kusto.Language.Syntax.SyntaxKind.EndsWithCsKeyword:case Kusto.Language.Syntax.SyntaxKind.NotEndsWithCsKeyword:case Kusto.Language.Syntax.SyntaxKind.MatchesRegexKeyword:case Kusto.Language.Syntax.SyntaxKind.InKeyword:case Kusto.Language.Syntax.SyntaxKind.InCsKeyword:case Kusto.Language.Syntax.SyntaxKind.NotInKeyword:case Kusto.Language.Syntax.SyntaxKind.NotInCsKeyword:case Kusto.Language.Syntax.SyntaxKind.HasAnyKeyword:case Kusto.Language.Syntax.SyntaxKind.HasAllKeyword:case Kusto.Language.Syntax.SyntaxKind.BetweenKeyword:case Kusto.Language.Syntax.SyntaxKind.NotBetweenKeyword:case Kusto.Language.Syntax.SyntaxKind.CloseParenToken:case Kusto.Language.Syntax.SyntaxKind.CloseBracketToken:case Kusto.Language.Syntax.SyntaxKind.CloseBraceToken:case Kusto.Language.Syntax.SyntaxKind.DotToken:case Kusto.Language.Syntax.SyntaxKind.CommaToken:case Kusto.Language.Syntax.SyntaxKind.ColonToken:case Kusto.Language.Syntax.SyntaxKind.BarToken:return!0;case Kusto.Language.Syntax.SyntaxKind.OpenParenToken:case Kusto.Language.Syntax.SyntaxKind.OpenBracketToken:return!1}return!1},IsSpecialKeywordAsIdentifier:function(token){return Kusto.Language.Syntax.SyntaxFacts.IsKeyword(token.Kind)&&Kusto.Language.Parsing.QueryParser._specialKeywordsAsIdentifiers.contains(token.Kind)},ScanDashedName:function(source,start){var position=start,token=source.Peek(position);if(token!=null&&(token.Kind===Kusto.Language.Syntax.SyntaxKind.IdentifierToken||Kusto.Language.Syntax.SyntaxFacts.IsKeyword(token.Kind)))for(position=position+1|0;;){if(token=source.Peek(position),token==null||token.Trivia.length>0||token.Kind!==Kusto.Language.Syntax.SyntaxKind.IdentifierToken&&!Kusto.Language.Syntax.SyntaxFacts.IsKeyword(token.Kind)&&token.Kind!==Kusto.Language.Syntax.SyntaxKind.MinusToken)break;position=position+1|0}return position-start|0},GetStringOperationKind:function(tokenKind){switch(tokenKind){case Kusto.Language.Syntax.SyntaxKind.EqualTildeToken:return Kusto.Language.Syntax.SyntaxKind.EqualTildeExpression;case Kusto.Language.Syntax.SyntaxKind.BangTildeToken:return Kusto.Language.Syntax.SyntaxKind.BangTildeExpression;case Kusto.Language.Syntax.SyntaxKind.HasKeyword:return Kusto.Language.Syntax.SyntaxKind.HasExpression;case Kusto.Language.Syntax.SyntaxKind.ColonToken:return Kusto.Language.Syntax.SyntaxKind.SearchExpression;case Kusto.Language.Syntax.SyntaxKind.NotHasKeyword:return Kusto.Language.Syntax.SyntaxKind.NotHasExpression;case Kusto.Language.Syntax.SyntaxKind.HasCsKeyword:return Kusto.Language.Syntax.SyntaxKind.HasCsExpression;case Kusto.Language.Syntax.SyntaxKind.NotHasCsKeyword:return Kusto.Language.Syntax.SyntaxKind.NotHasCsExpression;case Kusto.Language.Syntax.SyntaxKind.HasPrefixKeyword:return Kusto.Language.Syntax.SyntaxKind.HasPrefixExpression;case Kusto.Language.Syntax.SyntaxKind.NotHasPrefixKeyword:return Kusto.Language.Syntax.SyntaxKind.NotHasPrefixExpression;case Kusto.Language.Syntax.SyntaxKind.HasPrefixCsKeyword:return Kusto.Language.Syntax.SyntaxKind.HasPrefixCsExpression;case Kusto.Language.Syntax.SyntaxKind.NotHasPrefixCsKeyword:return Kusto.Language.Syntax.SyntaxKind.NotHasPrefixCsExpression;case Kusto.Language.Syntax.SyntaxKind.HasSuffixKeyword:return Kusto.Language.Syntax.SyntaxKind.HasSuffixExpression;case Kusto.Language.Syntax.SyntaxKind.NotHasSuffixKeyword:return Kusto.Language.Syntax.SyntaxKind.NotHasSuffixExpression;case Kusto.Language.Syntax.SyntaxKind.HasSuffixCsKeyword:return Kusto.Language.Syntax.SyntaxKind.HasSuffixCsExpression;case Kusto.Language.Syntax.SyntaxKind.NotHasSuffixCsKeyword:return Kusto.Language.Syntax.SyntaxKind.NotHasSuffixCsExpression;case Kusto.Language.Syntax.SyntaxKind.LikeKeyword:return Kusto.Language.Syntax.SyntaxKind.LikeExpression;case Kusto.Language.Syntax.SyntaxKind.NotLikeKeyword:return Kusto.Language.Syntax.SyntaxKind.NotLikeExpression;case Kusto.Language.Syntax.SyntaxKind.LikeCsKeyword:return Kusto.Language.Syntax.SyntaxKind.LikeCsExpression;case Kusto.Language.Syntax.SyntaxKind.NotLikeCsKeyword:return Kusto.Language.Syntax.SyntaxKind.NotLikeCsExpression;case Kusto.Language.Syntax.SyntaxKind.ContainsKeyword:return Kusto.Language.Syntax.SyntaxKind.ContainsExpression;case Kusto.Language.Syntax.SyntaxKind.NotContainsKeyword:return Kusto.Language.Syntax.SyntaxKind.NotContainsExpression;case Kusto.Language.Syntax.SyntaxKind.NotBangContainsKeyword:return Kusto.Language.Syntax.SyntaxKind.NotContainsExpression;case Kusto.Language.Syntax.SyntaxKind.ContainsCsKeyword:return Kusto.Language.Syntax.SyntaxKind.ContainsCsExpression;case Kusto.Language.Syntax.SyntaxKind.Contains_CsKeyword:return Kusto.Language.Syntax.SyntaxKind.ContainsCsExpression;case Kusto.Language.Syntax.SyntaxKind.NotContainsCsKeyword:return Kusto.Language.Syntax.SyntaxKind.NotContainsCsExpression;case Kusto.Language.Syntax.SyntaxKind.NotBangContainsCsKeyword:return Kusto.Language.Syntax.SyntaxKind.NotContainsCsExpression;case Kusto.Language.Syntax.SyntaxKind.StartsWithKeyword:return Kusto.Language.Syntax.SyntaxKind.StartsWithExpression;case Kusto.Language.Syntax.SyntaxKind.NotStartsWithKeyword:return Kusto.Language.Syntax.SyntaxKind.NotStartsWithExpression;case Kusto.Language.Syntax.SyntaxKind.StartsWithCsKeyword:return Kusto.Language.Syntax.SyntaxKind.StartsWithCsExpression;case Kusto.Language.Syntax.SyntaxKind.NotStartsWithCsKeyword:return Kusto.Language.Syntax.SyntaxKind.NotStartsWithCsExpression;case Kusto.Language.Syntax.SyntaxKind.EndsWithKeyword:return Kusto.Language.Syntax.SyntaxKind.EndsWithExpression;case Kusto.Language.Syntax.SyntaxKind.NotEndsWithKeyword:return Kusto.Language.Syntax.SyntaxKind.NotEndsWithExpression;case Kusto.Language.Syntax.SyntaxKind.EndsWithCsKeyword:return Kusto.Language.Syntax.SyntaxKind.EndsWithCsExpression;case Kusto.Language.Syntax.SyntaxKind.NotEndsWithCsKeyword:return Kusto.Language.Syntax.SyntaxKind.NotEndsWithCsExpression;case Kusto.Language.Syntax.SyntaxKind.MatchesRegexKeyword:return Kusto.Language.Syntax.SyntaxKind.MatchesRegexExpression;default:return Kusto.Language.Syntax.SyntaxKind.None}},GetMultiplicativeExpressionKind:function(tokenKind){switch(tokenKind){case Kusto.Language.Syntax.SyntaxKind.AsteriskToken:return Kusto.Language.Syntax.SyntaxKind.MultiplyExpression;case Kusto.Language.Syntax.SyntaxKind.SlashToken:return Kusto.Language.Syntax.SyntaxKind.DivideExpression;case Kusto.Language.Syntax.SyntaxKind.PercentToken:return Kusto.Language.Syntax.SyntaxKind.ModuloExpression;default:return Kusto.Language.Syntax.SyntaxKind.None}},GetAdditiveExpressionKind:function(tokenKind){switch(tokenKind){case Kusto.Language.Syntax.SyntaxKind.PlusToken:return Kusto.Language.Syntax.SyntaxKind.AddExpression;case Kusto.Language.Syntax.SyntaxKind.MinusToken:return Kusto.Language.Syntax.SyntaxKind.SubtractExpression;default:return Kusto.Language.Syntax.SyntaxKind.None}},GetRelationalExpressionKind:function(tokenKind){switch(tokenKind){case Kusto.Language.Syntax.SyntaxKind.LessThanToken:return Kusto.Language.Syntax.SyntaxKind.LessThanExpression;case Kusto.Language.Syntax.SyntaxKind.LessThanOrEqualToken:return Kusto.Language.Syntax.SyntaxKind.LessThanOrEqualExpression;case Kusto.Language.Syntax.SyntaxKind.GreaterThanToken:return Kusto.Language.Syntax.SyntaxKind.GreaterThanExpression;case Kusto.Language.Syntax.SyntaxKind.GreaterThanOrEqualToken:return Kusto.Language.Syntax.SyntaxKind.GreaterThanOrEqualExpression;default:return Kusto.Language.Syntax.SyntaxKind.None}},GetExpressionHint:function(parameter){switch(parameter.ValueKind){case Kusto.Language.QueryOperatorParameterValueKind.Column:case Kusto.Language.QueryOperatorParameterValueKind.ColumnList:return Kusto.Language.Editor.CompletionHint.Column;default:return Kusto.Language.Editor.CompletionHint.None}},CreateQueryOperatorParameterMap:function(parameters){for(var p,aliasName,$t,map=new(System.Collections.Generic.Dictionary$2(System.String,Kusto.Language.QueryOperatorParameter).ctor),i=0;i<System.Array.getCount(parameters,Kusto.Language.QueryOperatorParameter);i=i+1|0)if(p=System.Array.getItem(parameters,i,Kusto.Language.QueryOperatorParameter),map.setItem(p.Name,p),p.Aliases!=null&&System.Array.getCount(p.Aliases,System.String)>0){$t=Bridge.getEnumerator(p.Aliases,System.String);try{while($t.moveNext())aliasName=$t.Current,map.setItem(aliasName,p)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}return map},IsMultiTokenName:function(name){return!Kusto.Language.Syntax.SyntaxFacts.IsKeyword$1(name)&&!Kusto.Language.KustoFacts.CanBeIdentifier(name)},CreateMissingJoinOnClause:function(){return new Kusto.Language.Syntax.JoinOnClause(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.JoinOnClause),Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)).Empty(),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingJoinOnClause()],Kusto.Language.Diagnostic))},CreateMissingFunctionParameters:function(){return new Kusto.Language.Syntax.FunctionParameters(Kusto.Language.Parsing.QueryParser.CreateMissingToken(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.FunctionParameter)).Empty(),Kusto.Language.Parsing.QueryParser.CreateMissingToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken))},CreateMissingFunctionBody:function(){return new Kusto.Language.Syntax.FunctionBody(Kusto.Language.Parsing.QueryParser.CreateMissingToken(Kusto.Language.Syntax.SyntaxKind.OpenBraceToken),Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)).Empty(),null,null,Kusto.Language.Parsing.QueryParser.CreateMissingToken(Kusto.Language.Syntax.SyntaxKind.CloseBraceToken))}}},fields:{_source:null,_options:null,_pos:0,_fnCreateMissingNameReference:null,_fnCreateMissingNameReferenceAsExpression:null,_depth:0,_safeParser:null,_safeOutput:null,_safeGrammar:null,_operatorSpecificNameToQueryOperatorParameterMap:null,_queryOperatorParameterNamesAllowed:0,_queryOperatorParameterEqualsNeeded:!1},props:{FnCreateMissingNameReference:{get:function(){return Bridge.staticEquals(this._fnCreateMissingNameReference,null)&&(this._fnCreateMissingNameReference=Bridge.fn.cacheBind(this,this.CreateMissingNameReference)),this._fnCreateMissingNameReference}},FnCreateMissingNameReferenceAsExpression:{get:function(){return Bridge.staticEquals(this._fnCreateMissingNameReferenceAsExpression,null)&&(this._fnCreateMissingNameReferenceAsExpression=Bridge.fn.bind(this,function(){return Bridge.cast(this.CreateMissingNameReference(),Kusto.Language.Syntax.Expression)})),this._fnCreateMissingNameReferenceAsExpression}}},ctors:{$ctor1:function(source,start,options){this.$initialize();this._source=source;this._options=options||Kusto.Language.ParseOptions.Default;this._pos=start},ctor:function(tokens,start,options){Kusto.Language.Parsing.QueryParser.$ctor1.call(this,new(Kusto.Language.Parsing.ArraySource$1(Kusto.Language.Parsing.LexicalToken))(tokens),start,options)}},methods:{GetResetPoint:function(){return this._pos},Reset:function(resetPoint){this._pos=resetPoint},ParseBest:function(TElement,parsers){var $t,start=this.GetResetPoint(),bestEnd=start,bestResult=null,parser,result,end;$t=Bridge.getEnumerator(parsers,Function);try{while($t.moveNext())parser=$t.Current,this.Reset(start),result=parser(this),end=this.GetResetPoint(),end>bestEnd&&(bestEnd=end,bestResult=result)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return this.Reset(bestEnd),bestResult},PeekToken:function(){return this._source.IsEnd(this._pos)?Kusto.Language.Parsing.QueryParser.NoToken:this._source.Peek(this._pos)},PeekToken$1:function(offset){var index=this._pos+offset|0;return this._source.IsEnd(index)?Kusto.Language.Parsing.QueryParser.NoToken:this._source.Peek(index)},ParseToken:function(){var tok=this.PeekToken();return tok.Kind!==Kusto.Language.Syntax.SyntaxKind.None?(this._pos=this._pos+1|0,Kusto.Language.Syntax.SyntaxToken.From(tok)):null},ParseToken$1:function(kind){return this.PeekToken().Kind===kind?this.ParseToken():null},ParseToken$2:function(kinds){return System.Linq.Enumerable.from(kinds,Kusto.Language.Syntax.SyntaxKind).contains(this.PeekToken().Kind)?this.ParseToken():null},ParseToken$5:function(text,asKind){var len,token;return(asKind===void 0&&(asKind=null),len=Kusto.Language.Parsing.SyntaxParsers.MatchesText(this._source,this._pos,text),len>0)?(token=Kusto.Language.Parsing.SyntaxParsers.ProduceSyntaxToken$1(this._source,this._pos,len,text,asKind),this._pos=this._pos+len|0,token):null},ParseToken$4:function(count,asKind){asKind===void 0&&(asKind=null);var token=Kusto.Language.Parsing.SyntaxParsers.ProduceSyntaxToken(this._source,this._pos,count,asKind);return token!=null&&(this._pos=this._pos+count|0),token},ParseToken$3:function(texts){for(var token,i=0;i<System.Array.getCount(texts,System.String);i=i+1|0)if(token=this.ParseToken$5(System.Array.getItem(texts,i,System.String)),token!=null)return token;return null},ParseRequiredToken:function(kind){return this.ParseToken$1(kind)||Kusto.Language.Parsing.QueryParser.CreateMissingToken(kind)},ParseRequiredToken$2:function(text,kind){return kind===void 0&&(kind=317),this.ParseToken$5(text,kind)||Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken$3(text)},ParseRequiredToken$1:function(texts){return this.ParseToken$3(texts)||Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken$2(texts)},ScanToken$1:function(text,offset){return offset===void 0&&(offset=0),Kusto.Language.Parsing.SyntaxParsers.MatchesText(this._source,this._pos+offset|0,text)},ScanToken:function(texts,offset){var i,len;for(offset===void 0&&(offset=0),i=0;i<System.Array.getCount(texts,System.String);i=i+1|0)if(len=this.ScanToken$1(System.Array.getItem(texts,i,System.String),offset),len>0)return len;return-1},ScanIdentifierOrKeywordAsIdentifier:function(offset){offset===void 0&&(offset=0);var token=this.PeekToken$1(offset);return token.Kind===Kusto.Language.Syntax.SyntaxKind.IdentifierToken||Kusto.Language.Syntax.SyntaxFacts.IsKeyword(token.Kind)&&Kusto.Language.Syntax.SyntaxFacts.CanBeIdentifier(token.Kind)},ScanExtendedKeywordAsIdentifier:function(offset){offset===void 0&&(offset=0);var token=this.PeekToken$1(offset);return Kusto.Language.Syntax.SyntaxFacts.IsKeyword(token.Kind)&&Kusto.Language.Parsing.QueryParser.s_extendedKeyordsAsIdentifiers.contains(token.Kind)},ParseIdentiferOrKeywordAsIdentifier:function(){var kind=this.PeekToken().Kind;return kind===Kusto.Language.Syntax.SyntaxKind.IdentifierToken||Kusto.Language.Syntax.SyntaxFacts.IsKeyword(kind)&&Kusto.Language.Syntax.SyntaxFacts.CanBeIdentifier(kind)?this.ParseToken():null},ParseIdentifierOrKeywordTokenLiteral:function(){var token=this.ParseIdentiferOrKeywordAsIdentifier();return token!=null?new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.TokenLiteralExpression,token):null},CreateMissingNameDeclaration:function(){var token,dx=(token=this.PeekToken())!=null&&Kusto.Language.Syntax.SyntaxFacts.IsKeyword(token.Kind)?Kusto.Language.DiagnosticFacts.GetMissingNameWithKeyword(token.Text):Kusto.Language.DiagnosticFacts.GetMissingName();return new Kusto.Language.Syntax.NameDeclaration.$ctor1(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken),System.Array.init([dx],Kusto.Language.Diagnostic))},CreateMissingNameReference:function(){var token,dx=(token=this.PeekToken())!=null&&Kusto.Language.Syntax.SyntaxFacts.IsKeyword(token.Kind)?Kusto.Language.DiagnosticFacts.GetMissingNameWithKeyword(token.Text):Kusto.Language.DiagnosticFacts.GetMissingName();return new Kusto.Language.Syntax.NameReference.$ctor2(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken),System.Array.init([dx],Kusto.Language.Diagnostic))},CreateMissingExpression:function(){var token,dx=(token=this.PeekToken())!=null&&Kusto.Language.Syntax.SyntaxFacts.IsKeyword(token.Kind)?Kusto.Language.DiagnosticFacts.GetMissingExpressionWithKeyword(token.Text):Kusto.Language.DiagnosticFacts.GetMissingExpression();return new Kusto.Language.Syntax.NameReference.$ctor2(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken),System.Array.init([dx],Kusto.Language.Diagnostic))},ParseCommaList:function(TElement,elementParser,createMissingElement,fnScanEnd,oneOrMore,allowTrailingComma){var list,element,token,kind,comma,nextElement;for(createMissingElement===void 0&&(createMissingElement=null),fnScanEnd===void 0&&(fnScanEnd=null),oneOrMore===void 0&&(oneOrMore=!1),allowTrailingComma===void 0&&(allowTrailingComma=!1),list=new(System.Collections.Generic.List$1(Kusto.Language.Syntax.SeparatedElement$1(TElement)).ctor),element=Bridge.staticEquals(fnScanEnd,null)||!fnScanEnd(this)?elementParser(this):null,element!=null||this.PeekToken().Kind!==Kusto.Language.Syntax.SyntaxKind.CommaToken||Bridge.staticEquals(createMissingElement,null)||(element=createMissingElement());element!=null;)if(token=this.PeekToken(),kind=token.Kind,kind===Kusto.Language.Syntax.SyntaxKind.EndOfTextToken||kind===Kusto.Language.Syntax.SyntaxKind.None||!Bridge.staticEquals(fnScanEnd,null)&&fnScanEnd(this)){list.add(new(Kusto.Language.Syntax.SeparatedElement$1(TElement))(element,null));break}else if(kind===Kusto.Language.Syntax.SyntaxKind.CommaToken){if(comma=this.ParseToken(),list.add(new(Kusto.Language.Syntax.SeparatedElement$1(TElement))(element,comma)),!Bridge.staticEquals(createMissingElement,null))if(element=Bridge.staticEquals(fnScanEnd,null)||!fnScanEnd(this)?elementParser(this):null,element!=null)continue;else if(allowTrailingComma)break;else list.add(new(Kusto.Language.Syntax.SeparatedElement$1(TElement))(createMissingElement(),null));break}else if(Bridge.staticEquals(fnScanEnd,null)){list.add(new(Kusto.Language.Syntax.SeparatedElement$1(TElement))(element,null));break}else{nextElement=elementParser(this);nextElement!=null?list.add(new(Kusto.Language.Syntax.SeparatedElement$1(TElement))(element,Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken(Kusto.Language.Syntax.SyntaxKind.CommaToken))):list.add(new(Kusto.Language.Syntax.SeparatedElement$1(TElement))(element,null));element=nextElement;continue}return oneOrMore&&list.Count===0&&!Bridge.staticEquals(createMissingElement,null)&&list.add(new(Kusto.Language.Syntax.SeparatedElement$1(TElement))(createMissingElement())),new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(TElement)).$ctor1)(list)},ParseList:function(TElement,elementParser,createMissingElement,fnScanEnd,oneOrMore){var list,element;for(createMissingElement===void 0&&(createMissingElement=null),fnScanEnd===void 0&&(fnScanEnd=null),oneOrMore===void 0&&(oneOrMore=!1),list=new(System.Collections.Generic.List$1(TElement).ctor);Bridge.staticEquals(fnScanEnd,null)||!fnScanEnd(this);){if(element=elementParser(this),element==null)break;list.add(element)}return oneOrMore&&list.Count===0&&!Bridge.staticEquals(createMissingElement,null)&&list.add(createMissingElement()),new(Kusto.Language.Syntax.SyntaxList$1(TElement).$ctor1)(list)},ScanCommonListEnd:function(offset){offset===void 0&&(offset=0);switch(this.PeekToken$1(offset).Kind){case Kusto.Language.Syntax.SyntaxKind.CloseParenToken:case Kusto.Language.Syntax.SyntaxKind.CloseBracketToken:case Kusto.Language.Syntax.SyntaxKind.CloseBraceToken:case Kusto.Language.Syntax.SyntaxKind.BarToken:case Kusto.Language.Syntax.SyntaxKind.SemicolonToken:case Kusto.Language.Syntax.SyntaxKind.EndOfTextToken:case Kusto.Language.Syntax.SyntaxKind.None:return!0;default:return!1}},ScanCustomListEnd:function(kind,offset){return(offset===void 0&&(offset=0),this.PeekToken$1(offset).Kind===kind)?!0:this.ScanCommonListEnd()},ScanCustomListEnd$1:function(kinds,offset){var kind,i;for(offset===void 0&&(offset=0),kind=this.PeekToken$1(offset).Kind,i=0;i<System.Array.getCount(kinds,Kusto.Language.Syntax.SyntaxKind);i=i+1|0)if(kind===System.Array.getItem(kinds,i,Kusto.Language.Syntax.SyntaxKind))return!0;return this.ScanCommonListEnd()},ParseName:function(){switch(this.PeekToken().Kind){case Kusto.Language.Syntax.SyntaxKind.OpenBracketToken:return this.ParseBracketedName();case Kusto.Language.Syntax.SyntaxKind.OpenBraceToken:return this.ParseClientParameterName();default:return this.ParseIdentifierName()}},ParseExtendedName:function(){switch(this.PeekToken().Kind){case Kusto.Language.Syntax.SyntaxKind.OpenBracketToken:return this.ParseBracketedName();case Kusto.Language.Syntax.SyntaxKind.OpenBraceToken:return this.ParseClientParameterName();default:return this.ParseIdentifierName()||this.ParseExtendedKeyordAsIdentifierName()}},ParseIdentifierName:function(){var tok=this.PeekToken();return tok.Kind===Kusto.Language.Syntax.SyntaxKind.IdentifierToken||Kusto.Language.Syntax.SyntaxFacts.IsKeyword(tok.Kind)&&Kusto.Language.Syntax.SyntaxFacts.CanBeIdentifier(tok.Kind)?new Kusto.Language.Syntax.TokenName(this.ParseToken()):null},ParseExtendedKeyordAsIdentifierName:function(){return this.ScanExtendedKeywordAsIdentifier()?new Kusto.Language.Syntax.TokenName(this.ParseToken()):null},ParseBracketedName:function(){if(this.ScanBracketedName()>0){var open=this.ParseToken(),expr=this.ParseStringOrCompoundStringLiteral(),close=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseBracketToken);return new Kusto.Language.Syntax.BracketedName(open,expr,close)}return null},ScanName:function(offset){offset===void 0&&(offset=0);var tok=this.PeekToken$1(offset);switch(tok.Kind){case Kusto.Language.Syntax.SyntaxKind.IdentifierToken:return 1;case Kusto.Language.Syntax.SyntaxKind.OpenBracketToken:return this.ScanBracketedName(offset);case Kusto.Language.Syntax.SyntaxKind.OpenBraceToken:return this.ScanIdentifierOrKeywordAsIdentifier(offset+1|0)&&this.PeekToken$1(offset+2|0).Kind===Kusto.Language.Syntax.SyntaxKind.CloseBraceToken?3:-1;default:return this.ScanIdentifierOrKeywordAsIdentifier(offset)?1:-1}},ScanExtendedName:function(offset){offset===void 0&&(offset=0);var result=this.ScanName(offset);return result>=0?result:this.ScanExtendedKeywordAsIdentifier(offset)?1:-1},ScanBracketedName:function(offset){offset===void 0&&(offset=0);var len;return this.PeekToken$1(offset).Kind===Kusto.Language.Syntax.SyntaxKind.OpenBracketToken&&(len=Bridge.hasValue(this.ScanStringOrCompoundStringLiteral(offset+1|0))?this.ScanStringOrCompoundStringLiteral(offset+1|0):null)!=null&&len>0&&this.PeekToken$1((offset+1|0)+len|0).Kind===Kusto.Language.Syntax.SyntaxKind.CloseBracketToken?len+2|0:-1},ScanWildcardedName:function(offset){var start,token,nextToken;if(offset===void 0&&(offset=0),start=offset,token=this.PeekToken$1(offset),token.Kind===Kusto.Language.Syntax.SyntaxKind.AsteriskToken)offset=offset+1|0;else if((token.Kind===Kusto.Language.Syntax.SyntaxKind.IdentifierToken||this.ScanExtendedKeywordAsIdentifier(offset))&&(nextToken=this.PeekToken$1(offset+1|0))!=null&&nextToken.Kind===Kusto.Language.Syntax.SyntaxKind.AsteriskToken&&(nextToken.Trivia.length===0||this._options.AllowNonAdjacentWildcardParts))offset=offset+2|0;else return-1;while(((token=this.PeekToken$1(offset)).Kind===Kusto.Language.Syntax.SyntaxKind.IdentifierToken||token.Kind===Kusto.Language.Syntax.SyntaxKind.LongLiteralToken||token.Kind===Kusto.Language.Syntax.SyntaxKind.AsteriskToken||this.ScanExtendedKeywordAsIdentifier(offset))&&(token.Trivia.length===0||this._options.AllowNonAdjacentWildcardParts))offset=offset+1|0;return offset>start?offset-start|0:-1},ParseWildcardedIdentifier:function(){var len=this.ScanWildcardedName();if(len>0){var trivia=this.PeekToken().Trivia,text=this.GetCombinedTokenText(0,len),valueText=this._options.AllowNonAdjacentWildcardParts?this.GetCombinedTokenText(0,len,!1):text,lit=Kusto.Language.Syntax.SyntaxToken.Identifier(trivia,text,valueText);return this._pos=this._pos+len|0,lit}return null},ParseWildcardedNameReference:function(){var id=this.ParseWildcardedIdentifier();return id!=null?new Kusto.Language.Syntax.NameReference.$ctor1(new Kusto.Language.Syntax.WildcardedName(id)):null},ScanBracketedWildcardedName:function(offset){return offset===void 0&&(offset=0),this.PeekToken$1(offset).Kind===Kusto.Language.Syntax.SyntaxKind.OpenBracketToken&&this.ScanWildcardedName(offset+1|0)>0},ParseBracketedWildcardedNameReference:function(){if(this.ScanBracketedWildcardedName()){var open=this.ParseToken(),wildcard=this.ParseWildcardedIdentifier(),close=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseBracketToken);return new Kusto.Language.Syntax.NameReference.$ctor1(new Kusto.Language.Syntax.BracketedWildcardedName(open,wildcard,close))}return null},GetCombinedTokenText:function(start,length,includeInnerTrivia){var builder,i,token;if(start===void 0&&(start=0),length===void 0&&(length=1),includeInnerTrivia===void 0&&(includeInnerTrivia=!0),length===1)return this.PeekToken$1(start).Text;for(builder=new System.Text.StringBuilder,i=0;i<length;i=i+1|0)token=this.PeekToken$1(start+i|0),i>0&&includeInnerTrivia&&builder.append(token.Trivia),builder.append(token.Text);return builder.toString()},ParseBracketedNameReference:function(){var name=this.ParseBracketedName();return name!=null?new Kusto.Language.Syntax.NameReference.$ctor1(name):null},ParseNameReference:function(){var name=this.ParseName();return name!=null?new Kusto.Language.Syntax.NameReference.$ctor1(name):null},ParseExtendedNameReference:function(){var name=this.ParseExtendedName();return name!=null?new Kusto.Language.Syntax.NameReference.$ctor1(name):null},ParseNameDeclaration:function(){var name=this.ParseName();return name!=null?new Kusto.Language.Syntax.NameDeclaration.ctor(name):null},ParseExtendedNameDeclaration:function(){var name=this.ParseExtendedName();return name!=null?new Kusto.Language.Syntax.NameDeclaration.ctor(name):null},ScanClientParameterName:function(offset){offset===void 0&&(offset=0);var name,close;return this.PeekToken$1(offset).Kind===Kusto.Language.Syntax.SyntaxKind.OpenBraceToken&&(name=this.PeekToken$1(offset+1|0))!=null&&(name.Kind===Kusto.Language.Syntax.SyntaxKind.IdentifierToken||Kusto.Language.Syntax.SyntaxFacts.IsKeyword(name.Kind)&&Kusto.Language.Syntax.SyntaxFacts.CanBeIdentifier(name.Kind))&&name.Trivia.length===0&&(close=this.PeekToken$1(offset+2|0))!=null&&close.Kind===Kusto.Language.Syntax.SyntaxKind.CloseBraceToken&&close.Trivia.length===0},ParseClientParameterName:function(){return this.ScanClientParameterName()?new Kusto.Language.Syntax.BracedName(this.ParseToken(),this.ParseToken(),this.ParseToken()):null},ParseClientParameterReference:function(){var name=this.ParseClientParameterName();return name!=null?new Kusto.Language.Syntax.NameReference.$ctor1(name):null},IsKeywordInNamePosition:function(){return Kusto.Language.Parsing.QueryParser.IsKeywordInNamePosition(this._source,this._pos)},ParseInvalidKeywordAsNameReference:function(){if(this.IsKeywordInNamePosition()){var token=this.ParseToken();return new Kusto.Language.Syntax.NameReference.$ctor1(new Kusto.Language.Syntax.TokenName(token),System.Array.init([Kusto.Language.DiagnosticFacts.GetNameRequiresBrackets(token.Text)],Kusto.Language.Diagnostic))}return null},ScanStringOrCompoundStringLiteral:function(offset){offset===void 0&&(offset=0);for(var start=offset;this.PeekToken$1(offset).Kind===Kusto.Language.Syntax.SyntaxKind.StringLiteralToken;)offset=offset+1|0;return offset>start?offset-start|0:-1},ParseStringOrCompoundStringLiteral:function(){if(this.PeekToken().Kind===Kusto.Language.Syntax.SyntaxKind.StringLiteralToken){if(this.PeekToken$1(1).Kind!==Kusto.Language.Syntax.SyntaxKind.StringLiteralToken)return new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.StringLiteralExpression,this.ParseToken());for(var tokens=new(System.Collections.Generic.List$1(Kusto.Language.Syntax.SyntaxToken).ctor);this.PeekToken().Kind===Kusto.Language.Syntax.SyntaxKind.StringLiteralToken;)tokens.add(this.ParseToken());return new Kusto.Language.Syntax.CompoundStringLiteralExpression(new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SyntaxToken).$ctor1)(tokens))}return null},ParseLiteral:function(){switch(this.PeekToken().Kind){case Kusto.Language.Syntax.SyntaxKind.StringLiteralToken:return this.ParseStringOrCompoundStringLiteral();case Kusto.Language.Syntax.SyntaxKind.BooleanLiteralToken:return new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.BooleanLiteralExpression,this.ParseToken());case Kusto.Language.Syntax.SyntaxKind.LongLiteralToken:return new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.LongLiteralExpression,this.ParseToken());case Kusto.Language.Syntax.SyntaxKind.RealLiteralToken:return new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.RealLiteralExpression,this.ParseToken());case Kusto.Language.Syntax.SyntaxKind.DecimalLiteralToken:return new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.DecimalLiteralExpression,this.ParseToken());case Kusto.Language.Syntax.SyntaxKind.IntLiteralToken:return new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.IntLiteralExpression,this.ParseToken());case Kusto.Language.Syntax.SyntaxKind.GuidLiteralToken:return new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.GuidLiteralExpression,this.ParseToken());case Kusto.Language.Syntax.SyntaxKind.RawGuidLiteralToken:return new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.GuidLiteralExpression,this.ParseToken(),System.Array.init([Kusto.Language.DiagnosticFacts.GetRawGuidLiteralNotAllowed()],Kusto.Language.Diagnostic));case Kusto.Language.Syntax.SyntaxKind.DateTimeLiteralToken:return new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.DateTimeLiteralExpression,this.ParseToken());case Kusto.Language.Syntax.SyntaxKind.TimespanLiteralToken:return new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.TimespanLiteralExpression,this.ParseToken());case Kusto.Language.Syntax.SyntaxKind.DynamicKeyword:return this.ParseDynamicLiteral();case Kusto.Language.Syntax.SyntaxKind.PlusToken:case Kusto.Language.Syntax.SyntaxKind.MinusToken:return this.ParseSignedNumericLiteral();case Kusto.Language.Syntax.SyntaxKind.TypeOfKeyword:return this.ParseTypeOfLiteral();case Kusto.Language.Syntax.SyntaxKind.OpenBraceToken:return this.ParseClientParameterReference()}return null},ScanSignedNumericLiteral:function(offset){offset===void 0&&(offset=0);var sign=this.PeekToken$1(offset),number=this.PeekToken$1(offset+1|0);return(sign.Kind===Kusto.Language.Syntax.SyntaxKind.PlusToken||sign.Kind===Kusto.Language.Syntax.SyntaxKind.MinusToken)&&number.Trivia.length===0&&(number.Kind===Kusto.Language.Syntax.SyntaxKind.LongLiteralToken||number.Kind===Kusto.Language.Syntax.SyntaxKind.RealLiteralToken||number.Kind===Kusto.Language.Syntax.SyntaxKind.TimespanLiteralToken)&&number.Text.length>0&&System.Char.isDigit(number.Text.charCodeAt(0))?2:-1},ParseSignedNumericLiteral:function(){var len=this.ScanSignedNumericLiteral();if(len===2){var sign=this.ParseToken(),number=this.ParseToken(),signedNumberToken=Kusto.Language.Syntax.SyntaxToken.Literal(sign.Trivia,(sign.Text||"")+(number.Text||""),number.Kind);switch(number.Kind){case Kusto.Language.Syntax.SyntaxKind.LongLiteralToken:return new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.LongLiteralExpression,signedNumberToken);case Kusto.Language.Syntax.SyntaxKind.RealLiteralToken:return new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.RealLiteralExpression,signedNumberToken);case Kusto.Language.Syntax.SyntaxKind.TimespanLiteralToken:return new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.TimespanLiteralExpression,signedNumberToken)}}return null},ScanForcedRealLiteral:function(offset){offset===void 0&&(offset=0);var number=this.PeekToken$1(offset);return(number.Kind===Kusto.Language.Syntax.SyntaxKind.LongLiteralToken||number.Kind===Kusto.Language.Syntax.SyntaxKind.RealLiteralToken)&&number.Text.length>0&&System.Char.isDigit(number.Text.charCodeAt(0))?1:-1},ParseForcedRealLiteral:function(){var token=this.PeekToken();switch(token.Kind){case Kusto.Language.Syntax.SyntaxKind.LongLiteralToken:case Kusto.Language.Syntax.SyntaxKind.RealLiteralToken:if(token.Text.length>0&&System.Char.isDigit(token.Text.charCodeAt(0)))return new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.RealLiteralExpression,this.ParseToken());break;case Kusto.Language.Syntax.SyntaxKind.PlusToken:case Kusto.Language.Syntax.SyntaxKind.MinusToken:return this.ParseSignedForcedRealLiteral();case Kusto.Language.Syntax.SyntaxKind.OpenBraceToken:return this.ParseClientParameterReference()}return null},ParseSignedForcedRealLiteral:function(){var len=this.ScanSignedNumericLiteral();if(len===2){var sign=this.ParseToken(),number=this.ParseToken(),signedNumberToken=Kusto.Language.Syntax.SyntaxToken.Literal(sign.Trivia,(sign.Text||"")+(number.Text||""),number.Kind);switch(number.Kind){case Kusto.Language.Syntax.SyntaxKind.LongLiteralToken:case Kusto.Language.Syntax.SyntaxKind.RealLiteralToken:return new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.RealLiteralExpression,signedNumberToken)}}return null},ParseDynamicLiteral:function(){if(this.PeekToken().Kind===Kusto.Language.Syntax.SyntaxKind.DynamicKeyword&&this.PeekToken$1(1).Kind===Kusto.Language.Syntax.SyntaxKind.OpenParenToken){var keyword=this.ParseToken(),open=this.ParseToken(),value=this.ParseJsonValue()||Kusto.Language.Parsing.QueryParser.CreateMissingJsonValue(),close=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken);return new Kusto.Language.Syntax.DynamicExpression(keyword,open,value,close)}return null},ParseJsonValue:function(){switch(this.PeekToken().Kind){case Kusto.Language.Syntax.SyntaxKind.LongLiteralToken:case Kusto.Language.Syntax.SyntaxKind.RealLiteralToken:case Kusto.Language.Syntax.SyntaxKind.MinusToken:return this.ParseJsonNumber();case Kusto.Language.Syntax.SyntaxKind.BooleanLiteralToken:case Kusto.Language.Syntax.SyntaxKind.DateTimeLiteralToken:case Kusto.Language.Syntax.SyntaxKind.TimespanLiteralToken:case Kusto.Language.Syntax.SyntaxKind.GuidLiteralToken:case Kusto.Language.Syntax.SyntaxKind.RawGuidLiteralToken:case Kusto.Language.Syntax.SyntaxKind.DecimalLiteralToken:case Kusto.Language.Syntax.SyntaxKind.StringLiteralToken:case Kusto.Language.Syntax.SyntaxKind.DynamicKeyword:return this.ParseLiteral();case Kusto.Language.Syntax.SyntaxKind.NullKeyword:return this.ParseNullLiteral();case Kusto.Language.Syntax.SyntaxKind.OpenBracketToken:return this.ParseJsonArray();case Kusto.Language.Syntax.SyntaxKind.OpenBraceToken:return this.ScanClientParameterName()?this.ParseClientParameterReference():this.ParseJsonObject()}return null},ParseJsonNumber:function(){var numberToken,op,literal;switch(this.PeekToken().Kind){case Kusto.Language.Syntax.SyntaxKind.LongLiteralToken:case Kusto.Language.Syntax.SyntaxKind.RealLiteralToken:return this.ParseLiteral();case Kusto.Language.Syntax.SyntaxKind.MinusToken:if(numberToken=this.PeekToken$1(1),numberToken.Kind===Kusto.Language.Syntax.SyntaxKind.LongLiteralToken||numberToken.Kind===Kusto.Language.Syntax.SyntaxKind.RealLiteralToken)return op=this.ParseToken(),literal=this.ParseLiteral(),new Kusto.Language.Syntax.PrefixUnaryExpression(Kusto.Language.Syntax.SyntaxKind.UnaryMinusExpression,op,literal);break}return null},ParseJsonArray:function(){if(this.PeekToken().Kind===Kusto.Language.Syntax.SyntaxKind.OpenBracketToken){var open=this.ParseToken(),list=this.ParseCommaList(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.QueryParser.FnParseJsonValue,Kusto.Language.Parsing.QueryParser.CreateMissingJsonValue,Kusto.Language.Parsing.QueryParser.FnScanCommonListEnd),close=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseBracketToken);return new Kusto.Language.Syntax.JsonArrayExpression(open,list,close)}return null},ParseJsonObject:function(){if(this.PeekToken().Kind===Kusto.Language.Syntax.SyntaxKind.OpenBraceToken){var open=this.ParseToken(),list=this.ParseCommaList(Kusto.Language.Syntax.JsonPair,Kusto.Language.Parsing.QueryParser.FnParseJsonPair,Kusto.Language.Parsing.QueryParser.CreateMissingJsonPair,Kusto.Language.Parsing.QueryParser.FnScanCommonListEnd),close=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseBraceToken);return new Kusto.Language.Syntax.JsonObjectExpression(open,list,close)}return null},ParseJsonPair:function(){switch(this.PeekToken().Kind){case Kusto.Language.Syntax.SyntaxKind.StringLiteralToken:var name=this.ParseToken(),colon=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.ColonToken),value=this.ParseJsonValue()||Kusto.Language.Parsing.QueryParser.CreateMissingJsonValue();return new Kusto.Language.Syntax.JsonPair(name,colon,value);case Kusto.Language.Syntax.SyntaxKind.ColonToken:return name=Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.StringLiteralToken,Kusto.Language.DiagnosticFacts.GetMissingString()),colon=this.ParseToken(),value=this.ParseJsonValue()||Kusto.Language.Parsing.QueryParser.CreateMissingJsonValue(),new Kusto.Language.Syntax.JsonPair(name,colon,value);default:return value=this.ParseJsonValue(),value!=null?(name=Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.StringLiteralToken,Kusto.Language.DiagnosticFacts.GetMissingString()),colon=Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken(Kusto.Language.Syntax.SyntaxKind.ColonToken),new Kusto.Language.Syntax.JsonPair(name,colon,value)):null}},ParseNullLiteral:function(){var nullToken=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.NullKeyword);return nullToken!=null?new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.NullLiteralExpression,nullToken):null},ScanTypeOfScalar:function(offset){return offset===void 0&&(offset=0),this.PeekToken$1(offset).Kind===Kusto.Language.Syntax.SyntaxKind.TypeOfKeyword&&this.PeekToken$1(offset+1|0).Kind===Kusto.Language.Syntax.SyntaxKind.OpenParenToken&&(this.ScanParamTypeExtended(offset+2|0)||this.PeekToken$1(offset+2|0).Kind===Kusto.Language.Syntax.SyntaxKind.IdentifierToken&&this.PeekToken$1(offset+3|0).Kind===Kusto.Language.Syntax.SyntaxKind.CloseParenToken)},ScanTypeOfLiteral:function(offset){return offset===void 0&&(offset=0),this.ScanTypeOfScalar(offset)||this.PeekToken$1(offset).Kind===Kusto.Language.Syntax.SyntaxKind.TypeOfKeyword&&this.PeekToken$1(offset+1|0).Kind===Kusto.Language.Syntax.SyntaxKind.OpenParenToken},ParseTypeOfLiteral:function(){if(this.PeekToken().Kind===Kusto.Language.Syntax.SyntaxKind.TypeOfKeyword)if(this.ScanTypeOfScalar()){var keyword=this.ParseToken(),open=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),type=this.ParseParamTypeExtended()||this.ParseIdentifierTypeExpression()||Kusto.Language.Parsing.QueryParser.CreateMissingType(),close=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken);return new Kusto.Language.Syntax.TypeOfLiteralExpression(keyword,open,new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)).ctor)([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression))(type)]),close)}else if(this.PeekToken$1(1).Kind===Kusto.Language.Syntax.SyntaxKind.OpenParenToken){var keyword1=this.ParseToken(),open1=this.ParseToken(),list=this.ParseCommaList(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.QueryParser.FnParseTypeOfElement,Kusto.Language.Parsing.QueryParser.CreateMissingTypeExpression,Kusto.Language.Parsing.QueryParser.FnScanCommonListEnd),close1=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken);return new Kusto.Language.Syntax.TypeOfLiteralExpression(keyword1,open1,list,close1)}return null},ParseStarExpression:function(){var token=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.AsteriskToken);return token!=null?new Kusto.Language.Syntax.StarExpression(token):null},ParseTypeOfElement:function(){return this.ParseStarExpression()||this.ParseNameAndTypeDeclaration()},ScanParamType:function(offset){offset===void 0&&(offset=0);switch(this.PeekToken$1(offset).Kind){case Kusto.Language.Syntax.SyntaxKind.BoolKeyword:case Kusto.Language.Syntax.SyntaxKind.BooleanKeyword:case Kusto.Language.Syntax.SyntaxKind.DateKeyword:case Kusto.Language.Syntax.SyntaxKind.DateTimeKeyword:case Kusto.Language.Syntax.SyntaxKind.DecimalKeyword:case Kusto.Language.Syntax.SyntaxKind.DoubleKeyword:case Kusto.Language.Syntax.SyntaxKind.DynamicKeyword:case Kusto.Language.Syntax.SyntaxKind.GuidKeyword:case Kusto.Language.Syntax.SyntaxKind.IntKeyword:case Kusto.Language.Syntax.SyntaxKind.Int64Keyword:case Kusto.Language.Syntax.SyntaxKind.Int8Keyword:case Kusto.Language.Syntax.SyntaxKind.LongKeyword:case Kusto.Language.Syntax.SyntaxKind.RealKeyword:case Kusto.Language.Syntax.SyntaxKind.StringKeyword:case Kusto.Language.Syntax.SyntaxKind.TimeKeyword:case Kusto.Language.Syntax.SyntaxKind.TimespanKeyword:case Kusto.Language.Syntax.SyntaxKind.UniqueIdKeyword:return!0;default:return!1}},ScanParamTypeExtended:function(offset){if(offset===void 0&&(offset=0),this.ScanParamType(offset))return!0;switch(this.PeekToken$1(offset).Kind){case Kusto.Language.Syntax.SyntaxKind.FloatKeyword:case Kusto.Language.Syntax.SyntaxKind.Int16Keyword:case Kusto.Language.Syntax.SyntaxKind.Int32Keyword:case Kusto.Language.Syntax.SyntaxKind.UIntKeyword:case Kusto.Language.Syntax.SyntaxKind.UInt16Keyword:case Kusto.Language.Syntax.SyntaxKind.UInt32Keyword:case Kusto.Language.Syntax.SyntaxKind.UInt64Keyword:case Kusto.Language.Syntax.SyntaxKind.UInt8Keyword:case Kusto.Language.Syntax.SyntaxKind.ULongKeyword:return!0;default:return!1}},ParseParamType:function(){return this.ScanParamType()?new Kusto.Language.Syntax.PrimitiveTypeExpression(this.ParseToken()):null},ParseParamTypeExtended:function(){return this.ScanParamTypeExtended()?new Kusto.Language.Syntax.PrimitiveTypeExpression(this.ParseToken()):null},ParseIdentifierTypeExpression:function(){var kind=this.PeekToken().Kind;return kind===Kusto.Language.Syntax.SyntaxKind.IdentifierToken||Kusto.Language.Syntax.SyntaxFacts.IsKeyword(kind)&&Kusto.Language.Syntax.SyntaxFacts.CanBeIdentifier(kind)?new Kusto.Language.Syntax.PrimitiveTypeExpression(this.ParseToken()):null},ParseInvalidParamType:function(){var token,kind=new Kusto.Language.Syntax.SyntaxKind;return(token=this.PeekToken())!=null&&(kind=Bridge.is(token.Kind,System.Int16)?token.Kind:null)!=null&&(this.ScanParamTypeExtended()||kind===Kusto.Language.Syntax.SyntaxKind.IdentifierToken||Kusto.Language.Syntax.SyntaxFacts.IsKeyword(kind)&&Kusto.Language.Syntax.SyntaxFacts.CanBeIdentifier(kind))?new Kusto.Language.Syntax.PrimitiveTypeExpression(this.ParseToken(),System.Array.init([Kusto.Language.DiagnosticFacts.GetInvalidTypeName(token.Text)],Kusto.Language.Diagnostic)):null},ParseNameAndTypeDeclaration:function(){var name=this.ParseExtendedNameDeclaration(),colon,type,colon1,type1;if(name!=null)return colon=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.ColonToken),type=this.PeekToken().Kind===Kusto.Language.Syntax.SyntaxKind.OpenParenToken?this.ParseSchemaType():this.ParseParamType()||this.ParseInvalidParamType()||Kusto.Language.Parsing.QueryParser.CreateMissingType(),new Kusto.Language.Syntax.NameAndTypeDeclaration(name,colon,type);else if(this.PeekToken().Kind===Kusto.Language.Syntax.SyntaxKind.ColonToken)return colon1=this.ParseToken(),type1=this.ParseParamType()||this.ParseInvalidParamType()||Kusto.Language.Parsing.QueryParser.CreateMissingType(),new Kusto.Language.Syntax.NameAndTypeDeclaration(this.CreateMissingNameDeclaration(),colon1,type1);return null},ParseNameAndOptionalTypeDeclaration:function(){var colon,type,name,colon1,type1;return this.PeekToken().Kind===Kusto.Language.Syntax.SyntaxKind.ColonToken?(colon=this.ParseToken(),type=this.ParseParamType()||this.ParseInvalidParamType()||Kusto.Language.Parsing.QueryParser.CreateMissingType(),new Kusto.Language.Syntax.NameAndTypeDeclaration(this.CreateMissingNameDeclaration(),colon,type)):(name=this.ParseExtendedNameDeclaration(),name!=null&&this.PeekToken().Kind===Kusto.Language.Syntax.SyntaxKind.ColonToken)?(colon1=this.ParseToken(),type1=this.ParseParamType()||this.ParseInvalidParamType()||Kusto.Language.Parsing.QueryParser.CreateMissingType(),new Kusto.Language.Syntax.NameAndTypeDeclaration(name,colon1,type1)):name},ScanSchemaTypeStart:function(offset){offset===void 0&&(offset=0);var len=this.ScanName(offset);return len>0&&this.PeekToken$1((offset+len|0)+1|0).Kind===Kusto.Language.Syntax.SyntaxKind.ColonToken&&this.PeekToken$1((offset+len|0)+2|0).Kind===Kusto.Language.Syntax.SyntaxKind.OpenParenToken},ParseSchemaType:function(){if(this.PeekToken().Kind===Kusto.Language.Syntax.SyntaxKind.OpenParenToken)if(this.PeekToken$1(1).Kind===Kusto.Language.Syntax.SyntaxKind.AsteriskToken){var open=this.ParseToken(),asterisk=new Kusto.Language.Syntax.StarExpression(this.ParseToken()),close=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken);return new Kusto.Language.Syntax.SchemaTypeExpression(open,new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)).ctor)([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression))(asterisk)]),close)}else return this.ParseSchemaMultipartType();return null},ParseSchemaMultipartType:function(){if(this.PeekToken().Kind===Kusto.Language.Syntax.SyntaxKind.OpenParenToken){var open=this.ParseToken(),list=this.ParseCommaList(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.QueryParser.FnParseNameAndTypeDeclarationExpression,Kusto.Language.Parsing.QueryParser.CreateMissingNameAndTypeDeclarationExpression,Kusto.Language.Parsing.QueryParser.FnScanCommonListEnd,!1,!0),close=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken);return new Kusto.Language.Syntax.SchemaTypeExpression(open,list,close)}return null},ParseRowSchema:function(){if(this.PeekToken().Kind===Kusto.Language.Syntax.SyntaxKind.OpenParenToken){var open=this.ParseToken(),leadingComma=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.CommaToken),list=this.ParseCommaList(Kusto.Language.Syntax.NameAndTypeDeclaration,Kusto.Language.Parsing.QueryParser.FnParseNameAndTypeDeclaration,Kusto.Language.Parsing.QueryParser.CreateMissingNameAndTypeDeclaration,Kusto.Language.Parsing.QueryParser.FnScanCommonListEnd,!1,!0),close=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken);return new Kusto.Language.Syntax.RowSchema(open,leadingComma,list,close)}return null},ParseEvaluateRowSchema:function(){if(this.PeekToken().Kind===Kusto.Language.Syntax.SyntaxKind.OpenParenToken){var open=this.ParseToken(),leadingComma=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.CommaToken),asteriskToken=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.AsteriskToken),asteriskTokenComma=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.CommaToken),list=this.ParseCommaList(Kusto.Language.Syntax.NameAndTypeDeclaration,Kusto.Language.Parsing.QueryParser.FnParseNameAndTypeDeclaration,Kusto.Language.Parsing.QueryParser.CreateMissingNameAndTypeDeclaration,Kusto.Language.Parsing.QueryParser.FnScanCommonListEnd,!1,!0),close=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken);return new Kusto.Language.Syntax.EvaluateRowSchema(open,leadingComma,asteriskToken,asteriskTokenComma,list,close)}return null},ParsePrimaryExpression:function(){switch(this.PeekToken().Kind){case Kusto.Language.Syntax.SyntaxKind.LongLiteralToken:case Kusto.Language.Syntax.SyntaxKind.RealLiteralToken:case Kusto.Language.Syntax.SyntaxKind.BooleanLiteralToken:case Kusto.Language.Syntax.SyntaxKind.IntLiteralToken:case Kusto.Language.Syntax.SyntaxKind.DecimalLiteralToken:case Kusto.Language.Syntax.SyntaxKind.TimespanLiteralToken:case Kusto.Language.Syntax.SyntaxKind.DateTimeLiteralToken:case Kusto.Language.Syntax.SyntaxKind.GuidLiteralToken:case Kusto.Language.Syntax.SyntaxKind.RawGuidLiteralToken:case Kusto.Language.Syntax.SyntaxKind.StringLiteralToken:case Kusto.Language.Syntax.SyntaxKind.DynamicKeyword:return this.ParseLiteral();case Kusto.Language.Syntax.SyntaxKind.DataTableKeyword:return this.ParseDataTableExpression();case Kusto.Language.Syntax.SyntaxKind.ContextualDataTableKeyword:return this.ParseContextualDataTableExpression();case Kusto.Language.Syntax.SyntaxKind.ExternalDataKeyword:case Kusto.Language.Syntax.SyntaxKind.External_DataKeyword:return this.ParseExternalDataExpression();case Kusto.Language.Syntax.SyntaxKind.MaterializedViewCombineKeyword:return this.ParseMaterializedViewCombineExpression();case Kusto.Language.Syntax.SyntaxKind.OpenParenToken:return this.ParseParenthesizedExpression();case Kusto.Language.Syntax.SyntaxKind.ToScalarKeyword:return this.ParseToScalarExpression();default:return this.ScanTypeOfLiteral()?this.ParseTypeOfLiteral():this.ScanFunctionCallStart()?this.ParseFunctionCallExpression():this.ParsePrimaryPathSelector()||this.ParseInvalidKeywordAsNameReference()}},ParseDataTableExpression:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.DataTableKeyword);if(keyword!=null){var parameters=this.ParseQueryOperatorParameterList(Kusto.Language.Parsing.QueryParser.s_dataTableParameters),schema=this.ParseRowSchema()||Kusto.Language.Parsing.QueryParser.CreateMissingRowSchema(),open=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.OpenBracketToken),leadingComma=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.CommaToken),values=this.ParseCommaList(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.QueryParser.FnParseLiteral,Kusto.Language.Parsing.QueryParser.CreateMissingValue,Kusto.Language.Parsing.QueryParser.FnScanCommonListEnd,!1,!0),close=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseBracketToken);return new Kusto.Language.Syntax.DataTableExpression(keyword,parameters,schema,open,leadingComma,values,close)}return null},ParseContextualDataTableExpression:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.ContextualDataTableKeyword),id,schema;return keyword!=null?(id=this.ParseLiteral()||this.ParseUnnamedExpression()||this.CreateMissingExpression(),schema=this.ParseRowSchema()||Kusto.Language.Parsing.QueryParser.CreateMissingRowSchema(),new Kusto.Language.Syntax.ContextualDataTableExpression(keyword,id,schema)):null},ParseExternalDataExpression:function(){switch(this.PeekToken().Kind){case Kusto.Language.Syntax.SyntaxKind.ExternalDataKeyword:case Kusto.Language.Syntax.SyntaxKind.External_DataKeyword:var keyword=this.ParseToken(),parameters=this.ParseQueryOperatorParameterList(Kusto.Language.Parsing.QueryParser.s_dataTableParameters),schema=this.ParseRowSchema()||Kusto.Language.Parsing.QueryParser.CreateMissingRowSchema(),open=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.OpenBracketToken),values=this.ParseCommaList(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.QueryParser.FnParseLiteral,Kusto.Language.Parsing.QueryParser.CreateMissingValue,Kusto.Language.Parsing.QueryParser.FnScanCommonListEnd,!1,!0),close=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseBracketToken),clause=this.ParseExternalDataWithClause();return new Kusto.Language.Syntax.ExternalDataExpression(keyword,parameters,schema,open,values,close,clause);default:return null}},ParseExternalDataPropertyValue:function(){switch(this.PeekToken().Kind){case Kusto.Language.Syntax.SyntaxKind.StringLiteralToken:case Kusto.Language.Syntax.SyntaxKind.LongLiteralToken:case Kusto.Language.Syntax.SyntaxKind.RealLiteralToken:case Kusto.Language.Syntax.SyntaxKind.BooleanLiteralToken:case Kusto.Language.Syntax.SyntaxKind.DateTimeLiteralToken:case Kusto.Language.Syntax.SyntaxKind.TypeOfLiteralExpression:return this.ParseLiteral();case Kusto.Language.Syntax.SyntaxKind.RawGuidLiteralToken:case Kusto.Language.Syntax.SyntaxKind.GuidLiteralToken:return new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.GuidLiteralExpression,this.ParseToken());default:return this.ParseRenameNameDeclaration()}},ParseExternalDataProperty:function(){var name=this.ParseRenameNameDeclaration(),equal,value;return name!=null?(equal=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.EqualToken),value=this.ParseExternalDataPropertyValue()||Kusto.Language.Parsing.QueryParser.CreateMissingValue(),new Kusto.Language.Syntax.NamedParameter(name,equal,value)):null},ParseExternalDataWithClause:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.WithKeyword);if(keyword!=null){var open=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),properties=this.ParseCommaList(Kusto.Language.Syntax.NamedParameter,Kusto.Language.Parsing.QueryParser.FnParseExternalDataProperty,Kusto.Language.Parsing.QueryParser.CreateMissingNamedParameter,Kusto.Language.Parsing.QueryParser.FnScanCommonListEnd),close=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken);return new Kusto.Language.Syntax.ExternalDataWithClause(keyword,open,properties,close)}return null},ParseRequiredMaterializedViewNameClause:function(){return new Kusto.Language.Syntax.MaterializedViewCombineNameClause(this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),this.ParseExpression()||this.CreateMissingExpression(),this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken))},ParseRequiredMaterializedViewCombineClause:function(keywordName){var keyword=this.ParseToken$5(keywordName);return keyword!=null?Bridge.referenceEquals(keywordName,"aggregations")?new Kusto.Language.Syntax.MaterializedViewCombineClause(keyword,this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),this.ParseSummarizeOperator()||this.CreateMissingExpression(),this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken)):new Kusto.Language.Syntax.MaterializedViewCombineClause(keyword,this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),this.ParseExpression()||this.CreateMissingExpression(),this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken)):Kusto.Language.Parsing.QueryParser.CreateMissingMaterializedViewCombineClause(keywordName)},ParseMaterializedViewCombineExpression:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.MaterializedViewCombineKeyword);if(keyword!=null){var nameClause=this.ParseRequiredMaterializedViewNameClause(),baseClause=this.ParseRequiredMaterializedViewCombineClause("base"),deltaClause=this.ParseRequiredMaterializedViewCombineClause("delta"),aggregationsClause=this.ParseRequiredMaterializedViewCombineClause("aggregations");return new Kusto.Language.Syntax.MaterializedViewCombineExpression(keyword,nameClause,baseClause,deltaClause,aggregationsClause)}return null},ParsePrimaryPathSelector:function(){var selector=this.ParsePathElementSelector(),dataScope;return selector!=null&&(dataScope=this.ParseDataScopeClause(),dataScope!=null)?new Kusto.Language.Syntax.DataScopeExpression(selector,dataScope):selector},ParseDataScopeClause:function(){if(this.PeekToken().Kind===Kusto.Language.Syntax.SyntaxKind.DataScopeKeyword){var keyword=this.ParseToken(),equal=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.EqualToken),value=this.ParseRequiredToken$1(Kusto.Language.KustoFacts.DataScopeValues);return new Kusto.Language.Syntax.DataScopeClause(keyword,equal,value)}return null},ParsePathElementSelector:function(){return this.PeekToken().Kind===Kusto.Language.Syntax.SyntaxKind.OpenBracketToken?this.ParseBracketedPathElementSelector():this.ParseBarePathElementSelector()},ParsePathElementSelectorOrFunctionCall:function(){return this.ScanFunctionCallStart()?this.ParseFunctionCallExpression():this.ParsePathElementSelector()},ParseBarePathElementSelector:function(){var token=this.PeekToken();return token.Kind===Kusto.Language.Syntax.SyntaxKind.AtToken?new Kusto.Language.Syntax.AtExpression(this.ParseToken()):Kusto.Language.Parsing.QueryParser.IsSpecialKeywordAsIdentifier(token)?new Kusto.Language.Syntax.NameReference.$ctor1(new Kusto.Language.Syntax.TokenName(this.ParseToken())):this.ParseNameReference()},ParseRootBracketedPathElementSelector:function(){return this.PeekToken().Kind===Kusto.Language.Syntax.SyntaxKind.OpenBracketToken?this.ParseBracketedWildcardedNameReference()||this.ParseBracketedNameReference():null},ParseBracketedPathElementSelector:function(){return this.PeekToken().Kind===Kusto.Language.Syntax.SyntaxKind.OpenBracketToken?this.ParseBracketedWildcardedNameReference()||this.ParseBracketedNameReference()||this.ParseBracketedExpression():null},ParseBracketedExpression:function(){if(this.PeekToken().Kind===Kusto.Language.Syntax.SyntaxKind.OpenBracketToken){var open=this.ParseToken(),expr=this.ParseUnnamedExpression()||this.CreateMissingNameReference(),close=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseBracketToken);return new Kusto.Language.Syntax.BracketedExpression(open,expr,close)}return null},ParseParenthesizedExpression:function(){if(this.PeekToken().Kind===Kusto.Language.Syntax.SyntaxKind.OpenParenToken){var open=this.ParseToken(),expr=this.ParseExpression()||this.CreateMissingExpression(),close=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken);return new Kusto.Language.Syntax.ParenthesizedExpression(open,expr,close)}return null},ScanRenameName:function(offset){offset===void 0&&(offset=0);var tok=this.PeekToken$1(offset);switch(tok.Kind){case Kusto.Language.Syntax.SyntaxKind.IdentifierToken:return 1;case Kusto.Language.Syntax.SyntaxKind.OpenBracketToken:return this.ScanBracketedName(offset);case Kusto.Language.Syntax.SyntaxKind.OpenBraceToken:return this.ScanIdentifierOrKeywordAsIdentifier(offset+1|0)&&this.PeekToken$1(offset+2|0).Kind===Kusto.Language.Syntax.SyntaxKind.CloseBraceToken?3:-1;default:return this.ScanExtendedKeywordAsIdentifier(offset)?1:-1}},ScanRenameList:function(offset){var start,len;if(offset===void 0&&(offset=0),this.PeekToken$1(offset).Kind===Kusto.Language.Syntax.SyntaxKind.OpenParenToken){for(start=offset,offset=offset+1|0;!this.ScanCommonListEnd(offset);)if(len=this.ScanRenameName(offset),len>0)if(offset=offset+len|0,this.PeekToken$1(offset).Kind===Kusto.Language.Syntax.SyntaxKind.CommaToken){offset=offset+1|0;continue}else break;else return-1;if(this.PeekToken$1(offset).Kind===Kusto.Language.Syntax.SyntaxKind.CloseParenToken)return offset=offset+1|0,offset-start|0}return-1},ParseRenameName:function(){switch(this.PeekToken().Kind){case Kusto.Language.Syntax.SyntaxKind.OpenBracketToken:return this.ParseBracketedName();case Kusto.Language.Syntax.SyntaxKind.OpenBraceToken:return this.ParseClientParameterName();default:return this.ParseIdentifierName()||this.ParseExtendedKeyordAsIdentifierName()}},ParseRenameNameDeclaration:function(){var name=this.ParseRenameName();return name!=null?new Kusto.Language.Syntax.NameDeclaration.ctor(name):null},ScanDashedName:function(){return Kusto.Language.Parsing.QueryParser.ScanDashedName(this._source,this._pos)},ParseDashedName:function(){var len=this.ScanDashedName(),token;return len>0&&(token=this.ParseToken$4(len))!=null?new Kusto.Language.Syntax.TokenName(token):null},ParseNamedExpression:function(){var nameLen,dashNameLen,nameListLen;if((nameLen=Bridge.hasValue(this.ScanRenameName())?this.ScanRenameName():null)!=null&&nameLen>0&&this.PeekToken$1(nameLen).Kind===Kusto.Language.Syntax.SyntaxKind.EqualToken){var name=this.ParseRenameNameDeclaration(),equal=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.EqualToken),expr=this.ParseUnnamedExpression()||this.CreateMissingExpression();return new Kusto.Language.Syntax.SimpleNamedExpression(name,equal,expr)}else if((dashNameLen=Bridge.hasValue(this.ScanDashedName())?this.ScanDashedName():null)!=null&&dashNameLen>0&&this.PeekToken$1(dashNameLen).Kind===Kusto.Language.Syntax.SyntaxKind.EqualToken){var name1=this.ParseDashedName(),nameDecl=new Kusto.Language.Syntax.NameDeclaration.ctor(name1,System.Array.init([Kusto.Language.DiagnosticFacts.GetNameRequiresBrackets(name1.Name.Text)],Kusto.Language.Diagnostic)),equal1=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.EqualToken),expr1=this.ParseUnnamedExpression()||this.CreateMissingExpression();return new Kusto.Language.Syntax.SimpleNamedExpression(nameDecl,equal1,expr1)}else if((nameListLen=Bridge.hasValue(this.ScanRenameList())?this.ScanRenameList():null)!=null&&nameListLen>0&&this.PeekToken$1(nameListLen).Kind===Kusto.Language.Syntax.SyntaxKind.EqualToken){var open=this.ParseToken(),list=this.ParseCommaList(Kusto.Language.Syntax.NameDeclaration,Kusto.Language.Parsing.QueryParser.FnParseRenameNameDeclaration,Bridge.fn.cacheBind(this,this.CreateMissingNameDeclaration),Kusto.Language.Parsing.QueryParser.FnScanCommonListEnd,!0,!1),close=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),equal2=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.EqualToken),expr2=this.ParseUnnamedExpression()||this.CreateMissingExpression();return new Kusto.Language.Syntax.CompoundNamedExpression(new Kusto.Language.Syntax.RenameList(open,list,close),equal2,expr2)}else return this.ParseUnnamedExpression()},ParseArgument:function(){return this.PeekToken().Kind===Kusto.Language.Syntax.SyntaxKind.AsteriskToken&&(this.PeekToken$1(1).Kind===Kusto.Language.Syntax.SyntaxKind.CloseParenToken||this.PeekToken$1(1).Kind===Kusto.Language.Syntax.SyntaxKind.CommaToken)?new Kusto.Language.Syntax.StarExpression(this.ParseToken()):this.ParseNamedExpression()},ParseArgumentList:function(){if(this.PeekToken().Kind===Kusto.Language.Syntax.SyntaxKind.OpenParenToken){var open=this.ParseToken(),args=this.ParseCommaList(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.QueryParser.FnParseArgument,Bridge.fn.cacheBind(this,this.CreateMissingExpression),Kusto.Language.Parsing.QueryParser.FnScanCommonListEnd),close=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken);return new Kusto.Language.Syntax.ExpressionList(open,args,close)}return null},ScanFunctionCallName:function(offset){var len,i;if(offset===void 0&&(offset=0),len=this.ScanName(offset),len>0)return len;for(i=0;i<System.Array.getCount(Kusto.Language.Parsing.QueryParser.s_functionsWithKeywordNames,System.String);i=i+1|0)if(len=this.ScanToken$1(System.Array.getItem(Kusto.Language.Parsing.QueryParser.s_functionsWithKeywordNames,i,System.String),offset),len>0)return len;return-1},ScanFunctionCallStart:function(offset){offset===void 0&&(offset=0);var len=this.ScanFunctionCallName(offset);return len>0&&this.PeekToken$1(offset+len|0).Kind===Kusto.Language.Syntax.SyntaxKind.OpenParenToken?!0:!1},ParseFunctionCallName:function(){var len=this.ScanName(),i,token;if(len>0)return this.ParseNameReference();for(i=0;i<System.Array.getCount(Kusto.Language.Parsing.QueryParser.s_functionsWithKeywordNames,System.String);i=i+1|0)if(token=this.ParseToken$5(System.Array.getItem(Kusto.Language.Parsing.QueryParser.s_functionsWithKeywordNames,i,System.String)),token!=null)return new Kusto.Language.Syntax.NameReference.$ctor1(new Kusto.Language.Syntax.TokenName(token));return null},ParseFunctionCallExpression:function(){if(this.ScanFunctionCallStart()){var name=this.ParseFunctionCallName(),$arguments=this.ParseArgumentList();return new Kusto.Language.Syntax.FunctionCallExpression(name,$arguments)}return null},ParseRequiredFunctionCallExpression:function(){var name,$arguments,name1,$arguments1;return this.ScanFunctionCallStart()?(name=this.ParseFunctionCallName(),$arguments=this.ParseArgumentList(),new Kusto.Language.Syntax.FunctionCallExpression(name,$arguments)):this.ScanFunctionCallName()>0?(name1=this.ParseFunctionCallName(),$arguments1=Kusto.Language.Parsing.QueryParser.CreateMissingArgumentList(),new Kusto.Language.Syntax.FunctionCallExpression(name1,$arguments1)):Kusto.Language.Parsing.QueryParser.CreateMissingFunctionCallExpression()},ParseDotCompositeFunctionCall:function(){var expr=this.ParseFunctionCallExpression(),dot,call;if(expr!=null)while(this.PeekToken().Kind===Kusto.Language.Syntax.SyntaxKind.DotToken&&this.ScanFunctionCallStart(1))dot=this.ParseToken(),call=this.ParseFunctionCallExpression(),expr=new Kusto.Language.Syntax.PathExpression(expr,dot,call);return expr},ParseToTableExpression:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.ToTableKeyword);if(keyword!=null){var kind=this.ParseQueryOperatorParameter$1(Kusto.Language.QueryOperatorParameters.ToTableKindParameter),open=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),expr=this.ParseExpression()||this.CreateMissingExpression(),close=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken);return new Kusto.Language.Syntax.ToTableExpression(keyword,kind,open,expr,close)}return null},ParseToScalarExpression:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.ToScalarKeyword);if(keyword!=null){var kind=this.ParseQueryOperatorParameter$1(Kusto.Language.QueryOperatorParameters.ToScalarKindParameter),open=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),expr=this.ParseExpression()||this.CreateMissingExpression(),close=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken);return new Kusto.Language.Syntax.ToScalarExpression(keyword,kind,open,expr,close)}return null},ParseFunctionCallOrPath:function(){var expr,kind,dot,selector;if(this.PeekToken().Kind===Kusto.Language.Syntax.SyntaxKind.ToTableKeyword)return this.ParseToTableExpression();for(expr=this.ParsePrimaryExpression();expr!=null;)if(kind=this.PeekToken().Kind,kind===Kusto.Language.Syntax.SyntaxKind.DotToken)dot=this.ParseToken(),selector=this.ParsePathElementSelectorOrFunctionCall()||this.CreateMissingNameReference(),expr=new Kusto.Language.Syntax.PathExpression(expr,dot,selector);else if(kind===Kusto.Language.Syntax.SyntaxKind.OpenBracketToken)expr=new Kusto.Language.Syntax.ElementExpression(expr,this.ParseBracketedExpression());else break;return expr},ParseUnaryPlusOrMinusExpression:function(){switch(this.PeekToken().Kind){case Kusto.Language.Syntax.SyntaxKind.MinusToken:return new Kusto.Language.Syntax.PrefixUnaryExpression(Kusto.Language.Syntax.SyntaxKind.UnaryMinusExpression,this.ParseToken(),this.ParseFunctionCallOrPath()||this.CreateMissingExpression());case Kusto.Language.Syntax.SyntaxKind.PlusToken:return new Kusto.Language.Syntax.PrefixUnaryExpression(Kusto.Language.Syntax.SyntaxKind.UnaryPlusExpression,this.ParseToken(),this.ParseFunctionCallOrPath()||this.CreateMissingExpression());default:return this.ParseFunctionCallOrPath()}},ParseInvocationExpression:function(){return this.ParseUnaryPlusOrMinusExpression()},ParseStringOperation:function(){var starOpKind=new Kusto.Language.Syntax.SyntaxKind,expr,opKind;return this.PeekToken().Kind===Kusto.Language.Syntax.SyntaxKind.AsteriskToken&&(starOpKind=Bridge.is(Kusto.Language.Parsing.QueryParser.GetStringOperationKind(this.PeekToken$1(1).Kind),System.Int16)?Kusto.Language.Parsing.QueryParser.GetStringOperationKind(this.PeekToken$1(1).Kind):null)!=null&&starOpKind!==Kusto.Language.Syntax.SyntaxKind.None?new Kusto.Language.Syntax.BinaryExpression(starOpKind,new Kusto.Language.Syntax.StarExpression(this.ParseToken()),this.ParseToken(),this.ParseUnaryPlusOrMinusExpression()||this.CreateMissingExpression()):(expr=this.ParseUnaryPlusOrMinusExpression(),opKind=new Kusto.Language.Syntax.SyntaxKind,expr!=null&&(opKind=Bridge.is(Kusto.Language.Parsing.QueryParser.GetStringOperationKind(this.PeekToken().Kind),System.Int16)?Kusto.Language.Parsing.QueryParser.GetStringOperationKind(this.PeekToken().Kind):null)!=null&&opKind!==Kusto.Language.Syntax.SyntaxKind.None&&(expr=new Kusto.Language.Syntax.BinaryExpression(opKind,expr,this.ParseToken(),this.ParseUnaryPlusOrMinusExpression()||this.CreateMissingExpression())),expr)},ParseMultiplicativeExpression:function(){var expr=this.ParseStringOperation(),opKind;if(expr!=null)for(opKind=new Kusto.Language.Syntax.SyntaxKind;(opKind=Bridge.is(Kusto.Language.Parsing.QueryParser.GetMultiplicativeExpressionKind(this.PeekToken().Kind),System.Int16)?Kusto.Language.Parsing.QueryParser.GetMultiplicativeExpressionKind(this.PeekToken().Kind):null)!=null&&opKind!==Kusto.Language.Syntax.SyntaxKind.None;)expr=new Kusto.Language.Syntax.BinaryExpression(opKind,expr,this.ParseToken(),this.ParseStringOperation()||this.CreateMissingExpression());return expr},ParseAdditiveExpression:function(){var expr=this.ParseMultiplicativeExpression(),opKind;if(expr!=null)for(opKind=new Kusto.Language.Syntax.SyntaxKind;(opKind=Bridge.is(Kusto.Language.Parsing.QueryParser.GetAdditiveExpressionKind(this.PeekToken().Kind),System.Int16)?Kusto.Language.Parsing.QueryParser.GetAdditiveExpressionKind(this.PeekToken().Kind):null)!=null&&opKind!==Kusto.Language.Syntax.SyntaxKind.None;)expr=new Kusto.Language.Syntax.BinaryExpression(opKind,expr,this.ParseToken(),this.ParseMultiplicativeExpression()||this.CreateMissingExpression());return expr},ParseRelationalExpresion:function(){var expr=this.ParseAdditiveExpression(),opKind=new Kusto.Language.Syntax.SyntaxKind;return expr!=null&&(opKind=Bridge.is(Kusto.Language.Parsing.QueryParser.GetRelationalExpressionKind(this.PeekToken().Kind),System.Int16)?Kusto.Language.Parsing.QueryParser.GetRelationalExpressionKind(this.PeekToken().Kind):null)!=null&&opKind!==Kusto.Language.Syntax.SyntaxKind.None&&(expr=new Kusto.Language.Syntax.BinaryExpression(opKind,expr,this.ParseToken(),this.ParseAdditiveExpression()||this.CreateMissingExpression())),expr},ParseEqualityExpression:function(){if(this.PeekToken().Kind===Kusto.Language.Syntax.SyntaxKind.AsteriskToken&&this.PeekToken$1(1).Kind===Kusto.Language.Syntax.SyntaxKind.EqualEqualToken)return new Kusto.Language.Syntax.BinaryExpression(Kusto.Language.Syntax.SyntaxKind.EqualExpression,new Kusto.Language.Syntax.StarExpression(this.ParseToken()),this.ParseToken(),this.ParseRelationalExpresion()||this.CreateMissingExpression());var expr=this.ParseRelationalExpresion();if(expr!=null)switch(this.PeekToken().Kind){case Kusto.Language.Syntax.SyntaxKind.EqualEqualToken:expr=new Kusto.Language.Syntax.BinaryExpression(Kusto.Language.Syntax.SyntaxKind.EqualExpression,expr,this.ParseToken(),this.ParseRelationalExpresion()||this.CreateMissingExpression());break;case Kusto.Language.Syntax.SyntaxKind.BangEqualToken:expr=new Kusto.Language.Syntax.BinaryExpression(Kusto.Language.Syntax.SyntaxKind.NotEqualExpression,expr,this.ParseToken(),this.ParseRelationalExpresion()||Kusto.Language.Parsing.QueryParser.CreateMissingTokenLiteral());break;case Kusto.Language.Syntax.SyntaxKind.LessThanGreaterThanToken:expr=new Kusto.Language.Syntax.BinaryExpression(Kusto.Language.Syntax.SyntaxKind.NotEqualExpression,expr,this.ParseToken(),this.ParseRelationalExpresion()||Kusto.Language.Parsing.QueryParser.CreateMissingTokenLiteral());break;case Kusto.Language.Syntax.SyntaxKind.InKeyword:this.PeekToken$1(1).Kind!==Kusto.Language.Syntax.SyntaxKind.RangeKeyword&&(expr=new Kusto.Language.Syntax.InExpression(Kusto.Language.Syntax.SyntaxKind.InExpression,expr,this.ParseToken(),this.ParseRequiredInOperatorExpressionList()));break;case Kusto.Language.Syntax.SyntaxKind.InCsKeyword:expr=new Kusto.Language.Syntax.InExpression(Kusto.Language.Syntax.SyntaxKind.InCsExpression,expr,this.ParseToken(),this.ParseRequiredInOperatorExpressionList());break;case Kusto.Language.Syntax.SyntaxKind.NotInKeyword:expr=new Kusto.Language.Syntax.InExpression(Kusto.Language.Syntax.SyntaxKind.NotInExpression,expr,this.ParseToken(),this.ParseRequiredInOperatorExpressionList());break;case Kusto.Language.Syntax.SyntaxKind.NotInCsKeyword:expr=new Kusto.Language.Syntax.InExpression(Kusto.Language.Syntax.SyntaxKind.NotInCsExpression,expr,this.ParseToken(),this.ParseRequiredInOperatorExpressionList());break;case Kusto.Language.Syntax.SyntaxKind.HasAnyKeyword:expr=new Kusto.Language.Syntax.HasAnyExpression(Kusto.Language.Syntax.SyntaxKind.HasAnyExpression,expr,this.ParseToken(),this.ParseRequiredInOperatorExpressionList());break;case Kusto.Language.Syntax.SyntaxKind.HasAllKeyword:expr=new Kusto.Language.Syntax.HasAllExpression(Kusto.Language.Syntax.SyntaxKind.HasAllExpression,expr,this.ParseToken(),this.ParseRequiredInOperatorExpressionList());break;case Kusto.Language.Syntax.SyntaxKind.BetweenKeyword:expr=new Kusto.Language.Syntax.BetweenExpression(Kusto.Language.Syntax.SyntaxKind.BetweenExpression,expr,this.ParseToken(),this.ParseRequiredExpressionCouple());break;case Kusto.Language.Syntax.SyntaxKind.NotBetweenKeyword:expr=new Kusto.Language.Syntax.BetweenExpression(Kusto.Language.Syntax.SyntaxKind.NotBetweenExpression,expr,this.ParseToken(),this.ParseRequiredExpressionCouple());break}return expr},ScanIsQueryExpression:function(){return this.ScanPossibleQueryOperator()?!0:this.ScanIsPipeBeforeEndOfExpression()?!0:!1},ScanIsPipeBeforeEndOfExpression:function(){for(var offset=0,parenDepth=0,token;;){token=this.PeekToken$1(offset);switch(token.Kind){case Kusto.Language.Syntax.SyntaxKind.None:case Kusto.Language.Syntax.SyntaxKind.SemicolonToken:return!1;case Kusto.Language.Syntax.SyntaxKind.CommaToken:if(parenDepth===0)return!1;break;case Kusto.Language.Syntax.SyntaxKind.CloseParenToken:if(parenDepth===0)return!1;parenDepth=parenDepth-1|0;break;case Kusto.Language.Syntax.SyntaxKind.OpenParenToken:parenDepth=parenDepth+1|0;break;case Kusto.Language.Syntax.SyntaxKind.BarToken:if(parenDepth===0)return!0;break}offset=offset+1|0}},ParseRequiredInOperatorExpressionList:function(){var openParen=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),exprList,query,closeParen;return this.ScanIsQueryExpression()?(query=this.ParseExpression(),exprList=new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)).ctor)([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression))(query)])):exprList=this.ParseCommaList(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.QueryParser.FnParseUnnamedExpression,Bridge.fn.cacheBind(this,this.CreateMissingExpression),Kusto.Language.Parsing.QueryParser.FnScanCommonListEnd,!0,!1),closeParen=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),new Kusto.Language.Syntax.ExpressionList(openParen,exprList,closeParen)},ParseRequiredExpressionCouple:function(){return new Kusto.Language.Syntax.ExpressionCouple(this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),this.ParseUnnamedExpression()||this.CreateMissingExpression(),this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.DotDotToken),this.ParseUnnamedExpression()||this.CreateMissingExpression(),this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken))},ParseLogicalAndExpression:function(){var expr=this.ParseEqualityExpression();if(expr!=null)while(this.PeekToken().Kind===Kusto.Language.Syntax.SyntaxKind.AndKeyword)expr=new Kusto.Language.Syntax.BinaryExpression(Kusto.Language.Syntax.SyntaxKind.AndExpression,expr,this.ParseToken(),this.ParseEqualityExpression()||this.CreateMissingExpression());return expr},ParseLogicalOrExpression:function(){var expr=this.ParseLogicalAndExpression();if(expr!=null)while(this.PeekToken().Kind===Kusto.Language.Syntax.SyntaxKind.OrKeyword)expr=new Kusto.Language.Syntax.BinaryExpression(Kusto.Language.Syntax.SyntaxKind.OrExpression,expr,this.ParseToken(),this.ParseLogicalAndExpression()||this.CreateMissingExpression());return expr},ParseUnnamedExpression:function(){switch(this.PeekToken$1(1).Kind){case Kusto.Language.Syntax.SyntaxKind.CommaToken:case Kusto.Language.Syntax.SyntaxKind.CloseParenToken:case Kusto.Language.Syntax.SyntaxKind.CloseBraceToken:case Kusto.Language.Syntax.SyntaxKind.CloseBracketToken:case Kusto.Language.Syntax.SyntaxKind.BarToken:switch(this.PeekToken().Kind){case Kusto.Language.Syntax.SyntaxKind.IdentifierToken:case Kusto.Language.Syntax.SyntaxKind.BooleanLiteralToken:case Kusto.Language.Syntax.SyntaxKind.LongLiteralToken:case Kusto.Language.Syntax.SyntaxKind.RealLiteralToken:case Kusto.Language.Syntax.SyntaxKind.DecimalLiteralToken:case Kusto.Language.Syntax.SyntaxKind.DateTimeLiteralToken:case Kusto.Language.Syntax.SyntaxKind.TimespanLiteralToken:case Kusto.Language.Syntax.SyntaxKind.GuidLiteralToken:case Kusto.Language.Syntax.SyntaxKind.RawGuidLiteralToken:case Kusto.Language.Syntax.SyntaxKind.IntLiteralToken:return this.ParsePrimaryExpression()}break}if(this._depth>Kusto.Language.Parsing.QueryParser.MaxDepth)return this.SafeParseUnnamedExpression();else{this._depth=this._depth+1|0;var result=this.ParseLogicalOrExpression();return this._depth=this._depth-1|0,result}},SafeParseUnnamedExpression:function(){var len,result;return this._safeParser==null&&(this._safeOutput=new(System.Collections.Generic.List$1(System.Object).ctor),this._safeParser=new(Kusto.Language.Parsing.StackSafeParser$1(Kusto.Language.Parsing.LexicalToken))(this._source,this._safeOutput),this._safeGrammar=Kusto.Language.Parsing.QueryGrammar.From(Kusto.Language.GlobalState.Default).Expression),len=this._safeParser.Parse(this._safeGrammar,this._pos,0),len>=0?(this._pos=this._pos+len|0,result=Bridge.cast(this._safeOutput.getItem(0),Kusto.Language.Syntax.Expression),this._safeOutput.clear(),result):null},ParseAnyQueryOperatorParameterValue:function(){var expr=this.ParseLiteral();return expr==null&&(expr=this.ParseIdentifierOrKeywordTokenLiteral()),expr==null&&(expr=this.ParseNameReference()),expr},ParseAnyQueryOperatorParameterForcedRealValue:function(){var expr=this.ParseForcedRealLiteral();return expr==null&&(expr=this.ParseLiteral()),expr==null&&(expr=this.ParseIdentifierOrKeywordTokenLiteral()),expr==null&&(expr=this.ParseNameReference()),expr},ParseTokenLiteral:function(texts){var token=this.ParseToken$3(texts);return token!=null?new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.TokenLiteralExpression,token):null},ParseQueryOperatorParameterValue:function(queryParameter,fnEndNameList){fnEndNameList===void 0&&(fnEndNameList=null);switch(queryParameter.ValueKind){case Kusto.Language.QueryOperatorParameterValueKind.Any:return this.ParseAnyQueryOperatorParameterValue();case Kusto.Language.QueryOperatorParameterValueKind.StringLiteral:return this.ParseAnyQueryOperatorParameterValue()||Kusto.Language.Parsing.QueryParser.CreateMissingStringLiteral();case Kusto.Language.QueryOperatorParameterValueKind.BoolLiteral:return this.ParseAnyQueryOperatorParameterValue()||Kusto.Language.Parsing.QueryParser.CreateMissingBoolLiteral();case Kusto.Language.QueryOperatorParameterValueKind.IntegerLiteral:case Kusto.Language.QueryOperatorParameterValueKind.NumericLiteral:case Kusto.Language.QueryOperatorParameterValueKind.SummableLiteral:return this.ParseAnyQueryOperatorParameterValue()||Kusto.Language.Parsing.QueryParser.CreateMissingLongLiteral();case Kusto.Language.QueryOperatorParameterValueKind.ForcedRealLiteral:return this.ParseAnyQueryOperatorParameterForcedRealValue()||Kusto.Language.Parsing.QueryParser.CreateMissingRealLiteral();case Kusto.Language.QueryOperatorParameterValueKind.ScalarLiteral:return this.ParseAnyQueryOperatorParameterValue()||Kusto.Language.Parsing.QueryParser.CreateMissingValue();case Kusto.Language.QueryOperatorParameterValueKind.String:return this.ParseFunctionCallOrPath()||Kusto.Language.Parsing.QueryParser.CreateMissingValue();case Kusto.Language.QueryOperatorParameterValueKind.Word:case Kusto.Language.QueryOperatorParameterValueKind.WordOrNumber:return System.Array.getCount(queryParameter.Values,System.String)>0?this.ParseTokenLiteral(queryParameter.Values)||this.ParseAnyQueryOperatorParameterValue()||Kusto.Language.Parsing.QueryParser.CreateMissingTokenLiteral(queryParameter.Values):this.ParseAnyQueryOperatorParameterValue()||Kusto.Language.Parsing.QueryParser.CreateMissingValue();case Kusto.Language.QueryOperatorParameterValueKind.NameDeclaration:return this.ParseNameDeclaration()||this.ParseAnyQueryOperatorParameterValue()||this.CreateMissingNameDeclaration();case Kusto.Language.QueryOperatorParameterValueKind.Column:return this.ParseNameReference()||this.ParseAnyQueryOperatorParameterValue()||this.CreateMissingNameReference();case Kusto.Language.QueryOperatorParameterValueKind.ColumnList:return this.ParseNameReferenceList(fnEndNameList||Kusto.Language.Parsing.QueryParser.FnScanQueryOperatorParameterNameListEnd);default:return this.ParseAnyQueryOperatorParameterValue()||Kusto.Language.Parsing.QueryParser.CreateMissingValue()}},ScanQueryOperatorParameterNameListEnd:function(){return this.PeekToken().Kind===Kusto.Language.Syntax.SyntaxKind.CommaToken?this.ScanKnownQueryOperatorParameterName(!1,1)>0||this.ScanCommonListEnd(1):this.ScanKnownQueryOperatorParameterName(!0,0)>0||this.ScanCommonListEnd()},ParseQueryOperatorParameter$1:function(parameter,fnEndNameList){fnEndNameList===void 0&&(fnEndNameList=null);var len=this.ScanToken$1(parameter.Name);if(len>0)if(parameter.HasNoEquals)return new Kusto.Language.Syntax.NamedParameter(new Kusto.Language.Syntax.NameDeclaration.ctor(new Kusto.Language.Syntax.TokenName(this.ParseToken$5(parameter.Name))),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.EqualToken),this.ParseQueryOperatorParameterValue(parameter,fnEndNameList),Kusto.Language.Parsing.QueryParser.GetExpressionHint(parameter));else if(this.PeekToken$1(len).Kind===Kusto.Language.Syntax.SyntaxKind.EqualToken)return new Kusto.Language.Syntax.NamedParameter(new Kusto.Language.Syntax.NameDeclaration.ctor(new Kusto.Language.Syntax.TokenName(this.ParseToken$5(parameter.Name))),this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.EqualToken),this.ParseQueryOperatorParameterValue(parameter,fnEndNameList),Kusto.Language.Parsing.QueryParser.GetExpressionHint(parameter));return null},ParseQueryOperatorParameter:function(){var nameToken=this.ParseQueryOperatorParameterName(this._queryOperatorParameterNamesAllowed,this._queryOperatorParameterEqualsNeeded),value;if(nameToken!=null){var name=new Kusto.Language.Syntax.NameDeclaration.ctor(new Kusto.Language.Syntax.TokenName(nameToken)),equal=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.EqualToken),queryParameter={};return this._operatorSpecificNameToQueryOperatorParameterMap!=null&&this._operatorSpecificNameToQueryOperatorParameterMap.System$Collections$Generic$IReadOnlyDictionary$2$System$String$Kusto$Language$QueryOperatorParameter$tryGetValue(nameToken.Text,queryParameter)||Kusto.Language.Parsing.QueryParser.s_nameToDefaultQueryOperatorParameterMap.System$Collections$Generic$IReadOnlyDictionary$2$System$String$Kusto$Language$QueryOperatorParameter$tryGetValue(nameToken.Text,queryParameter)?(value=this.ParseQueryOperatorParameterValue(queryParameter.v),new Kusto.Language.Syntax.NamedParameter(name,equal,value,Kusto.Language.Parsing.QueryParser.GetExpressionHint(queryParameter.v))):new Kusto.Language.Syntax.NamedParameter(name,equal,this.ParseAnyQueryOperatorParameterValue()||Kusto.Language.Parsing.QueryParser.CreateMissingValue())}return null},TryGetSpecificQueryOperatorParameter:function(name,parameter){return this._operatorSpecificNameToQueryOperatorParameterMap!=null?this._operatorSpecificNameToQueryOperatorParameterMap.System$Collections$Generic$IReadOnlyDictionary$2$System$String$Kusto$Language$QueryOperatorParameter$tryGetValue(name,parameter):(parameter.v=null,!1)},IsSpecificQueryOperatorParameterName:function(name){var _discard1={};return this.TryGetSpecificQueryOperatorParameter(name,_discard1)},ScanSpecificQueryOperatorParameterName:function(equalsNeeded,offset){offset===void 0&&(offset=0);var lt=this.PeekToken$1(offset),parameter={};return(lt.Kind===Kusto.Language.Syntax.SyntaxKind.IdentifierToken||Kusto.Language.Syntax.SyntaxFacts.IsKeyword(lt.Kind))&&this.TryGetSpecificQueryOperatorParameter(lt.Text,parameter)?parameter.v.HasNoEquals||!equalsNeeded?!0:this.PeekToken$1(offset+1|0).Kind===Kusto.Language.Syntax.SyntaxKind.EqualToken:!1},ParseSpecificQueryOperatorParameterName:function(){return this.ScanSpecificQueryOperatorParameterName(!1,0)?this.ParseToken():null},IsKnownQueryOperatorParameterName:function(name){return Kusto.Language.Parsing.QueryParser.s_knownQueryOperaterParameterNames.contains(name)||this.IsSpecificQueryOperatorParameterName(name)},ScanKnownQueryOperatorParameterName:function(equalasNeeded,offset){var token,len,i;if(offset===void 0&&(offset=0),token=this.PeekToken$1(offset),len=-1,(token.Kind===Kusto.Language.Syntax.SyntaxKind.IdentifierToken||Kusto.Language.Syntax.SyntaxFacts.IsKeyword(token.Kind))&&this.IsKnownQueryOperatorParameterName(token.Text))len=1;else for(i=0;i<System.Array.getCount(Kusto.Language.Parsing.QueryParser.s_multiTokenQueryOperatorParameterNames,System.String);i=i+1|0)if(len=this.ScanToken$1(System.Array.getItem(Kusto.Language.Parsing.QueryParser.s_multiTokenQueryOperatorParameterNames,i,System.String)),len>0)break;return len>0&&equalasNeeded&&this.PeekToken$1(offset+len|0).Kind!==Kusto.Language.Syntax.SyntaxKind.EqualToken?-1:len},ParseKnownQueryOperatorParameterName:function(){var lt=this.PeekToken(),i,tok;if((lt.Kind===Kusto.Language.Syntax.SyntaxKind.IdentifierToken||Kusto.Language.Syntax.SyntaxFacts.IsKeyword(lt.Kind))&&this.IsKnownQueryOperatorParameterName(lt.Text))return this.ParseToken();else for(i=0;i<System.Array.getCount(Kusto.Language.Parsing.QueryParser.s_multiTokenQueryOperatorParameterNames,System.String);i=i+1|0)if(tok=this.ParseToken$5(System.Array.getItem(Kusto.Language.Parsing.QueryParser.s_multiTokenQueryOperatorParameterNames,i,System.String)),tok!=null)return tok;return null},ScanQueryOperatorParameterName:function(namesAllowed,equalsNeeded,offset){offset===void 0&&(offset=0);var len=-1;return(namesAllowed===Kusto.Language.Parsing.AllowedNameKind.DeclaredOnly||namesAllowed===Kusto.Language.Parsing.AllowedNameKind.DeclaredOrKnown)&&(len=this.ScanSpecificQueryOperatorParameterName(equalsNeeded,offset)?1:-1),len<0&&(namesAllowed===Kusto.Language.Parsing.AllowedNameKind.KnownOnly||namesAllowed===Kusto.Language.Parsing.AllowedNameKind.DeclaredOrKnown)&&(len=this.ScanKnownQueryOperatorParameterName(equalsNeeded,offset)),len},ParseQueryOperatorParameterName:function(namesAllowed,equalsNeeded){var len=this.ScanQueryOperatorParameterName(namesAllowed,equalsNeeded);if(len>0)switch(namesAllowed){case Kusto.Language.Parsing.AllowedNameKind.DeclaredOnly:return this.ParseSpecificQueryOperatorParameterName();case Kusto.Language.Parsing.AllowedNameKind.KnownOnly:return this.ParseKnownQueryOperatorParameterName();case Kusto.Language.Parsing.AllowedNameKind.DeclaredOrKnown:default:return this.ParseSpecificQueryOperatorParameterName()||this.ParseKnownQueryOperatorParameterName()}return null},ParseNameReferenceListName:function(){return this.ScanSpecificQueryOperatorParameterName(!0,0)?null:this.ParseExtendedNameReference()},ParseNameReferenceList:function(fnEndList){var names=this.ParseCommaList(Kusto.Language.Syntax.NameReference,Kusto.Language.Parsing.QueryParser.FnParseNameReferenceListName,this.FnCreateMissingNameReference,fnEndList,!0,!1);return new Kusto.Language.Syntax.NameReferenceList(names)},ParseQueryOperatorParameterList:function(nameToParameterMap,namesAllowed,equalsNeeded){var list;nameToParameterMap===void 0&&(nameToParameterMap=null);namesAllowed===void 0&&(namesAllowed=0);equalsNeeded===void 0&&(equalsNeeded=!1);var oldParameters=this._operatorSpecificNameToQueryOperatorParameterMap,oldNamesAllowed=this._queryOperatorParameterNamesAllowed,oldEqualsNeeded=this._queryOperatorParameterEqualsNeeded;return this._operatorSpecificNameToQueryOperatorParameterMap=nameToParameterMap,this._queryOperatorParameterNamesAllowed=namesAllowed,this._queryOperatorParameterEqualsNeeded=equalsNeeded,list=this.ParseList(Kusto.Language.Syntax.NamedParameter,Kusto.Language.Parsing.QueryParser.FnParseQueryOperatorParameter),this._operatorSpecificNameToQueryOperatorParameterMap=oldParameters,this._queryOperatorParameterNamesAllowed=oldNamesAllowed,this._queryOperatorParameterEqualsNeeded=oldEqualsNeeded,list},ParseQueryOperatorParameterCommaList:function(nameToParameterMap,fnScanEnd,namesAllowed){var oldParameters,oldNamesAllowed,list;return nameToParameterMap===void 0&&(nameToParameterMap=null),fnScanEnd===void 0&&(fnScanEnd=null),namesAllowed===void 0&&(namesAllowed=0),oldParameters=this._operatorSpecificNameToQueryOperatorParameterMap,oldNamesAllowed=this._queryOperatorParameterNamesAllowed,this._operatorSpecificNameToQueryOperatorParameterMap=nameToParameterMap,this._queryOperatorParameterNamesAllowed=namesAllowed,list=this.ParseCommaList(Kusto.Language.Syntax.NamedParameter,Kusto.Language.Parsing.QueryParser.FnParseQueryOperatorParameter,Kusto.Language.Parsing.QueryParser.CreateMissingNamedParameter,Kusto.Language.Parsing.QueryParser.FnScanCommonListEnd),this._operatorSpecificNameToQueryOperatorParameterMap=oldParameters,this._queryOperatorParameterNamesAllowed=oldNamesAllowed,list},ParseBracketedEntityNamePathElementSelector:function(){return this.ParseBracketedWildcardedNameReference()||this.ParseBracketedNameReference()},ParseEntityPathExpression:function(){var expr=this.ParsePathElementSelectorOrFunctionCall(),kind;if(expr!=null)for(;;)if(kind=this.PeekToken().Kind,kind===Kusto.Language.Syntax.SyntaxKind.DotToken)expr=new Kusto.Language.Syntax.PathExpression(expr,this.ParseToken(),this.ParsePathElementSelectorOrFunctionCall()||this.CreateMissingNameReference());else if(kind===Kusto.Language.Syntax.SyntaxKind.OpenBracketToken)expr=new Kusto.Language.Syntax.ElementExpression(expr,this.ParseBracketedPathElementSelector());else break;return expr},ScanQualifiedEntityStart:function(){return(Bridge.referenceEquals(this.PeekToken().Text,Kusto.Language.Functions.Database.Name)||Bridge.referenceEquals(this.PeekToken().Text,Kusto.Language.Functions.Cluster.Name))&&this.PeekToken$1(1).Kind===Kusto.Language.Syntax.SyntaxKind.OpenParenToken},ParseSimplePathExpression:function(){var expr=this.ParsePathElementSelector(),kind;if(expr!=null)for(;;)if(kind=this.PeekToken().Kind,kind===Kusto.Language.Syntax.SyntaxKind.DotToken)expr=new Kusto.Language.Syntax.PathExpression(expr,this.ParseToken(),this.ParsePathElementSelector()||this.CreateMissingNameReference());else if(kind===Kusto.Language.Syntax.SyntaxKind.OpenBracketToken)expr=new Kusto.Language.Syntax.ElementExpression(expr,this.ParseBracketedPathElementSelector());else break;return expr},ParseEntityReferenceExpression:function(){return this.ParseSimplePathExpression()},ParseWildcardedEntityExpression:function(){var expr,kind,dot;if(this.ScanWildcardedName()>0)return this.ParseWildcardedNameReference();else{if(expr=this.ParsePathElementSelectorOrFunctionCall(),expr!=null)for(;;)if(kind=this.PeekToken().Kind,kind===Kusto.Language.Syntax.SyntaxKind.DotToken)if(dot=this.ParseToken(),this.ScanWildcardedName()>0)return new Kusto.Language.Syntax.PathExpression(expr,dot,this.ParseWildcardedNameReference());else expr=new Kusto.Language.Syntax.PathExpression(expr,dot,this.ParsePathElementSelectorOrFunctionCall()||this.CreateMissingNameReference());else if(kind===Kusto.Language.Syntax.SyntaxKind.OpenBracketToken)expr=new Kusto.Language.Syntax.ElementExpression(expr,this.ParseBracketedPathElementSelector());else break;return expr}},ParseConsumeOperator:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.ConsumeKeyword),parameters;return keyword!=null?(parameters=this.ParseQueryOperatorParameterList(Kusto.Language.Parsing.QueryParser.s_consumeOperatorParameterMap),new Kusto.Language.Syntax.ConsumeOperator(keyword,parameters)):null},ParseCountAsIdentifierClause:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.AsKeyword),id;return keyword!=null?(id=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.IdentifierToken),new Kusto.Language.Syntax.CountAsIdentifierClause(keyword,id)):null},ParseCountOperator:function(){if(this.PeekToken().Kind===Kusto.Language.Syntax.SyntaxKind.CountKeyword&&this.PeekToken$1(1).Kind!==Kusto.Language.Syntax.SyntaxKind.OpenParenToken){var keyword=this.ParseToken(),asClause=this.ParseCountAsIdentifierClause();return new Kusto.Language.Syntax.CountOperator(keyword,asClause)}return null},ParseExecuteAndCacheOperator:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.ExecuteAndCacheKeyword);return keyword!=null?new Kusto.Language.Syntax.ExecuteAndCacheOperator(keyword):null},ParseExtendOperator:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.ExtendKeyword),expressions;return keyword!=null?(expressions=this.ParseCommaList(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.QueryParser.FnParseNamedExpression,Bridge.fn.cacheBind(this,this.CreateMissingExpression),Kusto.Language.Parsing.QueryParser.FnScanCommonListEnd,!0,!1),new Kusto.Language.Syntax.ExtendOperator(keyword,expressions)):null},ParseFacetWithClause:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.WithKeyword),open,expr,close,op;return keyword!=null?(open=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),open!=null?(expr=this.ParseForkPipeExpression()||Kusto.Language.Parsing.QueryParser.CreateMissingQueryOperatorExpression(),close=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),new Kusto.Language.Syntax.FacetWithExpressionClause(keyword,open,expr,close)):(op=this.ParseForkPipeQueryOperator()||Kusto.Language.Parsing.QueryParser.CreateMissingQueryOperator(),new Kusto.Language.Syntax.FacetWithOperatorClause(keyword,op))):null},ParseFacetOperator:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.FacetKeyword);if(keyword!=null){var byKeyword=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.ByKeyword),expressions=this.ParseCommaList(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.QueryParser.FnParseSimplePathExpression,this.FnCreateMissingNameReferenceAsExpression,Kusto.Language.Parsing.QueryParser.FnScanFacetExpressionListEnd,!0,!1),withClause=this.ParseFacetWithClause();return new Kusto.Language.Syntax.FacetOperator(keyword,byKeyword,expressions,withClause)}return null},ParseFilterOperator:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.WhereKeyword)||this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.FilterKeyword),parameters,expr;return keyword!=null?(parameters=this.ParseQueryOperatorParameterList(Kusto.Language.Parsing.QueryParser.s_filterOperatorParameterMap,0,!0),expr=this.ParseNamedExpression()||this.CreateMissingExpression(),new Kusto.Language.Syntax.FilterOperator(keyword,parameters,expr)):null},ParseGetSchemaOperator:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.GetSchemaKeyword),kind;return keyword!=null?(kind=this.ParseQueryOperatorParameter$1(Kusto.Language.QueryOperatorParameters.GetSchemaKind),new Kusto.Language.Syntax.GetSchemaOperator(keyword,kind)):null},ParseFindOperand_NameWithOptionalAsOperator:function(){var expr=this.ParseBracketedEntityNamePathElementSelector()||this.ParseBarePathElementSelector(),barToken,asOp;return expr!=null&&(barToken=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.BarToken))!=null&&(asOp=this.ParseAsOperator()||Kusto.Language.Parsing.QueryParser.CreateMissingQueryOperator(),expr=new Kusto.Language.Syntax.PipeExpression(expr,barToken,asOp)),expr},ParseFindOperand:function(){return this.ParseBest(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.QueryParser.FindOperandParsers)},ParseFindInClause:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.InKeyword);if(keyword!=null){var open=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),expressions=this.ParseCommaList(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.QueryParser.FnParseFindOperand,Bridge.fn.cacheBind(this,this.CreateMissingExpression),Kusto.Language.Parsing.QueryParser.FnScanCommonListEnd,!0,!1),close=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken);return new Kusto.Language.Syntax.FindInClause(keyword,open,expressions,close)}return null},ParseTypedColumnNameReference:function(){var name=this.ParseNameReference(),colon,type;return name!=null&&this.PeekToken().Kind===Kusto.Language.Syntax.SyntaxKind.ColonToken?(colon=this.ParseToken(),type=this.ParseParamTypeExtended()||this.ParseInvalidParamType()||Kusto.Language.Parsing.QueryParser.CreateMissingType(),new Kusto.Language.Syntax.TypedColumnReference(name,colon,type)):name},ParsePackExpression:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.PackKeyword);return keyword!=null?new Kusto.Language.Syntax.PackExpression(keyword,this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.AsteriskToken),this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken)):null},ParseFindProjectColumn:function(){return this.ParsePackExpression()||this.ParseStarExpression()||this.ParseTypedColumnNameReference()},ParseFindProjectClause:function(){switch(this.PeekToken().Kind){case Kusto.Language.Syntax.SyntaxKind.ProjectKeyword:return new Kusto.Language.Syntax.FindProjectClause(this.ParseToken(),this.ParseCommaList(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.QueryParser.FnParseFindProjectColumn,Bridge.fn.cacheBind(this,this.CreateMissingExpression),void 0,!0,!1));case Kusto.Language.Syntax.SyntaxKind.ProjectSmartKeyword:return new Kusto.Language.Syntax.FindProjectClause(this.ParseToken(),Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)).Empty());default:return null}},ParseFindProjectAwayClause:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind._ProjectAwayKeyword),columns;return keyword!=null?(columns=this.ParseCommaList(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.QueryParser.FnParseFindProjectColumn,Bridge.fn.cacheBind(this,this.CreateMissingExpression),void 0,!0,!1),new Kusto.Language.Syntax.FindProjectClause(keyword,columns)):null},ParseFindOperator:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.FindKeyword);if(keyword!=null){var dataScope=this.ParseDataScopeClause(),parameters=this.ParseQueryOperatorParameterList(Kusto.Language.Parsing.QueryParser.s_findOperatorParameterMap),inClause=this.ParseFindInClause(),where=parameters.Count>0||inClause!=null?this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.WhereKeyword):this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.WhereKeyword),expr=this.ParseUnnamedExpression()||this.CreateMissingExpression(),project=this.ParseFindProjectClause(),projectAway=this.ParseFindProjectAwayClause();return new Kusto.Language.Syntax.FindOperator(keyword,dataScope,parameters,inClause,where,expr,project,projectAway)}return null},ParseSearchPredicate:function(){var expr=this.ParseUnnamedExpression(),andKeyword;return expr==null&&(expr=this.ParseStarExpression(),expr!=null&&(andKeyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.AndKeyword))!=null)?new Kusto.Language.Syntax.BinaryExpression(Kusto.Language.Syntax.SyntaxKind.AndExpression,expr,andKeyword,this.ParseUnnamedExpression()||this.CreateMissingExpression()):expr},ParseSearchOperator:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.SearchKeyword);if(keyword!=null){var parameters=this.ParseQueryOperatorParameterList(Kusto.Language.Parsing.QueryParser.s_searchOperatorParameterMap,0,!0),dataScope=this.ParseDataScopeClause(),inClause=this.ParseFindInClause(),condition=this.ParseSearchPredicate()||this.CreateMissingExpression();return new Kusto.Language.Syntax.SearchOperator(keyword,parameters,dataScope,inClause,condition)}return null},ScanNameEqualsClause:function(offset){offset===void 0&&(offset=0);var len=this.ScanName(offset);return len>0&&this.PeekToken$1(len).Kind===Kusto.Language.Syntax.SyntaxKind.EqualToken?len+1|0:-1},ParseNameEqualsClause:function(){if(this.ScanNameEqualsClause()>0){var name=this.ParseNameDeclaration(),equal=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.EqualToken);return new Kusto.Language.Syntax.NameEqualsClause(name,equal)}return null},ParseForkExpression:function(){if(this.ScanNameEqualsClause()>0){var nameEqual=this.ParseNameEqualsClause(),open=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),expr=this.ParseForkPipeExpression()||this.ParseExpression()||this.CreateMissingExpression(),close=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken);return new Kusto.Language.Syntax.ForkExpression(nameEqual,open,expr,close)}else if(this.PeekToken().Kind===Kusto.Language.Syntax.SyntaxKind.OpenParenToken){var open1=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),expr1=this.ParseForkPipeExpression()||this.ParseExpression()||this.CreateMissingExpression(),close1=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken);return new Kusto.Language.Syntax.ForkExpression(null,open1,expr1,close1)}return null},CreateMissingForkExpression:function(){return new Kusto.Language.Syntax.ForkExpression(null,Kusto.Language.Parsing.QueryParser.CreateMissingToken(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),this.CreateMissingExpression(),Kusto.Language.Parsing.QueryParser.CreateMissingToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken))},ParseForkOperator:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.ForkKeyword),expressions;return keyword!=null?(expressions=this.ParseList(Kusto.Language.Syntax.ForkExpression,Kusto.Language.Parsing.QueryParser.FnParseForkExpression,Bridge.fn.cacheBind(this,this.CreateMissingForkExpression),void 0,!0),new Kusto.Language.Syntax.ForkOperator(keyword,expressions)):null},ParseForkPipeExpression:function(){var expr=this.ParseForkPipeQueryOperator(),pipe,pipedOperator;if(expr!=null)while(this.PeekToken().Kind===Kusto.Language.Syntax.SyntaxKind.BarToken)pipe=this.ParseToken(),pipedOperator=this.ParseRequiredQueryOperator(),expr=new Kusto.Language.Syntax.PipeExpression(expr,pipe,pipedOperator);return expr},ParseForkPipeQueryOperator:function(){return this.ParsePipedQueryOperator()||this.ParseUnpipedQueryOperator()},ParsePartitionQuery:function(){var open=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.OpenBraceToken),expr,close;return open!=null?(expr=this.ParseExpression()||this.CreateMissingExpression(),close=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseBraceToken),new Kusto.Language.Syntax.PartitionQuery(open,expr,close)):null},ParsePartitionSubquery:function(){var open=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),expr,close;return open!=null?(expr=this.ParsePipeSubExpression()||this.ParseExpression()||this.CreateMissingExpression(),close=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),new Kusto.Language.Syntax.PartitionSubquery(open,expr,close)):null},ParsePartitionScope:function(){var inKeyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.InKeyword),scope;return inKeyword!=null?(scope=this.ParseFunctionCallExpression()||this.ParseDynamicLiteral()||this.CreateMissingExpression(),new Kusto.Language.Syntax.PartitionScope(inKeyword,scope)):null},ParsePartitionOperand:function(){switch(this.PeekToken().Kind){case Kusto.Language.Syntax.SyntaxKind.OpenBraceToken:return this.ParsePartitionQuery();case Kusto.Language.Syntax.SyntaxKind.OpenParenToken:return this.ParsePartitionSubquery();default:return null}},CreateMissingPartitionOperand:function(){return new Kusto.Language.Syntax.PartitionSubquery(Kusto.Language.Parsing.QueryParser.CreateMissingToken(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),this.CreateMissingExpression(),Kusto.Language.Parsing.QueryParser.CreateMissingToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken))},ParsePartitionOperator:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.PartitionKeyword);if(keyword!=null){var parameters=this.ParseQueryOperatorParameterList(Kusto.Language.Parsing.QueryParser.s_partitionOperatorParameterMap),byKeyword=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.ByKeyword),byExpr=this.ParseSimplePathExpression()||this.CreateMissingNameReference(),scope=this.ParsePartitionScope(),operand=this.ParsePartitionOperand()||this.CreateMissingPartitionOperand();return new Kusto.Language.Syntax.PartitionOperator(keyword,parameters,byKeyword,byExpr,scope,operand)}return null},ParseJoinOnClause:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.OnKeyword),expressions;return keyword!=null?(expressions=this.ParseCommaList(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.QueryParser.FnParseUnnamedExpression,Bridge.fn.cacheBind(this,this.CreateMissingExpression),void 0,!0,!1),new Kusto.Language.Syntax.JoinOnClause(keyword,expressions)):null},ParseJoinWhereClause:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.WhereKeyword),expr;return keyword!=null?(expr=this.ParseUnnamedExpression()||this.CreateMissingExpression(),new Kusto.Language.Syntax.JoinWhereClause(keyword,expr)):null},ParseJoinOperator:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.JoinKeyword);if(keyword!=null){var parameters=this.ParseQueryOperatorParameterList(Kusto.Language.Parsing.QueryParser.s_joinOperatorParameterMap,0,!0),expr=this.ParseUnnamedExpression()||this.CreateMissingExpression(),condition=this.ParseJoinOnClause()||this.ParseJoinWhereClause();return new Kusto.Language.Syntax.JoinOperator(keyword,parameters,expr,condition)}return null},ParseLookupOperator:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.LookupKeyword);if(keyword!=null){var parameters=this.ParseQueryOperatorParameterList(Kusto.Language.Parsing.QueryParser.s_lookupOperatorParameterMap,0,!0),expression=this.ParseUnnamedExpression()||this.CreateMissingExpression(),condition=this.ParseJoinOnClause()||Kusto.Language.Parsing.QueryParser.CreateMissingJoinOnClause();return new Kusto.Language.Syntax.LookupOperator(keyword,parameters,expression,condition)}return null},ParseDefaultExpressionClause:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.DefaultKeyword),equal,expr;return keyword!=null?(equal=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.EqualToken),expr=this.ParseNamedExpression()||this.CreateMissingExpression(),new Kusto.Language.Syntax.DefaultExpressionClause(keyword,equal,expr)):null},ParseMakeSeriesByClause:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.ByKeyword),expressions;return keyword!=null?(expressions=this.ParseCommaList(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.QueryParser.FnParseNamedExpression,Bridge.fn.cacheBind(this,this.CreateMissingExpression),void 0,!0,!1),new Kusto.Language.Syntax.MakeSeriesByClause(keyword,expressions)):null},ParseMakeSeriesExpression:function(){var expr=this.ParseNamedExpression(),defClause;return expr!=null?(defClause=this.ParseDefaultExpressionClause(),new Kusto.Language.Syntax.MakeSeriesExpression(expr,defClause)):null},CreateMissingMakeSeriesExpression:function(){return new Kusto.Language.Syntax.MakeSeriesExpression(this.CreateMissingExpression(),null)},ParseRequiredMakeSeriesInRangeClause:function(){var inKeyword=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.InKeyword),rangeKeyword=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.RangeKeyword),open=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),expressions=this.ParseCommaList(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.QueryParser.FnParseNamedExpression,Bridge.fn.cacheBind(this,this.CreateMissingExpression),Kusto.Language.Parsing.QueryParser.FnScanCommonListEnd),close=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken);return new Kusto.Language.Syntax.MakeSeriesInRangeClause(inKeyword,rangeKeyword,new Kusto.Language.Syntax.ExpressionList(open,expressions,close))},ParseMakeSeriesFromClause:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.FromKeyword),expr;return keyword!=null?(expr=this.ParseUnnamedExpression()||this.CreateMissingExpression(),new Kusto.Language.Syntax.MakeSeriesFromClause(keyword,expr)):null},ParseMakeSeriesToClause:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.ToKeyword),expr;return keyword!=null?(expr=this.ParseUnnamedExpression()||this.CreateMissingExpression(),new Kusto.Language.Syntax.MakeSeriesToClause(keyword,expr)):null},ParseRequiredMakeSeriesStepClause:function(){var keyword=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.StepKeyword),expr=this.ParseUnnamedExpression()||this.CreateMissingExpression();return new Kusto.Language.Syntax.MakeSeriesStepClause(keyword,expr)},ParseMakeSeriesFromToStepClause:function(){var kind=this.PeekToken().Kind;if(kind===Kusto.Language.Syntax.SyntaxKind.FromKeyword||kind===Kusto.Language.Syntax.SyntaxKind.ToKeyword||kind===Kusto.Language.Syntax.SyntaxKind.StepKeyword){var fromClause=this.ParseMakeSeriesFromClause(),toClause=this.ParseMakeSeriesToClause(),stepClause=this.ParseRequiredMakeSeriesStepClause();return new Kusto.Language.Syntax.MakeSeriesFromToStepClause(fromClause,toClause,stepClause)}return null},ParseMakeSeriesOperator:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.MakeSeriesKeyword);if(keyword!=null){var parameters=this.ParseQueryOperatorParameterList(Kusto.Language.Parsing.QueryParser.s_makeSeriesOperatorParameterMap,0,!0),expressions=this.ParseCommaList(Kusto.Language.Syntax.MakeSeriesExpression,Kusto.Language.Parsing.QueryParser.FnParseMakeSeriesExpression,Bridge.fn.cacheBind(this,this.CreateMissingMakeSeriesExpression),Kusto.Language.Parsing.QueryParser.FnScanMakeSeriesExpressionListEnd,!0,!1),onClause=new Kusto.Language.Syntax.MakeSeriesOnClause(this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.OnKeyword),this.ParseNamedExpression()||this.CreateMissingExpression()),rangeClause=this.ParseMakeSeriesFromToStepClause()||this.ParseRequiredMakeSeriesInRangeClause(),byClause=this.ParseMakeSeriesByClause();return new Kusto.Language.Syntax.MakeSeriesOperator(keyword,parameters,expressions,onClause,rangeClause,byClause)}return null},ParseToTypeOfClause:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.ToKeyword),typeOf;return keyword!=null?(typeOf=Bridge.cast(this.ParseTypeOfLiteral()||Kusto.Language.Parsing.QueryParser.CreateMissingTypeOfLiteral(),Kusto.Language.Syntax.TypeOfLiteralExpression),new Kusto.Language.Syntax.ToTypeOfClause(keyword,typeOf)):null},ParseMvExpandExpression:function(){var expr,typeOf;return this.PeekToken().Kind===Kusto.Language.Syntax.SyntaxKind.ToKeyword?new Kusto.Language.Syntax.MvExpandExpression(this.CreateMissingExpression(),this.ParseToTypeOfClause()):(expr=this.ParseNamedExpression(),expr!=null)?(typeOf=this.ParseToTypeOfClause(),new Kusto.Language.Syntax.MvExpandExpression(expr,typeOf)):null},CreateMissingMvExpandExpression:function(){return new Kusto.Language.Syntax.MvExpandExpression(this.CreateMissingExpression(),null)},ParseMvExpandExpressionList:function(){if(this.PeekToken().Kind===Kusto.Language.Syntax.SyntaxKind.ToKeyword){var position=this.GetResetPoint(),clause=this.ParseToTypeOfClause();if(this.PeekToken().Kind!==Kusto.Language.Syntax.SyntaxKind.CommaToken)return new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MvExpandExpression)).ctor)(System.Array.init([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MvExpandExpression))(new Kusto.Language.Syntax.MvExpandExpression(null,clause))],Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MvExpandExpression)));else this.Reset(position)}return this.ParseCommaList(Kusto.Language.Syntax.MvExpandExpression,Kusto.Language.Parsing.QueryParser.FnParseMvExpandExpression,Bridge.fn.cacheBind(this,this.CreateMissingMvExpandExpression),Kusto.Language.Parsing.QueryParser.FnScanMvExpandExpressionListEnd,!0,!1)},ParseMvExpandRowLimitClause:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.LimitKeyword),expr;return keyword!=null?(expr=this.ParseUnnamedExpression()||this.CreateMissingExpression(),new Kusto.Language.Syntax.MvExpandRowLimitClause(keyword,expr)):null},ParseMvExpandOperator:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.MvExpandKeyword)||this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.MvDashExpandKeyword);if(keyword!=null){var parameters=this.ParseQueryOperatorParameterList(Kusto.Language.Parsing.QueryParser.s_mvExpandOperatorParameterMap,0,!0),expressions=this.ParseMvExpandExpressionList(),rowLimit=this.ParseMvExpandRowLimitClause();return new Kusto.Language.Syntax.MvExpandOperator(keyword,parameters,expressions,rowLimit)}return null},ParseMvApplyExpression:function(){var toTypeOf,expr,toTypeOf1;return this.PeekToken().Kind===Kusto.Language.Syntax.SyntaxKind.ToKeyword?(toTypeOf=this.ParseToTypeOfClause(),new Kusto.Language.Syntax.MvApplyExpression(this.CreateMissingExpression(),toTypeOf)):(expr=this.ParseNamedExpression(),expr!=null)?(toTypeOf1=this.ParseToTypeOfClause(),new Kusto.Language.Syntax.MvApplyExpression(expr,toTypeOf1)):null},CreateMissingMvApplyExpression:function(){return new Kusto.Language.Syntax.MvApplyExpression(this.CreateMissingExpression(),null)},ScanMvApplyExpressionListEnd:function(){if(this.ScanCustomListEnd$1(Kusto.Language.Parsing.QueryParser.s_mvApplyExpressionListEnd)){var nextToken;if((nextToken=this.PeekToken$1(1))!=null&&nextToken.Kind!==Kusto.Language.Syntax.SyntaxKind.CommaToken&&nextToken.Kind!==Kusto.Language.Syntax.SyntaxKind.ToKeyword&&nextToken.Kind!==Kusto.Language.Syntax.SyntaxKind.EqualToken)return!0}return this.ScanCommonListEnd()},ParseMvApplyExpressionList:function(){if(this.PeekToken().Kind===Kusto.Language.Syntax.SyntaxKind.ToKeyword){var position=this.GetResetPoint(),clause=this.ParseToTypeOfClause();if(this.PeekToken().Kind!==Kusto.Language.Syntax.SyntaxKind.CommaToken)return new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MvApplyExpression)).ctor)(System.Array.init([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MvApplyExpression))(new Kusto.Language.Syntax.MvApplyExpression(null,clause))],Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MvApplyExpression)));else this.Reset(position)}return this.ParseCommaList(Kusto.Language.Syntax.MvApplyExpression,Kusto.Language.Parsing.QueryParser.FnParseMvApplyExpression,Bridge.fn.cacheBind(this,this.CreateMissingMvApplyExpression),Kusto.Language.Parsing.QueryParser.FnScanMvApplyExpressionListEnd,!0,!1)},ParseMvApplyRowLimitClause:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.LimitKeyword),expr;return keyword!=null?(expr=this.ParseUnnamedExpression()||this.CreateMissingExpression(),new Kusto.Language.Syntax.MvApplyRowLimitClause(keyword,expr)):null},ParseMvApplyContextIdClause:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.IdKeyword),expr;return keyword!=null?(expr=this.ParseUnnamedExpression()||this.CreateMissingExpression(),new Kusto.Language.Syntax.MvApplyContextIdClause(keyword,expr)):null},ParseMvApplySubqueryExpression:function(){var open=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),expr,close;return open!=null?(expr=this.ParseContextualSubExpression()||this.CreateMissingExpression(),close=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),new Kusto.Language.Syntax.MvApplySubqueryExpression(open,expr,close)):null},CreateMissingMvApplySubqueryExpression:function(){return new Kusto.Language.Syntax.MvApplySubqueryExpression(Kusto.Language.Parsing.QueryParser.CreateMissingToken(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),this.CreateMissingExpression(),Kusto.Language.Parsing.QueryParser.CreateMissingToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken))},ParseMvApplyOperator:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.MvApplyKeyword)||this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.MvDashApplyKeyword);if(keyword!=null){var parameters=this.ParseQueryOperatorParameterList(Kusto.Language.Parsing.QueryParser.s_mvApplyOperatorParmeterMap,0,!0),expressions=this.ParseMvApplyExpressionList(),rowLimit=this.ParseMvApplyRowLimitClause(),idClause=this.ParseMvApplyContextIdClause(),onKeyword=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.OnKeyword),subquery=this.ParseMvApplySubqueryExpression()||this.CreateMissingMvApplySubqueryExpression();return new Kusto.Language.Syntax.MvApplyOperator(keyword,parameters,expressions,rowLimit,idClause,onKeyword,subquery)}return null},ParseEvaluateSchemaClause:function(){var colon=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.ColonToken),schema;return colon!=null?(schema=this.ParseEvaluateRowSchema()||Kusto.Language.Parsing.QueryParser.CreateMissingEvaluateRowSchema(),new Kusto.Language.Syntax.EvaluateSchemaClause(colon,schema)):null},ParseEvaluateOperator:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.EvaluateKeyword);if(keyword!=null){var parameters=this.ParseQueryOperatorParameterList(Kusto.Language.Parsing.QueryParser.s_evaluateOperatorParameterMap),functionCall=this.ParseRequiredFunctionCallExpression(),schema=this.ParseEvaluateSchemaClause();return new Kusto.Language.Syntax.EvaluateOperator(keyword,parameters,functionCall,schema)}return null},ParseParseWithExpression:function(){return this.ParseStarExpression()||this.ParseStringOrCompoundStringLiteral()||this.ParseNameAndOptionalTypeDeclaration()},ParseParseOperator:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.ParseKeyword);if(keyword!=null){var parameters=this.ParseQueryOperatorParameterList(Kusto.Language.Parsing.QueryParser.s_parseOperatorParameterMap,0,!0),expr=this.ParseUnnamedExpression()||this.CreateMissingExpression(),$with=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.WithKeyword),withExprs=this.ParseList(Kusto.Language.Syntax.SyntaxNode,Kusto.Language.Parsing.QueryParser.FnParseParseWithExpression);return new Kusto.Language.Syntax.ParseOperator(keyword,parameters,expr,$with,withExprs)}return null},ParseParseWhereOperator:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.ParseWhereKeyword);if(keyword!=null){var parameters=this.ParseQueryOperatorParameterList(Kusto.Language.Parsing.QueryParser.s_parseOperatorParameterMap,0,!0),expr=this.ParseUnnamedExpression()||this.CreateMissingExpression(),$with=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.WithKeyword),withExprs=this.ParseList(Kusto.Language.Syntax.SyntaxNode,Kusto.Language.Parsing.QueryParser.FnParseParseWithExpression);return new Kusto.Language.Syntax.ParseWhereOperator(keyword,parameters,expr,$with,withExprs)}return null},ParseParseKvWithClause:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.WithKeyword);if(keyword!=null){var open=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),props=this.ParseQueryOperatorParameterCommaList(Kusto.Language.Parsing.QueryParser.s_parseKvOperatorWithParametersMap,void 0,Kusto.Language.Parsing.AllowedNameKind.DeclaredOnly),close=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken);return new Kusto.Language.Syntax.ParseKvWithClause(keyword,open,props,close)}return null},ParseParseKvOperator:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.ParseKvKeyword);if(keyword!=null){var expr=this.ParseUnnamedExpression()||this.CreateMissingExpression(),asKeyword=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.AsKeyword),keys=this.ParseRowSchema()||Kusto.Language.Parsing.QueryParser.CreateMissingRowSchema(),withClause=this.ParseParseKvWithClause();return new Kusto.Language.Syntax.ParseKvOperator(keyword,expr,asKeyword,keys,withClause)}return null},ParseProjectOperator:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.ProjectKeyword),expressions;return keyword!=null?(expressions=this.ParseCommaList(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.QueryParser.FnParseNamedExpression,Bridge.fn.cacheBind(this,this.CreateMissingExpression),Kusto.Language.Parsing.QueryParser.FnScanCommonListEnd),new Kusto.Language.Syntax.ProjectOperator(keyword,expressions)):null},ParseProjectRenameOperator:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.ProjectRenameKeyword),expressions;return keyword!=null?(expressions=this.ParseCommaList(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.QueryParser.FnParseNamedExpression,Bridge.fn.cacheBind(this,this.CreateMissingExpression),Kusto.Language.Parsing.QueryParser.FnScanCommonListEnd),new Kusto.Language.Syntax.ProjectRenameOperator(keyword,expressions)):null},ParseProjectAwayOperator:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.ProjectAwayKeyword),expressions;return keyword!=null?(expressions=this.ParseCommaList(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.QueryParser.FnParseSimpleOrWildcardedNameReferenceExpression,Bridge.fn.cacheBind(this,this.CreateMissingExpression),Kusto.Language.Parsing.QueryParser.FnScanCommonListEnd),new Kusto.Language.Syntax.ProjectAwayOperator(keyword,expressions)):null},ParseProjectKeepOperator:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.ProjectKeepKeyword),expressions;return keyword!=null?(expressions=this.ParseCommaList(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.QueryParser.FnParseSimpleOrWildcardedNameReferenceExpression,Bridge.fn.cacheBind(this,this.CreateMissingExpression),Kusto.Language.Parsing.QueryParser.FnScanCommonListEnd),new Kusto.Language.Syntax.ProjectKeepOperator(keyword,expressions)):null},ParseProjectReorderExpression:function(){var expr=this.ParseWildcardedNameReference()||this.ParseNameReference(),kind;return expr!=null&&(kind=this.PeekToken().Kind,(kind===Kusto.Language.Syntax.SyntaxKind.AscKeyword||kind===Kusto.Language.Syntax.SyntaxKind.DescKeyword||kind===Kusto.Language.Syntax.SyntaxKind.GrannyAscKeyword||kind===Kusto.Language.Syntax.SyntaxKind.GrannyDescKeyword)&&(expr=new Kusto.Language.Syntax.OrderedExpression(expr,this.ParseRequiredOrderingNoNullsClause()))),expr},ParseProjectReorderOperator:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.ProjectReorderKeyword),expressions;return keyword!=null?(expressions=this.ParseCommaList(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.QueryParser.FnParseProjectReorderExpression,Bridge.fn.cacheBind(this,this.CreateMissingExpression),Kusto.Language.Parsing.QueryParser.FnScanCommonListEnd),new Kusto.Language.Syntax.ProjectReorderOperator(keyword,expressions)):null},ParseSampleOperator:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.SampleKeyword),parameters,expr;return keyword!=null?(parameters=this.ParseQueryOperatorParameterList(Kusto.Language.Parsing.QueryParser.s_sampleOperatorParameterMap,0,!0),expr=this.ParseNamedExpression()||this.CreateMissingExpression(),new Kusto.Language.Syntax.SampleOperator(keyword,parameters,expr)):null},ParseSampleDistinctOperator:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.SampleDistinctKeyword);if(keyword!=null){var parameters=this.ParseQueryOperatorParameterList(Kusto.Language.Parsing.QueryParser.s_sampleDistinctOperatorParameterMap,0,!0),expr=this.ParseNamedExpression()||this.CreateMissingExpression(),ofKeyword=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.OfKeyword),ofExpr=this.ParseNamedExpression()||this.CreateMissingExpression();return new Kusto.Language.Syntax.SampleDistinctOperator(keyword,parameters,expr,ofKeyword,ofExpr)}return null},ParseReduceByWithClause:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.WithKeyword),withParameters;return keyword!=null?(withParameters=this.ParseQueryOperatorParameterCommaList(Kusto.Language.Parsing.QueryParser.s_reduceOperatorWithParameterMap),new Kusto.Language.Syntax.ReduceByWithClause(keyword,withParameters)):null},ParseReduceByOperator:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.ReduceKeyword);if(keyword!=null){var parameters=this.ParseQueryOperatorParameterList(Kusto.Language.Parsing.QueryParser.s_reduceOperatorParameterMap),byKeyword=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.ByKeyword),expr=this.ParseNamedExpression()||this.CreateMissingExpression(),withClause=this.ParseReduceByWithClause();return new Kusto.Language.Syntax.ReduceByOperator(keyword,parameters,byKeyword,expr,withClause)}return null},ParseSummarizeByBinClause:function(){if(this.PeekToken().Kind===Kusto.Language.Syntax.SyntaxKind.BinKeyword&&this.PeekToken$1(1).Kind===Kusto.Language.Syntax.SyntaxKind.EqualToken){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.BinKeyword),equal=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.EqualToken),value=this.ParseUnnamedExpression()||this.CreateMissingExpression();return new Kusto.Language.Syntax.SimpleNamedExpression(new Kusto.Language.Syntax.NameDeclaration.ctor(new Kusto.Language.Syntax.TokenName(keyword)),equal,value)}return null},ScanSummarizeByClauseExpressionListEnd:function(){return this.PeekToken().Kind===Kusto.Language.Syntax.SyntaxKind.BinKeyword&&this.PeekToken$1(1).Kind===Kusto.Language.Syntax.SyntaxKind.EqualToken&&Kusto.Language.Syntax.SyntaxFacts.IsLiteral(this.PeekToken$1(2).Kind)?!0:this.ScanCommonListEnd()},ParseSummarizeByClause:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.ByKeyword),expressions,binClause;return keyword!=null?(expressions=this.ParseCommaList(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.QueryParser.FnParseNamedExpression,Bridge.fn.cacheBind(this,this.CreateMissingExpression),Kusto.Language.Parsing.QueryParser.FnScanSummarizeByClauseExpressionListEnd,!0,!1),binClause=this.ParseSummarizeByBinClause(),new Kusto.Language.Syntax.SummarizeByClause(keyword,expressions,binClause)):null},ParseSummarizeOperator:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.SummarizeKeyword);if(keyword!=null){var parameters=this.ParseQueryOperatorParameterList(Kusto.Language.Parsing.QueryParser.s_summarizeOperatorParameterMap,0,!0),expressions=this.ParseCommaList(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.QueryParser.FnParseNamedExpression,Bridge.fn.cacheBind(this,this.CreateMissingExpression),Kusto.Language.Parsing.QueryParser.FnScanSummarizeExpressionListEnd),byClause=this.ParseSummarizeByClause();return new Kusto.Language.Syntax.SummarizeOperator(keyword,parameters,expressions,byClause)}return null},ParseDistinctExpression:function(){return this.ParseStarExpression()||this.ParseNamedExpression()},ParseDistinctOperator:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.DistinctKeyword),parameters,expressions;return keyword!=null?(parameters=this.ParseQueryOperatorParameterList(Kusto.Language.Parsing.QueryParser.s_distinctOperatorParameterMap,0,!0),expressions=this.ParseCommaList(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.QueryParser.FnParseDistinctExpression,Bridge.fn.cacheBind(this,this.CreateMissingExpression),Kusto.Language.Parsing.QueryParser.FnScanCommonListEnd,!0,!1),new Kusto.Language.Syntax.DistinctOperator(keyword,parameters,expressions)):null},ParseTakeOperator:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.TakeKeyword)||this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.LimitKeyword),parameters,expr;return keyword!=null?(parameters=this.ParseQueryOperatorParameterList(Kusto.Language.Parsing.QueryParser.s_takeOperatorParameterMap,0,!0),expr=this.ParseNamedExpression()||this.CreateMissingExpression(),new Kusto.Language.Syntax.TakeOperator(keyword,parameters,expr)):null},CreateMissingFirstOrLastToken:function(){return Kusto.Language.Syntax.SyntaxToken.Missing$1("",Kusto.Language.Syntax.SyntaxKind.FirstKeyword,System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingFirstOrLast()],Kusto.Language.Diagnostic))},ParseOrderingNullsClause:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.NullsKeyword),firstOrLast;return keyword!=null?(firstOrLast=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.FirstKeyword)||this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.LastKeyword)||this.CreateMissingFirstOrLastToken(),new Kusto.Language.Syntax.OrderingNullsClause(keyword,firstOrLast)):null},ParseRequiredOrderingClause:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.AscKeyword)||this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.DescKeyword)||this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.GrannyAscKeyword)||this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.GrannyDescKeyword),nulls=this.ParseOrderingNullsClause();return new Kusto.Language.Syntax.OrderingClause(keyword,nulls)},ParseRequiredOrderingNoNullsClause:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.AscKeyword)||this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.DescKeyword)||this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.GrannyAscKeyword)||this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.GrannyDescKeyword);return new Kusto.Language.Syntax.OrderingClause(keyword,null)},ParseOrderedExpression:function(){var expr=this.ParseNamedExpression(),kind;if(expr!=null){kind=this.PeekToken().Kind;switch(kind){case Kusto.Language.Syntax.SyntaxKind.AscKeyword:case Kusto.Language.Syntax.SyntaxKind.DescKeyword:case Kusto.Language.Syntax.SyntaxKind.GrannyAscKeyword:case Kusto.Language.Syntax.SyntaxKind.GrannyDescKeyword:case Kusto.Language.Syntax.SyntaxKind.NullsKeyword:expr=new Kusto.Language.Syntax.OrderedExpression(expr,this.ParseRequiredOrderingClause());break}}return expr},ParseSortOperator:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.OrderKeyword)||this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.SortKeyword);if(keyword!=null){var parameters=this.ParseQueryOperatorParameterList(Kusto.Language.Parsing.QueryParser.s_sortOperatorParameterMap),byKeyword=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.ByKeyword),expressions=this.ParseCommaList(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.QueryParser.FnParseOrderedExpression,Bridge.fn.cacheBind(this,this.CreateMissingExpression),Kusto.Language.Parsing.QueryParser.FnScanCommonListEnd,!0,!1);return new Kusto.Language.Syntax.SortOperator(keyword,parameters,byKeyword,expressions)}return null},ParseScanAssignment:function(){var name=this.ParseExtendedNameReference(),equal,expr;return name!=null?(equal=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.EqualToken),expr=this.ParseUnnamedExpression()||this.CreateMissingExpression(),new Kusto.Language.Syntax.ScanAssignment(name,equal,expr)):null},ParseScanComputationClause:function(){var arrow=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.FatArrowToken),assignments;return arrow!=null?(assignments=this.ParseCommaList(Kusto.Language.Syntax.ScanAssignment,Kusto.Language.Parsing.QueryParser.FnParseScanAssignment,Kusto.Language.Parsing.QueryParser.CreateMissingScanAssignment,Kusto.Language.Parsing.QueryParser.FnScanCommonListEnd,!0,!1),new Kusto.Language.Syntax.ScanComputationClause(arrow,assignments)):null},ParseScanStepOutput:function(){var output=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.OutputKeyword),equality,outputKind;return output!=null?(equality=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.EqualToken),outputKind=this.ParseRequiredToken$1(Kusto.Language.KustoFacts.ScanStepOutputValues),new Kusto.Language.Syntax.ScanStepOutput(output,equality,outputKind)):null},ParseScanStep:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.StepKeyword);if(keyword!=null){var name=this.ParseExtendedNameDeclaration()||this.CreateMissingNameDeclaration(),optional=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.OptionalKeyword),output=this.ParseScanStepOutput(),colon=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.ColonToken),expr=this.ParseUnnamedExpression()||this.CreateMissingExpression(),computation=this.ParseScanComputationClause(),semicolon=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.SemicolonToken);return new Kusto.Language.Syntax.ScanStep(keyword,name,optional,output,colon,expr,computation,semicolon)}return null},ParseScanOrderByClause:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.OrderKeyword),byKeyword,expressions;return keyword!=null?(byKeyword=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.ByKeyword),expressions=this.ParseCommaList(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.QueryParser.FnParseOrderedExpression,Bridge.fn.cacheBind(this,this.CreateMissingExpression),Kusto.Language.Parsing.QueryParser.FnScanScanListEnd,!0,!1),new Kusto.Language.Syntax.ScanOrderByClause(keyword,byKeyword,expressions)):null},ParseScanPartitionByClause:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.PartitionKeyword),byKeyword,expressions;return keyword!=null?(byKeyword=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.ByKeyword),expressions=this.ParseCommaList(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.QueryParser.FnParseUnnamedExpression,Bridge.fn.cacheBind(this,this.CreateMissingExpression),Kusto.Language.Parsing.QueryParser.FnScanScanListEnd,!0,!1),new Kusto.Language.Syntax.ScanPartitionByClause(keyword,byKeyword,expressions)):null},ParseScanDeclareClause:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.DeclareKeyword);if(keyword!=null){var open=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),declarations=this.ParseCommaList(Kusto.Language.Syntax.FunctionParameter,Kusto.Language.Parsing.QueryParser.FnParseFunctionParameter,Kusto.Language.Parsing.QueryParser.CreateMissingFunctionParameter,Kusto.Language.Parsing.QueryParser.FnScanCommonListEnd),close=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken);return new Kusto.Language.Syntax.ScanDeclareClause(keyword,open,declarations,close)}return null},ParseScanOperator:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.ScanKeyword);if(keyword!=null){var parameters=this.ParseQueryOperatorParameterList(Kusto.Language.Parsing.QueryParser.s_scanOperatorParameterMap),order=this.ParseScanOrderByClause(),partition=this.ParseScanPartitionByClause(),declare=this.ParseScanDeclareClause(),$with=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.WithKeyword),open=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),steps=this.ParseList(Kusto.Language.Syntax.ScanStep,Kusto.Language.Parsing.QueryParser.FnParseScanStep,void 0,Kusto.Language.Parsing.QueryParser.FnScanCommonListEnd,!1),close=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken);return new Kusto.Language.Syntax.ScanOperator(keyword,parameters,order,partition,declare,$with,open,steps,close)}return null},ParsePartitionByOperator:function(){var keyword;if((keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.PartitionByKeyword))!=null){var parameters=this.ParseQueryOperatorParameterList(Kusto.Language.Parsing.QueryParser.s_partitionByParameters),entity=this.ParseSimplePathExpression()||this.CreateMissingNameReference(),idClause=this.ParsePartitionByIdClause(),openParen=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),subQuery=this.ParseContextualSubExpression()||this.CreateMissingExpression(),closeParen=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken);return new Kusto.Language.Syntax.PartitionByOperator(keyword,parameters,entity,idClause,openParen,subQuery,closeParen)}return null},ParsePartitionByIdClause:function(){var keyword,value;return(keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.IdKeyword))!=null?(value=this.ParseLiteral()||Kusto.Language.Parsing.QueryParser.CreateMissingValue(),new Kusto.Language.Syntax.PartitionByIdClause(keyword,value)):null},ParseTopHittersByClause:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.ByKeyword),expr;return keyword!=null?(expr=this.ParseNamedExpression()||this.CreateMissingExpression(),new Kusto.Language.Syntax.TopHittersByClause(keyword,expr)):null},ParseTopHittersOperator:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.TopHittersKeyword);if(keyword!=null){var expr=this.ParseNamedExpression()||this.CreateMissingExpression(),ofKeyword=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.OfKeyword),ofExpr=this.ParseNamedExpression()||this.CreateMissingExpression(),byClause=this.ParseTopHittersByClause();return new Kusto.Language.Syntax.TopHittersOperator(keyword,expr,ofKeyword,ofExpr,byClause)}return null},ParseTopOperator:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.TopKeyword);if(keyword!=null){var parameters=this.ParseQueryOperatorParameterList(Kusto.Language.Parsing.QueryParser.s_topOperatorParameterMap,0,!0),expr=this.ParseNamedExpression()||this.CreateMissingExpression(),byKeyword=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.ByKeyword),byExpr=this.ParseOrderedExpression()||this.CreateMissingExpression();return new Kusto.Language.Syntax.TopOperator(keyword,parameters,expr,byKeyword,byExpr)}return null},ParseTopNestedWithOthersClause:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.WithKeyword);if(keyword!=null){var others=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.OthersKeyword),equal=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.EqualToken),value=this.ParseLiteral()||this.ParseUnnamedExpression()||this.CreateMissingExpression();return new Kusto.Language.Syntax.TopNestedWithOthersClause(keyword,others,equal,value)}return null},ParseTopNestedClause:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.TopNestedKeyword);if(keyword!=null){var expr=this.ParseNamedExpression(),ofKeyword=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.OfKeyword),ofExpr=this.ParseNamedExpression()||this.CreateMissingExpression(),withClause=this.ParseTopNestedWithOthersClause(),byKeyword=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.ByKeyword),byExpr=this.ParseOrderedExpression()||this.CreateMissingExpression();return new Kusto.Language.Syntax.TopNestedClause(keyword,expr,ofKeyword,ofExpr,withClause,byKeyword,byExpr)}return null},ParseTopNestedOperator:function(){if(this.PeekToken().Kind===Kusto.Language.Syntax.SyntaxKind.TopNestedKeyword){var clauses=this.ParseCommaList(Kusto.Language.Syntax.TopNestedClause,Kusto.Language.Parsing.QueryParser.FnParseTopNestedClause,Kusto.Language.Parsing.QueryParser.CreateMissingTopNestedClause,Kusto.Language.Parsing.QueryParser.FnScanCommonListEnd,!0,!1);return new Kusto.Language.Syntax.TopNestedOperator(clauses)}return null},ParseUnionExpression:function(){return this.ParseParenthesizedExpression()||this.ParseBest(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.QueryParser.ParseUnionExpressionParsers)},ParseUnionOperator:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.UnionKeyword),parameters,expressions;return keyword!=null?(parameters=this.ParseQueryOperatorParameterList(Kusto.Language.Parsing.QueryParser.s_unionOperatorParameterMap,0,!0),expressions=this.ParseCommaList(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.QueryParser.FnParseUnionExpression,Bridge.fn.cacheBind(this,this.CreateMissingExpression),Kusto.Language.Parsing.QueryParser.FnScanCommonListEnd,!0,!1),new Kusto.Language.Syntax.UnionOperator(keyword,parameters,expressions)):null},ParseAsOperator:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.AsKeyword),parameters,name;return keyword!=null?(parameters=this.ParseQueryOperatorParameterList(Kusto.Language.Parsing.QueryParser.s_asOperatorParameterMap,0,!0),name=this.ParseNameDeclaration()||this.CreateMissingNameDeclaration(),new Kusto.Language.Syntax.AsOperator(keyword,parameters,name)):null},ParseSerializeOperator:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.SerializeKeyword),parameters,expressions;return keyword!=null?(parameters=this.ParseQueryOperatorParameterList(Kusto.Language.Parsing.QueryParser.s_serializeOperatorParameterMap,0,!0),expressions=this.ParseCommaList(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.QueryParser.FnParseNamedExpression,Bridge.fn.cacheBind(this,this.CreateMissingExpression),Kusto.Language.Parsing.QueryParser.FnScanCommonListEnd),new Kusto.Language.Syntax.SerializeOperator(keyword,parameters,expressions)):null},ParseRangeOperator:function(){if(this.PeekToken().Kind===Kusto.Language.Syntax.SyntaxKind.RangeKeyword&&this.PeekToken$1(1).Kind!==Kusto.Language.Syntax.SyntaxKind.OpenParenToken){var keyword=this.ParseToken(),name=this.ParseNameDeclaration()||this.CreateMissingNameDeclaration(),fromKeyword=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.FromKeyword),fromExpr=this.ParseUnnamedExpression()||this.CreateMissingExpression(),toKeyword=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.ToKeyword),toExpr=this.ParseUnnamedExpression()||this.CreateMissingExpression(),stepKeyword=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.StepKeyword),stepExpr=this.ParseUnnamedExpression()||this.CreateMissingExpression();return new Kusto.Language.Syntax.RangeOperator(keyword,name,fromKeyword,fromExpr,toKeyword,toExpr,stepKeyword,stepExpr)}return null},ParseInvokeOperator:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.InvokeKeyword),functionCall;return keyword!=null?(functionCall=this.ParseDotCompositeFunctionCall()||this.CreateMissingExpression(),new Kusto.Language.Syntax.InvokeOperator(keyword,functionCall)):null},ParseRenderWithClause:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.WithKeyword);if(keyword!=null){var open=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),leadingComma=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.CommaToken),props=this.ParseQueryOperatorParameterCommaList(Kusto.Language.Parsing.QueryParser.s_renderOperatorWithPropertiesMap,void 0,Kusto.Language.Parsing.AllowedNameKind.DeclaredOnly),close=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken);return new Kusto.Language.Syntax.RenderWithClause(keyword,open,leadingComma,props,close)}return null},ParseDeprecatedRenderProperty:function(){return this.ParseQueryOperatorParameter$1(Kusto.Language.QueryOperatorParameters.RenderKind)||this.ParseQueryOperatorParameter$1(Kusto.Language.QueryOperatorParameters.RenderTitle)||this.ParseQueryOperatorParameter$1(Kusto.Language.QueryOperatorParameters.RenderAccumulate)||(this.PeekToken().Kind===Kusto.Language.Syntax.SyntaxKind.WithKeyword&&this.PeekToken$1(1).Kind!==Kusto.Language.Syntax.SyntaxKind.OpenParenToken?this.ParseQueryOperatorParameter$1(Kusto.Language.QueryOperatorParameters.RenderWithDeprecated):null)||this.ParseQueryOperatorParameter$1(Kusto.Language.QueryOperatorParameters.RenderByDeprecated,Kusto.Language.Parsing.QueryParser.FnRenderDeprecatedParameterNameListEnd)},ParseRenderOperator:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.RenderKeyword);if(keyword!=null){var chartType=this.ParseToken$3(Kusto.Language.KustoFacts.ChartTypes)||this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.IdentifierToken)||Kusto.Language.Parsing.QueryParser.CreateMissingNameToken(Kusto.Language.KustoFacts.ChartTypes),parameters=this.ParseList(Kusto.Language.Syntax.NamedParameter,Kusto.Language.Parsing.QueryParser.FnParseDeprecatedRenderProperty),withClause=this.ParseRenderWithClause();return new Kusto.Language.Syntax.RenderOperator(keyword,chartType,parameters,withClause)}return null},ParsePrintOperator:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.PrintKeyword),expressions;return keyword!=null?(expressions=this.ParseCommaList(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.QueryParser.FnParseNamedExpression,Bridge.fn.cacheBind(this,this.CreateMissingExpression),Kusto.Language.Parsing.QueryParser.FnScanCommonListEnd,!0,!1),new Kusto.Language.Syntax.PrintOperator(keyword,expressions)):null},ParseEntityGroupReference:function(){var explicitEntityGroup=this.ParseEntityGroup();return explicitEntityGroup!=null?explicitEntityGroup:this.ScanQualifiedEntityStart()?this.ParseEntityPathExpression():this.ParseNameReference()},OptionalParseMacroExpandScopeReferenceName:function(){var asKeyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.AsKeyword),scopeReferenceName;return asKeyword!=null?(scopeReferenceName=this.ParseNameDeclaration()||this.CreateMissingNameDeclaration(),new Kusto.Language.Syntax.MacroExpandScopeReferenceName(asKeyword,scopeReferenceName)):null},ParseMacroExpand:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.MacroExpandKeyword);if(keyword!=null){var parameters=this.ParseQueryOperatorParameterList(Kusto.Language.Parsing.QueryParser.s_unionOperatorParameterMap,0,!0),entityGroupExpression=this.ParseEntityGroupReference()||this.CreateMissingExpression(),macroExpandScopeReferenceName=this.OptionalParseMacroExpandScopeReferenceName(),open=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),queryBlocksStatementList=this.ParseQueryBlockStatementList(),close=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken);return new Kusto.Language.Syntax.MacroExpandOperator(keyword,parameters,entityGroupExpression,macroExpandScopeReferenceName,open,queryBlocksStatementList,close)}return null},ParseAssertSchemaOperator:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.AssertSchemaKeyword),schema;return keyword!=null?(schema=this.ParseRowSchema()||Kusto.Language.Parsing.QueryParser.CreateMissingRowSchema(),new Kusto.Language.Syntax.AssertSchemaOperator(keyword,schema)):null},ParseMakeGraphOperator:function(){var makeGraphKeyword;if((makeGraphKeyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.MakeGraphKeyword))!=null){var parameters=this.ParseQueryOperatorParameterList(Kusto.Language.Parsing.QueryParser.s_graphMakeParameterMap,0,!0),sourceColumn=this.ParseNameReference()||this.CreateMissingNameReference(),directionToken=this.ParseToken$5("-->",Kusto.Language.Syntax.SyntaxKind.DashDashGreaterThanToken)||this.ParseToken$5("--",Kusto.Language.Syntax.SyntaxKind.DashDashToken)||Kusto.Language.Parsing.QueryParser.CreateMissingDirectionToken(),targetColumn=this.ParseNameReference()||this.CreateMissingNameReference(),withClause=this.ParseMakeGraphWithImplicitIdClause()||this.ParseMakeGraphWithTablesAndKeysClause(),partitionedByClause=this.ParseMakeGraphPartitionedByClause();return new Kusto.Language.Syntax.MakeGraphOperator(makeGraphKeyword,parameters,sourceColumn,directionToken,targetColumn,withClause,partitionedByClause)}return null},ParseMakeGraphWithTablesAndKeysClause:function(){var withKeyword,tablesAndKeys;return(withKeyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.WithKeyword))!=null?(tablesAndKeys=this.ParseCommaList(Kusto.Language.Syntax.MakeGraphTableAndKeyClause,Kusto.Language.Parsing.QueryParser.FnParseMakeGraphTableAndKeyClause,Kusto.Language.Parsing.QueryParser.CreateMissingMakeGraphTableAndKeyClause,Kusto.Language.Parsing.QueryParser.FnScanMakeGraphWhereClauseListEnd,!0,!1),new Kusto.Language.Syntax.MakeGraphWithTablesAndKeysClause(withKeyword,tablesAndKeys)):null},ScanMakeGraphTableAndKeyClauseListEnd:function(offset){return offset===void 0&&(offset=0),this.ScanCommonListEnd()||this.PeekToken$1(offset).Kind===Kusto.Language.Syntax.SyntaxKind.PartitionedByKeyword},ParseMakeGraphTableAndKeyClause:function(){var table,onKeyword,column;return(table=this.ParseInvocationExpression())!=null?(onKeyword=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.OnKeyword),column=this.ParseNameReference()||this.CreateMissingNameReference(),new Kusto.Language.Syntax.MakeGraphTableAndKeyClause(table,onKeyword,column)):null},ParseMakeGraphWithImplicitIdClause:function(){if(this.PeekToken().Kind===Kusto.Language.Syntax.SyntaxKind.WithNodeIdKeyword){var withNodeIdKeyword=this.ParseToken(),equalToken=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.EqualToken),name=this.ParseNameDeclaration()||this.CreateMissingNameDeclaration();return new Kusto.Language.Syntax.MakeGraphWithImplicitIdClause(withNodeIdKeyword,equalToken,name)}return null},ParseMakeGraphPartitionedByClause:function(){var partitionedByKeyword;if((partitionedByKeyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.PartitionedByKeyword))!=null){var entity=this.ParseSimplePathExpression()||this.CreateMissingNameReference(),openParen=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),subQuery=this.ParseContextualSubExpression()||this.CreateMissingExpression(),closeParen=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken);return new Kusto.Language.Syntax.MakeGraphPartitionedByClause(partitionedByKeyword,Bridge.cast(entity,Kusto.Language.Syntax.NameReference),openParen,subQuery,closeParen)}return null},ParseGraphMergeOperator:function(){var keyword,rightGraph,onClause;return(keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.GraphMergeKeyword))!=null?(rightGraph=this.ParseInvocationExpression()||this.CreateMissingExpression(),onClause=this.ParseJoinOnClause(),new Kusto.Language.Syntax.GraphMergeOperator(keyword,rightGraph,onClause)):null},ParseGraphMatchOperator:function(){var keyword;if((keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.GraphMatchKeyword))!=null){var parameters=this.ParseQueryOperatorParameterList(Kusto.Language.Parsing.QueryParser.s_graphMatchParameterMap,0,!0),patterns=this.ParseCommaList(Kusto.Language.Syntax.GraphMatchPattern,Kusto.Language.Parsing.QueryParser.FnParseGraphMatchPattern,Kusto.Language.Parsing.QueryParser.FnCreateMissingGraphMatchPattern,void 0,!0,!1),whereClause=this.ParseWhereClause(),projectClause=this.ParseProjectClause();return new Kusto.Language.Syntax.GraphMatchOperator(keyword,parameters,patterns,whereClause,projectClause)}return null},ParseGraphMatchPatternNode:function(){var open,name,close;return(open=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken))!=null?(name=this.ParseNameDeclaration(),close=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),new Kusto.Language.Syntax.GraphMatchPatternNode(open,name,close)):null},ParseGraphMatchPatternEdge:function(){var firstToken=this.ParseToken$5("-->",Kusto.Language.Syntax.SyntaxKind.DashDashGreaterThanToken)||this.ParseToken$5("<--",Kusto.Language.Syntax.SyntaxKind.LessThanDashDashToken)||this.ParseToken$5("--",Kusto.Language.Syntax.SyntaxKind.DashDashToken);if(firstToken!=null)return new Kusto.Language.Syntax.GraphMatchPatternEdge(firstToken,null,null,null);if(firstToken=this.ParseToken$5("-[",Kusto.Language.Syntax.SyntaxKind.DashBracketToken)||this.ParseToken$5("<-[",Kusto.Language.Syntax.SyntaxKind.LessThanDashBracketToken),firstToken!=null){var name=this.ParseNameDeclaration(),range=this.ParseGraphMatchPatternEdgeRange(),lastToken=this.ParseToken$5("]->",Kusto.Language.Syntax.SyntaxKind.BracketDashGreaterThanToken)||this.ParseToken$5("]-",Kusto.Language.Syntax.SyntaxKind.BracketDashToken)||Kusto.Language.Parsing.QueryParser.CreateMissingToken$1(Kusto.Language.Parsing.QueryParser.s_rangeEndTokens);return new Kusto.Language.Syntax.GraphMatchPatternEdge(firstToken,name,range,lastToken)}return null},ParseGraphMatchPatternEdgeRange:function(){var asterisk;if((asterisk=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.AsteriskToken))!=null){var rangeStart=this.ParseInvocationExpression()||Kusto.Language.Parsing.QueryParser.CreateMissingValue(),dotDotToken=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.DotDotToken),rangeEnd=this.ParseInvocationExpression()||this.CreateMissingExpression();return new Kusto.Language.Syntax.GraphMatchPatternEdgeRange(asterisk,rangeStart,dotDotToken,rangeEnd)}return null},ParseWhereClause:function(){var keyword,expression;return(keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.WhereKeyword))!=null?(expression=this.ParseExpression()||this.CreateMissingExpression(),new Kusto.Language.Syntax.WhereClause(keyword,expression)):null},ParseProjectClause:function(){var keyword,expressions;return(keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.ProjectKeyword))!=null?(expressions=this.ParseCommaList(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.QueryParser.FnParseNamedExpression,Bridge.fn.cacheBind(this,this.CreateMissingExpression),Kusto.Language.Parsing.QueryParser.FnScanCommonListEnd,!0,!1),new Kusto.Language.Syntax.ProjectClause(keyword,expressions)):null},ParseGraphToTableOperator:function(){var keyword,outputClause;return(keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.GraphToTableKeyword))!=null?(outputClause=this.ParseCommaList(Kusto.Language.Syntax.GraphToTableOutputClause,Kusto.Language.Parsing.QueryParser.FnParseGraphToTableOutputClause,Kusto.Language.Parsing.QueryParser.CreateGraphToTableOutputClause,void 0,!0,!1),new Kusto.Language.Syntax.GraphToTableOperator(keyword,outputClause)):null},ParseGraphToTableOutputClause:function(){var keywordToken=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.NodesKeyword)||this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.GraphEdgesKeyword),keyword;if(!((keyword=keywordToken)!=null))return null;var queryParams=keyword.Kind===Kusto.Language.Syntax.SyntaxKind.NodesKeyword?Kusto.Language.Parsing.QueryParser.s_graphToTableOperatorNodesParameterMap:Kusto.Language.Parsing.QueryParser.s_graphToTableOperatorEdgesParameterMap,asClause=this.ParseGraphToTableAsClause(),parameters=this.ParseQueryOperatorParameterList(queryParams,0,!0);return new Kusto.Language.Syntax.GraphToTableOutputClause(keyword,asClause,parameters)},ParseGraphToTableAsClause:function(){var keyword,name;return(keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.AsKeyword))!=null?(name=this.ParseNameDeclaration()||this.CreateMissingNameDeclaration(),new Kusto.Language.Syntax.GraphToTableAsClause(keyword,name)):null},ParseGraphMarkComponentsOperator:function(){var keyword,parameters;return(keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.GraphMarkComponentsKeyword))!=null?(parameters=this.ParseQueryOperatorParameterList(Kusto.Language.Parsing.QueryParser.s_GraphMarkComponentsParametersMap,0,!0),new Kusto.Language.Syntax.GraphMarkComponentsOperator(keyword,parameters)):null},ParseUnpipedQueryOperator:function(){switch(this.PeekToken().Kind){case Kusto.Language.Syntax.SyntaxKind.EvaluateKeyword:return this.ParseEvaluateOperator();case Kusto.Language.Syntax.SyntaxKind.FindKeyword:return this.ParseFindOperator();case Kusto.Language.Syntax.SyntaxKind.MacroExpandKeyword:return this.ParseMacroExpand();case Kusto.Language.Syntax.SyntaxKind.PrintKeyword:return this.ParsePrintOperator();case Kusto.Language.Syntax.SyntaxKind.SearchKeyword:return this.ParseSearchOperator();case Kusto.Language.Syntax.SyntaxKind.UnionKeyword:return this.ParseUnionOperator()}return null},ParsePipedQueryOperator:function(){switch(this.PeekToken().Kind){case Kusto.Language.Syntax.SyntaxKind.AsKeyword:return this.ParseAsOperator();case Kusto.Language.Syntax.SyntaxKind.ConsumeKeyword:return this.ParseConsumeOperator();case Kusto.Language.Syntax.SyntaxKind.CountKeyword:return this.ParseCountOperator();case Kusto.Language.Syntax.SyntaxKind.DistinctKeyword:return this.ParseDistinctOperator();case Kusto.Language.Syntax.SyntaxKind.EvaluateKeyword:return this.ParseEvaluateOperator();case Kusto.Language.Syntax.SyntaxKind.ExecuteAndCacheKeyword:return this.ParseExecuteAndCacheOperator();case Kusto.Language.Syntax.SyntaxKind.ExtendKeyword:return this.ParseExtendOperator();case Kusto.Language.Syntax.SyntaxKind.FacetKeyword:return this.ParseFacetOperator();case Kusto.Language.Syntax.SyntaxKind.FilterKeyword:case Kusto.Language.Syntax.SyntaxKind.WhereKeyword:return this.ParseFilterOperator();case Kusto.Language.Syntax.SyntaxKind.FindKeyword:return this.ParseFindOperator();case Kusto.Language.Syntax.SyntaxKind.ForkKeyword:return this.ParseForkOperator();case Kusto.Language.Syntax.SyntaxKind.GetSchemaKeyword:return this.ParseGetSchemaOperator();case Kusto.Language.Syntax.SyntaxKind.InvokeKeyword:return this.ParseInvokeOperator();case Kusto.Language.Syntax.SyntaxKind.JoinKeyword:return this.ParseJoinOperator();case Kusto.Language.Syntax.SyntaxKind.LookupKeyword:return this.ParseLookupOperator();case Kusto.Language.Syntax.SyntaxKind.MakeSeriesKeyword:return this.ParseMakeSeriesOperator();case Kusto.Language.Syntax.SyntaxKind.MvApplyKeyword:case Kusto.Language.Syntax.SyntaxKind.MvDashApplyKeyword:return this.ParseMvApplyOperator();case Kusto.Language.Syntax.SyntaxKind.MvExpandKeyword:case Kusto.Language.Syntax.SyntaxKind.MvDashExpandKeyword:return this.ParseMvExpandOperator();case Kusto.Language.Syntax.SyntaxKind.ParseKeyword:return this.ParseParseOperator();case Kusto.Language.Syntax.SyntaxKind.ParseWhereKeyword:return this.ParseParseWhereOperator();case Kusto.Language.Syntax.SyntaxKind.ParseKvKeyword:return this.ParseParseKvOperator();case Kusto.Language.Syntax.SyntaxKind.PartitionByKeyword:return this.ParsePartitionByOperator();case Kusto.Language.Syntax.SyntaxKind.PartitionKeyword:return this.ParsePartitionOperator();case Kusto.Language.Syntax.SyntaxKind.ProjectKeyword:return this.ParseProjectOperator();case Kusto.Language.Syntax.SyntaxKind.ProjectAwayKeyword:return this.ParseProjectAwayOperator();case Kusto.Language.Syntax.SyntaxKind.ProjectKeepKeyword:return this.ParseProjectKeepOperator();case Kusto.Language.Syntax.SyntaxKind.ProjectRenameKeyword:return this.ParseProjectRenameOperator();case Kusto.Language.Syntax.SyntaxKind.ProjectReorderKeyword:return this.ParseProjectReorderOperator();case Kusto.Language.Syntax.SyntaxKind.RangeKeyword:return this.ParseRangeOperator();case Kusto.Language.Syntax.SyntaxKind.ReduceKeyword:return this.ParseReduceByOperator();case Kusto.Language.Syntax.SyntaxKind.RenderKeyword:return this.ParseRenderOperator();case Kusto.Language.Syntax.SyntaxKind.SampleKeyword:return this.ParseSampleOperator();case Kusto.Language.Syntax.SyntaxKind.SampleDistinctKeyword:return this.ParseSampleDistinctOperator();case Kusto.Language.Syntax.SyntaxKind.ScanKeyword:return this.ParseScanOperator();case Kusto.Language.Syntax.SyntaxKind.SearchKeyword:return this.ParseSearchOperator();case Kusto.Language.Syntax.SyntaxKind.SerializeKeyword:return this.ParseSerializeOperator();case Kusto.Language.Syntax.SyntaxKind.SortKeyword:case Kusto.Language.Syntax.SyntaxKind.OrderKeyword:return this.ParseSortOperator();case Kusto.Language.Syntax.SyntaxKind.SummarizeKeyword:return this.ParseSummarizeOperator();case Kusto.Language.Syntax.SyntaxKind.TakeKeyword:case Kusto.Language.Syntax.SyntaxKind.LimitKeyword:return this.ParseTakeOperator();case Kusto.Language.Syntax.SyntaxKind.TopKeyword:return this.ParseTopOperator();case Kusto.Language.Syntax.SyntaxKind.TopHittersKeyword:return this.ParseTopHittersOperator();case Kusto.Language.Syntax.SyntaxKind.TopNestedKeyword:return this.ParseTopNestedOperator();case Kusto.Language.Syntax.SyntaxKind.UnionKeyword:return this.ParseUnionOperator();case Kusto.Language.Syntax.SyntaxKind.MakeGraphKeyword:return this.ParseMakeGraphOperator();case Kusto.Language.Syntax.SyntaxKind.GraphMergeKeyword:return this.ParseGraphMergeOperator();case Kusto.Language.Syntax.SyntaxKind.GraphMatchKeyword:return this.ParseGraphMatchOperator();case Kusto.Language.Syntax.SyntaxKind.GraphToTableKeyword:return this.ParseGraphToTableOperator();case Kusto.Language.Syntax.SyntaxKind.GraphMarkComponentsKeyword:return this.ParseGraphMarkComponentsOperator();case Kusto.Language.Syntax.SyntaxKind.AssertSchemaKeyword:return this.ParseAssertSchemaOperator();default:return null}},ScanPossibleQueryOperator:function(){var nameLen,kind=this.PeekToken().Kind;switch(kind){case Kusto.Language.Syntax.SyntaxKind.EvaluateKeyword:return this.ScanName(1)>0||this.ScanQueryOperatorParameterName(Kusto.Language.Parsing.AllowedNameKind.KnownOnly,!1,1)>0;case Kusto.Language.Syntax.SyntaxKind.FacetKeyword:return this.PeekToken$1(1).Kind===Kusto.Language.Syntax.SyntaxKind.ByKeyword;case Kusto.Language.Syntax.SyntaxKind.PartitionKeyword:return this.PeekToken$1(1).Kind===Kusto.Language.Syntax.SyntaxKind.ByKeyword||this.ScanQueryOperatorParameterName(Kusto.Language.Parsing.AllowedNameKind.KnownOnly,!1,1)>0;case Kusto.Language.Syntax.SyntaxKind.RangeKeyword:return(nameLen=this.ScanName(1))>0&&this.PeekToken$1(1+nameLen|0).Kind===Kusto.Language.Syntax.SyntaxKind.FromKeyword;case Kusto.Language.Syntax.SyntaxKind.ReduceKeyword:return this.PeekToken$1(1).Kind===Kusto.Language.Syntax.SyntaxKind.ByKeyword||this.ScanQueryOperatorParameterName(Kusto.Language.Parsing.AllowedNameKind.KnownOnly,!1,1)>0;case Kusto.Language.Syntax.SyntaxKind.RenderKeyword:return this.ScanToken(Kusto.Language.KustoFacts.ChartTypes,1)>0||this.ScanIdentifierOrKeywordAsIdentifier(1);case Kusto.Language.Syntax.SyntaxKind.ForkKeyword:case Kusto.Language.Syntax.SyntaxKind.LookupKeyword:case Kusto.Language.Syntax.SyntaxKind.PartitionByKeyword:return!1;case Kusto.Language.Syntax.SyntaxKind.AsKeyword:case Kusto.Language.Syntax.SyntaxKind.AssertSchemaKeyword:case Kusto.Language.Syntax.SyntaxKind.ConsumeKeyword:case Kusto.Language.Syntax.SyntaxKind.CountKeyword:case Kusto.Language.Syntax.SyntaxKind.DistinctKeyword:case Kusto.Language.Syntax.SyntaxKind.ExecuteAndCacheKeyword:case Kusto.Language.Syntax.SyntaxKind.ExtendKeyword:case Kusto.Language.Syntax.SyntaxKind.FilterKeyword:case Kusto.Language.Syntax.SyntaxKind.FindKeyword:case Kusto.Language.Syntax.SyntaxKind.GetSchemaKeyword:case Kusto.Language.Syntax.SyntaxKind.GraphMatchKeyword:case Kusto.Language.Syntax.SyntaxKind.GraphMergeKeyword:case Kusto.Language.Syntax.SyntaxKind.GraphToTableKeyword:case Kusto.Language.Syntax.SyntaxKind.InvokeKeyword:case Kusto.Language.Syntax.SyntaxKind.JoinKeyword:case Kusto.Language.Syntax.SyntaxKind.LimitKeyword:case Kusto.Language.Syntax.SyntaxKind.MacroExpandKeyword:case Kusto.Language.Syntax.SyntaxKind.MakeGraphKeyword:case Kusto.Language.Syntax.SyntaxKind.GraphMarkComponentsKeyword:case Kusto.Language.Syntax.SyntaxKind.MakeSeriesKeyword:case Kusto.Language.Syntax.SyntaxKind.MvApplyKeyword:case Kusto.Language.Syntax.SyntaxKind.MvDashApplyKeyword:case Kusto.Language.Syntax.SyntaxKind.MvExpandKeyword:case Kusto.Language.Syntax.SyntaxKind.MvDashExpandKeyword:case Kusto.Language.Syntax.SyntaxKind.OrderKeyword:case Kusto.Language.Syntax.SyntaxKind.ParseKeyword:case Kusto.Language.Syntax.SyntaxKind.ParseWhereKeyword:case Kusto.Language.Syntax.SyntaxKind.ParseKvKeyword:case Kusto.Language.Syntax.SyntaxKind.PrintKeyword:case Kusto.Language.Syntax.SyntaxKind.ProjectKeyword:case Kusto.Language.Syntax.SyntaxKind.ProjectAwayKeyword:case Kusto.Language.Syntax.SyntaxKind.ProjectKeepKeyword:case Kusto.Language.Syntax.SyntaxKind.ProjectRenameKeyword:case Kusto.Language.Syntax.SyntaxKind.ProjectReorderKeyword:case Kusto.Language.Syntax.SyntaxKind.SampleKeyword:case Kusto.Language.Syntax.SyntaxKind.SampleDistinctKeyword:case Kusto.Language.Syntax.SyntaxKind.ScanKeyword:case Kusto.Language.Syntax.SyntaxKind.SearchKeyword:case Kusto.Language.Syntax.SyntaxKind.SerializeKeyword:case Kusto.Language.Syntax.SyntaxKind.SortKeyword:case Kusto.Language.Syntax.SyntaxKind.SummarizeKeyword:case Kusto.Language.Syntax.SyntaxKind.TakeKeyword:case Kusto.Language.Syntax.SyntaxKind.TopKeyword:case Kusto.Language.Syntax.SyntaxKind.TopHittersKeyword:case Kusto.Language.Syntax.SyntaxKind.TopNestedKeyword:case Kusto.Language.Syntax.SyntaxKind.UnionKeyword:case Kusto.Language.Syntax.SyntaxKind.WhereKeyword:return!Kusto.Language.Syntax.SyntaxFacts.CanBeIdentifier(kind);default:return!1}},ParseBadQueryOperator:function(){var id=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.IdentifierToken);return id!=null?new Kusto.Language.Syntax.BadQueryOperator(id,System.Array.init([Kusto.Language.DiagnosticFacts.GetQueryOperatorExpected()],Kusto.Language.Diagnostic)):null},ParseRequiredQueryOperator:function(){return this.ParsePipedQueryOperator()||this.ParseUnpipedQueryOperator()||this.ParseBadQueryOperator()||Kusto.Language.Parsing.QueryParser.CreateMissingQueryOperator()},ParsePipeExpression:function(){var expr=this.ScanPossibleQueryOperator()?this.ParseUnpipedQueryOperator()||this.ParsePipedQueryOperator()||this.ParseUnnamedExpression():this.ParseUnnamedExpression()||this.ParseUnpipedQueryOperator()||this.ParsePipedQueryOperator(),pipe,pipedOperator;if(expr!=null)while(this.PeekToken().Kind===Kusto.Language.Syntax.SyntaxKind.BarToken)pipe=this.ParseToken(),pipedOperator=this.ParseRequiredQueryOperator(),expr=new Kusto.Language.Syntax.PipeExpression(expr,pipe,pipedOperator);return expr},ParsePipeSubExpression:function(){var expr=this.ParseRequiredQueryOperator(),pipe,pipedOperator;if(expr!=null)while(this.PeekToken().Kind===Kusto.Language.Syntax.SyntaxKind.BarToken)pipe=this.ParseToken(),pipedOperator=this.ParseRequiredQueryOperator(),expr=new Kusto.Language.Syntax.PipeExpression(expr,pipe,pipedOperator);return expr},ParseContextualSubExpression:function(){var expr=Bridge.cast(this.ParseContextualDataTableExpression(),Kusto.Language.Syntax.Expression)||this.ParseRequiredQueryOperator(),pipe,pipedOperator;if(expr!=null)while(this.PeekToken().Kind===Kusto.Language.Syntax.SyntaxKind.BarToken)pipe=this.ParseToken(),pipedOperator=this.ParseRequiredQueryOperator(),expr=new Kusto.Language.Syntax.PipeExpression(expr,pipe,pipedOperator);return expr},ParseExpression:function(){return this.ParsePipeExpression()},ParseAliasStatement:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.AliasKeyword);if(keyword!=null){var database=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.DatabaseKeyword),name=this.ParseNameDeclaration()||this.CreateMissingNameDeclaration(),equal=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.EqualToken),expr=this.ParseUnnamedExpression()||this.CreateMissingExpression();return new Kusto.Language.Syntax.AliasStatement(keyword,database,name,equal,expr)}return null},ParseMaterializeExpression:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.MaterializeKeyword);if(keyword!=null){var open=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),expr=this.ParsePipeExpression()||this.CreateMissingExpression(),close=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken);return new Kusto.Language.Syntax.MaterializeExpression(keyword,open,expr,close)}return null},ParseDefaultValueDeclaration:function(){var equal=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.EqualToken),expr;return equal!=null?(expr=this.ParseLiteral()||this.ParseIdentifierOrKeywordTokenLiteral()||this.CreateMissingExpression(),new Kusto.Language.Syntax.DefaultValueDeclaration(equal,expr)):null},ParseFunctionParameter:function(){var name=this.ParseNameAndTypeDeclaration(),defValue;return name!=null?(defValue=this.ParseDefaultValueDeclaration(),new Kusto.Language.Syntax.FunctionParameter(name,defValue)):null},ParseFunctionParameters:function(){var open=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),parameters,close;return open!=null?(parameters=this.ParseCommaList(Kusto.Language.Syntax.FunctionParameter,Kusto.Language.Parsing.QueryParser.FnParseFunctionParameter,Kusto.Language.Parsing.QueryParser.CreateMissingFunctionParameter,Kusto.Language.Parsing.QueryParser.FnScanCommonListEnd),close=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),new Kusto.Language.Syntax.FunctionParameters(open,parameters,close)):null},ParseFunctionBodyStatement:function(){var statement=this.ParseLetStatement()||this.ParseQueryParametersStatement();return statement!=null?new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement))(statement,this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.SemicolonToken)):null},ParseFunctionBody:function(){var open=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.OpenBraceToken);if(open!=null){var statements=this.ParseList(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement),Kusto.Language.Parsing.QueryParser.FnParseFunctionBodyStatements,Kusto.Language.Parsing.QueryParser.CreateMissingStatementElement,Kusto.Language.Parsing.QueryParser.FnScanCommonListEnd),expr=this.ParseExpression(),semicolon=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.SemicolonToken),close=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseBraceToken);return new Kusto.Language.Syntax.FunctionBody(open,statements,expr,semicolon,close)}return null},ScanFunctionDeclarationStart:function(offset){var token,nextKind,nameLen;return(offset===void 0&&(offset=0),token=this.PeekToken$1(offset),token.Kind===Kusto.Language.Syntax.SyntaxKind.ViewKeyword&&(offset=offset+1|0,token=this.PeekToken$1(offset)),token.Kind===Kusto.Language.Syntax.SyntaxKind.OpenParenToken)?(nextKind=this.PeekToken$1(offset+1|0).Kind,nextKind===Kusto.Language.Syntax.SyntaxKind.CloseParenToken||nextKind===Kusto.Language.Syntax.SyntaxKind.AsteriskToken)?!0:(nameLen=this.ScanExtendedName(offset+1|0),nameLen>0&&this.PeekToken$1((offset+1|0)+nameLen|0).Kind===Kusto.Language.Syntax.SyntaxKind.ColonToken):!1},ParseFunctionDeclaration:function(){switch(this.PeekToken().Kind){case Kusto.Language.Syntax.SyntaxKind.ViewKeyword:return new Kusto.Language.Syntax.FunctionDeclaration(this.ParseToken(),this.ParseFunctionParameters()||Kusto.Language.Parsing.QueryParser.CreateMissingFunctionParameters(),this.ParseFunctionBody()||Kusto.Language.Parsing.QueryParser.CreateMissingFunctionBody());case Kusto.Language.Syntax.SyntaxKind.OpenParenToken:return new Kusto.Language.Syntax.FunctionDeclaration(null,this.ParseFunctionParameters()||Kusto.Language.Parsing.QueryParser.CreateMissingFunctionParameters(),this.ParseFunctionBody()||Kusto.Language.Parsing.QueryParser.CreateMissingFunctionBody());default:return null}},ParseEntityGroup:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.EntityGroupKeyword);if(keyword!=null){var open=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.OpenBracketToken),expressions=this.ParseCommaList(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.QueryParser.FnParseUnnamedExpression,Bridge.fn.cacheBind(this,this.CreateMissingExpression),Kusto.Language.Parsing.QueryParser.FnScanCommonListEnd,!0,!1),close=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseBracketToken);return new Kusto.Language.Syntax.EntityGroup(keyword,open,expressions,close)}return null},ParseLetStatement:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.LetKeyword),name,equal;return keyword!=null?(name=this.ParseNameDeclaration()||this.CreateMissingNameDeclaration(),equal=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.EqualToken),this.PeekToken().Kind===Kusto.Language.Syntax.SyntaxKind.MaterializeKeyword?new Kusto.Language.Syntax.LetStatement(keyword,name,equal,this.ParseMaterializeExpression()):this.PeekToken().Kind===Kusto.Language.Syntax.SyntaxKind.EntityGroupKeyword?new Kusto.Language.Syntax.LetStatement(keyword,name,equal,this.ParseEntityGroup()):this.ScanFunctionDeclarationStart()?new Kusto.Language.Syntax.LetStatement(keyword,name,equal,this.ParseFunctionDeclaration()):new Kusto.Language.Syntax.LetStatement(keyword,name,equal,this.ParseExpression()||this.CreateMissingExpression())):null},ParseOptionValueClause:function(){var equal=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.EqualToken),expr;return equal!=null?(expr=this.ParseUnnamedExpression()||this.CreateMissingExpression(),new Kusto.Language.Syntax.OptionValueClause(equal,expr)):null},ParseSetOptionStatement:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.SetKeyword),name,valueClause;return keyword!=null?(name=this.ParseNameDeclaration()||this.CreateMissingNameDeclaration(),valueClause=this.ParseOptionValueClause(),new Kusto.Language.Syntax.SetOptionStatement(keyword,name,valueClause)):null},ParseQueryParametersStatement:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.DeclareKeyword);if(keyword!=null){var parametersKeyword=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.QueryParametersKeyword),open=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),parameters=this.ParseCommaList(Kusto.Language.Syntax.FunctionParameter,Kusto.Language.Parsing.QueryParser.FnParseFunctionParameter,Kusto.Language.Parsing.QueryParser.CreateMissingFunctionParameter,Kusto.Language.Parsing.QueryParser.FnScanCommonListEnd,!0,!1),close=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken);return new Kusto.Language.Syntax.QueryParametersStatement(keyword,parametersKeyword,open,parameters,close)}return null},ParseRestrictExpression:function(){return this.ParseBest(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.QueryParser.ParseRestrictExpressionParsers)},ParseRestrictStatement:function(){var keyword=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.RestrictKeyword);if(keyword!=null){var accessKeyword=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.AccessKeyword),toKeyword=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.ToKeyword),open=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),expressions=this.ParseCommaList(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.QueryParser.FnParseRestrictExpression,Bridge.fn.cacheBind(this,this.CreateMissingExpression),Kusto.Language.Parsing.QueryParser.FnScanCommonListEnd,!0,!1),close=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken);return new Kusto.Language.Syntax.RestrictStatement(keyword,accessKeyword,toKeyword,open,expressions,close)}return null},ParsePatternPathValue:function(){var dot=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.DotToken);if(dot!=null){var open=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.OpenBracketToken),value=this.ParseLiteral()||Kusto.Language.Parsing.QueryParser.CreateMissingStringLiteral(),close=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseBracketToken);return new Kusto.Language.Syntax.PatternPathValue(dot,open,value,close)}return null},ParsePatternMatchStatementElement:function(){var statement=this.ParseLetStatement(),semicolon;return statement!=null?(semicolon=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.SemicolonToken),new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement))(statement,semicolon)):null},ParseRequiredPatternMatchFunctionBody:function(){var open=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.OpenBraceToken),statements=this.ParseList(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement),Kusto.Language.Parsing.QueryParser.FnParsePatternMatchStatementElement,Kusto.Language.Parsing.QueryParser.CreateMissingStatementElement,Kusto.Language.Parsing.QueryParser.FnScanCommonListEnd),expr=this.ParseExpression(),semicolon=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.SemicolonToken),close=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseBraceToken);return new Kusto.Language.Syntax.FunctionBody(open,statements,expr,semicolon,close)},ParsePatternMatch:function(){var open=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.OpenParenToken);if(open!=null){var expressions=this.ParseCommaList(Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.QueryParser.FnParseUnnamedExpression,Kusto.Language.Parsing.QueryParser.CreateMissingStringLiteral,Kusto.Language.Parsing.QueryParser.FnScanCommonListEnd,!0,!1),close=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),pathValue=this.ParsePatternPathValue(),equal=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.EqualToken),body=this.ParseRequiredPatternMatchFunctionBody(),semicolon=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.SemicolonToken);return new Kusto.Language.Syntax.PatternMatch(new Kusto.Language.Syntax.ExpressionList(open,expressions,close),pathValue,equal,body,semicolon)}return null},ParsePatternPathParameter:function(){var open=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.OpenBracketToken),name,close;return open!=null?(name=this.ParseNameAndTypeDeclaration()||Kusto.Language.Parsing.QueryParser.CreateMissingNameAndTypeDeclaration(),close=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseBracketToken),new Kusto.Language.Syntax.PatternPathParameter(open,name,close)):null},ParsePatternDeclaration:function(){var equal=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.EqualToken);if(equal!=null){var openP=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),decls=this.ParseCommaList(Kusto.Language.Syntax.NameAndTypeDeclaration,Kusto.Language.Parsing.QueryParser.FnParseNameAndTypeDeclaration,Kusto.Language.Parsing.QueryParser.CreateMissingNameAndTypeDeclaration,Kusto.Language.Parsing.QueryParser.FnScanCommonListEnd),closeP=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),path=this.ParsePatternPathParameter(),openB=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.OpenBraceToken),matches=this.ParseList(Kusto.Language.Syntax.PatternMatch,Kusto.Language.Parsing.QueryParser.FnParsePatternMatch,Kusto.Language.Parsing.QueryParser.CreateMissingPatternMatch,Kusto.Language.Parsing.QueryParser.FnScanCommonListEnd,!0),closeB=this.ParseRequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseBraceToken);return new Kusto.Language.Syntax.PatternDeclaration(equal,openP,decls,closeP,path,openB,matches,closeB)}return null},ParsePatternStatement:function(){if(this.PeekToken().Kind===Kusto.Language.Syntax.SyntaxKind.DeclareKeyword&&this.PeekToken$1(1).Kind===Kusto.Language.Syntax.SyntaxKind.PatternKeyword){var declare=this.ParseToken(),pattern=this.ParseToken(),name=this.ParseNameDeclaration()||this.CreateMissingNameDeclaration(),declaration=this.ParsePatternDeclaration();return new Kusto.Language.Syntax.PatternStatement(declare,pattern,name,declaration)}return null},ParseQueryBlockStatement:function(){if(this.ScanPossibleStatement())switch(this.PeekToken().Kind){case Kusto.Language.Syntax.SyntaxKind.AliasKeyword:return this.ParseAliasStatement();case Kusto.Language.Syntax.SyntaxKind.LetKeyword:return this.ParseLetStatement();case Kusto.Language.Syntax.SyntaxKind.SetKeyword:return this.ParseSetOptionStatement();case Kusto.Language.Syntax.SyntaxKind.DeclareKeyword:return this.PeekToken$1(1).Kind===Kusto.Language.Syntax.SyntaxKind.PatternKeyword?this.ParsePatternStatement():this.ParseQueryParametersStatement();case Kusto.Language.Syntax.SyntaxKind.RestrictKeyword:return this.ParseRestrictStatement()}var expr=this.ParseExpression();return expr!=null?new Kusto.Language.Syntax.ExpressionStatement(expr):null},ScanPossibleStatement:function(){switch(this.PeekToken().Kind){case Kusto.Language.Syntax.SyntaxKind.AliasKeyword:return this.PeekToken$1(1).Kind===Kusto.Language.Syntax.SyntaxKind.DatabaseKeyword;case Kusto.Language.Syntax.SyntaxKind.LetKeyword:return this.ScanName(1)>0;case Kusto.Language.Syntax.SyntaxKind.DeclareKeyword:return this.PeekToken$1(1).Kind===Kusto.Language.Syntax.SyntaxKind.PatternKeyword||this.PeekToken$1(1).Kind===Kusto.Language.Syntax.SyntaxKind.QueryParametersKeyword;case Kusto.Language.Syntax.SyntaxKind.RestrictKeyword:return this.PeekToken$1(1).Kind===Kusto.Language.Syntax.SyntaxKind.AccessKeyword;case Kusto.Language.Syntax.SyntaxKind.SetKeyword:return!0;default:return!1}},ParseQueryBlockStatementList:function(){for(var list=new(System.Collections.Generic.List$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)).ctor),statement=this.ParseQueryBlockStatement(),semicolon,nextStatement;statement!=null;)if(semicolon=this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.SemicolonToken),semicolon!=null){list.add(new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement))(statement,semicolon));statement=this.ParseQueryBlockStatement();continue}else nextStatement=this.ParseQueryBlockStatement(),nextStatement!=null?list.add(new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement))(statement,Kusto.Language.Parsing.QueryParser.CreateMissingToken(Kusto.Language.Syntax.SyntaxKind.SemicolonToken))):list.add(new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement))(statement,null)),statement=nextStatement;return new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)).$ctor1)(list)},ParseSkippedTokens:function(){for(var tokens=null,kind=new Kusto.Language.Syntax.SyntaxKind;(kind=this.PeekToken().Kind)!==Kusto.Language.Syntax.SyntaxKind.EndOfTextToken&&kind!==Kusto.Language.Syntax.SyntaxKind.None;)tokens==null&&(tokens=new(System.Collections.Generic.List$1(Kusto.Language.Syntax.SyntaxToken).ctor)),tokens.add(this.ParseToken());return tokens!=null?(tokens.setItem(0,Bridge.cast(tokens.getItem(0).WithAdditionalDiagnostics([Kusto.Language.DiagnosticFacts.GetIncompleteFragment()]),Kusto.Language.Syntax.SyntaxToken)),new Kusto.Language.Syntax.SkippedTokens(new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SyntaxToken).$ctor1)(tokens))):null},ParseQuery:function(){return new Kusto.Language.Syntax.QueryBlock(this.ParseQueryBlockStatementList(),this.ParseSkippedTokens(),this.ParseToken$1(Kusto.Language.Syntax.SyntaxKind.EndOfTextToken))}}});Bridge.define("Kusto.Language.Parsing.RightParser$2",function(TInput,TOutput){return{$kind:"struct",statics:{methods:{getDefaultValue:function(){return new(Kusto.Language.Parsing.RightParser$2(TInput,TOutput))}}},props:{Parser:null},ctors:{$ctor1:function(parser){this.$initialize();this.Parser=parser},ctor:function(){this.$initialize()}},methods:{WithTag:function(tag){return new(Kusto.Language.Parsing.RightParser$2(TInput,TOutput).$ctor1)(this.Parser.WithTag$1(tag))},WithAnnotations:function(annotations){return new(Kusto.Language.Parsing.RightParser$2(TInput,TOutput).$ctor1)(this.Parser.WithAnnotations$1(annotations))},WithIsHidden:function(isHidden){return new(Kusto.Language.Parsing.RightParser$2(TInput,TOutput).$ctor1)(this.Parser.WithIsHidden$1(isHidden))},Hide:function(){return this.WithIsHidden(!0)},getHashCode:function(){return Bridge.addHash([3678084921,this.Parser])},equals:function(o){return Bridge.is(o,Kusto.Language.Parsing.RightParser$2(TInput,TOutput))?Bridge.equals(this.Parser,o.Parser):!1},$clone:function(to){return this}}}});Bridge.define("Kusto.Language.Parsing.SafeParser",{statics:{methods:{ParseSafe:function(TInput,parser,source,inputStart,output,outputStart){var ssp=Kusto.Language.Parsing.SafeParser.ParserPool$1(TInput).Pool.AllocateFromPool();try{return ssp.Initialize(source,output),ssp.Parse(parser,inputStart,outputStart)}finally{Kusto.Language.Parsing.SafeParser.ParserPool$1(TInput).Pool.ReturnToPool(ssp)}}}}});Bridge.define("Kusto.Language.Parsing.SafeParser.ParserPool$1",function(TInput){return{$kind:"nested class",statics:{fields:{Pool:null},ctors:{init:function(){this.Pool=new(Kusto.Language.Utils.ObjectPool$1(Kusto.Language.Parsing.StackSafeParser$1(TInput)))(function(){return new(Kusto.Language.Parsing.StackSafeParser$1(TInput))(null,null)},function(p){p.Clear()})}}}}});Bridge.define("Kusto.Language.Parsing.SafeScanner",{statics:{methods:{ScanSafe:function(TInput,parser,source,start){var sss=Kusto.Language.Parsing.SafeScanner.ScannerPool$1(TInput).Pool.AllocateFromPool();try{return sss.Initialize(source),sss.Scan(parser,start)}finally{Kusto.Language.Parsing.SafeScanner.ScannerPool$1(TInput).Pool.ReturnToPool(sss)}}}}});Bridge.define("Kusto.Language.Parsing.SafeScanner.ScannerPool$1",function(TInput){return{$kind:"nested class",statics:{fields:{Pool:null},ctors:{init:function(){this.Pool=new(Kusto.Language.Utils.ObjectPool$1(Kusto.Language.Parsing.StackSafeScanner$1(TInput)))(function(){return new(Kusto.Language.Parsing.StackSafeScanner$1(TInput))(null)},function(s){s.Clear()})}}}}});Bridge.define("Kusto.Language.Parsing.ScannerExtensions",{statics:{fields:{s_sourcePool:null},ctors:{init:function(){this.s_sourcePool=new(Kusto.Language.Utils.ObjectPool$1(Kusto.Language.Parsing.ScannerExtensions.ReuseableTextSource))(function(){return new Kusto.Language.Parsing.ScannerExtensions.ReuseableTextSource},function(source){source.Clear()})}},methods:{Matches:function(scanner,text){return Kusto.Language.Parsing.ScannerExtensions.Matches$1(scanner,text,0,text.length)},Matches$1:function(scanner,text,offset,length){var source=Kusto.Language.Parsing.ScannerExtensions.s_sourcePool.AllocateFromPool(),len;try{return source.Init(text),len=scanner.Scan(source,offset),len===length}finally{Kusto.Language.Parsing.ScannerExtensions.s_sourcePool.ReturnToPool(source)}}}}});Bridge.define("Kusto.Language.Parsing.SyntaxParsers",{statics:{fields:{AnyToken:null,AnyTokenButEnd:null,EndOfText:null,EndOfCommaList:null},ctors:{init:function(){this.AnyToken=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Match$7(Kusto.Language.Syntax.SyntaxToken,function(t){return!0},function(t){return Kusto.Language.Syntax.SyntaxToken.From(t)}).WithTag$1("<any>");this.AnyTokenButEnd=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Match$7(Kusto.Language.Syntax.SyntaxToken,function(t){return t.Kind!==Kusto.Language.Syntax.SyntaxKind.EndOfTextToken},function(t){return Kusto.Language.Syntax.SyntaxToken.From(t)}).WithTag$1("<any!end>");this.EndOfText=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Match$3(function(t){return t.Kind===Kusto.Language.Syntax.SyntaxKind.EndOfTextToken});this.EndOfCommaList=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Match$3(function(t){return t.Kind===Kusto.Language.Syntax.SyntaxKind.EndOfTextToken||t.Kind===Kusto.Language.Syntax.SyntaxKind.CloseParenToken||t.Kind===Kusto.Language.Syntax.SyntaxKind.CloseBracketToken||t.Kind===Kusto.Language.Syntax.SyntaxKind.CloseBraceToken||t.Kind===Kusto.Language.Syntax.SyntaxKind.BarToken||t.Kind===Kusto.Language.Syntax.SyntaxKind.SemicolonToken})}},methods:{CreateMissingToken:function(kind,diagnostic){diagnostic===void 0&&(diagnostic=null);var dx=diagnostic||(kind===Kusto.Language.Syntax.SyntaxKind.IdentifierToken?Kusto.Language.DiagnosticFacts.GetMissingName():Kusto.Language.DiagnosticFacts.GetTokenExpected([kind]));return Kusto.Language.Syntax.SyntaxToken.Missing$1("",kind,System.Array.init([dx],Kusto.Language.Diagnostic))},CreateMissingToken$1:function(kinds){return Kusto.Language.Syntax.SyntaxToken.Missing$1("",System.Array.getItem(kinds,0,Kusto.Language.Syntax.SyntaxKind),System.Array.init([Kusto.Language.DiagnosticFacts.GetTokenExpected$2(kinds)],Kusto.Language.Diagnostic))},CreateMissingToken$3:function(text,diagnostic){diagnostic===void 0&&(diagnostic=null);var kind={v:new Kusto.Language.Syntax.SyntaxKind};return Kusto.Language.Syntax.SyntaxFacts.TryGetKind(text,kind)||(kind.v=Kusto.Language.Syntax.SyntaxKind.IdentifierToken),Kusto.Language.Syntax.SyntaxToken.Missing$1("",kind.v,System.Array.init([diagnostic||Kusto.Language.DiagnosticFacts.GetTokenExpected$3(System.Array.init([text],System.String))],Kusto.Language.Diagnostic))},CreateMissingToken$2:function(texts){return Kusto.Language.Syntax.SyntaxToken.Missing$1("",Kusto.Language.Syntax.SyntaxKind.IdentifierToken,System.Array.init([Kusto.Language.DiagnosticFacts.GetTokenExpected$1(texts)],Kusto.Language.Diagnostic))},GetDefaultTag$1:function(text){var kind={v:new Kusto.Language.Syntax.SyntaxKind};return Kusto.Language.Syntax.SyntaxFacts.TryGetKind(text,kind)?Kusto.Language.Parsing.SyntaxParsers.GetDefaultTag(kind.v):text},GetDefaultTag:function(kind){var $t;return Kusto.Language.Syntax.SyntaxFacts.GetCategory(kind)===Kusto.Language.Syntax.SyntaxCategory.Punctuation?System.String.format("'{0}'",[Kusto.Language.Syntax.SyntaxFacts.GetText(kind)]):($t=Kusto.Language.Syntax.SyntaxFacts.GetText(kind),$t!=null?$t:System.Enum.toString(Kusto.Language.Syntax.SyntaxKind,kind).toLowerCase())},Token$1:function(kind,ckind,priority,ctext){var $t,item;return ckind===void 0&&(ckind=null),priority===void 0&&(priority=3),ctext===void 0&&(ctext=null),item=Kusto.Language.Parsing.SyntaxParsers.CreateCompletionItem(kind,($t=ckind,$t!=null?$t:Kusto.Language.Parsing.SyntaxParsers.GetCompletionKind(kind)),priority,ctext),Kusto.Language.Parsing.SyntaxParsers.Token(kind,[item])},Token:function(kind,items){items===void 0&&(items=[]);var rule=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Match$7(Kusto.Language.Syntax.SyntaxToken,function(t){return t.Kind===kind},function(lt){return Kusto.Language.Syntax.SyntaxToken.From(lt)}).WithTag$1(Kusto.Language.Parsing.SyntaxParsers.GetDefaultTag(kind));return items!=null&&items.length===0&&(items=System.Array.init([Kusto.Language.Parsing.SyntaxParsers.CreateCompletionItem(kind,Kusto.Language.Parsing.SyntaxParsers.GetCompletionKind(kind),Kusto.Language.Editor.CompletionPriority.Normal,null)],Kusto.Language.Editor.CompletionItem)),items!=null&&(rule=rule.WithAnnotations$1(items)),rule},Token$2:function(kinds,defaultKind,priority){var $t;defaultKind===void 0&&(defaultKind=null);priority===void 0&&(priority=3);var set=new(System.Collections.Generic.HashSet$1(Kusto.Language.Syntax.SyntaxKind).$ctor1)(kinds),rule=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Match$7(Kusto.Language.Syntax.SyntaxToken,function(t){return set.contains(t.Kind)},function(lt){return Kusto.Language.Syntax.SyntaxToken.From(lt)}).WithTag$1(Bridge.toArray(System.Linq.Enumerable.from(kinds,Kusto.Language.Syntax.SyntaxKind).select(function(k){return Kusto.Language.Parsing.SyntaxParsers.GetDefaultTag(k)})).join(" | ")),items=($t=Kusto.Language.Editor.CompletionItem,System.Linq.Enumerable.from(Kusto.Language.Parsing.SyntaxParsers.GetCompletionItems(set,defaultKind,priority),$t).toList($t));return items.Count>0&&(rule=rule.WithAnnotations$1(items)),rule},Token$5:function(text,asKind,ckind,priority,ctext){var $t,rule,item;return asKind===void 0&&(asKind=null),ckind===void 0&&(ckind=null),priority===void 0&&(priority=3),ctext===void 0&&(ctext=null),rule=Kusto.Language.Parsing.SyntaxParsers.MatchText(text,asKind).WithTag$1(Kusto.Language.Parsing.SyntaxParsers.GetDefaultTag$1(text)),item=Kusto.Language.Parsing.SyntaxParsers.CreateCompletionItem$1(text,($t=ckind,$t!=null?$t:Kusto.Language.Parsing.SyntaxParsers.GetCompletionKind$1(text)),priority,ctext),Kusto.Language.Parsing.SyntaxParsers.WithCompletion(Kusto.Language.Syntax.SyntaxToken,rule,[item])},Token$4:function(text,ckind,priority,ctext){priority===void 0&&(priority=3);ctext===void 0&&(ctext=null);var rule=Kusto.Language.Parsing.SyntaxParsers.MatchText(text).WithTag$1(Kusto.Language.Parsing.SyntaxParsers.GetDefaultTag$1(text)),item=Kusto.Language.Parsing.SyntaxParsers.CreateCompletionItem$1(text,ckind,priority,ctext);return Kusto.Language.Parsing.SyntaxParsers.WithCompletion(Kusto.Language.Syntax.SyntaxToken,rule,[item])},Token$3:function(texts,defaultKind,priority){var $t,rule,items;return defaultKind===void 0&&(defaultKind=null),priority===void 0&&(priority=3),rule=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxToken,System.Linq.Enumerable.from(texts,System.String).select(function(t){return Kusto.Language.Parsing.SyntaxParsers.MatchText(t)}).ToArray(Kusto.Language.Parsing.Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxToken))).WithTag$1(Bridge.toArray(System.Linq.Enumerable.from(texts,System.String).select(function(t){return Kusto.Language.Parsing.SyntaxParsers.GetDefaultTag$1(t)})).join(" | ")),items=($t=Kusto.Language.Editor.CompletionItem,System.Linq.Enumerable.from(Kusto.Language.Parsing.SyntaxParsers.GetCompletionItems$1(texts,defaultKind,priority),$t).toList($t)),items.Count>0&&(rule=rule.WithAnnotations$1(items)),rule},WithCompletion:function(TElement,parser,items){return items===void 0&&(items=[]),parser.WithAnnotations$1(System.Linq.Enumerable.from(parser.Annotations,System.Object).where(function(a){return!Bridge.is(a,Kusto.Language.Editor.CompletionItem)}).concat(items))},WithCompletionHint:function(TElement,parser,hint){return parser.WithAnnotations$1(System.Linq.Enumerable.from(parser.Annotations,System.Object).where(function(a){return!Bridge.is(a,System.Int32)}).concat(System.Array.init([Bridge.box(hint,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))],System.Object)))},MatchesText:function(source,start,text){for(var $t,textOffset=0,i=0,token;!source.IsEnd(start+i|0);i=i+1|0){if(token=source.Peek(start+i|0),i>0&&token.Trivia.length>0)break;if(token.Text.length>(text.length-textOffset|0))break;if(($t=token.Text.length,System.String.compare(token.Text.substr(0,$t),text.substr(textOffset,$t)))!==0)break;if(textOffset=textOffset+token.Text.length|0,textOffset===text.length)return i+1|0}return-(i+1|0)|0},ProduceSyntaxToken:function(source,start,length,asKind){var token,text,i;if(asKind===void 0&&(asKind=null),token=source.Peek(start),token!=null){for(text=token.Text,i=1;i<length;i=i+1|0){if(token=source.Peek(start+i|0),token==null||token.Trivia.length>0)return null;text=(text||"")+(token.Text||"")}return Kusto.Language.Parsing.SyntaxParsers.ProduceSyntaxToken$1(source,start,length,text,asKind)}return null},ProduceSyntaxToken$1:function(source,start,length,text,asKind){var firstToken,kind;if(asKind===void 0&&(asKind=null),firstToken=source.Peek(start),length===1&&(asKind==null||System.Nullable.getValue(asKind)===firstToken.Kind))return Kusto.Language.Syntax.SyntaxToken.From(firstToken);else if(kind=new Kusto.Language.Syntax.SyntaxKind,(kind=Bridge.is(asKind,System.Int16)?System.Nullable.getValue(asKind):null)!=null)switch(Kusto.Language.Syntax.SyntaxFacts.GetCategory(kind)){case Kusto.Language.Syntax.SyntaxCategory.Identifier:return Kusto.Language.Syntax.SyntaxToken.Identifier(firstToken.Trivia,text);case Kusto.Language.Syntax.SyntaxCategory.Other:return Kusto.Language.Syntax.SyntaxToken.Other(firstToken.Trivia,text,kind);default:throw new System.InvalidOperationException.$ctor1(System.String.format("Cannot produce syntax token for kind: {0}",[Bridge.box(kind,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))]));}else return Kusto.Language.Syntax.SyntaxToken.Identifier(firstToken.Trivia,text)},GetCombinedTokenText:function(source,start,length,includeInnerTrivia){var builder,i,token;if(includeInnerTrivia===void 0&&(includeInnerTrivia=!0),length===1)return source.Peek(start).Text;for(builder=new System.Text.StringBuilder,i=0;i<length;i=i+1|0)token=source.Peek(start+i|0),i>0&&includeInnerTrivia&&builder.append(token.Trivia),builder.append(token.Text);return builder.toString()},MatchText:function(text,asKind){return asKind===void 0&&(asKind=null),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Match$6(Kusto.Language.Syntax.SyntaxToken,function(source,start){return Kusto.Language.Parsing.SyntaxParsers.MatchesText(source,start,text)},function(source,start,length){return Kusto.Language.Parsing.SyntaxParsers.ProduceSyntaxToken$1(source,start,length,text,asKind)})},HiddenToken$2:function(text,asKind){return asKind===void 0&&(asKind=null),Kusto.Language.Parsing.SyntaxParsers.MatchText(text,asKind).WithTag$1(Kusto.Language.Parsing.SyntaxParsers.GetDefaultTag$1(text))},HiddenToken:function(tokenKind){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Match$7(Kusto.Language.Syntax.SyntaxToken,function(t){return t.Kind===tokenKind},function(lt){return Kusto.Language.Syntax.SyntaxToken.From(lt)}).WithTag$1(Kusto.Language.Parsing.SyntaxParsers.GetDefaultTag(tokenKind))},HiddenToken$1:function(texts){var set=new(System.Collections.Generic.HashSet$1(System.String).$ctor1)(texts);return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Match$7(Kusto.Language.Syntax.SyntaxToken,function(t){return set.contains(t.Text)},function(lt){return Kusto.Language.Syntax.SyntaxToken.From(lt)}).WithTag$1(Bridge.toArray(System.Linq.Enumerable.from(texts,System.String).select(function(t){return Kusto.Language.Parsing.SyntaxParsers.GetDefaultTag$1(t)})).join(" | "))},RequiredToken$1:function(kind,ckind,priority,ctext){return ckind===void 0&&(ckind=null),priority===void 0&&(priority=3),ctext===void 0&&(ctext=null),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.SyntaxParsers.Token$1(kind,ckind,priority,ctext),function(){return Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken(kind)})},RequiredToken:function(kind,item){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.SyntaxParsers.Token(kind,[item]),function(){return Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken(kind)})},RequiredToken$2:function(kinds,ckind,priority){return ckind===void 0&&(ckind=null),priority===void 0&&(priority=3),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.SyntaxParsers.Token$2(kinds,ckind,priority),function(){return Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken$1(kinds)})},RequiredToken$4:function(text,asKind,ckind,priority,ctext){return asKind===void 0&&(asKind=null),ckind===void 0&&(ckind=null),priority===void 0&&(priority=3),ctext===void 0&&(ctext=null),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.SyntaxParsers.Token$5(text,asKind,ckind,priority,ctext),function(){return Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken$3(text)})},RequiredToken$3:function(texts,ckind,priority){return ckind===void 0&&(ckind=null),priority===void 0&&(priority=3),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.SyntaxParsers.Token$3(texts,ckind,priority),function(){return Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken$2(texts)})},CreateCompletionItem:function(kind,ckind,priority,ctext){ctext===void 0&&(ctext=null);var text=Kusto.Language.Syntax.SyntaxFacts.GetText(kind);return Kusto.Language.Parsing.SyntaxParsers.CreateCompletionItem$1(text,ckind,priority,ctext)},CreateCompletionItem$1:function(text,ckind,priority,ctext,matchText){if((ctext===void 0&&(ctext=null),matchText===void 0&&(matchText=null),System.String.isNullOrWhiteSpace(text))||System.String.startsWith(text,"_",4))return null;var item=new Kusto.Language.Editor.CompletionItem.$ctor1(ckind,text,void 0,void 0,matchText,void 0,12,priority,!1);return ctext!=null&&(item=item.WithApplyTexts$2(ctext)),item},GetCompletionKind$1:function(text,defaultKind){var $t,kind;return defaultKind===void 0&&(defaultKind=null),kind={v:new Kusto.Language.Syntax.SyntaxKind},Kusto.Language.Syntax.SyntaxFacts.TryGetKind(text,kind)?Kusto.Language.Parsing.SyntaxParsers.GetCompletionKind(kind.v,defaultKind):($t=defaultKind,$t!=null?$t:Kusto.Language.Editor.CompletionKind.Syntax)},GetCompletionKind:function(kind,defaultKind){var $t;defaultKind===void 0&&(defaultKind=null);switch(Kusto.Language.Syntax.SyntaxFacts.GetCategory(kind)){case Kusto.Language.Syntax.SyntaxCategory.Keyword:return Kusto.Language.Editor.CompletionKind.Keyword;case Kusto.Language.Syntax.SyntaxCategory.Operator:return Kusto.Language.Editor.CompletionKind.ScalarInfix;case Kusto.Language.Syntax.SyntaxCategory.Punctuation:return Kusto.Language.Editor.CompletionKind.Punctuation;default:return $t=defaultKind,$t!=null?$t:Kusto.Language.Editor.CompletionKind.Syntax}},GetCompletionItems:function(kinds,defaultKind,priority){return System.Linq.Enumerable.from(kinds,Kusto.Language.Syntax.SyntaxKind).select(function(k){return Kusto.Language.Parsing.SyntaxParsers.CreateCompletionItem(k,Kusto.Language.Parsing.SyntaxParsers.GetCompletionKind(k,defaultKind),priority)}).where(function(i){return i!=null})},GetCompletionItems$1:function(texts,defaultKind,priority){return System.Linq.Enumerable.from(texts,System.String).select(function(t){return Kusto.Language.Parsing.SyntaxParsers.CreateCompletionItem$1(t,Kusto.Language.Parsing.SyntaxParsers.GetCompletionKind$1(t,defaultKind),priority)}).where(function(i){return i!=null})},List:function(TElement,elementParser,fnMissingElement,oneOrMore){return fnMissingElement===void 0&&(fnMissingElement=null),oneOrMore===void 0&&(oneOrMore=!1),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).List$1(TElement,Kusto.Language.Syntax.SyntaxList$1(TElement),elementParser,fnMissingElement,oneOrMore,function(elements){var $t;return new(Kusto.Language.Syntax.SyntaxList$1(TElement).ctor)(($t=TElement,System.Linq.Enumerable.from(elements,$t).ToArray($t)))})},SeparatedList$1:function(TElement,primaryElementParser,separatorKind,fnMissingElement,endOfList,oneOrMore,allowTrailingSeparator){return endOfList===void 0&&(endOfList=null),oneOrMore===void 0&&(oneOrMore=!1),allowTrailingSeparator===void 0&&(allowTrailingSeparator=!1),Kusto.Language.Parsing.SyntaxParsers.SeparatedList(TElement,primaryElementParser,separatorKind,primaryElementParser.WithTag$1("..."),fnMissingElement,endOfList,oneOrMore,allowTrailingSeparator)},SeparatedList:function(TElement,primaryElementParser,separatorKind,secondaryElementParser,fnMissingElement,endOfList,oneOrMore,allowTrailingSeparator){return endOfList===void 0&&(endOfList=null),oneOrMore===void 0&&(oneOrMore=!1),allowTrailingSeparator===void 0&&(allowTrailingSeparator=!1),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).OList(TElement,Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(TElement)),primaryElementParser,Kusto.Language.Parsing.SyntaxParsers.Token$1(separatorKind),secondaryElementParser,fnMissingElement,function(source,start){return Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken(separatorKind)},fnMissingElement,endOfList,oneOrMore,allowTrailingSeparator,function(elements){return Kusto.Language.Parsing.SyntaxParsers.MakeSeparatedList$1(TElement,elements)})},CommaList:function(TElement,elementParser,fnMissingElement,oneOrMore,allowTrailingComma,endKinds){var endOfList,hash;return oneOrMore===void 0&&(oneOrMore=!1),allowTrailingComma===void 0&&(allowTrailingComma=!1),endKinds===void 0&&(endKinds=null),endOfList=Kusto.Language.Parsing.SyntaxParsers.EndOfCommaList,endKinds!=null&&(hash=new(System.Collections.Generic.HashSet$1(Kusto.Language.Syntax.SyntaxKind).$ctor1)(endKinds),endOfList=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First([Kusto.Language.Parsing.SyntaxParsers.EndOfCommaList,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Match$3(function(t){return hash.contains(t.Kind)})])),Kusto.Language.Parsing.SyntaxParsers.SeparatedList$1(TElement,elementParser,Kusto.Language.Syntax.SyntaxKind.CommaToken,fnMissingElement,endOfList,oneOrMore,allowTrailingComma)},OneOrMoreCommaList:function(TElement,elementParser,fnMissingElement){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Produce(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(TElement)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Sequence([Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,elementParser.Cast(Kusto.Language.Syntax.SyntaxElement),function(source,start){return Bridge.cast(fnMissingElement(source,start),Kusto.Language.Syntax.SyntaxElement)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ZeroOrMore(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Sequence([Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.SyntaxParsers.Token$1(Kusto.Language.Syntax.SyntaxKind.CommaToken),function(t){return Bridge.cast(t,Kusto.Language.Syntax.SyntaxElement)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(TElement,Kusto.Language.Syntax.SyntaxElement,elementParser,function(l){return Bridge.cast(l,Kusto.Language.Syntax.SyntaxElement)})]))]),function(elements){return Kusto.Language.Parsing.SyntaxParsers.MakeSeparatedList$1(TElement,elements)})},MakeSeparatedList:function(TElement,elements){return elements===void 0&&(elements=[]),Kusto.Language.Parsing.SyntaxParsers.MakeSeparatedList$1(TElement,Bridge.cast(elements,System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Syntax.SyntaxElement)))},MakeSeparatedList$1:function(TElement,elements){var separatedElements,i,element,separator;if(elements==null)return Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(TElement)).Empty();for(separatedElements=new(System.Collections.Generic.List$1(Kusto.Language.Syntax.SeparatedElement$1(TElement)).ctor),i=0;i<System.Array.getCount(elements,System.Object);i=i+2|0)element=Bridge.cast(System.Array.getItem(elements,i,System.Object),TElement),separator=i<(System.Array.getCount(elements,System.Object)-1|0)?Bridge.cast(System.Array.getItem(elements,i+1|0,System.Object),Kusto.Language.Syntax.SyntaxToken):null,separatedElements.add(new(Kusto.Language.Syntax.SeparatedElement$1(TElement))(element,separator));return new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(TElement)).$ctor1)(separatedElements)},ParseAll$1:function(TParser,parser,text,alwaysProduceEndToken){return alwaysProduceEndToken===void 0&&(alwaysProduceEndToken=!1),Kusto.Language.Parsing.SyntaxParsers.ParseAll(TParser,parser,Kusto.Language.Parsing.TokenParser.ParseTokens(text,Kusto.Language.ParseOptions.Default.WithAlwaysProduceEndTokens(alwaysProduceEndToken)))},ParseAll:function(TParser,parser,tokens){return new(Bridge.GeneratorEnumerable$1(TParser))(Bridge.fn.bind(this,function(TParser,parser,tokens){var $step=0,$jumpFromFinally,$returnValue,source,start,result,$async_e,$enumerator=new(Bridge.GeneratorEnumerator$1(TParser))(Bridge.fn.bind(this,function(){try{for(;;)switch($step){case 0:source=new(Kusto.Language.Parsing.ArraySource$1(Kusto.Language.Parsing.LexicalToken))(tokens);start=0;$step=1;continue;case 1:if(!source.IsEnd(start)){$step=2;continue}$step=4;continue;case 2:if(result=parser.Parse$1(source,start),result.Length<=0){$step=4;continue}return $enumerator.current=result.Value,$step=3,!0;case 3:start=start+result.Length|0;$step=1;continue;case 4:default:return!1}}catch($async_e1){$async_e=System.Exception.create($async_e1);throw $async_e;}}));return $enumerator},arguments))},ParseFirst:function(TParser,parser,text,alwaysProduceEOF){return alwaysProduceEOF===void 0&&(alwaysProduceEOF=!1),Kusto.Language.Parsing.SyntaxParsers.ParseFirst$1(TParser,parser,Kusto.Language.Parsing.TokenParser.ParseTokens(text,Kusto.Language.ParseOptions.Default.WithAlwaysProduceEndTokens(alwaysProduceEOF)))},ParseFirst$1:function(TParser,parser,tokens){var source=new(Kusto.Language.Parsing.ArraySource$1(Kusto.Language.Parsing.LexicalToken))(tokens),result=parser.Parse$1(source,0);return result.Value},ScanFirst:function(parser,text,alwaysProduceEOF){alwaysProduceEOF===void 0&&(alwaysProduceEOF=!1);var source=new(Kusto.Language.Parsing.ArraySource$1(Kusto.Language.Parsing.LexicalToken))(Kusto.Language.Parsing.TokenParser.ParseTokens(text,Kusto.Language.ParseOptions.Default.WithAlwaysProduceEndTokens(alwaysProduceEOF)));return parser.Scan(source,0)},Examples:function(TParser,parser,values){return parser.WithAnnotations$1(System.Linq.Enumerable.from(values,System.String).select(function(v){return new Kusto.Language.Editor.CompletionItem.$ctor1(Kusto.Language.Editor.CompletionKind.Example,v)}))},Examples$1:function(TParser,parser,values){return values===void 0&&(values=[]),Kusto.Language.Parsing.SyntaxParsers.Examples(TParser,parser,Bridge.cast(values,System.Collections.Generic.IReadOnlyList$1(System.String)))}}}});Bridge.define("Kusto.Language.Parsing.TextFacts",{statics:{fields:{s_lineStarts:null},ctors:{init:function(){this.s_lineStarts=new(Kusto.Language.Utils.ObjectPool$1(System.Collections.Generic.List$1(System.Int32)))(function(){return new(System.Collections.Generic.List$1(System.Int32).ctor)},function(list){list.clear()})}},methods:{IsWhitespace:function(ch){switch(ch){case 9:case 32:case 13:case 10:case 12:case 160:case 5760:case 6158:case 8192:case 8193:case 8194:case 8195:case 8196:case 8197:case 8198:case 8199:case 8200:case 8201:case 8202:case 8203:case 8239:case 8287:case 12288:case 65279:return!0;default:return!1}},IsWhitespaceOnly:function(text){return Kusto.Language.Parsing.TextFacts.IsWhitespaceOnly$1(text,0,text.length)},IsWhitespaceOnly$1:function(text,start,length){for(var i=start,n=Math.min(text.length,start+length|0);i<n;i=i+1|0)if(!Kusto.Language.Parsing.TextFacts.IsWhitespace(text.charCodeAt(i)))return!1;return!0},GetWhitespace:function(text,start){var count=Kusto.Language.Parsing.TextFacts.GetWhitespaceCount(text,start);return count>0?text.substr(start,count):""},GetWhitespaceCount:function(text,start){for(var end=start;end<text.length&&Kusto.Language.Parsing.TextFacts.IsWhitespace(text.charCodeAt(end));)end=end+1|0;return end-start|0},IsLineBreakStart:function(ch){switch(ch){case 13:case 10:case 8232:case 8233:return!0;default:return!1}},GetLineBreakLength:function(text,position){if(position<text.length){var ch=text.charCodeAt(position);switch(ch){case 13:return(position+1|0)<text.length&&text.charCodeAt(position+1|0)===10?2:1;case 10:case 8232:case 8233:return 1}}return 0},HasLineBreaks:function(text){var $t,c;$t=Bridge.getEnumerator(text);try{while($t.moveNext())if(c=$t.Current,Kusto.Language.Parsing.TextFacts.IsLineBreakStart(c))return!0}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return!1},GetNextLineBreakStart:function(text,start){for(var i=start;i<text.length;i=i+1|0)if(Kusto.Language.Parsing.TextFacts.IsLineBreakStart(text.charCodeAt(i)))return i;return-1},GetNextLineBreakEnd:function(text,start){var result=Kusto.Language.Parsing.TextFacts.GetNextLineBreakStart(text,start);return result>=0?result+Kusto.Language.Parsing.TextFacts.GetLineBreakLength(text,result)|0:-1},GetLineEnd:function(text,position){var lengthToEnd=Kusto.Language.Parsing.TextFacts.GetLineLength(text,position);return position+lengthToEnd|0},GetLineStart:function(text,position){var previousLineEnd={},lineBreakLength;return Kusto.Language.Parsing.TextFacts.TryGetPreviousLineEnd(text,position,previousLineEnd)?(lineBreakLength=Kusto.Language.Parsing.TextFacts.GetLineBreakLength(text,previousLineEnd.v),previousLineEnd.v+lineBreakLength|0):0},TryGetPreviousLineEnd:function(text,position,previousLineEnd){for(var lineBreakLength,longerLineBreakLength;position>=0;position=position-1|0)if(lineBreakLength=Kusto.Language.Parsing.TextFacts.GetLineBreakLength(text,position),lineBreakLength!==0)return previousLineEnd.v=lineBreakLength===1&&position>0&&(longerLineBreakLength=Bridge.hasValue(Kusto.Language.Parsing.TextFacts.GetLineBreakLength(text,position-1|0))?Kusto.Language.Parsing.TextFacts.GetLineBreakLength(text,position-1|0):null)!=null&&longerLineBreakLength===(lineBreakLength+1|0)?position-1|0:position,!0;return previousLineEnd.v=0,!1},TryGetNextLineStart:function(text,position,nextLineStart){var lineEnd=Kusto.Language.Parsing.TextFacts.GetLineEnd(text,position),lineBreakLength=Kusto.Language.Parsing.TextFacts.GetLineBreakLength(text,lineEnd);return lineBreakLength>0?(nextLineStart.v=lineEnd+lineBreakLength|0,!0):(nextLineStart.v=0,!1)},GetFirstLineBreakStart:function(text){return Kusto.Language.Parsing.TextFacts.GetNextLineBreakStart(text,0)},GetFirstLineBreakEnd:function(text){return Kusto.Language.Parsing.TextFacts.GetNextLineBreakEnd(text,0)},GetLastLineBreakStart:function(text,start){var result,lastLbEnd,nextLbStart;for(start===void 0&&(start=0),result=-1,lastLbEnd=start;start>=0;)if(nextLbStart=Kusto.Language.Parsing.TextFacts.GetNextLineBreakStart(text,lastLbEnd),nextLbStart>=0){lastLbEnd=nextLbStart+Kusto.Language.Parsing.TextFacts.GetLineBreakLength(text,lastLbEnd)|0;result=start=nextLbStart;continue}else break;return result},GetLastLineBreakEnd:function(text,start){start===void 0&&(start=0);var result=Kusto.Language.Parsing.TextFacts.GetLastLineBreakStart(text,start);return result>=0?result+Kusto.Language.Parsing.TextFacts.GetLineBreakLength(text,result)|0:-1},IsBlankLine:function(text,lineStart){for(var pos=lineStart;pos<text.length&&Kusto.Language.Parsing.TextFacts.IsWhitespace(text.charCodeAt(pos))&&!Kusto.Language.Parsing.TextFacts.IsLineBreakStart(text.charCodeAt(pos));)pos=pos+1|0;return pos===text.length||Kusto.Language.Parsing.TextFacts.IsLineBreakStart(text.charCodeAt(pos))},GetLineLength:function(text,lineStart,includeLineBreak){includeLineBreak===void 0&&(includeLineBreak=!1);for(var pos=lineStart;pos<text.length&&!Kusto.Language.Parsing.TextFacts.IsLineBreakStart(text.charCodeAt(pos));)pos=pos+1|0;return includeLineBreak&&pos<text.length&&(pos=pos+Kusto.Language.Parsing.TextFacts.GetLineBreakLength(text,pos)|0),pos-lineStart|0},GetNextLineStart:function(text,start){var nextStart=Kusto.Language.Parsing.TextFacts.GetNextLineBreakStart(text,start);return nextStart>=0?nextStart+Kusto.Language.Parsing.TextFacts.GetLineBreakLength(text,nextStart)|0:nextStart},IsLetter:function(ch){return ch>=97&&ch<=122||ch>=65&&ch<=90},IsDigit:function(ch){return ch>=48&&ch<=57},IsLetterOrDigit:function(ch){return ch>=97&&ch<=122||ch>=65&&ch<=90||ch>=48&&ch<=57},IsHexDigit:function(ch){return ch>=48&&ch<=57||ch>=97&&ch<=102||ch>=65&&ch<=70},GetLineStarts:function(text,lineStarts){var lineStart,i,n,lb;for(lineStarts.add(0),lineStart=0,i=0,n=text.length;i<n;)lb=Kusto.Language.Parsing.TextFacts.GetLineBreakLength(text,i),lb>0?(i=i+lb|0,lineStart=i,lineStarts.add(lineStart)):i=i+1|0},TryGetLineStart:function(text,line,lineStart){var lb;if(line<1)return lineStart.v=0,!1;else if(line===1)return lineStart.v=0,!0;for(var i=0,n=text.length,count=1;i<n;)if(lb=Kusto.Language.Parsing.TextFacts.GetLineBreakLength(text,i),lb>0){if(i=i+lb|0,count=count+1|0,count===line)return lineStart.v=i,!0}else i=i+1|0;return lineStart.v=0,!1},TryGetLineAndOffset$1:function(text,position,line,lineOffset){var lineStarts=Kusto.Language.Parsing.TextFacts.s_lineStarts.AllocateFromPool();try{return Kusto.Language.Parsing.TextFacts.GetLineStarts(text,lineStarts),Kusto.Language.Parsing.TextFacts.TryGetLineAndOffset(lineStarts,position,line,lineOffset)}finally{Kusto.Language.Parsing.TextFacts.s_lineStarts.ReturnToPool(lineStarts)}},TryGetLineAndOffset:function(lineStarts,position,line,lineOffset){return(line.v=lineStarts.BinarySearch(position),line.v=line.v>=0?line.v:~line.v-1|0,line.v<0||line.v>=lineStarts.Count)?(line.v=0,lineOffset.v=0,!1):(lineOffset.v=(position-lineStarts.getItem(line.v)|0)+1|0,line.v=line.v+1|0,!0)},TryGetPosition$1:function(text,line,lineOffset,position){var lineStart={};return line>=1&&lineOffset>=1&&Kusto.Language.Parsing.TextFacts.TryGetLineStart(text,line,lineStart)?(position.v=lineStart.v+(lineOffset-1|0)|0,position.v<=text.length):(position.v=0,!1)},TryGetPosition:function(lineStarts,line,lineOffset,position){if(line>=1&&line<=System.Array.getCount(lineStarts,System.Int32)&&lineOffset>=1){var lineStart=System.Array.getItem(lineStarts,line-1|0,System.Int32);return position.v=lineStart+(lineOffset-1|0)|0,!0}return position.v=0,!1},TrimEnd:function(text){return Kusto.Language.Parsing.TextFacts.TrimEnd$1(text,0,text.length)},TrimEnd$1:function(text,start,length){for(var ln=length-1|0;ln>=0;ln=ln-1|0)if(!Kusto.Language.Parsing.TextFacts.IsWhitespace(text.charCodeAt(start+ln|0)))return ln+1|0;return 0},TrimRangeStart:function(text,start,length){var count=Kusto.Language.Parsing.TextFacts.GetWhitespaceCount(text,start.v);start.v=start.v+count|0;length.v=length.v-count|0},TrimRangeEnd:function(text,start,length){length.v=Kusto.Language.Parsing.TextFacts.TrimEnd$1(text,start,length.v)},TrimRange:function(text,start,length){Kusto.Language.Parsing.TextFacts.TrimRangeStart(text,start,length);Kusto.Language.Parsing.TextFacts.TrimRangeEnd(text,start.v,length)},ExpandRangeToStartOfFirstLine:function(text,start,length){var newStart=Kusto.Language.Parsing.TextFacts.GetLineStart(text,start.v);start.v=newStart;length.v=length.v+(start.v-newStart|0)|0},ExpandRangeToEndOfLastLine:function(text,start,length){var newEnd=Kusto.Language.Parsing.TextFacts.GetLineEnd(text,start+length.v|0);length.v=newEnd-start|0},ExpandRangeToStartAndEndOfLines:function(text,start,length){Kusto.Language.Parsing.TextFacts.ExpandRangeToStartOfFirstLine(text,start,length);Kusto.Language.Parsing.TextFacts.ExpandRangeToEndOfLastLine(text,start.v,length)},GetIndentationLength:function(text,position){var startOfLine=Kusto.Language.Parsing.TextFacts.GetLineStart(text,position);return Kusto.Language.Parsing.TextFacts.GetWhitespaceCount(text,startOfLine)},GetIndentationText:function(text,position){var startOfLine=Kusto.Language.Parsing.TextFacts.GetLineStart(text,position);return Kusto.Language.Parsing.TextFacts.GetWhitespace(text,startOfLine)}}}});Bridge.define("Kusto.Language.Parsing.TokenParser",{statics:{fields:{Default:null,s_booleanValues:null,s_literalValueMap:null,s_spaces:null,TimespanSuffixes:null,TimespanSuffixMap:null,s_kindToTokenInfoMap:null,s_tokenInfoSubstringMap:null,OpenParenTokenInfo:null,CloseParenTokenInfo:null,OpenBracketTokenInfo:null,CloseBracketTokenInfo:null,OpenBraceTokenInfo:null,CloseBraceTokenInfo:null,BarTokenInfo:null,DotDotTokenInfo:null,DotTokenInfo:null,PlusTokenInfo:null,MinusTokenInfo:null,AsteriskTokenInfo:null,SlashTokenInfo:null,PercentTokenInfo:null,LessThanOrEqualTokenInfo:null,LessThanBarTokenInfo:null,LessThanGreaterThanTokenInfo:null,LessThanTokenInfo:null,GreaterThanOrEqualTokenInfo:null,GreaterThanTokenInfo:null,EqualEqualTokenInfo:null,FatArrowTokenInfo:null,EqualTildeTokenInfo:null,EqualTokenInfo:null,BangEqualTokenInfo:null,BangTildeTokenInfo:null,ColonTokenInfo:null,SemicolonTokenInfo:null,CommaTokenInfo:null,AtTokenInfo:null,QuestionTokenInfo:null},ctors:{init:function(){this.Default=new Kusto.Language.Parsing.TokenParser.$ctor1(null);this.s_booleanValues=System.Array.init(["true","True","TRUE","false","False","FALSE"],System.String);this.s_literalValueMap=new(Kusto.Language.Utils.SubstringMap$1(Kusto.Language.Syntax.SyntaxKind))(System.Linq.Enumerable.from(Kusto.Language.Parsing.TokenParser.s_booleanValues,System.String).select(function(v){return new(System.Collections.Generic.KeyValuePair$2(System.String,Kusto.Language.Syntax.SyntaxKind).$ctor1)(v,Kusto.Language.Syntax.SyntaxKind.BooleanLiteralToken)}));this.s_spaces=System.Linq.Enumerable.range(0,32).select(function(n){return System.String.fromCharCount(32,n)}).ToArray(System.String);this.TimespanSuffixes=System.Array.init(["m","min","minute","minutes","s","sec","second","seconds","d","day","days","h","hr","hrs","hour","hours","ms","milli","millis","millisec","millisecond","milliseconds","micro","micros","microsec","microsecond","microseconds","nano","nanos","nanosec","nanosecond","nanoseconds","tick","ticks"],System.String);this.TimespanSuffixMap=new(Kusto.Language.Utils.SubstringMap$1(System.Boolean))(System.Linq.Enumerable.from(Kusto.Language.Parsing.TokenParser.TimespanSuffixes,System.String).select(function(s){return new(System.Collections.Generic.KeyValuePair$2(System.String,System.Boolean).$ctor1)(s,!0)}));this.s_kindToTokenInfoMap=System.Linq.Enumerable.from(Kusto.Language.Syntax.SyntaxFacts.GetKindsWithFixedText(),Kusto.Language.Syntax.SyntaxKind).toDictionary(function(k){return k},function(k){return new Kusto.Language.Parsing.TokenParser.TokenInfo(k)},Kusto.Language.Syntax.SyntaxKind,Kusto.Language.Parsing.TokenParser.TokenInfo);this.s_tokenInfoSubstringMap=new(Kusto.Language.Utils.SubstringMap$1(Kusto.Language.Parsing.TokenParser.TokenInfo))(System.Linq.Enumerable.from(Kusto.Language.Parsing.TokenParser.s_kindToTokenInfoMap,System.Collections.Generic.KeyValuePair$2(Kusto.Language.Syntax.SyntaxKind,Kusto.Language.Parsing.TokenParser.TokenInfo)).select(function(kvp){return new(System.Collections.Generic.KeyValuePair$2(System.String,Kusto.Language.Parsing.TokenParser.TokenInfo).$ctor1)(Kusto.Language.Syntax.SyntaxFacts.GetText(kvp.key),kvp.value)}));this.OpenParenTokenInfo=Kusto.Language.Parsing.TokenParser.s_kindToTokenInfoMap.getItem(Kusto.Language.Syntax.SyntaxKind.OpenParenToken);this.CloseParenTokenInfo=Kusto.Language.Parsing.TokenParser.s_kindToTokenInfoMap.getItem(Kusto.Language.Syntax.SyntaxKind.CloseParenToken);this.OpenBracketTokenInfo=Kusto.Language.Parsing.TokenParser.s_kindToTokenInfoMap.getItem(Kusto.Language.Syntax.SyntaxKind.OpenBracketToken);this.CloseBracketTokenInfo=Kusto.Language.Parsing.TokenParser.s_kindToTokenInfoMap.getItem(Kusto.Language.Syntax.SyntaxKind.CloseBracketToken);this.OpenBraceTokenInfo=Kusto.Language.Parsing.TokenParser.s_kindToTokenInfoMap.getItem(Kusto.Language.Syntax.SyntaxKind.OpenBraceToken);this.CloseBraceTokenInfo=Kusto.Language.Parsing.TokenParser.s_kindToTokenInfoMap.getItem(Kusto.Language.Syntax.SyntaxKind.CloseBraceToken);this.BarTokenInfo=Kusto.Language.Parsing.TokenParser.s_kindToTokenInfoMap.getItem(Kusto.Language.Syntax.SyntaxKind.BarToken);this.DotDotTokenInfo=Kusto.Language.Parsing.TokenParser.s_kindToTokenInfoMap.getItem(Kusto.Language.Syntax.SyntaxKind.DotDotToken);this.DotTokenInfo=Kusto.Language.Parsing.TokenParser.s_kindToTokenInfoMap.getItem(Kusto.Language.Syntax.SyntaxKind.DotToken);this.PlusTokenInfo=Kusto.Language.Parsing.TokenParser.s_kindToTokenInfoMap.getItem(Kusto.Language.Syntax.SyntaxKind.PlusToken);this.MinusTokenInfo=Kusto.Language.Parsing.TokenParser.s_kindToTokenInfoMap.getItem(Kusto.Language.Syntax.SyntaxKind.MinusToken);this.AsteriskTokenInfo=Kusto.Language.Parsing.TokenParser.s_kindToTokenInfoMap.getItem(Kusto.Language.Syntax.SyntaxKind.AsteriskToken);this.SlashTokenInfo=Kusto.Language.Parsing.TokenParser.s_kindToTokenInfoMap.getItem(Kusto.Language.Syntax.SyntaxKind.SlashToken);this.PercentTokenInfo=Kusto.Language.Parsing.TokenParser.s_kindToTokenInfoMap.getItem(Kusto.Language.Syntax.SyntaxKind.PercentToken);this.LessThanOrEqualTokenInfo=Kusto.Language.Parsing.TokenParser.s_kindToTokenInfoMap.getItem(Kusto.Language.Syntax.SyntaxKind.LessThanOrEqualToken);this.LessThanBarTokenInfo=Kusto.Language.Parsing.TokenParser.s_kindToTokenInfoMap.getItem(Kusto.Language.Syntax.SyntaxKind.LessThanBarToken);this.LessThanGreaterThanTokenInfo=Kusto.Language.Parsing.TokenParser.s_kindToTokenInfoMap.getItem(Kusto.Language.Syntax.SyntaxKind.LessThanGreaterThanToken);this.LessThanTokenInfo=Kusto.Language.Parsing.TokenParser.s_kindToTokenInfoMap.getItem(Kusto.Language.Syntax.SyntaxKind.LessThanToken);this.GreaterThanOrEqualTokenInfo=Kusto.Language.Parsing.TokenParser.s_kindToTokenInfoMap.getItem(Kusto.Language.Syntax.SyntaxKind.GreaterThanOrEqualToken);this.GreaterThanTokenInfo=Kusto.Language.Parsing.TokenParser.s_kindToTokenInfoMap.getItem(Kusto.Language.Syntax.SyntaxKind.GreaterThanToken);this.EqualEqualTokenInfo=Kusto.Language.Parsing.TokenParser.s_kindToTokenInfoMap.getItem(Kusto.Language.Syntax.SyntaxKind.EqualEqualToken);this.FatArrowTokenInfo=Kusto.Language.Parsing.TokenParser.s_kindToTokenInfoMap.getItem(Kusto.Language.Syntax.SyntaxKind.FatArrowToken);this.EqualTildeTokenInfo=Kusto.Language.Parsing.TokenParser.s_kindToTokenInfoMap.getItem(Kusto.Language.Syntax.SyntaxKind.EqualTildeToken);this.EqualTokenInfo=Kusto.Language.Parsing.TokenParser.s_kindToTokenInfoMap.getItem(Kusto.Language.Syntax.SyntaxKind.EqualToken);this.BangEqualTokenInfo=Kusto.Language.Parsing.TokenParser.s_kindToTokenInfoMap.getItem(Kusto.Language.Syntax.SyntaxKind.BangEqualToken);this.BangTildeTokenInfo=Kusto.Language.Parsing.TokenParser.s_kindToTokenInfoMap.getItem(Kusto.Language.Syntax.SyntaxKind.BangTildeToken);this.ColonTokenInfo=Kusto.Language.Parsing.TokenParser.s_kindToTokenInfoMap.getItem(Kusto.Language.Syntax.SyntaxKind.ColonToken);this.SemicolonTokenInfo=Kusto.Language.Parsing.TokenParser.s_kindToTokenInfoMap.getItem(Kusto.Language.Syntax.SyntaxKind.SemicolonToken);this.CommaTokenInfo=Kusto.Language.Parsing.TokenParser.s_kindToTokenInfoMap.getItem(Kusto.Language.Syntax.SyntaxKind.CommaToken);this.AtTokenInfo=Kusto.Language.Parsing.TokenParser.s_kindToTokenInfoMap.getItem(Kusto.Language.Syntax.SyntaxKind.AtToken);this.QuestionTokenInfo=Kusto.Language.Parsing.TokenParser.s_kindToTokenInfoMap.getItem(Kusto.Language.Syntax.SyntaxKind.QuestionToken)}},methods:{ParseToken:function(text,start,options){return start===void 0&&(start=0),options===void 0&&(options=null),Kusto.Language.Parsing.TokenParser.Default.Parse(text,start,options||Kusto.Language.ParseOptions.Default)},ParseTokens:function(text,options){options===void 0&&(options=null);var tokens=new(System.Collections.Generic.List$1(Kusto.Language.Parsing.LexicalToken).ctor);return Kusto.Language.Parsing.TokenParser.ParseTokens$1(text,tokens,options||Kusto.Language.ParseOptions.Default),tokens.ToArray()},ParseTokens$1:function(text,tokens,options){options===void 0&&(options=null);options=options||Kusto.Language.ParseOptions.Default;var parser=new Kusto.Language.Parsing.TokenParser.ctor,token,pos=0;do{if(token=parser.Parse(text,pos,options),token==null)break;tokens.add(token);pos=pos+token.Length|0}while(token.Kind!==Kusto.Language.Syntax.SyntaxKind.EndOfTextToken)},IsStringLiteralStartQuote:function(ch){return ch===39||ch===34||ch===96||ch===126},GetPunctuationTokenInfo:function(text,start){var pos=start,ch=Kusto.Language.Parsing.TokenParser.Peek(text,pos),ch2;switch(ch){case 40:return Kusto.Language.Parsing.TokenParser.OpenParenTokenInfo;case 41:return Kusto.Language.Parsing.TokenParser.CloseParenTokenInfo;case 91:return Kusto.Language.Parsing.TokenParser.OpenBracketTokenInfo;case 93:return Kusto.Language.Parsing.TokenParser.CloseBracketTokenInfo;case 123:return Kusto.Language.Parsing.TokenParser.OpenBraceTokenInfo;case 125:return Kusto.Language.Parsing.TokenParser.CloseBraceTokenInfo;case 124:return Kusto.Language.Parsing.TokenParser.BarTokenInfo;case 46:return Kusto.Language.Parsing.TokenParser.Peek(text,pos+1|0)===46?Kusto.Language.Parsing.TokenParser.DotDotTokenInfo:Kusto.Language.Parsing.TokenParser.DotTokenInfo;case 43:return Kusto.Language.Parsing.TokenParser.PlusTokenInfo;case 45:return Kusto.Language.Parsing.TokenParser.MinusTokenInfo;case 42:return Kusto.Language.Parsing.TokenParser.AsteriskTokenInfo;case 47:return Kusto.Language.Parsing.TokenParser.SlashTokenInfo;case 37:return Kusto.Language.Parsing.TokenParser.PercentTokenInfo;case 60:if(ch2=Kusto.Language.Parsing.TokenParser.Peek(text,pos+1|0),ch2===61)return Kusto.Language.Parsing.TokenParser.LessThanOrEqualTokenInfo;else if(ch2===124)return Kusto.Language.Parsing.TokenParser.LessThanBarTokenInfo;else if(ch2===62)return Kusto.Language.Parsing.TokenParser.LessThanGreaterThanTokenInfo;return Kusto.Language.Parsing.TokenParser.LessThanTokenInfo;case 62:return Kusto.Language.Parsing.TokenParser.Peek(text,pos+1|0)===61?Kusto.Language.Parsing.TokenParser.GreaterThanOrEqualTokenInfo:Kusto.Language.Parsing.TokenParser.GreaterThanTokenInfo;case 61:if(ch2=Kusto.Language.Parsing.TokenParser.Peek(text,pos+1|0),ch2===61)return Kusto.Language.Parsing.TokenParser.EqualEqualTokenInfo;else if(ch2===62)return Kusto.Language.Parsing.TokenParser.FatArrowTokenInfo;else if(ch2===126)return Kusto.Language.Parsing.TokenParser.EqualTildeTokenInfo;return Kusto.Language.Parsing.TokenParser.EqualTokenInfo;case 33:if(ch2=Kusto.Language.Parsing.TokenParser.Peek(text,pos+1|0),ch2===61)return Kusto.Language.Parsing.TokenParser.BangEqualTokenInfo;else if(ch2===126)return Kusto.Language.Parsing.TokenParser.BangTildeTokenInfo;break;case 58:return Kusto.Language.Parsing.TokenParser.ColonTokenInfo;case 59:return Kusto.Language.Parsing.TokenParser.SemicolonTokenInfo;case 44:return Kusto.Language.Parsing.TokenParser.CommaTokenInfo;case 64:if(ch2=Kusto.Language.Parsing.TokenParser.Peek(text,pos+1|0),!Kusto.Language.Parsing.TokenParser.IsStringLiteralStartQuote(ch2))return Kusto.Language.Parsing.TokenParser.AtTokenInfo;break;case 63:return Kusto.Language.Parsing.TokenParser.QuestionTokenInfo}return null},ScanBooleanLiteral:function(text,start){start===void 0&&(start=0);var literalMatch=Kusto.Language.Parsing.TokenParser.s_literalValueMap.GetLongestMatch(text,start);return literalMatch.key.length>0&&literalMatch.value===Kusto.Language.Syntax.SyntaxKind.BooleanLiteralToken&&!Kusto.Language.Parsing.TokenParser.IsIdentifierChar(Kusto.Language.Parsing.TokenParser.Peek(text,start+literalMatch.key.length|0))?literalMatch.key.length:-1},GetGooLiteralTokenKind:function(keywordKind){switch(keywordKind){case Kusto.Language.Syntax.SyntaxKind.LongKeyword:case Kusto.Language.Syntax.SyntaxKind.Int64Keyword:return Kusto.Language.Syntax.SyntaxKind.LongLiteralToken;case Kusto.Language.Syntax.SyntaxKind.IntKeyword:case Kusto.Language.Syntax.SyntaxKind.Int32Keyword:return Kusto.Language.Syntax.SyntaxKind.IntLiteralToken;case Kusto.Language.Syntax.SyntaxKind.RealKeyword:case Kusto.Language.Syntax.SyntaxKind.DoubleKeyword:return Kusto.Language.Syntax.SyntaxKind.RealLiteralToken;case Kusto.Language.Syntax.SyntaxKind.DecimalKeyword:return Kusto.Language.Syntax.SyntaxKind.DecimalLiteralToken;case Kusto.Language.Syntax.SyntaxKind.BoolKeyword:return Kusto.Language.Syntax.SyntaxKind.BooleanLiteralToken;case Kusto.Language.Syntax.SyntaxKind.DateTimeKeyword:case Kusto.Language.Syntax.SyntaxKind.DateKeyword:return Kusto.Language.Syntax.SyntaxKind.DateTimeLiteralToken;case Kusto.Language.Syntax.SyntaxKind.TimeKeyword:case Kusto.Language.Syntax.SyntaxKind.TimespanKeyword:return Kusto.Language.Syntax.SyntaxKind.TimespanLiteralToken;case Kusto.Language.Syntax.SyntaxKind.GuidKeyword:return Kusto.Language.Syntax.SyntaxKind.GuidLiteralToken;default:return Kusto.Language.Syntax.SyntaxKind.None}},ScanSpaces:function(text,start){for(var pos=start;Kusto.Language.Parsing.TokenParser.Peek(text,pos)===32;)pos=pos+1|0;return pos-start|0},ScanWhitespace:function(text,start){for(var pos=start;Kusto.Language.Parsing.TextFacts.IsWhitespace(Kusto.Language.Parsing.TokenParser.Peek(text,pos));)pos=pos+1|0;return pos-start|0},ScanTrivia:function(text,start){for(var pos=start,ch,commentLen;!Kusto.Language.Parsing.TokenParser.IsAtEnd(text,pos);){if(ch=Kusto.Language.Parsing.TokenParser.Peek(text,pos),Kusto.Language.Parsing.TextFacts.IsWhitespace(ch)){pos=pos+1|0;continue}if(commentLen=Kusto.Language.Parsing.TokenParser.ScanComment(text,pos),commentLen>0){pos=pos+commentLen|0;continue}else break}return pos-start|0},ScanComment:function(text,start){if(Kusto.Language.Parsing.TokenParser.Peek(text,start)===47&&Kusto.Language.Parsing.TokenParser.Peek(text,start+1|0)===47){var end=Kusto.Language.Parsing.TokenParser.GetNextLineStart(text,start);return end-start|0}return 0},GetNextLineStart:function(text,start){var end=Kusto.Language.Parsing.TextFacts.GetNextLineStart(text,start);return end>=0?end:text.length},IsIdentifierStartChar:function(ch){return Kusto.Language.Parsing.TextFacts.IsLetter(ch)||ch===95||ch===36},IsIdentifierChar:function(ch){return Kusto.Language.Parsing.TextFacts.IsLetterOrDigit(ch)||ch===95},ScanIdentifier:function(text,start){var pos,ch,len;if(start===void 0&&(start=0),pos=start,ch=Kusto.Language.Parsing.TokenParser.Peek(text,pos),Kusto.Language.Parsing.TokenParser.IsIdentifierStartChar(ch))for(pos=pos+1|0;!Kusto.Language.Parsing.TokenParser.IsAtEnd(text,pos);)if(ch=Kusto.Language.Parsing.TokenParser.Peek(text,pos),Kusto.Language.Parsing.TokenParser.IsIdentifierChar(ch))pos=pos+1|0;else break;else if(System.Char.isDigit(ch)&&(len=Kusto.Language.Parsing.TokenParser.ScanDigits(text,pos),len>0&&(ch=Kusto.Language.Parsing.TokenParser.Peek(text,pos+len|0),Kusto.Language.Parsing.TextFacts.IsLetter(ch)||ch===95)))for(pos=pos+len|0;pos<text.length;)if(ch=text.charCodeAt(pos),Kusto.Language.Parsing.TokenParser.IsIdentifierChar(ch))pos=pos+1|0;else break;return pos>start?pos-start|0:-1},ScanDigits:function(text,start){for(var pos=start;System.Char.isDigit(Kusto.Language.Parsing.TokenParser.Peek(text,pos));)pos=pos+1|0;return pos>start?pos-start|0:-1},ScanHexIntegerLiteral:function(text,start){var pos=start;if(Kusto.Language.Parsing.TokenParser.Peek(text,start)===48&&(Kusto.Language.Parsing.TokenParser.Peek(text,start+1|0)===120||Kusto.Language.Parsing.TokenParser.Peek(text,start+1|0)===88)){if(pos=pos+2|0,!Kusto.Language.Parsing.TextFacts.IsHexDigit(Kusto.Language.Parsing.TokenParser.Peek(text,pos)))return-1;for(pos=pos+1|0;Kusto.Language.Parsing.TextFacts.IsHexDigit(Kusto.Language.Parsing.TokenParser.Peek(text,pos));)pos=pos+1|0}return Kusto.Language.Parsing.TokenParser.IsIdentifierChar(Kusto.Language.Parsing.TokenParser.Peek(text,pos))?-1:pos>start?pos-start|0:-1},ScanLongLiteral:function(text,start){var hexLen,len;return(start===void 0&&(start=0),hexLen=Kusto.Language.Parsing.TokenParser.ScanHexIntegerLiteral(text,start),hexLen>0)?hexLen:(len=Kusto.Language.Parsing.TokenParser.ScanDigits(text,start),len>0&&!Kusto.Language.Parsing.TokenParser.IsIdentifierChar(Kusto.Language.Parsing.TokenParser.Peek(text,start+len|0)))?len:-1},ScanExponent:function(text,start){var pos=start,expch=Kusto.Language.Parsing.TokenParser.Peek(text,pos),signch,exponentLen;if(expch===101||expch===69){if(pos=pos+1|0,signch=Kusto.Language.Parsing.TokenParser.Peek(text,pos),(signch===43||signch===45)&&(pos=pos+1|0),exponentLen=Kusto.Language.Parsing.TokenParser.ScanDigits(text,pos),exponentLen<=0)return-1;pos=pos+exponentLen|0}return pos>start?pos-start|0:-1},ScanRealLiteral:function(text,start){var digitLen,pos,fractionLen,expLen,expLen1;if(start===void 0&&(start=0),digitLen=Kusto.Language.Parsing.TokenParser.ScanDigits(text,start),digitLen<=0)return-1;if(pos=start+digitLen|0,Kusto.Language.Parsing.TokenParser.Peek(text,pos)===46&&(Kusto.Language.Parsing.TokenParser.Peek(text,pos+1|0)!==46||Kusto.Language.Parsing.TokenParser.Peek(text,pos+2|0)===46))pos=pos+1|0,fractionLen=Kusto.Language.Parsing.TokenParser.ScanDigits(text,pos),fractionLen>0&&(pos=pos+fractionLen|0),expLen=Kusto.Language.Parsing.TokenParser.ScanExponent(text,pos),expLen>0&&(pos=pos+expLen|0);else{if(expLen1=Kusto.Language.Parsing.TokenParser.ScanExponent(text,pos),expLen1<=0)return-1;pos=pos+expLen1|0}return Kusto.Language.Parsing.TokenParser.IsIdentifierChar(Kusto.Language.Parsing.TokenParser.Peek(text,pos))?-1:pos>start?pos-start|0:-1},ScanTimespanLiteral:function(text,start){var numberLen,fractionLen,suffixMatch,len;return(start===void 0&&(start=0),numberLen=Kusto.Language.Parsing.TokenParser.ScanDigits(text,start),numberLen<=0)?-1:(Kusto.Language.Parsing.TokenParser.Peek(text,start+numberLen|0)===46&&(fractionLen=Kusto.Language.Parsing.TokenParser.ScanDigits(text,(start+numberLen|0)+1|0),fractionLen>=0&&(numberLen=numberLen+(fractionLen+1|0)|0)),suffixMatch=Kusto.Language.Parsing.TokenParser.TimespanSuffixMap.GetLongestMatch(text,start+numberLen|0),suffixMatch.key.length<=0)?-1:(len=numberLen+suffixMatch.key.length|0,Kusto.Language.Parsing.TokenParser.IsIdentifierChar(Kusto.Language.Parsing.TokenParser.Peek(text,start+len|0)))?-1:len},ScanStringLiteral:function(text,start,failWhenMissingEndQuote){var pos,ch,isVerbatim,contentLength;if(start===void 0&&(start=0),failWhenMissingEndQuote===void 0&&(failWhenMissingEndQuote=!1),pos=start,ch=Kusto.Language.Parsing.TokenParser.Peek(text,pos),(ch===104||ch===72)&&(pos=pos+1|0,ch=Kusto.Language.Parsing.TokenParser.Peek(text,pos)),isVerbatim=!1,ch===64&&(isVerbatim=!0,pos=pos+1|0,ch=Kusto.Language.Parsing.TokenParser.Peek(text,pos)),ch===39||ch===34){if(pos=pos+1|0,contentLength=Kusto.Language.Parsing.TokenParser.ScanStringLiteralContent(text,pos,ch,isVerbatim),pos=pos+contentLength|0,Kusto.Language.Parsing.TokenParser.Peek(text,pos)===ch)pos=pos+1|0;else if(failWhenMissingEndQuote)return-1}else if(Kusto.Language.Parsing.TokenParser.Matches(text,pos,Kusto.Language.KustoFacts.MultiLineStringQuote)){if(pos=pos+Kusto.Language.KustoFacts.MultiLineStringQuote.length|0,pos=pos+Kusto.Language.Parsing.TokenParser.ScanMultiLineStringLiteralContent(text,pos,Kusto.Language.KustoFacts.MultiLineStringQuote)|0,Kusto.Language.Parsing.TokenParser.Matches(text,pos,Kusto.Language.KustoFacts.MultiLineStringQuote))pos=pos+Kusto.Language.KustoFacts.MultiLineStringQuote.length|0;else if(failWhenMissingEndQuote)return-1}else if(Kusto.Language.Parsing.TokenParser.Matches(text,pos,Kusto.Language.KustoFacts.AlternateMultiLineStringQuote)){if(pos=pos+Kusto.Language.KustoFacts.AlternateMultiLineStringQuote.length|0,pos=pos+Kusto.Language.Parsing.TokenParser.ScanMultiLineStringLiteralContent(text,pos,Kusto.Language.KustoFacts.AlternateMultiLineStringQuote)|0,Kusto.Language.Parsing.TokenParser.Matches(text,pos,Kusto.Language.KustoFacts.AlternateMultiLineStringQuote))pos=pos+Kusto.Language.KustoFacts.AlternateMultiLineStringQuote.length|0;else if(failWhenMissingEndQuote)return-1}else return-1;return pos>start?pos-start|0:-1},ScanStringLiteralContent:function(text,start,quote,isVerbatim){for(var pos=start,ch,escapeLen;!Kusto.Language.Parsing.TokenParser.IsAtEnd(text,pos);)if(ch=Kusto.Language.Parsing.TokenParser.Peek(text,pos),ch===quote&&isVerbatim&&Kusto.Language.Parsing.TokenParser.Peek(text,pos+1|0)===quote){pos=pos+2|0;continue}else if(ch!==92||isVerbatim)if(ch===quote||ch===13||ch===10)break;else pos=pos+1|0;else if(escapeLen=Kusto.Language.Parsing.TokenParser.ScanStringEscape(text,pos),escapeLen>0){pos=pos+escapeLen|0;continue}else break;return pos-start|0},ScanMultiLineStringLiteralContent:function(text,start,endQuote){for(var pos=start;pos<text.length&&!Kusto.Language.Parsing.TokenParser.Matches(text,pos,endQuote);)pos=pos+1|0;return pos-start|0},ScanStringEscape:function(text,start){var ch=Kusto.Language.Parsing.TokenParser.Peek(text,start),len;if(ch===92){ch=Kusto.Language.Parsing.TokenParser.Peek(text,start+1|0);switch(ch){case 92:case 39:case 34:case 97:case 98:case 102:case 110:case 114:case 116:case 118:return 2;case 117:return(len=Kusto.Language.Parsing.TokenParser.ScanFourHexDigits(text,start+2|0),len>0)?len+2|0:-1;case 85:return(len=Kusto.Language.Parsing.TokenParser.ScanEightHexDigits(text,start+2|0),len>0)?len+2|0:-1;case 120:return(len=Kusto.Language.Parsing.TokenParser.ScanTwoHexDigits(text,start+2|0),len>0)?len+2|0:-1;default:if(len=Kusto.Language.Parsing.TokenParser.ScanOctalCode(text,start+1|0),len>0)return len+1|0;break}}return-1},ScanTwoHexDigits:function(text,start){return(start+1|0)<text.length&&Kusto.Language.Parsing.TextFacts.IsHexDigit(text.charCodeAt(start))&&Kusto.Language.Parsing.TextFacts.IsHexDigit(text.charCodeAt(start+1|0))?2:-1},ScanFourHexDigits:function(text,start){return(start+3|0)<text.length&&Kusto.Language.Parsing.TextFacts.IsHexDigit(text.charCodeAt(start))&&Kusto.Language.Parsing.TextFacts.IsHexDigit(text.charCodeAt(start+1|0))&&Kusto.Language.Parsing.TextFacts.IsHexDigit(text.charCodeAt(start+2|0))&&Kusto.Language.Parsing.TextFacts.IsHexDigit(text.charCodeAt(start+3|0))?4:-1},ScanEightHexDigits:function(text,start){return(start+7|0)<text.length&&Kusto.Language.Parsing.TextFacts.IsHexDigit(text.charCodeAt(start))&&Kusto.Language.Parsing.TextFacts.IsHexDigit(text.charCodeAt(start+1|0))&&Kusto.Language.Parsing.TextFacts.IsHexDigit(text.charCodeAt(start+2|0))&&Kusto.Language.Parsing.TextFacts.IsHexDigit(text.charCodeAt(start+3|0))&&Kusto.Language.Parsing.TextFacts.IsHexDigit(text.charCodeAt(start+4|0))&&Kusto.Language.Parsing.TextFacts.IsHexDigit(text.charCodeAt(start+5|0))&&Kusto.Language.Parsing.TextFacts.IsHexDigit(text.charCodeAt(start+6|0))&&Kusto.Language.Parsing.TextFacts.IsHexDigit(text.charCodeAt(start+7|0))?8:-1},ScanTwelveHexDigits:function(text,start){return(start+11|0)<text.length&&Kusto.Language.Parsing.TextFacts.IsHexDigit(text.charCodeAt(start))&&Kusto.Language.Parsing.TextFacts.IsHexDigit(text.charCodeAt(start+1|0))&&Kusto.Language.Parsing.TextFacts.IsHexDigit(text.charCodeAt(start+2|0))&&Kusto.Language.Parsing.TextFacts.IsHexDigit(text.charCodeAt(start+3|0))&&Kusto.Language.Parsing.TextFacts.IsHexDigit(text.charCodeAt(start+4|0))&&Kusto.Language.Parsing.TextFacts.IsHexDigit(text.charCodeAt(start+5|0))&&Kusto.Language.Parsing.TextFacts.IsHexDigit(text.charCodeAt(start+6|0))&&Kusto.Language.Parsing.TextFacts.IsHexDigit(text.charCodeAt(start+7|0))&&Kusto.Language.Parsing.TextFacts.IsHexDigit(text.charCodeAt(start+8|0))&&Kusto.Language.Parsing.TextFacts.IsHexDigit(text.charCodeAt(start+9|0))&&Kusto.Language.Parsing.TextFacts.IsHexDigit(text.charCodeAt(start+10|0))&&Kusto.Language.Parsing.TextFacts.IsHexDigit(text.charCodeAt(start+11|0))?12:-1},ScanOctalCode:function(text,start){var ch1=Kusto.Language.Parsing.TokenParser.Peek(text,start),ch2,ch3;return ch1>=48&&ch1<=55?(ch2=Kusto.Language.Parsing.TokenParser.Peek(text,start+1|0),ch2>=48&&ch2<=55?(ch3=Kusto.Language.Parsing.TokenParser.Peek(text,start+2|0),ch3>=48&&ch3<=55&&ch1<=51?3:2):1):-1},ScanGoo:function(text,start,options){var pos=start,ch;if(Kusto.Language.Parsing.TokenParser.Peek(text,pos)===40){for(pos=pos+1|0;pos<text.length&&(ch=text.charCodeAt(pos))!==41&&(options.AllowLiteralsWithLineBreaks||!Kusto.Language.Parsing.TextFacts.IsLineBreakStart(ch));)pos=pos+1|0;Kusto.Language.Parsing.TokenParser.Peek(text,pos)===41&&(pos=pos+1|0)}return pos>start?pos-start|0:-1},ScanClientParameter:function(text,start){if(start===void 0&&(start=0),Kusto.Language.Parsing.TokenParser.Peek(text,start)===123){var idLen=Kusto.Language.Parsing.TokenParser.ScanIdentifier(text,start+1|0);if(idLen>0&&Kusto.Language.Parsing.TokenParser.Peek(text,(start+idLen|0)+1|0)===125)return idLen+2|0}return-1},Peek:function(text,position){return position<text.length?text.charCodeAt(position):0},IsAtEnd:function(text,position){return position>=text.length},Matches:function(text,start,match){var $t;if((start+match.length|0)>text.length)return!1;switch(match.length){case 1:return match.charCodeAt(0)===text.charCodeAt(start);case 2:return match.charCodeAt(0)===text.charCodeAt(start)&&match.charCodeAt(1)===text.charCodeAt(start+1|0);case 3:return match.charCodeAt(0)===text.charCodeAt(start)&&match.charCodeAt(1)===text.charCodeAt(start+1|0)&&match.charCodeAt(2)===text.charCodeAt(start+2|0);default:return match.charCodeAt(0)===text.charCodeAt(start)&&($t=match.length,System.String.compare(text.substr(start,$t),match.substr(0,$t),4))===0}}}},fields:{_stringTable:null},ctors:{$ctor1:function(stringTable){this.$initialize();this._stringTable=stringTable},ctor:function(){Kusto.Language.Parsing.TokenParser.$ctor1.call(this,new Kusto.Language.Utils.StringTable)}},methods:{Parse:function(text,start,options){var tok,pos=start,trivia=this.ParseTrivia(text,pos),ch,ch2,info,directiveEnd,keywordMatch,nextChar,gooKind,gooLen,gooText,dx,literalMatch,rawGuidLen,idLen,rawGuidLen1,realLen,timeLen,longLen,identifierLen,subtext;if(pos=pos+trivia.length|0,ch=Kusto.Language.Parsing.TokenParser.Peek(text,pos),!Kusto.Language.Parsing.TextFacts.IsLetterOrDigit(ch)){if(info=Kusto.Language.Parsing.TokenParser.GetPunctuationTokenInfo(text,pos),info!=null)return info.GetToken(trivia);if(Kusto.Language.Parsing.TokenParser.IsStringLiteralStartQuote(ch)){if(tok=this.ParseStringLiteral(text,pos,trivia),tok!=null)return tok}else if(ch===64){if(ch2=Kusto.Language.Parsing.TokenParser.Peek(text,pos+1|0),Kusto.Language.Parsing.TokenParser.IsStringLiteralStartQuote(ch2)&&(tok=this.ParseStringLiteral(text,pos,trivia),tok!=null))return tok}else if(ch===35)return directiveEnd=Kusto.Language.Parsing.TokenParser.GetNextLineStart(text,pos),new Kusto.Language.Parsing.LexicalToken.$ctor1(Kusto.Language.Syntax.SyntaxKind.DirectiveToken,trivia,this.GetSubstring(text,pos,directiveEnd-pos|0));else if(Kusto.Language.Parsing.TokenParser.IsAtEnd(text,pos))return trivia.length>0||options.AlwaysProduceEndToken?new Kusto.Language.Parsing.LexicalToken.$ctor1(Kusto.Language.Syntax.SyntaxKind.EndOfTextToken,trivia,""):null}if(keywordMatch=Kusto.Language.Parsing.TokenParser.s_tokenInfoSubstringMap.GetLongestMatch(text,pos),keywordMatch.key.length>0){if(nextChar=Kusto.Language.Parsing.TokenParser.Peek(text,pos+keywordMatch.key.length|0),nextChar===40&&(gooKind=Kusto.Language.Parsing.TokenParser.GetGooLiteralTokenKind(keywordMatch.value.Kind),gooKind!==Kusto.Language.Syntax.SyntaxKind.None&&(gooLen=Kusto.Language.Parsing.TokenParser.ScanGoo(text,pos+keywordMatch.key.length|0,options),gooLen>0)))return gooText=this.GetSubstring(text,pos,keywordMatch.key.length+gooLen|0),dx=System.String.endsWith(gooText,")")?null:Kusto.Language.DiagnosticFacts.GetMissingText(")").WithLocationKind(Kusto.Language.DiagnosticLocationKind.RelativeEnd),new Kusto.Language.Parsing.LexicalToken.ctor(gooKind,trivia,gooText,dx);if(!Kusto.Language.Parsing.TokenParser.IsIdentifierChar(nextChar))return keywordMatch.value.GetToken(trivia)}if(Kusto.Language.Parsing.TokenParser.IsIdentifierStartChar(ch))return(literalMatch=Kusto.Language.Parsing.TokenParser.s_literalValueMap.GetLongestMatch(text,pos),literalMatch.key.length>0&&!Kusto.Language.Parsing.TokenParser.IsIdentifierChar(Kusto.Language.Parsing.TokenParser.Peek(text,pos+literalMatch.key.length|0)))?new Kusto.Language.Parsing.LexicalToken.$ctor1(literalMatch.value,trivia,literalMatch.key):(rawGuidLen=this.ScanRawGuidLiteral(text,pos),rawGuidLen>0)?new Kusto.Language.Parsing.LexicalToken.$ctor1(Kusto.Language.Syntax.SyntaxKind.RawGuidLiteralToken,trivia,this.GetSubstring(text,pos,rawGuidLen)):(idLen=Kusto.Language.Parsing.TokenParser.ScanIdentifier(text,pos),idLen===1&&(ch===104||ch===72)&&(ch2=Kusto.Language.Parsing.TokenParser.Peek(text,pos+1|0),(Kusto.Language.Parsing.TokenParser.IsStringLiteralStartQuote(ch2)||ch2===64)&&(tok=this.ParseStringLiteral(text,pos,trivia),tok!=null)))?tok:new Kusto.Language.Parsing.LexicalToken.$ctor1(Kusto.Language.Syntax.SyntaxKind.IdentifierToken,trivia,this.GetSubstring(text,pos,idLen));else if(System.Char.isDigit(ch)){if(rawGuidLen1=this.ScanRawGuidLiteral(text,pos),rawGuidLen1>0)return new Kusto.Language.Parsing.LexicalToken.$ctor1(Kusto.Language.Syntax.SyntaxKind.RawGuidLiteralToken,trivia,this.GetSubstring(text,pos,rawGuidLen1));if(realLen=Kusto.Language.Parsing.TokenParser.ScanRealLiteral(text,pos),realLen>=0)return new Kusto.Language.Parsing.LexicalToken.$ctor1(Kusto.Language.Syntax.SyntaxKind.RealLiteralToken,trivia,this.GetSubstring(text,pos,realLen));if(timeLen=Kusto.Language.Parsing.TokenParser.ScanTimespanLiteral(text,pos),timeLen>=0)return new Kusto.Language.Parsing.LexicalToken.$ctor1(Kusto.Language.Syntax.SyntaxKind.TimespanLiteralToken,trivia,this.GetSubstring(text,pos,timeLen));if(longLen=Kusto.Language.Parsing.TokenParser.ScanLongLiteral(text,pos),longLen>0)return new Kusto.Language.Parsing.LexicalToken.$ctor1(Kusto.Language.Syntax.SyntaxKind.LongLiteralToken,trivia,this.GetSubstring(text,pos,longLen));if(identifierLen=Kusto.Language.Parsing.TokenParser.ScanIdentifier(text,pos),identifierLen>=0)return new Kusto.Language.Parsing.LexicalToken.$ctor1(Kusto.Language.Syntax.SyntaxKind.IdentifierToken,trivia,this.GetSubstring(text,pos,identifierLen))}return subtext=this.GetSubstring(text,pos,1),new Kusto.Language.Parsing.LexicalToken.$ctor1(Kusto.Language.Syntax.SyntaxKind.BadToken,trivia,subtext,System.Array.init([Kusto.Language.DiagnosticFacts.GetUnexpectedCharacter(subtext)],Kusto.Language.Diagnostic))},ParseStringLiteral:function(text,start,trivia){var pos=start,dx=null,ch=Kusto.Language.Parsing.TokenParser.Peek(text,pos),isVerbatim,contentLength,contentLength1;if((ch===104||ch===72)&&(pos=pos+1|0,ch=Kusto.Language.Parsing.TokenParser.Peek(text,pos)),isVerbatim=!1,ch===64&&(isVerbatim=!0,pos=pos+1|0,ch=Kusto.Language.Parsing.TokenParser.Peek(text,pos)),ch===39)pos=pos+1|0,contentLength=Kusto.Language.Parsing.TokenParser.ScanStringLiteralContent(text,pos,ch,isVerbatim),pos=pos+contentLength|0,Kusto.Language.Parsing.TokenParser.Peek(text,pos)===ch?pos=pos+1|0:dx=Kusto.Language.DiagnosticFacts.GetMissingText("'").WithLocationKind(Kusto.Language.DiagnosticLocationKind.RelativeEnd);else if(ch===34)pos=pos+1|0,contentLength1=Kusto.Language.Parsing.TokenParser.ScanStringLiteralContent(text,pos,ch,isVerbatim),pos=pos+contentLength1|0,Kusto.Language.Parsing.TokenParser.Peek(text,pos)===ch?pos=pos+1|0:dx=Kusto.Language.DiagnosticFacts.GetMissingText('"').WithLocationKind(Kusto.Language.DiagnosticLocationKind.RelativeEnd);else if(Kusto.Language.Parsing.TokenParser.Matches(text,pos,Kusto.Language.KustoFacts.MultiLineStringQuote))pos=pos+Kusto.Language.KustoFacts.MultiLineStringQuote.length|0,pos=pos+Kusto.Language.Parsing.TokenParser.ScanMultiLineStringLiteralContent(text,pos,Kusto.Language.KustoFacts.MultiLineStringQuote)|0,Kusto.Language.Parsing.TokenParser.Matches(text,pos,Kusto.Language.KustoFacts.MultiLineStringQuote)?pos=pos+Kusto.Language.KustoFacts.MultiLineStringQuote.length|0:dx=Kusto.Language.DiagnosticFacts.GetMissingText(Kusto.Language.KustoFacts.MultiLineStringQuote).WithLocationKind(Kusto.Language.DiagnosticLocationKind.RelativeEnd);else if(Kusto.Language.Parsing.TokenParser.Matches(text,pos,Kusto.Language.KustoFacts.AlternateMultiLineStringQuote))pos=pos+Kusto.Language.KustoFacts.AlternateMultiLineStringQuote.length|0,pos=pos+Kusto.Language.Parsing.TokenParser.ScanMultiLineStringLiteralContent(text,pos,Kusto.Language.KustoFacts.AlternateMultiLineStringQuote)|0,Kusto.Language.Parsing.TokenParser.Matches(text,pos,Kusto.Language.KustoFacts.AlternateMultiLineStringQuote)?pos=pos+Kusto.Language.KustoFacts.AlternateMultiLineStringQuote.length|0:dx=Kusto.Language.DiagnosticFacts.GetMissingText(Kusto.Language.KustoFacts.AlternateMultiLineStringQuote).WithLocationKind(Kusto.Language.DiagnosticLocationKind.RelativeEnd);else return null;return new Kusto.Language.Parsing.LexicalToken.ctor(Kusto.Language.Syntax.SyntaxKind.StringLiteralToken,trivia,this.GetSubstring(text,start,pos-start|0),dx)},ParseTrivia:function(text,start){var len=Kusto.Language.Parsing.TokenParser.ScanSpaces(text,start),pos=start+len|0,ch=Kusto.Language.Parsing.TokenParser.Peek(text,pos),wsLen,tlen,tlen1;return Kusto.Language.Parsing.TextFacts.IsWhitespace(ch)?(wsLen=Kusto.Language.Parsing.TokenParser.ScanWhitespace(text,pos),pos=pos+wsLen|0,ch=Kusto.Language.Parsing.TokenParser.Peek(text,pos),ch===47&&Kusto.Language.Parsing.TokenParser.Peek(text,pos+1|0)===47?(tlen=Kusto.Language.Parsing.TokenParser.ScanTrivia(text,pos),this.GetSubstring(text,start,(len+wsLen|0)+tlen|0,!1)):this.GetSubstring(text,start,len+wsLen|0)):ch===47&&Kusto.Language.Parsing.TokenParser.Peek(text,pos+1|0)===47?(tlen1=Kusto.Language.Parsing.TokenParser.ScanTrivia(text,pos),this.GetSubstring(text,start,len+tlen1|0,!1)):len===0?"":len===1?" ":len<Kusto.Language.Parsing.TokenParser.s_spaces.length?Kusto.Language.Parsing.TokenParser.s_spaces[System.Array.index(len,Kusto.Language.Parsing.TokenParser.s_spaces)]:this.GetSubstring(text,start,len)},ScanRawGuidLiteral:function(text,start){return(start+35|0)<text.length&&Kusto.Language.Parsing.TokenParser.ScanEightHexDigits(text,start)===8&&text.charCodeAt(start+8|0)===45&&Kusto.Language.Parsing.TokenParser.ScanFourHexDigits(text,start+9|0)===4&&text.charCodeAt(start+13|0)===45&&Kusto.Language.Parsing.TokenParser.ScanFourHexDigits(text,start+14|0)===4&&text.charCodeAt(start+18|0)===45&&Kusto.Language.Parsing.TokenParser.ScanFourHexDigits(text,start+19|0)===4&&text.charCodeAt(start+23|0)===45&&Kusto.Language.Parsing.TokenParser.ScanTwelveHexDigits(text,start+24|0)===12?36:-1},GetSubstring:function(text,start,len,intern){return intern===void 0&&(intern=!0),this._stringTable!=null&&intern?this._stringTable.Add$1(text,start,len):text.substr(start,len)}}});Bridge.define("Kusto.Language.Parsing.TokenParser.TokenInfo",{$kind:"nested class",fields:{Kind:0,Text:null,ZeroTriviaToken:null,SingleWhitespaceToken:null},ctors:{ctor:function(kind){this.$initialize();this.Kind=kind;this.Text=Kusto.Language.Syntax.SyntaxFacts.GetText(kind);this.ZeroTriviaToken=new Kusto.Language.Parsing.LexicalToken.$ctor1(kind,"",this.Text);this.SingleWhitespaceToken=new Kusto.Language.Parsing.LexicalToken.$ctor1(kind," ",this.Text)}},methods:{GetToken:function(trivia){return trivia.length===0?this.ZeroTriviaToken:Bridge.referenceEquals(trivia," ")?this.SingleWhitespaceToken:new Kusto.Language.Parsing.LexicalToken.$ctor1(this.Kind,trivia,this.Text)}}});Bridge.define("Kusto.Language.Parsing.TriviaFacts",{statics:{methods:{TryGetCommentSpan:function(trivia,position,start,length){start.v=0;length.v=0;for(var p=0;p<trivia.length&&p<=position;p=p+1|0)if(length.v=Kusto.Language.Parsing.TriviaFacts.GetCommentLength(trivia,p),length.v>0)if(position>=p&&position<=(p+length.v|0))return start.v=p,!0;else p=p+(length.v-1|0)|0;return!1},GetCommentLength:function(trivia,start){var end=start,lbLen;if(!Kusto.Language.Parsing.TextFacts.IsWhitespace(trivia.charCodeAt(start)))for(;end<trivia.length;end=end+1|0)if(lbLen=Kusto.Language.Parsing.TextFacts.GetLineBreakLength(trivia,end),lbLen>0){end=end+lbLen|0;break}return end-start|0}}}});Bridge.define("Kusto.Language.PlugIns",{statics:{fields:{ActiveUseCounts:null,ActivityCountsMetrics:null,ActivityEngagement:null,ActivityMetrics:null,nam_IdColumn:null,nam_TimelineColumn:null,nam_Start:null,nam_End:null,nam_Window:null,nam_Cohort:null,nam_Dimension:null,nam_Lookback:null,NewActivityMetrics:null,AutoClusterColumns:null,AutoCluster:null,BagUnpack:null,BasketColumns:null,Basket:null,DCountIntersect:null,DiffPatternsColumns:null,DiffPatterns:null,EstimateRowsCount:null,ExecuteShowCommand:null,ExecuteQuery:null,ExternalDatatable:null,FunnelSequence:null,FunnelSequenceCompletion:null,HttpRequestColumns:null,HttpRequest:null,HttpRequestPost:null,Identity:null,IdentityV3:null,InferStorageSchema:null,InferStorageSchemaWithSuggestions:null,Ipv4_lookup_LookupTable:null,Ipv4_lookup_SourceIPv4Key:null,Ipv4_lookup_IPv4LookupKey:null,IPv4_lookup_ExtraKey:null,IPv4_lookup_return_unmatched:null,Ipv4_Lookup:null,Ipv6_lookup_LookupTable:null,Ipv6_lookup_SourceIPv6Key:null,Ipv6_lookup_IPv6LookupKey:null,Ipv6_Lookup:null,SchemaMerge:null,NarrowColumns:null,Narrow:null,Pivot:null,Preview:null,CSharp:null,Python:null,R:null,RollingPercentile:null,RowsNear:null,SessionCount:null,SD_TimelineColumn:null,SD_MaxSequenceStepWindows:null,SD_MaxSequenceSpan:null,SD_Expr:null,SD_Dimension:null,SequenceDetect:null,SlidingWindowCounts:null,SqlRequest:null,MySqlRequest:null,PostgreSqlRequest:null,CosmosdbSqlRequest:null,AzureDigitalTwinsQueryRequest:null,s_nameToPlugInMap:null},props:{All:null},ctors:{init:function(){this.ActiveUseCounts=new Kusto.Language.Symbols.FunctionSymbol.ctor("active_users_count",function(context){var cols=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor);return Kusto.Language.FunctionHelpers.AddReferencedColumn(cols,context,"TimelineColumn"),Kusto.Language.FunctionHelpers.AddReferencedColumns(cols,context,"Dimension"),cols.add(new Kusto.Language.Symbols.ColumnSymbol("dcount",Kusto.Language.Symbols.ScalarTypes.Long)),new Kusto.Language.Symbols.TableSymbol.$ctor3(cols)},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.ctor("IdColumn",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.ctor("TimelineColumn",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.ctor("Start",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("End",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("LookbackWindow",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("Period",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("ActivePeriods",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("Step",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("Dimension",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic,Kusto.Language.Symbols.ArgumentKind.Column,void 0,void 0,!1,void 0,0,Kusto.Language.FunctionHelpers.MaxRepeat,void 0,void 0)]);this.ActivityCountsMetrics=new Kusto.Language.Symbols.FunctionSymbol.ctor("activity_counts_metrics",function(context){var cols=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor);return Kusto.Language.FunctionHelpers.AddReferencedColumn(cols,context,"TimelineColumn"),Kusto.Language.FunctionHelpers.AddReferencedColumns(cols,context,"Dimension"),cols.add(new Kusto.Language.Symbols.ColumnSymbol("count",Kusto.Language.Symbols.ScalarTypes.Long)),cols.add(new Kusto.Language.Symbols.ColumnSymbol("dcount",Kusto.Language.Symbols.ScalarTypes.Long)),cols.add(new Kusto.Language.Symbols.ColumnSymbol("new_dcount",Kusto.Language.Symbols.ScalarTypes.Long)),cols.add(new Kusto.Language.Symbols.ColumnSymbol("aggregated_dcount",Kusto.Language.Symbols.ScalarTypes.Long)),new Kusto.Language.Symbols.TableSymbol.$ctor3(cols)},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.ctor("IdColumn",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.ctor("TimelineColumn",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.ctor("Start",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("End",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("Step",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("Dimension",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic,Kusto.Language.Symbols.ArgumentKind.Column,void 0,void 0,!1,void 0,0,Kusto.Language.FunctionHelpers.MaxRepeat,void 0,void 0)]);this.ActivityEngagement=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("activity_engagement",[new Kusto.Language.Symbols.Signature.ctor(function(context){var cols=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor);return Kusto.Language.FunctionHelpers.AddReferencedColumn(cols,context,"TimelineColumn"),cols.add(new Kusto.Language.Symbols.ColumnSymbol("dcount_activities_inner",Kusto.Language.Symbols.ScalarTypes.Long)),cols.add(new Kusto.Language.Symbols.ColumnSymbol("dcount_activities_outer",Kusto.Language.Symbols.ScalarTypes.Long)),cols.add(new Kusto.Language.Symbols.ColumnSymbol("activity_ratio",Kusto.Language.Symbols.ScalarTypes.Real)),new Kusto.Language.Symbols.TableSymbol.$ctor3(cols)},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.ctor("IdColumn",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.ctor("TimelineColumn",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.ctor("InnerActivityWindow",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("OuterActivityWindow",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant)]),new Kusto.Language.Symbols.Signature.ctor(function(context){var cols=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor);return Kusto.Language.FunctionHelpers.AddReferencedColumn(cols,context,"TimelineColumn"),Kusto.Language.FunctionHelpers.AddReferencedColumns(cols,context,"Dimension"),cols.add(new Kusto.Language.Symbols.ColumnSymbol("dcount_activities_inner",Kusto.Language.Symbols.ScalarTypes.Long)),cols.add(new Kusto.Language.Symbols.ColumnSymbol("dcount_activities_outer",Kusto.Language.Symbols.ScalarTypes.Long)),cols.add(new Kusto.Language.Symbols.ColumnSymbol("activity_ratio",Kusto.Language.Symbols.ScalarTypes.Real)),new Kusto.Language.Symbols.TableSymbol.$ctor3(cols)},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.ctor("IdColumn",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.ctor("TimelineColumn",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.ctor("Start",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("End",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("InnerActivityWindow",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("OuterActivityWindow",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("Dimension",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic,Kusto.Language.Symbols.ArgumentKind.Column,void 0,void 0,!1,void 0,0,Kusto.Language.FunctionHelpers.MaxRepeat,void 0,void 0)])]);this.ActivityMetrics=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("activity_metrics",[new Kusto.Language.Symbols.Signature.ctor(function(context){var cols=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor);return Kusto.Language.FunctionHelpers.AddReferencedColumn(cols,context,"TimelineColumn"),Kusto.Language.FunctionHelpers.AddReferencedColumns(cols,context,"Dimension"),cols.add(new Kusto.Language.Symbols.ColumnSymbol("dcount_values",Kusto.Language.Symbols.ScalarTypes.Long)),cols.add(new Kusto.Language.Symbols.ColumnSymbol("dcount_newvalues",Kusto.Language.Symbols.ScalarTypes.Long)),cols.add(new Kusto.Language.Symbols.ColumnSymbol("retention_rate",Kusto.Language.Symbols.ScalarTypes.Real)),cols.add(new Kusto.Language.Symbols.ColumnSymbol("churn_rate",Kusto.Language.Symbols.ScalarTypes.Real)),new Kusto.Language.Symbols.TableSymbol.$ctor3(cols)},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.ctor("IdColumn",Kusto.Language.Symbols.ParameterTypeKind.Scalar,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.ctor("TimelineColumn",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.ctor("Start",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("End",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("Step",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("Dimension",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic,Kusto.Language.Symbols.ArgumentKind.Column,void 0,void 0,!1,void 0,0,Kusto.Language.FunctionHelpers.MaxRepeat,void 0,void 0)]),new Kusto.Language.Symbols.Signature.ctor(function(context){var cols=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor);return Kusto.Language.FunctionHelpers.AddReferencedColumn(cols,context,"TimelineColumn"),cols.add(new Kusto.Language.Symbols.ColumnSymbol("dcount_values",Kusto.Language.Symbols.ScalarTypes.Long)),cols.add(new Kusto.Language.Symbols.ColumnSymbol("dcount_newvalues",Kusto.Language.Symbols.ScalarTypes.Long)),cols.add(new Kusto.Language.Symbols.ColumnSymbol("retention_rate",Kusto.Language.Symbols.ScalarTypes.Real)),cols.add(new Kusto.Language.Symbols.ColumnSymbol("churn_rate",Kusto.Language.Symbols.ScalarTypes.Real)),new Kusto.Language.Symbols.TableSymbol.$ctor3(cols)},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.ctor("IdColumn",Kusto.Language.Symbols.ParameterTypeKind.Scalar,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.ctor("TimelineColumn",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.ctor("Start",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant,void 0,void 0,!1,void 0,0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.ctor("End",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant,void 0,void 0,!1,void 0,0,1,void 0,void 0)])]);this.nam_IdColumn=new Kusto.Language.Symbols.Parameter.ctor("IdColumn",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic,Kusto.Language.Symbols.ArgumentKind.Column);this.nam_TimelineColumn=new Kusto.Language.Symbols.Parameter.ctor("TimelineColumn",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Column);this.nam_Start=new Kusto.Language.Symbols.Parameter.ctor("Start",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant);this.nam_End=new Kusto.Language.Symbols.Parameter.ctor("End",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant);this.nam_Window=new Kusto.Language.Symbols.Parameter.ctor("Window",Kusto.Language.Symbols.ParameterTypeKind.Scalar);this.nam_Cohort=new Kusto.Language.Symbols.Parameter.ctor("Cohort",Kusto.Language.Symbols.ParameterTypeKind.Scalar,Kusto.Language.Symbols.ArgumentKind.Constant,void 0,void 0,!1,void 0,0,1,void 0,void 0);this.nam_Dimension=new Kusto.Language.Symbols.Parameter.ctor("Dimension",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic,Kusto.Language.Symbols.ArgumentKind.Column,void 0,void 0,!1,void 0,0,Kusto.Language.FunctionHelpers.MaxRepeat,void 0,void 0);this.nam_Lookback=new Kusto.Language.Symbols.Parameter.ctor("lookback",Kusto.Language.Symbols.ParameterTypeKind.Tabular,0,void 0,void 0,!1,void 0,0,1,void 0,void 0);this.NewActivityMetrics=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("new_activity_metrics",[new Kusto.Language.Symbols.Signature.ctor(function(context){var cols=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor),timelineArg=context.GetArgument$1("TimelineColumn"),timelineArgName;return timelineArg!=null&&(timelineArgName=context.GetResultName(timelineArg),cols.add(new Kusto.Language.Symbols.ColumnSymbol(Kusto.Language.FunctionHelpers.MakeColumnName(["from",timelineArgName]),timelineArg.ResultType)),cols.add(new Kusto.Language.Symbols.ColumnSymbol(Kusto.Language.FunctionHelpers.MakeColumnName(["to",timelineArgName]),timelineArg.ResultType))),Kusto.Language.FunctionHelpers.AddReferencedColumns(cols,context,"Dimension"),cols.add(new Kusto.Language.Symbols.ColumnSymbol("dcount_new_values",Kusto.Language.Symbols.ScalarTypes.Long)),cols.add(new Kusto.Language.Symbols.ColumnSymbol("dcount_retained_values",Kusto.Language.Symbols.ScalarTypes.Long)),cols.add(new Kusto.Language.Symbols.ColumnSymbol("dcount_churn_values",Kusto.Language.Symbols.ScalarTypes.Long)),cols.add(new Kusto.Language.Symbols.ColumnSymbol("retention_rate",Kusto.Language.Symbols.ScalarTypes.Real)),cols.add(new Kusto.Language.Symbols.ColumnSymbol("churn_rate",Kusto.Language.Symbols.ScalarTypes.Real)),new Kusto.Language.Symbols.TableSymbol.$ctor3(cols)},Kusto.Language.Symbols.Tabularity.Tabular,[Kusto.Language.PlugIns.nam_IdColumn,Kusto.Language.PlugIns.nam_TimelineColumn,Kusto.Language.PlugIns.nam_Start,Kusto.Language.PlugIns.nam_End,Kusto.Language.PlugIns.nam_Window,Kusto.Language.PlugIns.nam_Cohort,Kusto.Language.PlugIns.nam_Dimension,Kusto.Language.PlugIns.nam_Lookback]).WithLayout$1(function(sig,args,list){list.add(Kusto.Language.PlugIns.nam_IdColumn);list.add(Kusto.Language.PlugIns.nam_TimelineColumn);list.add(Kusto.Language.PlugIns.nam_Start);list.add(Kusto.Language.PlugIns.nam_End);list.add(Kusto.Language.PlugIns.nam_Window);System.Array.getCount(args,Kusto.Language.Syntax.Expression)>5&&(System.Array.getItem(args,5,Kusto.Language.Syntax.Expression).IsConstant||!Bridge.is(System.Array.getItem(args,5,Kusto.Language.Syntax.Expression).ReferencedSymbol,Kusto.Language.Symbols.ColumnSymbol))&&list.add(Kusto.Language.PlugIns.nam_Cohort);for(var i=list.Count;i<System.Array.getCount(args,Kusto.Language.Syntax.Expression)&&!Bridge.is(System.Array.getItem(args,i,Kusto.Language.Syntax.Expression).ResultType,Kusto.Language.Symbols.TableSymbol);i=i+1|0)list.add(Kusto.Language.PlugIns.nam_Dimension);i<System.Array.getCount(args,Kusto.Language.Syntax.Expression)&&list.add(Kusto.Language.PlugIns.nam_Lookback)})]);this.AutoClusterColumns=System.Array.init([new Kusto.Language.Symbols.ColumnSymbol("SegmentId",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("Count",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("Percent",Kusto.Language.Symbols.ScalarTypes.Real)],Kusto.Language.Symbols.ColumnSymbol);this.AutoCluster=new Kusto.Language.Symbols.FunctionSymbol.ctor("autocluster",function(context){return new Kusto.Language.Symbols.TableSymbol.$ctor3(System.Linq.Enumerable.from(Kusto.Language.PlugIns.AutoClusterColumns,Kusto.Language.Symbols.ColumnSymbol).concat(context.RowScope.Columns)).WithInheritableProperties(context.RowScope)},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.$ctor3("SizeWeight",Kusto.Language.Symbols.ScalarTypes.Real,0,void 0,void 0,!1,"~",0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.ctor("WeightColumn",Kusto.Language.Symbols.ParameterTypeKind.Scalar,Kusto.Language.Symbols.ArgumentKind.Column,void 0,void 0,!1,"~",0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.ctor("NumSeeds",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,"~",0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.ctor("CustomWildcard",Kusto.Language.Symbols.ParameterTypeKind.Scalar,0,void 0,void 0,!1,void 0,0,Kusto.Language.FunctionHelpers.MaxRepeat,void 0,void 0)]);this.BagUnpack=new Kusto.Language.Symbols.FunctionSymbol.ctor("bag_unpack",function(context){return new Kusto.Language.Symbols.TableSymbol.$ctor3(System.Linq.Enumerable.from(context.RowScope.Columns,Kusto.Language.Symbols.ColumnSymbol).where(function(c){return System.Array.getCount(context.Arguments,Kusto.Language.Syntax.Expression)===0||!Bridge.referenceEquals(c,System.Array.getItem(context.Arguments,0,Kusto.Language.Syntax.Expression).ReferencedSymbol)})).WithInheritableProperties(context.RowScope).WithIsOpen(!0)},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.ctor("column",Kusto.Language.Symbols.ParameterTypeKind.Scalar,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.$ctor3("column_prefix",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.LiteralNotEmpty,void 0,void 0,!1,void 0,0,1,void 0,void 0)]);this.BasketColumns=System.Array.init([new Kusto.Language.Symbols.ColumnSymbol("SegmentId",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("Count",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("Percent",Kusto.Language.Symbols.ScalarTypes.Real)],Kusto.Language.Symbols.ColumnSymbol);this.Basket=new Kusto.Language.Symbols.FunctionSymbol.ctor("basket",function(context){return new Kusto.Language.Symbols.TableSymbol.$ctor3(System.Linq.Enumerable.from(Kusto.Language.PlugIns.BasketColumns,Kusto.Language.Symbols.ColumnSymbol).concat(context.RowScope.Columns)).WithInheritableProperties(context.RowScope)},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.$ctor3("Threshold",Kusto.Language.Symbols.ScalarTypes.Real,0,void 0,void 0,!1,"~",0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.ctor("WeightColumn",Kusto.Language.Symbols.ParameterTypeKind.Scalar,Kusto.Language.Symbols.ArgumentKind.Column,void 0,void 0,!1,"~",0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.ctor("MaxDimensions",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,"~",0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.ctor("CustomWildcard",Kusto.Language.Symbols.ParameterTypeKind.Scalar,0,void 0,void 0,!1,void 0,0,Kusto.Language.FunctionHelpers.MaxRepeat,void 0,void 0)]);this.DCountIntersect=new Kusto.Language.Symbols.FunctionSymbol.ctor("dcount_intersect",function(context){return new Kusto.Language.Symbols.TableSymbol.$ctor3(System.Linq.Enumerable.from(context.RowScope.Columns,Kusto.Language.Symbols.ColumnSymbol).concat(System.Linq.Enumerable.from(context.Arguments,Kusto.Language.Syntax.Expression).select(function(a,i){return new Kusto.Language.Symbols.ColumnSymbol("s"+i,Kusto.Language.Symbols.ScalarTypes.Long)}))).WithInheritableProperties(context.RowScope)},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.ctor("hll",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray,0,void 0,void 0,!1,void 0,2,Kusto.Language.FunctionHelpers.MaxRepeat,void 0,void 0)]);this.DiffPatternsColumns=System.Array.init([new Kusto.Language.Symbols.ColumnSymbol("SegmentId",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("CountA",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("CountB",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("PercentA",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("PercentB",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("PercentDiffAB",Kusto.Language.Symbols.ScalarTypes.Real)],Kusto.Language.Symbols.ColumnSymbol);this.DiffPatterns=new Kusto.Language.Symbols.FunctionSymbol.ctor("diffpatterns",function(context){return new Kusto.Language.Symbols.TableSymbol.$ctor3(System.Linq.Enumerable.from(Kusto.Language.PlugIns.DiffPatternsColumns,Kusto.Language.Symbols.ColumnSymbol).concat(context.RowScope.Columns)).WithInheritableProperties(context.RowScope)},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.ctor("SplitColumn",Kusto.Language.Symbols.ParameterTypeKind.Scalar,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.$ctor2("SplitValueA",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor2("SplitValueB",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.ctor("WeightColumn",Kusto.Language.Symbols.ParameterTypeKind.Scalar,Kusto.Language.Symbols.ArgumentKind.Column,void 0,void 0,!1,"~",0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.$ctor3("Threshold",Kusto.Language.Symbols.ScalarTypes.Real,0,void 0,void 0,!1,"~",0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.ctor("MaxDimensions",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,"~",0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.ctor("CustomWildcard",Kusto.Language.Symbols.ParameterTypeKind.Scalar,0,void 0,void 0,!1,void 0,0,Kusto.Language.FunctionHelpers.MaxRepeat,void 0,void 0)]);this.EstimateRowsCount=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("estimate_rows_count",[new Kusto.Language.Symbols.Signature.ctor(function(context){return new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("EstimatedRowsCount",Kusto.Language.Symbols.ScalarTypes.Long)])},Kusto.Language.Symbols.Tabularity.Tabular)]);this.ExecuteShowCommand=new Kusto.Language.Symbols.FunctionSymbol.ctor("execute_show_command",function(context){return(new Kusto.Language.Symbols.TableSymbol.ctor).WithIsOpen(!0)},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.$ctor2("connection_string",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor2("command",Kusto.Language.Symbols.ScalarTypes.String)]);this.ExecuteQuery=new Kusto.Language.Symbols.FunctionSymbol.ctor("execute_query",function(context){return(new Kusto.Language.Symbols.TableSymbol.ctor).WithIsOpen(!0)},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.$ctor2("connection_string",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor2("query",Kusto.Language.Symbols.ScalarTypes.String)]);this.ExternalDatatable=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("external_datatable",[new Kusto.Language.Symbols.Signature.ctor(function(context){return(new Kusto.Language.Symbols.TableSymbol.ctor).WithIsOpen(!0)},Kusto.Language.Symbols.Tabularity.Tabular)]);this.FunnelSequence=new Kusto.Language.Symbols.FunctionSymbol.ctor("funnel_sequence",function(context){var cols=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor),stateArg;return Kusto.Language.FunctionHelpers.AddReferencedColumn(cols,context,"TimelineColumn"),stateArg=context.GetArgument$1("StateColumn"),stateArg!=null&&(cols.add(new Kusto.Language.Symbols.ColumnSymbol("prev",stateArg.ResultType,void 0,void 0,stateArg,void 0)),cols.add(new Kusto.Language.Symbols.ColumnSymbol("next",stateArg.ResultType,void 0,void 0,stateArg,void 0))),cols.add(new Kusto.Language.Symbols.ColumnSymbol("dcount",Kusto.Language.Symbols.ScalarTypes.Long)),cols.add(new Kusto.Language.Symbols.ColumnSymbol("samples",Kusto.Language.Symbols.ScalarTypes.DynamicArray)),new Kusto.Language.Symbols.TableSymbol.$ctor3(cols)},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.ctor("IdColumn",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.ctor("TimelineColumn",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.ctor("Start",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("End",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("MaxWindowSizeBetweenSteps",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("Step",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("StateColumn",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.ctor("Sequence",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray,Kusto.Language.Symbols.ArgumentKind.Constant)]);this.FunnelSequenceCompletion=new Kusto.Language.Symbols.FunctionSymbol.ctor("funnel_sequence_completion",function(context){var cols=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor),stateArg;return Kusto.Language.FunctionHelpers.AddReferencedColumn(cols,context,"TimelineColumn"),stateArg=context.GetArgument$1("StateColumn"),stateArg!=null&&cols.add(new Kusto.Language.Symbols.ColumnSymbol(context.GetResultName(stateArg),Kusto.Language.Symbols.ScalarTypes.String,void 0,void 0,stateArg,void 0)),cols.add(new Kusto.Language.Symbols.ColumnSymbol("Period",Kusto.Language.Symbols.ScalarTypes.TimeSpan)),cols.add(new Kusto.Language.Symbols.ColumnSymbol("dcount",Kusto.Language.Symbols.ScalarTypes.Long)),new Kusto.Language.Symbols.TableSymbol.$ctor3(cols)},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.ctor("IdColumn",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.ctor("TimelineColumn",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.ctor("Start",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("End",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("BinSize",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("StateColumn",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.ctor("Sequence",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("MaxSequencePeriods",Kusto.Language.Symbols.ParameterTypeKind.DynamicArray,Kusto.Language.Symbols.ArgumentKind.Constant)]);this.HttpRequestColumns=System.Array.init([new Kusto.Language.Symbols.ColumnSymbol("ResponseHeaders",Kusto.Language.Symbols.ScalarTypes.DynamicBag),new Kusto.Language.Symbols.ColumnSymbol("ResponseBody",Kusto.Language.Symbols.ScalarTypes.Dynamic)],Kusto.Language.Symbols.ColumnSymbol);this.HttpRequest=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("http_request",new Kusto.Language.Symbols.TableSymbol.$ctor3(Kusto.Language.PlugIns.HttpRequestColumns),[new Kusto.Language.Symbols.Parameter.$ctor3("Uri",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("RequestHeaders",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag,0,void 0,void 0,!1,void 0,0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.ctor("Options",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]);this.HttpRequestPost=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("http_request_post",new Kusto.Language.Symbols.TableSymbol.$ctor3(Kusto.Language.PlugIns.HttpRequestColumns),[new Kusto.Language.Symbols.Parameter.$ctor3("Uri",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("RequestHeaders",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag,0,void 0,void 0,!1,void 0,0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.ctor("Options",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag,0,void 0,void 0,!1,void 0,0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.$ctor3("Content",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Constant,void 0,void 0,!1,void 0,0,1,void 0,void 0)]);this.Identity=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("identity",[new Kusto.Language.Symbols.Signature.ctor(function(context){return context.RowScope},Kusto.Language.Symbols.Tabularity.Tabular)]);this.IdentityV3=new Kusto.Language.Symbols.FunctionSymbol.ctor("identity_v3",function(context){return context.RowScope},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.$ctor3("mode",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.$ctor3("exceptionText",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Constant)]);this.InferStorageSchema=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("infer_storage_schema",new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("CslSchema",Kusto.Language.Symbols.ScalarTypes.String)]),[new Kusto.Language.Symbols.Parameter.ctor("Options",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag)]);this.InferStorageSchemaWithSuggestions=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("infer_storage_schema_with_suggestions",new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("SuggestedTableSchema",Kusto.Language.Symbols.ScalarTypes.String)]),[new Kusto.Language.Symbols.Parameter.ctor("Options",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag)]);this.Ipv4_lookup_LookupTable=new Kusto.Language.Symbols.Parameter.ctor("LookupTable",Kusto.Language.Symbols.ParameterTypeKind.Tabular);this.Ipv4_lookup_SourceIPv4Key=new Kusto.Language.Symbols.Parameter.ctor("SourceIPv4Key",Kusto.Language.Symbols.ParameterTypeKind.Scalar,Kusto.Language.Symbols.ArgumentKind.Column);this.Ipv4_lookup_IPv4LookupKey=new Kusto.Language.Symbols.Parameter.ctor("IPv4LookupKey",Kusto.Language.Symbols.ParameterTypeKind.Scalar,Kusto.Language.Symbols.ArgumentKind.Column_Parameter0);this.IPv4_lookup_ExtraKey=new Kusto.Language.Symbols.Parameter.ctor("ExtraKey",Kusto.Language.Symbols.ParameterTypeKind.Scalar,Kusto.Language.Symbols.ArgumentKind.Column_Parameter0_Common,void 0,void 0,!1,void 0,0,Kusto.Language.FunctionHelpers.MaxRepeat,void 0,void 0);this.IPv4_lookup_return_unmatched=new Kusto.Language.Symbols.Parameter.$ctor3("return_unmatched",Kusto.Language.Symbols.ScalarTypes.Bool,Kusto.Language.Symbols.ArgumentKind.Literal,void 0,void 0,!1,void 0,0,1,void 0,void 0);this.Ipv4_Lookup=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("ipv4_lookup",[new Kusto.Language.Symbols.Signature.ctor(function(context){var $t,lookupTable=Bridge.as(($t=context.GetArgument$1(Kusto.Language.PlugIns.Ipv4_lookup_LookupTable.Name))!=null?$t.ResultType:null,Kusto.Language.Symbols.TableSymbol),keyColumns,cols,combinedColumns;return lookupTable!=null?(keyColumns=System.Linq.Enumerable.from(context.GetArguments$1(Kusto.Language.PlugIns.IPv4_lookup_ExtraKey.Name),Kusto.Language.Syntax.Expression).select(function(e){return Bridge.as(e.ReferencedSymbol,Kusto.Language.Symbols.ColumnSymbol)}).where(function(c){return c!=null}).toList(Kusto.Language.Symbols.ColumnSymbol),cols=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor),cols.AddRange(context.RowScope.Columns),cols.AddRange(System.Linq.Enumerable.from(lookupTable.Columns,Kusto.Language.Symbols.ColumnSymbol).where(function(c){return!System.Linq.Enumerable.from(keyColumns,Kusto.Language.Symbols.ColumnSymbol).any(function(kc){return Bridge.referenceEquals(kc.Name,c.Name)})})),combinedColumns=Kusto.Language.Symbols.ColumnSymbol.Combine$1(Kusto.Language.Symbols.CombineKind.UniqueNames,[cols]),new Kusto.Language.Symbols.TableSymbol.$ctor3(combinedColumns)):context.RowScope},Kusto.Language.Symbols.Tabularity.Tabular,[Kusto.Language.PlugIns.Ipv4_lookup_LookupTable,Kusto.Language.PlugIns.Ipv4_lookup_SourceIPv4Key,Kusto.Language.PlugIns.Ipv4_lookup_IPv4LookupKey,Kusto.Language.PlugIns.IPv4_lookup_ExtraKey,Kusto.Language.PlugIns.IPv4_lookup_return_unmatched]).WithLayout$1(function(signature,args,parameters){var i,sne,lit;for(parameters.add(Kusto.Language.PlugIns.Ipv4_lookup_LookupTable),parameters.add(Kusto.Language.PlugIns.Ipv4_lookup_SourceIPv4Key),parameters.add(Kusto.Language.PlugIns.Ipv4_lookup_IPv4LookupKey),i=3;i<System.Array.getCount(args,Kusto.Language.Syntax.Expression);i=i+1|0)i===(System.Array.getCount(args,Kusto.Language.Syntax.Expression)-1|0)&&((sne=Bridge.as(System.Array.getItem(args,i,Kusto.Language.Syntax.Expression),Kusto.Language.Syntax.SimpleNamedExpression))!=null&&Bridge.referenceEquals(sne.Name.SimpleName,Kusto.Language.PlugIns.IPv4_lookup_return_unmatched.Name)||(lit=Bridge.as(System.Array.getItem(args,i,Kusto.Language.Syntax.Expression),Kusto.Language.Syntax.LiteralExpression))!=null&&lit.Kind===Kusto.Language.Syntax.SyntaxKind.BooleanLiteralExpression)?parameters.add(Kusto.Language.PlugIns.IPv4_lookup_return_unmatched):parameters.add(Kusto.Language.PlugIns.IPv4_lookup_ExtraKey)})]);this.Ipv6_lookup_LookupTable=new Kusto.Language.Symbols.Parameter.ctor("LookupTable",Kusto.Language.Symbols.ParameterTypeKind.Tabular);this.Ipv6_lookup_SourceIPv6Key=new Kusto.Language.Symbols.Parameter.ctor("SourceIPv6Key",Kusto.Language.Symbols.ParameterTypeKind.Scalar,Kusto.Language.Symbols.ArgumentKind.Column);this.Ipv6_lookup_IPv6LookupKey=new Kusto.Language.Symbols.Parameter.ctor("IPv6LookupKey",Kusto.Language.Symbols.ParameterTypeKind.Scalar,Kusto.Language.Symbols.ArgumentKind.Column_Parameter0);this.Ipv6_Lookup=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("ipv6_lookup",[new Kusto.Language.Symbols.Signature.ctor(function(context){var $t,lookupTable=Bridge.as(($t=context.GetArgument$1(Kusto.Language.PlugIns.Ipv6_lookup_LookupTable.Name))!=null?$t.ResultType:null,Kusto.Language.Symbols.TableSymbol),cols,combinedColumns;return lookupTable!=null?(cols=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor),cols.AddRange(context.RowScope.Columns),combinedColumns=Kusto.Language.Symbols.ColumnSymbol.Combine$1(Kusto.Language.Symbols.CombineKind.UniqueNames,[cols]),new Kusto.Language.Symbols.TableSymbol.$ctor3(combinedColumns)):context.RowScope},Kusto.Language.Symbols.Tabularity.Tabular,[Kusto.Language.PlugIns.Ipv6_lookup_LookupTable,Kusto.Language.PlugIns.Ipv6_lookup_SourceIPv6Key,Kusto.Language.PlugIns.Ipv6_lookup_IPv6LookupKey]).WithLayout$1(function(signature,args,parameters){parameters.add(Kusto.Language.PlugIns.Ipv6_lookup_LookupTable);parameters.add(Kusto.Language.PlugIns.Ipv4_lookup_SourceIPv4Key);parameters.add(Kusto.Language.PlugIns.Ipv6_lookup_IPv6LookupKey)})]).Hide();this.SchemaMerge=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("schema_merge",new Kusto.Language.Symbols.TableSymbol.ctor(System.Array.init([new Kusto.Language.Symbols.ColumnSymbol("ColumnName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("ColumnOrdinal",Kusto.Language.Symbols.ScalarTypes.Int),new Kusto.Language.Symbols.ColumnSymbol("DataType",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("ColumnType",Kusto.Language.Symbols.ScalarTypes.String)],Kusto.Language.Symbols.ColumnSymbol)),[new Kusto.Language.Symbols.Parameter.$ctor2("PreserveOrder",Kusto.Language.Symbols.ScalarTypes.Bool)]);this.NarrowColumns=System.Array.init([new Kusto.Language.Symbols.ColumnSymbol("Row",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("Column",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Value",Kusto.Language.Symbols.ScalarTypes.String)],Kusto.Language.Symbols.ColumnSymbol);this.Narrow=new Kusto.Language.Symbols.FunctionSymbol.$ctor5("narrow",new Kusto.Language.Symbols.TableSymbol.$ctor3(Kusto.Language.PlugIns.NarrowColumns));this.Pivot=new Kusto.Language.Symbols.FunctionSymbol.ctor("pivot",function(context){var pivotColumn=System.Array.getCount(context.Arguments,Kusto.Language.Syntax.Expression)>0?Bridge.as(System.Array.getItem(context.Arguments,0,Kusto.Language.Syntax.Expression).ReferencedSymbol,Kusto.Language.Symbols.ColumnSymbol):null,fc,aggregateColumn=System.Array.getCount(context.Arguments,Kusto.Language.Syntax.Expression)>1&&(fc=Bridge.as(System.Array.getItem(context.Arguments,1,Kusto.Language.Syntax.Expression),Kusto.Language.Syntax.FunctionCallExpression))!=null&&fc.ArgumentList.Expressions.Count>0?Bridge.as(fc.ArgumentList.Expressions.getItem$1(0).Element$1.ReferencedSymbol,Kusto.Language.Symbols.ColumnSymbol):null,columns=System.Linq.Enumerable.from(context.Arguments,Kusto.Language.Syntax.Expression).skip(2).select(function(a){return Bridge.as(a.ReferencedSymbol,Kusto.Language.Symbols.ColumnSymbol)}).where(function(c){return c!=null}).toList(Kusto.Language.Symbols.ColumnSymbol);return columns.Count===0&&columns.AddRange(System.Linq.Enumerable.from(context.RowScope.Columns,Kusto.Language.Symbols.ColumnSymbol).where(function(c){return!Bridge.referenceEquals(c,pivotColumn)&&!Bridge.referenceEquals(c,aggregateColumn)})),new Kusto.Language.Symbols.TableSymbol.$ctor3(columns).WithIsOpen(!0)},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.ctor("pivotColumn",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.ctor("aggregateFunction",Kusto.Language.Symbols.ParameterTypeKind.Scalar,Kusto.Language.Symbols.ArgumentKind.Aggregate,void 0,void 0,!1,void 0,0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.ctor("columnName",Kusto.Language.Symbols.ParameterTypeKind.Scalar,Kusto.Language.Symbols.ArgumentKind.Column,void 0,void 0,!1,void 0,0,Kusto.Language.FunctionHelpers.MaxRepeat,void 0,void 0)]);this.Preview=new Kusto.Language.Symbols.FunctionSymbol.ctor("preview",function(context){return new Kusto.Language.Symbols.GroupSymbol.ctor([context.RowScope,new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("Count",Kusto.Language.Symbols.ScalarTypes.Long)])])},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.ctor("NumberOfRows",Kusto.Language.Symbols.ParameterTypeKind.Integer)]);this.CSharp=new Kusto.Language.Symbols.FunctionSymbol.ctor("csharp",Kusto.Language.PlugIns.GetOutputSchema,Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.$ctor2("OutputSchema",Kusto.Language.Symbols.ScalarTypes.Type),new Kusto.Language.Symbols.Parameter.$ctor2("Script",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.ctor("Arguments",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]);this.Python=new Kusto.Language.Symbols.FunctionSymbol.ctor("python",Kusto.Language.PlugIns.GetOutputSchema,Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.$ctor2("OutputSchema",Kusto.Language.Symbols.ScalarTypes.Type),new Kusto.Language.Symbols.Parameter.$ctor2("Script",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.ctor("Arguments",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag,0,void 0,void 0,!1,void 0,0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.ctor("Artifacts",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]);this.R=new Kusto.Language.Symbols.FunctionSymbol.ctor("r",Kusto.Language.PlugIns.GetOutputSchema,Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.$ctor2("OutputSchema",Kusto.Language.Symbols.ScalarTypes.Type),new Kusto.Language.Symbols.Parameter.$ctor2("Script",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.ctor("Arguments",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]);this.RollingPercentile=new Kusto.Language.Symbols.FunctionSymbol.ctor("rolling_percentile",function(context){var $t,$t1,$t2,$t3,$t4,$t5,$t6,$t7,cols=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor);Kusto.Language.FunctionHelpers.AddReferencedColumn(cols,context,"IndexColumn");Kusto.Language.FunctionHelpers.AddReferencedColumns(cols,context,"Dimension");var binsPerWindow=($t=($t1=context.GetArgument$1("BinsPerWindow"))!=null&&($t2=$t1.LiteralValue)!=null?Bridge.toString($t2):null,$t!=null?$t:"0"),percentile=($t3=($t4=context.GetArgument$1("Percentile"))!=null&&($t5=$t4.LiteralValue)!=null?Bridge.toString($t5):null,$t3!=null?$t3:"0"),valueColumn=Bridge.as(($t6=context.GetArgument$1("ValueColumn"))!=null?$t6.ReferencedSymbol:null,Kusto.Language.Symbols.ColumnSymbol);return cols.add(new Kusto.Language.Symbols.ColumnSymbol(System.String.format("rolling_{0}_percentile_{1}_{2}",binsPerWindow,($t7=valueColumn!=null?valueColumn.Name:null,$t7!=null?$t7:"value"),percentile),(valueColumn!=null?valueColumn.Type:null)||Kusto.Language.Symbols.ScalarTypes.Long)),new Kusto.Language.Symbols.TableSymbol.$ctor3(cols)},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.ctor("ValueColumn",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.ctor("Percentile",Kusto.Language.Symbols.ParameterTypeKind.Number,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("IndexColumn",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.ctor("BinSize",Kusto.Language.Symbols.ParameterTypeKind.Summable),new Kusto.Language.Symbols.Parameter.ctor("BinsPerWindow",Kusto.Language.Symbols.ParameterTypeKind.Integer,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("Dimension",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic,Kusto.Language.Symbols.ArgumentKind.Column,void 0,void 0,!1,void 0,0,Kusto.Language.FunctionHelpers.MaxRepeat,void 0,void 0)]);this.RowsNear=new Kusto.Language.Symbols.FunctionSymbol.ctor("rows_near",function(context){return context.RowScope},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.$ctor3("Condition",Kusto.Language.Symbols.ScalarTypes.Bool,Kusto.Language.Symbols.ArgumentKind.Expression),new Kusto.Language.Symbols.Parameter.ctor("NumRows",Kusto.Language.Symbols.ParameterTypeKind.Integer,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("NumRowsAfter",Kusto.Language.Symbols.ParameterTypeKind.Integer,Kusto.Language.Symbols.ArgumentKind.Constant,void 0,void 0,!1,void 0,0,1,void 0,void 0)]);this.SessionCount=new Kusto.Language.Symbols.FunctionSymbol.ctor("session_count",function(context){var cols=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor);return Kusto.Language.FunctionHelpers.AddReferencedColumn(cols,context,"TimelineColumn"),Kusto.Language.FunctionHelpers.AddReferencedColumns(cols,context,"Dimension"),cols.add(new Kusto.Language.Symbols.ColumnSymbol("count_sessions",Kusto.Language.Symbols.ScalarTypes.Long)),new Kusto.Language.Symbols.TableSymbol.$ctor3(cols)},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.ctor("IdColumn",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.ctor("TimelineColumn",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.ctor("Start",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("End",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("Bin",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("LookBackWindow",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("Dimension",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic,Kusto.Language.Symbols.ArgumentKind.Column,void 0,void 0,!1,void 0,0,Kusto.Language.FunctionHelpers.MaxRepeat,void 0,void 0)]);this.SD_TimelineColumn=new Kusto.Language.Symbols.Parameter.ctor("TimelineColumn",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Column);this.SD_MaxSequenceStepWindows=new Kusto.Language.Symbols.Parameter.ctor("MaxSeqeunceStepWindow",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant);this.SD_MaxSequenceSpan=new Kusto.Language.Symbols.Parameter.ctor("MaxSequenceSpan",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant);this.SD_Expr=new Kusto.Language.Symbols.Parameter.$ctor3("Expr",Kusto.Language.Symbols.ScalarTypes.Bool,Kusto.Language.Symbols.ArgumentKind.Expression,void 0,void 0,!1,void 0,1,Kusto.Language.FunctionHelpers.MaxRepeat,void 0,void 0);this.SD_Dimension=new Kusto.Language.Symbols.Parameter.ctor("Dimension",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic,Kusto.Language.Symbols.ArgumentKind.Column,void 0,void 0,!1,void 0,0,Kusto.Language.FunctionHelpers.MaxRepeat,void 0,void 0);this.SequenceDetect=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("sequence_detect",[new Kusto.Language.Symbols.Signature.ctor(function(context){var cols=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor),timelineArg,timelineArgName;return Kusto.Language.FunctionHelpers.AddReferencedColumns(cols,context,Kusto.Language.PlugIns.SD_Dimension.Name),timelineArg=context.GetArgument$1(Kusto.Language.PlugIns.SD_TimelineColumn.Name),timelineArg!=null&&(timelineArgName=context.GetResultName(timelineArg),cols.AddRange(System.Linq.Enumerable.from(context.GetArguments$1(Kusto.Language.PlugIns.SD_Expr.Name),Kusto.Language.Syntax.Expression).select(function(a){return new Kusto.Language.Symbols.ColumnSymbol(Kusto.Language.FunctionHelpers.MakeColumnName([context.GetResultName(a),timelineArgName]),timelineArg.ResultType)}))),cols.add(new Kusto.Language.Symbols.ColumnSymbol("Duration",Kusto.Language.Symbols.ScalarTypes.TimeSpan)),new Kusto.Language.Symbols.TableSymbol.$ctor3(cols)},Kusto.Language.Symbols.Tabularity.Tabular,[Kusto.Language.PlugIns.SD_TimelineColumn,Kusto.Language.PlugIns.SD_MaxSequenceStepWindows,Kusto.Language.PlugIns.SD_MaxSequenceSpan,Kusto.Language.PlugIns.SD_Expr,Kusto.Language.PlugIns.SD_Dimension]).WithLayout$1(function(sig,args,list){list.add(Kusto.Language.PlugIns.SD_TimelineColumn);list.add(Kusto.Language.PlugIns.SD_MaxSequenceStepWindows);list.add(Kusto.Language.PlugIns.SD_MaxSequenceSpan);list.add(Kusto.Language.PlugIns.SD_Expr);for(var i=list.Count;i<System.Array.getCount(args,Kusto.Language.Syntax.Expression)&&Kusto.Language.FunctionHelpers.IsBoolean(System.Array.getItem(args,i,Kusto.Language.Syntax.Expression));i=i+1|0)list.add(Kusto.Language.PlugIns.SD_Expr);for(;i<System.Array.getCount(args,Kusto.Language.Syntax.Expression);i=i+1|0)list.add(Kusto.Language.PlugIns.SD_Dimension)})]);this.SlidingWindowCounts=new Kusto.Language.Symbols.FunctionSymbol.ctor("sliding_window_counts",function(context){var cols=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor);return Kusto.Language.FunctionHelpers.AddReferencedColumn(cols,context,"TimelineColumn"),Kusto.Language.FunctionHelpers.AddReferencedColumns(cols,context,"Dimension"),cols.add(new Kusto.Language.Symbols.ColumnSymbol("Count",Kusto.Language.Symbols.ScalarTypes.Long)),cols.add(new Kusto.Language.Symbols.ColumnSymbol("Dcount",Kusto.Language.Symbols.ScalarTypes.Long)),new Kusto.Language.Symbols.TableSymbol.$ctor3(cols)},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.ctor("IdColumn",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.ctor("TimelineColumn",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.ctor("Start",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("End",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("LookBackWindow",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("Step",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("Dimension",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic,Kusto.Language.Symbols.ArgumentKind.Column,void 0,void 0,!1,void 0,0,Kusto.Language.FunctionHelpers.MaxRepeat,void 0,void 0)]);this.SqlRequest=new Kusto.Language.Symbols.FunctionSymbol.ctor("sql_request",function(context){return(new Kusto.Language.Symbols.TableSymbol.ctor).WithIsOpen(!0)},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.$ctor2("connection_string",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor2("sql_query",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.ctor("sql_parameters",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag,0,void 0,void 0,!1,void 0,0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.ctor("options",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]);this.MySqlRequest=new Kusto.Language.Symbols.FunctionSymbol.ctor("mysql_request",function(context){return(new Kusto.Language.Symbols.TableSymbol.ctor).WithIsOpen(!0)},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.$ctor2("connection_string",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor2("sql_query",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.ctor("sql_parameters",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag,0,void 0,void 0,!1,void 0,0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.ctor("options",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]);this.PostgreSqlRequest=new Kusto.Language.Symbols.FunctionSymbol.ctor("postgresql_request",function(context){return(new Kusto.Language.Symbols.TableSymbol.ctor).WithIsOpen(!0)},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.$ctor2("connection_string",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor2("sql_query",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.ctor("sql_parameters",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag,0,void 0,void 0,!1,void 0,0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.ctor("options",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]).Hide();this.CosmosdbSqlRequest=new Kusto.Language.Symbols.FunctionSymbol.ctor("cosmosdb_sql_request",function(context){return(new Kusto.Language.Symbols.TableSymbol.ctor).WithIsOpen(!0)},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.$ctor2("connection_string",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor2("sql_query",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.ctor("sql_parameters",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag,0,void 0,void 0,!1,void 0,0,1,void 0,void 0),new Kusto.Language.Symbols.Parameter.ctor("options",Kusto.Language.Symbols.ParameterTypeKind.DynamicBag,0,void 0,void 0,!1,void 0,0,1,void 0,void 0)]);this.AzureDigitalTwinsQueryRequest=new Kusto.Language.Symbols.FunctionSymbol.ctor("azure_digital_twins_query_request",function(context){return(new Kusto.Language.Symbols.TableSymbol.ctor).WithIsOpen(!0)},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.$ctor2("endpoint",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor2("sql_query",Kusto.Language.Symbols.ScalarTypes.String)]);this.All=System.Array.init([Kusto.Language.PlugIns.ActiveUseCounts,Kusto.Language.PlugIns.ActivityCountsMetrics,Kusto.Language.PlugIns.ActivityEngagement,Kusto.Language.PlugIns.ActivityMetrics,Kusto.Language.PlugIns.AzureDigitalTwinsQueryRequest,Kusto.Language.PlugIns.AutoCluster,Kusto.Language.PlugIns.BagUnpack,Kusto.Language.PlugIns.Basket,Kusto.Language.PlugIns.CosmosdbSqlRequest,Kusto.Language.PlugIns.CSharp,Kusto.Language.PlugIns.DCountIntersect,Kusto.Language.PlugIns.DiffPatterns,Kusto.Language.PlugIns.EstimateRowsCount,Kusto.Language.PlugIns.ExecuteShowCommand,Kusto.Language.PlugIns.ExecuteQuery,Kusto.Language.PlugIns.ExternalDatatable,Kusto.Language.PlugIns.FunnelSequence,Kusto.Language.PlugIns.FunnelSequenceCompletion,Kusto.Language.PlugIns.HttpRequest,Kusto.Language.PlugIns.HttpRequestPost,Kusto.Language.PlugIns.Identity,Kusto.Language.PlugIns.IdentityV3,Kusto.Language.PlugIns.InferStorageSchema,Kusto.Language.PlugIns.Ipv4_Lookup,Kusto.Language.PlugIns.Ipv6_Lookup,Kusto.Language.PlugIns.Narrow,Kusto.Language.PlugIns.NewActivityMetrics,Kusto.Language.PlugIns.Pivot,Kusto.Language.PlugIns.Preview,Kusto.Language.PlugIns.Python,Kusto.Language.PlugIns.R,Kusto.Language.PlugIns.RollingPercentile,Kusto.Language.PlugIns.RowsNear,Kusto.Language.PlugIns.SessionCount,Kusto.Language.PlugIns.SequenceDetect,Kusto.Language.PlugIns.SlidingWindowCounts,Kusto.Language.PlugIns.SqlRequest,Kusto.Language.PlugIns.MySqlRequest,Kusto.Language.PlugIns.PostgreSqlRequest],Kusto.Language.Symbols.FunctionSymbol)}},methods:{GetOutputSchema:function(context){var schema;return System.Array.getCount(context.Arguments,Kusto.Language.Syntax.Expression)>0&&(schema=Bridge.as(System.Array.getItem(context.Arguments,0,Kusto.Language.Syntax.Expression).ReferencedSymbol,Kusto.Language.Symbols.TableSymbol))!=null?schema:(new Kusto.Language.Symbols.TableSymbol.ctor).WithIsOpen(!0)},GetPlugIn:function(name){var $t,fn;return Kusto.Language.PlugIns.s_nameToPlugInMap==null&&(Kusto.Language.PlugIns.s_nameToPlugInMap=($t=Kusto.Language.Symbols.FunctionSymbol,System.Linq.Enumerable.from(Kusto.Language.PlugIns.All,$t).toDictionary(function(f){return f.Name},null,System.String,$t))),fn={},Kusto.Language.PlugIns.s_nameToPlugInMap.tryGetValue(name,fn),fn.v}}}});Bridge.define("Kusto.Language.Properties",{statics:{fields:{AllowClientParameters:null},ctors:{init:function(){this.AllowClientParameters=new(Kusto.Language.GlobalStateProperty$1(System.Boolean))("AllowClientParameters")}}}});Bridge.define("Kusto.Language.Symbols.Symbol",{statics:{methods:{GetResultType:function(symbol){var $t,c,v,e,p,g,resultSymbols,m,rs;do{if(Bridge.is(symbol,Kusto.Language.Symbols.ColumnSymbol))return c=Bridge.cast(symbol,Kusto.Language.Symbols.ColumnSymbol),c.Type;if(Bridge.is(symbol,Kusto.Language.Symbols.VariableSymbol))return v=Bridge.cast(symbol,Kusto.Language.Symbols.VariableSymbol),Kusto.Language.Symbols.Symbol.GetResultType(v.Type);if(Bridge.is(symbol,Kusto.Language.Symbols.EntityGroupElementSymbol))return e=Bridge.cast(symbol,Kusto.Language.Symbols.EntityGroupElementSymbol),Kusto.Language.Symbols.Symbol.GetResultType(e.UnderlyingSymbol);if(Bridge.is(symbol,Kusto.Language.Symbols.ParameterSymbol))return p=Bridge.cast(symbol,Kusto.Language.Symbols.ParameterSymbol),p.Type;if(Bridge.is(symbol,Kusto.Language.Symbols.GroupSymbol)){g=Bridge.cast(symbol,Kusto.Language.Symbols.GroupSymbol);resultSymbols=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.Symbol).ctor);$t=Bridge.getEnumerator(g.Members,Kusto.Language.Symbols.Symbol);try{while($t.moveNext())m=$t.Current,rs=Kusto.Language.Symbols.Symbol.GetResultType(m),rs!=null&&resultSymbols.add(rs)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return resultSymbols.Count===1?Bridge.as(resultSymbols.getItem(0),Kusto.Language.Symbols.TypeSymbol):resultSymbols.Count>1?new Kusto.Language.Symbols.GroupSymbol.$ctor1(resultSymbols):null}return Bridge.is(symbol,Kusto.Language.Symbols.TypeSymbol)?Bridge.cast(symbol,Kusto.Language.Symbols.TypeSymbol):null}while(0)},AreAssignable$1:function(targetTypes,sourceType,allowedConversion){allowedConversion===void 0&&(allowedConversion=0);for(var i=0;i<System.Array.getCount(targetTypes,Kusto.Language.Symbols.TypeSymbol);i=i+1|0)if(Kusto.Language.Symbols.Symbol.AreAssignable(System.Array.getItem(targetTypes,i,Kusto.Language.Symbols.TypeSymbol),sourceType,allowedConversion))return!0;return!1},AreAssignable:function(targetType,sourceType,allowedConversion){var stt,tp,sp,tarCol,srcCol,_discard1,_discard2,tarTable,tarPrim,scrPrim,tarArray,srcArray,tarBag,srcBag;if(allowedConversion===void 0&&(allowedConversion=0),Bridge.referenceEquals(targetType,sourceType))return!0;if(targetType==null||sourceType==null)return!1;if(Bridge.referenceEquals(sourceType,Kusto.Language.Symbols.ScalarTypes.Unknown)&&targetType.IsScalar||Bridge.referenceEquals(targetType,Kusto.Language.Symbols.ScalarTypes.Unknown)&&sourceType.IsScalar)return!0;if(targetType.IsScalar&&sourceType.Kind===Kusto.Language.Symbols.SymbolKind.Tuple&&(stt=Bridge.as(sourceType,Kusto.Language.Symbols.TupleSymbol))!=null&&System.Array.getCount(stt.Columns,Kusto.Language.Symbols.ColumnSymbol)===1)return Kusto.Language.Symbols.Symbol.AreAssignable(targetType,System.Array.getItem(stt.Columns,0,Kusto.Language.Symbols.ColumnSymbol).Type);if(Bridge.referenceEquals(targetType,Kusto.Language.Symbols.ScalarTypes.Dynamic)&&(Bridge.is(sourceType,Kusto.Language.Symbols.DynamicSymbol)||Bridge.is(sourceType,Kusto.Language.Symbols.ScalarSymbol)&&allowedConversion>=Kusto.Language.Symbols.Conversion.Dynamic)||Bridge.referenceEquals(targetType,Kusto.Language.Symbols.ScalarTypes.DynamicArray)&&Bridge.is(sourceType,Kusto.Language.Symbols.DynamicArraySymbol)&&allowedConversion!==Kusto.Language.Symbols.Conversion.None||Bridge.referenceEquals(targetType,Kusto.Language.Symbols.ScalarTypes.DynamicBag)&&Bridge.is(sourceType,Kusto.Language.Symbols.DynamicBagSymbol)&&allowedConversion!==Kusto.Language.Symbols.Conversion.None)return!0;if((tp=Bridge.as(targetType,Kusto.Language.Symbols.DynamicPrimitiveSymbol))!=null&&(sp=Bridge.as(sourceType,Kusto.Language.Symbols.DynamicPrimitiveSymbol))!=null)return Kusto.Language.Symbols.Symbol.AreAssignable(tp.UnderlyingType,sp.UnderlyingType,allowedConversion);if(targetType.Kind!==sourceType.Kind)return!1;do{if(Bridge.is(targetType,Kusto.Language.Symbols.ColumnSymbol))return tarCol=Bridge.cast(targetType,Kusto.Language.Symbols.ColumnSymbol),srcCol=Bridge.cast(sourceType,Kusto.Language.Symbols.ColumnSymbol),Bridge.referenceEquals(tarCol.Name,srcCol.Name)&&Kusto.Language.Symbols.Symbol.AreAssignable(tarCol.Type,srcCol.Type,allowedConversion);if(Bridge.is(targetType,Kusto.Language.Symbols.TupleSymbol)||Bridge.is(targetType,Kusto.Language.Symbols.GroupSymbol))return _discard1=Bridge.as(targetType,Kusto.Language.Symbols.TupleSymbol),_discard2=Bridge.as(targetType,Kusto.Language.Symbols.GroupSymbol),Kusto.Language.Symbols.Symbol.AreMembersEqual(targetType,sourceType);if(Bridge.is(targetType,Kusto.Language.Symbols.TableSymbol))return tarTable=Bridge.cast(targetType,Kusto.Language.Symbols.TableSymbol),Kusto.Language.Symbols.Symbol.AreTablesAssignable(tarTable,Bridge.cast(sourceType,Kusto.Language.Symbols.TableSymbol));if(Bridge.is(targetType,Kusto.Language.Symbols.PrimitiveSymbol)){tarPrim=Bridge.cast(targetType,Kusto.Language.Symbols.PrimitiveSymbol);scrPrim=Bridge.cast(sourceType,Kusto.Language.Symbols.ScalarSymbol);switch(allowedConversion){case Kusto.Language.Symbols.Conversion.Promotable:return Kusto.Language.Symbols.TypeFacts.IsPromotableTo(scrPrim,tarPrim);case Kusto.Language.Symbols.Conversion.Compatible:return Kusto.Language.Symbols.TypeFacts.IsPromotableTo(scrPrim,tarPrim)||Kusto.Language.Symbols.TypeFacts.IsPromotableTo(tarPrim,scrPrim);case Kusto.Language.Symbols.Conversion.Any:return!0;default:return!1}}if(Bridge.is(targetType,Kusto.Language.Symbols.DynamicArraySymbol))return tarArray=Bridge.cast(targetType,Kusto.Language.Symbols.DynamicArraySymbol),srcArray=Bridge.cast(sourceType,Kusto.Language.Symbols.DynamicArraySymbol),Kusto.Language.Symbols.Symbol.AreAssignable(srcArray.ElementType,tarArray.ElementType,allowedConversion);if(Bridge.is(targetType,Kusto.Language.Symbols.DynamicBagSymbol))return tarBag=Bridge.cast(targetType,Kusto.Language.Symbols.DynamicBagSymbol),srcBag=Bridge.cast(sourceType,Kusto.Language.Symbols.DynamicBagSymbol),Kusto.Language.Symbols.Symbol.AreBagsAssignable(tarBag,srcBag)}while(0);return!1},AreMembersEqual:function(target,source){if(System.Array.getCount(target.Members,Kusto.Language.Symbols.Symbol)!==System.Array.getCount(source.Members,Kusto.Language.Symbols.Symbol))return!1;for(var i=0,n=System.Array.getCount(target.Members,Kusto.Language.Symbols.Symbol);i<n;i=i+1|0)if(!Kusto.Language.Symbols.Symbol.AreAssignable(System.Array.getItem(target.Members,i,Kusto.Language.Symbols.Symbol),System.Array.getItem(source.Members,i,Kusto.Language.Symbols.Symbol)))return!1;return!0},AreBagsAssignable:function(targetBag,sourceBag){var $t,targetProperty,sourceProperty;$t=Bridge.getEnumerator(targetBag.Properties,Kusto.Language.Symbols.ColumnSymbol);try{while($t.moveNext())if(targetProperty=$t.Current,sourceProperty={},!sourceBag.TryGetProperty(targetProperty.Name,sourceProperty)||!Kusto.Language.Symbols.Symbol.AreAssignable(targetProperty.Type,sourceProperty.v.Type,Kusto.Language.Symbols.Conversion.Any))return!1}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return!0},AreTablesAssignable:function(target,source){var $t,targetColumn,sourceColumn;$t=Bridge.getEnumerator(target.Columns,Kusto.Language.Symbols.ColumnSymbol);try{while($t.moveNext())if(targetColumn=$t.Current,sourceColumn={},!source.TryGetColumn(targetColumn.Name,sourceColumn)||!Kusto.Language.Symbols.Symbol.AreAssignable(targetColumn.Type,sourceColumn.v.Type))return!1}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return!0}}},props:{DebugText:{get:function(){return Kusto.Language.Symbols.DebugDisplay.GetText$2(this)}},Name:null,AlternateName:{get:function(){return""}},Kind:{get:function(){return Kusto.Language.Symbols.SymbolKind.None}},IsHidden:{get:function(){return System.String.startsWith(this.Name,"__",4)}},IsError:{get:function(){return!1}},Tabularity:{get:function(){return Kusto.Language.Symbols.Tabularity.Unknown}},IsScalar:{get:function(){switch(this.Tabularity){case Kusto.Language.Symbols.Tabularity.Scalar:case Kusto.Language.Symbols.Tabularity.Unknown:return!0;default:return!1}}},IsTabular:{get:function(){switch(this.Tabularity){case Kusto.Language.Symbols.Tabularity.Tabular:case Kusto.Language.Symbols.Tabularity.Unknown:return!0;default:return!1}}},Members:{get:function(){return Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Symbols.Symbol).Instance}}},ctors:{ctor:function(name){var $t;this.$initialize();this.Name=($t=name,$t!=null?$t:"")}},methods:{GetMembers$1:function(name,match,symbols,ignoreCase){var $t,symbol;ignoreCase===void 0&&(ignoreCase=!1);$t=Bridge.getEnumerator(this.Members,Kusto.Language.Symbols.Symbol);try{while($t.moveNext())symbol=$t.Current,Kusto.Language.Symbols.SymbolMatchExtensions.Matches$1(symbol,name,match,ignoreCase)&&symbols.add(symbol)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}},GetMembers:function(match,symbols,ignoreCase){ignoreCase===void 0&&(ignoreCase=!1);this.GetMembers$1(null,match,symbols,ignoreCase)},GetFirstMember:function(name,match,ignoreCase){var $t,symbol;match===void 0&&(match=12283);ignoreCase===void 0&&(ignoreCase=!1);$t=Bridge.getEnumerator(this.Members,Kusto.Language.Symbols.Symbol);try{while($t.moveNext())if(symbol=$t.Current,Kusto.Language.Symbols.SymbolMatchExtensions.Matches$1(symbol,name,match,ignoreCase))return symbol}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return null},IsAssignableTo:function(targetType,allowedConversion){return allowedConversion===void 0&&(allowedConversion=0),Kusto.Language.Symbols.Symbol.AreAssignable(targetType,this,allowedConversion)},IsAssignableToAny:function(targetTypes,allowedConversion){return allowedConversion===void 0&&(allowedConversion=0),Kusto.Language.Symbols.Symbol.AreAssignable$1(targetTypes,this,allowedConversion)}}});Bridge.define("Kusto.Language.QueryOperatorParameters",{statics:{fields:{BagExpansion:null,BinLegacy:null,CrossCluster:null,CrossDB:null,DecodeBlocks:null,ExpandOutput:null,Flags:null,HintDotConcurrency:null,HintDotDistribution:null,HintDotMaterialized:null,HintDotNumPartitions:null,HintDotPassFilters:null,HintDotPassFiltersColumn:null,HintDotProgressiveTop:null,HintDotRemote:null,HintDotShuffleKey:null,HintDotSpread:null,HintDotStrategy:null,Id:null,IsFuzzy:null,BestEffort:null,Kind:null,WithComponentId:null,NoWithSource:null,PackedColumn:null,SourceColumnIndex:null,WithMatchId:null,WithItemIndex:null,WithSource:null,WithStepName:null,ForceRemote:null,Cycles:null,AllParameters:null,AsParameters:null,ConsumeParameters:null,DataTableParameters:null,DistinctParameters:null,EvaluateParameters:null,ExternalDataWithClauseProperties:null,FilterParameters:null,FindParameters:null,GraphMatchParameters:null,JoinParameters:null,GraphMarkComponentsParameters:null,LookupParameters:null,MakeSeriesParameters:null,MvApplyParameters:null,MvExpandParameters:null,ParseParameters:null,ParseKvWithProperties:null,PartitionByParameters:null,PartitionParameters:null,ReduceParameters:null,ReduceWithParameters:null,WithSourceId:null,WithTargetId:null,WithNodeId:null,GraphToTableEdgesParameters:null,GraphToTableNodesParameters:null,GraphMakeParameters:null,RenderKind:null,RenderTitle:null,RenderAccumulate:null,RenderWithDeprecated:null,RenderByDeprecated:null,RenderParameters:null,RenderWithProperties:null,SampleParameters:null,SampleDistinctParameters:null,ScanParameters:null,SearchParameters:null,SerializedParameters:null,SortParameters:null,SummarizeParameters:null,TakeParameters:null,TopParameters:null,ToScalarKindParameter:null,ToTableKindParameter:null,UnionParameters:null,GetSchemaKind:null},ctors:{init:function(){this.BagExpansion=new Kusto.Language.QueryOperatorParameter.$ctor1("bagexpansion",Kusto.Language.QueryOperatorParameterValueKind.Word,!0,Kusto.Language.KustoFacts.MvExpandKinds,!1,void 0).Hide();this.BinLegacy=new Kusto.Language.QueryOperatorParameter.$ctor1("bin_legacy",Kusto.Language.QueryOperatorParameterValueKind.Any);this.CrossCluster=new Kusto.Language.QueryOperatorParameter.$ctor1("__crossCluster",Kusto.Language.QueryOperatorParameterValueKind.Any);this.CrossDB=new Kusto.Language.QueryOperatorParameter.$ctor1("__crossDB",Kusto.Language.QueryOperatorParameterValueKind.Any);this.DecodeBlocks=new Kusto.Language.QueryOperatorParameter.$ctor1("decodeblocks",Kusto.Language.QueryOperatorParameterValueKind.BoolLiteral,!0,void 0,!1,void 0);this.ExpandOutput=new Kusto.Language.QueryOperatorParameter.$ctor1("expandoutput",Kusto.Language.QueryOperatorParameterValueKind.Any);this.Flags=new Kusto.Language.QueryOperatorParameter.$ctor1("flags",Kusto.Language.QueryOperatorParameterValueKind.Word);this.HintDotConcurrency=new Kusto.Language.QueryOperatorParameter.$ctor1("hint.concurrency",Kusto.Language.QueryOperatorParameterValueKind.WordOrNumber,!1,Kusto.Language.KustoFacts.HintConcurrencies,!1,void 0);this.HintDotDistribution=new Kusto.Language.QueryOperatorParameter.$ctor1("hint.distribution",Kusto.Language.QueryOperatorParameterValueKind.Word,!1,Kusto.Language.KustoFacts.HintDistributions,!1,void 0);this.HintDotMaterialized=new Kusto.Language.QueryOperatorParameter.$ctor1("hint.materialized",Kusto.Language.QueryOperatorParameterValueKind.BoolLiteral);this.HintDotNumPartitions=new Kusto.Language.QueryOperatorParameter.$ctor1("hint.num_partitions",Kusto.Language.QueryOperatorParameterValueKind.IntegerLiteral,!0,void 0,!1,void 0);this.HintDotPassFilters=new Kusto.Language.QueryOperatorParameter.$ctor1("hint.pass_filters",Kusto.Language.QueryOperatorParameterValueKind.Any);this.HintDotPassFiltersColumn=new Kusto.Language.QueryOperatorParameter.$ctor1("hint.pass_filters_column",Kusto.Language.QueryOperatorParameterValueKind.Column);this.HintDotProgressiveTop=new Kusto.Language.QueryOperatorParameter.$ctor1("hint.progressive_top",Kusto.Language.QueryOperatorParameterValueKind.BoolLiteral);this.HintDotRemote=new Kusto.Language.QueryOperatorParameter.$ctor1("hint.remote",Kusto.Language.QueryOperatorParameterValueKind.Word,!1,Kusto.Language.KustoFacts.HintRemotes,!1,void 0);this.HintDotShuffleKey=new Kusto.Language.QueryOperatorParameter.$ctor1("hint.shufflekey",Kusto.Language.QueryOperatorParameterValueKind.Column,!0,void 0,!0,void 0);this.HintDotSpread=new Kusto.Language.QueryOperatorParameter.$ctor1("hint.spread",Kusto.Language.QueryOperatorParameterValueKind.WordOrNumber,!1,Kusto.Language.KustoFacts.HintSpreads,!1,void 0);this.HintDotStrategy=new Kusto.Language.QueryOperatorParameter.$ctor1("hint.strategy",Kusto.Language.QueryOperatorParameterValueKind.Word,!1,Kusto.Language.KustoFacts.HintStrategies,!1,void 0);this.Id=new Kusto.Language.QueryOperatorParameter.$ctor1("__id",Kusto.Language.QueryOperatorParameterValueKind.Any);this.IsFuzzy=new Kusto.Language.QueryOperatorParameter.$ctor1("isfuzzy",Kusto.Language.QueryOperatorParameterValueKind.BoolLiteral,!0,void 0,!1,System.Array.init(["__isFuzzy"],System.String));this.BestEffort=new Kusto.Language.QueryOperatorParameter.$ctor1("best_effort",Kusto.Language.QueryOperatorParameterValueKind.BoolLiteral);this.Kind=new Kusto.Language.QueryOperatorParameter.$ctor1("kind",Kusto.Language.QueryOperatorParameterValueKind.Word);this.WithComponentId=new Kusto.Language.QueryOperatorParameter.$ctor1("with_component_id",Kusto.Language.QueryOperatorParameterValueKind.NameDeclaration);this.NoWithSource=new Kusto.Language.QueryOperatorParameter.$ctor1("__noWithSource",Kusto.Language.QueryOperatorParameterValueKind.Any);this.PackedColumn=new Kusto.Language.QueryOperatorParameter.$ctor1("__packedColumn",Kusto.Language.QueryOperatorParameterValueKind.Column);this.SourceColumnIndex=new Kusto.Language.QueryOperatorParameter.$ctor1("__sourceColumnIndex",Kusto.Language.QueryOperatorParameterValueKind.Any);this.WithMatchId=new Kusto.Language.QueryOperatorParameter.$ctor1("with_match_id",Kusto.Language.QueryOperatorParameterValueKind.NameDeclaration);this.WithItemIndex=new Kusto.Language.QueryOperatorParameter.$ctor1("with_itemindex",Kusto.Language.QueryOperatorParameterValueKind.NameDeclaration);this.WithSource=new Kusto.Language.QueryOperatorParameter.$ctor1("withsource",Kusto.Language.QueryOperatorParameterValueKind.NameDeclaration,!0,void 0,!1,System.Array.init(["with_source"],System.String));this.WithStepName=new Kusto.Language.QueryOperatorParameter.$ctor1("with_step_name",Kusto.Language.QueryOperatorParameterValueKind.NameDeclaration);this.ForceRemote=new Kusto.Language.QueryOperatorParameter.$ctor1("force_remote",Kusto.Language.QueryOperatorParameterValueKind.BoolLiteral);this.Cycles=new Kusto.Language.QueryOperatorParameter.$ctor1("cycles",Kusto.Language.QueryOperatorParameterValueKind.Word,!0,Kusto.Language.KustoFacts.CyclesKinds,!1,void 0);this.AllParameters=System.Array.init([Kusto.Language.QueryOperatorParameters.BagExpansion.Hide(),Kusto.Language.QueryOperatorParameters.BinLegacy.Hide(),Kusto.Language.QueryOperatorParameters.CrossCluster.Hide(),Kusto.Language.QueryOperatorParameters.CrossDB.Hide(),Kusto.Language.QueryOperatorParameters.DecodeBlocks.Hide(),Kusto.Language.QueryOperatorParameters.ExpandOutput.Hide(),Kusto.Language.QueryOperatorParameters.HintDotConcurrency.Hide(),Kusto.Language.QueryOperatorParameters.HintDotDistribution.Hide(),Kusto.Language.QueryOperatorParameters.HintDotMaterialized.Hide(),Kusto.Language.QueryOperatorParameters.HintDotNumPartitions.Hide(),Kusto.Language.QueryOperatorParameters.HintDotPassFilters.Hide(),Kusto.Language.QueryOperatorParameters.HintDotPassFiltersColumn.Hide(),Kusto.Language.QueryOperatorParameters.HintDotProgressiveTop.Hide(),Kusto.Language.QueryOperatorParameters.HintDotRemote.Hide(),Kusto.Language.QueryOperatorParameters.HintDotShuffleKey.Hide(),Kusto.Language.QueryOperatorParameters.HintDotSpread.Hide(),Kusto.Language.QueryOperatorParameters.HintDotStrategy.Hide(),Kusto.Language.QueryOperatorParameters.Id.Hide(),Kusto.Language.QueryOperatorParameters.IsFuzzy.Hide(),Kusto.Language.QueryOperatorParameters.Kind.Hide(),Kusto.Language.QueryOperatorParameters.NoWithSource.Hide(),Kusto.Language.QueryOperatorParameters.PackedColumn.Hide(),Kusto.Language.QueryOperatorParameters.SourceColumnIndex.Hide(),Kusto.Language.QueryOperatorParameters.Cycles.Hide(),Kusto.Language.QueryOperatorParameters.WithMatchId.Hide(),Kusto.Language.QueryOperatorParameters.WithItemIndex.Hide(),Kusto.Language.QueryOperatorParameters.WithSource.Hide(),Kusto.Language.QueryOperatorParameters.WithStepName.Hide(),Kusto.Language.QueryOperatorParameters.ForceRemote.Hide()],Kusto.Language.QueryOperatorParameter);this.AsParameters=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.QueryOperatorParameter,System.Array.init([Kusto.Language.QueryOperatorParameters.HintDotMaterialized],Kusto.Language.QueryOperatorParameter));this.ConsumeParameters=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.QueryOperatorParameter,System.Array.init([Kusto.Language.QueryOperatorParameters.DecodeBlocks],Kusto.Language.QueryOperatorParameter));this.DataTableParameters=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.QueryOperatorParameter,System.Array.init([],Kusto.Language.QueryOperatorParameter));this.DistinctParameters=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.QueryOperatorParameter,System.Array.init([Kusto.Language.QueryOperatorParameters.HintDotShuffleKey,Kusto.Language.QueryOperatorParameters.HintDotStrategy.WithValues(Kusto.Language.KustoFacts.DistinctHintStrategies),Kusto.Language.QueryOperatorParameters.HintDotNumPartitions],Kusto.Language.QueryOperatorParameter));this.EvaluateParameters=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.QueryOperatorParameter,System.Array.init([Kusto.Language.QueryOperatorParameters.HintDotDistribution.WithValues(Kusto.Language.KustoFacts.EvaluateHintDistributions),Kusto.Language.QueryOperatorParameters.HintDotRemote.WithValues(Kusto.Language.KustoFacts.EvaluateHintRemotes)],Kusto.Language.QueryOperatorParameter));this.ExternalDataWithClauseProperties=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.QueryOperatorParameter,System.Array.init([],Kusto.Language.QueryOperatorParameter));this.FilterParameters=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.QueryOperatorParameter,System.Array.init([],Kusto.Language.QueryOperatorParameter));this.FindParameters=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.QueryOperatorParameter,System.Array.init([Kusto.Language.QueryOperatorParameters.WithSource],Kusto.Language.QueryOperatorParameter));this.GraphMatchParameters=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.QueryOperatorParameter,System.Array.init([Kusto.Language.QueryOperatorParameters.Cycles.WithValues(Kusto.Language.KustoFacts.CyclesKinds)],Kusto.Language.QueryOperatorParameter));this.JoinParameters=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.QueryOperatorParameter,System.Array.init([Kusto.Language.QueryOperatorParameters.Kind.WithValues(Kusto.Language.KustoFacts.JoinKinds),Kusto.Language.QueryOperatorParameters.HintDotRemote.WithValues(Kusto.Language.KustoFacts.JoinHintRemotes),Kusto.Language.QueryOperatorParameters.HintDotShuffleKey,Kusto.Language.QueryOperatorParameters.HintDotStrategy.WithValues(Kusto.Language.KustoFacts.JoinHintStrategies),Kusto.Language.QueryOperatorParameters.HintDotNumPartitions],Kusto.Language.QueryOperatorParameter));this.GraphMarkComponentsParameters=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.QueryOperatorParameter,System.Array.init([Kusto.Language.QueryOperatorParameters.Kind.WithValues(Kusto.Language.KustoFacts.GraphMarkComponentsKinds),Kusto.Language.QueryOperatorParameters.WithComponentId],Kusto.Language.QueryOperatorParameter));this.LookupParameters=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.QueryOperatorParameter,System.Array.init([Kusto.Language.QueryOperatorParameters.Kind.WithValues(Kusto.Language.KustoFacts.LookupKinds)],Kusto.Language.QueryOperatorParameter));this.MakeSeriesParameters=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.QueryOperatorParameter,System.Array.init([Kusto.Language.QueryOperatorParameters.HintDotShuffleKey,Kusto.Language.QueryOperatorParameters.Kind.WithValues(Kusto.Language.KustoFacts.MakeSeriesKinds)],Kusto.Language.QueryOperatorParameter));this.MvApplyParameters=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.QueryOperatorParameter,System.Array.init([Kusto.Language.QueryOperatorParameters.WithItemIndex],Kusto.Language.QueryOperatorParameter));this.MvExpandParameters=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.QueryOperatorParameter,System.Array.init([Kusto.Language.QueryOperatorParameters.Kind.WithValues(Kusto.Language.KustoFacts.MvExpandKinds),Kusto.Language.QueryOperatorParameters.BagExpansion.WithValues(Kusto.Language.KustoFacts.MvExpandKinds).Hide(),Kusto.Language.QueryOperatorParameters.WithItemIndex],Kusto.Language.QueryOperatorParameter));this.ParseParameters=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.QueryOperatorParameter,System.Array.init([Kusto.Language.QueryOperatorParameters.Kind.WithValues(Kusto.Language.KustoFacts.ParseKinds),Kusto.Language.QueryOperatorParameters.Flags],Kusto.Language.QueryOperatorParameter));this.ParseKvWithProperties=System.Array.init([new Kusto.Language.QueryOperatorParameter.$ctor1("pair_delimiter",Kusto.Language.QueryOperatorParameterValueKind.StringLiteral),new Kusto.Language.QueryOperatorParameter.$ctor1("kv_delimiter",Kusto.Language.QueryOperatorParameterValueKind.StringLiteral),new Kusto.Language.QueryOperatorParameter.$ctor1("regex",Kusto.Language.QueryOperatorParameterValueKind.StringLiteral),new Kusto.Language.QueryOperatorParameter.$ctor1("quote",Kusto.Language.QueryOperatorParameterValueKind.StringLiteral,!0,void 0,!0,void 0),new Kusto.Language.QueryOperatorParameter.$ctor1("escape",Kusto.Language.QueryOperatorParameterValueKind.StringLiteral,!0,void 0,!0,void 0),new Kusto.Language.QueryOperatorParameter.$ctor1("greedy",Kusto.Language.QueryOperatorParameterValueKind.BoolLiteral)],Kusto.Language.QueryOperatorParameter);this.PartitionByParameters=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.QueryOperatorParameter,System.Array.init([Kusto.Language.QueryOperatorParameters.HintDotConcurrency.WithValues(Kusto.Language.KustoFacts.PartitionHintConcurrencies),Kusto.Language.QueryOperatorParameters.HintDotSpread.WithValues(Kusto.Language.KustoFacts.PartitionHintSpreads),Kusto.Language.QueryOperatorParameters.HintDotMaterialized,Kusto.Language.QueryOperatorParameters.HintDotShuffleKey,Kusto.Language.QueryOperatorParameters.HintDotStrategy.WithValues(Kusto.Language.KustoFacts.PartitionHintStrategies)],Kusto.Language.QueryOperatorParameter));this.PartitionParameters=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.QueryOperatorParameter,System.Array.init([Kusto.Language.QueryOperatorParameters.HintDotConcurrency.WithValues(Kusto.Language.KustoFacts.PartitionHintConcurrencies),Kusto.Language.QueryOperatorParameters.HintDotSpread.WithValues(Kusto.Language.KustoFacts.PartitionHintSpreads),Kusto.Language.QueryOperatorParameters.HintDotMaterialized,Kusto.Language.QueryOperatorParameters.HintDotShuffleKey,Kusto.Language.QueryOperatorParameters.HintDotStrategy.WithValues(Kusto.Language.KustoFacts.PartitionHintStrategies)],Kusto.Language.QueryOperatorParameter));this.ReduceParameters=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.QueryOperatorParameter,System.Array.init([Kusto.Language.QueryOperatorParameters.Kind.WithValues(Kusto.Language.KustoFacts.ReduceByKinds)],Kusto.Language.QueryOperatorParameter));this.ReduceWithParameters=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.QueryOperatorParameter,System.Array.init([new Kusto.Language.QueryOperatorParameter.$ctor1("threshold",Kusto.Language.QueryOperatorParameterValueKind.NumericLiteral),new Kusto.Language.QueryOperatorParameter.$ctor1("characters",Kusto.Language.QueryOperatorParameterValueKind.StringLiteral)],Kusto.Language.QueryOperatorParameter));this.WithSourceId=new Kusto.Language.QueryOperatorParameter.$ctor1("with_source_id",Kusto.Language.QueryOperatorParameterValueKind.NameDeclaration);this.WithTargetId=new Kusto.Language.QueryOperatorParameter.$ctor1("with_target_id",Kusto.Language.QueryOperatorParameterValueKind.NameDeclaration);this.WithNodeId=new Kusto.Language.QueryOperatorParameter.$ctor1("with_node_id",Kusto.Language.QueryOperatorParameterValueKind.NameDeclaration);this.GraphToTableEdgesParameters=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.QueryOperatorParameter,System.Array.init([Kusto.Language.QueryOperatorParameters.WithSourceId,Kusto.Language.QueryOperatorParameters.WithTargetId],Kusto.Language.QueryOperatorParameter));this.GraphToTableNodesParameters=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.QueryOperatorParameter,System.Array.init([Kusto.Language.QueryOperatorParameters.WithNodeId],Kusto.Language.QueryOperatorParameter));this.GraphMakeParameters=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.QueryOperatorParameter,System.Array.init([Kusto.Language.QueryOperatorParameters.HintDotStrategy.WithValues(Kusto.Language.KustoFacts.PartitionedGraphMakeHintStrategies)],Kusto.Language.QueryOperatorParameter));this.RenderKind=new Kusto.Language.QueryOperatorParameter.$ctor1("kind",Kusto.Language.QueryOperatorParameterValueKind.Word,!0,Kusto.Language.KustoFacts.ChartKinds,!1,void 0);this.RenderTitle=new Kusto.Language.QueryOperatorParameter.$ctor1("title",Kusto.Language.QueryOperatorParameterValueKind.String);this.RenderAccumulate=new Kusto.Language.QueryOperatorParameter.$ctor1("accumulate",Kusto.Language.QueryOperatorParameterValueKind.BoolLiteral);this.RenderWithDeprecated=new Kusto.Language.QueryOperatorParameter.$ctor1("with",Kusto.Language.QueryOperatorParameterValueKind.StringLiteral).WithHasNoEquals(!0);this.RenderByDeprecated=new Kusto.Language.QueryOperatorParameter.$ctor1("by",Kusto.Language.QueryOperatorParameterValueKind.ColumnList).WithHasNoEquals(!0);this.RenderParameters=System.Array.init([Kusto.Language.QueryOperatorParameters.RenderKind.Hide(),Kusto.Language.QueryOperatorParameters.RenderTitle.Hide(),Kusto.Language.QueryOperatorParameters.RenderAccumulate.Hide(),Kusto.Language.QueryOperatorParameters.RenderWithDeprecated.Hide(),Kusto.Language.QueryOperatorParameters.RenderByDeprecated.Hide()],Kusto.Language.QueryOperatorParameter);this.RenderWithProperties=System.Array.init([Kusto.Language.QueryOperatorParameters.RenderKind,Kusto.Language.QueryOperatorParameters.RenderTitle,Kusto.Language.QueryOperatorParameters.RenderAccumulate,new Kusto.Language.QueryOperatorParameter.$ctor1("xcolumn",Kusto.Language.QueryOperatorParameterValueKind.Column),new Kusto.Language.QueryOperatorParameter.$ctor1("ycolumns",Kusto.Language.QueryOperatorParameterValueKind.ColumnList),new Kusto.Language.QueryOperatorParameter.$ctor1("anomalycolumns",Kusto.Language.QueryOperatorParameterValueKind.ColumnList),new Kusto.Language.QueryOperatorParameter.$ctor1("series",Kusto.Language.QueryOperatorParameterValueKind.ColumnList),new Kusto.Language.QueryOperatorParameter.$ctor1("xtitle",Kusto.Language.QueryOperatorParameterValueKind.String),new Kusto.Language.QueryOperatorParameter.$ctor1("ytitle",Kusto.Language.QueryOperatorParameterValueKind.String),new Kusto.Language.QueryOperatorParameter.$ctor1("xaxis",Kusto.Language.QueryOperatorParameterValueKind.Word,!0,Kusto.Language.KustoFacts.ChartAxis,!1,void 0),new Kusto.Language.QueryOperatorParameter.$ctor1("yaxis",Kusto.Language.QueryOperatorParameterValueKind.Word,!0,Kusto.Language.KustoFacts.ChartAxis,!1,void 0),new Kusto.Language.QueryOperatorParameter.$ctor1("legend",Kusto.Language.QueryOperatorParameterValueKind.Word,!0,Kusto.Language.KustoFacts.ChartLegends,!1,void 0),new Kusto.Language.QueryOperatorParameter.$ctor1("ysplit",Kusto.Language.QueryOperatorParameterValueKind.Word,!0,Kusto.Language.KustoFacts.ChartYSplit,!1,void 0),new Kusto.Language.QueryOperatorParameter.$ctor1("ymin",Kusto.Language.QueryOperatorParameterValueKind.ForcedRealLiteral),new Kusto.Language.QueryOperatorParameter.$ctor1("ymax",Kusto.Language.QueryOperatorParameterValueKind.ForcedRealLiteral),new Kusto.Language.QueryOperatorParameter.$ctor1("xmin",Kusto.Language.QueryOperatorParameterValueKind.ScalarLiteral),new Kusto.Language.QueryOperatorParameter.$ctor1("xmax",Kusto.Language.QueryOperatorParameterValueKind.ScalarLiteral)],Kusto.Language.QueryOperatorParameter);this.SampleParameters=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.QueryOperatorParameter,System.Array.init([],Kusto.Language.QueryOperatorParameter));this.SampleDistinctParameters=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.QueryOperatorParameter,System.Array.init([],Kusto.Language.QueryOperatorParameter));this.ScanParameters=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.QueryOperatorParameter,System.Array.init([Kusto.Language.QueryOperatorParameters.Kind.WithValues(Kusto.Language.KustoFacts.ScanKinds).Hide(),Kusto.Language.QueryOperatorParameters.WithMatchId],Kusto.Language.QueryOperatorParameter));this.SearchParameters=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.QueryOperatorParameter,System.Array.init([Kusto.Language.QueryOperatorParameters.Kind.WithValues(Kusto.Language.KustoFacts.SearchKinds)],Kusto.Language.QueryOperatorParameter));this.SerializedParameters=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.QueryOperatorParameter,System.Array.init([],Kusto.Language.QueryOperatorParameter));this.SortParameters=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.QueryOperatorParameter,System.Array.init([Kusto.Language.QueryOperatorParameters.HintDotStrategy.WithValues(Kusto.Language.KustoFacts.SortHintStrategies)],Kusto.Language.QueryOperatorParameter));this.SummarizeParameters=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.QueryOperatorParameter,System.Array.init([Kusto.Language.QueryOperatorParameters.HintDotShuffleKey,Kusto.Language.QueryOperatorParameters.HintDotStrategy.WithValues(Kusto.Language.KustoFacts.SummarizeHintStrategies),Kusto.Language.QueryOperatorParameters.HintDotNumPartitions],Kusto.Language.QueryOperatorParameter));this.TakeParameters=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.QueryOperatorParameter,System.Array.init([],Kusto.Language.QueryOperatorParameter));this.TopParameters=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.QueryOperatorParameter,System.Array.init([Kusto.Language.QueryOperatorParameters.HintDotProgressiveTop],Kusto.Language.QueryOperatorParameter));this.ToScalarKindParameter=Kusto.Language.QueryOperatorParameters.Kind.WithValues(Kusto.Language.KustoFacts.ToScalarKinds);this.ToTableKindParameter=Kusto.Language.QueryOperatorParameters.Kind.WithValues(Kusto.Language.KustoFacts.ToTableKinds);this.UnionParameters=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.QueryOperatorParameter,System.Array.init([Kusto.Language.QueryOperatorParameters.Kind.WithValues(Kusto.Language.KustoFacts.UnionKinds),Kusto.Language.QueryOperatorParameters.WithSource,Kusto.Language.QueryOperatorParameters.IsFuzzy,Kusto.Language.QueryOperatorParameters.BestEffort,Kusto.Language.QueryOperatorParameters.HintDotConcurrency.WithValues(Kusto.Language.KustoFacts.UnionHintConcurrencies),Kusto.Language.QueryOperatorParameters.HintDotSpread.WithValues(Kusto.Language.KustoFacts.UnionHintSpreads)],Kusto.Language.QueryOperatorParameter));this.GetSchemaKind=new Kusto.Language.QueryOperatorParameter.$ctor1("kind",Kusto.Language.QueryOperatorParameterValueKind.Word,!0,System.Array.init(["csl"],System.String),!1,void 0)}}}});Bridge.define("Kusto.Language.QueryOperatorParameterValueKind",{$kind:"enum",statics:{fields:{Any:0,ScalarLiteral:1,IntegerLiteral:2,NumericLiteral:3,ForcedRealLiteral:4,StringLiteral:5,BoolLiteral:6,SummableLiteral:7,String:8,Word:9,WordOrNumber:10,NameDeclaration:11,Column:12,ColumnList:13}}});Bridge.define("Kusto.Language.ServerKinds",{statics:{fields:{Engine:null,DataManager:null,ClusterManager:null,AriaBridge:null},ctors:{init:function(){this.Engine="Engine";this.DataManager="DataManager";this.ClusterManager="ClusterManager";this.AriaBridge="AriaBridge"}}}});Bridge.define("Kusto.Language.Symbols.ArgumentKind",{$kind:"enum",statics:{fields:{Expression:0,Expression_Parameter0_Element:1,StarOnly:2,StarAllowed:3,Aggregate:4,Column:5,Column_Parameter0:6,Column_Parameter0_Common:7,Literal:8,LiteralNotEmpty:9,Constant:10}}});Bridge.define("Kusto.Language.Symbols.ParameterLayout",{statics:{fields:{s_parameterListPool:null,s_expressionListPool:null},ctors:{init:function(){this.s_parameterListPool=new(Kusto.Language.Utils.ObjectPool$1(System.Collections.Generic.List$1(Kusto.Language.Symbols.Parameter)))(function(){return new(System.Collections.Generic.List$1(Kusto.Language.Symbols.Parameter).ctor)},function(list){list.clear()});this.s_expressionListPool=new(Kusto.Language.Utils.ObjectPool$1(System.Collections.Generic.List$1(Kusto.Language.Syntax.Expression)))(function(){return new(System.Collections.Generic.List$1(Kusto.Language.Syntax.Expression).ctor)},function(list){list.clear()})}},methods:{GetFakeExpressions:function(types,expressions){var $t,type;$t=Bridge.getEnumerator(types,Kusto.Language.Symbols.TypeSymbol);try{while($t.moveNext())type=$t.Current,expressions.add(Kusto.Language.Syntax.FakeExpression.Create(type))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}}},methods:{GetArgumentParameters:function(signature,argumentTypes,argumentParameters){var $arguments=Kusto.Language.Symbols.ParameterLayout.s_expressionListPool.AllocateFromPool();try{Kusto.Language.Symbols.ParameterLayout.GetFakeExpressions(argumentTypes,$arguments);this.GetArgumentParameters$1(signature,$arguments,argumentParameters)}finally{Kusto.Language.Symbols.ParameterLayout.s_expressionListPool.ReturnToPool($arguments)}},GetNextPossibleParameters:function(signature,$arguments,possibleParameters){var newArguments=Kusto.Language.Symbols.ParameterLayout.s_expressionListPool.AllocateFromPool(),argumentParameters=Kusto.Language.Symbols.ParameterLayout.s_parameterListPool.AllocateFromPool(),argIndex,argParam,paramIndex,nextParam;try{if(newArguments.AddRange($arguments),newArguments.add(Kusto.Language.Syntax.FakeExpression.Create(Kusto.Language.Symbols.ScalarTypes.Unknown)),this.GetArgumentParameters$1(signature,newArguments,argumentParameters),argIndex=System.Array.getCount($arguments,Kusto.Language.Syntax.Expression),argParam=argumentParameters.getItem(argIndex),possibleParameters.add(argParam),argParam.MinOccurring===0){while(argIndex>0&&Bridge.referenceEquals(argumentParameters.getItem(argIndex-1|0),argParam))argIndex=argIndex-1|0;if(paramIndex=Kusto.Language.Utils.ListExtensions.IndexOf(Kusto.Language.Symbols.Parameter,signature.Parameters,argParam),paramIndex===argIndex&&paramIndex<(System.Array.getCount(signature.Parameters,Kusto.Language.Symbols.Parameter)-1|0)){paramIndex=paramIndex+1|0;do nextParam=System.Array.getItem(signature.Parameters,paramIndex,Kusto.Language.Symbols.Parameter),possibleParameters.add(nextParam);while(nextParam.MinOccurring===0&&paramIndex<(System.Array.getCount(signature.Parameters,Kusto.Language.Symbols.Parameter)-1|0))}}}finally{Kusto.Language.Symbols.ParameterLayout.s_expressionListPool.ReturnToPool(newArguments);Kusto.Language.Symbols.ParameterLayout.s_parameterListPool.ReturnToPool(argumentParameters)}},IsValidArgumentCount:function(signature,argumentCount){return argumentCount>=signature.MinArgumentCount&&argumentCount<=signature.MaxArgumentCount}}});Bridge.define("Kusto.Language.Symbols.CombineKind",{$kind:"enum",statics:{fields:{UnifySameNameAndType:0,UnifySameName:1,UniqueNames:2}}});Bridge.define("Kusto.Language.Symbols.Conversion",{$kind:"enum",statics:{fields:{None:0,Promotable:1,Dynamic:2,Compatible:3,Any:4}}});Bridge.define("Kusto.Language.Symbols.DebugDisplay",{statics:{methods:{GetText$2:function(symbol){var c,t,d,c1,g,f,p,g1,e,pat,v,t1,prv,d1,d2,d3,d4;do return symbol==null?"":Bridge.is(symbol,Kusto.Language.Symbols.ColumnSymbol)?(c=Bridge.cast(symbol,Kusto.Language.Symbols.ColumnSymbol),System.String.format("{0}: {1}",c.Name,Kusto.Language.Symbols.DebugDisplay.GetText$2(c.Type))):Bridge.is(symbol,Kusto.Language.Symbols.TableSymbol)?(t=Bridge.cast(symbol,Kusto.Language.Symbols.TableSymbol),System.String.format("{0}: ({1})",t.Name,Bridge.toArray(System.Linq.Enumerable.from(t.Columns,Kusto.Language.Symbols.ColumnSymbol).select(function(m){return Kusto.Language.Symbols.DebugDisplay.GetText$2(m)})).join(", "))):Bridge.is(symbol,Kusto.Language.Symbols.DatabaseSymbol)?(d=Bridge.cast(symbol,Kusto.Language.Symbols.DatabaseSymbol),Kusto.Language.KustoFacts.GetSingleQuotedStringLiteral(System.String.isNullOrEmpty(d.AlternateName)?d.Name:d.AlternateName)):Bridge.is(symbol,Kusto.Language.Symbols.ClusterSymbol)?(c1=Bridge.cast(symbol,Kusto.Language.Symbols.ClusterSymbol),Kusto.Language.KustoFacts.GetSingleQuotedStringLiteral(c1.Name)):Bridge.is(symbol,Kusto.Language.Symbols.GroupSymbol)?(g=Bridge.cast(symbol,Kusto.Language.Symbols.GroupSymbol),"["+(Bridge.toArray(System.Linq.Enumerable.from(g.Members,Kusto.Language.Symbols.Symbol).select(function(s){return Kusto.Language.Symbols.DebugDisplay.GetText$2(s)})).join(", ")||"")+"]"):Bridge.is(symbol,Kusto.Language.Symbols.FunctionSymbol)?(f=Bridge.cast(symbol,Kusto.Language.Symbols.FunctionSymbol),System.String.format("{0} = {1}",f.Name,Kusto.Language.Symbols.DebugDisplay.GetText$1(System.Array.getItem(f.Signatures,0,Kusto.Language.Symbols.Signature)))):Bridge.is(symbol,Kusto.Language.Symbols.ParameterSymbol)?(p=Bridge.cast(symbol,Kusto.Language.Symbols.ParameterSymbol),System.String.format("{0}: {1}",p.Name,Kusto.Language.Symbols.DebugDisplay.GetText$2(p.Type))):Bridge.is(symbol,Kusto.Language.Symbols.GraphSymbol)?(g1=Bridge.cast(symbol,Kusto.Language.Symbols.GraphSymbol),g1.NodeShape!=null?System.String.format("{0}: [Edge{1}, Node{2}]",g1.Name,Kusto.Language.Symbols.DebugDisplay.GetText$2(g1.EdgeShape),Kusto.Language.Symbols.DebugDisplay.GetText$2(g1.NodeShape)):System.String.format("{0}: [Edge{1}]",g1.Name,Kusto.Language.Symbols.DebugDisplay.GetText$2(g1.EdgeShape))):Bridge.is(symbol,Kusto.Language.Symbols.EntityGroupSymbol)?(e=Bridge.cast(symbol,Kusto.Language.Symbols.EntityGroupSymbol),e.Definition!=null?System.String.format("{0}: {1}",e.Name,e.Definition):System.String.format("{0}: {1}",e.Name,Bridge.toArray(System.Linq.Enumerable.from(e.Members,Kusto.Language.Symbols.Symbol).select(function(m){return Kusto.Language.Symbols.DebugDisplay.GetText$2(m)})).join(", "))):Bridge.is(symbol,Kusto.Language.Symbols.PatternSymbol)?(pat=Bridge.cast(symbol,Kusto.Language.Symbols.PatternSymbol),System.String.format("{0}: ({1})",pat.Name,Bridge.toArray(System.Linq.Enumerable.from(pat.Parameters,Kusto.Language.Symbols.Parameter).select(function(p1){return Kusto.Language.Symbols.DebugDisplay.GetText(p1)})).join(", "))):Bridge.is(symbol,Kusto.Language.Symbols.VariableSymbol)?(v=Bridge.cast(symbol,Kusto.Language.Symbols.VariableSymbol),System.String.format("{0} = {1}",v.Name,Kusto.Language.Symbols.DebugDisplay.GetText$2(v.Type))):Bridge.is(symbol,Kusto.Language.Symbols.TupleSymbol)?(t1=Bridge.cast(symbol,Kusto.Language.Symbols.TupleSymbol),System.String.format("[{0}]",[Bridge.toArray(System.Linq.Enumerable.from(t1.Members,Kusto.Language.Symbols.Symbol).select(function(m){return Kusto.Language.Symbols.DebugDisplay.GetText$2(m)})).join(", ")])):Bridge.is(symbol,Kusto.Language.Symbols.PrimitiveSymbol)?(prv=Bridge.cast(symbol,Kusto.Language.Symbols.PrimitiveSymbol),prv.Name):Bridge.is(symbol,Kusto.Language.Symbols.DynamicAnySymbol)?(d1=Bridge.cast(symbol,Kusto.Language.Symbols.DynamicAnySymbol),"dynamic"):Bridge.is(symbol,Kusto.Language.Symbols.DynamicPrimitiveSymbol)?(d2=Bridge.cast(symbol,Kusto.Language.Symbols.DynamicPrimitiveSymbol),System.String.format("dynamic({0})",[Kusto.Language.Symbols.DebugDisplay.GetText$2(d2.UnderlyingType)])):Bridge.is(symbol,Kusto.Language.Symbols.DynamicArraySymbol)?(d3=Bridge.cast(symbol,Kusto.Language.Symbols.DynamicArraySymbol),Bridge.referenceEquals(d3.ElementType,Kusto.Language.Symbols.ScalarTypes.Dynamic)?"dynamic([])":System.String.format("dynamic([{0}])",[Kusto.Language.Symbols.DebugDisplay.GetText$2(d3.ElementType)])):Bridge.is(symbol,Kusto.Language.Symbols.DynamicBagSymbol)?(d4=Bridge.cast(symbol,Kusto.Language.Symbols.DynamicBagSymbol),System.Array.getCount(d4.Properties,Kusto.Language.Symbols.ColumnSymbol)===0?"dynamic({})":System.String.format("dynamic({{{0}}})",[Bridge.toArray(System.Linq.Enumerable.from(d4.Properties,Kusto.Language.Symbols.ColumnSymbol).select(function(p1){return Kusto.Language.Symbols.DebugDisplay.GetText$2(p1)})).join(", ")])):symbol.Name;while(0)},GetText:function(parameter){return parameter.TypeKind===Kusto.Language.Symbols.ParameterTypeKind.Declared?System.String.format("{0}: {1}",parameter.Name,Bridge.toArray(System.Linq.Enumerable.from(parameter.DeclaredTypes,Kusto.Language.Symbols.TypeSymbol).select(function(t){return Kusto.Language.Symbols.DebugDisplay.GetText$2(t)})).join("|")):System.String.format("{0}: <{1}>",parameter.Name,Bridge.box(parameter.TypeKind,Kusto.Language.Symbols.ParameterTypeKind,System.Enum.toStringFn(Kusto.Language.Symbols.ParameterTypeKind)))},GetText$1:function(sig,verbose){var builder,i,p,prms;for(verbose===void 0&&(verbose=!1),builder=new System.Text.StringBuilder,i=0;i<System.Array.getCount(sig.Parameters,Kusto.Language.Symbols.Parameter);i=i+1|0)p=System.Array.getItem(sig.Parameters,i,Kusto.Language.Symbols.Parameter),i>0&&builder.append(", "),p.IsOptional?(builder.append("["),builder.append(Kusto.Language.Symbols.DebugDisplay.GetText$3(sig,p,verbose)),builder.append("]")):builder.append(Kusto.Language.Symbols.DebugDisplay.GetText$3(sig,p,verbose));return sig.HasRepeatableParameters&&builder.append(", ..."),prms=builder.toString(),System.String.format("({0})",[prms])},GetText$3:function(signature,parameter,verbose){if(verbose){var typeText=Kusto.Language.Symbols.DebugDisplay.GetTypeText(signature,parameter);if(!System.String.isNullOrEmpty(typeText))return System.String.format("{0}: {1}",parameter.Name,typeText)}return parameter.Name},GetTypeText:function(signature,parameter){switch(parameter.TypeKind){case Kusto.Language.Symbols.ParameterTypeKind.Declared:return Bridge.toArray(System.Linq.Enumerable.from(parameter.DeclaredTypes,Kusto.Language.Symbols.TypeSymbol).select(function(t){return Kusto.Language.Symbols.DebugDisplay.GetText$2(t)})).join("|");case Kusto.Language.Symbols.ParameterTypeKind.Integer:return"integer";case Kusto.Language.Symbols.ParameterTypeKind.IntegerOrArray:return"integer|array";case Kusto.Language.Symbols.ParameterTypeKind.DynamicArray:return"array|dynamic";case Kusto.Language.Symbols.ParameterTypeKind.DynamicBag:return"bag|dynamic";case Kusto.Language.Symbols.ParameterTypeKind.Number:return"number";case Kusto.Language.Symbols.ParameterTypeKind.NumberOrBool:return"number|bool";case Kusto.Language.Symbols.ParameterTypeKind.RealOrDecimal:return"real|decimal";case Kusto.Language.Symbols.ParameterTypeKind.Summable:return"summable";case Kusto.Language.Symbols.ParameterTypeKind.StringOrDynamic:return"string|dynamic";case Kusto.Language.Symbols.ParameterTypeKind.StringOrArray:return"string|array";case Kusto.Language.Symbols.ParameterTypeKind.Parameter0:return Kusto.Language.Symbols.DebugDisplay.GetTypeText(signature,System.Array.getItem(signature.Parameters,0,Kusto.Language.Symbols.Parameter));case Kusto.Language.Symbols.ParameterTypeKind.Parameter1:return Kusto.Language.Symbols.DebugDisplay.GetTypeText(signature,System.Array.getItem(signature.Parameters,1,Kusto.Language.Symbols.Parameter));case Kusto.Language.Symbols.ParameterTypeKind.Parameter2:return Kusto.Language.Symbols.DebugDisplay.GetTypeText(signature,System.Array.getItem(signature.Parameters,2,Kusto.Language.Symbols.Parameter));case Kusto.Language.Symbols.ParameterTypeKind.Tabular:return"()";case Kusto.Language.Symbols.ParameterTypeKind.Cluster:return"cluster";case Kusto.Language.Symbols.ParameterTypeKind.Database:return"database";case Kusto.Language.Symbols.ParameterTypeKind.Scalar:default:return"scalar"}}}}});Bridge.define("Kusto.Language.Symbols.Scope",{methods:{GetSymbols:function(match,symbols){this.GetSymbols$1(null,match,symbols)}}});Bridge.define("Kusto.Language.Symbols.FunctionSymbol.FunctionFlags",{$kind:"nested enum",statics:{fields:{None:0,Hidden:1,Foldable:2,View:4}},$flags:!0});Bridge.define("Kusto.Language.Symbols.MaterializedViewKind",{$kind:"enum",statics:{fields:{Unknown:0,Downsampling:1,Other:2}}});Bridge.define("Kusto.Language.Symbols.OperatorKind",{$kind:"enum",statics:{fields:{None:0,UnaryMinus:1,UnaryPlus:2,Add:3,Subtract:4,Multiply:5,Divide:6,Modulo:7,EqualTilde:8,BangTilde:9,Has:10,HasCs:11,NotHas:12,NotHasCs:13,HasPrefix:14,HasPrefixCs:15,NotHasPrefix:16,NotHasPrefixCs:17,HasSuffix:18,HasSuffixCs:19,NotHasSuffix:20,NotHasSuffixCs:21,Like:22,LikeCs:23,NotLike:24,NotLikeCs:25,Contains:26,ContainsCs:27,NotContains:28,NotContainsCs:29,StartsWith:30,StartsWithCs:31,NotStartsWith:32,NotStartsWithCs:33,EndsWith:34,EndsWithCs:35,NotEndsWith:36,NotEndsWithCs:37,MatchRegex:38,Search:39,LessThan:40,LessThanOrEqual:41,GreaterThan:42,GreaterThanOrEqual:43,Equal:44,NotEqual:45,And:46,Or:47,In:48,InCs:49,NotIn:50,NotInCs:51,Between:52,NotBetween:53,HasAny:54,HasAll:55}}});Bridge.define("Kusto.Language.Symbols.Parameter",{statics:{fields:{NoValues:null,NoExamples:null},ctors:{init:function(){this.NoValues=Kusto.Language.Utils.EmptyReadOnlyList$1(System.Object).Instance;this.NoExamples=Kusto.Language.Utils.EmptyReadOnlyList$1(System.String).Instance}},methods:{From:function(parameter,isOptional,defaultValue){return isOptional===void 0&&(isOptional=!1),defaultValue===void 0&&(defaultValue=null),new Kusto.Language.Symbols.Parameter.$ctor3(parameter.Name,parameter.Type,0,void 0,void 0,!1,void 0,isOptional?0:1,1,defaultValue,parameter.Description)},From$1:function(declaration){var $t,name=declaration.NameAndType.Name.SimpleName,type=Kusto.Language.Binding.Binder.GetDeclaredType(declaration.NameAndType.Type),defvalue=(($t=declaration.DefaultValue)!=null?$t.Value:null)||null;return new Kusto.Language.Symbols.Parameter.$ctor3(name,type,0,void 0,void 0,!1,void 0,1,1,defvalue,void 0)},From$2:function(declaration){var $t,list=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.Parameter).ctor),pelem;$t=Bridge.getEnumerator(declaration.Parameters,"GetEnumerator$1");try{while($t.moveNext())pelem=$t.Current,list.add(Kusto.Language.Symbols.Parameter.From$1(pelem.Element$1))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return list},ParseList:function(parameters){var fp=Kusto.Language.Parsing.QueryParser.ParseFunctionParameters$1(parameters);return fp!=null?Kusto.Language.Symbols.Parameter.From$2(fp):Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Symbols.Parameter).Instance},GetDeclaration:function(parameter){var name=Kusto.Language.KustoFacts.BracketNameIfNecessary(parameter.Name),type,table;return parameter.TypeKind===Kusto.Language.Symbols.ParameterTypeKind.Declared&&System.Array.getCount(parameter.DeclaredTypes,Kusto.Language.Symbols.TypeSymbol)===1?(type=System.Array.getItem(parameter.DeclaredTypes,0,Kusto.Language.Symbols.TypeSymbol),(table=Bridge.as(type,Kusto.Language.Symbols.TableSymbol))!=null?System.String.format("{0}: {1}",name,Kusto.Language.Symbols.Parameter.GetTableSchemaDeclaration(table)):parameter.DefaultValue!=null?System.String.format("{0}: {1} = {2}",name,System.Array.getItem(parameter.DeclaredTypes,0,Kusto.Language.Symbols.TypeSymbol).Name,parameter.DefaultValue.ToString(Kusto.Language.Syntax.IncludeTrivia.Interior)):System.String.format("{0}: {1}",Kusto.Language.KustoFacts.BracketNameIfNecessary(parameter.Name),System.Array.getItem(parameter.DeclaredTypes,0,Kusto.Language.Symbols.TypeSymbol).Name)):parameter.TypeKind===Kusto.Language.Symbols.ParameterTypeKind.Tabular?System.String.format("{0}: (*)",[name]):System.String.format("{0}: dynamic",[name])},GetParameterListDeclaration:function(parameters){return System.String.format("({0})",[Bridge.toArray(System.Linq.Enumerable.from(parameters,Kusto.Language.Symbols.Parameter).select(function(p){return Kusto.Language.Symbols.Parameter.GetDeclaration(p)})).join(", ")])},GetTableSchemaDeclaration:function(table){return System.Array.getCount(table.Columns,Kusto.Language.Symbols.ColumnSymbol)===0?"(*)":System.String.format("({0})",[Bridge.toArray(System.Linq.Enumerable.from(table.Columns,Kusto.Language.Symbols.ColumnSymbol).select(function(c){return Kusto.Language.Symbols.Parameter.GetColumnDeclaration(c)})).join(", ")])},GetColumnDeclaration:function(column){return System.String.format("{0}: {1}",Kusto.Language.KustoFacts.BracketNameIfNecessary(column.Name),column.Type.Name)}}},props:{DebugText:{get:function(){return Kusto.Language.Symbols.DebugDisplay.GetText(this)}},Name:null,TypeKind:0,DeclaredTypes:null,ArgumentKind:0,MinOccurring:0,MaxOccurring:0,IsOptional:{get:function(){return this.MinOccurring===0}},IsRepeatable:{get:function(){return this.MaxOccurring>1}},Values:null,Examples:null,IsCaseSensitive:!1,DefaultValueIndicator:null,DefaultValue:null,Description:null,TypeDependsOnArguments:{get:function(){return this.TypeKind!==Kusto.Language.Symbols.ParameterTypeKind.Declared||System.Array.getItem(this.DeclaredTypes,0,Kusto.Language.Symbols.TypeSymbol).IsTabular}},Tabularity:{get:function(){switch(this.TypeKind){case Kusto.Language.Symbols.ParameterTypeKind.Declared:return System.Array.getItem(this.DeclaredTypes,0,Kusto.Language.Symbols.TypeSymbol).Tabularity;case Kusto.Language.Symbols.ParameterTypeKind.Tabular:case Kusto.Language.Symbols.ParameterTypeKind.Database:case Kusto.Language.Symbols.ParameterTypeKind.Cluster:return Kusto.Language.Symbols.Tabularity.Tabular;default:return Kusto.Language.Symbols.Tabularity.Scalar}}},IsScalar:{get:function(){return this.Tabularity===Kusto.Language.Symbols.Tabularity.Scalar}},IsTabular:{get:function(){return this.Tabularity===Kusto.Language.Symbols.Tabularity.Tabular}}},ctors:{$ctor1:function(name,typeKind,types,argumentKind,values,examples,isCaseSensitive,defaultValueIndicator,minOccurring,maxOccurring,defaultValue,description){var $t;this.$initialize();this.DeclaredTypes=typeKind===Kusto.Language.Symbols.ParameterTypeKind.Declared?Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Symbols.TypeSymbol,Kusto.Language.Utils.ArgumentCheckers.CheckArgumentNullOrEmptyOrElementNull(Kusto.Language.Symbols.TypeSymbol,types,"types")):Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol).Instance;this.Name=name;this.TypeKind=typeKind;this.ArgumentKind=argumentKind;this.Values=values!=null?Kusto.Language.Utils.ListExtensions.ToReadOnly(System.Object,values):Kusto.Language.Symbols.Parameter.NoValues;this.Examples=examples!=null?Kusto.Language.Utils.ListExtensions.ToReadOnly(System.String,examples):Kusto.Language.Symbols.Parameter.NoExamples;this.IsCaseSensitive=isCaseSensitive;this.MinOccurring=defaultValue!=null?0:minOccurring;this.MaxOccurring=defaultValue!=null?1:maxOccurring;this.DefaultValueIndicator=defaultValueIndicator;this.DefaultValue=defaultValue;this.Description=($t=description,$t!=null?$t:"")},ctor:function(name,typeKind,argumentKind,values,examples,isCaseSensitive,defaultValueIndicator,minOccurring,maxOccurring,defaultValue,description){argumentKind===void 0&&(argumentKind=0);values===void 0&&(values=null);examples===void 0&&(examples=null);isCaseSensitive===void 0&&(isCaseSensitive=!1);defaultValueIndicator===void 0&&(defaultValueIndicator=null);minOccurring===void 0&&(minOccurring=1);maxOccurring===void 0&&(maxOccurring=1);defaultValue===void 0&&(defaultValue=null);description===void 0&&(description=null);Kusto.Language.Symbols.Parameter.$ctor1.call(this,name,typeKind,null,argumentKind,values,examples,isCaseSensitive,defaultValueIndicator,minOccurring,maxOccurring,defaultValue,description)},$ctor3:function(name,type,argumentKind,values,examples,isCaseSensitive,defaultValueIndicator,minOccurring,maxOccurring,defaultValue,description){argumentKind===void 0&&(argumentKind=0);values===void 0&&(values=null);examples===void 0&&(examples=null);isCaseSensitive===void 0&&(isCaseSensitive=!1);defaultValueIndicator===void 0&&(defaultValueIndicator=null);minOccurring===void 0&&(minOccurring=1);maxOccurring===void 0&&(maxOccurring=1);defaultValue===void 0&&(defaultValue=null);description===void 0&&(description=null);Kusto.Language.Symbols.Parameter.$ctor1.call(this,name,Kusto.Language.Symbols.ParameterTypeKind.Declared,System.Array.init([type||Kusto.Language.Symbols.ScalarTypes.Unknown],Kusto.Language.Symbols.TypeSymbol),argumentKind,values,examples,isCaseSensitive,defaultValueIndicator,minOccurring,maxOccurring,defaultValue,description)},$ctor4:function(name,types,argumentKind,values,examples,isCaseSensitive,defaultValueIndicator,minOccurring,maxOccurring,defaultValue,description){argumentKind===void 0&&(argumentKind=0);values===void 0&&(values=null);examples===void 0&&(examples=null);isCaseSensitive===void 0&&(isCaseSensitive=!1);defaultValueIndicator===void 0&&(defaultValueIndicator=null);minOccurring===void 0&&(minOccurring=1);maxOccurring===void 0&&(maxOccurring=1);defaultValue===void 0&&(defaultValue=null);description===void 0&&(description=null);Kusto.Language.Symbols.Parameter.$ctor1.call(this,name,Kusto.Language.Symbols.ParameterTypeKind.Declared,types,argumentKind,values,examples,isCaseSensitive,defaultValueIndicator,minOccurring,maxOccurring,defaultValue,description)},$ctor2:function(name,type){Kusto.Language.Symbols.Parameter.$ctor1.call(this,name,Kusto.Language.Symbols.ParameterTypeKind.Declared,System.Array.init([type||Kusto.Language.Symbols.ScalarTypes.Unknown],Kusto.Language.Symbols.TypeSymbol),Kusto.Language.Symbols.ArgumentKind.Expression,null,null,!1,null,1,1,null,null)}}});Bridge.define("Kusto.Language.Symbols.ParameterLayouts",{statics:{fields:{Fixed:null,Repeating:null,RepeatingSkipping:null,BlockRepeating:null},ctors:{init:function(){this.Fixed=new Kusto.Language.Symbols.NonRepeatingParameterLayout;this.Repeating=new Kusto.Language.Symbols.RepeatingParameterLayout(!1);this.RepeatingSkipping=new Kusto.Language.Symbols.RepeatingParameterLayout(!0);this.BlockRepeating=new Kusto.Language.Symbols.BlockRepeatingParameterLayout}},methods:{Custom:function(builder){return new Kusto.Language.Symbols.CustomParameterLayout(builder)}}}});Bridge.define("Kusto.Language.Symbols.ParameterTypeKind",{$kind:"enum",statics:{fields:{Any:0,Declared:1,Scalar:2,Tabular:3,Database:4,Cluster:5,Integer:6,RealOrDecimal:7,StringOrDynamic:8,StringOrArray:9,IntegerOrArray:10,DynamicArray:11,DynamicBag:12,Number:13,NumberOrBool:14,Summable:15,Orderable:16,NotRealOrBool:17,NotDynamic:18,NotBool:19,Parameter0:20,Parameter1:21,Parameter2:22,CommonScalar:23,CommonNumber:24,CommonSummable:25,CommonOrderable:26,CommonScalarOrDynamic:27}}});Bridge.define("Kusto.Language.Symbols.PatternSignature",{fields:{_bodyText:null,_bodySyntax:null,_signature:null},props:{Symbol:null,ArgumentValues:null,PathValue:null,Signature:{get:function(){var $t,sig,pms;return this._signature==null&&this.Symbol!=null&&(sig=null,pms=this.Symbol.Parameters,(($t=this.Symbol)!=null?$t.PathParameter:null)!=null&&(pms=System.Linq.Enumerable.from(pms,Kusto.Language.Symbols.Parameter).concat(System.Array.init([this.Symbol.PathParameter],Kusto.Language.Symbols.Parameter)).toList(Kusto.Language.Symbols.Parameter)),this._bodySyntax!=null?(sig=new Kusto.Language.Symbols.Signature.$ctor8(this._bodySyntax,pms),sig.Symbol=this.Symbol):this._bodyText!=null&&(sig=new Kusto.Language.Symbols.Signature.$ctor10(this._bodyText,Kusto.Language.Symbols.Tabularity.Unspecified,pms),sig.Symbol=this.Symbol),Kusto.Language.Utils.Interlocked.CompareExchange(Kusto.Language.Symbols.Signature,Bridge.ref(this,"_signature"),sig,null)),this._signature}}},ctors:{$ctor2:function(argumentValues,pathValue,bodyText,bodySyntax){this.$initialize();this.ArgumentValues=argumentValues;this.PathValue=pathValue;this._bodyText=bodyText;this._bodySyntax=bodySyntax},$ctor1:function(argumentValues,pathValue,body){Kusto.Language.Symbols.PatternSignature.$ctor2.call(this,argumentValues,pathValue,body,null)},ctor:function(argumentValues,pathValue,body){Kusto.Language.Symbols.PatternSignature.$ctor2.call(this,argumentValues,pathValue,null,body)}}});Bridge.define("Kusto.Language.Symbols.ResultNameKind",{$kind:"enum",statics:{fields:{None:0,NameAndFirstArgument:1,NameAndOnlyArgument:2,PrefixAndFirstArgument:3,PrefixAndOnlyArgument:4,FirstArgumentValueIfColumn:5,PrefixOnly:6,FirstArgument:7,OnlyArgument:8,Default:0},ctors:{init:function(){this.Default=Kusto.Language.Symbols.ResultNameKind.None}}}});Bridge.define("Kusto.Language.Symbols.ReturnTypeKind",{$kind:"enum",statics:{fields:{Declared:0,Computed:1,Custom:2,Parameter0:3,Parameter1:4,Parameter2:5,ParameterN:6,Parameter0Literal:7,Parameter1Literal:8,ParameterNLiteral:9,Parameter0Promoted:10,Parameter0Cluster:11,Parameter0Database:12,Parameter0Table:13,Parameter0ExternalTable:14,Parameter0Array:15,Common:16,CommonNonDynamic:17,Widest:18,Parameter0MaterializedView:19}}});Bridge.define("Kusto.Language.Symbols.ScalarFlags",{$kind:"enum",statics:{fields:{None:0,Integer:1,Numeric:2,Interval:4,Summable:8,Orderable:16,All:31}},$flags:!0});Bridge.define("Kusto.Language.Symbols.ScalarTypes",{statics:{fields:{Dynamic:null,Bool:null,Int:null,Long:null,Real:null,Decimal:null,DateTime:null,TimeSpan:null,Guid:null,Type:null,String:null,Null:null,Unknown:null,DynamicBool:null,DynamicLong:null,DynamicReal:null,DynamicDateTime:null,DynamicTimeSpan:null,DynamicGuid:null,DynamicString:null,DynamicBag:null,DynamicArray:null,DynamicArrayOfBool:null,DynamicArrayOfLong:null,DynamicArrayOfReal:null,DynamicArrayOfDateTime:null,DynamicArrayOfTimeSpan:null,DynamicArrayOfGuid:null,DynamicArrayOfString:null,DynamicArrayOfArray:null,DynamicArrayOfBag:null,DynamicArrayOfArrayOfReal:null,DynamicArrayOfArrayOfString:null,GeoShape:null,All:null,s_typeMap:null},ctors:{init:function(){this.Dynamic=Kusto.Language.Symbols.DynamicAnySymbol.Instance;this.Bool=new Kusto.Language.Symbols.PrimitiveSymbol("bool",System.Array.init(["boolean"],System.String),Kusto.Language.Symbols.ScalarFlags.Orderable);this.Int=new Kusto.Language.Symbols.PrimitiveSymbol("int",System.Array.init(["int32","uint","uint32","int8","uint8","int16","uint16"],System.String),31);this.Long=new Kusto.Language.Symbols.PrimitiveSymbol("long",System.Array.init(["int64","ulong","uint64"],System.String),31,System.Array.init([Kusto.Language.Symbols.ScalarTypes.Int],Kusto.Language.Symbols.ScalarSymbol));this.Real=new Kusto.Language.Symbols.PrimitiveSymbol("real",System.Array.init(["double","float"],System.String),30,System.Array.init([Kusto.Language.Symbols.ScalarTypes.Int,Kusto.Language.Symbols.ScalarTypes.Long],Kusto.Language.Symbols.ScalarSymbol));this.Decimal=new Kusto.Language.Symbols.PrimitiveSymbol("decimal",null,30,System.Array.init([Kusto.Language.Symbols.ScalarTypes.Int,Kusto.Language.Symbols.ScalarTypes.Long,Kusto.Language.Symbols.ScalarTypes.Real],Kusto.Language.Symbols.ScalarSymbol));this.DateTime=new Kusto.Language.Symbols.PrimitiveSymbol("datetime",System.Array.init(["date"],System.String),28);this.TimeSpan=new Kusto.Language.Symbols.PrimitiveSymbol("timespan",System.Array.init(["time"],System.String),28);this.Guid=new Kusto.Language.Symbols.PrimitiveSymbol("guid",System.Array.init(["uuid","uniqueid"],System.String));this.Type=new Kusto.Language.Symbols.PrimitiveSymbol("type");this.String=new Kusto.Language.Symbols.PrimitiveSymbol("string",null,Kusto.Language.Symbols.ScalarFlags.Orderable,System.Array.init([Kusto.Language.Symbols.ScalarTypes.Dynamic],Kusto.Language.Symbols.ScalarSymbol));this.Null=new Kusto.Language.Symbols.PrimitiveSymbol("null",null,Kusto.Language.Symbols.ScalarFlags.None);this.Unknown=new Kusto.Language.Symbols.PrimitiveSymbol("unknown",null,Kusto.Language.Symbols.ScalarFlags.All);this.DynamicBool=new Kusto.Language.Symbols.DynamicPrimitiveSymbol(Kusto.Language.Symbols.ScalarTypes.Bool);this.DynamicLong=new Kusto.Language.Symbols.DynamicPrimitiveSymbol(Kusto.Language.Symbols.ScalarTypes.Long);this.DynamicReal=new Kusto.Language.Symbols.DynamicPrimitiveSymbol(Kusto.Language.Symbols.ScalarTypes.Real);this.DynamicDateTime=new Kusto.Language.Symbols.DynamicPrimitiveSymbol(Kusto.Language.Symbols.ScalarTypes.DateTime);this.DynamicTimeSpan=new Kusto.Language.Symbols.DynamicPrimitiveSymbol(Kusto.Language.Symbols.ScalarTypes.TimeSpan);this.DynamicGuid=new Kusto.Language.Symbols.DynamicPrimitiveSymbol(Kusto.Language.Symbols.ScalarTypes.Guid);this.DynamicString=new Kusto.Language.Symbols.DynamicPrimitiveSymbol(Kusto.Language.Symbols.ScalarTypes.String);this.DynamicBag=Kusto.Language.Symbols.DynamicBagSymbol.Empty;this.DynamicArray=new Kusto.Language.Symbols.DynamicArraySymbol(Kusto.Language.Symbols.ScalarTypes.Dynamic);this.DynamicArrayOfBool=new Kusto.Language.Symbols.DynamicArraySymbol(Kusto.Language.Symbols.ScalarTypes.Bool);this.DynamicArrayOfLong=new Kusto.Language.Symbols.DynamicArraySymbol(Kusto.Language.Symbols.ScalarTypes.Long);this.DynamicArrayOfReal=new Kusto.Language.Symbols.DynamicArraySymbol(Kusto.Language.Symbols.ScalarTypes.Real);this.DynamicArrayOfDateTime=new Kusto.Language.Symbols.DynamicArraySymbol(Kusto.Language.Symbols.ScalarTypes.DateTime);this.DynamicArrayOfTimeSpan=new Kusto.Language.Symbols.DynamicArraySymbol(Kusto.Language.Symbols.ScalarTypes.TimeSpan);this.DynamicArrayOfGuid=new Kusto.Language.Symbols.DynamicArraySymbol(Kusto.Language.Symbols.ScalarTypes.Guid);this.DynamicArrayOfString=new Kusto.Language.Symbols.DynamicArraySymbol(Kusto.Language.Symbols.ScalarTypes.String);this.DynamicArrayOfArray=new Kusto.Language.Symbols.DynamicArraySymbol(Kusto.Language.Symbols.ScalarTypes.DynamicArray);this.DynamicArrayOfBag=new Kusto.Language.Symbols.DynamicArraySymbol(Kusto.Language.Symbols.ScalarTypes.DynamicBag);this.DynamicArrayOfArrayOfReal=new Kusto.Language.Symbols.DynamicArraySymbol(Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfReal);this.DynamicArrayOfArrayOfString=new Kusto.Language.Symbols.DynamicArraySymbol(Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfString);this.GeoShape=new Kusto.Language.Symbols.DynamicBagSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("type",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("coordinates",Kusto.Language.Symbols.ScalarTypes.DynamicArray)]);this.All=System.Array.init([Kusto.Language.Symbols.ScalarTypes.Bool,Kusto.Language.Symbols.ScalarTypes.Int,Kusto.Language.Symbols.ScalarTypes.Long,Kusto.Language.Symbols.ScalarTypes.Real,Kusto.Language.Symbols.ScalarTypes.Decimal,Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ScalarTypes.DateTime,Kusto.Language.Symbols.ScalarTypes.TimeSpan,Kusto.Language.Symbols.ScalarTypes.Guid,Kusto.Language.Symbols.ScalarTypes.Type,Kusto.Language.Symbols.ScalarTypes.Dynamic,Kusto.Language.Symbols.ScalarTypes.Null],Kusto.Language.Symbols.ScalarSymbol);this.s_typeMap=new(System.Collections.Generic.Dictionary$2(System.String,Kusto.Language.Symbols.ScalarSymbol).ctor)},ctor:function(){var $t,$t1,type,alias;$t=Bridge.getEnumerator(Kusto.Language.Symbols.ScalarTypes.All,Kusto.Language.Symbols.ScalarSymbol);try{while($t.moveNext()){type=$t.Current;Kusto.Language.Symbols.ScalarTypes.s_typeMap.add(type.Name,type);$t1=Bridge.getEnumerator(type.Aliases,System.String);try{while($t1.moveNext())alias=$t1.Current,Kusto.Language.Symbols.ScalarTypes.s_typeMap.add(alias,type)}finally{Bridge.is($t1,System.IDisposable)&&$t1.System$IDisposable$Dispose()}}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}},methods:{GetDynamic:function(underlyingType){return underlyingType==null||Bridge.referenceEquals(underlyingType,Kusto.Language.Symbols.ScalarTypes.Dynamic)||Bridge.referenceEquals(underlyingType,Kusto.Language.Symbols.ScalarTypes.Null)||Bridge.referenceEquals(underlyingType,Kusto.Language.Symbols.ScalarTypes.Unknown)?Kusto.Language.Symbols.ScalarTypes.Dynamic:Bridge.is(underlyingType,Kusto.Language.Symbols.DynamicSymbol)?underlyingType:Bridge.referenceEquals(underlyingType,Kusto.Language.Symbols.ScalarTypes.Bool)?Kusto.Language.Symbols.ScalarTypes.DynamicBool:Bridge.referenceEquals(underlyingType,Kusto.Language.Symbols.ScalarTypes.Int)?Kusto.Language.Symbols.ScalarTypes.DynamicLong:Bridge.referenceEquals(underlyingType,Kusto.Language.Symbols.ScalarTypes.Long)?Kusto.Language.Symbols.ScalarTypes.DynamicLong:Bridge.referenceEquals(underlyingType,Kusto.Language.Symbols.ScalarTypes.Real)?Kusto.Language.Symbols.ScalarTypes.DynamicReal:Bridge.referenceEquals(underlyingType,Kusto.Language.Symbols.ScalarTypes.DateTime)?Kusto.Language.Symbols.ScalarTypes.DynamicDateTime:Bridge.referenceEquals(underlyingType,Kusto.Language.Symbols.ScalarTypes.TimeSpan)?Kusto.Language.Symbols.ScalarTypes.DynamicTimeSpan:Bridge.referenceEquals(underlyingType,Kusto.Language.Symbols.ScalarTypes.Guid)?Kusto.Language.Symbols.ScalarTypes.DynamicGuid:Bridge.referenceEquals(underlyingType,Kusto.Language.Symbols.ScalarTypes.String)?Kusto.Language.Symbols.ScalarTypes.DynamicString:Kusto.Language.Symbols.ScalarTypes.Dynamic},GetDynamicArray:function(elementType){var dp;return(dp=Bridge.as(elementType,Kusto.Language.Symbols.DynamicPrimitiveSymbol))!=null&&(elementType=dp.UnderlyingType),elementType==null?Kusto.Language.Symbols.ScalarTypes.DynamicArray:Bridge.referenceEquals(elementType,Kusto.Language.Symbols.ScalarTypes.Bool)?Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfBool:Bridge.referenceEquals(elementType,Kusto.Language.Symbols.ScalarTypes.Int)?Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfLong:Bridge.referenceEquals(elementType,Kusto.Language.Symbols.ScalarTypes.Long)?Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfLong:Bridge.referenceEquals(elementType,Kusto.Language.Symbols.ScalarTypes.Real)?Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfReal:Bridge.referenceEquals(elementType,Kusto.Language.Symbols.ScalarTypes.DateTime)?Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfDateTime:Bridge.referenceEquals(elementType,Kusto.Language.Symbols.ScalarTypes.TimeSpan)?Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfTimeSpan:Bridge.referenceEquals(elementType,Kusto.Language.Symbols.ScalarTypes.Guid)?Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfGuid:Bridge.referenceEquals(elementType,Kusto.Language.Symbols.ScalarTypes.Dynamic)?Kusto.Language.Symbols.ScalarTypes.DynamicArray:Bridge.referenceEquals(elementType,Kusto.Language.Symbols.ScalarTypes.String)?Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfString:Bridge.referenceEquals(elementType,Kusto.Language.Symbols.ScalarTypes.DynamicArray)?Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfArray:Bridge.referenceEquals(elementType,Kusto.Language.Symbols.ScalarTypes.DynamicBag)?Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfBag:Bridge.referenceEquals(elementType,Kusto.Language.Symbols.ScalarTypes.Null)?Kusto.Language.Symbols.ScalarTypes.DynamicArray:Bridge.referenceEquals(elementType,Kusto.Language.Symbols.ScalarTypes.Unknown)?Kusto.Language.Symbols.ScalarTypes.DynamicArray:Bridge.referenceEquals(elementType,Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfReal)?Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfArrayOfReal:Bridge.referenceEquals(elementType,Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfString)?Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfArrayOfString:Bridge.is(elementType,Kusto.Language.Symbols.DynamicArraySymbol)||Bridge.is(elementType,Kusto.Language.Symbols.DynamicBagSymbol)?new Kusto.Language.Symbols.DynamicArraySymbol(elementType):Kusto.Language.Symbols.ScalarTypes.DynamicArray},GetDynamicBag$1:function(properties){return properties==null||System.Array.getCount(properties,Kusto.Language.Symbols.ColumnSymbol)===0?Kusto.Language.Symbols.ScalarTypes.DynamicBag:new Kusto.Language.Symbols.DynamicBagSymbol.$ctor1(properties)},GetDynamicBag:function(properties){return properties===void 0&&(properties=[]),Kusto.Language.Symbols.ScalarTypes.GetDynamicBag$1(Bridge.cast(properties,System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.ColumnSymbol)))},GetDynamicBag$2:function(schema){return Kusto.Language.Symbols.ScalarTypes.GetDynamicBag$1(Kusto.Language.Symbols.TableSymbol.From(schema).Columns)},GetTuple$1:function(columns){return new Kusto.Language.Symbols.TupleSymbol.$ctor1(columns)},GetTuple:function(columns){return columns===void 0&&(columns=[]),new Kusto.Language.Symbols.TupleSymbol.ctor(columns)},GetTuple$2:function(schema){return Kusto.Language.Symbols.ScalarTypes.GetTuple$1(Kusto.Language.Symbols.TableSymbol.From(schema).Columns)},GetSymbol:function(typeName){var type={};return Kusto.Language.Symbols.ScalarTypes.s_typeMap.tryGetValue(typeName,type),type.v}}}});Bridge.define("Kusto.Language.Symbols.SchemaDisplay",{statics:{methods:{GetText:function(symbol){var c,p,t,f,s;do return symbol==null?"":Bridge.is(symbol,Kusto.Language.Symbols.ColumnSymbol)?(c=Bridge.cast(symbol,Kusto.Language.Symbols.ColumnSymbol),System.String.format("{0}: {1}",Kusto.Language.KustoFacts.BracketNameIfNecessary(c.Name),Kusto.Language.Symbols.SchemaDisplay.GetScalarTypeText(c.Type))):Bridge.is(symbol,Kusto.Language.Symbols.ParameterSymbol)?(p=Bridge.cast(symbol,Kusto.Language.Symbols.ParameterSymbol),System.String.format("{0}: {1}",Kusto.Language.KustoFacts.BracketNameIfNecessary(p.Name),Kusto.Language.Symbols.SchemaDisplay.GetScalarTypeText(p.Type))):Bridge.is(symbol,Kusto.Language.Symbols.TableSymbol)?(t=Bridge.cast(symbol,Kusto.Language.Symbols.TableSymbol),System.String.format("({0})",[Bridge.toArray(System.Linq.Enumerable.from(t.Columns,Kusto.Language.Symbols.ColumnSymbol).select(function(m){return Kusto.Language.Symbols.SchemaDisplay.GetText(m)})).join(", ")])):Bridge.is(symbol,Kusto.Language.Symbols.FunctionSymbol)?(f=Bridge.cast(symbol,Kusto.Language.Symbols.FunctionSymbol),s=System.Array.getItem(f.Signatures,0,Kusto.Language.Symbols.Signature),System.String.format("({0})",[Bridge.toArray(System.Linq.Enumerable.from(s.Parameters,Kusto.Language.Symbols.Parameter).select(function(p1){return System.String.format("{0}: {1}",Kusto.Language.KustoFacts.BracketNameIfNecessary(p1.Name),Kusto.Language.Symbols.SchemaDisplay.GetParameterTypeText(p1))})).join(", ")])):symbol.Name;while(0)},GetScalarTypeText:function(type){var p,d;do return Bridge.is(type,Kusto.Language.Symbols.PrimitiveSymbol)?(p=Bridge.cast(type,Kusto.Language.Symbols.PrimitiveSymbol),p.Name):Bridge.is(type,Kusto.Language.Symbols.DynamicSymbol)?(d=Bridge.cast(type,Kusto.Language.Symbols.DynamicSymbol),"dynamic"):"";while(0)},GetParameterTypeText:function(parameter){if(parameter.TypeKind===Kusto.Language.Symbols.ParameterTypeKind.Declared&&System.Array.getCount(parameter.DeclaredTypes,Kusto.Language.Symbols.TypeSymbol)===1){var type=System.Array.getItem(parameter.DeclaredTypes,0,Kusto.Language.Symbols.TypeSymbol),t;return(t=Bridge.as(type,Kusto.Language.Symbols.TableSymbol))!=null&&System.Array.getCount(t.Columns,Kusto.Language.Symbols.ColumnSymbol)===0?"(*)":Kusto.Language.Symbols.SchemaDisplay.GetText(type)}return"dynamic"}}}});Bridge.define("Kusto.Language.Symbols.Signature",{statics:{fields:{UnknownParameter:null,s_parameterListPool:null},ctors:{init:function(){this.UnknownParameter=new Kusto.Language.Symbols.Parameter.$ctor2("",Kusto.Language.Symbols.ScalarTypes.Unknown);this.s_parameterListPool=new(Kusto.Language.Utils.ObjectPool$1(System.Collections.Generic.List$1(Kusto.Language.Symbols.Parameter)))(function(){return new(System.Collections.Generic.List$1(Kusto.Language.Symbols.Parameter).ctor)},function(list){list.clear()})}}},fields:{_returnType:null,_body:null,_tabularity:0,nameToParameterMap:null},props:{DebugText:{get:function(){return Kusto.Language.Symbols.DebugDisplay.GetText$1(this)}},Symbol:null,ReturnKind:0,Parameters:null,MinArgumentCount:0,MaxArgumentCount:0,Declaration:null,CustomReturnType:null,Layout:null,IsHidden:!1,Alternative:null,IsObsolete:{get:function(){return this.Alternative!=null}},HasRepeatableParameters:!1,HasOptionalParameters:!1,HasAggregateParameters:!1,Body:{get:function(){return this._body==null&&this.Declaration!=null&&(this._body=this.Declaration.ToString(Kusto.Language.Syntax.IncludeTrivia.Interior)),this._body}},DeclaredReturnType:{get:function(){return this.ReturnKind===Kusto.Language.Symbols.ReturnTypeKind.Declared?this._returnType:null}},AllowsNamedArguments:{get:function(){var fn;return!((fn=Bridge.as(this.Symbol,Kusto.Language.Symbols.FunctionSymbol))!=null&&Kusto.Language.GlobalState.Default.IsBuiltInFunction(fn))}},Tabularity:{get:function(){if(this._tabularity===Kusto.Language.Symbols.Tabularity.Unspecified)switch(this.ReturnKind){case Kusto.Language.Symbols.ReturnTypeKind.Declared:return this._returnType.Tabularity;case Kusto.Language.Symbols.ReturnTypeKind.Computed:return Kusto.Language.Symbols.Tabularity.Unknown;case Kusto.Language.Symbols.ReturnTypeKind.Parameter0:return System.Array.getCount(this.Parameters,Kusto.Language.Symbols.Parameter)>0?System.Array.getItem(this.Parameters,0,Kusto.Language.Symbols.Parameter).Tabularity:Kusto.Language.Symbols.Tabularity.Unknown;case Kusto.Language.Symbols.ReturnTypeKind.Parameter1:return System.Array.getCount(this.Parameters,Kusto.Language.Symbols.Parameter)>1?System.Array.getItem(this.Parameters,1,Kusto.Language.Symbols.Parameter).Tabularity:Kusto.Language.Symbols.Tabularity.Unknown;case Kusto.Language.Symbols.ReturnTypeKind.Parameter2:return System.Array.getCount(this.Parameters,Kusto.Language.Symbols.Parameter)>2?System.Array.getItem(this.Parameters,2,Kusto.Language.Symbols.Parameter).Tabularity:Kusto.Language.Symbols.Tabularity.Unknown;case Kusto.Language.Symbols.ReturnTypeKind.ParameterN:return System.Array.getCount(this.Parameters,Kusto.Language.Symbols.Parameter)>0?System.Array.getItem(this.Parameters,System.Array.getCount(this.Parameters,Kusto.Language.Symbols.Parameter)-1|0,Kusto.Language.Symbols.Parameter).Tabularity:Kusto.Language.Symbols.Tabularity.Unknown;case Kusto.Language.Symbols.ReturnTypeKind.Custom:return Kusto.Language.Symbols.Tabularity.Unknown;case Kusto.Language.Symbols.ReturnTypeKind.Parameter0Table:case Kusto.Language.Symbols.ReturnTypeKind.Parameter0ExternalTable:case Kusto.Language.Symbols.ReturnTypeKind.Parameter0MaterializedView:case Kusto.Language.Symbols.ReturnTypeKind.Parameter0Database:case Kusto.Language.Symbols.ReturnTypeKind.Parameter0Cluster:return Kusto.Language.Symbols.Tabularity.Tabular;default:return Kusto.Language.Symbols.Tabularity.Scalar}return this._tabularity}},IsScalar:{get:function(){switch(this.Tabularity){case Kusto.Language.Symbols.Tabularity.Scalar:case Kusto.Language.Symbols.Tabularity.Unknown:return!0;default:return!1}}},IsTabular:{get:function(){switch(this.Tabularity){case Kusto.Language.Symbols.Tabularity.Tabular:case Kusto.Language.Symbols.Tabularity.Unknown:return!0;default:return!1}}}},ctors:{$ctor3:function(returnKind,returnType,body,declaration,customReturnType,tabularity,parameters,layout,isHidden,alternative){var $t,minArgumentCount,maxArgumentCount,p;if(layout===void 0&&(layout=null),isHidden===void 0&&(isHidden=!1),alternative===void 0&&(alternative=null),this.$initialize(),returnKind===Kusto.Language.Symbols.ReturnTypeKind.Declared&&returnType==null)throw new System.ArgumentNullException.$ctor1("returnType");if(returnKind===Kusto.Language.Symbols.ReturnTypeKind.Computed&&!!!(body!=null|declaration!=null))throw new System.ArgumentNullException.$ctor1("body");if(returnKind===Kusto.Language.Symbols.ReturnTypeKind.Custom&&Bridge.staticEquals(customReturnType,null))throw new System.ArgumentNullException.$ctor1("customReturnType");this.ReturnKind=returnKind;this._returnType=returnType;this._body=body;this.Declaration=declaration;this.CustomReturnType=customReturnType;this._tabularity=tabularity;this.Parameters=Kusto.Language.Utils.ArgumentCheckers.CheckArgumentNullOrElementNull(Kusto.Language.Symbols.Parameter,Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Symbols.Parameter,parameters),"parameters");this.IsHidden=isHidden;this.Alternative=alternative;returnKind===Kusto.Language.Symbols.ReturnTypeKind.Computed&&returnType!=null&&tabularity===Kusto.Language.Symbols.Tabularity.Unspecified&&(this._tabularity=returnType.Tabularity);minArgumentCount=0;maxArgumentCount=0;$t=Bridge.getEnumerator(this.Parameters,Kusto.Language.Symbols.Parameter);try{while($t.moveNext())p=$t.Current,p.IsRepeatable&&(this.HasRepeatableParameters=!0),p.IsOptional&&(this.HasOptionalParameters=!0),p.ArgumentKind===Kusto.Language.Symbols.ArgumentKind.Aggregate&&(this.HasAggregateParameters=!0),minArgumentCount=minArgumentCount+p.MinOccurring|0,maxArgumentCount=maxArgumentCount+p.MaxOccurring|0}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}this.MinArgumentCount=minArgumentCount;this.MaxArgumentCount=maxArgumentCount;this.Layout=layout!=null?layout:this.HasRepeatableParameters?Kusto.Language.Symbols.ParameterLayouts.Repeating:Kusto.Language.Symbols.ParameterLayouts.Fixed},$ctor4:function(returnKind,parameters){Kusto.Language.Symbols.Signature.$ctor3.call(this,returnKind,null,null,null,null,Kusto.Language.Symbols.Tabularity.Unspecified,parameters)},$ctor2:function(returnKind,parameters){parameters===void 0&&(parameters=[]);Kusto.Language.Symbols.Signature.$ctor3.call(this,returnKind,null,null,null,null,Kusto.Language.Symbols.Tabularity.Unspecified,parameters)},$ctor6:function(returnType,parameters){if(Kusto.Language.Symbols.Signature.$ctor3.call(this,Kusto.Language.Symbols.ReturnTypeKind.Declared,returnType,null,null,null,Kusto.Language.Symbols.Tabularity.Unspecified,parameters),returnType==null)throw new System.ArgumentNullException.$ctor1("returnType");},$ctor5:function(returnType,parameters){if(parameters===void 0&&(parameters=[]),Kusto.Language.Symbols.Signature.$ctor3.call(this,Kusto.Language.Symbols.ReturnTypeKind.Declared,returnType,null,null,null,Kusto.Language.Symbols.Tabularity.Unspecified,parameters),returnType==null)throw new System.ArgumentNullException.$ctor1("returnType");},$ctor1:function(customReturnType,tabularity,parameters){if(Kusto.Language.Symbols.Signature.$ctor3.call(this,Kusto.Language.Symbols.ReturnTypeKind.Custom,null,null,null,customReturnType,tabularity,parameters),Bridge.staticEquals(customReturnType,null))throw new System.ArgumentNullException.$ctor1("customReturnType");},ctor:function(customReturnType,tabularity,parameters){if(parameters===void 0&&(parameters=[]),Kusto.Language.Symbols.Signature.$ctor3.call(this,Kusto.Language.Symbols.ReturnTypeKind.Custom,null,null,null,customReturnType,tabularity,parameters),Bridge.staticEquals(customReturnType,null))throw new System.ArgumentNullException.$ctor1("customReturnType");},$ctor10:function(body,tabularity,parameters){Kusto.Language.Symbols.Signature.$ctor3.call(this,Kusto.Language.Symbols.ReturnTypeKind.Computed,null,body,null,null,tabularity,parameters)},$ctor9:function(body,tabularity,parameters){parameters===void 0&&(parameters=[]);Kusto.Language.Symbols.Signature.$ctor3.call(this,Kusto.Language.Symbols.ReturnTypeKind.Computed,null,body,null,null,tabularity,parameters)},$ctor8:function(declaration,parameters){var $t;Kusto.Language.Symbols.Signature.$ctor3.call(this,Kusto.Language.Symbols.ReturnTypeKind.Computed,($t=declaration.Expression)!=null?$t.ResultType:null,null,declaration,null,Kusto.Language.Symbols.Tabularity.Unspecified,parameters)},$ctor7:function(declaration,parameters){parameters===void 0&&(parameters=[]);var $t;Kusto.Language.Symbols.Signature.$ctor3.call(this,Kusto.Language.Symbols.ReturnTypeKind.Computed,($t=declaration.Expression)!=null?$t.ResultType:null,null,declaration,null,Kusto.Language.Symbols.Tabularity.Unspecified,parameters)}},methods:{WithLayout$1:function(customBuilder){return this.WithLayout(Kusto.Language.Symbols.ParameterLayouts.Custom(customBuilder))},WithLayout:function(layout){return new Kusto.Language.Symbols.Signature.$ctor3(this.ReturnKind,this._returnType,this._body,this.Declaration,this.CustomReturnType,this._tabularity,this.Parameters,layout,this.IsHidden,this.Alternative)},WithIsHidden:function(isHidden){return new Kusto.Language.Symbols.Signature.$ctor3(this.ReturnKind,this._returnType,this._body,this.Declaration,this.CustomReturnType,this._tabularity,this.Parameters,this.Layout,isHidden,this.Alternative)},Hide:function(){return this.WithIsHidden(!0)},WithAlternative:function(alternative){return new Kusto.Language.Symbols.Signature.$ctor3(this.ReturnKind,this._returnType,this._body,this.Declaration,this.CustomReturnType,this._tabularity,this.Parameters,this.Layout,this.IsHidden,alternative)},Obsolete:function(alternative){return this.WithAlternative(alternative)},GetParameter:function(name){var $t,map,p,parameter;if(this.nameToParameterMap==null){map=new(System.Collections.Generic.Dictionary$2(System.String,Kusto.Language.Symbols.Parameter).$ctor4)(System.Array.getCount(this.Parameters,Kusto.Language.Symbols.Parameter));$t=Bridge.getEnumerator(this.Parameters,Kusto.Language.Symbols.Parameter);try{while($t.moveNext())p=$t.Current,map.setItem(p.Name,p)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}this.nameToParameterMap=map}return parameter={},this.nameToParameterMap.tryGetValue(name,parameter),parameter.v},GetArgumentParameters:function($arguments){if($arguments==null)throw new System.ArgumentNullException.$ctor1("arguments");var argumentParameters=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.Parameter).ctor);return this.GetArgumentParameters$2($arguments,argumentParameters),argumentParameters},GetArgumentParameters$2:function($arguments,argumentParameters){if($arguments==null)throw new System.ArgumentNullException.$ctor1("arguments");if(argumentParameters==null)throw new System.ArgumentNullException.$ctor1("argumentParameters");this.Layout.GetArgumentParameters$1(this,$arguments,argumentParameters)},GetArgumentParameters$1:function(argumentTypes,argumentParameters){if(argumentTypes==null)throw new System.ArgumentNullException.$ctor1("argumentTypes");if(argumentParameters==null)throw new System.ArgumentNullException.$ctor1("argumentParameters");this.Layout.GetArgumentParameters(this,argumentTypes,argumentParameters)},GetNextPossibleParameters:function($arguments,possibleParameters){if($arguments==null)throw new System.ArgumentNullException.$ctor1("arguments");if(possibleParameters==null)throw new System.ArgumentNullException.$ctor1("possibleParameters");this.Layout.GetNextPossibleParameters(this,$arguments,possibleParameters)},IsValidArgumentCount:function(argumentCount){return this.Layout.IsValidArgumentCount(this,argumentCount)},GetReturnType:function(globals){if(globals==null)throw new System.ArgumentNullException.$ctor1("globals");switch(this.ReturnKind){case Kusto.Language.Symbols.ReturnTypeKind.Declared:return this.DeclaredReturnType;case Kusto.Language.Symbols.ReturnTypeKind.Computed:return Kusto.Language.Binding.Binder.GetComputedReturnType(this,globals);case Kusto.Language.Symbols.ReturnTypeKind.Parameter0Cluster:return new Kusto.Language.Symbols.ClusterSymbol.$ctor1("",null,!0);case Kusto.Language.Symbols.ReturnTypeKind.Parameter0Database:return new Kusto.Language.Symbols.DatabaseSymbol.$ctor1("",null,!0);case Kusto.Language.Symbols.ReturnTypeKind.Parameter0Table:return Kusto.Language.Symbols.TableSymbol.Empty.WithIsOpen(!0);case Kusto.Language.Symbols.ReturnTypeKind.Parameter0ExternalTable:return Kusto.Language.Symbols.TableSymbol.Empty.WithIsOpen(!0);case Kusto.Language.Symbols.ReturnTypeKind.Parameter0MaterializedView:return Kusto.Language.Symbols.TableSymbol.Empty.WithIsOpen(!0);default:return this.Tabularity===Kusto.Language.Symbols.Tabularity.Tabular?Kusto.Language.Symbols.TableSymbol.Empty.WithIsOpen(!0):Bridge.cast(Kusto.Language.Symbols.ScalarTypes.Unknown,Kusto.Language.Symbols.TypeSymbol)}},GetReturnType$1:function(globals,argumentTypes){if(globals==null)throw new System.ArgumentNullException.$ctor1("globals");if(argumentTypes==null)throw new System.ArgumentNullException.$ctor1("argumentTypes");var argumentParameters=Kusto.Language.Symbols.Signature.s_parameterListPool.AllocateFromPool();try{return this.GetArgumentParameters$1(argumentTypes,argumentParameters),this.GetReturnType$2(globals,argumentTypes,argumentParameters)}finally{Kusto.Language.Symbols.Signature.s_parameterListPool.ReturnToPool(argumentParameters)}},GetReturnType$2:function(globals,argumentTypes,argumentParameters){if(globals==null)throw new System.ArgumentNullException.$ctor1("globals");if(argumentParameters==null)throw new System.ArgumentNullException.$ctor1("argumentParameters");if(argumentTypes==null)throw new System.ArgumentNullException.$ctor1("argumentTypes");switch(this.ReturnKind){case Kusto.Language.Symbols.ReturnTypeKind.Declared:return this.DeclaredReturnType;case Kusto.Language.Symbols.ReturnTypeKind.Computed:return Kusto.Language.Binding.Binder.GetComputedReturnType(this,globals,argumentTypes);case Kusto.Language.Symbols.ReturnTypeKind.Parameter0:var iArg=Kusto.Language.Utils.ListExtensions.IndexOf(Kusto.Language.Symbols.Parameter,argumentParameters,System.Array.getItem(this.Parameters,0,Kusto.Language.Symbols.Parameter));return iArg>=0&&iArg<System.Array.getCount(argumentTypes,Kusto.Language.Symbols.TypeSymbol)?System.Array.getItem(argumentTypes,iArg,Kusto.Language.Symbols.TypeSymbol):Kusto.Language.Symbols.ErrorSymbol.Instance;case Kusto.Language.Symbols.ReturnTypeKind.Parameter1:return iArg=Kusto.Language.Utils.ListExtensions.IndexOf(Kusto.Language.Symbols.Parameter,argumentParameters,System.Array.getItem(this.Parameters,1,Kusto.Language.Symbols.Parameter)),iArg>=0&&iArg<System.Array.getCount(argumentTypes,Kusto.Language.Symbols.TypeSymbol)?System.Array.getItem(argumentTypes,iArg,Kusto.Language.Symbols.TypeSymbol):Kusto.Language.Symbols.ErrorSymbol.Instance;case Kusto.Language.Symbols.ReturnTypeKind.Parameter2:return iArg=Kusto.Language.Utils.ListExtensions.IndexOf(Kusto.Language.Symbols.Parameter,argumentParameters,System.Array.getItem(this.Parameters,2,Kusto.Language.Symbols.Parameter)),iArg>=0&&iArg<System.Array.getCount(argumentTypes,Kusto.Language.Symbols.TypeSymbol)?System.Array.getItem(argumentTypes,iArg,Kusto.Language.Symbols.TypeSymbol):Kusto.Language.Symbols.ErrorSymbol.Instance;case Kusto.Language.Symbols.ReturnTypeKind.ParameterN:return iArg=Kusto.Language.Utils.ListExtensions.IndexOf(Kusto.Language.Symbols.Parameter,argumentParameters,System.Array.getItem(this.Parameters,System.Array.getCount(this.Parameters,Kusto.Language.Symbols.Parameter)-1|0,Kusto.Language.Symbols.Parameter)),iArg>=0&&iArg<System.Array.getCount(argumentTypes,Kusto.Language.Symbols.TypeSymbol)?System.Array.getItem(argumentTypes,iArg,Kusto.Language.Symbols.TypeSymbol):Kusto.Language.Symbols.ErrorSymbol.Instance;case Kusto.Language.Symbols.ReturnTypeKind.Parameter0Promoted:return iArg=Kusto.Language.Utils.ListExtensions.IndexOf(Kusto.Language.Symbols.Parameter,argumentParameters,System.Array.getItem(this.Parameters,0,Kusto.Language.Symbols.Parameter)),iArg>=0&&iArg<System.Array.getCount(argumentTypes,Kusto.Language.Symbols.TypeSymbol)?Kusto.Language.Symbols.TypeFacts.PromoteToLong(System.Array.getItem(argumentTypes,iArg,Kusto.Language.Symbols.TypeSymbol)):Kusto.Language.Symbols.ErrorSymbol.Instance;case Kusto.Language.Symbols.ReturnTypeKind.Common:return Kusto.Language.Symbols.TypeFacts.GetCommonArgumentType(argumentParameters,argumentTypes)||Kusto.Language.Symbols.ErrorSymbol.Instance;case Kusto.Language.Symbols.ReturnTypeKind.CommonNonDynamic:return Kusto.Language.Symbols.TypeFacts.GetCommonArgumentType(argumentParameters,argumentTypes,void 0,!0)||Kusto.Language.Symbols.ErrorSymbol.Instance;case Kusto.Language.Symbols.ReturnTypeKind.Widest:return Kusto.Language.Symbols.TypeFacts.PromoteToLong(Kusto.Language.Symbols.TypeFacts.GetWidestScalarType$1(argumentTypes))||Kusto.Language.Symbols.ErrorSymbol.Instance;case Kusto.Language.Symbols.ReturnTypeKind.Parameter0Cluster:return new Kusto.Language.Symbols.ClusterSymbol.$ctor1("",null,!0);case Kusto.Language.Symbols.ReturnTypeKind.Parameter0Database:return new Kusto.Language.Symbols.DatabaseSymbol.$ctor1("",null,!0);case Kusto.Language.Symbols.ReturnTypeKind.Parameter0Table:return Kusto.Language.Symbols.TableSymbol.Empty.WithIsOpen(!0);case Kusto.Language.Symbols.ReturnTypeKind.Parameter0ExternalTable:return Kusto.Language.Symbols.TableSymbol.Empty.WithIsOpen(!0);case Kusto.Language.Symbols.ReturnTypeKind.Parameter0MaterializedView:return Kusto.Language.Symbols.TableSymbol.Empty.WithIsOpen(!0);default:return this.Tabularity===Kusto.Language.Symbols.Tabularity.Tabular?Kusto.Language.Symbols.TableSymbol.Empty.WithIsOpen(!0):Bridge.cast(Kusto.Language.Symbols.ScalarTypes.Unknown,Kusto.Language.Symbols.TypeSymbol)}},ComputeTabularity:function(globals){var syntaxTabularity,type;this.ReturnKind===Kusto.Language.Symbols.ReturnTypeKind.Computed&&this._tabularity===Kusto.Language.Symbols.Tabularity.Unspecified&&(this._tabularity=Kusto.Language.Symbols.Tabularity.Unknown,syntaxTabularity=this.GetSyntaxTabularity(globals),syntaxTabularity!==Kusto.Language.Symbols.Tabularity.Unknown?this._tabularity=syntaxTabularity:(type=Kusto.Language.Binding.Binder.GetComputedReturnType(this,globals),type!=null&&(type.IsTabular?this._tabularity=Kusto.Language.Symbols.Tabularity.Tabular:type.IsScalar&&(this._tabularity=Kusto.Language.Symbols.Tabularity.Scalar))))},GetSyntaxTabularity:function(globals){var statements=null,body,code;return this.Declaration!=null?statements=this.Declaration.Statements:this._body!=null&&(body=this._body.trim(),System.String.startsWith(body,"{",4)&&(body=body.substr(1),System.String.endsWith(body,"}",4)&&(body=body.substr(0,body.length-1|0))),code=Kusto.Language.KustoCode.Parse(body),statements=code.Syntax.GetFirstDescendantOrSelf(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)))),Kusto.Language.KustoFacts.GetSyntaxTabularity$2(statements,globals)}}});Bridge.define("Kusto.Language.Symbols.SymbolKind",{$kind:"enum",statics:{fields:{None:0,Primitive:1,Variable:2,Function:3,Parameter:4,Pattern:5,Tuple:6,Bag:7,Array:8,Column:9,Table:10,Graph:11,Database:12,Cluster:13,Operator:14,Group:15,Void:16,Error:17,Command:18,MaterializedView:19,Option:20,QueryOperatorParameter:21,EntityGroup:22,EntityGroupElement:23}}});Bridge.define("Kusto.Language.Symbols.SymbolMatch",{$kind:"enum",statics:{fields:{None:0,Column:1,Table:2,ExternalTable:4,Function:8,View:16,Local:32,Database:64,Cluster:128,EntityGroup:256,Scalar:512,Tabular:1024,MaterializedView:2048,Option:4096,Graph:8192,Any:12283,Default:12091}},$flags:!0});Bridge.define("Kusto.Language.Symbols.SymbolMatchExtensions",{statics:{methods:{Matches$1:function(symbol,name,match,ignoreCase){var sn,ts,ets,mv,fs2,ege;if(ignoreCase===void 0&&(ignoreCase=!1),name!=null)if(ignoreCase){if(System.String.compare(symbol.Name,name,ignoreCase)!==0)return!1}else if(sn=symbol.Name,name.length===0||sn.length===0||name.charCodeAt(0)!==sn.charCodeAt(0)||System.String.compare(sn,name)!==0)return!1;return(match&Kusto.Language.Symbols.SymbolMatch.Column)!=0&&Bridge.is(symbol,Kusto.Language.Symbols.ColumnSymbol)?!0:(match&Kusto.Language.Symbols.SymbolMatch.Table)!=0&&(ts=Bridge.as(symbol,Kusto.Language.Symbols.TableSymbol))!=null&&!ts.IsExternal&&!ts.IsMaterializedView?!0:(match&Kusto.Language.Symbols.SymbolMatch.ExternalTable)!=0&&(ets=Bridge.as(symbol,Kusto.Language.Symbols.TableSymbol))!=null&&ets.IsExternal?!0:(match&Kusto.Language.Symbols.SymbolMatch.MaterializedView)!=0&&(mv=Bridge.as(symbol,Kusto.Language.Symbols.TableSymbol))!=null&&mv.IsMaterializedView?!0:(match&Kusto.Language.Symbols.SymbolMatch.Database)!=0&&Bridge.is(symbol,Kusto.Language.Symbols.DatabaseSymbol)?!0:(match&Kusto.Language.Symbols.SymbolMatch.Cluster)!=0&&Bridge.is(symbol,Kusto.Language.Symbols.ClusterSymbol)?!0:(match&Kusto.Language.Symbols.SymbolMatch.EntityGroup)!=0&&Bridge.is(symbol,Kusto.Language.Symbols.EntityGroupSymbol)?!0:(match&Kusto.Language.Symbols.SymbolMatch.Graph)!=0&&symbol.Tabularity===Kusto.Language.Symbols.Tabularity.Graph?!0:(match&Kusto.Language.Symbols.SymbolMatch.Scalar)!=0&&(match&Kusto.Language.Symbols.SymbolMatch.Tabular)==0&&!symbol.IsScalar?!1:(match&Kusto.Language.Symbols.SymbolMatch.Tabular)!=0&&(match&Kusto.Language.Symbols.SymbolMatch.Scalar)==0&&!symbol.IsTabular?!1:(match&Kusto.Language.Symbols.SymbolMatch.Function)!=0&&(Bridge.is(symbol,Kusto.Language.Symbols.FunctionSymbol)||Bridge.is(symbol,Kusto.Language.Symbols.PatternSymbol))?!0:(match&Kusto.Language.Symbols.SymbolMatch.View)!=0&&(fs2=Bridge.as(symbol,Kusto.Language.Symbols.FunctionSymbol))!=null&&fs2.IsView?!0:(match&Kusto.Language.Symbols.SymbolMatch.Local)!=0&&(Bridge.is(symbol,Kusto.Language.Symbols.VariableSymbol)||Bridge.is(symbol,Kusto.Language.Symbols.ParameterSymbol))?!0:(ege=Bridge.as(symbol,Kusto.Language.Symbols.EntityGroupElementSymbol))!=null&&(Kusto.Language.Symbols.SymbolMatchExtensions.Matches(ege.UnderlyingSymbol,match)||(match&Kusto.Language.Symbols.SymbolMatch.Tabular)!=0&&ege.UnderlyingSymbol.IsTabular)?!0:!1},Matches:function(symbol,match){return Kusto.Language.Symbols.SymbolMatchExtensions.Matches$1(symbol,null,match)}}}});Bridge.define("Kusto.Language.Symbols.TableState",{$kind:"enum",statics:{fields:{None:0,Serialized:1,Sorted:2,Open:4}},$flags:!0});Bridge.define("Kusto.Language.Symbols.TableStateExtensions",{statics:{methods:{Has:function(state,test){return(state&test)!=0},With:function(state,stateToAdd){return state|stateToAdd},Without:function(state,stateToRemove){return state&~stateToRemove},New:function(state){return Kusto.Language.Symbols.TableStateExtensions.With(state,Kusto.Language.Symbols.TableState.Serialized)},Open:function(state){return Kusto.Language.Symbols.TableStateExtensions.With(state,Kusto.Language.Symbols.TableState.Open)},Unsorted:function(state){return Kusto.Language.Symbols.TableStateExtensions.Without(state,Kusto.Language.Symbols.TableState.Sorted)}}}});Bridge.define("Kusto.Language.Symbols.TableSymbol.TableState",{$kind:"nested enum",statics:{fields:{None:0,Serialized:1,Sorted:2,Open:4}},$flags:!0,$utype:System.UInt16});Bridge.define("Kusto.Language.Symbols.Tabularity",{$kind:"enum",statics:{fields:{None:0,Scalar:1,Tabular:2,Graph:3,Unknown:4,Unspecified:5}}});Bridge.define("Kusto.Language.Symbols.TypeFacts",{statics:{fields:{s_nameToTypePool:null,s_columnListPool:null},ctors:{init:function(){this.s_nameToTypePool=new(Kusto.Language.Utils.ObjectPool$1(System.Collections.Generic.Dictionary$2(System.String,Kusto.Language.Symbols.TypeSymbol)))(function(){return new(System.Collections.Generic.Dictionary$2(System.String,Kusto.Language.Symbols.TypeSymbol).ctor)},function(map){map.clear()});this.s_columnListPool=new(Kusto.Language.Utils.ObjectPool$1(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol)))(function(){return new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor)},function(list){list.clear()})}},methods:{GetElementType:function(type){var array;return(array=Bridge.as(type,Kusto.Language.Symbols.DynamicArraySymbol))!=null?Kusto.Language.Symbols.ScalarTypes.GetDynamic(array.ElementType):Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Dynamic)?Kusto.Language.Symbols.ScalarTypes.Dynamic:null},GetWidestScalarType:function(scalarTypes){return scalarTypes===void 0&&(scalarTypes=[]),Kusto.Language.Symbols.TypeFacts.GetWidestScalarType$1(Bridge.cast(scalarTypes,System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol)))},GetWidestScalarType$1:function(scalarTypes){var widestType=null,i,type,s;if(scalarTypes!=null)for(i=0;i<System.Array.getCount(scalarTypes,Kusto.Language.Symbols.TypeSymbol);i=i+1|0)type=System.Array.getItem(scalarTypes,i,Kusto.Language.Symbols.TypeSymbol),(s=Bridge.as(type,Kusto.Language.Symbols.ScalarSymbol))!=null&&s.IsNumeric&&!Bridge.referenceEquals(s,widestType)&&(widestType==null||s.IsWiderThan(widestType))&&(widestType=s);return widestType},GetCommonType:function(types,fnInclude,allowedConversion,defaultType){var $t,commonType,type;if(fnInclude===void 0&&(fnInclude=null),allowedConversion===void 0&&(allowedConversion=1),defaultType===void 0&&(defaultType=null),commonType={v:null},types!=null){$t=Bridge.getEnumerator(types,Kusto.Language.Symbols.TypeSymbol);try{while($t.moveNext())if(type=$t.Current,type!=null&&(Bridge.staticEquals(fnInclude,null)||fnInclude(type))&&!Kusto.Language.Symbols.TypeFacts.TryGetCommonType(commonType.v,type,allowedConversion,commonType))return defaultType}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}return commonType.v||defaultType},GetCommonScalarType$1:function(types,allowedConversions){return allowedConversions===void 0&&(allowedConversions=1),Kusto.Language.Symbols.TypeFacts.GetCommonType(types,function(t){return t.IsScalar},allowedConversions)},GetCommonScalarType:function(types){return types===void 0&&(types=[]),Kusto.Language.Symbols.TypeFacts.GetCommonScalarType$1(Bridge.cast(types,System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol)))},GetCommonResultType$2:function(expressions,allowedConversions,defaultType){var $t,commonType,expr;if(allowedConversions===void 0&&(allowedConversions=1),defaultType===void 0&&(defaultType=null),commonType={v:null},expressions!=null){$t=Bridge.getEnumerator(expressions,Kusto.Language.Syntax.Expression);try{while($t.moveNext())if(expr=$t.Current,expr!=null&&!Kusto.Language.Symbols.TypeFacts.TryGetCommonType(commonType.v,expr.ResultType,allowedConversions,commonType))return defaultType}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}return commonType.v||defaultType},GetCommonResultType:function(expressions){return expressions===void 0&&(expressions=[]),Kusto.Language.Symbols.TypeFacts.GetCommonResultType$2(Bridge.cast(expressions,System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Syntax.Expression)))},GetCommonResultType$1:function(expressions,allowedConversions,defaultType,ignoreDynamic){var commonType,i,expr;if(allowedConversions===void 0&&(allowedConversions=1),defaultType===void 0&&(defaultType=null),ignoreDynamic===void 0&&(ignoreDynamic=!1),commonType={v:null},expressions!=null)for(i=0;i<expressions.Count;i=i+1|0)if((expr=expressions.getItem$1(i).Element$1,!ignoreDynamic||!Bridge.is(expr.ResultType,Kusto.Language.Symbols.DynamicSymbol))&&!Kusto.Language.Symbols.TypeFacts.TryGetCommonType(commonType.v,expr.ResultType,allowedConversions,commonType))return defaultType;return commonType.v==null&&ignoreDynamic?Kusto.Language.Symbols.TypeFacts.GetCommonResultType$1(expressions,allowedConversions,defaultType,!1):commonType.v||defaultType},GetCommonColumnType:function(columns,allowedConversions,defaultType){var $t,commonType,col;if(allowedConversions===void 0&&(allowedConversions=1),defaultType===void 0&&(defaultType=null),commonType={v:null},columns!=null){$t=Bridge.getEnumerator(columns,Kusto.Language.Symbols.ColumnSymbol);try{while($t.moveNext())if(col=$t.Current,!Kusto.Language.Symbols.TypeFacts.TryGetCommonType(commonType.v,col.Type,allowedConversions,commonType))return defaultType}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}return commonType.v||defaultType},TryGetCommonType:function(typeA,typeB,allowedConversions,commonType){var arrayA,arrayB,bagA,bagB,dut,dpa,dpb,dpa1,dpb1,tableA,tableB;return typeA==null&&typeB==null?(commonType.v=null,!1):typeB==null?(commonType.v=typeA,!0):typeA==null?(commonType.v=typeB,!0):Bridge.referenceEquals(typeA,typeB)?(commonType.v=typeA,!0):Bridge.referenceEquals(typeA,Kusto.Language.Symbols.ScalarTypes.Null)?(commonType.v=typeB,!0):Bridge.referenceEquals(typeB,Kusto.Language.Symbols.ScalarTypes.Null)?(commonType.v=typeA,!0):Bridge.referenceEquals(typeA,Kusto.Language.Symbols.ScalarTypes.Unknown)||Bridge.referenceEquals(typeB,Kusto.Language.Symbols.ScalarTypes.Unknown)?(commonType.v=Kusto.Language.Symbols.ScalarTypes.Unknown,!0):Bridge.referenceEquals(typeA,Kusto.Language.Symbols.ScalarTypes.Dynamic)||Bridge.referenceEquals(typeB,Kusto.Language.Symbols.ScalarTypes.Dynamic)?(commonType.v=Kusto.Language.Symbols.ScalarTypes.Dynamic,!0):Kusto.Language.Symbols.TypeFacts.IsPromotableTo(typeA,typeB)&&Kusto.Language.Symbols.TypeFacts.IsConversionAllowed(Kusto.Language.Symbols.Conversion.Promotable,allowedConversions)?(commonType.v=typeB,!0):Kusto.Language.Symbols.TypeFacts.IsPromotableTo(typeB,typeA)&&Kusto.Language.Symbols.TypeFacts.IsConversionAllowed(Kusto.Language.Symbols.Conversion.Promotable,allowedConversions)?(commonType.v=typeA,!0):(arrayA=Bridge.as(typeA,Kusto.Language.Symbols.DynamicArraySymbol))!=null&&(arrayB=Bridge.as(typeB,Kusto.Language.Symbols.DynamicArraySymbol))!=null?(commonType.v=Bridge.referenceEquals(arrayA.ElementType,arrayB.ElementType)?arrayA.ElementType:Kusto.Language.Symbols.ScalarTypes.DynamicArray,!0):(bagA=Bridge.as(typeA,Kusto.Language.Symbols.DynamicBagSymbol))!=null&&(bagB=Bridge.as(typeB,Kusto.Language.Symbols.DynamicBagSymbol))!=null?(commonType.v=Kusto.Language.Symbols.ScalarTypes.GetDynamicBag$1(Kusto.Language.Symbols.TypeFacts.Intersect(bagA.Properties,bagB.Properties)),!0):(dut={},(dpa=Bridge.as(typeA,Kusto.Language.Symbols.DynamicPrimitiveSymbol))!=null&&(dpb=Bridge.as(typeB,Kusto.Language.Symbols.DynamicPrimitiveSymbol))!=null&&Kusto.Language.Symbols.TypeFacts.TryGetCommonType(dpa.UnderlyingType,dpb.UnderlyingType,allowedConversions,dut)?(commonType.v=Kusto.Language.Symbols.ScalarTypes.GetDynamic(dut.v),!0):(dpa1=Bridge.as(typeA,Kusto.Language.Symbols.DynamicPrimitiveSymbol))!=null&&Bridge.is(typeB,Kusto.Language.Symbols.ScalarSymbol)&&Kusto.Language.Symbols.TypeFacts.TryGetCommonType(dpa1.UnderlyingType,typeB,allowedConversions,dut)?(commonType.v=Kusto.Language.Symbols.ScalarTypes.GetDynamic(dut.v),!0):Bridge.is(typeA,Kusto.Language.Symbols.ScalarSymbol)&&(dpb1=Bridge.as(typeB,Kusto.Language.Symbols.DynamicPrimitiveSymbol))!=null&&Kusto.Language.Symbols.TypeFacts.TryGetCommonType(typeA,dpb1.UnderlyingType,allowedConversions,dut)?(commonType.v=Kusto.Language.Symbols.ScalarTypes.GetDynamic(dut.v),!0):Bridge.is(typeA,Kusto.Language.Symbols.DynamicSymbol)&&Bridge.is(typeB,Kusto.Language.Symbols.DynamicSymbol)?(commonType.v=Kusto.Language.Symbols.ScalarTypes.Dynamic,!0):(tableA=Bridge.as(typeA,Kusto.Language.Symbols.TableSymbol))!=null&&(tableB=Bridge.as(typeB,Kusto.Language.Symbols.TableSymbol))!=null?(commonType.v=new Kusto.Language.Symbols.TableSymbol.$ctor3(Kusto.Language.Symbols.TypeFacts.Intersect(tableA.Columns,tableB.Columns)),!0):typeA.IsScalar&&typeB.IsScalar&&Kusto.Language.Symbols.TypeFacts.IsConversionAllowed(Kusto.Language.Symbols.Conversion.Dynamic,allowedConversions)?(commonType.v=Kusto.Language.Symbols.ScalarTypes.Dynamic,!0):(commonType.v=null,!1))},IsConversionAllowed:function(conversion,allowedConversions){return conversion<=allowedConversions},GetCommonArgumentType:function(argumentParameters,argumentTypes,defaultType,ignoreDynamic){var commonType,i,parameter,argType;for(defaultType===void 0&&(defaultType=null),ignoreDynamic===void 0&&(ignoreDynamic=!1),commonType={v:null},i=0;i<System.Array.getCount(argumentTypes,Kusto.Language.Symbols.TypeSymbol);i=i+1|0)if(parameter=System.Array.getItem(argumentParameters,i,Kusto.Language.Symbols.Parameter),parameter!=null){if(argType=System.Array.getItem(argumentTypes,i,Kusto.Language.Symbols.TypeSymbol),ignoreDynamic&&Bridge.is(argType,Kusto.Language.Symbols.DynamicSymbol))continue;if(parameter.TypeKind===Kusto.Language.Symbols.ParameterTypeKind.CommonScalar&&argType.IsScalar||parameter.TypeKind===Kusto.Language.Symbols.ParameterTypeKind.CommonNumber&&Kusto.Language.Symbols.TypeFacts.IsNumeric(argType)||parameter.TypeKind===Kusto.Language.Symbols.ParameterTypeKind.CommonSummable&&Kusto.Language.Symbols.TypeFacts.IsSummable(argType)||parameter.TypeKind===Kusto.Language.Symbols.ParameterTypeKind.CommonOrderable&&Kusto.Language.Symbols.TypeFacts.IsOrderable(argType)){if(!Kusto.Language.Symbols.TypeFacts.TryGetCommonType(commonType.v,argType,Kusto.Language.Symbols.Conversion.Promotable,commonType))return defaultType}else if(parameter.TypeKind===Kusto.Language.Symbols.ParameterTypeKind.CommonScalarOrDynamic&&argType.IsScalar&&!Kusto.Language.Symbols.TypeFacts.TryGetCommonType(commonType.v,argType,Kusto.Language.Symbols.Conversion.Dynamic,commonType))return defaultType}return commonType.v==null&&ignoreDynamic?Kusto.Language.Symbols.TypeFacts.GetCommonArgumentType(argumentParameters,argumentTypes,defaultType,!1):commonType.v||defaultType},PromoteToLong:function(type){return Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Int)?Kusto.Language.Symbols.ScalarTypes.Long:type},IsPromotableTo:function(sourceType,targetType){var sourceScalar,targetScalar;return(sourceScalar=Bridge.as(sourceType,Kusto.Language.Symbols.ScalarSymbol))!=null&&(targetScalar=Bridge.as(targetType,Kusto.Language.Symbols.ScalarSymbol))!=null&&targetScalar.IsWiderThan(sourceScalar)||(sourceType.Kind===Kusto.Language.Symbols.SymbolKind.Bag||sourceType.Kind===Kusto.Language.Symbols.SymbolKind.Array)&&Bridge.referenceEquals(targetType,Kusto.Language.Symbols.ScalarTypes.Dynamic)},IsInteger:function(type){var scalar;return(scalar=Bridge.as(type,Kusto.Language.Symbols.ScalarSymbol))!=null&&scalar.IsInteger},IsInterval:function(type){var scalar;return(scalar=Bridge.as(type,Kusto.Language.Symbols.ScalarSymbol))!=null&&scalar.IsInterval},IsNumeric:function(type){var scalar;return(scalar=Bridge.as(type,Kusto.Language.Symbols.ScalarSymbol))!=null&&scalar.IsNumeric},IsSummable:function(type){var scalar;return(scalar=Bridge.as(type,Kusto.Language.Symbols.ScalarSymbol))!=null&&scalar.IsSummable},IsOrderable:function(type){var scalar;return(scalar=Bridge.as(type,Kusto.Language.Symbols.ScalarSymbol))!=null&&scalar.IsOrderable},IsAnyScalarExceptDynamic:function(type){return Bridge.is(type,Kusto.Language.Symbols.ScalarSymbol)&&!Bridge.is(type,Kusto.Language.Symbols.DynamicSymbol)},IsAnyScalarExceptBool:function(type){return Bridge.is(type,Kusto.Language.Symbols.ScalarSymbol)&&!Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Bool)&&!Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.DynamicBool)},IsAnyScalarExceptReadOrBool:function(type){return Bridge.is(type,Kusto.Language.Symbols.ScalarSymbol)&&!Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Real)&&!Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Bool)&&!Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.DynamicReal)&&!Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.DynamicBool)},IsNumericOrBool:function(type){return Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Bool)||Kusto.Language.Symbols.TypeFacts.IsNumeric(type)},IsRealOrDecimal:function(type){return Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Real)||Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Decimal)},IsStringOrDynamic:function(type){return Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.String)||Bridge.is(type,Kusto.Language.Symbols.DynamicSymbol)},IsStringOrArray:function(type){return Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.String)||Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.DynamicString)||Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfString)||Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.DynamicArray)||Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Dynamic)},IsIntegerOrArray:function(type){return Kusto.Language.Symbols.TypeFacts.IsInteger(type)||Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.DynamicLong)||Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.DynamicArrayOfLong)||Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.DynamicArray)||Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Dynamic)},IsIntegerOrDynamic:function(type){return Kusto.Language.Symbols.TypeFacts.IsInteger(type)||Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.DynamicLong)||Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Dynamic)},IsDynamicArray:function(type){return Bridge.is(type,Kusto.Language.Symbols.DynamicArraySymbol)||Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Dynamic)},IsDynamicBag:function(type){return Bridge.is(type,Kusto.Language.Symbols.DynamicBagSymbol)||Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Dynamic)},IsDynamicArrayOrBag:function(type){return Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Dynamic)||Bridge.is(type,Kusto.Language.Symbols.DynamicArraySymbol)||Bridge.is(type,Kusto.Language.Symbols.DynamicBagSymbol)},Union:function(columnsA,columnsB){var $t,$t1,$t2,$t3,nameToTypeMap=Kusto.Language.Symbols.TypeFacts.s_nameToTypePool.AllocateFromPool(),columnList=Kusto.Language.Symbols.TypeFacts.s_columnListPool.AllocateFromPool(),col,col1,currentType,commonType,col2,type,col3,type1;try{$t=Bridge.getEnumerator(columnsA,Kusto.Language.Symbols.ColumnSymbol);try{while($t.moveNext())col=$t.Current,nameToTypeMap.setItem(col.Name,col.Type)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}$t1=Bridge.getEnumerator(columnsB,Kusto.Language.Symbols.ColumnSymbol);try{while($t1.moveNext())col1=$t1.Current,currentType={},nameToTypeMap.tryGetValue(col1.Name,currentType)?(commonType={},Kusto.Language.Symbols.TypeFacts.TryGetCommonType(currentType.v,col1.Type,Kusto.Language.Symbols.Conversion.Dynamic,commonType)||nameToTypeMap.setItem(col1.Name,commonType.v||Kusto.Language.Symbols.ScalarTypes.Dynamic)):nameToTypeMap.setItem(col1.Name,col1.Type)}finally{Bridge.is($t1,System.IDisposable)&&$t1.System$IDisposable$Dispose()}$t2=Bridge.getEnumerator(columnsA,Kusto.Language.Symbols.ColumnSymbol);try{while($t2.moveNext())col2=$t2.Current,type={},nameToTypeMap.tryGetValue(col2.Name,type)&&(Bridge.referenceEquals(col2.Type,type.v)?columnList.add(col2):columnList.add(new Kusto.Language.Symbols.ColumnSymbol(col2.Name,type.v)),nameToTypeMap.remove(col2.Name))}finally{Bridge.is($t2,System.IDisposable)&&$t2.System$IDisposable$Dispose()}$t3=Bridge.getEnumerator(columnsB,Kusto.Language.Symbols.ColumnSymbol);try{while($t3.moveNext())col3=$t3.Current,type1={},nameToTypeMap.tryGetValue(col3.Name,type1)&&(Bridge.referenceEquals(col3.Type,type1.v)?columnList.add(col3):columnList.add(new Kusto.Language.Symbols.ColumnSymbol(col3.Name,type1.v)),nameToTypeMap.remove(col3.Name))}finally{Bridge.is($t3,System.IDisposable)&&$t3.System$IDisposable$Dispose()}return Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Symbols.ColumnSymbol,columnList)}finally{Kusto.Language.Symbols.TypeFacts.s_nameToTypePool.ReturnToPool(nameToTypeMap);Kusto.Language.Symbols.TypeFacts.s_columnListPool.ReturnToPool(columnList)}},Intersect:function(columnsA,columnsB){var $t,$t1,nameToTypeMap=Kusto.Language.Symbols.TypeFacts.s_nameToTypePool.AllocateFromPool(),columnList=Kusto.Language.Symbols.TypeFacts.s_columnListPool.AllocateFromPool(),col,col1,typeB,commonType;try{$t=Bridge.getEnumerator(columnsB,Kusto.Language.Symbols.ColumnSymbol);try{while($t.moveNext())col=$t.Current,nameToTypeMap.setItem(col.Name,col.Type)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}$t1=Bridge.getEnumerator(columnsA,Kusto.Language.Symbols.ColumnSymbol);try{while($t1.moveNext())col1=$t1.Current,typeB={},nameToTypeMap.tryGetValue(col1.Name,typeB)&&(commonType={},Kusto.Language.Symbols.TypeFacts.TryGetCommonType(col1.Type,typeB.v,Kusto.Language.Symbols.Conversion.Dynamic,commonType)?Bridge.referenceEquals(commonType.v,col1.Type)?columnList.add(col1):columnList.add(new Kusto.Language.Symbols.ColumnSymbol(col1.Name,commonType.v)):columnList.add(new Kusto.Language.Symbols.ColumnSymbol(col1.Name,Kusto.Language.Symbols.ScalarTypes.Dynamic)))}finally{Bridge.is($t1,System.IDisposable)&&$t1.System$IDisposable$Dispose()}return Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Symbols.ColumnSymbol,columnList)}finally{Kusto.Language.Symbols.TypeFacts.s_nameToTypePool.ReturnToPool(nameToTypeMap);Kusto.Language.Symbols.TypeFacts.s_columnListPool.ReturnToPool(columnList)}}}}});Bridge.define("Kusto.Language.Syntax.SyntaxElement",{statics:{fields:{_diagnosticListPool:null},ctors:{init:function(){this._diagnosticListPool=new(Kusto.Language.Utils.ObjectPool$1(System.Collections.Generic.List$1(Kusto.Language.Diagnostic)))(function(){return new(System.Collections.Generic.List$1(Kusto.Language.Diagnostic).ctor)},function(list){list.clear()})}},methods:{GetCommonAncestor:function(a,b){if(a==null||b==null)return null;for(var da=a.Depth,db=b.Depth;da>db&&da>0;)a=a.Parent,da=da-1|0;while(db>da&&db>0)b=b.Parent,db=db-1|0;return da>0&&Bridge.referenceEquals(a.Parent,b.Parent)?a.Parent:null},GetFirstDescendant:function(TElement,element,predicate,includeSelf){var telem,root,childIndex,child,telem2;if(includeSelf&&(telem=Bridge.as(element,TElement))!=null&&(Bridge.staticEquals(predicate,null)||predicate(telem)))return telem;for(root=element,childIndex=0;element!=null;)if(childIndex<element.ChildCount&&childIndex>=0)if(child=element.GetChild(childIndex),child!=null){if(element=child,childIndex=0,(telem2=Bridge.as(element,TElement))!=null&&(Bridge.staticEquals(predicate,null)||predicate(telem2)))return telem2}else childIndex=childIndex+1|0;else if(Bridge.referenceEquals(element,root))break;else childIndex=element.IndexInParent+1|0,element=element.Parent;return null},GetDescendants:function(TElement,element,predicate,includeSelf){var list=null,telem,root,childIndex,child,telem2;for(includeSelf&&(telem=Bridge.as(element,TElement))!=null&&(Bridge.staticEquals(predicate,null)||predicate(telem))&&(list=list||new(System.Collections.Generic.List$1(TElement).ctor),list.add(telem)),root=element,childIndex=0;element!=null;)if(childIndex<element.ChildCount&&childIndex>=0)child=element.GetChild(childIndex),child!=null?(element=child,childIndex=0,(telem2=Bridge.as(element,TElement))!=null&&(Bridge.staticEquals(predicate,null)||predicate(telem2))&&(list=list||new(System.Collections.Generic.List$1(TElement).ctor),list.add(telem2))):childIndex=childIndex+1|0;else if(Bridge.referenceEquals(element,root))break;else childIndex=element.IndexInParent+1|0,element=element.Parent;return list!=null?Kusto.Language.Utils.ListExtensions.ToReadOnly(TElement,list):Kusto.Language.Utils.EmptyReadOnlyList$1(TElement).Instance},WalkElements:function(root,fnBefore,fnAfter,fnDescend){var node,childIndex,child;if(fnBefore===void 0&&(fnBefore=null),fnAfter===void 0&&(fnAfter=null),fnDescend===void 0&&(fnDescend=null),root==null)throw new System.ArgumentNullException.$ctor1("root");for(node=root,childIndex=0,Bridge.staticEquals(fnBefore,null)?null:fnBefore(root);node!=null;)if(childIndex<node.ChildCount&&childIndex>=0&&(Bridge.staticEquals(fnDescend,null)||fnDescend(node)))child=node.GetChild(childIndex),child!=null?(node=child,childIndex=0,Bridge.staticEquals(fnBefore,null)?null:fnBefore(node)):childIndex=childIndex+1|0;else{if(Bridge.staticEquals(fnAfter,null)?null:fnAfter(node),Bridge.referenceEquals(node,root))break;childIndex=node.IndexInParent+1|0;node=node.Parent}},WalkNodes:function(root,fnBefore,fnAfter,fnDescend){var node,childIndex,child;if(fnBefore===void 0&&(fnBefore=null),fnAfter===void 0&&(fnAfter=null),fnDescend===void 0&&(fnDescend=null),root==null)throw new System.ArgumentNullException.$ctor1("root");for(node=root,childIndex=0,Bridge.staticEquals(fnBefore,null)?null:fnBefore(root);node!=null;)if(childIndex<node.ChildCount&&childIndex>=0&&(Bridge.staticEquals(fnDescend,null)||fnDescend(node)))child=Bridge.as(node.GetChild(childIndex),Kusto.Language.Syntax.SyntaxNode),child!=null?(node=child,childIndex=0,Bridge.staticEquals(fnBefore,null)?null:fnBefore(node)):childIndex=childIndex+1|0;else{if(Bridge.staticEquals(fnAfter,null)?null:fnAfter(node),Bridge.referenceEquals(node,root))break;childIndex=node.IndexInParent+1|0;node=node.Parent}},GetNextToken:function(root,token,includeZeroWidthTokens){for(var node=token!=null?token.Parent:root,childIndex=token!=null?token.IndexInParent+1|0:0,child,t;node!=null;)if(childIndex<node.ChildCount&&childIndex>=0)if(child=node.GetChild(childIndex),child!=null){if(node=child,childIndex=0,(t=Bridge.as(node,Kusto.Language.Syntax.SyntaxToken))!=null&&(includeZeroWidthTokens||t.FullWidth>0))return t}else childIndex=childIndex+1|0;else if(Bridge.referenceEquals(node,root))return null;else childIndex=node.IndexInParent+1|0,node=node.Parent;return null},GetPreviousToken:function(root,token,includeZeroWidthTokens){for(var node=token!=null?token.Parent:root,childIndex=token!=null?token.IndexInParent-1|0:root.ChildCount-1|0,child,t;node!=null;)if(childIndex<node.ChildCount&&childIndex>=0)if(child=node.GetChild(childIndex),child!=null){if(node=child,childIndex=node.ChildCount-1|0,(t=Bridge.as(node,Kusto.Language.Syntax.SyntaxToken))!=null&&(includeZeroWidthTokens||t.FullWidth>0))return t}else childIndex=childIndex-1|0;else if(Bridge.referenceEquals(node,root))return null;else childIndex=node.IndexInParent-1|0,node=node.Parent;return null},GatherDiagnostics:function(root,diagnostics,include,cancellationToken){cancellationToken===void 0&&(cancellationToken=new Kusto.Language.Utils.CancellationToken);cancellationToken.ThrowIfCancellationRequested();var includeSyntax=(include&Kusto.Language.Syntax.DiagnosticsInclude.Syntactic)!=0,includeSemantic=(include&Kusto.Language.Syntax.DiagnosticsInclude.Semantic)!=0,includeExpansion=(include&Kusto.Language.Syntax.DiagnosticsInclude.Expansion)!=0,fnDescend=include===Kusto.Language.Syntax.DiagnosticsInclude.Syntactic?function(e){return e.ContainsSyntaxDiagnostics}:null;Kusto.Language.Syntax.SyntaxElement.WalkElements(root,function(element){element.HasSyntaxDiagnostics&&includeSyntax&&diagnostics.AddRange(System.Linq.Enumerable.from(element.SyntaxDiagnostics,Kusto.Language.Diagnostic).select(function(d){return d.HasLocation?d:Kusto.Language.Syntax.SyntaxElement.SetLocation(d,element)}));var node;includeSemantic&&(node=Bridge.as(element,Kusto.Language.Syntax.SyntaxNode))!=null&&System.Array.getCount(node.SemanticDiagnostics,Kusto.Language.Diagnostic)>0&&diagnostics.AddRange(node.SemanticDiagnostics)},function(element){var $t,$t1,$t2,expr,calledBody,originalCount,firstError,node,tmpDiagnostics,alternate;if(includeExpansion&&(expr=Bridge.as(element,Kusto.Language.Syntax.Expression))!=null&&(calledBody=expr.GetCalledFunctionBody())!=null&&(originalCount=diagnostics.Count,Kusto.Language.Syntax.SyntaxElement.GatherDiagnostics(calledBody,diagnostics,include,cancellationToken),diagnostics.Count>originalCount&&(firstError=System.Linq.Enumerable.from(diagnostics,Kusto.Language.Diagnostic).skip(originalCount).firstOrDefault(function(d){return Bridge.referenceEquals(d.Severity,Kusto.Language.DiagnosticSeverity.Error)},null),Kusto.Language.Utils.ListExtensions.SetCount(Kusto.Language.Diagnostic,diagnostics,originalCount),firstError!=null))){var name=($t=($t1=expr.ReferencedSymbol)!=null?$t1.Name:null,$t!=null?$t:"<unknown>"),fc,location=(fc=Bridge.as(expr,Kusto.Language.Syntax.FunctionCallExpression))!=null?fc.Name:expr,dx=Kusto.Language.DiagnosticFacts.GetErrorInExpansion(name,firstError.Message).WithLocation(location);diagnostics.add(dx)}if(includeSemantic&&(node=Bridge.as(element,Kusto.Language.Syntax.SyntaxNode))!=null&&node.Alternates!=null){tmpDiagnostics=Kusto.Language.Syntax.SyntaxElement._diagnosticListPool.AllocateFromPool();try{$t2=Bridge.getEnumerator(node.Alternates,Kusto.Language.Syntax.SyntaxNode);try{while($t2.moveNext())alternate={v:$t2.Current},tmpDiagnostics.clear(),Kusto.Language.Syntax.SyntaxElement.GatherDiagnostics(alternate.v,tmpDiagnostics,include,cancellationToken),diagnostics.AddRange(System.Linq.Enumerable.from(tmpDiagnostics,Kusto.Language.Diagnostic).where(function(d){return d.HasLocation}).select(function($me,alternate){return function(d){return d.WithLocation$1(alternate.v.GetPositionInOriginalTree(d.Start),d.Length)}}(this,alternate)))}finally{Bridge.is($t2,System.IDisposable)&&$t2.System$IDisposable$Dispose()}}finally{Kusto.Language.Syntax.SyntaxElement._diagnosticListPool.ReturnToPool(tmpDiagnostics)}}},fnDescend)},SetLocation:function(d,element){var token,next;switch(d.LocationKind){case Kusto.Language.DiagnosticLocationKind.Relative:return element.Width===0&&(token=Bridge.as(element,Kusto.Language.Syntax.SyntaxToken))!=null&&(next=token.GetNextToken(),next!=null&&(next.TextStart-token.End|0)<2&&!Kusto.Language.Parsing.TextFacts.HasLineBreaks(next.Trivia)&&(element=next)),d.WithLocation(element);case Kusto.Language.DiagnosticLocationKind.RelativeEnd:return d.WithLocation$1(element.End,0);default:return d}}}},fields:{_parentOrTree:null,flags:0,extendedData:null,_triviaStart:0},props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.None}},DebugText:{get:function(){return this.ToString$1(Kusto.Language.Syntax.IncludeTrivia.Minimal,100)}},ContainsSyntaxDiagnostics:{get:function(){return Bridge.Int.sxs(this.flags&Kusto.Language.Syntax.SyntaxElement.Flags.ContainsDiagnostics&65535)!==0}},HasSyntaxDiagnostics:{get:function(){return this.ContainsSyntaxDiagnostics&&System.Array.getCount(this.SyntaxDiagnostics,Kusto.Language.Diagnostic)>0}},SyntaxDiagnostics:{get:function(){var $t;return(($t=this.GetExtendedData(!1))!=null?$t.SyntaxDiagnostics:null)||Kusto.Language.Diagnostic.NoDiagnostics}},IsToken:{get:function(){return!1}},IsMissing:{get:function(){return this.Width===0&&this.ContainsSyntaxDiagnostics}},Parent:{get:function(){return Bridge.as(this._parentOrTree,Kusto.Language.Syntax.SyntaxNode)}},Root:{get:function(){for(var element=this,parent=element.Parent;parent!=null;)element=parent,parent=element.Parent;return element}},Tree:{get:function(){for(var element=this,tree;element._parentOrTree!=null;){if((tree=Bridge.as(element._parentOrTree,Kusto.Language.Syntax.SyntaxTree))!=null)return tree;element=Bridge.as(element._parentOrTree,Kusto.Language.Syntax.SyntaxNode)}return null}},IndexInParent:0,ChildCount:{get:function(){return 0}},Depth:{get:function(){for(var depth=0,element=this;element.Parent!=null;element=element.Parent)depth=depth+1|0;return depth}},NameInParent:{get:function(){return this.Parent!=null?this.Parent.GetName(this.Parent.GetChildIndex(this)):""}},TriviaStart:{get:function(){return this._triviaStart>=0?this._triviaStart:this.ComputeTriviaStart()}},FullWidth:{get:function(){return 0}},TriviaWidth:{get:function(){var $t,$t1;return $t=($t1=this.GetFirstToken())!=null?$t1.TriviaWidth:null,$t!=null?$t:0}},TextStart:{get:function(){return this.TriviaStart+this.TriviaWidth|0}},End:{get:function(){return this.TriviaStart+this.FullWidth|0}},Width:{get:function(){return this.FullWidth-this.TriviaWidth|0}},OffsetInParent:0},ctors:{init:function(){this._triviaStart=-1},ctor:function(diagnostics){this.$initialize();this.SetDiagnostics(diagnostics)}},methods:{Init:function(){for(var child,offset=0,i=0,n=this.ChildCount;i<n;i=i+1|0)child=this.GetChild(i),child!=null&&(child.OffsetInParent=offset,child.IndexInParent=i,offset=offset+child.FullWidth|0)},Attach:function(TElement,element,optional){if(optional===void 0&&(optional=!1),element!=null){if(element._parentOrTree!=null)throw new System.InvalidOperationException.$ctor1("The syntax element already has a parent.");element._parentOrTree=Bridge.cast(this,Kusto.Language.Syntax.SyntaxNode);this.flags|=Bridge.Int.sxs(element.flags&65535)}else if(!optional)throw new System.ArgumentNullException.$ctor1("The element is not optional");return element},SetTree:function(tree){if(this._parentOrTree!=null){if(Bridge.is(this._parentOrTree,Kusto.Language.Syntax.SyntaxTree))throw new System.InvalidOperationException.$ctor1("Cannot assign tree. This node already has a syntax tree.");throw new System.InvalidOperationException.$ctor1("Cannot assign tree. This node is not the root element.");}else this._parentOrTree=tree},GetContainedSyntaxDiagnostics:function(){if(this.ContainsSyntaxDiagnostics){var diagnostics=new(System.Collections.Generic.List$1(Kusto.Language.Diagnostic).ctor);return Kusto.Language.Syntax.SyntaxElement.GatherDiagnostics(this,diagnostics,Kusto.Language.Syntax.DiagnosticsInclude.Syntactic),diagnostics.AsReadOnly()}else return Kusto.Language.Diagnostic.NoDiagnostics},SetDiagnostics:function(diagnostics){diagnostics!=null&&System.Array.getCount(diagnostics,Kusto.Language.Diagnostic)>0&&(this.GetExtendedData(!0).SyntaxDiagnostics=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Diagnostic,diagnostics),this.flags|=Bridge.Int.sxs(Kusto.Language.Syntax.SyntaxElement.Flags.ContainsDiagnostics&65535))},WithDiagnostics:function(diagnostics){var $t,clone=this.Clone();return clone.SetDiagnostics(($t=Kusto.Language.Diagnostic,System.Linq.Enumerable.from(diagnostics,$t).toList($t)).AsReadOnly()),clone},WithAdditionalDiagnostics$1:function(diagnostics){return this.WithDiagnostics(System.Linq.Enumerable.from(this.SyntaxDiagnostics,Kusto.Language.Diagnostic).concat(diagnostics))},WithAdditionalDiagnostics:function(diagnostics){return diagnostics===void 0&&(diagnostics=[]),this.WithDiagnostics(System.Linq.Enumerable.from(this.SyntaxDiagnostics,Kusto.Language.Diagnostic).concat(diagnostics))},GetExtendedData:function(create){var data=this.extendedData,tmp;return data==null&&create&&(tmp=new Kusto.Language.Syntax.SyntaxElement.ExtendedData,Kusto.Language.Utils.Interlocked.CompareExchange(Kusto.Language.Syntax.SyntaxElement.ExtendedData,Bridge.ref(this,"extendedData"),tmp,null),data=this.extendedData),data},GetChild:function(index){return function(){throw new System.IndexOutOfRangeException.ctor;}()},IsOptional:function(index){return!1},GetName:function(index){return""},GetCompletionHint:function(index){return this.GetCompletionHintCore(index)},GetCompletionHintCore:function(index){return Kusto.Language.Editor.CompletionHint.Inherit},HasMissingChildren:function(){var n,child;if(this.ContainsSyntaxDiagnostics)for(n=this.ChildCount-1|0;n>=0;n=n-1|0)if(child=this.GetChild(n),child!=null&&(child.IsMissing||child.HasMissingChildren()))return!0;return!1},GetChildIndex:function(child){return Bridge.referenceEquals(child.Parent,this)?child.IndexInParent:-1},GetDescendantIndex:function(descendant){if(descendant==null)return-1;if(!Bridge.referenceEquals(descendant.Parent,this))for(var d=this.Depth,dd=descendant.Depth;dd>(d+1|0);)descendant=descendant.Parent,dd=dd-1|0;return Bridge.referenceEquals(descendant.Parent,this)?descendant.IndexInParent:-1},IsAncestorOf:function(element){while(element!=null){if(Bridge.referenceEquals(element.Parent,this))return!0;element=element.Parent}return!1},GetFirstAncestor:function(TElement,predicate){var elem,e;for(predicate===void 0&&(predicate=null),elem=this.Parent;elem!=null;elem=elem.Parent)if((e=Bridge.as(elem,TElement))!=null&&(Bridge.staticEquals(predicate,null)||predicate(e)))return e;return null},GetFirstAncestorOrSelf:function(TElement,predicate){var elem,e;for(predicate===void 0&&(predicate=null),elem=this;elem!=null;elem=elem.Parent)if((e=Bridge.as(elem,TElement))!=null&&(Bridge.staticEquals(predicate,null)||predicate(e)))return e;return null},GetAncestors:function(TElement,predicate){var list,elem,e;for(predicate===void 0&&(predicate=null),list=null,elem=this.Parent;elem!=null;elem=elem.Parent)(e=Bridge.as(elem,TElement))!=null&&(Bridge.staticEquals(predicate,null)||predicate(e))&&(list==null&&(list=new(System.Collections.Generic.List$1(TElement).ctor)),list.add(e));return list!=null?Kusto.Language.Utils.ListExtensions.ToReadOnly(TElement,list):Kusto.Language.Utils.EmptyReadOnlyList$1(TElement).Instance},GetAncestorsOrSelf:function(TElement,predicate){var list,elem,e;for(predicate===void 0&&(predicate=null),list=null,elem=this;elem!=null;elem=elem.Parent)(e=Bridge.as(elem,TElement))!=null&&(Bridge.staticEquals(predicate,null)||predicate(e))&&(list==null&&(list=new(System.Collections.Generic.List$1(TElement).ctor)),list.add(e));return list!=null?Kusto.Language.Utils.ListExtensions.ToReadOnly(TElement,list):Kusto.Language.Utils.EmptyReadOnlyList$1(TElement).Instance},GetFirstDescendant:function(TElement,predicate){return predicate===void 0&&(predicate=null),Kusto.Language.Syntax.SyntaxElement.GetFirstDescendant(TElement,this,predicate,!1)},GetFirstDescendantOrSelf:function(TElement,predicate){return predicate===void 0&&(predicate=null),Kusto.Language.Syntax.SyntaxElement.GetFirstDescendant(TElement,this,predicate,!0)},GetDescendants:function(TElement,predicate){return predicate===void 0&&(predicate=null),Kusto.Language.Syntax.SyntaxElement.GetDescendants(TElement,this,predicate,!1)},GetDescendantsOrSelf:function(TElement,predicate){return predicate===void 0&&(predicate=null),Kusto.Language.Syntax.SyntaxElement.GetDescendants(TElement,this,predicate,!0)},GetTokens:function(includeZeroWidthTokens){includeZeroWidthTokens===void 0&&(includeZeroWidthTokens=!1);for(var tokens=new(System.Collections.Generic.List$1(Kusto.Language.Syntax.SyntaxToken).ctor),token=null;(token=Kusto.Language.Syntax.SyntaxElement.GetNextToken(this,token,includeZeroWidthTokens))!=null;)tokens.add(token);return Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Syntax.SyntaxToken,tokens)},WalkTokens:function(action){this.WalkTokens$1(this.TriviaStart,this.End,action)},WalkTokens$1:function(start,end,action){if(start=Math.max(start,this.TriviaStart),end=Math.min(end,this.End),start<end)for(var token=this.GetTokenAt(start);token!=null&&token.TriviaStart<end;token=Kusto.Language.Syntax.SyntaxElement.GetNextToken(this,token,!1))action(token)},WalkElements:function(action){Kusto.Language.Syntax.SyntaxElement.WalkElements(this,action)},GetNextSibling:function(includeZeroWidthElements){var i,n,sibling;if(includeZeroWidthElements===void 0&&(includeZeroWidthElements=!1),this.Parent!=null)for(i=this.IndexInParent+1|0,n=this.Parent.ChildCount;i<n&&i>=0;i=i+1|0)if(sibling=this.Parent.GetChild(i),sibling!=null&&(includeZeroWidthElements||sibling.FullWidth>0))return sibling;return null},GetPreviousSibling:function(includeZeroWidthElements){var i,sibling;if(includeZeroWidthElements===void 0&&(includeZeroWidthElements=!1),this.Parent!=null)for(i=this.IndexInParent-1|0;i>=0;i=i-1|0)if(sibling=this.Parent.GetChild(i),sibling!=null&&(includeZeroWidthElements||sibling.FullWidth>0))return sibling;return null},GetFirstToken:function(includeZeroWidthTokens){return includeZeroWidthTokens===void 0&&(includeZeroWidthTokens=!1),Kusto.Language.Syntax.SyntaxElement.GetNextToken(this,null,includeZeroWidthTokens)},GetLastToken:function(includeZeroWidthTokens){return includeZeroWidthTokens===void 0&&(includeZeroWidthTokens=!1),Kusto.Language.Syntax.SyntaxElement.GetPreviousToken(this,null,includeZeroWidthTokens)},GetTokenAt:function(position){var $step=0,$jumpFromFinally,element,i,n,child,$asyncBody=Bridge.fn.bind(this,function(){for(;;){$step=System.Array.min([0,1,2,3,4,5,6,9,11],$step);switch($step){case 0:if(element=this,this.IsToken){if(this.TriviaStart<=position&&position<this.End)return Bridge.cast(this,Kusto.Language.Syntax.SyntaxToken)}else element=this.Root;if(position>=element.FullWidth)return element.GetLastToken(!0);case 1:if(element!=null&&element.ChildCount>0){$step=2;continue}$step=11;continue;case 2:i=0;n=element.ChildCount;$step=3;continue;case 3:if(i<n){$step=4;continue}$step=10;continue;case 4:if(child=element.GetChild(i),child!=null){$step=5;continue}$step=8;continue;case 5:if(child.TriviaStart<=position&&position<child.End){$step=6;continue}$step=7;continue;case 6:if(child.IsToken)return Bridge.cast(child,Kusto.Language.Syntax.SyntaxToken);element=child;$step=1;continue;case 9:i=i+1|0;$step=3;continue;case 11:return null;default:return}}},arguments);return $asyncBody()},GetNodeAt:function(position,length){for(var token=this.GetTokenAt(position),parent=token.Parent;parent!=null&&(parent.End<(position+length|0)||!Bridge.hasValue(parent));)parent=parent.Parent;return parent},InitializeTriviaStarts:function(){Kusto.Language.Syntax.SyntaxElement.WalkElements(this.Root,function(element){var $t,$t1;element._triviaStart=($t=($t1=element.Parent)!=null?$t1._triviaStart:null,$t!=null?$t:0)+element.OffsetInParent|0},void 0,void 0)},ComputeTriviaStart:function(){var totalOffset,node;if(this.Parent==null)return 0;else if(this.Parent.Parent==null)return this.OffsetInParent;else{for(totalOffset=0,node=this;node!=null;node=node.Parent)totalOffset=totalOffset+node.OffsetInParent|0;return totalOffset}},ComputeFullWidth:function(){for(var child,width=0,i=0,n=this.ChildCount;i<n;i=i+1|0)child=this.GetChild(i),child!=null&&(width=width+child.FullWidth|0);return width},Clone:function(includeDiagnostics){return includeDiagnostics===void 0&&(includeDiagnostics=!0),this.CloneCore(includeDiagnostics)},toString:function(){return this.ToString(Kusto.Language.Syntax.IncludeTrivia.All)},ToString:function(includeTrivia){return this.ToString$1(includeTrivia,2147483647)},ToString$1:function(includeTrivia,maxLength){var builder=new System.Text.StringBuilder,start=this.TriviaStart;return this.WalkTokens(function(token){builder.getLength()<maxLength&&token.Write(builder,includeTrivia,start)}),builder.getLength()>maxLength&&builder.setLength(maxLength),builder.toString()},GetContainedDiagnostics:function(include,cancellationToken){include===void 0&&(include=3);cancellationToken===void 0&&(cancellationToken=new Kusto.Language.Utils.CancellationToken);var list=new(System.Collections.Generic.List$1(Kusto.Language.Diagnostic).ctor);return Kusto.Language.Syntax.SyntaxElement.GatherDiagnostics(this,list,include,cancellationToken),Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Diagnostic,System.Linq.Enumerable.from(list,Kusto.Language.Diagnostic).distinct())}}});Bridge.define("Kusto.Language.Syntax.CustomElementDescriptor",{statics:{fields:{Default:null},ctors:{init:function(){this.Default=new Kusto.Language.Syntax.CustomElementDescriptor.$ctor1("",Kusto.Language.Editor.CompletionHint.Syntax,!1)}},methods:{From$2:function(name,hint,isOptional){return hint===void 0&&(hint=524288),isOptional===void 0&&(isOptional=!1),System.String.isNullOrEmpty(name)&&hint===Kusto.Language.Editor.CompletionHint.Syntax&&!isOptional?Kusto.Language.Syntax.CustomElementDescriptor.Default:new Kusto.Language.Syntax.CustomElementDescriptor.$ctor1(name,hint,isOptional)},From:function(hint,isOptional){return isOptional===void 0&&(isOptional=!1),Kusto.Language.Syntax.CustomElementDescriptor.From$2(null,hint,isOptional)},From$1:function(isOptional){return Kusto.Language.Syntax.CustomElementDescriptor.From$2(null,Kusto.Language.Editor.CompletionHint.Syntax,isOptional)}}},props:{Name:null,IsOptional:!1,CompletionHint:0,IsDefault:{get:function(){return Bridge.referenceEquals(this,Kusto.Language.Syntax.CustomElementDescriptor.Default)||System.String.isNullOrEmpty(this.Name)&&this.CompletionHint===Kusto.Language.Editor.CompletionHint.Syntax&&this.IsOptional===!1}}},ctors:{$ctor1:function(name,hint,isOptional){isOptional===void 0&&(isOptional=!1);var $t;this.$initialize();this.Name=($t=name,$t!=null?$t:"");this.IsOptional=isOptional;this.CompletionHint=hint},ctor:function(hint,isOptional){isOptional===void 0&&(isOptional=!1);Kusto.Language.Syntax.CustomElementDescriptor.$ctor1.call(this,"",hint,isOptional)}},methods:{WithName:function(name){return Bridge.referenceEquals(this.Name,name)?this:new Kusto.Language.Syntax.CustomElementDescriptor.$ctor1(name,this.CompletionHint,this.IsOptional)},WithHint:function(hint){return this.CompletionHint===hint?this:new Kusto.Language.Syntax.CustomElementDescriptor.$ctor1(this.Name,hint,this.IsOptional)},WithIsOptional:function(isOptional){return this.IsOptional===isOptional?this:new Kusto.Language.Syntax.CustomElementDescriptor.$ctor1(this.Name,this.CompletionHint,this.IsOptional)}}});Bridge.define("Kusto.Language.Syntax.DiagnosticsInclude",{$kind:"enum",statics:{fields:{Syntactic:1,Semantic:2,Expansion:4}},$flags:!0});Bridge.define("Kusto.Language.Syntax.FakeExpression",{statics:{methods:{Create:function(type){var ex=new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.TokenLiteralExpression,Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken));return Kusto.Language.Binding.Binder.DefaultSetSemanticInfo(ex,new Kusto.Language.Binding.SemanticInfo.$ctor5(type)),ex},CreateNamed:function(name,type){var named=new Kusto.Language.Syntax.SimpleNamedExpression(new Kusto.Language.Syntax.NameDeclaration.ctor(new Kusto.Language.Syntax.TokenName(Kusto.Language.Syntax.SyntaxToken.Identifier("",name))),Kusto.Language.Syntax.SyntaxToken.Punctuation("",Kusto.Language.Syntax.SyntaxKind.EqualToken),Kusto.Language.Syntax.FakeExpression.Create(type));return Kusto.Language.Binding.Binder.DefaultSetSemanticInfo(named,new Kusto.Language.Binding.SemanticInfo.$ctor5(type)),named}}}});Bridge.define("Kusto.Language.Syntax.IncludeTrivia",{$kind:"enum",statics:{fields:{All:0,Interior:1,Minimal:2,SingleLine:3}}});Bridge.define("Kusto.Language.Syntax.SyntaxCategory",{$kind:"enum",statics:{fields:{None:0,Keyword:1,Identifier:2,Punctuation:3,Operator:4,Literal:5,List:6,Node:7,Other:8}}});Bridge.define("Kusto.Language.Syntax.SyntaxElement.ExtendedData",{$kind:"nested class",fields:{SyntaxDiagnostics:null,SemanticInfo:null}});Bridge.define("Kusto.Language.Syntax.SyntaxElement.Flags",{$kind:"nested enum",statics:{fields:{ContainsDiagnostics:1}},$flags:!0,$utype:System.Int16});Bridge.define("Kusto.Language.Syntax.SyntaxExtensions",{statics:{methods:{GetParameter:function(list,parameter){return System.Linq.Enumerable.from(list,Kusto.Language.Syntax.NamedParameter).firstOrDefault(function(np){return Bridge.referenceEquals(np.Name.SimpleName,parameter.Name)||System.Array.getCount(parameter.Aliases,System.String)>0&&System.Linq.Enumerable.from(parameter.Aliases,System.String).contains(np.Name.SimpleName)},null)},GetParameterLiteralValue:function(TValue,list,declaration,defaultValue){defaultValue===void 0&&(defaultValue=Bridge.getDefaultValue(TValue));var parameter,lit,value;return(parameter=Kusto.Language.Syntax.SyntaxExtensions.GetParameter(list,declaration))!=null&&(lit=Bridge.as(parameter.Expression,Kusto.Language.Syntax.LiteralExpression))!=null&&(value=Bridge.as(lit.ConstantValue,TValue))!=null?value:defaultValue},GetParameterNameValue:function(list,declaration){var $t,$t1,$t2,parameter,nd,nr,le,cs;if((parameter=Kusto.Language.Syntax.SyntaxExtensions.GetParameter(list,declaration))!=null)do{if($t=parameter.Expression,Bridge.is($t,Kusto.Language.Syntax.NameDeclaration))return nd=Bridge.cast($t,Kusto.Language.Syntax.NameDeclaration),nd.Name.SimpleName;if(Bridge.is($t,Kusto.Language.Syntax.NameReference))return nr=Bridge.cast($t,Kusto.Language.Syntax.NameReference),nr.Name.SimpleName;if(Bridge.is($t,Kusto.Language.Syntax.LiteralExpression)){if(le=Bridge.cast($t,Kusto.Language.Syntax.LiteralExpression),le.Kind===Kusto.Language.Syntax.SyntaxKind.StringLiteralExpression||le.Kind===Kusto.Language.Syntax.SyntaxKind.TokenLiteralExpression)return($t1=le.LiteralValueInfo)!=null?$t1.ValueText:null;break}if(Bridge.is($t,Kusto.Language.Syntax.CompoundStringLiteralExpression))return cs=Bridge.cast($t,Kusto.Language.Syntax.CompoundStringLiteralExpression),($t2=cs.LiteralValueInfo)!=null?$t2.ValueText:null}while(0);return null}}}});Bridge.define("Kusto.Language.Syntax.SyntaxFacts",{statics:{fields:{kindToDataMap:null,textToKindMap:null},props:{Keywords:{get:function(){return System.Linq.Enumerable.from(Kusto.Language.Syntax.SyntaxFacts.GetKinds(Kusto.Language.Syntax.SyntaxCategory.Keyword),Kusto.Language.Syntax.SyntaxKind).select(Kusto.Language.Syntax.SyntaxFacts.GetText)}},Punctuation:{get:function(){return System.Linq.Enumerable.from(Kusto.Language.Syntax.SyntaxFacts.GetKinds(Kusto.Language.Syntax.SyntaxCategory.Punctuation),Kusto.Language.Syntax.SyntaxKind).select(Kusto.Language.Syntax.SyntaxFacts.GetText)}},Operators:{get:function(){return System.Linq.Enumerable.from(Kusto.Language.Syntax.SyntaxFacts.GetKinds(Kusto.Language.Syntax.SyntaxCategory.Operator),Kusto.Language.Syntax.SyntaxKind).select(Kusto.Language.Syntax.SyntaxFacts.GetText)}}},ctors:{ctor:function(){var data=function(_o1){return _o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.None,"",Kusto.Language.Syntax.SyntaxCategory.None)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.__CrossClusterKeyword,"__crossCluster")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.__CrossDBKeyword,"__crossDB")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.__IdKeyword,"__id")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.__IsFuzzyKeyword,"__isFuzzy")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.__NoWithSourceKeyword,"__noWithSource")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.__PackedColumnKeyword,"__packedColumn")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.__SourceColumnIndexKeyword,"__sourceColumnIndex")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind._3DChartKeyword,"3Dchart")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.AccessKeyword,"access",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.AccumulateKeyword,"accumulate")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.AliasKeyword,"alias",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.AndKeyword,"and",1,Kusto.Language.Symbols.OperatorKind.And,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.AnomalyChartKeyword,"anomalychart")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.AreaChartKeyword,"areachart")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.AsKeyword,"as")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.AscKeyword,"asc")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.AssertSchemaKeyword,"assert-schema")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.BagExpansionKeyword,"bagexpansion")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.BarChartKeyword,"barchart")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.BetweenKeyword,"between",1,Kusto.Language.Symbols.OperatorKind.Between,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.BinKeyword,"bin",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.BinLegacy,"bin_legacy")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ByKeyword,"by")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CachingPolicyKeyword,"cachingpolicy")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CalloutKeyword,"callout")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CancelKeyword,"cancel")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CardKeyword,"card")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ColumnChartKeyword,"columnchart")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CommandsAndQueriesKeyword,"commands-and-queries")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ConsumeKeyword,"consume",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ContainsKeyword,"contains",1,Kusto.Language.Symbols.OperatorKind.Contains,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ContainsCsKeyword,"containscs",1,Kusto.Language.Symbols.OperatorKind.ContainsCs,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.Contains_CsKeyword,"contains_cs",1,Kusto.Language.Symbols.OperatorKind.ContainsCs,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ContextualDataTableKeyword,"__contextual_datatable")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CountKeyword,"count",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CyclesKeyword,"cycles")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DatabaseKeyword,"database",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DataExportKeyword,"dataexport")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DataScopeKeyword,"datascope")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DataTableKeyword,"datatable")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DeclareKeyword,"declare",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DecodeBlocksKeyword,"decodeblocks")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DefaultKeyword,"default",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DescKeyword,"desc")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DistinctKeyword,"distinct",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.GraphEdgesKeyword,"edges",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.EarliestKeyword,"earliest")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.EndsWithKeyword,"endswith",1,Kusto.Language.Symbols.OperatorKind.EndsWith,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.EndsWithCsKeyword,"endswith_cs",1,Kusto.Language.Symbols.OperatorKind.EndsWithCs,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.EncodingPolicyKeyword,"encodingpolicy")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.EntityGroupKeyword,"entity_group")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.EvaluateKeyword,"evaluate",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ExecuteAndCacheKeyword,"__executeAndCache")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ExpandOutputKeyword,"expandoutput")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ExtendKeyword,"extend",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ExtentTagsRetentionKeyword,"extent_tags_retention")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ExternalDataKeyword,"externaldata")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.External_DataKeyword,"external_data")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.FacetKeyword,"facet",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.FilterKeyword,"filter",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.FindKeyword,"find")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.FirstKeyword,"first")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.FlagsKeyword,"flags")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ForkKeyword,"fork",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.FromKeyword,"from",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.GetSchemaKeyword,"getschema",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.GrannyAscKeyword,"granny-asc")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.GrannyDescKeyword,"granny-desc")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.GraphMatchKeyword,"graph-match")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.GraphMergeKeyword,"graph-merge")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.GraphToTableKeyword,"graph-to-table")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HardDeleteKeyword,"harddelete")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HardRetentionKeyword,"hardretention")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HasAnyKeyword,"has_any",1,Kusto.Language.Symbols.OperatorKind.HasAny,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HasAllKeyword,"has_all",1,Kusto.Language.Symbols.OperatorKind.HasAll,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HasKeyword,"has",1,Kusto.Language.Symbols.OperatorKind.Has,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HasCsKeyword,"has_cs",1,Kusto.Language.Symbols.OperatorKind.HasCs,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HasPrefixKeyword,"hasprefix",1,Kusto.Language.Symbols.OperatorKind.HasPrefix,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HasPrefixCsKeyword,"hasprefix_cs",1,Kusto.Language.Symbols.OperatorKind.HasPrefixCs,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HasSuffixKeyword,"hassuffix",1,Kusto.Language.Symbols.OperatorKind.HasSuffix,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HasSuffixCsKeyword,"hassuffix_cs",1,Kusto.Language.Symbols.OperatorKind.HasSuffixCs,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HintDotConcurrencyKeyword,"hint.concurrency")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HintDotDistributionKeyword,"hint.distribution")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HintDotMaterializedKeyword,"hint.materialized")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HintDotNumPartitions,"hint.num_partitions")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HintDotProgressiveTopKeyword,"hint.progressive_top")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HintDotShuffleKeyKeyword,"hint.shufflekey")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HintDotSpreadKeyword,"hint.spread")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HintDotRemoteKeyword,"hint.remote")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HintDotStrategyKeyword,"hint.strategy")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HotCacheKeyword,"hotcache")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.IdKeyword,"id",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.InKeyword,"in",1,Kusto.Language.Symbols.OperatorKind.In,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.InCsKeyword,"in~",1,Kusto.Language.Symbols.OperatorKind.InCs,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.InvokeKeyword,"invoke")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.IsFuzzyKeyword,"isfuzzy")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.BestEffortKeyword,"best_effort",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ForceRemoteKeyword,"force_remote")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.JoinKeyword,"join",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.JournalKeyword,"journal")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.KindKeyword,"kind")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.LadderChartKeyword,"ladderchart")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.LastKeyword,"last")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.LatestKeyword,"latest")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.LetKeyword,"let",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.LikeKeyword,"like",1,Kusto.Language.Symbols.OperatorKind.Like,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.LikeCsKeyword,"likecs",1,Kusto.Language.Symbols.OperatorKind.LikeCs,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.LimitKeyword,"limit",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.LineChartKeyword,"linechart")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.LookupKeyword,"lookup",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MacroExpandKeyword,"macro-expand")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MakeGraphKeyword,"make-graph")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.GraphMarkComponentsKeyword,"graph-mark-components")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MakeSeriesKeyword,"make-series")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MatchesRegexKeyword,"matches regex",1,Kusto.Language.Symbols.OperatorKind.MatchRegex,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MaterializeKeyword,"materialize")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MaterializedViewCombineKeyword,"materialized-view-combine")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MaterializedViewsKeyword,"materialized-views")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MdmKeyword,"mdm")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MissingKeyword,"missing")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MvDashApplyKeyword,"mv-apply")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MvApplyKeyword,"mvapply",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MvDashExpandKeyword,"mv-expand")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MvExpandKeyword,"mvexpand",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NodesKeyword,"nodes",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NoOptimizationKeyword,"nooptimization")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotBetweenKeyword,"!between",1,Kusto.Language.Symbols.OperatorKind.NotBetween,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotContainsKeyword,"notcontains",1,Kusto.Language.Symbols.OperatorKind.NotContains,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotContainsCsKeyword,"notcontainscs",1,Kusto.Language.Symbols.OperatorKind.NotContainsCs,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotBangContainsKeyword,"!contains",1,Kusto.Language.Symbols.OperatorKind.NotContains,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotBangContainsCsKeyword,"!contains_cs",1,Kusto.Language.Symbols.OperatorKind.NotContainsCs,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotEndsWithKeyword,"!endswith",1,Kusto.Language.Symbols.OperatorKind.NotEndsWith,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotEndsWithCsKeyword,"!endswith_cs",1,Kusto.Language.Symbols.OperatorKind.NotEndsWithCs,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotHasKeyword,"!has",1,Kusto.Language.Symbols.OperatorKind.NotHas,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotHasCsKeyword,"!has_cs",1,Kusto.Language.Symbols.OperatorKind.NotHasCs,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotHasPrefixKeyword,"!hasprefix",1,Kusto.Language.Symbols.OperatorKind.NotHasPrefix,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotHasPrefixCsKeyword,"!hasprefix_cs",1,Kusto.Language.Symbols.OperatorKind.NotHasPrefixCs,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotHasSuffixKeyword,"!hassuffix",1,Kusto.Language.Symbols.OperatorKind.NotHasSuffix,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotHasSuffixCsKeyword,"!hassuffix_cs",1,Kusto.Language.Symbols.OperatorKind.NotHasSuffixCs,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotInKeyword,"!in",1,Kusto.Language.Symbols.OperatorKind.NotIn,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotInCsKeyword,"!in~",1,Kusto.Language.Symbols.OperatorKind.NotInCs,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotLikeKeyword,"notlike",1,Kusto.Language.Symbols.OperatorKind.NotLike,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotLikeCsKeyword,"notlikecs",1,Kusto.Language.Symbols.OperatorKind.NotLikeCs,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotStartsWithKeyword,"!startswith",1,Kusto.Language.Symbols.OperatorKind.NotStartsWith,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotStartsWithCsKeyword,"!startswith_cs",1,Kusto.Language.Symbols.OperatorKind.NotStartsWithCs,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NullKeyword,"null",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NullsKeyword,"nulls",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.OfKeyword,"of")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.OnKeyword,"on",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.OptionalKeyword,"optional",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.OrKeyword,"or",1,Kusto.Language.Symbols.OperatorKind.Or,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.OrderKeyword,"order",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.OthersKeyword,"others")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.OutputKeyword,"output",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PackKeyword,"pack",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ParseKeyword,"parse",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ParseWhereKeyword,"parse-where")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ParseKvKeyword,"parse-kv")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PartitionedByKeyword,"partitioned-by")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PartitionByKeyword,"__partitionby",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PartitionKeyword,"partition",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PathFormatKeyword,"pathformat")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PatternKeyword,"pattern",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PieChartKeyword,"piechart")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PivotChartKeyword,"pivotchart")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PlotlyKeyword,"plotly",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.GraphKeyword,"graph",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PrintKeyword,"print")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ProjectKeyword,"project")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ProjectAwayKeyword,"project-away")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind._ProjectAwayKeyword,"__projectAway")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ProjectKeepKeyword,"project-keep")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ProjectRenameKeyword,"project-rename")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ProjectReorderKeyword,"project-reorder")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ProjectSmartKeyword,"project-smart")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.QueriesKeyword,"queries")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.QueryParametersKeyword,"query_parameters",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.QueryResultsKeyword,"query_results")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.RangeKeyword,"range",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ReduceKeyword,"reduce",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.RegexKeyword,"regex",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.RelaxedKeyword,"relaxed")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.RenderKeyword,"render",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.RestrictedViewAccessKeyword,"restricted_view_access")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.RestrictKeyword,"restrict",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.RowLevelSecurityKeyword,"row_level_security")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.RowstoreKeyword,"rowstore")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.RowstoreReferencesKeyword,"rowstore_references")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.RowstoreSealInfoKeyword,"rowstore_sealinfo")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.RowstorePolicyKeyword,"rowstorepolicy")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.RowstoresKeyword,"rowstores")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SampleKeyword,"sample")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SampleDistinctKeyword,"sample-distinct")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ScanKeyword,"scan",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ScatterChartKeyword,"scatterchart")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SealKeyword,"seal")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SealsKeyword,"seals")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SearchKeyword,"search")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SerializeKeyword,"serialize",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SetKeyword,"set")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SetOrAppendKeyword,"set-or-append")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SetOrReplaceKeyword,"set-or-replace")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ShardsKeyword,"shards")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SimpleKeyword,"simple")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SoftDeleteKeyword,"softdelete")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SoftRetentionKeyword,"softretention")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SortKeyword,"sort",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SqlKeyword,"sql")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.StackedAreaChartKeyword,"stackedareachart")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.StartsWithKeyword,"startswith",1,Kusto.Language.Symbols.OperatorKind.StartsWith,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.StartsWithCsKeyword,"startswith_cs",1,Kusto.Language.Symbols.OperatorKind.StartsWithCs,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.StatisticsKeyword,"statistics")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.StepKeyword,"step",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.StoredQueryResultContainersKeyword,"storedqueryresultcontainers")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SummarizeKeyword,"summarize",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TablePurgeKeyword,"tablepurge")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TakeKeyword,"take",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TimeChartKeyword,"timechart")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TimelineKeyword,"timeline")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TimePivotKeyword,"timepivot")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TitleKeyword,"title")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ToKeyword,"to")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TopKeyword,"top",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TopHittersKeyword,"top-hitters")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TopNestedKeyword,"top-nested")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ToScalarKeyword,"toscalar")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ToTableKeyword,"totable")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TreeMapKeyword,"treemap")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TypeOfKeyword,"typeof",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.UnionKeyword,"union")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.UnrestrictedViewersKeyword,"unrestrictedviewers")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.VerboseKeyword,"verbose")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ViewKeyword,"view",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ViewersKeyword,"viewers")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ViewsKeyword,"views")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.WhereKeyword,"where")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.WithKeyword,"with",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.WithItemIndexKeyword,"with_itemindex")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.WithMatchIdKeyword,"with_match_id")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.With_SourceKeyword,"with_source")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.WithStepNameKeyword,"with_step_name")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.WithNodeIdKeyword,"with_node_id",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.WithSourceKeyword,"withsource")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.WriteAheadLogKeyword,"writeaheadlog")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.BoolKeyword,"bool",1,0,!0,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.BooleanKeyword,"boolean",1,0,!1,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ByteKeyword,"byte",1,0,!1,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CharKeyword,"char",1,0,!1,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DateKeyword,"date",1,0,!1,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DateTimeKeyword,"datetime",1,0,!1,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DoubleKeyword,"double",1,0,!1,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DynamicKeyword,"dynamic",1,0,!1,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.FloatKeyword,"float",1,0,!1,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.GuidKeyword,"guid",1,0,!0,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.IntKeyword,"int",1,0,!1,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.Int16Keyword,"int16",1,0,!1,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.Int32Keyword,"int32",1,0,!1,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.Int64Keyword,"int64",1,0,!1,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.Int8Keyword,"int8",1,0,!1,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.LongKeyword,"long",1,0,!1,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.RealKeyword,"real",1,0,!1,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DecimalKeyword,"decimal",1,0,!1,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.StringKeyword,"string",1,0,!1,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TimeKeyword,"time",1,0,!1,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TimespanKeyword,"timespan",1,0,!1,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.UIntKeyword,"uint",1,0,!1,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.UInt16Keyword,"uint16",1,0,!1,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.UInt32Keyword,"uint32",1,0,!1,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.UInt64Keyword,"uint64",1,0,!1,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.UInt8Keyword,"uint8",1,0,!1,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ULongKeyword,"ulong",1,0,!1,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.UniqueIdKeyword,"uniqueid",1,0,!1,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.UuidKeyword,"uuid",1,0,!0,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.OpenParenToken,"(",Kusto.Language.Syntax.SyntaxCategory.Punctuation)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CloseParenToken,")",Kusto.Language.Syntax.SyntaxCategory.Punctuation)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.OpenBracketToken,"[",Kusto.Language.Syntax.SyntaxCategory.Punctuation)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CloseBracketToken,"]",Kusto.Language.Syntax.SyntaxCategory.Punctuation)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.OpenBraceToken,"{",Kusto.Language.Syntax.SyntaxCategory.Punctuation)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CloseBraceToken,"}",Kusto.Language.Syntax.SyntaxCategory.Punctuation)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.BarToken,"|",Kusto.Language.Syntax.SyntaxCategory.Punctuation)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.LessThanBarToken,"<|",Kusto.Language.Syntax.SyntaxCategory.Punctuation)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PlusToken,"+",Kusto.Language.Syntax.SyntaxCategory.Operator,Kusto.Language.Symbols.OperatorKind.Add)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MinusToken,"-",Kusto.Language.Syntax.SyntaxCategory.Operator,Kusto.Language.Symbols.OperatorKind.Subtract)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.AsteriskToken,"*",Kusto.Language.Syntax.SyntaxCategory.Operator,Kusto.Language.Symbols.OperatorKind.Multiply)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SlashToken,"/",Kusto.Language.Syntax.SyntaxCategory.Operator,Kusto.Language.Symbols.OperatorKind.Divide)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PercentToken,"%",Kusto.Language.Syntax.SyntaxCategory.Operator,Kusto.Language.Symbols.OperatorKind.Modulo)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DotToken,".",Kusto.Language.Syntax.SyntaxCategory.Punctuation)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DotDotToken,"..",Kusto.Language.Syntax.SyntaxCategory.Punctuation)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.BangToken,"!",Kusto.Language.Syntax.SyntaxCategory.Punctuation)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.LessThanToken,"<",Kusto.Language.Syntax.SyntaxCategory.Operator,Kusto.Language.Symbols.OperatorKind.LessThan)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.LessThanOrEqualToken,"<=",Kusto.Language.Syntax.SyntaxCategory.Operator,Kusto.Language.Symbols.OperatorKind.LessThanOrEqual)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.GreaterThanToken,">",Kusto.Language.Syntax.SyntaxCategory.Operator,Kusto.Language.Symbols.OperatorKind.GreaterThan)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.GreaterThanOrEqualToken,">=",Kusto.Language.Syntax.SyntaxCategory.Operator,Kusto.Language.Symbols.OperatorKind.GreaterThanOrEqual)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.EqualToken,"=",Kusto.Language.Syntax.SyntaxCategory.Punctuation)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.EqualEqualToken,"==",Kusto.Language.Syntax.SyntaxCategory.Operator,Kusto.Language.Symbols.OperatorKind.Equal)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.BangEqualToken,"!=",Kusto.Language.Syntax.SyntaxCategory.Operator,Kusto.Language.Symbols.OperatorKind.NotEqual)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.LessThanGreaterThanToken,"<>",Kusto.Language.Syntax.SyntaxCategory.Operator,Kusto.Language.Symbols.OperatorKind.NotEqual)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ColonToken,":",Kusto.Language.Syntax.SyntaxCategory.Punctuation)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SemicolonToken,";",Kusto.Language.Syntax.SyntaxCategory.Punctuation)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CommaToken,",",Kusto.Language.Syntax.SyntaxCategory.Punctuation)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.EqualTildeToken,"=~",Kusto.Language.Syntax.SyntaxCategory.Operator,Kusto.Language.Symbols.OperatorKind.EqualTilde)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.BangTildeToken,"!~",Kusto.Language.Syntax.SyntaxCategory.Operator,Kusto.Language.Symbols.OperatorKind.BangTilde)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.AtToken,"@",Kusto.Language.Syntax.SyntaxCategory.Punctuation)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.QuestionToken,"?",Kusto.Language.Syntax.SyntaxCategory.Punctuation)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.FatArrowToken,"=>",Kusto.Language.Syntax.SyntaxCategory.Punctuation)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.StringLiteralToken,"",Kusto.Language.Syntax.SyntaxCategory.Literal)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.BooleanLiteralToken,"",Kusto.Language.Syntax.SyntaxCategory.Literal)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.LongLiteralToken,"",Kusto.Language.Syntax.SyntaxCategory.Literal)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.IntLiteralToken,"",Kusto.Language.Syntax.SyntaxCategory.Literal)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.RealLiteralToken,"",Kusto.Language.Syntax.SyntaxCategory.Literal)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DecimalLiteralToken,"",Kusto.Language.Syntax.SyntaxCategory.Literal)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DateTimeLiteralToken,"",Kusto.Language.Syntax.SyntaxCategory.Literal)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TimespanLiteralToken,"",Kusto.Language.Syntax.SyntaxCategory.Literal)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.GuidLiteralToken,"",Kusto.Language.Syntax.SyntaxCategory.Literal)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.RawGuidLiteralToken,"",Kusto.Language.Syntax.SyntaxCategory.Literal)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.IdentifierToken,"",Kusto.Language.Syntax.SyntaxCategory.Identifier)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.EndOfTextToken,"",Kusto.Language.Syntax.SyntaxCategory.Other)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DirectiveToken,"",Kusto.Language.Syntax.SyntaxCategory.Other)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.BadToken,"",Kusto.Language.Syntax.SyntaxCategory.Other)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DashDashToken,"--",Kusto.Language.Syntax.SyntaxCategory.Other)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DashDashGreaterThanToken,"-->",Kusto.Language.Syntax.SyntaxCategory.Other)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.LessThanDashDashToken,"<--",Kusto.Language.Syntax.SyntaxCategory.Other)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.BracketDashToken,"]-",Kusto.Language.Syntax.SyntaxCategory.Other)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.BracketDashGreaterThanToken,"]->",Kusto.Language.Syntax.SyntaxCategory.Other)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DashBracketToken,"-[",Kusto.Language.Syntax.SyntaxCategory.Other)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.LessThanDashBracketToken,"<-[",Kusto.Language.Syntax.SyntaxCategory.Other)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.List,"",Kusto.Language.Syntax.SyntaxCategory.List)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SeparatedElement,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ExpressionList,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ExpressionCouple,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.RenameList,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CustomNode,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TokenName,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.BracketedName,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.BracedName,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.WildcardedName,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.BracketedWildcardedName,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NameDeclaration,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NameReference,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ParenthesizedExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PathExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ElementExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SimpleNamedExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CompoundNamedExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.FunctionCallExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ToScalarExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ToTableExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.BracketedExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.RangeOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PipeExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NamedParameter,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DataScopeExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DataTableExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ContextualDataTableExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ExternalDataExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ExternalDataWithClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ExternalDataUriList,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MaterializedViewCombineExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MaterializedViewCombineClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.IntLiteralExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.BooleanLiteralExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.LongLiteralExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.RealLiteralExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DecimalLiteralExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DateTimeLiteralExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TimespanLiteralExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TypeOfLiteralExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.GuidLiteralExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.StringLiteralExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CompoundStringLiteralExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NullLiteralExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TokenLiteralExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.StarExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.AtExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.UnaryPlusExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.UnaryMinusExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.AddExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SubtractExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MultiplyExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DivideExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ModuloExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.LessThanExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.LessThanOrEqualExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.GreaterThanExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.GreaterThanOrEqualExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.EqualExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotEqualExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.AndExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.OrExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.InExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.InCsExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HasAnyExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HasAllExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotInExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotInCsExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.BetweenExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotBetweenExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.EqualTildeExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.BangTildeExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HasExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HasCsExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotHasExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotHasCsExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HasPrefixExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HasPrefixCsExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotHasPrefixExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotHasPrefixCsExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HasSuffixExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HasSuffixCsExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotHasSuffixExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotHasSuffixCsExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.LikeExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.LikeCsExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotLikeExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotLikeCsExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ContainsExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ContainsCsExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotContainsExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotContainsCsExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.StartsWithExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.StartsWithCsExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotStartsWithExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotStartsWithCsExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.EndsWithExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.EndsWithCsExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotEndsWithExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotEndsWithCsExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MatchesRegexExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SearchExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.JsonObjectExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.JsonPair,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.JsonArrayExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DynamicExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TypedColumnReference,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PackExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NameAndTypeDeclaration,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PrimitiveTypeExpression,"",Kusto.Language.Syntax.SyntaxCategory.None)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SchemaTypeExpression,"",Kusto.Language.Syntax.SyntaxCategory.None)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ToTypeOfClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DataScopeClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NameEqualsClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DefaultExpressionClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.EvaluateSchemaClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.RowSchema,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.EvaluateRowSchema,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.EntityGroupExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.BadQueryOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.AsOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.AssertSchemaOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ConsumeOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CountOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CountAsIdentifierClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DistinctOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ExecuteAndCacheOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ExtendOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.FacetOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.FacetWithOperatorClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.FacetWithExpressionClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.FilterOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.FindOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.FindInClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.FindProjectClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ForkOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ForkExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.GetSchemaOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.GraphMatchOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.GraphMatchPattern,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.GraphMatchPatternNode,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.GraphMatchPatternEdge,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.GraphMatchPatternEdgeRange,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.GraphMergeOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.GraphToTableOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.GraphToTableOutputClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.GraphToTableAsClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.InvokeOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.LookupOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.JoinOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.JoinOnClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MacroExpandScopeReferenceName,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.JoinWhereClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MacroExpandOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MakeGraphOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MakeGraphWithTablesAndKeysClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MakeGraphWithImplicitIdClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MakeGraphTableAndKeyClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.GraphMarkComponentsOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MakeGraphPartitionedByClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MakeSeriesOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MakeSeriesExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MakeSeriesOnClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MakeSeriesInRangeClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MakeSeriesToClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MakeSeriesFromClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MakeSeriesStepClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MakeSeriesFromToStepClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MakeSeriesByClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MvApplyOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MvApplyExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MvApplyRowLimitClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MvApplyContextIdClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MvApplySubqueryExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MvExpandOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MvExpandExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MvExpandRowLimitClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PartitionByOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PartitionByIdClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PartitionOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PartitionSubquery,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PartitionQuery,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PartitionScope,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ParseOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ParseWhereOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ParseKvWithClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ParseKvOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.EvaluateOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PrintOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ProjectClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ProjectOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ProjectAwayOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ProjectKeepOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ProjectRenameOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ProjectReorderOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ReduceByOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ReduceByWithClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.RenderOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.RenderWithClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NameReferenceList,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SampleOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SampleDistinctOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ScanOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ScanOrderByClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ScanPartitionByClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ScanDeclareClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ScanStep,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ScanStepOutput,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ScanComputationClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ScanAssignment,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SearchOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SerializeOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SummarizeOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SummarizeByClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SortOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.OrderedExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.OrderingClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.OrderingNullsClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TakeOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TopOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TopHittersOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TopHittersByClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TopNestedOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TopNestedClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TopNestedWithOthersClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.UnionOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.WhereClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.AliasStatement,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ExpressionStatement,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.FunctionDeclaration,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.FunctionParameters,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.FunctionParameter,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DefaultValueDeclaration,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.FunctionBody,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.LetStatement,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MaterializeExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PatternStatement,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PatternPathParameter,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PatternDeclaration,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PatternMatch,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PatternPathValue,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.RestrictStatement,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SetOptionStatement,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.OptionValueClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.QueryParametersStatement,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CommandWithValueClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CommandWithPropertyListClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.BadCommand,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.UnknownCommand,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CustomCommand,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CommandAndSkippedTokens,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.QueryBlock,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CommandBlock,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DirectiveBlock,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SkippedTokens,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.InputTextToken,"",Kusto.Language.Syntax.SyntaxCategory.Other)),_o1}(new(System.Collections.Generic.List$1(Kusto.Language.Syntax.SyntaxFacts.SyntaxData).ctor)),count,i,d;for(data.Sort$2(function(d1,d2){return System.String.compare(d1.Text,d2.Text)}),count=System.Enum.getValues(Kusto.Language.Syntax.SyntaxKind).length,Kusto.Language.Syntax.SyntaxFacts.kindToDataMap=System.Array.init(count,null,Kusto.Language.Syntax.SyntaxFacts.SyntaxData),Kusto.Language.Syntax.SyntaxFacts.textToKindMap=new(Kusto.Language.Utils.TextKeyedDictionary$1(Kusto.Language.Syntax.SyntaxKind)),i=0;i<data.Count;i=i+1|0)d=data.getItem(i),Kusto.Language.Syntax.SyntaxFacts.kindToDataMap[System.Array.index(d.Kind,Kusto.Language.Syntax.SyntaxFacts.kindToDataMap)]=d,d.Text!=null&&Kusto.Language.Syntax.SyntaxFacts.textToKindMap.GetOrAddValue(d.Text,d.Kind)}},methods:{GetText:function(kind){return Kusto.Language.Syntax.SyntaxFacts.kindToDataMap[System.Array.index(kind,Kusto.Language.Syntax.SyntaxFacts.kindToDataMap)].Text},GetCategory:function(kind){return Kusto.Language.Syntax.SyntaxFacts.kindToDataMap[System.Array.index(kind,Kusto.Language.Syntax.SyntaxFacts.kindToDataMap)].Category},IsKeyword:function(kind){return Kusto.Language.Syntax.SyntaxFacts.GetCategory(kind)===Kusto.Language.Syntax.SyntaxCategory.Keyword},IsKeyword$1:function(text){var kind={v:new Kusto.Language.Syntax.SyntaxKind};return Kusto.Language.Syntax.SyntaxFacts.TryGetKind(text,kind)&&Kusto.Language.Syntax.SyntaxFacts.IsKeyword(kind.v)},IsPunctuation:function(kind){return Kusto.Language.Syntax.SyntaxFacts.GetCategory(kind)===Kusto.Language.Syntax.SyntaxCategory.Punctuation},IsOperator:function(kind){return Kusto.Language.Syntax.SyntaxFacts.GetCategory(kind)===Kusto.Language.Syntax.SyntaxCategory.Operator},IsLiteral:function(kind){return Kusto.Language.Syntax.SyntaxFacts.GetCategory(kind)===Kusto.Language.Syntax.SyntaxCategory.Literal},IsType:function(kind){return Kusto.Language.Syntax.SyntaxFacts.kindToDataMap[System.Array.index(kind,Kusto.Language.Syntax.SyntaxFacts.kindToDataMap)].IsType},GetOperatorKind:function(kind){return Kusto.Language.Syntax.SyntaxFacts.kindToDataMap[System.Array.index(kind,Kusto.Language.Syntax.SyntaxFacts.kindToDataMap)].OperatorKind},TryGetKind:function(text,kind){return Kusto.Language.Syntax.SyntaxFacts.TryGetKind$1(text,0,text.length,kind)},TryGetKind$1:function(text,offset,length,kind){return Kusto.Language.Syntax.SyntaxFacts.textToKindMap.TryGetValue(text,offset,length,kind)},GetKinds:function(category){return new(Bridge.GeneratorEnumerable$1(Kusto.Language.Syntax.SyntaxKind))(Bridge.fn.bind(this,function(category){var $step=0,$jumpFromFinally,$returnValue,$t,datum,$async_e,$enumerator=new(Bridge.GeneratorEnumerator$1(Kusto.Language.Syntax.SyntaxKind))(Bridge.fn.bind(this,function(){try{for(;;)switch($step){case 0:$t=Bridge.getEnumerator(Kusto.Language.Syntax.SyntaxFacts.kindToDataMap);$step=1;continue;case 1:if($t.moveNext()){datum=$t.Current;$step=2;continue}$step=6;continue;case 2:if(datum.Category===category){$step=3;continue}$step=5;continue;case 3:return $enumerator.current=datum.Kind,$step=4,!0;case 4:$step=5;continue;case 5:$step=1;continue;case 6:default:return!1}}catch($async_e1){$async_e=System.Exception.create($async_e1);throw $async_e;}}));return $enumerator},arguments))},GetKindsWithFixedText:function(){return new(Bridge.GeneratorEnumerable$1(Kusto.Language.Syntax.SyntaxKind))(Bridge.fn.bind(this,function(){var $step=0,$jumpFromFinally,$returnValue,$t,datum,$async_e,$enumerator=new(Bridge.GeneratorEnumerator$1(Kusto.Language.Syntax.SyntaxKind))(Bridge.fn.bind(this,function(){try{for(;;)switch($step){case 0:$t=Bridge.getEnumerator(Kusto.Language.Syntax.SyntaxFacts.kindToDataMap);$step=1;continue;case 1:if($t.moveNext()){datum=$t.Current;$step=2;continue}$step=6;continue;case 2:if(datum.Text.length>0){$step=3;continue}$step=5;continue;case 3:return $enumerator.current=datum.Kind,$step=4,!0;case 4:$step=5;continue;case 5:$step=1;continue;case 6:default:return!1}}catch($async_e1){$async_e=System.Exception.create($async_e1);throw $async_e;}}));return $enumerator}))},CanBeIdentifier:function(kind){return Kusto.Language.Syntax.SyntaxFacts.kindToDataMap[System.Array.index(kind,Kusto.Language.Syntax.SyntaxFacts.kindToDataMap)].CanBeIdentifier},IsKeywordThatCanBeIdentifier:function(text){var kind={v:new Kusto.Language.Syntax.SyntaxKind};return Kusto.Language.Syntax.SyntaxFacts.TryGetKind(text,kind)&&Kusto.Language.Syntax.SyntaxFacts.IsKeyword(kind.v)&&Kusto.Language.Syntax.SyntaxFacts.CanBeIdentifier(kind.v)}}}});Bridge.define("Kusto.Language.Syntax.SyntaxFacts.SyntaxData",{$kind:"nested class",props:{Kind:0,Text:null,Category:0,OperatorKind:0,CanBeIdentifier:!1,IsType:!1},ctors:{ctor:function(kind,text,category,opKind,canBeIdentifier,isType){category===void 0&&(category=1);opKind===void 0&&(opKind=0);canBeIdentifier===void 0&&(canBeIdentifier=!1);isType===void 0&&(isType=!1);this.$initialize();this.Kind=kind;this.Text=text;this.Category=category;this.OperatorKind=opKind;this.CanBeIdentifier=canBeIdentifier;this.IsType=isType}}});Bridge.define("Kusto.Language.Syntax.SyntaxKind",{$kind:"enum",statics:{fields:{None:0,__CrossClusterKeyword:1,__CrossDBKeyword:2,__IdKeyword:3,__IsFuzzyKeyword:4,__NoWithSourceKeyword:5,__PackedColumnKeyword:6,__SourceColumnIndexKeyword:7,_3DChartKeyword:8,AccessKeyword:9,AccumulateKeyword:10,AliasKeyword:11,AndKeyword:12,AnomalyChartKeyword:13,AreaChartKeyword:14,AsKeyword:15,AscKeyword:16,AssertSchemaKeyword:17,BagExpansionKeyword:18,BarChartKeyword:19,BetweenKeyword:20,BinKeyword:21,BinLegacy:22,ByKeyword:23,CachingPolicyKeyword:24,CalloutKeyword:25,CancelKeyword:26,CardKeyword:27,ColumnChartKeyword:28,CommandsAndQueriesKeyword:29,ConsumeKeyword:30,ContainsKeyword:31,ContainsCsKeyword:32,Contains_CsKeyword:33,ContextualDataTableKeyword:34,CountKeyword:35,CyclesKeyword:36,DatabaseKeyword:37,DataExportKeyword:38,DataScopeKeyword:39,DataTableKeyword:40,DeclareKeyword:41,DecodeBlocksKeyword:42,DefaultKeyword:43,DescKeyword:44,DistinctKeyword:45,EarliestKeyword:46,EncodingPolicyKeyword:47,EndsWithKeyword:48,EndsWithCsKeyword:49,EntityGroupKeyword:50,EvaluateKeyword:51,ExecuteAndCacheKeyword:52,ExpandOutputKeyword:53,ExtendKeyword:54,ExtentTagsRetentionKeyword:55,ExternalDataKeyword:56,External_DataKeyword:57,FacetKeyword:58,FilterKeyword:59,FindKeyword:60,FirstKeyword:61,FlagsKeyword:62,ForkKeyword:63,FromKeyword:64,GetSchemaKeyword:65,GrannyAscKeyword:66,GrannyDescKeyword:67,GraphMatchKeyword:68,GraphMergeKeyword:69,GraphToTableKeyword:70,GraphEdgesKeyword:71,HardDeleteKeyword:72,HardRetentionKeyword:73,HasKeyword:74,HasAnyKeyword:75,HasAllKeyword:76,HasCsKeyword:77,HasPrefixKeyword:78,HasPrefixCsKeyword:79,HasSuffixKeyword:80,HasSuffixCsKeyword:81,HintDotConcurrencyKeyword:82,HintDotDistributionKeyword:83,HintDotMaterializedKeyword:84,HintDotNumPartitions:85,HintDotShuffleKeyKeyword:86,HintDotSpreadKeyword:87,HintDotRemoteKeyword:88,HintDotStrategyKeyword:89,HintDotProgressiveTopKeyword:90,HotCacheKeyword:91,IdKeyword:92,InKeyword:93,InCsKeyword:94,InvokeKeyword:95,IsFuzzyKeyword:96,BestEffortKeyword:97,ForceRemoteKeyword:98,JoinKeyword:99,JournalKeyword:100,KindKeyword:101,LadderChartKeyword:102,LastKeyword:103,LatestKeyword:104,LetKeyword:105,LikeKeyword:106,LikeCsKeyword:107,LimitKeyword:108,LineChartKeyword:109,LookupKeyword:110,MacroExpandKeyword:111,MacroExpandScopeReferenceName:112,MakeGraphKeyword:113,GraphMarkComponentsKeyword:114,MakeSeriesKeyword:115,MatchesRegexKeyword:116,MaterializeKeyword:117,MaterializedViewCombineKeyword:118,MaterializedViewsKeyword:119,MdmKeyword:120,MissingKeyword:121,MvApplyKeyword:122,MvDashApplyKeyword:123,MvDashExpandKeyword:124,MvExpandKeyword:125,NodesKeyword:126,NoOptimizationKeyword:127,NotBetweenKeyword:128,NotContainsKeyword:129,NotContainsCsKeyword:130,NotBangContainsKeyword:131,NotBangContainsCsKeyword:132,NotEndsWithKeyword:133,NotEndsWithCsKeyword:134,NotHasKeyword:135,NotHasCsKeyword:136,NotHasPrefixKeyword:137,NotHasPrefixCsKeyword:138,NotHasSuffixKeyword:139,NotHasSuffixCsKeyword:140,NotInKeyword:141,NotInCsKeyword:142,NotLikeKeyword:143,NotLikeCsKeyword:144,NotStartsWithKeyword:145,NotStartsWithCsKeyword:146,NullKeyword:147,NullsKeyword:148,OfKeyword:149,OnKeyword:150,OptionalKeyword:151,OrKeyword:152,OrderKeyword:153,OthersKeyword:154,OutputKeyword:155,PackKeyword:156,ParseKeyword:157,ParseWhereKeyword:158,ParseKvKeyword:159,PartitionedByKeyword:160,PartitionByKeyword:161,PartitionKeyword:162,PathFormatKeyword:163,PatternKeyword:164,PieChartKeyword:165,PivotChartKeyword:166,PlotlyKeyword:167,GraphKeyword:168,PrintKeyword:169,ProjectKeyword:170,ProjectAwayKeyword:171,_ProjectAwayKeyword:172,ProjectKeepKeyword:173,ProjectRenameKeyword:174,ProjectReorderKeyword:175,ProjectSmartKeyword:176,QueriesKeyword:177,QueryParametersKeyword:178,QueryResultsKeyword:179,RangeKeyword:180,ReduceKeyword:181,RegexKeyword:182,RelaxedKeyword:183,RenderKeyword:184,RestrictedViewAccessKeyword:185,RestrictKeyword:186,RowLevelSecurityKeyword:187,RowstoreKeyword:188,RowstoreReferencesKeyword:189,RowstoreSealInfoKeyword:190,RowstorePolicyKeyword:191,RowstoresKeyword:192,SampleKeyword:193,SampleDistinctKeyword:194,ScanKeyword:195,ScatterChartKeyword:196,SealKeyword:197,SealsKeyword:198,SearchKeyword:199,SerializeKeyword:200,SetKeyword:201,SetOrAppendKeyword:202,SetOrReplaceKeyword:203,ShardsKeyword:204,SimpleKeyword:205,SoftDeleteKeyword:206,SoftRetentionKeyword:207,SortKeyword:208,SqlKeyword:209,StackedAreaChartKeyword:210,StartsWithKeyword:211,StartsWithCsKeyword:212,StatisticsKeyword:213,StepKeyword:214,StoredQueryResultContainersKeyword:215,SummarizeKeyword:216,TablePurgeKeyword:217,TakeKeyword:218,TimeChartKeyword:219,TimelineKeyword:220,TimePivotKeyword:221,TitleKeyword:222,ToKeyword:223,TopKeyword:224,TopHittersKeyword:225,TopNestedKeyword:226,ToScalarKeyword:227,ToTableKeyword:228,TreeMapKeyword:229,TypeOfKeyword:230,UnionKeyword:231,UnrestrictedViewersKeyword:232,UuidKeyword:233,VerboseKeyword:234,ViewersKeyword:235,ViewKeyword:236,ViewsKeyword:237,WhereKeyword:238,WithItemIndexKeyword:239,WithKeyword:240,WithMatchIdKeyword:241,With_SourceKeyword:242,WithStepNameKeyword:243,WithSourceKeyword:244,WithNodeIdKeyword:245,WriteAheadLogKeyword:246,BoolKeyword:247,BooleanKeyword:248,Int8Keyword:249,CharKeyword:250,UInt8Keyword:251,ByteKeyword:252,Int16Keyword:253,UInt16Keyword:254,IntKeyword:255,Int32Keyword:256,UIntKeyword:257,UInt32Keyword:258,LongKeyword:259,Int64Keyword:260,ULongKeyword:261,UInt64Keyword:262,FloatKeyword:263,RealKeyword:264,DecimalKeyword:265,DoubleKeyword:266,StringKeyword:267,TimeKeyword:268,TimespanKeyword:269,DateKeyword:270,DateTimeKeyword:271,GuidKeyword:272,UniqueIdKeyword:273,DynamicKeyword:274,OpenParenToken:275,CloseParenToken:276,OpenBracketToken:277,CloseBracketToken:278,OpenBraceToken:279,CloseBraceToken:280,BarToken:281,LessThanBarToken:282,PlusToken:283,MinusToken:284,AsteriskToken:285,SlashToken:286,PercentToken:287,DotToken:288,DotDotToken:289,BangToken:290,LessThanToken:291,LessThanOrEqualToken:292,GreaterThanToken:293,GreaterThanOrEqualToken:294,EqualToken:295,EqualEqualToken:296,BangEqualToken:297,LessThanGreaterThanToken:298,ColonToken:299,SemicolonToken:300,CommaToken:301,EqualTildeToken:302,BangTildeToken:303,AtToken:304,QuestionToken:305,FatArrowToken:306,BooleanLiteralToken:307,IntLiteralToken:308,LongLiteralToken:309,RealLiteralToken:310,DecimalLiteralToken:311,DateTimeLiteralToken:312,TimespanLiteralToken:313,GuidLiteralToken:314,RawGuidLiteralToken:315,StringLiteralToken:316,IdentifierToken:317,DirectiveToken:318,EndOfTextToken:319,BadToken:320,DashDashToken:321,DashDashGreaterThanToken:322,LessThanDashDashToken:323,BracketDashToken:324,BracketDashGreaterThanToken:325,DashBracketToken:326,LessThanDashBracketToken:327,List:328,SeparatedElement:329,ExpressionList:330,ExpressionCouple:331,RenameList:332,CustomNode:333,BooleanLiteralExpression:334,IntLiteralExpression:335,LongLiteralExpression:336,RealLiteralExpression:337,DecimalLiteralExpression:338,DateTimeLiteralExpression:339,TimespanLiteralExpression:340,GuidLiteralExpression:341,StringLiteralExpression:342,NullLiteralExpression:343,TokenLiteralExpression:344,CompoundStringLiteralExpression:345,TypeOfLiteralExpression:346,DynamicExpression:347,JsonObjectExpression:348,JsonPair:349,JsonArrayExpression:350,TokenName:351,BracketedName:352,BracedName:353,WildcardedName:354,BracketedWildcardedName:355,NameDeclaration:356,NameReference:357,ParenthesizedExpression:358,PathExpression:359,ElementExpression:360,SimpleNamedExpression:361,CompoundNamedExpression:362,FunctionCallExpression:363,ToScalarExpression:364,ToTableExpression:365,BracketedExpression:366,PipeExpression:367,NamedParameter:368,DataScopeExpression:369,DataTableExpression:370,ContextualDataTableExpression:371,ExternalDataExpression:372,ExternalDataWithClause:373,ExternalDataUriList:374,MaterializedViewCombineExpression:375,MaterializedViewCombineClause:376,ParseKvWithClause:377,StarExpression:378,AtExpression:379,UnaryPlusExpression:380,UnaryMinusExpression:381,AddExpression:382,SubtractExpression:383,MultiplyExpression:384,DivideExpression:385,ModuloExpression:386,LessThanExpression:387,LessThanOrEqualExpression:388,GreaterThanExpression:389,GreaterThanOrEqualExpression:390,EqualExpression:391,NotEqualExpression:392,AndExpression:393,OrExpression:394,InExpression:395,InCsExpression:396,NotInExpression:397,NotInCsExpression:398,BetweenExpression:399,NotBetweenExpression:400,EqualTildeExpression:401,BangTildeExpression:402,HasExpression:403,HasCsExpression:404,NotHasExpression:405,NotHasCsExpression:406,HasPrefixExpression:407,HasPrefixCsExpression:408,NotHasPrefixExpression:409,NotHasPrefixCsExpression:410,HasSuffixExpression:411,HasSuffixCsExpression:412,NotHasSuffixExpression:413,NotHasSuffixCsExpression:414,LikeExpression:415,LikeCsExpression:416,NotLikeExpression:417,NotLikeCsExpression:418,ContainsExpression:419,ContainsCsExpression:420,NotContainsExpression:421,NotContainsCsExpression:422,StartsWithExpression:423,StartsWithCsExpression:424,NotStartsWithExpression:425,NotStartsWithCsExpression:426,EndsWithExpression:427,EndsWithCsExpression:428,NotEndsWithExpression:429,NotEndsWithCsExpression:430,MatchesRegexExpression:431,SearchExpression:432,HasAnyExpression:433,HasAllExpression:434,TypedColumnReference:435,PackExpression:436,NameAndTypeDeclaration:437,PrimitiveTypeExpression:438,SchemaTypeExpression:439,NameEqualsClause:440,DefaultExpressionClause:441,ToTypeOfClause:442,EvaluateSchemaClause:443,RowSchema:444,EvaluateRowSchema:445,EntityGroupExpression:446,BadQueryOperator:447,AsOperator:448,AssertSchemaOperator:449,ConsumeOperator:450,CountOperator:451,CountAsIdentifierClause:452,DistinctOperator:453,EvaluateOperator:454,ExecuteAndCacheOperator:455,ExtendOperator:456,FacetOperator:457,FacetWithOperatorClause:458,FacetWithExpressionClause:459,FilterOperator:460,FindOperator:461,DataScopeClause:462,FindInClause:463,FindProjectClause:464,GetSchemaOperator:465,GraphMatchOperator:466,GraphMatchPattern:467,GraphMatchPatternNode:468,GraphMatchPatternEdge:469,GraphMatchPatternEdgeRange:470,GraphMergeOperator:471,GraphToTableOperator:472,GraphToTableOutputClause:473,GraphToTableAsClause:474,InvokeOperator:475,LookupOperator:476,JoinOperator:477,JoinOnClause:478,JoinWhereClause:479,SearchOperator:480,ForkOperator:481,ForkExpression:482,MacroExpandOperator:483,MakeGraphOperator:484,MakeGraphWithTablesAndKeysClause:485,MakeGraphWithImplicitIdClause:486,MakeGraphTableAndKeyClause:487,MakeGraphPartitionedByClause:488,GraphMarkComponentsOperator:489,MakeSeriesOperator:490,MakeSeriesExpression:491,MakeSeriesOnClause:492,MakeSeriesInRangeClause:493,MakeSeriesFromClause:494,MakeSeriesToClause:495,MakeSeriesStepClause:496,MakeSeriesFromToStepClause:497,MakeSeriesByClause:498,MvApplyOperator:499,MvApplyExpression:500,MvApplyRowLimitClause:501,MvApplyContextIdClause:502,MvApplySubqueryExpression:503,MvExpandOperator:504,MvExpandExpression:505,MvExpandRowLimitClause:506,PartitionByOperator:507,PartitionByIdClause:508,PartitionSubquery:509,PartitionQuery:510,PartitionScope:511,PartitionOperator:512,ParseOperator:513,ParseWhereOperator:514,ParseKvOperator:515,PrintOperator:516,ProjectClause:517,ProjectOperator:518,ProjectAwayOperator:519,ProjectKeepOperator:520,ProjectRenameOperator:521,ProjectReorderOperator:522,RangeOperator:523,ReduceByOperator:524,ReduceByWithClause:525,RenderOperator:526,RenderWithClause:527,NameReferenceList:528,SampleOperator:529,SampleDistinctOperator:530,ScanOperator:531,ScanOrderByClause:532,ScanPartitionByClause:533,ScanDeclareClause:534,ScanStep:535,ScanStepOutput:536,ScanComputationClause:537,ScanAssignment:538,SerializeOperator:539,SortOperator:540,OrderedExpression:541,OrderingClause:542,OrderingNullsClause:543,SummarizeOperator:544,SummarizeByClause:545,TakeOperator:546,TopHittersOperator:547,TopHittersByClause:548,TopOperator:549,TopNestedOperator:550,TopNestedClause:551,TopNestedWithOthersClause:552,UnionOperator:553,WhereClause:554,AliasStatement:555,ExpressionStatement:556,FunctionDeclaration:557,FunctionParameters:558,FunctionParameter:559,DefaultValueDeclaration:560,FunctionBody:561,LetStatement:562,MaterializeExpression:563,RestrictStatement:564,SetOptionStatement:565,OptionValueClause:566,PatternStatement:567,PatternDeclaration:568,PatternPathParameter:569,PatternMatch:570,PatternPathValue:571,QueryParametersStatement:572,CommandWithValueClause:573,CommandWithPropertyListClause:574,BadCommand:575,UnknownCommand:576,CustomCommand:577,CommandAndSkippedTokens:578,QueryBlock:579,CommandBlock:580,DirectiveBlock:581,SkippedTokens:582,InputTextToken:583}},$utype:System.Int16});Bridge.define("Kusto.Language.Syntax.SyntaxNodeExtensions",{statics:{methods:{CopyAsFragment:function(T,node){var cloned=node.Clone$1(),_=new Kusto.Language.Syntax.SyntaxTree(cloned,node.Tree,node.TriviaStart);return Bridge.cast(cloned,T)}}}});Bridge.define("Kusto.Language.Syntax.ValueInfo",{props:{Value:null,ValueText:null,RawText:null},ctors:{ctor:function(rawText,valueText,value){this.$initialize();this.RawText=rawText;this.ValueText=valueText;this.Value=value}}});Bridge.define("Kusto.Language.TestHelpers",{statics:{methods:{GetGlobalExpansionCacheSize:function(globals){var gbc={};return globals.Cache!=null&&globals.Cache.TryGetValue(Kusto.Language.Binding.GlobalBindingCache,gbc)?gbc.v.CallSiteToExpansionMap.Count:0},Bind:function(syntax,globals){var tree=new Kusto.Language.Syntax.SyntaxTree(syntax);Kusto.Language.Binding.Binder.TryBind(tree,globals)}}}});Bridge.define("Kusto.Language.Utils.ArgumentCheckers",{statics:{methods:{CheckArgumentNull:function(T,value,parameterName){if(value==null)throw new System.ArgumentNullException.$ctor1(parameterName);return value},CheckArgumentNullOrEmpty:function(T,list,parameterName){if(list==null)throw new System.ArgumentNullException.$ctor1(parameterName);if(System.Array.getCount(list,T)===0)throw new System.ArgumentException.$ctor1(System.String.format("Parameter '{0}' must have at least one element.",[parameterName]));return list},CheckArgumentNullOrElementNull:function(T,list,parameterName){if(list==null)throw new System.ArgumentNullException.$ctor1(parameterName);for(var i=0;i<System.Array.getCount(list,T);i=i+1|0)if(System.Array.getItem(list,i,T)==null)throw new System.ArgumentException.$ctor1(System.String.format("Element {0} of parameter '{1}' is null.",Bridge.box(i,System.Int32),parameterName));return list},CheckArgumentNullOrEmptyOrElementNull:function(T,list,parameterName){return Kusto.Language.Utils.ArgumentCheckers.CheckArgumentNullOrElementNull(T,list,parameterName),Kusto.Language.Utils.ArgumentCheckers.CheckArgumentNullOrEmpty(T,list,parameterName),list}}}});Bridge.define("Kusto.Language.Utils.CancellationToken",{$kind:"struct",statics:{methods:{getDefaultValue:function(){return new Kusto.Language.Utils.CancellationToken}}},fields:{_fnCanceled:null},ctors:{$ctor1:function(fnCanceled){fnCanceled===void 0&&(fnCanceled=null);this.$initialize();this._fnCanceled=fnCanceled},ctor:function(){this.$initialize()}},methods:{ThrowIfCancellationRequested:function(){if(!Bridge.staticEquals(this._fnCanceled,null)&&this._fnCanceled())throw new System.OperationCanceledException.ctor;},getHashCode:function(){return Bridge.addHash([6857008862,this._fnCanceled])},equals:function(o){return Bridge.is(o,Kusto.Language.Utils.CancellationToken)?Bridge.equals(this._fnCanceled,o._fnCanceled):!1},$clone:function(to){var s=to||new Kusto.Language.Utils.CancellationToken;return s._fnCanceled=this._fnCanceled,s}}});Bridge.define("Kusto.Language.Utils.EmptyReadOnlyList$1",function(T){return{statics:{fields:{Instance:null},ctors:{init:function(){this.Instance=(new(System.Collections.Generic.List$1(T).ctor)).AsReadOnly()}}}}});Bridge.define("Kusto.Language.Utils.Ensure",{statics:{methods:{IsTrue:function(value,message){var $t;if(message===void 0&&(message=null),!value)throw new System.InvalidOperationException.$ctor1(($t=message,$t!=null?$t:"Expected true"));},AreEqual:function(T,expected,actual,message){var $t;if(message===void 0&&(message=null),!Bridge.equals(expected,actual))throw new System.InvalidOperationException.$ctor1(($t=message,$t!=null?$t:System.String.format("Expected: {0} actual: {1}",expected,actual)));},NotNull:function(value,message){var $t;if(message===void 0&&(message=null),value==null)throw new System.InvalidOperationException.$ctor1(($t=message,$t!=null?$t:"Expected not null"));},IsNull:function(value,message){var $t;if(message===void 0&&(message=null),value!=null)throw new System.InvalidOperationException.$ctor1(($t=message,$t!=null?$t:"Expected null"));},ArgumentNotNull:function(value,paramName){if(value==null)throw new System.ArgumentNullException.$ctor1(paramName);},ElementsNotNull:function(T,list,listName){for(var i=0;i<System.Array.getCount(list,T);i=i+1|0)if(System.Array.getItem(list,i,T)==null)throw new System.InvalidOperationException.$ctor1(System.String.format("{0}[{1}] is null",listName,Bridge.box(i,System.Int32)));}}}});Bridge.define("Kusto.Language.Utils.HashSetExtensions",{statics:{methods:{AddRange:function(T,hashSet,items){var $t,item;$t=Bridge.getEnumerator(items,T);try{while($t.moveNext())item=$t.Current,hashSet.add(item)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}}}});Bridge.define("Kusto.Language.Utils.Interlocked",{statics:{methods:{CompareExchange:function(T,value,newValue,comparand){var original=value.v;return Bridge.referenceEquals(original,comparand)&&(value.v=newValue),original},CompareExchange$1:function(value,newValue,comparand){var original=value.v;return original===comparand&&(value.v=newValue),original},Exchange:function(T,value,newValue){var original=value.v;return value.v=newValue,original}}}});Bridge.define("Kusto.Language.Utils.ListExtensions",{statics:{methods:{ToReadOnly:function(T,list){var rol,safeList;return list==null||Bridge.referenceEquals(list,Kusto.Language.Utils.EmptyReadOnlyList$1(T).Instance)||(rol=Bridge.as(list,System.Collections.Generic.IReadOnlyList$1(T)))!=null&&System.Array.getCount(rol,T)===0?Kusto.Language.Utils.EmptyReadOnlyList$1(T).Instance:(safeList=Bridge.as(list,Kusto.Language.Utils.SafeList$1(T)))!=null?safeList:new(Kusto.Language.Utils.SafeList$1(T).ctor)(list)},ToSafeList:function(T,list){var rol,safeList;return list==null||Bridge.referenceEquals(list,Kusto.Language.Utils.EmptyReadOnlyList$1(T).Instance)||(rol=Bridge.as(list,System.Collections.Generic.IReadOnlyList$1(T)))!=null&&System.Array.getCount(rol,T)===0?Kusto.Language.Utils.SafeList$1(T).Empty:(safeList=Bridge.as(list,Kusto.Language.Utils.SafeList$1(T)))!=null?safeList:new(Kusto.Language.Utils.SafeList$1(T).ctor)(list)},ToHashSetEx:function(T,list){var $t,hs=new(System.Collections.Generic.HashSet$1(T).ctor),item;$t=Bridge.getEnumerator(list,T);try{while($t.moveNext())item=$t.Current,hs.add(item)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return hs},ToDictionaryLast:function(TKey,TValue,values,keySelector){return Kusto.Language.Utils.ListExtensions.ToDictionaryLast$1(TValue,TKey,TValue,values,keySelector,function(v){return v})},ToDictionaryLast$1:function(TItem,TKey,TValue,items,keySelector,valueSelector){var $t,map=new(System.Collections.Generic.Dictionary$2(TKey,TValue).ctor);$t=Bridge.getEnumerator(items,TItem);try{while($t.moveNext()){var item=$t.Current,key=keySelector(item),value=valueSelector(item);map.setItem(key,value)}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return map},AddOrUpdate:function(TItem,TKey,items,newOrUpdatedItems,keySelector){var item,key,comparer;return newOrUpdatedItems==null||System.Array.getCount(newOrUpdatedItems,TItem)===0?items:System.Array.getCount(newOrUpdatedItems,TItem)===1?(item=System.Array.getItem(newOrUpdatedItems,0,TItem),item==null)?items:(key=keySelector(item),comparer=System.Collections.Generic.EqualityComparer$1(TKey).def,Kusto.Language.Utils.ListExtensions.ToReadOnly(TItem,System.Linq.Enumerable.from(items,TItem).where(function(it){return!comparer.equals2(key,keySelector(it))}).concat(System.Array.init([item],TItem)))):Kusto.Language.Utils.ListExtensions.ToReadOnly(TItem,Kusto.Language.Utils.ListExtensions.DistinctLast(TItem,TKey,System.Linq.Enumerable.from(items,TItem).concat(newOrUpdatedItems).where(function(x){return x!=null}),keySelector))},DistinctFirst:function(TItem,TKey,items,keySelector){return System.Linq.Enumerable.from(items,TItem).distinct(new(Kusto.Language.Utils.ListExtensions.KeyComparer$2(TItem,TKey))(keySelector))},DistinctLast:function(TItem,TKey,items,keySelector){return System.Linq.Enumerable.from(Kusto.Language.Utils.ListExtensions.DistinctFirst(TItem,TKey,System.Linq.Enumerable.from(items,TItem).reverse(),keySelector),TItem).reverse()},BinarySearch:function(T,array,comparer){for(var left=0,right=System.Array.getCount(array,T)-1|0,mid,c;left<=right;)if(mid=Bridge.Int.div(left+right|0,2)|0,c=comparer(System.Array.getItem(array,mid,T)),c===0)return mid;else c>0?right=mid-1|0:left=mid+1|0;return-1},IndexOf:function(T,list,item){for(var i=0;i<System.Array.getCount(list,T);i=i+1|0)if(System.Collections.Generic.EqualityComparer$1(T).def.equals2(item,System.Array.getItem(list,i,T)))return i;return-1},RemoveAll:function(T,list,selector){for(var i=list.Count-1|0;i>=0;i=i-1|0)selector(list.getItem(i))&&list.removeAt(i)},SetCount:function(T,list,count){list.Count>count&&list.RemoveRange(count,list.Count-count|0)},Join:function(items,separator,finalSeparator){var builder,i,n;for(finalSeparator===void 0&&(finalSeparator=null),builder=new System.Text.StringBuilder,i=0,n=System.Array.getCount(items,System.String);i<n;i=i+1|0)i>0&&builder.append(i<(n-1|0)?separator:finalSeparator),builder.append(System.Array.getItem(items,i,System.String));return builder.toString()},IsEquivalentTo:function(K,V,a,b){var $t,kvp,bValue;if(Bridge.referenceEquals(a,b))return!0;if(a==null||b==null||System.Array.getCount(a,System.Collections.Generic.KeyValuePair$2(K,V))!==System.Array.getCount(b,System.Collections.Generic.KeyValuePair$2(K,V)))return!1;$t=Bridge.getEnumerator(a,System.Collections.Generic.KeyValuePair$2(K,V));try{while($t.moveNext())if((kvp=$t.Current,bValue={},!b["System$Collections$Generic$IReadOnlyDictionary$2$"+Bridge.getTypeAlias(K)+"$"+Bridge.getTypeAlias(V)+"$tryGetValue"](kvp.key,bValue))||kvp.value!=null&&bValue.v!=null&&!Bridge.equalsT(kvp.value,bValue.v,V))return!1}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return!0},FirstIndex:function(T,list,predicate){for(var i=0;i<System.Array.getCount(list,T);i=i+1|0)if(predicate(System.Array.getItem(list,i,T)))return i;return-1},LastIndex:function(T,list,predicate){for(var i=System.Array.getCount(list,T)-1|0;i>=0;i=i-1|0)if(predicate(System.Array.getItem(list,i,T)))return i;return-1},Append:function(T,list,newItem){return Kusto.Language.Utils.ListExtensions.ReplaceRange(T,list,System.Array.getCount(list,T),0,newItem)},Append$1:function(T,list,newItems){return Kusto.Language.Utils.ListExtensions.ReplaceRange$1(T,list,System.Array.getCount(list,T),0,newItems)},Replace:function(T,list,index,newItem){return Kusto.Language.Utils.ListExtensions.ReplaceRange(T,list,index,1,newItem)},ReplaceRange:function(T,list,start,length,newItem){var $t,newList=($t=T,System.Linq.Enumerable.from(list,$t).toList($t)),removed;return length>0&&start>=0&&start<newList.Count&&(removed=Math.min(newList.Count-start|0,length),removed>0&&newList.RemoveRange(start,removed)),newItem!=null&&start>=0&&start<=newList.Count&&newList.insert(start,newItem),newList},ReplaceRange$1:function(T,list,start,length,newItems){var $t,newList=($t=T,System.Linq.Enumerable.from(list,$t).toList($t)),removed;return length>0&&start>=0&&start<newList.Count&&(removed=Math.min(newList.Count-start|0,length),removed>0&&newList.RemoveRange(start,removed)),newItems!=null&&System.Array.getCount(newItems,T)>0&&start>=0&&start<=newList.Count&&newList.InsertRange(start,newItems),newList}}}});Bridge.define("Kusto.Language.Utils.ListExtensions.KeyComparer$2",function(TItem,TKey){return{inherits:[System.Collections.Generic.IEqualityComparer$1(TItem)],$kind:"nested class",fields:{_keySelector:null},alias:["equals2",["System$Collections$Generic$IEqualityComparer$1$"+Bridge.getTypeAlias(TItem)+"$equals2","System$Collections$Generic$IEqualityComparer$1$equals2"],"getHashCode2",["System$Collections$Generic$IEqualityComparer$1$"+Bridge.getTypeAlias(TItem)+"$getHashCode2","System$Collections$Generic$IEqualityComparer$1$getHashCode2"]],ctors:{ctor:function(keySelector){this.$initialize();this._keySelector=keySelector}},methods:{equals2:function(x,y){return System.Collections.Generic.EqualityComparer$1(TKey).def.equals2(this._keySelector(x),this._keySelector(y))},getHashCode2:function(obj){var $t,$t1;return $t=($t1=this._keySelector(obj))!=null?Bridge.getHashCode($t1):null,$t!=null?$t:0}}}});Bridge.define("Kusto.Language.Utils.ObjectPool$1",function(T){return{fields:{creator:null,resetter:null,items:null},ctors:{ctor:function(creator,resetter,size){size===void 0&&(size=10);this.$initialize();this.creator=creator;this.resetter=resetter;this.items=System.Array.init(size,function(){return Bridge.getDefaultValue(T)},T)}},methods:{AllocateFromPool:function(){for(var item,i=0;i<this.items.length;i=i+1|0)if(this.items[System.Array.index(i,this.items)]!=null&&(item=Kusto.Language.Utils.Interlocked.Exchange(T,Bridge.ref(this.items,i),null),item!=null))return item;return this.creator()},ReturnToPool:function(item){var i,result;for(this.resetter(item),i=0;i<this.items.length;i=i+1|0)if(this.items[System.Array.index(i,this.items)]==null&&(result=Kusto.Language.Utils.Interlocked.CompareExchange(T,Bridge.ref(this.items,i),item,null),result==null))break}}}});Bridge.define("Kusto.Language.Utils.Optional$1",function(T){return{$kind:"struct",statics:{methods:{op_Implicit:function(value){return new(Kusto.Language.Utils.Optional$1(T).$ctor1)(value)},getDefaultValue:function(){return new(Kusto.Language.Utils.Optional$1(T))}}},props:{Value:Bridge.getDefaultValue(T),HasValue:!1},ctors:{$ctor1:function(value){this.$initialize();this.Value=value;this.HasValue=!0},ctor:function(){this.$initialize()}},methods:{getHashCode:function(){return Bridge.addHash([3587563198,this.Value,this.HasValue])},equals:function(o){return Bridge.is(o,Kusto.Language.Utils.Optional$1(T))?Bridge.equals(this.Value,o.Value)&&Bridge.equals(this.HasValue,o.HasValue):!1},$clone:function(to){return this}}}});Bridge.define("Kusto.Language.Utils.ReadOnlyListComparer$1",function(T){return{inherits:[System.Collections.Generic.IEqualityComparer$1(System.Collections.Generic.IReadOnlyList$1(T))],statics:{fields:{Default:null},ctors:{init:function(){this.Default=new(Kusto.Language.Utils.ReadOnlyListComparer$1(T))(System.Collections.Generic.EqualityComparer$1(T).def)}}},fields:{comparer:null},alias:["equals2",["System$Collections$Generic$IEqualityComparer$1$System$Collections$Generic$IReadOnlyList$1$"+Bridge.getTypeAlias(T)+"$equals2","System$Collections$Generic$IEqualityComparer$1$equals2"],"getHashCode2",["System$Collections$Generic$IEqualityComparer$1$System$Collections$Generic$IReadOnlyList$1$"+Bridge.getTypeAlias(T)+"$getHashCode2","System$Collections$Generic$IEqualityComparer$1$getHashCode2"]],ctors:{ctor:function(comparer){this.$initialize();this.comparer=comparer||function(){throw new System.ArgumentNullException.$ctor1("comparer");}()}},methods:{equals2:function(x,y){if(Bridge.referenceEquals(x,y))return!0;if(x==null||y==null||System.Array.getCount(x,T)!==System.Array.getCount(y,T))return!1;for(var i=0;i<System.Array.getCount(x,T);i=i+1|0)if(!this.comparer[Bridge.geti(this.comparer,"System$Collections$Generic$IEqualityComparer$1$"+Bridge.getTypeAlias(T)+"$equals2","System$Collections$Generic$IEqualityComparer$1$equals2")](System.Array.getItem(x,i,T),System.Array.getItem(y,i,T)))return!1;return!0},getHashCode2:function(list){var $t,hc,table;if(list==null)return 0;if(System.Array.getCount(list,T)===1)return Bridge.getHashCode(System.Array.getItem(list,0,T));hc=0;$t=Bridge.getEnumerator(list,T);try{while($t.moveNext())table=$t.Current,hc=hc+Bridge.getHashCode(table)|0}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return hc}}}});Bridge.define("Kusto.Language.Utils.SafeList$1",function(T){return{inherits:[System.Collections.Generic.IReadOnlyList$1(T),System.Collections.Generic.IEnumerable$1(T),System.Collections.IEnumerable],statics:{fields:{Empty:null},ctors:{init:function(){this.Empty=new(Kusto.Language.Utils.SafeList$1(T).$ctor1)(new(System.Collections.Generic.List$1(T).$ctor2)(0),!1)}},methods:{Copy:function(source,length,newLength){for(var newList=new(System.Collections.Generic.List$1(T).$ctor2)(newLength),i=0;i<length;i=i+1|0)newList.add(source.getItem(i));return newList}}},fields:{_list:null,_length:0,_isOwner:0},props:{Count:{get:function(){return this._length}},IsOwner:{get:function(){return this._isOwner!==0}}},alias:["Count",["System$Collections$Generic$IReadOnlyCollection$1$"+Bridge.getTypeAlias(T)+"$Count","System$Collections$Generic$IReadOnlyCollection$1$Count"],"getItem",["System$Collections$Generic$IReadOnlyList$1$"+Bridge.getTypeAlias(T)+"$getItem","System$Collections$Generic$IReadOnlyList$1$getItem"],"System$Collections$Generic$IEnumerable$1$GetEnumerator","System$Collections$Generic$IEnumerable$1$"+Bridge.getTypeAlias(T)+"$GetEnumerator"],ctors:{$ctor1:function(list,isOwner){isOwner===void 0&&(isOwner=!0);this.$initialize();this._list=list;this._length=list.Count;this._isOwner=isOwner?1:0},ctor:function(items){Kusto.Language.Utils.SafeList$1(T).$ctor1.call(this,items!=null?new(System.Collections.Generic.List$1(T).$ctor1)(items):new(System.Collections.Generic.List$1(T).$ctor2)(0))}},methods:{getItem:function(index){if(index<0||index>=this._length)throw new System.IndexOutOfRangeException.ctor;return this._list.getItem(index)},AddItem:function(item){var wasOwner=Kusto.Language.Utils.Interlocked.CompareExchange$1(Bridge.ref(this,"_isOwner"),0,1),newList;return wasOwner===1?(this._list.add(item),new(Kusto.Language.Utils.SafeList$1(T).$ctor1)(this._list)):(newList=Kusto.Language.Utils.SafeList$1(T).Copy(this._list,this._length,this._length+1|0),newList.add(item),new(Kusto.Language.Utils.SafeList$1(T).$ctor1)(newList))},AddItems:function(items){var wasOwner=Kusto.Language.Utils.Interlocked.CompareExchange$1(Bridge.ref(this,"_isOwner"),0,1),newList;return wasOwner===1?(this._list.AddRange(items),new(Kusto.Language.Utils.SafeList$1(T).$ctor1)(this._list)):(newList=Kusto.Language.Utils.SafeList$1(T).Copy(this._list,this._length,this._length),newList.AddRange(items),new(Kusto.Language.Utils.SafeList$1(T).$ctor1)(newList))},GetEnumerator:function(){return new(Kusto.Language.Utils.SafeList$1.Enumerator(T).$ctor1)(this._list,0,this._length)},System$Collections$Generic$IEnumerable$1$GetEnumerator:function(){return this.GetEnumerator().$clone()},System$Collections$IEnumerable$GetEnumerator:function(){return this.GetEnumerator().$clone()}}}});Bridge.define("Kusto.Language.Utils.SafeList$1.Enumerator",function(T){return{inherits:[System.Collections.Generic.IEnumerator$1(T),System.Collections.IEnumerator],$kind:"nested struct",statics:{methods:{getDefaultValue:function(){return new(Kusto.Language.Utils.SafeList$1.Enumerator(T))}}},fields:{_list:null,_start:0,_end:0,_index:0},props:{Current:{get:function(){return this._index>=this._start&&this._index<this._end?System.Array.getItem(this._list,this._index,T):Bridge.getDefaultValue(T)}},System$Collections$IEnumerator$Current:{get:function(){return this.Current}}},alias:["Current",["System$Collections$Generic$IEnumerator$1$"+Bridge.getTypeAlias(T)+"$Current$1","System$Collections$Generic$IEnumerator$1$Current$1"],"moveNext","System$Collections$IEnumerator$moveNext","Dispose","System$IDisposable$Dispose","reset","System$Collections$IEnumerator$reset"],ctors:{$ctor1:function(list,start,length){this.$initialize();this._list=list;this._start=start;this._end=start+length|0;this._index=start-1|0},ctor:function(){this.$initialize()}},methods:{moveNext:function(){return this._index=this._index+1|0,this._index<this._end},Dispose:function(){},reset:function(){},getHashCode:function(){return Bridge.addHash([3788985113,this._list,this._start,this._end,this._index])},equals:function(o){return Bridge.is(o,Kusto.Language.Utils.SafeList$1.Enumerator(T))?Bridge.equals(this._list,o._list)&&Bridge.equals(this._start,o._start)&&Bridge.equals(this._end,o._end)&&Bridge.equals(this._index,o._index):!1},$clone:function(to){var s=to||new(Kusto.Language.Utils.SafeList$1.Enumerator(T));return s._list=this._list,s._start=this._start,s._end=this._end,s._index=this._index,s}}}});Bridge.define("Kusto.Language.Utils.StringExtensions",{statics:{methods:{Filter:function(text,fnPredicate){var $t,builder,ch;if(System.Linq.Enumerable.from(text,System.Char).all(fnPredicate))return text;builder=new System.Text.StringBuilder;$t=Bridge.getEnumerator(text);try{while($t.moveNext())ch=$t.Current,fnPredicate(ch)&&builder.append(String.fromCharCode(ch))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return builder.toString()}}}});Bridge.define("Kusto.Language.Utils.SubstringMap$1",function(TValue){return{statics:{fields:{NoValue:null},ctors:{init:function(){this.NoValue=new(System.Collections.Generic.KeyValuePair$2(System.String,TValue));this.NoValue=new(System.Collections.Generic.KeyValuePair$2(System.String,TValue).$ctor1)("",Bridge.getDefaultValue(TValue))}}},fields:{_root:null},ctors:{ctor:function(keyValuePairs){this.$initialize();this._root=Kusto.Language.Utils.SubstringMap$1.Node(TValue).From(keyValuePairs)}},methods:{GetLongestMatch:function(text,start){for(var bestNode=null,node=this._root,pos=start;pos<text.length;pos=pos+1|0){if(node=node.GetSubNode(text.charCodeAt(pos)),node==null)break;node.HasValue&&(bestNode=node)}return bestNode!=null?bestNode.Value:Kusto.Language.Utils.SubstringMap$1(TValue).NoValue}}}});Bridge.define("Kusto.Language.Utils.SubstringMap$1.Node",function(TValue){return{$kind:"nested class",statics:{methods:{From:function(keyValuePairs){var $t,node=new(Kusto.Language.Utils.SubstringMap$1.Node(TValue)),pair;$t=Bridge.getEnumerator(keyValuePairs,System.Collections.Generic.KeyValuePair$2(System.String,TValue));try{while($t.moveNext())pair=$t.Current,node.Add(pair)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return node}}},fields:{map:null},props:{Value:null,HasValue:!1},ctors:{init:function(){this.Value=new(System.Collections.Generic.KeyValuePair$2(System.String,TValue))},ctor:function(){this.$initialize()}},methods:{Add:function(pair){var $t,node=this,subNode,ch;$t=Bridge.getEnumerator(pair.key);try{while($t.moveNext())ch=$t.Current,node.map==null?(subNode=new(Kusto.Language.Utils.SubstringMap$1.Node(TValue)),node.map=new(Kusto.Language.Utils.SubstringMap$1.Node.SingleCharMap(TValue))(ch,subNode)):(subNode=node.map.Get(ch),subNode==null&&(subNode=new(Kusto.Language.Utils.SubstringMap$1.Node(TValue)),node.map=node.map.Add(ch,subNode))),node=subNode}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}node.Value=pair;node.HasValue=!0},GetSubNode:function(key){return this.map!=null?this.map.Get(key):null}}}});Bridge.define("Kusto.Language.Utils.SubstringMap$1.Node.CharMap",function(TValue){return{$kind:"nested class"}});Bridge.define("Kusto.Language.Utils.TextKeyedDictionary$1",function(TValue){return{inherits:[System.Collections.Generic.IEnumerable$1(TValue)],fields:{map:null},alias:["GetEnumerator",["System$Collections$Generic$IEnumerable$1$"+Bridge.getTypeAlias(TValue)+"$GetEnumerator","System$Collections$Generic$IEnumerable$1$GetEnumerator"]],ctors:{init:function(){this.map=new(System.Collections.Generic.Dictionary$2(Kusto.Language.Utils.TextKeyedDictionary$1.Key(TValue),TValue).ctor)},ctor:function(){this.$initialize()}},methods:{TryGetValue:function(text,start,length,value){var key=new(Kusto.Language.Utils.TextKeyedDictionary$1.Key(TValue).$ctor2)(text,start,length);return this.map.tryGetValue(key,value)},GetOrAddValue:function(text,newValue){return this.GetOrAddValue$2(text,0,text.length,newValue)},GetOrAddValue$2:function(text,start,length,newValue){var value={},key=new(Kusto.Language.Utils.TextKeyedDictionary$1.Key(TValue).$ctor2)(text,start,length);return this.map.tryGetValue(key,value)||(value.v=newValue,this.map.add(key,value.v)),value.v},GetOrAddValue$1:function(text,evaluator){return this.GetOrAddValue$3(text,0,text.length,evaluator)},GetOrAddValue$3:function(text,start,length,evaluator){var value={},key=new(Kusto.Language.Utils.TextKeyedDictionary$1.Key(TValue).$ctor2)(text,start,length);return this.map.tryGetValue(key,value)||(value.v=evaluator(text,start,length),this.map.add(key,value.v)),value.v},ContainsKey:function(text){return this.ContainsKey$1(text,0,text.length)},ContainsKey$1:function(text,start,length){return start<0||length<1||(start+length|0)>text.length?!1:this.map.containsKey(new(Kusto.Language.Utils.TextKeyedDictionary$1.Key(TValue).$ctor2)(text,start,length))},GetEnumerator:function(){return this.map.Values.GetEnumerator().$clone()},System$Collections$IEnumerable$GetEnumerator:function(){return this.GetEnumerator()}}}});Bridge.define("Kusto.Language.Utils.TextKeyedDictionary$1.Key",function(TValue){return{inherits:function(){return[System.IEquatable$1(Kusto.Language.Utils.TextKeyedDictionary$1.Key(TValue))]},$kind:"nested struct",statics:{fields:{FnvOffsetBias:0,FnvPrime:0},ctors:{init:function(){this.FnvOffsetBias=-2128831035;this.FnvPrime=16777619}},methods:{GetFNVHashCode:function(text,start,length){for(var hashCode=Kusto.Language.Utils.TextKeyedDictionary$1.Key(TValue).FnvOffsetBias,end=start+length|0,i=start;i<end;i=i+1|0)hashCode=Bridge.Int.mul(hashCode^text.charCodeAt(i),Kusto.Language.Utils.TextKeyedDictionary$1.Key(TValue).FnvPrime);return hashCode},getDefaultValue:function(){return new(Kusto.Language.Utils.TextKeyedDictionary$1.Key(TValue))}}},fields:{text:null,start:0,length:0,hash:0},alias:["equalsT","System$IEquatable$1$Kusto$Language$Utils$TextKeyedDictionary$1$Key$"+Bridge.getTypeAlias(TValue)+"$equalsT"],ctors:{$ctor1:function(text){Kusto.Language.Utils.TextKeyedDictionary$1.Key(TValue).$ctor2.call(this,text,0,text.length)},$ctor2:function(text,start,length){this.$initialize();this.text=text;this.start=start;this.length=length;this.hash=Kusto.Language.Utils.TextKeyedDictionary$1.Key(TValue).GetFNVHashCode(text,start,length)},ctor:function(){this.$initialize()}},methods:{equalsT:function(other){if(this.hash!==other.hash||this.length!==other.length)return!1;for(var i=0;i<this.length;i=i+1|0)if(this.text.charCodeAt(this.start+i|0)!==other.text.charCodeAt(other.start+i|0))return!1;return!0},getHashCode:function(){return this.hash},$clone:function(to){var s=to||new(Kusto.Language.Utils.TextKeyedDictionary$1.Key(TValue));return s.text=this.text,s.start=this.start,s.length=this.length,s.hash=this.hash,s}}}});Bridge.define("Kusto.Language.Utils.TextKeyedDictionaryExtensions",{statics:{methods:{ToTextKeyedDictionary:function(TSource,TValue,source,keySelector,valueSelector){var $t,tkd=new(Kusto.Language.Utils.TextKeyedDictionary$1(TValue)),item;$t=Bridge.getEnumerator(source,TSource);try{while($t.moveNext())item=$t.Current,tkd.GetOrAddValue(keySelector(item),valueSelector(item))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return tkd}}}});Bridge.define("Kusto.Language.Utils.UniqueNameTable",{fields:{nameMap:null},ctors:{init:function(){this.nameMap=new(System.Collections.Generic.Dictionary$2(System.String,System.Int32).ctor)},ctor:function(){this.$initialize()}},methods:{AddNames:function(names){var $t,name;$t=Bridge.getEnumerator(names,System.String);try{while($t.moveNext())name=$t.Current,this.AddName(name)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}},AddName:function(name){System.String.isNullOrEmpty(name)||this.nameMap.containsKey(name)||this.nameMap.add(name,0)},GetOrAddName:function(name,baseName){var $t,lastUsedSuffix,suffix,newName;if(baseName===void 0&&(baseName=null),lastUsedSuffix={},this.nameMap.tryGetValue(name,lastUsedSuffix)){for(suffix=lastUsedSuffix.v+1|0;suffix<2147483647;suffix=suffix+1|0)if(newName=(($t=baseName,$t!=null?$t:name)||"")+suffix,!this.nameMap.containsKey(newName))return this.nameMap.setItem(name,suffix),this.nameMap.add(newName,0),newName}else this.nameMap.add(name,0);return name},Clear:function(){this.nameMap.clear()}}});Bridge.define("Kusto.Language.Utils.ValueComparer",{statics:{methods:{AreEquivalent:function(x,y,caseSensitive){var convertedX,convertedY;if(caseSensitive===void 0&&(caseSensitive=!1),x==null&&y==null)return!0;if(x==null||y==null)return!1;var xType=Bridge.getType(x),yType=Bridge.getType(y),comparingType={};return Kusto.Language.Utils.ValueComparer.TryGetBestComparingType(xType,yType,comparingType)?(convertedX=Bridge.referenceEquals(comparingType.v,xType)?x:System.Convert.changeType(x,comparingType.v),convertedY=Bridge.referenceEquals(comparingType.v,yType)?y:System.Convert.changeType(y,comparingType.v),Bridge.referenceEquals(comparingType.v,System.String)?System.String.compare(Bridge.cast(convertedX,System.String),Bridge.cast(convertedY,System.String),!caseSensitive)===0:Bridge.equals(convertedX,convertedY)):!1},TryGetBestComparingType:function(typeA,typeB,comparingType){return Bridge.referenceEquals(typeA,typeB)?(comparingType.v=typeA,!0):Bridge.referenceEquals(typeA,System.String)||Bridge.referenceEquals(typeB,System.String)?(comparingType.v=System.String,!0):Kusto.Language.Utils.ValueComparer.IsNumeric(typeA)&&Kusto.Language.Utils.ValueComparer.IsNumeric(typeB)?(comparingType.v=Bridge.referenceEquals(typeA,System.Double)||Bridge.referenceEquals(typeB,System.Double)?System.Double:Bridge.referenceEquals(typeA,System.Decimal)||Bridge.referenceEquals(typeB,System.Decimal)?System.Decimal:Bridge.referenceEquals(typeA,System.Single)||Bridge.referenceEquals(typeB,System.Single)?System.Single:Bridge.referenceEquals(typeA,System.UInt64)||Bridge.referenceEquals(typeB,System.UInt64)?System.UInt64:System.Int64,!0):(comparingType.v=null,!1)},IsNumeric:function(type){switch(System.Type.getTypeCode(type)){case System.TypeCode.SByte:case System.TypeCode.Byte:case System.TypeCode.Int16:case System.TypeCode.UInt16:case System.TypeCode.Int32:case System.TypeCode.UInt32:case System.TypeCode.Int64:case System.TypeCode.UInt64:case System.TypeCode.Single:case System.TypeCode.Double:case System.TypeCode.Decimal:return!0;default:return!1}}}}});Bridge.define("Kusto.Language.Syntax.DefaultSyntaxVisitor",{inherits:[Kusto.Language.Syntax.SyntaxVisitor],methods:{VisitDirectiveBlock:function(node){this.DefaultVisit(node)},VisitSkippedTokens:function(node){this.DefaultVisit(node)},VisitQueryBlock:function(node){this.DefaultVisit(node)},VisitTypeOfLiteralExpression:function(node){this.DefaultVisit(node)},VisitBadQueryOperator:function(node){this.DefaultVisit(node)},VisitCompoundStringLiteralExpression:function(node){this.DefaultVisit(node)},VisitTokenName:function(node){this.DefaultVisit(node)},VisitBracketedName:function(node){this.DefaultVisit(node)},VisitBracedName:function(node){this.DefaultVisit(node)},VisitWildcardedName:function(node){this.DefaultVisit(node)},VisitBracketedWildcardedName:function(node){this.DefaultVisit(node)},VisitNameDeclaration:function(node){this.DefaultVisit(node)},VisitNameReference:function(node){this.DefaultVisit(node)},VisitLiteralExpression:function(node){this.DefaultVisit(node)},VisitStarExpression:function(node){this.DefaultVisit(node)},VisitAtExpression:function(node){this.DefaultVisit(node)},VisitJsonPair:function(node){this.DefaultVisit(node)},VisitJsonObjectExpression:function(node){this.DefaultVisit(node)},VisitJsonArrayExpression:function(node){this.DefaultVisit(node)},VisitDynamicExpression:function(node){this.DefaultVisit(node)},VisitParenthesizedExpression:function(node){this.DefaultVisit(node)},VisitExpressionList:function(node){this.DefaultVisit(node)},VisitExpressionCouple:function(node){this.DefaultVisit(node)},VisitPrefixUnaryExpression:function(node){this.DefaultVisit(node)},VisitBinaryExpression:function(node){this.DefaultVisit(node)},VisitInExpression:function(node){this.DefaultVisit(node)},VisitHasAnyExpression:function(node){this.DefaultVisit(node)},VisitHasAllExpression:function(node){this.DefaultVisit(node)},VisitBetweenExpression:function(node){this.DefaultVisit(node)},VisitFunctionCallExpression:function(node){this.DefaultVisit(node)},VisitToScalarExpression:function(node){this.DefaultVisit(node)},VisitToTableExpression:function(node){this.DefaultVisit(node)},VisitMaterializedViewCombineExpression:function(node){this.DefaultVisit(node)},VisitMaterializedViewCombineNameClause:function(node){this.DefaultVisit(node)},VisitMaterializedViewCombineClause:function(node){this.DefaultVisit(node)},VisitSimpleNamedExpression:function(node){this.DefaultVisit(node)},VisitRenameList:function(node){this.DefaultVisit(node)},VisitCompoundNamedExpression:function(node){this.DefaultVisit(node)},VisitBracketedExpression:function(node){this.DefaultVisit(node)},VisitPathExpression:function(node){this.DefaultVisit(node)},VisitElementExpression:function(node){this.DefaultVisit(node)},VisitPipeExpression:function(node){this.DefaultVisit(node)},VisitRangeOperator:function(node){this.DefaultVisit(node)},VisitNamedParameter:function(node){this.DefaultVisit(node)},VisitConsumeOperator:function(node){this.DefaultVisit(node)},VisitCountOperator:function(node){this.DefaultVisit(node)},VisitCountAsIdentifierClause:function(node){this.DefaultVisit(node)},VisitExecuteAndCacheOperator:function(node){this.DefaultVisit(node)},VisitExtendOperator:function(node){this.DefaultVisit(node)},VisitFacetOperator:function(node){this.DefaultVisit(node)},VisitFacetWithOperatorClause:function(node){this.DefaultVisit(node)},VisitFacetWithExpressionClause:function(node){this.DefaultVisit(node)},VisitFilterOperator:function(node){this.DefaultVisit(node)},VisitGetSchemaOperator:function(node){this.DefaultVisit(node)},VisitFindOperator:function(node){this.DefaultVisit(node)},VisitDataScopeClause:function(node){this.DefaultVisit(node)},VisitTypedColumnReference:function(node){this.DefaultVisit(node)},VisitFindInClause:function(node){this.DefaultVisit(node)},VisitFindProjectClause:function(node){this.DefaultVisit(node)},VisitPackExpression:function(node){this.DefaultVisit(node)},VisitNameAndTypeDeclaration:function(node){this.DefaultVisit(node)},VisitPrimitiveTypeExpression:function(node){this.DefaultVisit(node)},VisitSearchOperator:function(node){this.DefaultVisit(node)},VisitForkOperator:function(node){this.DefaultVisit(node)},VisitNameEqualsClause:function(node){this.DefaultVisit(node)},VisitForkExpression:function(node){this.DefaultVisit(node)},VisitMakeSeriesOperator:function(node){this.DefaultVisit(node)},VisitMakeSeriesExpression:function(node){this.DefaultVisit(node)},VisitDefaultExpressionClause:function(node){this.DefaultVisit(node)},VisitMakeSeriesOnClause:function(node){this.DefaultVisit(node)},VisitMakeSeriesFromClause:function(node){this.DefaultVisit(node)},VisitMakeSeriesToClause:function(node){this.DefaultVisit(node)},VisitMakeSeriesStepClause:function(node){this.DefaultVisit(node)},VisitMakeSeriesInRangeClause:function(node){this.DefaultVisit(node)},VisitMakeSeriesFromToStepClause:function(node){this.DefaultVisit(node)},VisitMakeSeriesByClause:function(node){this.DefaultVisit(node)},VisitMvExpandOperator:function(node){this.DefaultVisit(node)},VisitMvExpandExpression:function(node){this.DefaultVisit(node)},VisitMvExpandRowLimitClause:function(node){this.DefaultVisit(node)},VisitMvApplyOperator:function(node){this.DefaultVisit(node)},VisitMvApplyExpression:function(node){this.DefaultVisit(node)},VisitMvApplyRowLimitClause:function(node){this.DefaultVisit(node)},VisitMvApplyContextIdClause:function(node){this.DefaultVisit(node)},VisitMvApplySubqueryExpression:function(node){this.DefaultVisit(node)},VisitToTypeOfClause:function(node){this.DefaultVisit(node)},VisitEvaluateSchemaClause:function(node){this.DefaultVisit(node)},VisitEvaluateOperator:function(node){this.DefaultVisit(node)},VisitParseOperator:function(node){this.DefaultVisit(node)},VisitParseWhereOperator:function(node){this.DefaultVisit(node)},VisitParseKvWithClause:function(node){this.DefaultVisit(node)},VisitParseKvOperator:function(node){this.DefaultVisit(node)},VisitPartitionOperator:function(node){this.DefaultVisit(node)},VisitPartitionQuery:function(node){this.DefaultVisit(node)},VisitPartitionScope:function(node){this.DefaultVisit(node)},VisitPartitionSubquery:function(node){this.DefaultVisit(node)},VisitProjectOperator:function(node){this.DefaultVisit(node)},VisitProjectAwayOperator:function(node){this.DefaultVisit(node)},VisitProjectKeepOperator:function(node){this.DefaultVisit(node)},VisitProjectRenameOperator:function(node){this.DefaultVisit(node)},VisitProjectReorderOperator:function(node){this.DefaultVisit(node)},VisitSampleOperator:function(node){this.DefaultVisit(node)},VisitSampleDistinctOperator:function(node){this.DefaultVisit(node)},VisitEntityGroup:function(node){this.DefaultVisit(node)},VisitReduceByOperator:function(node){this.DefaultVisit(node)},VisitReduceByWithClause:function(node){this.DefaultVisit(node)},VisitSummarizeOperator:function(node){this.DefaultVisit(node)},VisitMacroExpandScopeReferenceName:function(node){this.DefaultVisit(node)},VisitMacroExpandOperator:function(node){this.DefaultVisit(node)},VisitSummarizeByClause:function(node){this.DefaultVisit(node)},VisitDistinctOperator:function(node){this.DefaultVisit(node)},VisitTakeOperator:function(node){this.DefaultVisit(node)},VisitSortOperator:function(node){this.DefaultVisit(node)},VisitOrderedExpression:function(node){this.DefaultVisit(node)},VisitOrderingClause:function(node){this.DefaultVisit(node)},VisitOrderingNullsClause:function(node){this.DefaultVisit(node)},VisitTopHittersOperator:function(node){this.DefaultVisit(node)},VisitTopHittersByClause:function(node){this.DefaultVisit(node)},VisitTopOperator:function(node){this.DefaultVisit(node)},VisitTopNestedOperator:function(node){this.DefaultVisit(node)},VisitTopNestedClause:function(node){this.DefaultVisit(node)},VisitTopNestedWithOthersClause:function(node){this.DefaultVisit(node)},VisitUnionOperator:function(node){this.DefaultVisit(node)},VisitAsOperator:function(node){this.DefaultVisit(node)},VisitSerializeOperator:function(node){this.DefaultVisit(node)},VisitInvokeOperator:function(node){this.DefaultVisit(node)},VisitRenderOperator:function(node){this.DefaultVisit(node)},VisitMakeGraphOperator:function(node){this.DefaultVisit(node)},VisitMakeGraphWithTablesAndKeysClause:function(node){this.DefaultVisit(node)},VisitMakeGraphWithImplicitIdClause:function(node){this.DefaultVisit(node)},VisitGraphMarkComponentsOperator:function(node){this.DefaultVisit(node)},VisitMakeGraphTableAndKeyClause:function(node){this.DefaultVisit(node)},VisitMakeGraphPartitionedByClause:function(node){this.DefaultVisit(node)},VisitGraphMergeOperator:function(node){this.DefaultVisit(node)},VisitGraphToTableOperator:function(node){this.DefaultVisit(node)},VisitGraphToTableOutputClause:function(node){this.DefaultVisit(node)},VisitGraphToTableAsClause:function(node){this.DefaultVisit(node)},VisitGraphMatchOperator:function(node){this.DefaultVisit(node)},VisitGraphMatchPattern:function(node){this.DefaultVisit(node)},VisitGraphMatchPatternNode:function(node){this.DefaultVisit(node)},VisitGraphMatchPatternEdge:function(node){this.DefaultVisit(node)},VisitGraphMatchPatternEdgeRange:function(node){this.DefaultVisit(node)},VisitWhereClause:function(node){this.DefaultVisit(node)},VisitProjectClause:function(node){this.DefaultVisit(node)},VisitNameReferenceList:function(node){this.DefaultVisit(node)},VisitRenderWithClause:function(node){this.DefaultVisit(node)},VisitPrintOperator:function(node){this.DefaultVisit(node)},VisitAliasStatement:function(node){this.DefaultVisit(node)},VisitLetStatement:function(node){this.DefaultVisit(node)},VisitFunctionDeclaration:function(node){this.DefaultVisit(node)},VisitFunctionParameters:function(node){this.DefaultVisit(node)},VisitFunctionParameter:function(node){this.DefaultVisit(node)},VisitDefaultValueDeclaration:function(node){this.DefaultVisit(node)},VisitFunctionBody:function(node){this.DefaultVisit(node)},VisitSchemaTypeExpression:function(node){this.DefaultVisit(node)},VisitExpressionStatement:function(node){this.DefaultVisit(node)},VisitMaterializeExpression:function(node){this.DefaultVisit(node)},VisitSetOptionStatement:function(node){this.DefaultVisit(node)},VisitOptionValueClause:function(node){this.DefaultVisit(node)},VisitQueryParametersStatement:function(node){this.DefaultVisit(node)},VisitRestrictStatement:function(node){this.DefaultVisit(node)},VisitPatternStatement:function(node){this.DefaultVisit(node)},VisitPatternDeclaration:function(node){this.DefaultVisit(node)},VisitPatternPathParameter:function(node){this.DefaultVisit(node)},VisitPatternMatch:function(node){this.DefaultVisit(node)},VisitPatternPathValue:function(node){this.DefaultVisit(node)},VisitDataScopeExpression:function(node){this.DefaultVisit(node)},VisitDataTableExpression:function(node){this.DefaultVisit(node)},VisitRowSchema:function(node){this.DefaultVisit(node)},VisitEvaluateRowSchema:function(node){this.DefaultVisit(node)},VisitExternalDataExpression:function(node){this.DefaultVisit(node)},VisitContextualDataTableExpression:function(node){this.DefaultVisit(node)},VisitExternalDataWithClause:function(node){this.DefaultVisit(node)},VisitJoinOperator:function(node){this.DefaultVisit(node)},VisitLookupOperator:function(node){this.DefaultVisit(node)},VisitJoinOnClause:function(node){this.DefaultVisit(node)},VisitJoinWhereClause:function(node){this.DefaultVisit(node)},VisitScanOperator:function(node){this.DefaultVisit(node)},VisitAssertSchemaOperator:function(node){this.DefaultVisit(node)},VisitScanDeclareClause:function(node){this.DefaultVisit(node)},VisitScanOrderByClause:function(node){this.DefaultVisit(node)},VisitScanPartitionByClause:function(node){this.DefaultVisit(node)},VisitScanStepOutput:function(node){this.DefaultVisit(node)},VisitScanStep:function(node){this.DefaultVisit(node)},VisitScanComputationClause:function(node){this.DefaultVisit(node)},VisitScanAssignment:function(node){this.DefaultVisit(node)},VisitPartitionByOperator:function(node){this.DefaultVisit(node)},VisitPartitionByIdClause:function(node){this.DefaultVisit(node)},VisitCommandWithValueClause:function(node){this.DefaultVisit(node)},VisitCommandWithPropertyListClause:function(node){this.DefaultVisit(node)},VisitUnknownCommand:function(node){this.DefaultVisit(node)},VisitCustomCommand:function(node){this.DefaultVisit(node)},VisitCommandAndSkippedTokens:function(node){this.DefaultVisit(node)},VisitBadCommand:function(node){this.DefaultVisit(node)},VisitCommandBlock:function(node){this.DefaultVisit(node)},VisitCustom:function(node){this.DefaultVisit(node)},VisitList:function(list){this.DefaultVisit(list)},VisitSeparatedElement:function(separatedElement){this.DefaultVisit(separatedElement)}}});Bridge.define("Kusto.Language.Binding.Binder.BinderAvailabilityContext",{inherits:[Kusto.Language.Symbols.CustomAvailabilityContext],$kind:"nested class",fields:{_location:null},props:{Location:{get:function(){return this._location}}},ctors:{ctor:function(location){this.$initialize();Kusto.Language.Symbols.CustomAvailabilityContext.ctor.call(this);this._location=location}}});Bridge.define("Kusto.Language.Binding.Binder.BinderCallContext",{inherits:[Kusto.Language.Symbols.CustomReturnTypeContext],$kind:"nested class",statics:{fields:{Nowhere:null},ctors:{init:function(){this.Nowhere=new Kusto.Language.Syntax.NameReference.$ctor2(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken))}}},fields:{_binder:null,_location:null,_arguments:null,_argumentTypes:null,_argumentParameters:null,_signature:null},props:{Location:{get:function(){return this._location}},Arguments:{get:function(){return this._arguments}},ArgumentTypes:{get:function(){return this._argumentTypes}},ArgumentParameters:{get:function(){return this._argumentParameters}},Signature:{get:function(){return this._signature}},RowScope:{get:function(){return this._binder.RowScopeOrEmpty}}},ctors:{ctor:function(binder,location,$arguments,argumentTypes,argumentParameters,signature){this.$initialize();Kusto.Language.Symbols.CustomReturnTypeContext.ctor.call(this);this._binder=binder;this._location=location;this._arguments=$arguments;this._argumentTypes=argumentTypes;this._argumentParameters=argumentParameters;this._signature=signature}},methods:{GetReferencedSymbol:function(name){var info=this._binder.BindName(name,Kusto.Language.Symbols.SymbolMatch.Default,Kusto.Language.Binding.Binder.BinderCallContext.Nowhere);return info!=null?info.ReferencedSymbol:null},GetResultType:function(name){var info=this._binder.BindName(name,Kusto.Language.Symbols.SymbolMatch.Default,Kusto.Language.Binding.Binder.BinderCallContext.Nowhere);return info!=null?info.ResultType:null},GetResultName:function(expr,defaultName){return defaultName===void 0&&(defaultName=""),Kusto.Language.Binding.Binder.GetExpressionResultName(expr,defaultName,this.RowScope)}}});Bridge.define("Kusto.Language.Binding.SemanticInfo",{statics:{fields:{Empty:null},ctors:{init:function(){this.Empty=new Kusto.Language.Binding.SemanticInfo.$ctor5(null)}}},fields:{_referencedSymbolOrSignature:null},props:{ReferencedSymbol:{get:function(){var sig;return(sig=Bridge.as(this._referencedSymbolOrSignature,Kusto.Language.Symbols.Signature))!=null?sig.Symbol:Bridge.as(this._referencedSymbolOrSignature,Kusto.Language.Symbols.Symbol)}},ReferencedSignature:{get:function(){var sig,fn,vs,vfn,eg;return(sig=Bridge.as(this._referencedSymbolOrSignature,Kusto.Language.Symbols.Signature))!=null?sig:(fn=Bridge.as(this._referencedSymbolOrSignature,Kusto.Language.Symbols.FunctionSymbol))!=null&&System.Array.getCount(fn.Signatures,Kusto.Language.Symbols.Signature)===1?System.Array.getItem(fn.Signatures,0,Kusto.Language.Symbols.Signature):(vs=Bridge.as(this._referencedSymbolOrSignature,Kusto.Language.Symbols.VariableSymbol))!=null&&(vfn=Bridge.as(vs.Type,Kusto.Language.Symbols.FunctionSymbol))!=null&&System.Array.getCount(vfn.Signatures,Kusto.Language.Symbols.Signature)===1?System.Array.getItem(vfn.Signatures,0,Kusto.Language.Symbols.Signature):(eg=Bridge.as(this._referencedSymbolOrSignature,Kusto.Language.Symbols.EntityGroupSymbol))!=null?eg.Signature:null}},ResultType:null,IsConstant:!1,Diagnostics:null,CalledFunctionInfo:null,Alternates:null},ctors:{$ctor7:function(referenced,result,diagnostics,isConstant,calledFunctionInfo,alternates){this.$initialize();this._referencedSymbolOrSignature=referenced;this.ResultType=result;this.Diagnostics=diagnostics!=null?Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Diagnostic,diagnostics):Kusto.Language.Diagnostic.NoDiagnostics;this.IsConstant=isConstant;this.CalledFunctionInfo=calledFunctionInfo;this.Alternates=alternates},$ctor3:function(referencedSymbol,result,diagnostics,isConstant,calledFunctionInfo){diagnostics===void 0&&(diagnostics=null);isConstant===void 0&&(isConstant=!1);calledFunctionInfo===void 0&&(calledFunctionInfo=null);Kusto.Language.Binding.SemanticInfo.$ctor7.call(this,referencedSymbol,result,diagnostics,isConstant,calledFunctionInfo,null)},$ctor1:function(referencedSignature,result,diagnostics,isConstant,calledFunctionInfo){diagnostics===void 0&&(diagnostics=null);isConstant===void 0&&(isConstant=!1);calledFunctionInfo===void 0&&(calledFunctionInfo=null);Kusto.Language.Binding.SemanticInfo.$ctor7.call(this,referencedSignature,result,diagnostics,isConstant,calledFunctionInfo,null)},$ctor5:function(result,diagnostics,isConstant,calledFunctionInfo){diagnostics===void 0&&(diagnostics=null);isConstant===void 0&&(isConstant=!1);calledFunctionInfo===void 0&&(calledFunctionInfo=null);Kusto.Language.Binding.SemanticInfo.$ctor3.call(this,null,result,diagnostics,isConstant,calledFunctionInfo)},$ctor2:function(referencedSymbol,result,diagnostic){Kusto.Language.Binding.SemanticInfo.$ctor3.call(this,referencedSymbol,result,diagnostic!=null?function(_o1){return _o1.add(diagnostic),_o1}(new(System.Collections.Generic.List$1(Kusto.Language.Diagnostic).ctor)).AsReadOnly():Kusto.Language.Diagnostic.NoDiagnostics)},ctor:function(referencedSignature,result,diagnostic){Kusto.Language.Binding.SemanticInfo.$ctor1.call(this,referencedSignature,result,diagnostic!=null?function(_o2){return _o2.add(diagnostic),_o2}(new(System.Collections.Generic.List$1(Kusto.Language.Diagnostic).ctor)).AsReadOnly():Kusto.Language.Diagnostic.NoDiagnostics)},$ctor4:function(result,diagnostic){Kusto.Language.Binding.SemanticInfo.$ctor2.call(this,null,result,diagnostic)},$ctor6:function(diagnostics){Kusto.Language.Binding.SemanticInfo.$ctor3.call(this,null,null,diagnostics)}},methods:{WithReferencedSymbol:function(symbol){return Bridge.referenceEquals(this.ReferencedSymbol,symbol)?this:new Kusto.Language.Binding.SemanticInfo.$ctor7(symbol,this.ResultType,this.Diagnostics,this.IsConstant,this.CalledFunctionInfo,this.Alternates)},WithReferencedSignature:function(signature){return Bridge.referenceEquals(this.ReferencedSignature,signature)?this:new Kusto.Language.Binding.SemanticInfo.$ctor7(signature,this.ResultType,this.Diagnostics,this.IsConstant,this.CalledFunctionInfo,this.Alternates)},WithResultType:function(type){return Bridge.referenceEquals(this.ResultType,type)?this:new Kusto.Language.Binding.SemanticInfo.$ctor7(this.ReferencedSymbol,type,this.Diagnostics,this.IsConstant,this.CalledFunctionInfo,this.Alternates)},WithDiagnostics:function(diagnostics){return Bridge.referenceEquals(this.Diagnostics,diagnostics)?this:new Kusto.Language.Binding.SemanticInfo.$ctor7(this.ReferencedSymbol,this.ResultType,diagnostics,this.IsConstant,this.CalledFunctionInfo,this.Alternates)},WithIsConstant:function(isConstant){return this.IsConstant!==isConstant?new Kusto.Language.Binding.SemanticInfo.$ctor7(this.ReferencedSymbol,this.ResultType,this.Diagnostics,isConstant,this.CalledFunctionInfo,this.Alternates):this},WithCalledFunctionInfo:function(calledFunctionInfo){return Bridge.referenceEquals(this.CalledFunctionInfo,calledFunctionInfo)?this:new Kusto.Language.Binding.SemanticInfo.$ctor7(this.ReferencedSymbol,this.ResultType,this.Diagnostics,this.IsConstant,calledFunctionInfo,this.Alternates)},WithAlternates:function(alternates){return Bridge.referenceEquals(this.Alternates,alternates)?this:new Kusto.Language.Binding.SemanticInfo.$ctor7(this.ReferencedSymbol,this.ResultType,this.Diagnostics,this.IsConstant,this.CalledFunctionInfo,alternates)}}});Bridge.define("Kusto.Language.Binding.CallSiteInfo.Comparer",{inherits:[System.Collections.Generic.IEqualityComparer$1(Kusto.Language.Binding.CallSiteInfo)],$kind:"nested class",statics:{fields:{Instance:null},ctors:{init:function(){this.Instance=new Kusto.Language.Binding.CallSiteInfo.Comparer}}},alias:["equals2",["System$Collections$Generic$IEqualityComparer$1$Kusto$Language$Binding$CallSiteInfo$equals2","System$Collections$Generic$IEqualityComparer$1$equals2"],"getHashCode2",["System$Collections$Generic$IEqualityComparer$1$Kusto$Language$Binding$CallSiteInfo$getHashCode2","System$Collections$Generic$IEqualityComparer$1$getHashCode2"]],methods:{equals2:function(x,y){var i,lx,ly;if(!Bridge.referenceEquals(x.Signature,y.Signature)||System.Array.getCount(x.Locals,Kusto.Language.Symbols.VariableSymbol)!==System.Array.getCount(y.Locals,Kusto.Language.Symbols.VariableSymbol))return!1;for(i=0;i<System.Array.getCount(x.Locals,Kusto.Language.Symbols.VariableSymbol);i=i+1|0)if(lx=System.Array.getItem(x.Locals,i,Kusto.Language.Symbols.VariableSymbol),ly=System.Array.getItem(y.Locals,i,Kusto.Language.Symbols.VariableSymbol),!Bridge.referenceEquals(lx.Name,ly.Name)||!Bridge.referenceEquals(lx.Type,ly.Type)||lx.IsConstant!==ly.IsConstant||!Bridge.equals(lx.ConstantValue,ly.ConstantValue))return!1;return!0},getHashCode2:function(obj){return Bridge.getHashCode(obj.Signature)}}});Bridge.define("Kusto.Language.Editor.AnnotatedParserFinder$1",function(TInput){return{inherits:[Kusto.Language.Parsing.ParserVisitor$3(TInput,System.Int32,System.Int32)],statics:{fields:{MaxDepth:0},ctors:{init:function(){this.MaxDepth=400}},methods:{FindParsers:function(source,findOffset,root,start){var finder=new(Kusto.Language.Editor.AnnotatedParserFinder$1(TInput))(source,findOffset,null);return finder.Find(root,start),finder._results},FindPaths:function(source,findOffset,root,start){var paths=new(System.Collections.Generic.List$1(Kusto.Language.Editor.ParserPath$1(TInput)).ctor),finder=new(Kusto.Language.Editor.AnnotatedParserFinder$1(TInput))(source,findOffset,paths);return finder.Find(root,start),paths}}},fields:{_source:null,_findOffset:0,_path:null,_results:null,_pathResults:null,_prevWasMissing:!1,_missingCount:0,_listMissingCount:0,_depth:0},ctors:{ctor:function(source,findOffset,paths){this.$initialize();Kusto.Language.Parsing.ParserVisitor$3(TInput,System.Int32,System.Int32).ctor.call(this);this._source=source;this._findOffset=findOffset;this._prevWasMissing=!1;this._path=new(System.Collections.Generic.List$1(Kusto.Language.Parsing.Parser$1(TInput)).ctor);this._results=new(System.Collections.Generic.List$1(Kusto.Language.Parsing.Parser$1(TInput)).ctor);this._pathResults=paths}},methods:{Find:function(parser,start){if(this._depth>=Kusto.Language.Editor.AnnotatedParserFinder$1(TInput).MaxDepth)return-1;this._depth=this._depth+1|0;var len;return this._path.add(parser),parser.IsHidden?len=parser.Scan(this._source,start):(this._findOffset===start&&!this._prevWasMissing&&System.Array.getCount(parser.Annotations,System.Object)>0&&(this._results.Count===0||this._missingCount<=this._listMissingCount)&&(this._missingCount<this._listMissingCount&&this._results.clear(),this._results.add(parser),this._listMissingCount=this._missingCount,this._pathResults!=null&&this._pathResults.add(Kusto.Language.Editor.ParserPath$1(TInput).From(this._path))),len=parser.Accept$1(System.Int32,System.Int32,this,start)),this._path.removeAt(this._path.Count-1|0),this._depth=this._depth-1|0,len},VisitApply:function(TLeft,TOutput,parser,start){var leftLen=this.Find(parser.LeftParser,start),rightLen;if(leftLen<0)return leftLen;for(;;)if(rightLen=this.Find(parser.RightParser,start+leftLen|0),rightLen<0)return parser.ApplyKind===Kusto.Language.Parsing.ApplyKind.One?(-leftLen|0)+rightLen|0:leftLen;else if(leftLen=leftLen+rightLen|0,parser.ApplyKind!==Kusto.Language.Parsing.ApplyKind.ZeroOrMore)return leftLen},VisitBest$1:function(TOutput,parser,start){return this.VisitFirstOrBest(parser.Parsers,start,!0)},VisitBest:function(parser,start){return this.VisitFirstOrBest(parser.Parsers,start,!0)},VisitFirstOrBest:function(parsers,start,isBest){for(var p,n,oldPrevWasMissing=this._prevWasMissing,oldMissingCount=this._missingCount,bestLen=-1,bestMissingCount=oldMissingCount,bestPrevWasMissing=oldPrevWasMissing,i=0;i<System.Array.getCount(parsers,Kusto.Language.Parsing.Parser$1(TInput));i=i+1|0)p=System.Array.getItem(parsers,i,Kusto.Language.Parsing.Parser$1(TInput)),this._prevWasMissing=oldPrevWasMissing,this._missingCount=oldMissingCount,n=this.Find(p,start),i===0?(bestLen=n,bestMissingCount=this._missingCount,bestPrevWasMissing=this._prevWasMissing):n<0&&bestLen<0&&n<bestLen?(bestLen=n,bestMissingCount=this._missingCount,bestPrevWasMissing=this._prevWasMissing):n>0&&(bestLen<0||isBest&&n>bestLen)&&(bestLen=n,bestMissingCount=this._missingCount,bestPrevWasMissing=this._prevWasMissing);return this._missingCount=bestMissingCount,this._prevWasMissing=bestPrevWasMissing,bestLen},VisitConvert:function(TOutput,parser,start){return this.Find(parser.Pattern,start)},VisitFails:function(parser,start){var len=parser.Scan(this._source,start);return this._prevWasMissing=!1,len},VisitFirst$1:function(TOutput,parser,start){return this.VisitFirstOrBest(parser.Parsers,start,!1)},VisitFirst:function(parser,start){return this.VisitFirstOrBest(parser.Parsers,start,!1)},VisitForward:function(TOutput,parser,start){return this.Find(parser.DeferredParser(),start)},VisitIf$1:function(TOutput,parser,start){var oldPrevWasMissing=this._prevWasMissing,oldMissingCount=this._missingCount,length=parser.Test.Scan(this._source,start);return length>=0?(this.Find(parser.Test,start),length=this.Find(parser.Parser,start)):length=this.Find(parser.Test,start),length<0&&(this._prevWasMissing=oldPrevWasMissing,this._missingCount=oldMissingCount),length},VisitIf:function(parser,start){var oldPrevWasMissing=this._prevWasMissing,oldMissingCount=this._missingCount,length=parser.Test.Scan(this._source,start);return length=length>=0?this.Find(parser.Parser,start):this.Find(parser.Test,start),length<0&&(this._prevWasMissing=oldPrevWasMissing,this._missingCount=oldMissingCount),length},VisitLimit:function(TOutput,parser,start){var len=parser.Limiter.Scan(this._source,start),oldSource,result;return len>0?(oldSource=this._source,this._source=new(Kusto.Language.Parsing.LimitSource$1(TInput))(this._source,start+len|0),result=this.Find(parser.Limited,start),this._source=oldSource,result):-1},VisitMap:function(TOutput,parser,start){var len=parser.Scan(this._source,start);return this._prevWasMissing=len>=0,len},VisitMatch:function(parser,start){var len=parser.Consumer(this._source,start);return len>=0&&(this._prevWasMissing=!1),len},VisitMatch$1:function(TOutput,parser,start){var len=parser.Consumer(this._source,start);return len>=0&&(this._prevWasMissing=!1),len},VisitNot:function(parser,start){if(this._prevWasMissing=!1,this._source.IsEnd(start))return 0;var len=parser.Pattern.Scan(this._source,start);return len>=0?-1:1},VisitOneOrMore:function(parser,start){var len=this.Find(parser.Parser,start),totalLen;if(len<0)return len;for(totalLen=0;len>0;)totalLen=totalLen+len|0,len=this.Find(parser.Parser,start+totalLen|0);return totalLen},VisitOptional:function(TOutput,parser,start){var oldPrevWasMissing=this._prevWasMissing,len=this.Find(parser.Parser,start);return len<0?(this._prevWasMissing=oldPrevWasMissing,0):len},VisitProduce:function(TOutput,parser,start){return this.Find(parser.Parser,start)},VisitRequired:function(TOutput,parser,start){var len=this.Find(parser.Parser,start);return len<0?(this._prevWasMissing=!0,this._missingCount=this._missingCount+1|0,0):len},VisitRule:function(TOutput,parser,start){return this.VisitSequence$1(parser.Parsers,start)},VisitSequence:function(parser,start){return this.VisitSequence$1(parser.Parsers,start)},VisitSequence$1:function(parsers,start){for(var len,totalLen=0,i=0;i<System.Array.getCount(parsers,Kusto.Language.Parsing.Parser$1(TInput));i=i+1|0){if(len=this.Find(System.Array.getItem(parsers,i,Kusto.Language.Parsing.Parser$1(TInput)),start+totalLen|0),len<0)return len-totalLen|0;totalLen=totalLen+len|0}return totalLen},VisitZeroOrMore:function(parser,start){var totalLen=0,len,len1;if(parser.ZeroOrOne)len=this.Find(parser.Parser,start),len>0&&(totalLen=totalLen+len|0,len=this.Find(parser.Parser,start+len|0),len>0&&(totalLen=totalLen+len|0));else for(len1=this.Find(parser.Parser,start);len1>0;)totalLen=totalLen+len1|0,len1=this.Find(parser.Parser,start+totalLen|0);return totalLen}}}});Bridge.define("Kusto.Language.Editor.ApplyAction",{inherits:[Kusto.Language.Editor.CodeAction],props:{Data:null},ctors:{ctor:function(kind,title,description,data){this.$initialize();Kusto.Language.Editor.CodeAction.ctor.call(this,kind,title,description);this.Data=data||Kusto.Language.Utils.EmptyReadOnlyList$1(System.String).Instance}},methods:{New:function(kind,title,description){return this.New$1(kind,title,description,this.Data)},WithData$1:function(data){return Bridge.referenceEquals(this.Data,data)?this:this.New$1(this.Kind,this.Title,this.Description,data)},WithData$2:function(data){return data===void 0&&(data=[]),this.WithData$1(Bridge.cast(data,System.Collections.Generic.IReadOnlyList$1(System.String)))},WithData:function(data){return this.WithData$1(Kusto.Language.Utils.ListExtensions.ToReadOnly(System.String,data))},AddData:function(additionalData){return this.WithData(System.Linq.Enumerable.from(this.Data,System.String).concat(additionalData))},AddData$1:function(additionalData){return additionalData===void 0&&(additionalData=[]),this.AddData(Bridge.cast(additionalData,System.Collections.Generic.IEnumerable$1(System.String)))},RemoveData:function(count){return this.WithData(System.Linq.Enumerable.from(this.Data,System.String).take(System.Array.getCount(this.Data,System.String)-count|0))}}});Bridge.define("Kusto.Language.Editor.AvoidJoinWithoutKindAnalyzer",{inherits:[Kusto.Language.Editor.KustoAnalyzer],statics:{fields:{_diagnostic:null},ctors:{init:function(){this._diagnostic=new Kusto.Language.Diagnostic.$ctor2(Kusto.Language.Editor.KustoAnalyzerCodes.AvoidJoinWithoutKind,Kusto.Language.DiagnosticCategory.Correctness,Kusto.Language.DiagnosticSeverity.Warning,"Avoid using joins without specifying the join kind.","Avoid using joins without specifying the join kind. The default join behavior may be unexpected.")}}},methods:{GetDiagnostics:function(){return System.Array.init([Kusto.Language.Editor.AvoidJoinWithoutKindAnalyzer._diagnostic],Kusto.Language.Diagnostic)},Analyze:function(code,diagnostics,cancellationToken){var $t,node;$t=Bridge.getEnumerator(code.Syntax.GetDescendants(Kusto.Language.Syntax.JoinOperator,function(op){return op.ConditionClause!=null&&!System.Linq.Enumerable.from(op.Parameters,Kusto.Language.Syntax.NamedParameter).any(function(p){return Bridge.referenceEquals(p.Name.SimpleName,"kind")})}),Kusto.Language.Syntax.JoinOperator);try{while($t.moveNext())node=$t.Current,diagnostics.add(Kusto.Language.Editor.AvoidJoinWithoutKindAnalyzer._diagnostic.WithLocation(node.JoinKeyword))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}}});Bridge.define("Kusto.Language.Editor.AvoidStrlenWithDynamicAnalyzer",{inherits:[Kusto.Language.Editor.KustoAnalyzer],statics:{fields:{_diagnostic:null},ctors:{init:function(){this._diagnostic=new Kusto.Language.Diagnostic.$ctor2(Kusto.Language.Editor.KustoAnalyzerCodes.AvoidStrlenWithDynamic,Kusto.Language.DiagnosticCategory.Performance,Kusto.Language.DiagnosticSeverity.Suggestion,"Avoid using the strlen() with dynamic arguments.",System.String.format("Avoid using strlen() with dynamic arguments that may be large bags or arrays.",null))}}},methods:{GetDiagnostics:function(){return System.Array.init([Kusto.Language.Editor.AvoidStrlenWithDynamicAnalyzer._diagnostic],Kusto.Language.Diagnostic)},Analyze:function(code,diagnostics,cancellationToken){var $t,fc;$t=Bridge.getEnumerator(code.Syntax.GetDescendants(Kusto.Language.Syntax.FunctionCallExpression),Kusto.Language.Syntax.FunctionCallExpression);try{while($t.moveNext())fc=$t.Current,Bridge.referenceEquals(fc.ReferencedSymbol,Kusto.Language.Functions.Strlen)&&fc.ArgumentList.Expressions.Count===1&&Kusto.Language.Symbols.TypeFacts.IsDynamicArrayOrBag(fc.ArgumentList.Expressions.getItem$1(0).Element$1.ResultType)&&diagnostics.add(Kusto.Language.Editor.AvoidStrlenWithDynamicAnalyzer._diagnostic.WithLocation(fc))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}}});Bridge.define("Kusto.Language.Editor.AvoidUsingContainsAnalyzer",{inherits:[Kusto.Language.Editor.KustoAnalyzer],statics:{fields:{_diagnostic:null},ctors:{init:function(){this._diagnostic=new Kusto.Language.Diagnostic.$ctor2(Kusto.Language.Editor.KustoAnalyzerCodes.AvoidUsingContains,Kusto.Language.DiagnosticCategory.Performance,Kusto.Language.DiagnosticSeverity.Suggestion,"Avoid using contains operator",(System.String.format("Avoid using the 'contains' operator as it has a high compute price.",null)||"")+"\n"+(System.String.format("Use the 'has' operator in cases when full term match is desired (see: https://aka.ms/kusto.stringterms).",null)||""))}},methods:{GetHasOperatorKind:function(tokenKind){switch(tokenKind){case Kusto.Language.Syntax.SyntaxKind.ContainsKeyword:return Kusto.Language.Syntax.SyntaxKind.HasKeyword;case Kusto.Language.Syntax.SyntaxKind.ContainsCsKeyword:case Kusto.Language.Syntax.SyntaxKind.Contains_CsKeyword:return Kusto.Language.Syntax.SyntaxKind.HasCsKeyword;case Kusto.Language.Syntax.SyntaxKind.NotContainsKeyword:case Kusto.Language.Syntax.SyntaxKind.NotBangContainsKeyword:return Kusto.Language.Syntax.SyntaxKind.NotHasKeyword;case Kusto.Language.Syntax.SyntaxKind.NotContainsCsKeyword:case Kusto.Language.Syntax.SyntaxKind.NotBangContainsCsKeyword:return Kusto.Language.Syntax.SyntaxKind.NotHasCsKeyword;default:return Kusto.Language.Syntax.SyntaxKind.None}}}},methods:{GetDiagnostics:function(){return System.Array.init([Kusto.Language.Editor.AvoidUsingContainsAnalyzer._diagnostic],Kusto.Language.Diagnostic)},Analyze:function(code,diagnostics,cancellationToken){var $t,node;$t=Bridge.getEnumerator(code.Syntax.GetDescendants(Kusto.Language.Syntax.BinaryExpression),Kusto.Language.Syntax.BinaryExpression);try{while($t.moveNext())node=$t.Current,Kusto.Language.Editor.AvoidUsingContainsAnalyzer.GetHasOperatorKind(node.Operator.Kind)!==Kusto.Language.Syntax.SyntaxKind.None&&Kusto.Language.Editor.AnalyzerUtilities.IsDbColumn(node.Left,code.Globals)&&!Kusto.Language.Editor.AnalyzerUtilities.IsShortStringConstant(node.Right,code.Globals)&&diagnostics.add(Kusto.Language.Editor.AvoidUsingContainsAnalyzer._diagnostic.WithLocation(node.Operator))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}},GetFixAction:function(code,dx,options,actions,cancellationToken){var opToken,hasKind,hasOp;Bridge.referenceEquals(dx.Code,Kusto.Language.Editor.KustoAnalyzerCodes.AvoidUsingContains)&&(opToken=code.Syntax.GetTokenAt(dx.Start),options!=null&&(hasKind=Kusto.Language.Editor.AvoidUsingContainsAnalyzer.GetHasOperatorKind(opToken.Kind),hasKind!==Kusto.Language.Syntax.SyntaxKind.None&&(hasOp=Kusto.Language.Syntax.SyntaxFacts.GetText(hasKind),actions.add(Kusto.Language.Editor.CodeAction.Create(System.String.format("Change to '{0}'",[hasOp]),System.String.format("Replace operator '{0}' with operator '{1}'",opToken.Text,hasOp),System.Array.init([Bridge.toString(dx.Start),hasOp],System.String))))))},GetFixEdits:function(code,action,caretPosition,options,cancellationToken){var opTokenStart={},opToken,newOpName;return System.Array.getCount(action.Data,System.String)===2&&System.Int32.tryParse(System.Array.getItem(action.Data,0,System.String),opTokenStart)?(opToken=code.Syntax.GetTokenAt(opTokenStart.v),newOpName=System.Array.getItem(action.Data,1,System.String),new Kusto.Language.Editor.FixEdits.$ctor2(opToken.TextStart,[Kusto.Language.Editor.TextEdit.Replacement(opToken.TextStart,opToken.Width,newOpName)])):new Kusto.Language.Editor.FixEdits.$ctor2(caretPosition)}}});Bridge.define("Kusto.Language.Editor.AvoidUsingFormatDateTimeInPredicateAnalyzer",{inherits:[Kusto.Language.Editor.KustoAnalyzer],statics:{fields:{_diagnostic:null},ctors:{init:function(){this._diagnostic=new Kusto.Language.Diagnostic.$ctor2(Kusto.Language.Editor.KustoAnalyzerCodes.AvoidUsingFormatDateTimeInPredicate,Kusto.Language.DiagnosticCategory.Performance,Kusto.Language.DiagnosticSeverity.Suggestion,"Avoid using format_datetime() in a filter or predicate",(System.String.format("Avoid using the 'format_datetime' function in a filter or predicate.",null)||"")+"\n"+(System.String.format("Instead, use specific datetime functions like startofday or bin.",null)||""))}},methods:{IsInFilter:function(node){return node.GetFirstAncestor(Kusto.Language.Syntax.FilterOperator)!=null},IsInPredicate:function(node){return node.GetFirstAncestor(Kusto.Language.Syntax.BinaryExpression,function(be){return Kusto.Language.Editor.AvoidUsingFormatDateTimeInPredicateAnalyzer.IsComparisonOperator(be.Kind)})!=null},IsComparisonOperator:function(kind){switch(kind){case Kusto.Language.Syntax.SyntaxKind.EqualExpression:case Kusto.Language.Syntax.SyntaxKind.NotEqualExpression:case Kusto.Language.Syntax.SyntaxKind.EqualTildeExpression:case Kusto.Language.Syntax.SyntaxKind.GreaterThanOrEqualExpression:case Kusto.Language.Syntax.SyntaxKind.GreaterThanExpression:case Kusto.Language.Syntax.SyntaxKind.LessThanExpression:case Kusto.Language.Syntax.SyntaxKind.LessThanOrEqualExpression:return!0;default:return!1}},GetAlternativeFunctionOrDateTimePart:function(format){switch(format){case"d":case"dd":return"dayofmonth";case"fff":case"FFF":return"millisecond";case"ffffff":case"FFFFFF":return"microsecond";case"H":case"HH":return"hourofday";case"m":case"mm":return"minute";case"M":case"MM":return"monthofyear";case"s":case"ss":return"second";case"y":case"yy":case"yyyy":return"getyear";default:return null}}}},methods:{GetDiagnostics:function(){return System.Array.init([Kusto.Language.Editor.AvoidUsingFormatDateTimeInPredicateAnalyzer._diagnostic],Kusto.Language.Diagnostic)},Analyze:function(code,diagnostics,cancellationToken){var $t,node;$t=Bridge.getEnumerator(code.Syntax.GetDescendants(Kusto.Language.Syntax.FunctionCallExpression,function(fc){return Bridge.referenceEquals(fc.ReferencedSymbol,Kusto.Language.Functions.FormatDatetime)}),Kusto.Language.Syntax.FunctionCallExpression);try{while($t.moveNext())node=$t.Current,(Kusto.Language.Editor.AvoidUsingFormatDateTimeInPredicateAnalyzer.IsInFilter(node)||Kusto.Language.Editor.AvoidUsingFormatDateTimeInPredicateAnalyzer.IsInPredicate(node))&&diagnostics.add(Kusto.Language.Editor.AvoidUsingFormatDateTimeInPredicateAnalyzer._diagnostic.WithLocation(node))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}},GetFixAction:function(code,dx,options,actions,cancellationToken){var fc,format,altFunctionOrPart,fn;(fc=Bridge.as(code.Syntax.GetNodeAt(dx.Start,dx.Length),Kusto.Language.Syntax.FunctionCallExpression))!=null&&fc.ArgumentList.Expressions.Count===2&&(format=Bridge.as(fc.ArgumentList.Expressions.getItem$1(1).Element$1.ConstantValue,System.String))!=null&&(altFunctionOrPart=Kusto.Language.Editor.AvoidUsingFormatDateTimeInPredicateAnalyzer.GetAlternativeFunctionOrDateTimePart(format))!=null&&(fn=System.Linq.Enumerable.from(Kusto.Language.KustoFacts.DateTimeParts,System.String).contains(altFunctionOrPart)?System.String.format("datetime_part('{0}',)",[altFunctionOrPart]):altFunctionOrPart,actions.add(Kusto.Language.Editor.CodeAction.Create$1("convert_format_datetime",System.String.format("Change to '{0}'",[fn]),System.String.format("Change use of function 'format_datetime' to function '{0}'",[fn]),System.Array.init([Bridge.toString(dx.Start),Bridge.toString(dx.Length),altFunctionOrPart],System.String))))},GetFixEdits:function(code,action,cursorPosition,options,cancellationToken){var start={},length={},altFunctionOrPart,fc,edits,outerFc;return System.Array.getCount(action.Data,System.String)===3&&System.Int32.tryParse(System.Array.getItem(action.Data,0,System.String),start)&&System.Int32.tryParse(System.Array.getItem(action.Data,1,System.String),length)&&(altFunctionOrPart=System.Array.getItem(action.Data,2,System.String))!=null&&(fc=Bridge.as(code.Syntax.GetNodeAt(start.v,length.v),Kusto.Language.Syntax.FunctionCallExpression))!=null&&fc.ArgumentList.Expressions.Count===2?(edits=new(System.Collections.Generic.List$1(Kusto.Language.Editor.TextEdit).ctor),System.Linq.Enumerable.from(Kusto.Language.KustoFacts.DateTimeParts,System.String).contains(altFunctionOrPart)?(Kusto.Language.Editor.AnalyzerUtilities.AddRenameEdits(edits,fc.Name.Name,"datetime_part"),Kusto.Language.Editor.AnalyzerUtilities.AddInsertArgumentEdits(edits,fc,0,System.String.format("'{0}'",[altFunctionOrPart]))):Kusto.Language.Editor.AnalyzerUtilities.AddRenameEdits(edits,fc.Name.Name,altFunctionOrPart),fc.ArgumentList.Expressions.Count>1&&Kusto.Language.Editor.AnalyzerUtilities.AddRemoveArgumentEdits(edits,fc.ArgumentList.Expressions.getItem$1(1).Element$1),(outerFc=Kusto.Language.Editor.AnalyzerUtilities.GetFunctionCall(fc))!=null&&(Bridge.referenceEquals(outerFc.Name.SimpleName,Kusto.Language.Functions.ToLong.Name)||Bridge.referenceEquals(outerFc.Name.SimpleName,Kusto.Language.Functions.ToInt.Name))&&Kusto.Language.Editor.AnalyzerUtilities.AddRemoveOuterFunctionCallEdits(edits,outerFc,fc),new Kusto.Language.Editor.FixEdits.$ctor3(fc.Name.TextStart,edits)):new Kusto.Language.Editor.FixEdits.$ctor2(cursorPosition)}}});Bridge.define("Kusto.Language.Editor.AvoidUsingHasWithIPv4StringsAnalyzer",{inherits:[Kusto.Language.Editor.KustoAnalyzer],statics:{fields:{_diagnostic:null,Number:null,Dot:null,IPv4:null,IPv4_Prefix:null},ctors:{init:function(){this._diagnostic=new Kusto.Language.Diagnostic.$ctor2(Kusto.Language.Editor.KustoAnalyzerCodes.AvoidUsingHasWithIPv4Strings,Kusto.Language.DiagnosticCategory.Performance,Kusto.Language.DiagnosticSeverity.Suggestion,"Avoid using has operator with IPv4 strings.",System.String.format("Avoid using the 'has' operator with IPv4 strings. Use the 'has_ipv4' function instead.",null));this.Number=Kusto.Language.Parsing.Parsers$1(System.Char).Or([Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.Parsers$1(System.Char).Match(49),Kusto.Language.Parsing.CharScanners.Digit,Kusto.Language.Parsing.CharScanners.Digit]),Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.Parsers$1(System.Char).Match(50),Kusto.Language.Parsing.Parsers$1(System.Char).Or([Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.Parsers$1(System.Char).MatchAny([48,49,50,51,52]),Kusto.Language.Parsing.CharScanners.Digit]),Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.Parsers$1(System.Char).Match(53),Kusto.Language.Parsing.Parsers$1(System.Char).MatchAny([48,49,50,51,52,53])])])]),Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.CharScanners.Digit,Kusto.Language.Parsing.Parsers$1(System.Char).Optional(Kusto.Language.Parsing.CharScanners.Digit)])]);this.Dot=Kusto.Language.Parsing.Parsers$1(System.Char).Match(46);this.IPv4=Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Editor.AvoidUsingHasWithIPv4StringsAnalyzer.Number,Kusto.Language.Editor.AvoidUsingHasWithIPv4StringsAnalyzer.Dot,Kusto.Language.Editor.AvoidUsingHasWithIPv4StringsAnalyzer.Number,Kusto.Language.Editor.AvoidUsingHasWithIPv4StringsAnalyzer.Dot,Kusto.Language.Editor.AvoidUsingHasWithIPv4StringsAnalyzer.Number,Kusto.Language.Editor.AvoidUsingHasWithIPv4StringsAnalyzer.Dot,Kusto.Language.Editor.AvoidUsingHasWithIPv4StringsAnalyzer.Number]);this.IPv4_Prefix=Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Editor.AvoidUsingHasWithIPv4StringsAnalyzer.Number,Kusto.Language.Editor.AvoidUsingHasWithIPv4StringsAnalyzer.Dot,Kusto.Language.Parsing.Parsers$1(System.Char).Optional(Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Editor.AvoidUsingHasWithIPv4StringsAnalyzer.Number,Kusto.Language.Editor.AvoidUsingHasWithIPv4StringsAnalyzer.Dot,Kusto.Language.Parsing.Parsers$1(System.Char).Optional(Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Editor.AvoidUsingHasWithIPv4StringsAnalyzer.Number,Kusto.Language.Editor.AvoidUsingHasWithIPv4StringsAnalyzer.Dot]))]))])}},methods:{IsIPv4Constant:function(expr){var value;return(value=Bridge.as(expr.ConstantValue,System.String))!=null&&Kusto.Language.Parsing.ScannerExtensions.Matches(Kusto.Language.Editor.AvoidUsingHasWithIPv4StringsAnalyzer.IPv4,value)},IsIPv4PrefixConstant:function(expr){var value;return(value=Bridge.as(expr.ConstantValue,System.String))!=null&&Kusto.Language.Parsing.ScannerExtensions.Matches(Kusto.Language.Editor.AvoidUsingHasWithIPv4StringsAnalyzer.IPv4_Prefix,value)},GetDiagnostic:function(operatorName,ipv4FunctionName){return Kusto.Language.Editor.AvoidUsingHasWithIPv4StringsAnalyzer._diagnostic.WithMessage(System.String.format("Avoid using the '{0}' operator with IPv4 strings. Use the '{1}' function instead.",operatorName,ipv4FunctionName))},GetIPv4FunctionName:function(kind){switch(kind){case Kusto.Language.Syntax.SyntaxKind.HasPrefixExpression:case Kusto.Language.Syntax.SyntaxKind.HasPrefixCsExpression:case Kusto.Language.Syntax.SyntaxKind.HasPrefixKeyword:case Kusto.Language.Syntax.SyntaxKind.HasPrefixCsKeyword:return"has_ipv4_prefix";case Kusto.Language.Syntax.SyntaxKind.HasAnyKeyword:case Kusto.Language.Syntax.SyntaxKind.HasAnyExpression:return"has_any_ipv4";default:return"has_ipv4"}}}},methods:{GetDiagnostics:function(){return System.Array.init([Kusto.Language.Editor.AvoidUsingHasWithIPv4StringsAnalyzer._diagnostic],Kusto.Language.Diagnostic)},Analyze:function(code,diagnostics,cancellationToken){var $t,node,bx,hax;$t=Bridge.getEnumerator(code.Syntax.GetDescendants(Kusto.Language.Syntax.Expression,Bridge.fn.bind(this,function(e){return this.IsSuspect(e,code.Globals)})),Kusto.Language.Syntax.Expression);try{while($t.moveNext()){node=$t.Current;switch(node.Kind){case Kusto.Language.Syntax.SyntaxKind.HasExpression:case Kusto.Language.Syntax.SyntaxKind.HasCsExpression:case Kusto.Language.Syntax.SyntaxKind.ContainsExpression:case Kusto.Language.Syntax.SyntaxKind.ContainsCsExpression:bx=Bridge.cast(node,Kusto.Language.Syntax.BinaryExpression);diagnostics.add(Kusto.Language.Editor.AvoidUsingHasWithIPv4StringsAnalyzer.GetDiagnostic(bx.Operator.Text,"has_ipv4").WithLocation(bx.Operator));break;case Kusto.Language.Syntax.SyntaxKind.HasPrefixExpression:case Kusto.Language.Syntax.SyntaxKind.HasPrefixCsExpression:bx=Bridge.cast(node,Kusto.Language.Syntax.BinaryExpression);diagnostics.add(Kusto.Language.Editor.AvoidUsingHasWithIPv4StringsAnalyzer.GetDiagnostic(bx.Operator.Text,"has_ipv4_prefix").WithLocation(bx.Operator));break;case Kusto.Language.Syntax.SyntaxKind.HasAnyExpression:hax=Bridge.cast(node,Kusto.Language.Syntax.HasAnyExpression);diagnostics.add(Kusto.Language.Editor.AvoidUsingHasWithIPv4StringsAnalyzer.GetDiagnostic(hax.Operator.Text,"has_any_ipv4").WithLocation(hax.Operator));break}}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}},IsSuspect:function(expr,globals){var be,hax;if((be=Bridge.as(expr,Kusto.Language.Syntax.BinaryExpression))!=null)switch(be.Kind){case Kusto.Language.Syntax.SyntaxKind.HasExpression:case Kusto.Language.Syntax.SyntaxKind.HasCsExpression:case Kusto.Language.Syntax.SyntaxKind.ContainsExpression:case Kusto.Language.Syntax.SyntaxKind.ContainsCsExpression:return Kusto.Language.Editor.AnalyzerUtilities.IsDbColumn(be.Left,globals)&&Kusto.Language.Editor.AvoidUsingHasWithIPv4StringsAnalyzer.IsIPv4Constant(be.Right);case Kusto.Language.Syntax.SyntaxKind.HasPrefixExpression:case Kusto.Language.Syntax.SyntaxKind.HasPrefixCsExpression:return Kusto.Language.Editor.AnalyzerUtilities.IsDbColumn(be.Left,globals)&&Kusto.Language.Editor.AvoidUsingHasWithIPv4StringsAnalyzer.IsIPv4PrefixConstant(be.Right)}else if((hax=Bridge.as(expr,Kusto.Language.Syntax.HasAnyExpression))!=null)return Kusto.Language.Editor.AnalyzerUtilities.IsDbColumn(hax.Left,globals)&&hax.Right.Expressions.Count>0&&System.Linq.Enumerable.from(hax.Right.Expressions,Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)).all(function(e){return Kusto.Language.Editor.AvoidUsingHasWithIPv4StringsAnalyzer.IsIPv4Constant(e.Element$1)});return!1},GetFixAction:function(code,dx,options,actions,cancellationToken){if(Bridge.referenceEquals(dx.Code,Kusto.Language.Editor.AvoidUsingHasWithIPv4StringsAnalyzer._diagnostic.Code)){var token=code.Syntax.GetTokenAt(dx.Start),ipv4Name=Kusto.Language.Editor.AvoidUsingHasWithIPv4StringsAnalyzer.GetIPv4FunctionName(token.Kind);actions.add(Kusto.Language.Editor.CodeAction.Create(System.String.format("Change to '{0}'",[ipv4Name]),System.String.format("Replace use of operator '{0}' with a call to function '{1}'",token.Text,ipv4Name),System.Array.init([Bridge.toString(dx.Start),ipv4Name],System.String)))}},GetFixEdits:function(code,action,caretPosition,options,cancellationToken){var tokenStart={},hax,bx;if(System.Array.getCount(action.Data,System.String)===2&&System.Int32.tryParse(System.Array.getItem(action.Data,0,System.String),tokenStart)){var opToken=code.Syntax.GetTokenAt(tokenStart.v),node=opToken!=null?opToken.Parent:null,newName=System.Array.getItem(action.Data,1,System.String);if(opToken!=null)if((hax=Bridge.as(node,Kusto.Language.Syntax.HasAnyExpression))!=null)return new Kusto.Language.Editor.FixEdits.$ctor2(hax.TextStart,[Kusto.Language.Editor.TextEdit.Replacement(hax.Operator.TriviaStart,hax.Right.OpenParen.End-hax.Operator.TriviaStart|0,", "),Kusto.Language.Editor.TextEdit.Insertion(hax.TextStart,(newName||"")+"(")]);else if((bx=Bridge.as(node,Kusto.Language.Syntax.BinaryExpression))!=null)return new Kusto.Language.Editor.FixEdits.$ctor2(node.TextStart,[Kusto.Language.Editor.TextEdit.Insertion(bx.End,")"),Kusto.Language.Editor.TextEdit.Replacement(bx.Operator.TriviaStart,bx.Right.TextStart-bx.Operator.TriviaStart|0,", "),Kusto.Language.Editor.TextEdit.Insertion(node.TextStart,(newName||"")+"(")])}return new Kusto.Language.Editor.FixEdits.$ctor2(caretPosition)}}});Bridge.define("Kusto.Language.Editor.AvoidUsingLegacyPartitionAnalyzer",{inherits:[Kusto.Language.Editor.KustoAnalyzer],statics:{fields:{_diagnostic:null},ctors:{init:function(){this._diagnostic=new Kusto.Language.Diagnostic.$ctor1(Kusto.Language.Editor.KustoAnalyzerCodes.AvoidUsingLegacyPartition,Kusto.Language.DiagnosticCategory.General,Kusto.Language.DiagnosticSeverity.Suggestion,"It is recommended to use the `native` or `shuffle` strategy of the partition operator. The legacy mode is limited to 64 partitions and is less efficient than the `native` or `shuffle` strategies.")}}},methods:{GetDiagnostics:function(){return System.Array.init([Kusto.Language.Editor.AvoidUsingLegacyPartitionAnalyzer._diagnostic],Kusto.Language.Diagnostic)},Analyze:function(code,diagnostics,cancellationToken){var $t,$t1,node,isUsingLegacyStrategy,parameter;$t=Bridge.getEnumerator(code.Syntax.GetDescendants(Kusto.Language.Syntax.PartitionOperator),Kusto.Language.Syntax.PartitionOperator);try{while($t.moveNext())if(node=$t.Current,Bridge.is(node.Operand,Kusto.Language.Syntax.PartitionSubquery)){if(isUsingLegacyStrategy=!0,node.Parameters.Count>0){$t1=Bridge.getEnumerator(node.Parameters,"GetEnumerator$1");try{while($t1.moveNext())if(parameter=$t1.Current,System.String.equals(parameter.Name.SimpleName,Kusto.Language.Syntax.SyntaxFacts.GetText(Kusto.Language.Syntax.SyntaxKind.HintDotStrategyKeyword)))if(parameter.Expression.IsLiteral)isUsingLegacyStrategy=Bridge.equals(parameter.Expression.LiteralValue,"legacy");else return;else System.String.equals(parameter.Name.SimpleName,Kusto.Language.Syntax.SyntaxFacts.GetText(Kusto.Language.Syntax.SyntaxKind.HintDotShuffleKeyKeyword))&&(isUsingLegacyStrategy=!1)}finally{Bridge.is($t1,System.IDisposable)&&$t1.System$IDisposable$Dispose()}}isUsingLegacyStrategy&&diagnostics.add(Kusto.Language.Editor.AvoidUsingLegacyPartitionAnalyzer._diagnostic.WithLocation(node))}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}}});Bridge.define("Kusto.Language.Editor.AvoidUsingNullStringComparisonAnalyzer",{inherits:[Kusto.Language.Editor.KustoAnalyzer],statics:{fields:{_diagnostic_equals:null,_diagnostic_not_equals:null},ctors:{init:function(){this._diagnostic_equals=new Kusto.Language.Diagnostic.$ctor2(Kusto.Language.Editor.KustoAnalyzerCodes.AvoidUsingIsNullStringComparision,Kusto.Language.DiagnosticCategory.Correctness,Kusto.Language.DiagnosticSeverity.Warning,"Avoid using isnull on string arguments","Avoid using isnull on string arguments, use isempty() instead");this._diagnostic_not_equals=new Kusto.Language.Diagnostic.$ctor2(Kusto.Language.Editor.KustoAnalyzerCodes.AvoidUsingIsNotNullStringComparison,Kusto.Language.DiagnosticCategory.Correctness,Kusto.Language.DiagnosticSeverity.Warning,"Avoid using isnotnull on string arguments","Avoid using isnotnull on string arguments, use isnotempty() instead")}}},methods:{GetDiagnostics:function(){return System.Array.init([Kusto.Language.Editor.AvoidUsingNullStringComparisonAnalyzer._diagnostic_equals,Kusto.Language.Editor.AvoidUsingNullStringComparisonAnalyzer._diagnostic_not_equals],Kusto.Language.Diagnostic)},Analyze:function(code,diagnostics,cancellationToken){var $t,node;$t=Bridge.getEnumerator(code.Syntax.GetDescendants(Kusto.Language.Syntax.FunctionCallExpression),Kusto.Language.Syntax.FunctionCallExpression);try{while($t.moveNext())node=$t.Current,(Bridge.referenceEquals(node.ReferencedSymbol,Kusto.Language.Functions.IsNull)||Bridge.referenceEquals(node.ReferencedSymbol,Kusto.Language.Functions.IsNotNull))&&node.ArgumentList.Expressions.Count>0&&Bridge.referenceEquals(node.ArgumentList.Expressions.getItem$1(0).Element$1.ResultType,Kusto.Language.Symbols.ScalarTypes.String)&&(Bridge.referenceEquals(node.ReferencedSymbol,Kusto.Language.Functions.IsNull)?diagnostics.add(Kusto.Language.Editor.AvoidUsingNullStringComparisonAnalyzer._diagnostic_equals.WithLocation(node)):diagnostics.add(Kusto.Language.Editor.AvoidUsingNullStringComparisonAnalyzer._diagnostic_not_equals.WithLocation(node)))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}},GetFixAction:function(code,dx,options,actions,cancellationToken){var fc,fnName,newFnName;(fc=Bridge.as(code.Syntax.GetNodeAt(dx.Start,dx.Length),Kusto.Language.Syntax.FunctionCallExpression))!=null&&(fnName=fc.Name.SimpleName,newFnName=Bridge.referenceEquals(fnName,Kusto.Language.Functions.IsNull.Name)?Kusto.Language.Functions.IsEmpty.Name:Bridge.referenceEquals(fnName,Kusto.Language.Functions.IsNotNull.Name)?Kusto.Language.Functions.IsNotEmpty.Name:null,newFnName!=null&&actions.add(Kusto.Language.Editor.CodeAction.Create(System.String.format("Change to '{0}'",[newFnName]),System.String.format("Replace call to function '{0}' with function '{1}'",fnName,newFnName),System.Array.init([Bridge.toString(fc.Name.TextStart),Bridge.toString(fc.Name.Width),newFnName],System.String))))},GetFixEdits:function(code,action,caretPosition,options,cancellationToken){var fnNameStart={},fnNameLength={},newFnName;return System.Array.getCount(action.Data,System.String)===3&&System.Int32.tryParse(System.Array.getItem(action.Data,0,System.String),fnNameStart)&&System.Int32.tryParse(System.Array.getItem(action.Data,1,System.String),fnNameLength)?(newFnName=System.Array.getItem(action.Data,2,System.String),new Kusto.Language.Editor.FixEdits.$ctor2(fnNameStart.v,[Kusto.Language.Editor.TextEdit.Replacement(fnNameStart.v,fnNameLength.v,newFnName)])):new Kusto.Language.Editor.FixEdits.$ctor2(caretPosition)}}});Bridge.define("Kusto.Language.Editor.AvoidUsingObsoleteFunctionsAnalyzer",{inherits:[Kusto.Language.Editor.KustoAnalyzer],statics:{fields:{_diagnostic:null},ctors:{init:function(){this._diagnostic=new Kusto.Language.Diagnostic.$ctor1(Kusto.Language.Editor.KustoAnalyzerCodes.AvoidUsingObsoleteFunctions,Kusto.Language.DiagnosticCategory.Correctness,Kusto.Language.DiagnosticSeverity.Warning,"Avoid using obsolete/deprecated functions.")}},methods:{IsRenameCompatible:function(sig1,sig2){if(System.Array.getCount(sig1.Parameters,Kusto.Language.Symbols.Parameter)!==System.Array.getCount(sig2.Parameters,Kusto.Language.Symbols.Parameter))return!1;for(var i=0;i<System.Array.getCount(sig1.Parameters,Kusto.Language.Symbols.Parameter);i=i+1|0)if(!Kusto.Language.Editor.AvoidUsingObsoleteFunctionsAnalyzer.IsCompatible(System.Array.getItem(sig1.Parameters,i,Kusto.Language.Symbols.Parameter),System.Array.getItem(sig2.Parameters,i,Kusto.Language.Symbols.Parameter)))return!1;return!0},IsCompatible:function(p1,p2){if(p1.TypeKind!==p2.TypeKind)return!1;if(p1.TypeKind===Kusto.Language.Symbols.ParameterTypeKind.Declared){if(System.Array.getCount(p1.DeclaredTypes,Kusto.Language.Symbols.TypeSymbol)!==System.Array.getCount(p2.DeclaredTypes,Kusto.Language.Symbols.TypeSymbol))return!1;for(var i=0;i<System.Array.getCount(p1.DeclaredTypes,Kusto.Language.Symbols.TypeSymbol);i=i+1|0)if(!Bridge.referenceEquals(System.Array.getItem(p1.DeclaredTypes,i,Kusto.Language.Symbols.TypeSymbol),System.Array.getItem(p2.DeclaredTypes,i,Kusto.Language.Symbols.TypeSymbol)))return!1}return!0}}},methods:{GetDiagnostics:function(){return System.Array.init([Kusto.Language.Editor.AvoidUsingObsoleteFunctionsAnalyzer._diagnostic],Kusto.Language.Diagnostic)},Analyze:function(code,diagnostics,cancellationToken){var $t,node,fs,sig;$t=Bridge.getEnumerator(code.Syntax.GetDescendants(Kusto.Language.Syntax.FunctionCallExpression,function(fc){var fs,sig;return(fs=Bridge.as(fc.ReferencedSymbol,Kusto.Language.Symbols.FunctionSymbol))!=null&&(fs.IsObsolete||(sig=fc.ReferencedSignature)!=null&&sig.IsObsolete)}),Kusto.Language.Syntax.FunctionCallExpression);try{while($t.moveNext())node=$t.Current,(fs=Bridge.as(node.ReferencedSymbol,Kusto.Language.Symbols.FunctionSymbol))!=null&&(fs.IsObsolete?diagnostics.add(Kusto.Language.Editor.AvoidUsingObsoleteFunctionsAnalyzer._diagnostic.WithMessage(System.String.format("The function '{0}' is deprecated; use '{1}' instead.",fs.Name,fs.Alternative)).WithLocation(node.Name)):(sig=node.ReferencedSignature)!=null&&sig.IsObsolete&&diagnostics.add(Kusto.Language.Editor.AvoidUsingObsoleteFunctionsAnalyzer._diagnostic.WithMessage(System.String.format("This form of the function '{0}' is deprecated; use '{1}' instead.",fs.Name,sig.Alternative)).WithLocation(node.Name)))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}},GetFixAction:function(code,dx,options,actions,cancellationToken){var name,nameRef,fc,fs,sig,altFunction;(name=Bridge.as(code.Syntax.GetNodeAt(dx.Start,dx.Length),Kusto.Language.Syntax.Name))!=null&&(nameRef=Bridge.as(name.Parent,Kusto.Language.Syntax.NameReference))!=null&&(fc=Bridge.as(nameRef.Parent,Kusto.Language.Syntax.FunctionCallExpression))!=null&&(fs=Bridge.as(fc.ReferencedSymbol,Kusto.Language.Symbols.FunctionSymbol))!=null&&(altFunction=fs.IsObsolete?fs.Alternative:(sig=fc.ReferencedSignature)!=null?sig.Alternative:null,altFunction!=null&&this.CanBeRenamed(fc.ReferencedSignature,altFunction,code.Globals)&&actions.add(Kusto.Language.Editor.CodeAction.Create$1("Obsolete",System.String.format("Change to '{0}'",[altFunction]),System.String.format("Convert from using deprecated function '{0}' to preferred function '{1}'",fs.Name,altFunction),System.Array.init(["rename",Bridge.toString(dx.Start),Bridge.toString(dx.Length),altFunction],System.String))))},GetFixEdits:function(code,action,caretPosition,options,cancellationToken){var start={},length={},altName;return Bridge.referenceEquals(System.Array.getItem(action.Data,0,System.String),"rename")&&System.Int32.tryParse(System.Array.getItem(action.Data,1,System.String),start)&&System.Int32.tryParse(System.Array.getItem(action.Data,2,System.String),length)&&(altName=System.Array.getItem(action.Data,3,System.String))!=null?new Kusto.Language.Editor.FixEdits.$ctor2(caretPosition,[Kusto.Language.Editor.TextEdit.Replacement(start.v,length.v,altName)]):new Kusto.Language.Editor.FixEdits.$ctor2(caretPosition)},CanBeRenamed:function(sig,altName,globals){switch(sig.Symbol.Name){case"row_rank":return!1;default:return this.IsRenameCompatible(sig,altName,globals)}},IsRenameCompatible:function(sig,altName,globals){var $t,altSym=globals.GetFunction(altName)||globals.GetAggregate(altName)||globals.GetPlugIn(altName),altSig;if(altSym==null)return!1;$t=Bridge.getEnumerator(altSym.Signatures,Kusto.Language.Symbols.Signature);try{while($t.moveNext())if(altSig=$t.Current,Kusto.Language.Editor.AvoidUsingObsoleteFunctionsAnalyzer.IsRenameCompatible(sig,altSig))return!0}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return!1}}});Bridge.define("Kusto.Language.Editor.AvoidUsingToBoolOnNumericsAnalyzer",{inherits:[Kusto.Language.Editor.KustoAnalyzer],statics:{fields:{_diagnostic:null},ctors:{init:function(){this._diagnostic=new Kusto.Language.Diagnostic.$ctor2(Kusto.Language.Editor.KustoAnalyzerCodes.AvoidUsingToBoolOnNumerics,Kusto.Language.DiagnosticCategory.Correctness,Kusto.Language.DiagnosticSeverity.Warning,"Avoid using tobool on numeric arguments","Avoid using tobool on numeric arguments, use comparison operators instead")}}},methods:{GetDiagnostics:function(){return System.Array.init([Kusto.Language.Editor.AvoidUsingToBoolOnNumericsAnalyzer._diagnostic],Kusto.Language.Diagnostic)},Analyze:function(code,diagnostics,cancellationToken){var $t,node,firstArgumentType;$t=Bridge.getEnumerator(code.Syntax.GetDescendants(Kusto.Language.Syntax.FunctionCallExpression),Kusto.Language.Syntax.FunctionCallExpression);try{while($t.moveNext())node=$t.Current,(Bridge.referenceEquals(node.ReferencedSymbol,Kusto.Language.Functions.ToBool)||Bridge.referenceEquals(node.ReferencedSymbol,Kusto.Language.Functions.ToBoolean))&&node.ArgumentList.Expressions.Count>0&&(firstArgumentType=node.ArgumentList.Expressions.getItem$1(0).Element$1.ResultType,(Bridge.referenceEquals(firstArgumentType,Kusto.Language.Symbols.ScalarTypes.DateTime)||Bridge.referenceEquals(firstArgumentType,Kusto.Language.Symbols.ScalarTypes.Int)||Bridge.referenceEquals(firstArgumentType,Kusto.Language.Symbols.ScalarTypes.Decimal)||Bridge.referenceEquals(firstArgumentType,Kusto.Language.Symbols.ScalarTypes.Guid)||Bridge.referenceEquals(firstArgumentType,Kusto.Language.Symbols.ScalarTypes.Long)||Bridge.referenceEquals(firstArgumentType,Kusto.Language.Symbols.ScalarTypes.Real)||Bridge.referenceEquals(firstArgumentType,Kusto.Language.Symbols.ScalarTypes.TimeSpan))&&diagnostics.add(Kusto.Language.Editor.AvoidUsingToBoolOnNumericsAnalyzer._diagnostic.WithLocation(node)))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}}});Bridge.define("Kusto.Language.Editor.CalledFunctionHasErrorsAnalyzer",{inherits:[Kusto.Language.Editor.KustoAnalyzer],statics:{fields:{_diagnostic:null},ctors:{init:function(){this._diagnostic=new Kusto.Language.Diagnostic.$ctor1(Kusto.Language.Editor.KustoAnalyzerCodes.CalledFunctionHasErrors,Kusto.Language.DiagnosticCategory.General,Kusto.Language.DiagnosticSeverity.Warning,"A called function has errors in its definition")}},methods:{AddErrors:function(code,sig,calledFunctionDiagnostics,location,diagnostics){sig.Symbol!=null&&sig.Declaration!=null&&Bridge.referenceEquals(sig.Declaration.Tree,code.Tree)&&diagnostics.AddRange(System.Linq.Enumerable.from(calledFunctionDiagnostics,Kusto.Language.Diagnostic).where(function(d){return Bridge.referenceEquals(d.Severity,Kusto.Language.DiagnosticSeverity.Error)}));diagnostics.add(Kusto.Language.Editor.CalledFunctionHasErrorsAnalyzer._diagnostic.WithMessage(System.String.format("The function '{0}' has errors in its definition",[sig.Symbol.Name])).WithLocation(location))}}},methods:{GetDiagnostics:function(){return System.Array.init([Kusto.Language.Editor.CalledFunctionHasErrorsAnalyzer._diagnostic],Kusto.Language.Diagnostic)},Analyze:function(code,diagnostics,cancellationToken){Kusto.Language.Syntax.SyntaxElement.WalkNodes(code.Syntax,function(node){var nr,sig1,fc,sig2;(nr=Bridge.as(node,Kusto.Language.Syntax.NameReference))!=null&&!Bridge.is(nr.Parent,Kusto.Language.Syntax.FunctionCallExpression)&&nr.CalledFunctionHasErrors&&(sig1=nr.ReferencedSignature)!=null?Kusto.Language.Editor.CalledFunctionHasErrorsAnalyzer.AddErrors(code,sig1,nr.GetCalledFunctionDiagnostics(),nr,diagnostics):(fc=Bridge.as(node,Kusto.Language.Syntax.FunctionCallExpression))!=null&&fc.CalledFunctionHasErrors&&(sig2=fc.Name.ReferencedSignature)!=null&&Kusto.Language.Editor.CalledFunctionHasErrorsAnalyzer.AddErrors(code,sig2,fc.GetCalledFunctionDiagnostics(),fc.Name,diagnostics)})}}});Bridge.define("Kusto.Language.Editor.ChangeTextAction",{inherits:[Kusto.Language.Editor.ResultAction],props:{Changes:null,ChangedText:null},ctors:{$ctor1:function(changes,changedText){this.$initialize();Kusto.Language.Editor.ResultAction.ctor.call(this);this.Changes=changes;this.ChangedText=changedText},ctor:function(editString){Kusto.Language.Editor.ChangeTextAction.$ctor1.call(this,editString.GetChanges(),editString.CurrentText)}}});Bridge.define("Kusto.Language.Editor.ClientParameter",{inherits:[Kusto.Language.Editor.SyntaxReference],props:{Name:null},ctors:{ctor:function(name,range){this.$initialize();Kusto.Language.Editor.SyntaxReference.ctor.call(this,range);this.Name=name},$ctor1:function(name,start,length){Kusto.Language.Editor.ClientParameter.ctor.call(this,name,new Kusto.Language.Editor.TextRange.$ctor1(start,length))}}});Bridge.define("Kusto.Language.Editor.ClusterReference",{inherits:[Kusto.Language.Editor.SyntaxReference],props:{Cluster:null},ctors:{ctor:function(cluster,start,length){this.$initialize();Kusto.Language.Editor.SyntaxReference.$ctor1.call(this,start,length);this.Cluster=cluster}}});Bridge.define("Kusto.Language.Editor.CodeServiceFactory.AggregateCodeServiceFactory",{inherits:[Kusto.Language.Editor.CodeServiceFactory],$kind:"nested class",fields:{_factories:null},ctors:{ctor:function(factories){this.$initialize();Kusto.Language.Editor.CodeServiceFactory.ctor.call(this);this._factories=factories}},methods:{TryGetCodeService:function(text,service){var $t,factory;$t=Bridge.getEnumerator(this._factories,Kusto.Language.Editor.CodeServiceFactory);try{while($t.moveNext())if(factory=$t.Current,factory.TryGetCodeService(text,service))return!0}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return service.v=null,!1},GetFactory:function(TFactory){return Bridge.cast(System.Linq.Enumerable.from(this._factories,Kusto.Language.Editor.CodeServiceFactory).firstOrDefault(function(f){return Bridge.is(f,TFactory)},null),TFactory)},WithFactory:function(factory){if(System.Linq.Enumerable.from(this._factories,Kusto.Language.Editor.CodeServiceFactory).contains(factory))return this;var list=new(System.Collections.Generic.List$1(Kusto.Language.Editor.CodeServiceFactory).$ctor1)(this._factories),index=list.FindIndex$2(function(f){return Bridge.referenceEquals(Bridge.getType(f),Bridge.getType(factory))});return index>=0?list.setItem(index,factory):list.add(factory),new Kusto.Language.Editor.CodeServiceFactory.AggregateCodeServiceFactory(Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Editor.CodeServiceFactory,list))}}});Bridge.define("Kusto.Language.Editor.ColumnHasSameNameAsVariableAnalyzer",{inherits:[Kusto.Language.Editor.KustoAnalyzer],statics:{fields:{_diagnostic:null},ctors:{init:function(){this._diagnostic=new Kusto.Language.Diagnostic.$ctor1(Kusto.Language.Editor.KustoAnalyzerCodes.ColumnHasSameNameAsVariable,Kusto.Language.DiagnosticCategory.Correctness,Kusto.Language.DiagnosticSeverity.Warning,"A variable or parameter is ignored in favor of a column with the same name.")}},methods:{IsPathSelector:function(name){var p;return(p=Bridge.as(name.Parent,Kusto.Language.Syntax.PathExpression))!=null&&Bridge.referenceEquals(p.Selector,name)}}},methods:{GetDiagnostics:function(){return System.Array.init([Kusto.Language.Editor.ColumnHasSameNameAsVariableAnalyzer._diagnostic],Kusto.Language.Diagnostic)},Analyze:function(code,diagnostics,cancellationToken){var localNames=new(System.Collections.Generic.HashSet$1(System.String).ctor);Kusto.Language.Syntax.SyntaxElement.WalkNodes(code.Syntax,function(node){var nd,name,c,symbol;(nd=Bridge.as(node,Kusto.Language.Syntax.NameDeclaration))!=null&&(Bridge.is(nd.ReferencedSymbol,Kusto.Language.Symbols.VariableSymbol)||Bridge.is(nd.ReferencedSymbol,Kusto.Language.Symbols.ParameterSymbol))&&nd.ReferencedSymbol.IsScalar?localNames.add(nd.SimpleName):(name=Bridge.as(node,Kusto.Language.Syntax.NameReference))==null||Kusto.Language.Editor.ColumnHasSameNameAsVariableAnalyzer.IsPathSelector(name)||(c=Bridge.as(name.ReferencedSymbol,Kusto.Language.Symbols.ColumnSymbol))!=null&&localNames.contains(c.Name)&&(symbol=code.GetSpeculativeReferencedSymbol(name.TextStart,c.Name,Kusto.Language.Symbols.SymbolMatch.Local,cancellationToken),symbol!=null&&diagnostics.add(Kusto.Language.Editor.ColumnHasSameNameAsVariableAnalyzer._diagnostic.WithLocation(name)))})}}});Bridge.define("Kusto.Language.Editor.CommonCodeService",{inherits:[Kusto.Language.Editor.CodeService],statics:{methods:{Add:function(classifications1,classifications2){var len,len1,len2;if(System.Array.getCount(classifications2,Kusto.Language.Editor.ClassifiedRange)===0)return classifications1;if(System.Array.getCount(classifications1,Kusto.Language.Editor.ClassifiedRange)===0)return classifications2;for(var list=new(System.Collections.Generic.List$1(Kusto.Language.Editor.ClassifiedRange).$ctor2)(System.Array.getCount(classifications1,Kusto.Language.Editor.ClassifiedRange)+System.Array.getCount(classifications2,Kusto.Language.Editor.ClassifiedRange)|0),index1=0,index2=0,class1=null,class2=null;;)if(class1==null&&index1<System.Array.getCount(classifications1,Kusto.Language.Editor.ClassifiedRange)&&(class1=System.Array.getItem(classifications1,index1,Kusto.Language.Editor.ClassifiedRange)),class2==null&&index2<System.Array.getCount(classifications2,Kusto.Language.Editor.ClassifiedRange)&&(class2=System.Array.getItem(classifications2,index2,Kusto.Language.Editor.ClassifiedRange)),class1==null&&class2==null)break;else class1!=null&&class2==null?(list.add(class1),class1=null,index1=index1+1|0):class2!=null&&class1==null?(list.add(class2),class2=null,index2=index2+1|0):class1.End<class2.Start?(list.add(class1),class1=null,index1=index1+1|0):class2.End<class1.Start?(list.add(class2),class2=null,index2=index2+1|0):class1.Start>=class2.Start&&class1.End<=class2.End?(class1=null,index1=index1+1|0):class1.Start<class2.Start?(len=class2.Start-class1.Start|0,list.add(new Kusto.Language.Editor.ClassifiedRange(class1.Kind,class1.Start,len)),class1.Length>len?class1=new Kusto.Language.Editor.ClassifiedRange(class1.Kind,class1.Start+len|0,class1.Length-len|0):(class1=null,index1=index1+1|0)):class2.Start<class1.Start?(len1=class1.Start-class2.Start|0,list.add(new Kusto.Language.Editor.ClassifiedRange(class2.Kind,class2.Start,len1)),class2.Length>len1?class2=new Kusto.Language.Editor.ClassifiedRange(class2.Kind,class2.Start+len1|0,class2.Length-len1|0):(class2=null,index2=index2+1|0)):class1.End<=class2.End?(class1=null,index1=index1+1|0):(len2=class2.Length,list.add(class2),class2=null,index2=index2+1|0,class1=new Kusto.Language.Editor.ClassifiedRange(class1.Kind,class1.Start+len2|0,class1.Length-len2|0));return list}}},fields:{_text:null,_clientParameters:null},props:{Text:{get:function(){return this._text}}},ctors:{ctor:function(text){if(this.$initialize(),Kusto.Language.Editor.CodeService.ctor.call(this),text==null)throw new System.ArgumentNullException.$ctor1("text");this._text=text}},methods:{IsFeatureSupported:function(feature,position){return position===void 0&&(position=-1),!0},TryGetCachedDiagnostics:function(diagnostics){return diagnostics.v=null,!1},GetDiagnostics:function(waitForAnalysis,cancellationToken){return Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Diagnostic).Instance},TryGetCachedAnalyzerDiagnostics:function(diagnostics){return diagnostics.v=null,!1},GetAnalyzerDiagnostics:function(waitForAnalysis,cancellationToken){return cancellationToken===void 0&&(cancellationToken=new Kusto.Language.Utils.CancellationToken),Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Diagnostic).Instance},GetAnalyzers:function(){return Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Editor.AnalyzerInfo).Instance},GetCodeActions:function(position,selectionStart,selectionLength,options,waitForAnalysis,actorName,cancellationToken){return Kusto.Language.Editor.CodeActionInfo.NoActions},ApplyCodeAction:function(codeAction,caretPosition,options,cancellationToken){return Kusto.Language.Editor.CodeActionResult.Nothing},GetClassifications:function(start,length,clipToRange,waitForAnalysis,cancellationToken){var classifications=System.Array.init([new Kusto.Language.Editor.ClassifiedRange(Kusto.Language.Editor.ClassificationKind.PlainText,start,length)],Kusto.Language.Editor.ClassifiedRange),clientParameterClassifications=this.GetClientParametersClassifications(start,length,clipToRange),merged=Kusto.Language.Editor.CommonCodeService.Add(classifications,clientParameterClassifications);return new Kusto.Language.Editor.ClassificationInfo(merged)},GetClientParametersClassifications:function(start,length,clipToRange){var $t,end=start+length|0,cps=this.GetClientParameters(),list,cp;if(System.Array.getCount(cps,Kusto.Language.Editor.ClientParameter)===0)return Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Editor.ClassifiedRange).Instance;list=new(System.Collections.Generic.List$1(Kusto.Language.Editor.ClassifiedRange).ctor);$t=Bridge.getEnumerator(cps,Kusto.Language.Editor.ClientParameter);try{while($t.moveNext())if(cp=$t.Current,!((cp.Start+cp.Length|0)<start)&&!((cp.Start+cp.Length|0)>(start+length|0))){var cpStart=cp.Start,cpEnd=cp.End,cpLen=cp.Length;clipToRange&&(cpStart<start&&(cpStart=start),cpEnd>end&&(cpEnd=end),cpLen=cpEnd-cpStart|0);list.add(new Kusto.Language.Editor.ClassifiedRange(Kusto.Language.Editor.ClassificationKind.ClientParameter,cpStart,cpLen))}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return list},GetOutlines:function(options,cancellationToken){var firstToken=Kusto.Language.Parsing.TokenParser.ParseToken(this.Text,0);if(firstToken!=null&&firstToken.Text.length>0){var start=0,end=start+Kusto.Language.Parsing.TextFacts.TrimEnd(this.Text)|0,nextLineBreakStart=Kusto.Language.Parsing.TextFacts.GetNextLineBreakStart(this.Text,firstToken.Trivia.length),collapsedTextEnd=nextLineBreakStart>=0?nextLineBreakStart:this.Text.length,collapsedTextLength=Kusto.Language.Parsing.TextFacts.TrimEnd$1(this.Text,firstToken.Trivia.length,collapsedTextEnd-firstToken.Trivia.length|0),collapsedText=(this.Text.substr(firstToken.Trivia.length,collapsedTextLength)||"")+" ...";return new Kusto.Language.Editor.OutlineInfo(System.Array.init([new Kusto.Language.Editor.OutlineRange(start,end-start|0,collapsedText)],Kusto.Language.Editor.OutlineRange))}return Kusto.Language.Editor.OutlineInfo.Empty},ShouldAutoComplete:function(position,key,cancellationToken){return!1},GetCompletionItems:function(position,options,cancellationToken){return Kusto.Language.Editor.CompletionInfo.Empty},GetQuickInfo:function(position,options,cancellationToken){return Kusto.Language.Editor.QuickInfo.Empty},GetElement:function(position,cancellationToken){return new Kusto.Language.Editor.TextRange.$ctor1(0,0)},GetRelatedElements:function(position,options,cancellationToken){return Kusto.Language.Editor.RelatedInfo.Empty},GetClusterReferences:function(cancellationToken){return Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Editor.ClusterReference).Instance},GetDatabaseReferences:function(cancellationToken){return Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Editor.DatabaseReference).Instance},GetMinimalText:function(kind,cancellationToken){var list=new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SyntaxToken).ctor)(System.Linq.Enumerable.from(Kusto.Language.Parsing.TokenParser.ParseTokens(this.Text),Kusto.Language.Parsing.LexicalToken).select(function(t){return Kusto.Language.Syntax.SyntaxToken.From(t)}).ToArray(Kusto.Language.Syntax.SyntaxToken));return list.ToString(Kusto.Language.Editor.KustoCodeService.GetIncludeTrivia(kind))},GetFormattedText:function(options,caretPosition,cancellationToken){return new Kusto.Language.Editor.FormattedText(this.Text,caretPosition)},GetClientParameters:function(){return this._clientParameters==null&&(this._clientParameters=this.GetClientParameters$1(this.Text)),this._clientParameters},GetClientParameters$1:function(blockText){for(var list=null,start=0,openBrace,len;start<blockText.length;)if(openBrace=System.String.indexOf(blockText,"{",start),openBrace>=0)len=Kusto.Language.Parsing.TokenParser.ScanClientParameter(blockText,openBrace),len>0?(list==null&&(list=new(System.Collections.Generic.List$1(Kusto.Language.Editor.ClientParameter).ctor)),list.add(new Kusto.Language.Editor.ClientParameter.$ctor1(blockText.substr(openBrace+1|0,len-2|0),openBrace,len)),start=openBrace+len|0):start=openBrace+1|0;else break;return list!=null?list.AsReadOnly():Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Editor.ClientParameter).Instance}}});Bridge.define("Kusto.Language.Editor.ConvertToMacroExpandActor",{inherits:[Kusto.Language.Editor.KustoActor],statics:{fields:{ConvertSelectionKind:null,ConvertUnionKind:null,ConvertSelectionToMacroExpandAction:null,ConvertUnionToMacroExpandAction:null,InitialEntityGroupElementName:null},ctors:{init:function(){this.ConvertSelectionKind="ConvertSelection";this.ConvertUnionKind="ConvertUnion";this.ConvertSelectionToMacroExpandAction=Kusto.Language.Editor.CodeAction.Create$1(Kusto.Language.Editor.ConvertToMacroExpandActor.ConvertSelectionKind,"Convert selection to macro-expand","Move the selection into macro-expand body.");this.ConvertUnionToMacroExpandAction=Kusto.Language.Editor.CodeAction.Create$1(Kusto.Language.Editor.ConvertToMacroExpandActor.ConvertUnionKind,"Convert union to macro-expand","Convert union inputs into entity group and move remaining query into a macro-expand expression.");this.InitialEntityGroupElementName="_scope"}},methods:{IsInsideMacroExpand:function(element){return element.GetFirstAncestor(Kusto.Language.Syntax.MacroExpandOperator)!=null}}},methods:{GetActions:function(service,code,position,selectionStart,selectionLength,options,actions,waitForAnalysis,cancellationToken){var token=code.Syntax.GetTokenAt(position),entity,_discard1,query;position>=token.TextStart&&position<=token.End&&!Kusto.Language.Editor.ConvertToMacroExpandActor.IsInsideMacroExpand(token)&&((entity=Kusto.Language.Editor.ActorUtilities.GetEntityExpressionStart(token,code.Globals))!=null&&(selectionLength===0&&(selectionStart=0,selectionLength=code.Text.length),actions.add(Kusto.Language.Editor.ConvertToMacroExpandActor.ConvertSelectionToMacroExpandAction.WithData$2([Bridge.toString(selectionStart),Bridge.toString(selectionLength),Bridge.toString(position)]))),_discard1={},query={},this.TryGetUnionQuery(token,query)&&this.TryGetUnionEntityExpressions(query.v,code.Globals,_discard1)&&actions.add(Kusto.Language.Editor.ConvertToMacroExpandActor.ConvertUnionToMacroExpandAction.WithData$2([Bridge.toString(position)])))},ApplyAction:function(service,code,action,caretPosition,options,cancellationToken){switch(action.Kind){case Kusto.Language.Editor.ConvertToMacroExpandActor.ConvertSelectionKind:return this.ConvertSelection(code,action,options);case Kusto.Language.Editor.ConvertToMacroExpandActor.ConvertUnionKind:return this.ConvertUnion(code,action,options);default:return Kusto.Language.Editor.CodeActionResult.Failure(System.String.format("Unknown action kind: {0}",[action.Kind]))}},ConvertSelection:function(code,action,options){var selectionStart={},selectionLength={},position={},token,entityStart,entitySymbol;if(System.Array.getCount(action.Data,System.String)>=3&&System.Int32.tryParse(System.Array.getItem(action.Data,0,System.String),selectionStart)&&System.Int32.tryParse(System.Array.getItem(action.Data,1,System.String),selectionLength)&&System.Int32.tryParse(System.Array.getItem(action.Data,2,System.String),position)&&(token=code.Syntax.GetTokenAt(position.v))!=null&&(entityStart=Kusto.Language.Editor.ActorUtilities.GetEntityExpressionStart(token,code.Globals))!=null&&(entitySymbol=Bridge.as(entityStart.ResultType,Kusto.Language.Symbols.Symbol))!=null){Kusto.Language.Parsing.TextFacts.TrimRangeEnd(code.Text,selectionStart.v,selectionLength);Kusto.Language.Editor.ActorUtilities.AdjustRangeToNode(code,selectionStart,selectionLength);var originalText=new Kusto.Language.Editor.EditString.ctor(code.Text),textWithBrackets=Kusto.Language.Editor.ActorUtilities.InsertBrackets(originalText,selectionStart.v,System.String.format("macro-expand entity_group [{0}] as {1}",entityStart.ToString(Kusto.Language.Syntax.IncludeTrivia.Interior),Kusto.Language.Editor.ConvertToMacroExpandActor.InitialEntityGroupElementName),"(",selectionStart.v+selectionLength.v|0,")",options.FormattingOptions),entityExpressions=this.GetEntityExpressionStarts(code,entitySymbol),textWithReplacements=textWithBrackets.ApplyAll(System.Linq.Enumerable.from(entityExpressions,Kusto.Language.Syntax.Expression).select(function(ex){var newStart={},newWidth={};return textWithBrackets.GetCurrentRange(ex.TextStart,ex.Width,newStart,newWidth),Kusto.Language.Editor.TextEdit.Replacement(newStart.v,newWidth.v,Kusto.Language.Editor.ConvertToMacroExpandActor.InitialEntityGroupElementName)}).ToArray(Kusto.Language.Editor.TextEdit)),newCaretPosition=System.String.indexOf(textWithReplacements.CurrentText,Kusto.Language.Editor.ConvertToMacroExpandActor.InitialEntityGroupElementName);return new Kusto.Language.Editor.CodeActionResult.ctor([new Kusto.Language.Editor.ChangeTextAction.ctor(textWithReplacements),new Kusto.Language.Editor.MoveCaretAction(newCaretPosition),new Kusto.Language.Editor.RenameAction])}return Kusto.Language.Editor.CodeActionResult.Failure()},GetEntityExpressionStarts:function(code,symbol){return System.Linq.Enumerable.from(code.Syntax.GetDescendantsOrSelf(Kusto.Language.Syntax.Expression,function(ex){var pe;return Bridge.referenceEquals(ex.ResultType,symbol)&&!((pe=Bridge.as(ex.Parent,Kusto.Language.Syntax.PathExpression))!=null&&Bridge.referenceEquals(pe.Selector,ex))}),Kusto.Language.Syntax.Expression).select(function(ex){return Kusto.Language.Editor.ActorUtilities.GetEntityExpressionStart(ex,code.Globals)}).where(function(ex){return ex!=null}).distinct().toList(Kusto.Language.Syntax.Expression)},ConvertUnion:function(code,action,options){var position={},unionQuery={},entities={},query={},token,textWithReplacements,newCaretPosition;if(System.Array.getCount(action.Data,System.String)>=1&&System.Int32.tryParse(System.Array.getItem(action.Data,0,System.String),position)&&(token=code.Syntax.GetTokenAt(position.v))!=null&&this.TryGetUnionQuery(token,unionQuery)&&this.TryGetUnionEntityExpressions(unionQuery.v,code.Globals,entities)&&this.TryGetQuery(token,query)){var originalText=new Kusto.Language.Editor.EditString.ctor(code.Text),entityList=Bridge.toArray(System.Linq.Enumerable.from(entities.v,Kusto.Language.Syntax.Expression).select(function(e){return e.ToString(Kusto.Language.Syntax.IncludeTrivia.Interior)})).join(", "),textWithBrackets=Kusto.Language.Editor.ActorUtilities.InsertBrackets(originalText,query.v.TextStart,System.String.format("macro-expand entity_group [{0}] as {1}",entityList,Kusto.Language.Editor.ConvertToMacroExpandActor.InitialEntityGroupElementName),"(",query.v.End,")",options.FormattingOptions),newUnionQueryStart={},newUnionQueryLength={};return textWithBrackets.GetCurrentRange(unionQuery.v.TextStart,unionQuery.v.End-unionQuery.v.TextStart|0,newUnionQueryStart,newUnionQueryLength),textWithReplacements=textWithBrackets.ReplaceAt(newUnionQueryStart.v,newUnionQueryLength.v,Kusto.Language.Editor.ConvertToMacroExpandActor.InitialEntityGroupElementName),newCaretPosition=System.String.indexOf(textWithReplacements.CurrentText,Kusto.Language.Editor.ConvertToMacroExpandActor.InitialEntityGroupElementName),new Kusto.Language.Editor.CodeActionResult.ctor([new Kusto.Language.Editor.ChangeTextAction.ctor(textWithReplacements),new Kusto.Language.Editor.MoveCaretAction(newCaretPosition),new Kusto.Language.Editor.RenameAction])}return Kusto.Language.Editor.CodeActionResult.Failure()},TryGetUnionQuery:function(token,query){var $t,$t1,pipe;for(query.v=($t=token.Parent)!=null?$t.GetFirstAncestorOrSelf(Kusto.Language.Syntax.UnionOperator):null,query.v==null&&(query.v=($t1=token.Parent)!=null?$t1.GetFirstAncestorOrSelf(Kusto.Language.Syntax.PipeExpression,function(p){return Bridge.is(p.Operator,Kusto.Language.Syntax.UnionOperator)}):null);(pipe=query.v!=null?query.v.Parent:Bridge.as(null,Kusto.Language.Syntax.PipeExpression))!=null;){if(Bridge.is(pipe.Operator,Kusto.Language.Syntax.UnionOperator)){query.v=pipe;continue}break}return query.v!=null},TryGetQuery:function(token,query){var $t,$t1,pipe;for(query.v=($t=token.Parent)!=null?$t.GetFirstAncestorOrSelf(Kusto.Language.Syntax.QueryOperator):null,query.v==null&&(query.v=($t1=token.Parent)!=null?$t1.GetFirstAncestorOrSelf(Kusto.Language.Syntax.PipeExpression):null);(pipe=query.v!=null?query.v.Parent:Bridge.as(null,Kusto.Language.Syntax.PipeExpression))!=null;){query.v=pipe;continue}return query.v!=null},TryGetUnionEntityExpressions:function(query,globals,entities){return entities.v=new(System.Collections.Generic.List$1(Kusto.Language.Syntax.Expression).ctor),this.GetUnionEntityExpressions(query,globals,entities.v)},GetUnionEntityExpressions:function(query,globals,entities){var pipe,union,i,expr,entity,entity1;if((pipe=Bridge.as(query,Kusto.Language.Syntax.PipeExpression))!=null)return this.GetUnionEntityExpressions(pipe.Expression,globals,entities)?this.GetUnionEntityExpressions(pipe.Operator,globals,entities)?!0:!1:!1;else if((union=Bridge.as(query,Kusto.Language.Syntax.UnionOperator))!=null){for(i=0;i<union.Expressions.Count;i=i+1|0){if(expr=union.Expressions.getItem$1(i).Element$1,entity=Kusto.Language.Editor.ActorUtilities.GetEntityExpression(expr,globals),entity==null)return!1;entities.add(entity)}return!0}else return(entity1=Kusto.Language.Editor.ActorUtilities.GetEntityExpression(query,globals),entity1==null)?!1:(entities.add(entity1),!0)}}});Bridge.define("Kusto.Language.Editor.DatabaseReference",{inherits:[Kusto.Language.Editor.SyntaxReference],props:{Database:null,Cluster:null},ctors:{ctor:function(database,cluster,start,length){this.$initialize();Kusto.Language.Editor.SyntaxReference.$ctor1.call(this,start,length);this.Database=database;this.Cluster=cluster}}});Bridge.define("Kusto.Language.Editor.DiagnosticFixActor",{inherits:[Kusto.Language.Editor.KustoActor],statics:{methods:{GetCodeToDiagnosticMap:function(diagnostics){var $t,map=new(System.Collections.Generic.Dictionary$2(System.String,System.Collections.Generic.List$1(Kusto.Language.Diagnostic)).ctor),dx,list;$t=Bridge.getEnumerator(diagnostics,Kusto.Language.Diagnostic);try{while($t.moveNext())dx=$t.Current,list={},map.tryGetValue(dx.Code,list)||(list.v=new(System.Collections.Generic.List$1(Kusto.Language.Diagnostic).ctor),map.add(dx.Code,list.v)),list.v.add(dx)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return map}}},fields:{_codeToFixerMap:null,_nameToFixerMap:null},ctors:{ctor:function(fixers){var $t,$t1,$t2,fixer,dx;fixers===void 0&&(fixers=null);this.$initialize();Kusto.Language.Editor.KustoActor.ctor.call(this);fixers=fixers||Kusto.Language.Editor.KustoFixers.All;this._nameToFixerMap=($t=Kusto.Language.Editor.KustoFixer,System.Linq.Enumerable.from(fixers,$t).toDictionary(function(a){return a.Name},null,System.String,$t));this._codeToFixerMap=new(System.Collections.Generic.Dictionary$2(System.String,Kusto.Language.Editor.KustoFixer).ctor);$t1=Bridge.getEnumerator(fixers,Kusto.Language.Editor.KustoFixer);try{while($t1.moveNext()){fixer=$t1.Current;$t2=Bridge.getEnumerator(fixer.Diagnostics,Kusto.Language.Diagnostic);try{while($t2.moveNext())dx=$t2.Current,this._codeToFixerMap.setItem(dx.Code,fixer)}finally{Bridge.is($t2,System.IDisposable)&&$t2.System$IDisposable$Dispose()}}}finally{Bridge.is($t1,System.IDisposable)&&$t1.System$IDisposable$Dispose()}}},methods:{GetActions:function(service,code,position,selectionStart,selectionLength,options,actions,waitForAnalysis,cancellationToken){var $t,analyzerDiagnostics={v:null},diagnosticsAtPosition,diagnosticsInSelectionMap,fixActions,dx,fixer,selectionDiagnostics;if(waitForAnalysis?analyzerDiagnostics.v=service.GetAnalyzerDiagnostics(waitForAnalysis,cancellationToken):service.TryGetCachedAnalyzerDiagnostics(analyzerDiagnostics),analyzerDiagnostics.v!=null){diagnosticsAtPosition=System.Linq.Enumerable.from(analyzerDiagnostics.v,Kusto.Language.Diagnostic).where(function(d){return Kusto.Language.Editor.TextRange.Overlaps(position,0,d.Start,d.Length)&&options.DiagnosticFilter.IsDiagnosticEnabled(d)}).toList(Kusto.Language.Diagnostic);selectionLength===0&&(selectionStart=0,selectionLength=code.Text.length);diagnosticsInSelectionMap=null;position>=selectionStart&&position<(selectionStart+selectionLength|0)&&(diagnosticsInSelectionMap=Kusto.Language.Editor.DiagnosticFixActor.GetCodeToDiagnosticMap(System.Linq.Enumerable.from(analyzerDiagnostics.v,Kusto.Language.Diagnostic).where(function(d){return Kusto.Language.Editor.TextRange.Overlaps(selectionStart,selectionLength,d.Start,d.Length)&&options.DiagnosticFilter.IsDiagnosticEnabled(d)})));fixActions=new(System.Collections.Generic.List$1(Kusto.Language.Editor.CodeAction).ctor);$t=Bridge.getEnumerator(diagnosticsAtPosition);try{while($t.moveNext())dx=$t.Current,fixer={},this._codeToFixerMap.tryGetValue(dx.Code,fixer)&&(selectionDiagnostics={v:null},diagnosticsInSelectionMap!=null?diagnosticsInSelectionMap.tryGetValue(dx.Code,selectionDiagnostics):null,fixActions.clear(),fixer.v.GetFixActions(code,dx,selectionDiagnostics.v||Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Diagnostic).Instance,options,fixActions,cancellationToken),fixActions.Count>0&&actions.AddRange(System.Linq.Enumerable.from(fixActions,Kusto.Language.Editor.CodeAction).select(function($me,fixer){return Bridge.fn.bind($me,function(a){return this.EncodeFixerName(a,fixer.v.Name)})}(this,fixer))))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}},EncodeFixerName:function(action,fixerName){return Kusto.Language.Editor.ActorUtilities.AddData$1(action,[fixerName])},ApplyAction:function(service,code,action,caretPosition,options,cancellationToken){var fixerName=System.Linq.Enumerable.from(action.Data,System.String).lastOrDefault(null,null),fixer={};return!System.String.isNullOrEmpty(fixerName)&&this._nameToFixerMap.tryGetValue(fixerName,fixer)?(action=action.RemoveData(1),fixer.v.ApplyFixAction(code,action,caretPosition,options,cancellationToken)):Kusto.Language.Editor.CodeActionResult.Failure("Unknown fixer")}}});Bridge.define("Kusto.Language.Editor.ExtractExpressionActor",{inherits:[Kusto.Language.Editor.KustoActor],statics:{fields:{ExtractValueKind:null,ExtractExpressionKind:null,ExtractFunctionKind:null,ExtractValueAction:null,ExtractExpressionAction:null,ExtractFunctionAction:null},ctors:{init:function(){this.ExtractValueKind="Extract Value";this.ExtractExpressionKind="Extract Expression";this.ExtractFunctionKind="Extract Function";this.ExtractValueAction=Kusto.Language.Editor.CodeAction.Create(Kusto.Language.Editor.ExtractExpressionActor.ExtractValueKind,"Extract value into new let statement variable declaration.");this.ExtractExpressionAction=Kusto.Language.Editor.CodeAction.Create$1(Kusto.Language.Editor.ExtractExpressionActor.ExtractExpressionKind,Kusto.Language.Editor.ExtractExpressionActor.ExtractExpressionKind,"Extract expression into new let statement variable declaration.");this.ExtractFunctionAction=Kusto.Language.Editor.CodeAction.Create$1(Kusto.Language.Editor.ExtractExpressionActor.ExtractFunctionKind,Kusto.Language.Editor.ExtractExpressionActor.ExtractFunctionKind,"Extract expression into new let statement function declaration.")}},methods:{GetLetVariableName:function(expr){return Bridge.is(expr,Kusto.Language.Syntax.PipeExpression)||Bridge.is(expr,Kusto.Language.Syntax.QueryOperator)||expr.ResultType!=null&&expr.ResultType.IsTabular?"queryName":"varName"},GetCandidateParameters:function(code,start,length){var externalSymbols=System.Linq.Enumerable.from(Kusto.Language.Editor.ActorUtilities.GetExternalSymbolsReferenced(code,start,length)).ofType(Kusto.Language.Symbols.ColumnSymbol).toList(Kusto.Language.Symbols.ColumnSymbol),insertionPosition={},symbolsAtInsertionPoint,remainingSymbols;return externalSymbols.Count===0||!Kusto.Language.Editor.ActorUtilities.TryGetNearestStatementInsertionPosition(code,start,insertionPosition)?Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Symbols.ColumnSymbol).Instance:(symbolsAtInsertionPoint=code.GetSymbolsInScope(insertionPosition.v),remainingSymbols=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Symbols.ColumnSymbol,System.Linq.Enumerable.from(externalSymbols,Kusto.Language.Symbols.Symbol).except(symbolsAtInsertionPoint).ofType(Kusto.Language.Symbols.ColumnSymbol)),remainingSymbols)}}},methods:{GetActions:function(service,code,position,selectionStart,selectionLength,options,actions,waitForAnalysis,cancellationToken){selectionLength>0?(this.CanExtractExpression(code,selectionStart,selectionLength)&&actions.add(Kusto.Language.Editor.ExtractExpressionActor.ExtractExpressionAction.WithData$2([Bridge.toString(selectionStart),Bridge.toString(selectionLength)])),this.CanExtractFunction(code,selectionStart,selectionLength)&&actions.add(Kusto.Language.Editor.ExtractExpressionActor.ExtractFunctionAction.WithData$2([Bridge.toString(selectionStart),Bridge.toString(selectionLength)]))):this.CanExtractValue(code,position)&&actions.add(Kusto.Language.Editor.ExtractExpressionActor.ExtractValueAction.WithData$2([Bridge.toString(position),"0"]))},CanExtractValue:function(code,position){var token=Kusto.Language.Editor.ActorUtilities.GetTokenNear(code,position),lit;return position>=token.TextStart&&position<=token.End&&(lit=Bridge.as(token.Parent,Kusto.Language.Syntax.LiteralExpression))!=null&&!Kusto.Language.Editor.ActorUtilities.IsExpressionOfLetStatement(lit)?!0:!1},CanExtractExpression:function(code,position,length){position={v:position};length={v:length};Kusto.Language.Editor.ActorUtilities.TrimRangeTrivia(code,position,length);var ex;return((ex=Bridge.as(code.Syntax.GetNodeAt(position.v,length.v),Kusto.Language.Syntax.Expression))!=null)?ex.TextStart<position.v||ex.End>(position.v+length.v|0)?!1:Kusto.Language.Editor.ActorUtilities.IsExpressionOfLetStatement(ex)||!Kusto.Language.Editor.ActorUtilities.IsFreeStandingExpression(ex)?!1:System.Array.getCount(Kusto.Language.Editor.ExtractExpressionActor.GetCandidateParameters(code,position.v,length.v),Kusto.Language.Symbols.ColumnSymbol)>0?!1:!0:!1},CanExtractFunction:function(code,position,length){var ex,pe;return(position={v:position},length={v:length},Kusto.Language.Editor.ActorUtilities.TrimRangeTrivia(code,position,length),(ex=Bridge.as(code.Syntax.GetNodeAt(position.v,length.v),Kusto.Language.Syntax.Expression))!=null)?(pe=Bridge.as(ex,Kusto.Language.Syntax.PipeExpression))!=null&&Kusto.Language.Editor.ActorUtilities.TryGetAdjustedSubqueryRange(code,position,length)?System.Array.getCount(Kusto.Language.Editor.ActorUtilities.GetColumnsInScope(code,position.v),Kusto.Language.Symbols.ColumnSymbol)>0:Bridge.is(ex,Kusto.Language.Syntax.QueryOperator)&&System.Array.getCount(Kusto.Language.Editor.ActorUtilities.GetColumnsInScope(code,position.v),Kusto.Language.Symbols.ColumnSymbol)>0?!0:!Kusto.Language.Editor.ActorUtilities.IsExpressionOfLetStatement(ex)&&ex.ResultType!=null&&ex.ResultType.IsScalar&&System.Array.getCount(Kusto.Language.Editor.ExtractExpressionActor.GetCandidateParameters(code,position.v,length.v),Kusto.Language.Symbols.ColumnSymbol)>0:!1},ApplyAction:function(service,code,action,caretPosition,options,cancellationToken){var position={},length={};if(System.Array.getCount(action.Data,System.String)===2&&System.Int32.tryParse(System.Array.getItem(action.Data,0,System.String),position)&&System.Int32.tryParse(System.Array.getItem(action.Data,1,System.String),length))switch(action.Kind){case Kusto.Language.Editor.ExtractExpressionActor.ExtractExpressionKind:return this.GetExpressionResult(code,position.v,length.v);case Kusto.Language.Editor.ExtractExpressionActor.ExtractFunctionKind:return this.GetFunctionResult(code,position.v,length.v,options);case Kusto.Language.Editor.ExtractExpressionActor.ExtractValueKind:return this.GetValueResult(code,position.v);default:return Kusto.Language.Editor.CodeActionResult.Failure("Unknown action")}else return Kusto.Language.Editor.CodeActionResult.Failure("Bad action data")},GetValueResult:function(code,position){var token=Kusto.Language.Editor.ActorUtilities.GetTokenNear(code,position),lit;return position>=token.TextStart&&position<=token.End&&(lit=Bridge.as(token.Parent,Kusto.Language.Syntax.LiteralExpression))!=null?this.GetExpressionResult(code,token.TextStart,token.Width):Kusto.Language.Editor.CodeActionResult.Failure("Invalid literal value")},GetExpressionResult:function(code,position,length){var ex,insertionPosition;if(position={v:position},length={v:length},Kusto.Language.Editor.ActorUtilities.TrimRangeTrivia(code,position,length),(ex=Bridge.as(code.Syntax.GetNodeAt(position.v,length.v),Kusto.Language.Syntax.Expression))!=null&&ex.TextStart>=position.v&&ex.End<=(position.v+length.v|0))if(insertionPosition={},Kusto.Language.Editor.ActorUtilities.TryGetNearestStatementInsertionPosition(code,position.v,insertionPosition)){var baseName=Kusto.Language.Editor.ExtractExpressionActor.GetLetVariableName(ex),newName=Kusto.Language.Editor.ActorUtilities.GetNewName(code,position.v,baseName),indentation=Kusto.Language.Parsing.TextFacts.GetWhitespace(code.Text,insertionPosition.v),letStatement=System.String.format("{0}let {1} = {2};\n",indentation,newName,ex.ToString(Kusto.Language.Syntax.IncludeTrivia.Interior)),newText=new Kusto.Language.Editor.EditString.ctor(code.Text).ReplaceAt(ex.TextStart,ex.Width,newName).Insert(insertionPosition.v,letStatement),newPosition=(insertionPosition.v+indentation.length|0)+4|0;return Kusto.Language.Editor.CodeActionResult.ChangeAndMove(newText,newPosition).WithAction(Kusto.Language.Editor.RenameAction.Instance)}else return Kusto.Language.Editor.CodeActionResult.Failure("No insertion location available.");else return Kusto.Language.Editor.CodeActionResult.Failure("Invalid selection range")},GetFunctionResult:function(code,position,length,options){var ex,pe;if(position={v:position},length={v:length},Kusto.Language.Editor.ActorUtilities.TrimRangeTrivia(code,position,length),(ex=Bridge.as(code.Syntax.GetNodeAt(position.v,length.v),Kusto.Language.Syntax.Expression))!=null)if((pe=Bridge.as(ex,Kusto.Language.Syntax.PipeExpression))!=null||ex.ResultType!=null&&ex.ResultType.IsTabular)return this.GetTabularFunctionResult(code,position.v,length.v,options);else if(ex.ResultType!=null&&ex.ResultType.IsScalar)return this.GetScalarFunctionResult(code,position.v,length.v,options);return Kusto.Language.Editor.CodeActionResult.Failure("Invalid selection range")},GetScalarFunctionResult:function(code,position,length,options){var insertionPosition={};if(Kusto.Language.Editor.ActorUtilities.TryGetNearestStatementInsertionPosition(code,position,insertionPosition)){var candidateParameters=Kusto.Language.Editor.ExtractExpressionActor.GetCandidateParameters(code,position,length),parameterList=Kusto.Language.Editor.ActorUtilities.GetSchema(candidateParameters),argumentList="("+(Bridge.toArray(System.Linq.Enumerable.from(candidateParameters,Kusto.Language.Symbols.ColumnSymbol).select(function(s){return Kusto.Language.KustoFacts.BracketNameIfNecessary(s.Name)})).join(", ")||"")+")",baseName="functionName",newName=Kusto.Language.Editor.ActorUtilities.GetNewName(code,position,baseName),indentation=Kusto.Language.Parsing.TextFacts.GetWhitespace(code.Text,insertionPosition.v),letStatement=System.String.format("{0}let {1} = {2} {{ {3} }};\n",indentation,newName,parameterList,code.Text.substr(position,length)),invocation=System.String.format("{0}{1}",newName,argumentList),newText=new Kusto.Language.Editor.EditString.ctor(code.Text).ReplaceAt(position,length,invocation).Insert(insertionPosition.v,letStatement),newPosition=(insertionPosition.v+indentation.length|0)+4|0;return Kusto.Language.Editor.CodeActionResult.ChangeAndMove(newText,newPosition).WithAction(Kusto.Language.Editor.RenameAction.Instance)}return Kusto.Language.Editor.CodeActionResult.Failure("No insertion location available.")},GetTabularFunctionResult:function(code,position,length,options){var insertionPosition;if(position={v:position},length={v:length},insertionPosition={},Kusto.Language.Editor.ActorUtilities.TryGetAdjustedSubqueryRange(code,position,length)&&Kusto.Language.Editor.ActorUtilities.TryGetNearestStatementInsertionPosition(code,position.v,insertionPosition)){var candidateParameters=Kusto.Language.Editor.ExtractExpressionActor.GetCandidateParameters(code,position.v,length.v),tableArgumentType=System.Array.getCount(candidateParameters,Kusto.Language.Symbols.ColumnSymbol)>0?Kusto.Language.Editor.ActorUtilities.GetSchema(candidateParameters):"(*)",tableArgumentName=Kusto.Language.Editor.ActorUtilities.GetNewName(code,position.v,"inputTable"),parameterList=System.String.format("({0}: {1})",tableArgumentName,tableArgumentType),baseName="functionName",newName=Kusto.Language.Editor.ActorUtilities.GetNewName(code,position.v,baseName),lineIndentation=Kusto.Language.Parsing.TextFacts.GetWhitespace(code.Text,insertionPosition.v),nestedIdentation=(lineIndentation||"")+(System.String.fromCharCount(32,options.FormattingOptions.IndentationSize)||""),insertionText=code.Text.substr(position.v,length.v);insertionText=Kusto.Language.Editor.ActorUtilities.ChangeIndentation(insertionText,nestedIdentation,!1);var letStatement=System.String.format("{0}let {1} = {2} {{\n{3}{4}\n{5}| {6}\n{7}}};\n",lineIndentation,newName,parameterList,nestedIdentation,tableArgumentName,nestedIdentation,insertionText,lineIndentation),invocation=System.String.format("invoke {0}()",[newName]),newText=new Kusto.Language.Editor.EditString.ctor(code.Text).ReplaceAt(position.v,length.v,invocation).Insert(insertionPosition.v,letStatement),newPosition=(insertionPosition.v+lineIndentation.length|0)+4|0;return Kusto.Language.Editor.CodeActionResult.ChangeAndMove(newText,newPosition).WithAction(Kusto.Language.Editor.RenameAction.Instance)}return Kusto.Language.Editor.CodeActionResult.Failure("No insertion location available.")}}});Bridge.define("Kusto.Language.Editor.InlineDatabaseFunctionActor",{inherits:[Kusto.Language.Editor.KustoActor],statics:{fields:{InlineOnceKind:null,InlineRecursiveKind:null,InlineAllOnceKind:null,InlineAllRecursiveKind:null,InlineFunctionMenuAction:null,InlineOnceAction:null,InlineRecursiveAction:null,InlineAllOnceAction:null,InlineAllRecursiveAction:null},ctors:{init:function(){this.InlineOnceKind="InlineOnce";this.InlineRecursiveKind="InlineRecursive";this.InlineAllOnceKind="InlineAllOnce";this.InlineAllRecursiveKind="InlineAllRecursive";this.InlineFunctionMenuAction=Kusto.Language.Editor.CodeAction.CreateMenu("Inline Function","Copy database function into query.",null);this.InlineOnceAction=Kusto.Language.Editor.CodeAction.Create$1(Kusto.Language.Editor.InlineDatabaseFunctionActor.InlineOnceKind,"Inline","Inline this function only.");this.InlineRecursiveAction=Kusto.Language.Editor.CodeAction.Create$1(Kusto.Language.Editor.InlineDatabaseFunctionActor.InlineRecursiveKind,"Inline Recursive","Inline this function recursively.");this.InlineAllOnceAction=Kusto.Language.Editor.CodeAction.Create$1(Kusto.Language.Editor.InlineDatabaseFunctionActor.InlineAllOnceKind,"Inline All","Inline all functions in selection or query.");this.InlineAllRecursiveAction=Kusto.Language.Editor.CodeAction.Create$1(Kusto.Language.Editor.InlineDatabaseFunctionActor.InlineAllRecursiveKind,"Inline All, Recursive","Inline all functions in selection or query, recursively.")}},methods:{IsDatabaseFunctionReference:function(nameRef,globals){var fs;return(fs=Bridge.as(nameRef.ReferencedSymbol,Kusto.Language.Symbols.FunctionSymbol))!=null&&globals.IsDatabaseFunction(fs)&&Kusto.Language.Editor.InlineDatabaseFunctionActor.IsGoodReference(nameRef,fs)},IsGoodReference:function(nameRef,fs){return Bridge.is(nameRef.Parent,Kusto.Language.Syntax.FunctionCallExpression)||fs.MinArgumentCount===0},InlineOnce:function(code,functionPosition,caretPosition){return Kusto.Language.Editor.InlineDatabaseFunctionActor.InlineAllOnce(code,functionPosition,0,caretPosition)},InlineRecursive:function(code,functionPosition,caretPosition){return Kusto.Language.Editor.InlineDatabaseFunctionActor.InlineAllRecursive(code,functionPosition,0,caretPosition)},InlineAllOnce:function(code,selectionStart,selectionLength,caretPosition){var functions=Kusto.Language.Editor.InlineDatabaseFunctionActor.GetDatabaseFunctionsReferencedInRange(code,selectionStart,selectionLength);return Kusto.Language.Editor.InlineDatabaseFunctionActor.InlineFunctions(code,functions,caretPosition,!1)},InlineAllRecursive:function(code,selectionStart,selectionLength,caretPosition){var functions=Kusto.Language.Editor.InlineDatabaseFunctionActor.GetDatabaseFunctionsReferencedInRange(code,selectionStart,selectionLength);return Kusto.Language.Editor.InlineDatabaseFunctionActor.InlineFunctions(code,functions,caretPosition,!0)},GetDatabaseFunctionsReferencedInRange:function(code,selectionStart,selectionLength){return System.Linq.Enumerable.from(code.Syntax.GetDescendants(Kusto.Language.Syntax.NameReference,function(nr){return Kusto.Language.Editor.InlineDatabaseFunctionActor.IsDatabaseFunctionReference(nr,code.Globals)}),Kusto.Language.Syntax.NameReference).where(function(nr){return Kusto.Language.Editor.InlineDatabaseFunctionActor.RangeOverlaps(nr.TextStart,nr.Width,selectionStart,selectionLength)}).select(function(nr){return Bridge.cast(nr.ReferencedSymbol,Kusto.Language.Symbols.FunctionSymbol)}).distinct().toList(Kusto.Language.Symbols.FunctionSymbol)},RangeOverlaps:function(start1,length1,start2,length2){var minEnd=Math.min(start1+length1|0,start2+length2|0),maxStart=Math.max(start1,start2);return minEnd>=maxStart},InlineFunctions:function(code,functions,caretPosition,recursive){for(var resultAction=Kusto.Language.Editor.CodeActionResult.Nothing,remaining=Kusto.Language.Utils.ListExtensions.ToHashSetEx(Kusto.Language.Symbols.FunctionSymbol,functions),alreadyInlined=new(System.Collections.Generic.HashSet$1(Kusto.Language.Symbols.FunctionSymbol).ctor),$function,action,changeAction,moveAction,range,additionalFunctions;remaining.Count>0;){if($function=System.Linq.Enumerable.from(remaining,Kusto.Language.Symbols.FunctionSymbol).first(),remaining.remove($function),alreadyInlined.add($function),action=Kusto.Language.Editor.InlineDatabaseFunctionActor.InlineFunction(code,$function,caretPosition),action.FailureReason!=null){Bridge.referenceEquals(resultAction,Kusto.Language.Editor.CodeActionResult.Nothing)&&(resultAction=action);break}resultAction=action;changeAction=System.Linq.Enumerable.from(resultAction.Actions).ofType(Kusto.Language.Editor.ChangeTextAction).first();moveAction=System.Linq.Enumerable.from(resultAction.Actions).ofType(Kusto.Language.Editor.MoveCaretAction).first();caretPosition=moveAction.NewCaretPosition;code=Kusto.Language.KustoCode.ParseAndAnalyze(changeAction.ChangedText,code.Globals);recursive&&(range=new Kusto.Language.Editor.EditString.ctor(code.Text).ApplyAll$1(changeAction.Changes).GetChangeRange(),additionalFunctions=System.Linq.Enumerable.from(Kusto.Language.Editor.InlineDatabaseFunctionActor.GetDatabaseFunctionsReferencedInRange(code,range.Start,range.Length-1|0),Kusto.Language.Symbols.FunctionSymbol).where(function(f){return!alreadyInlined.contains(f)}).toList(Kusto.Language.Symbols.FunctionSymbol),Kusto.Language.Utils.HashSetExtensions.AddRange(Kusto.Language.Symbols.FunctionSymbol,remaining,additionalFunctions))}return resultAction},InlineFunction:function(code,$function,caretPosition){var nr=Kusto.Language.Editor.ActorUtilities.GetFirstReference(code.Syntax,$function),insertPosition,fc,body;if(nr!=null&&(insertPosition={},Kusto.Language.Editor.ActorUtilities.TryGetNearestTopLevelStatementInsertionPosition(code,nr.TextStart,insertPosition)))if(body=(fc=Bridge.as(nr.Parent,Kusto.Language.Syntax.FunctionCallExpression))!=null?fc.GetCalledFunctionBody():nr.GetCalledFunctionBody(),body!=null){var requalifiedBody=Kusto.Language.Editor.InlineDatabaseFunctionActor.GetBodyWithBraces(Kusto.Language.Editor.InlineDatabaseFunctionActor.GetRequalifiedDatabaseFunctionBody(body,code.Globals)),declaration=Kusto.Language.Editor.InlineDatabaseFunctionActor.GetLetStatement($function,Kusto.Language.Editor.EditString.op_Implicit$1(requalifiedBody)),requalifiedQuery=Kusto.Language.Editor.ActorUtilities.GetQueryWithDatabaseQualifiersRemoved(code.Syntax,$function,code.Globals),newText=requalifiedQuery.Insert(insertPosition.v,(declaration||"")+"\n"),newCaretPosition=newText.GetCurrentPosition(caretPosition);return Kusto.Language.Editor.CodeActionResult.ChangeAndMove(newText,newCaretPosition)}else return Kusto.Language.Editor.CodeActionResult.Failure("Could not access definition of referenced function");return Kusto.Language.Editor.CodeActionResult.Failure("Reference to database function not found")},GetLetStatement:function($function,body){body===void 0&&(body=null);body==null&&(body=Kusto.Language.Editor.EditString.op_Implicit$1(Kusto.Language.Editor.InlineDatabaseFunctionActor.GetBodyWithBraces(System.Array.getItem($function.Signatures,0,Kusto.Language.Symbols.Signature).Body)));var parameters=Kusto.Language.Symbols.Parameter.GetParameterListDeclaration(System.Array.getItem($function.Signatures,0,Kusto.Language.Symbols.Signature).Parameters);return System.String.format("let {0} = {1} {2};",Kusto.Language.KustoFacts.BracketNameIfNecessary($function.Name),parameters,body)},GetBodyWithBraces:function(body){var edit=new Kusto.Language.Editor.EditString.ctor(body);return System.String.startsWith(edit.CurrentText,"{",4)||(edit=edit.Prepend("{\n")),System.String.endsWith(edit.CurrentText,"}",4)||(edit=edit.Append("\n}")),edit},GetRequalifiedDatabaseFunctionBody:function(body,globals){var text=new Kusto.Language.Editor.EditString.ctor(body.ToString(Kusto.Language.Syntax.IncludeTrivia.All));return Kusto.Language.Editor.EditString.op_Implicit$1(Kusto.Language.Editor.KustoQualifier.Requalify$1(text,body,globals,globals.Cluster,globals.Database))}}},methods:{GetActions:function(service,code,position,selectionStart,selectionLength,options,actions,waitForAnalysis,cancellationToken){var token=code.Syntax.GetTokenAt(position),node,name,nr,menuActions,functionsInRange;position>=token.TextStart&&position<=token.End&&(node=code.Syntax.GetNodeAt(token.TextStart,token.Text.length),(name=Bridge.as(node,Kusto.Language.Syntax.Name))!=null&&(nr=Bridge.as(name.Parent,Kusto.Language.Syntax.NameReference))!=null&&Kusto.Language.Editor.InlineDatabaseFunctionActor.IsDatabaseFunctionReference(nr,code.Globals)&&(selectionLength===0&&(selectionStart=0,selectionLength=code.Text.length),menuActions=new(System.Collections.Generic.List$1(Kusto.Language.Editor.CodeAction).ctor),menuActions.add(Kusto.Language.Editor.InlineDatabaseFunctionActor.InlineOnceAction.WithData$2([Bridge.toString(position)])),menuActions.add(Kusto.Language.Editor.InlineDatabaseFunctionActor.InlineRecursiveAction.WithData$2([Bridge.toString(position)])),functionsInRange=Kusto.Language.Editor.InlineDatabaseFunctionActor.GetDatabaseFunctionsReferencedInRange(code,selectionStart,selectionLength),System.Array.getCount(functionsInRange,Kusto.Language.Symbols.FunctionSymbol)>1&&(menuActions.add(Kusto.Language.Editor.InlineDatabaseFunctionActor.InlineAllOnceAction.WithData$2([Bridge.toString(selectionStart),Bridge.toString(selectionLength)])),menuActions.add(Kusto.Language.Editor.InlineDatabaseFunctionActor.InlineAllRecursiveAction.WithData$2([Bridge.toString(selectionStart),Bridge.toString(selectionLength)]))),actions.add(Kusto.Language.Editor.InlineDatabaseFunctionActor.InlineFunctionMenuAction.WithActions$1(menuActions))))},ApplyAction:function(service,code,action,caretPosition,options,cancellationToken){var position={},length;if(System.Array.getCount(action.Data,System.String)>=1&&System.Int32.tryParse(System.Array.getItem(action.Data,0,System.String),position)){length={v:0};System.Array.getCount(action.Data,System.String)>=2&&System.Int32.tryParse(System.Array.getItem(action.Data,1,System.String),length);switch(action.Kind){case Kusto.Language.Editor.InlineDatabaseFunctionActor.InlineOnceKind:return Kusto.Language.Editor.InlineDatabaseFunctionActor.InlineOnce(code,position.v,caretPosition);case Kusto.Language.Editor.InlineDatabaseFunctionActor.InlineRecursiveKind:return Kusto.Language.Editor.InlineDatabaseFunctionActor.InlineRecursive(code,position.v,caretPosition);case Kusto.Language.Editor.InlineDatabaseFunctionActor.InlineAllOnceKind:return Kusto.Language.Editor.InlineDatabaseFunctionActor.InlineAllOnce(code,position.v,length.v,caretPosition);case Kusto.Language.Editor.InlineDatabaseFunctionActor.InlineAllRecursiveKind:return Kusto.Language.Editor.InlineDatabaseFunctionActor.InlineAllRecursive(code,position.v,length.v,caretPosition)}}return Kusto.Language.Editor.CodeActionResult.Failure("Bad action data")}}});Bridge.define("Kusto.Language.Editor.KustoAnalyzer.AnalyzerFixer",{inherits:[Kusto.Language.Editor.KustoFixer],$kind:"nested class",fields:{_analyzer:null},props:{Name:{get:function(){return this._analyzer.Name}}},ctors:{ctor:function(analyzer){this.$initialize();Kusto.Language.Editor.KustoFixer.ctor.call(this);this._analyzer=analyzer}},methods:{GetDiagnostics:function(){return this._analyzer.GetDiagnostics()},GetFixAction:function(code,dx,options,actions,cancellationToken){this._analyzer.GetFixAction(code,dx,options,actions,cancellationToken)},GetFixEdits:function(code,action,caretPosition,options,cancellationToken){return this._analyzer.GetFixEdits(code,action,caretPosition,options,cancellationToken)}}});Bridge.define("Kusto.Language.Editor.KustoCodeServiceFactory",{inherits:[Kusto.Language.Editor.CodeServiceFactory],statics:{methods:{IsKusto:function(text){return!Kusto.Language.Editor.KustoCodeServiceFactory.IsSql(text)},IsSql:function(text){var firstToken=Kusto.Language.Parsing.TokenParser.ParseToken(text,0),secondToken;return firstToken==null?!1:Kusto.Language.Parsing.TextFacts.IsWhitespaceOnly(firstToken.Trivia)?Bridge.referenceEquals(firstToken.Text,"-")&&(secondToken=Kusto.Language.Parsing.TokenParser.ParseToken(text,firstToken.Length),secondToken!=null&&Bridge.referenceEquals(secondToken.Text,"-")&&secondToken.Trivia.length===0)?!0:System.String.compare(firstToken.Text,"select",!0)===0:!1}}},props:{Globals:null},ctors:{ctor:function(globals){if(this.$initialize(),Kusto.Language.Editor.CodeServiceFactory.ctor.call(this),globals==null)throw new System.ArgumentNullException.$ctor1("globals");this.Globals=globals.WithCache()}},methods:{WithGlobals:function(globals){return Bridge.referenceEquals(this.Globals,globals)?this:new Kusto.Language.Editor.KustoCodeServiceFactory(globals)},TryGetCodeService:function(text,service){return Kusto.Language.Editor.KustoCodeServiceFactory.IsKusto(text)?(service.v=new Kusto.Language.Editor.KustoCodeService.$ctor1(text,this.Globals),!0):(service.v=null,!1)}}});Bridge.define("Kusto.Language.Editor.MenuAction",{inherits:[Kusto.Language.Editor.CodeAction],props:{Actions:null},ctors:{$ctor1:function(kind,title,description,actions){this.$initialize();Kusto.Language.Editor.CodeAction.ctor.call(this,kind,title,description);this.Actions=actions||Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Editor.CodeAction).Instance},ctor:function(title,description,actions){Kusto.Language.Editor.MenuAction.$ctor1.call(this,Kusto.Language.Editor.CodeAction.MenuKind,title,description,actions)}},methods:{New:function(kind,title,description){return new Kusto.Language.Editor.MenuAction.$ctor1(kind,title,description,this.Actions)},WithActions$1:function(actions){return new Kusto.Language.Editor.MenuAction.$ctor1(this.Kind,this.Title,this.Description,actions)},WithActions:function(actions){return actions===void 0&&(actions=[]),this.WithActions$1(Bridge.cast(actions,System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Editor.CodeAction)))}}});Bridge.define("Kusto.Language.Editor.MoveCaretAction",{inherits:[Kusto.Language.Editor.ResultAction],props:{NewCaretPosition:0},ctors:{ctor:function(newCaretPosition){this.$initialize();Kusto.Language.Editor.ResultAction.ctor.call(this);this.NewCaretPosition=newCaretPosition}}});Bridge.define("Kusto.Language.Editor.NullAggregationAnalyzer",{inherits:[Kusto.Language.Editor.KustoAnalyzer],statics:{fields:{_diagnostic:null},ctors:{init:function(){this._diagnostic=new Kusto.Language.Diagnostic.$ctor1(Kusto.Language.Editor.KustoAnalyzerCodes.NullAggregation,Kusto.Language.DiagnosticCategory.Correctness,Kusto.Language.DiagnosticSeverity.Warning,"Avoid using operations on possible null values inside sum aggregates")}}},methods:{GetDiagnostics:function(){return System.Array.init([Kusto.Language.Editor.NullAggregationAnalyzer._diagnostic],Kusto.Language.Diagnostic)},Analyze:function(code,diagnostics,cancellationToken){var $t,$t1,node,badSums;$t=Bridge.getEnumerator(code.Syntax.GetDescendants(Kusto.Language.Syntax.SummarizeOperator),Kusto.Language.Syntax.SummarizeOperator);try{while($t.moveNext()){node=$t.Current;badSums=node.Aggregates.GetDescendants(Kusto.Language.Syntax.FunctionCallExpression,function(fc){var b;return Bridge.referenceEquals(fc.ReferencedSymbol,Kusto.Language.Aggregates.Sum)&&fc.ArgumentList.Expressions.Count>0&&(b=Bridge.as(fc.ArgumentList.Expressions.getItem$1(0).Element$1,Kusto.Language.Syntax.BinaryExpression))!=null&&(b.Kind===Kusto.Language.Syntax.SyntaxKind.AddExpression||b.Kind===Kusto.Language.Syntax.SyntaxKind.SubtractExpression)});$t1=Bridge.getEnumerator(badSums,Kusto.Language.Syntax.FunctionCallExpression);try{while($t1.moveNext()){var bs=$t1.Current,binaryExpression=Bridge.as(bs.ArgumentList.Expressions.getItem$1(0).Element$1,Kusto.Language.Syntax.BinaryExpression),left=binaryExpression.Left.toString(),right=binaryExpression.Right.toString(),op=binaryExpression.Operator.Text;diagnostics.add(Kusto.Language.Editor.NullAggregationAnalyzer._diagnostic.WithMessage((System.String.format("If any of the columns referenced in '{0}' contains nulls, significant values might not be included due to scalar arithmetic null propagation rules.",[bs])||"")+"\n"+(System.String.format("Consider rewriting it as '{0}({1}) {2} {3}({4})'.",bs.Name,left,op,bs.Name,right)||"")).WithLocation(bs))}}finally{Bridge.is($t1,System.IDisposable)&&$t1.System$IDisposable$Dispose()}}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}}});Bridge.define("Kusto.Language.Editor.OffsetCodeService",{inherits:[Kusto.Language.Editor.CodeService],fields:{_service:null,_offset:0},props:{Kind:{get:function(){return this._service.Kind}},Text:{get:function(){return this._service.Text}}},ctors:{ctor:function(service,offset){this.$initialize();Kusto.Language.Editor.CodeService.ctor.call(this);this._service=service;this._offset=offset}},methods:{WithOffset:function(offset){return new Kusto.Language.Editor.OffsetCodeService(this._service,offset)},GetClassifications:function(start,length,clipToRange,waitForAnalysis,cancellationToken){var result=this._service.GetClassifications(start-this._offset|0,length,clipToRange,waitForAnalysis,cancellationToken);return System.Array.getCount(result.Classifications,Kusto.Language.Editor.ClassifiedRange)>0&&this._offset>0?new Kusto.Language.Editor.ClassificationInfo(System.Linq.Enumerable.from(result.Classifications,Kusto.Language.Editor.ClassifiedRange).select(Bridge.fn.bind(this,function(cr){return new Kusto.Language.Editor.ClassifiedRange(cr.Kind,cr.Start+this._offset|0,cr.Length)}))):result},GetClientParameters:function(){var result=this._service.GetClientParameters();return System.Array.getCount(result,Kusto.Language.Editor.ClientParameter)>0&&this._offset>0?Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Editor.ClientParameter,System.Linq.Enumerable.from(result,Kusto.Language.Editor.ClientParameter).select(Bridge.fn.bind(this,function(cp){return new Kusto.Language.Editor.ClientParameter.$ctor1(cp.Name,cp.Start+this._offset|0,cp.Length)}))):result},GetClusterReferences:function(cancellationToken){var result=this._service.GetClusterReferences(cancellationToken);return System.Array.getCount(result,Kusto.Language.Editor.ClusterReference)>0&&this._offset>0?Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Editor.ClusterReference,System.Linq.Enumerable.from(result,Kusto.Language.Editor.ClusterReference).select(Bridge.fn.bind(this,function(cr){return new Kusto.Language.Editor.ClusterReference(cr.Cluster,cr.Start+this._offset|0,cr.Length)}))):result},GetCompletionItems:function(position,options,cancellationToken){var result=this._service.GetCompletionItems(position-this._offset|0,options,cancellationToken);return this._offset>0?new Kusto.Language.Editor.CompletionInfo(result.Items,result.EditStart+this._offset|0,result.EditLength):result},GetDatabaseReferences:function(cancellationToken){var result=this._service.GetDatabaseReferences(cancellationToken);return System.Array.getCount(result,Kusto.Language.Editor.DatabaseReference)>0&&this._offset>0?Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Editor.DatabaseReference,System.Linq.Enumerable.from(result,Kusto.Language.Editor.DatabaseReference).select(Bridge.fn.bind(this,function(dr){return new Kusto.Language.Editor.DatabaseReference(dr.Database,dr.Cluster,dr.Start+this._offset|0,dr.Length)}))):result},TryGetCachedDiagnostics:function(diagnostics){return this._service.TryGetCachedDiagnostics(diagnostics)?(System.Array.getCount(diagnostics.v,Kusto.Language.Diagnostic)>0&&this._offset>0&&(diagnostics.v=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Diagnostic,System.Linq.Enumerable.from(diagnostics.v,Kusto.Language.Diagnostic).select(Bridge.fn.bind(this,function(dx){return dx.WithLocation$1(dx.Start+this._offset|0,dx.Length)})))),!0):!1},GetDiagnostics:function(waitForAnalysis,cancellationToken){var result=this._service.GetDiagnostics(waitForAnalysis,cancellationToken);return System.Array.getCount(result,Kusto.Language.Diagnostic)>0&&this._offset>0?Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Diagnostic,System.Linq.Enumerable.from(result,Kusto.Language.Diagnostic).select(Bridge.fn.bind(this,function(dx){return dx.WithLocation$1(dx.Start+this._offset|0,dx.Length)}))):result},TryGetCachedAnalyzerDiagnostics:function(diagnostics){return this._service.TryGetCachedAnalyzerDiagnostics(diagnostics)?(System.Array.getCount(diagnostics.v,Kusto.Language.Diagnostic)>0&&this._offset>0&&(diagnostics.v=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Diagnostic,System.Linq.Enumerable.from(diagnostics.v,Kusto.Language.Diagnostic).select(Bridge.fn.bind(this,function(dx){return dx.WithLocation$1(dx.Start+this._offset|0,dx.Length)})))),!0):!1},GetAnalyzerDiagnostics:function(waitForAnalysis,cancellationToken){var result=this._service.GetAnalyzerDiagnostics(waitForAnalysis,cancellationToken);return System.Array.getCount(result,Kusto.Language.Diagnostic)>0&&this._offset>0?Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Diagnostic,System.Linq.Enumerable.from(result,Kusto.Language.Diagnostic).select(Bridge.fn.bind(this,function(dx){return dx.WithLocation$1(dx.Start+this._offset|0,dx.Length)}))):result},GetAnalyzers:function(){return this._service.GetAnalyzers()},GetCodeActions:function(position,selectionStart,selectionLength,options,waitForAnalysis,actorName,cancellationToken){if(position=position-this._offset|0,selectionLength>0){selectionStart=selectionStart-this._offset|0;var selectionEnd=Math.min(selectionStart+selectionLength|0,this._service.Text.length);selectionLength=selectionEnd-selectionStart|0}return this._service.GetCodeActions(position,selectionStart,selectionLength,options,waitForAnalysis,actorName,cancellationToken)},ApplyCodeAction:function(codeAction,caretPosition,options,cancellationToken){caretPosition=caretPosition-this._offset|0;var result=this._service.ApplyCodeAction(codeAction,caretPosition,options,cancellationToken);return result.WithAdjustedPosition(this._offset)},GetFormattedText:function(options,caretPosition,cancellationToken){var result=this._service.GetFormattedText(options,caretPosition-this._offset|0,cancellationToken);return this._offset>0?new Kusto.Language.Editor.FormattedText(result.Text,result.Position+this._offset|0):result},GetMinimalText:function(kind,cancellationToken){return this._service.GetMinimalText(kind,cancellationToken)},GetOutlines:function(options,cancellationToken){var result=this._service.GetOutlines(options,cancellationToken);return System.Array.getCount(result.Ranges,Kusto.Language.Editor.OutlineRange)>0&&this._offset>0?new Kusto.Language.Editor.OutlineInfo(Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Editor.OutlineRange,System.Linq.Enumerable.from(result.Ranges,Kusto.Language.Editor.OutlineRange).select(Bridge.fn.bind(this,function(o){return new Kusto.Language.Editor.OutlineRange(o.Start+this._offset|0,o.Length,o.CollapsedText)})))):result},GetQuickInfo:function(position,options,cancellationToken){return this._service.GetQuickInfo(position-this._offset|0,options,cancellationToken)},GetElement:function(position,cancellationToken){var range=this._service.GetElement(position-this._offset|0);return this._offset>0?new Kusto.Language.Editor.TextRange.$ctor1(range.Start+this._offset|0,range.Length):range},GetRelatedElements:function(position,options,cancellationToken){var result=this._service.GetRelatedElements(position-this._offset|0,options,cancellationToken);return System.Array.getCount(result.Elements,Kusto.Language.Editor.RelatedElement)>0&&this._offset>0?new Kusto.Language.Editor.RelatedInfo(Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Editor.RelatedElement,System.Linq.Enumerable.from(result.Elements,Kusto.Language.Editor.RelatedElement).select(Bridge.fn.bind(this,function(e){return new Kusto.Language.Editor.RelatedElement.$ctor3(e.Start+this._offset|0,e.Length,e.Kind,e.CursorLeft+this._offset|0,e.CursorRight+this._offset|0)}))),result.CurrentIndex):result},IsFeatureSupported:function(feature,position){return position===void 0&&(position=-1),this._service.IsFeatureSupported(feature,position!==-1?position-this._offset|0:position)},ShouldAutoComplete:function(position,key,cancellationToken){return this._service.ShouldAutoComplete(position-this._offset|0,key,cancellationToken)}}});Bridge.define("Kusto.Language.Editor.PreferUsingMaterializedViewIntrinsicAnalyzer",{inherits:[Kusto.Language.Editor.KustoAnalyzer],statics:{fields:{_diagnostic:null,s_downSamplingFunctionNames:null},ctors:{init:function(){this._diagnostic=new Kusto.Language.Diagnostic.$ctor2(Kusto.Language.Editor.KustoAnalyzerCodes.PreferUsingMaterializedViewIntrinsic,Kusto.Language.DiagnosticCategory.Performance,Kusto.Language.DiagnosticSeverity.Suggestion,"Prefer using the `materialized_view()` function where appropriate",(System.String.format("Consider using the `materialized_view()` function to query the materialized part only",null)||"")+"\n"+(System.String.format("See: https://aka.ms/mvqueries",null)||""));this.s_downSamplingFunctionNames=function(_o1){return _o1.add("bin"),_o1.add("bin_at"),_o1.add("startofday"),_o1.add("startofmonth"),_o1.add("startofweek"),_o1.add("startofyear"),_o1}(new(System.Collections.Generic.HashSet$1(System.String).ctor))}},methods:{AnalyzeMaterializedViewSymbol:function(nameReference,materializedViewSymbol,code,dx,diagnostics){var mvCode,mvDiagnostics,aggregation;if(materializedViewSymbol.MaterializedViewKind===Kusto.Language.Symbols.MaterializedViewKind.Other)return;else if(materializedViewSymbol.MaterializedViewKind===Kusto.Language.Symbols.MaterializedViewKind.Downsampling)diagnostics.add(dx.WithLocation(nameReference));else{try{if(mvCode=Kusto.Language.KustoCode.ParseAndAnalyze(materializedViewSymbol.MaterializedViewQuery,code.Globals),mvDiagnostics=mvCode.GetDiagnostics(),System.Array.getCount(mvDiagnostics,Kusto.Language.Diagnostic)===0){var statements=Bridge.cast(mvCode.Syntax,Kusto.Language.Syntax.QueryBlock).Statements,mvStatement=System.Linq.Enumerable.from(statements,Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)).last(),aggregations=mvStatement.GetDescendants(Kusto.Language.Syntax.SummarizeOperator);if(System.Array.getCount(aggregations,Kusto.Language.Syntax.SummarizeOperator)===1&&(aggregation=System.Linq.Enumerable.from(aggregations,Kusto.Language.Syntax.SummarizeOperator).single(),System.Linq.Enumerable.from(aggregation.ByClause.Expressions,Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)).any(function(expression){var functionCall,simpleNamed,functionCall2;return(functionCall=Bridge.as(expression.Element$1,Kusto.Language.Syntax.FunctionCallExpression))!=null&&Kusto.Language.Editor.PreferUsingMaterializedViewIntrinsicAnalyzer.s_downSamplingFunctionNames.contains(functionCall.Name.SimpleName)||(simpleNamed=Bridge.as(expression.Element$1,Kusto.Language.Syntax.SimpleNamedExpression))!=null&&(functionCall2=Bridge.as(simpleNamed.Expression,Kusto.Language.Syntax.FunctionCallExpression))!=null&&Kusto.Language.Editor.PreferUsingMaterializedViewIntrinsicAnalyzer.s_downSamplingFunctionNames.contains(functionCall2.Name.SimpleName)}))){diagnostics.add(dx.WithLocation(nameReference));materializedViewSymbol.MaterializedViewKind=Kusto.Language.Symbols.MaterializedViewKind.Downsampling;return}}}catch($e1){$e1=System.Exception.create($e1)}materializedViewSymbol.MaterializedViewKind=Kusto.Language.Symbols.MaterializedViewKind.Other}}}},methods:{GetDiagnostics:function(){return System.Array.init([Kusto.Language.Editor.PreferUsingMaterializedViewIntrinsicAnalyzer._diagnostic],Kusto.Language.Diagnostic)},Analyze:function(code,diagnostics,cancellationToken){var $t,nameReference,materializedViewSymbol;if(Bridge.referenceEquals(code.Kind,Kusto.Language.Editor.CodeKinds.Query)){$t=Bridge.getEnumerator(code.Syntax.GetDescendants(Kusto.Language.Syntax.NameReference),Kusto.Language.Syntax.NameReference);try{while($t.moveNext())nameReference=$t.Current,(materializedViewSymbol=Bridge.as(nameReference.ReferencedSymbol,Kusto.Language.Symbols.MaterializedViewSymbol))!=null&&Kusto.Language.Editor.PreferUsingMaterializedViewIntrinsicAnalyzer.AnalyzeMaterializedViewSymbol(nameReference,materializedViewSymbol,code,Kusto.Language.Editor.PreferUsingMaterializedViewIntrinsicAnalyzer._diagnostic,diagnostics)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}}}});Bridge.define("Kusto.Language.Editor.PreferUsingOptimizedAlternative",{inherits:[Kusto.Language.Editor.KustoAnalyzer],statics:{fields:{_diagnostic:null},ctors:{init:function(){this._diagnostic=new Kusto.Language.Diagnostic.$ctor1(Kusto.Language.Editor.KustoAnalyzerCodes.PreferUsingOptimizedAlternative,Kusto.Language.DiagnosticCategory.Performance,Kusto.Language.DiagnosticSeverity.Suggestion,"Prefer using more optimized alternative when possible.")}}},methods:{GetDiagnostics:function(){return System.Array.init([Kusto.Language.Editor.PreferUsingOptimizedAlternative._diagnostic],Kusto.Language.Diagnostic)},Analyze:function(code,diagnostics,cancellationToken){var $t,node,fs;$t=Bridge.getEnumerator(code.Syntax.GetDescendants(Kusto.Language.Syntax.FunctionCallExpression,function(fc){var fs;return(fs=Bridge.as(fc.ReferencedSymbol,Kusto.Language.Symbols.FunctionSymbol))!=null&&fs.OptimizedAlternative!=null}),Kusto.Language.Syntax.FunctionCallExpression);try{while($t.moveNext())node=$t.Current,(fs=Bridge.as(node.ReferencedSymbol,Kusto.Language.Symbols.FunctionSymbol))!=null&&diagnostics.add(Kusto.Language.Editor.PreferUsingOptimizedAlternative._diagnostic.WithMessage(System.String.format("If possible, consider switching to '{0}', which is more optimized than '{1}'.",fs.OptimizedAlternative,fs.Name)).WithLocation(node.Name))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}}});Bridge.define("Kusto.Language.Editor.RenameAction",{inherits:[Kusto.Language.Editor.ResultAction],statics:{fields:{Instance:null},ctors:{init:function(){this.Instance=new Kusto.Language.Editor.RenameAction}}},ctors:{ctor:function(){this.$initialize();Kusto.Language.Editor.ResultAction.ctor.call(this)}}});Bridge.define("Kusto.Language.Editor.RenameActor",{inherits:[Kusto.Language.Editor.KustoActor],statics:{fields:{RenameAction:null},ctors:{init:function(){this.RenameAction=Kusto.Language.Editor.CodeAction.Create("Rename","Rename selected item")}},methods:{CanRename:function(info){return System.Linq.Enumerable.from(info.Elements,Kusto.Language.Editor.RelatedElement).any(function(e){return e.Kind===Kusto.Language.Editor.RelatedElementKind.Declaration})}}},methods:{GetActions:function(service,code,position,selectionStart,selectionLength,options,actions,waitForAnalysis,cancellationToken){var token,name,relatedInfo;(token=code.Syntax.GetTokenAt(position))!=null&&(name=token.Parent.GetFirstAncestorOrSelf(Kusto.Language.Syntax.Name))!=null&&(relatedInfo=service.GetRelatedElements(name.TextStart,Kusto.Language.Editor.FindRelatedOptions.None,cancellationToken))!=null&&Kusto.Language.Editor.RenameActor.CanRename(relatedInfo)&&actions.add(Kusto.Language.Editor.RenameActor.RenameAction.WithData$2([Bridge.toString(name.TextStart)]))},ApplyAction:function(service,code,action,caretPosition,options,cancellationToken){var position={};return System.Array.getCount(action.Data,System.String)>0&&System.Int32.tryParse(System.Array.getItem(action.Data,0,System.String),position)?new Kusto.Language.Editor.CodeActionResult.ctor([new Kusto.Language.Editor.MoveCaretAction(position.v),new Kusto.Language.Editor.RenameAction]):Kusto.Language.Editor.CodeActionResult.Failure()}}});Bridge.define("Kusto.Language.Editor.StdevTimespanConversionAnalyzer",{inherits:[Kusto.Language.Editor.KustoAnalyzer],statics:{fields:{_diagnostic:null},ctors:{init:function(){this._diagnostic=new Kusto.Language.Diagnostic.$ctor1(Kusto.Language.Editor.KustoAnalyzerCodes.StdevTimespanConversion,Kusto.Language.DiagnosticCategory.Correctness,Kusto.Language.DiagnosticSeverity.Suggestion,"This use of stdev() results in a number. To get a timespan use totimespan() on the result.")}},methods:{IsArgumentOfFunction:function(argument,symbol){var el,list,elist,fcp;return(el=Bridge.as(argument.Parent,Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)))!=null&&(list=Bridge.as(el.Parent,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression))))!=null&&(elist=Bridge.as(list.Parent,Kusto.Language.Syntax.ExpressionList))!=null&&(fcp=Bridge.as(elist.Parent,Kusto.Language.Syntax.FunctionCallExpression))!=null&&Bridge.referenceEquals(fcp.ReferencedSymbol,symbol)}}},methods:{GetDiagnostics:function(){return System.Array.init([Kusto.Language.Editor.StdevTimespanConversionAnalyzer._diagnostic],Kusto.Language.Diagnostic)},Analyze:function(code,diagnostics,cancellationToken){var $t,timespanStdevs=code.Syntax.GetDescendants(Kusto.Language.Syntax.FunctionCallExpression,function(fc){return Bridge.referenceEquals(fc.ReferencedSymbol,Kusto.Language.Aggregates.Stdev)&&fc.ArgumentList.Expressions.Count===1&&Bridge.referenceEquals(fc.ArgumentList.Expressions.getItem$1(0).Element$1.ResultType,Kusto.Language.Symbols.ScalarTypes.TimeSpan)}),fc,isConverted;$t=Bridge.getEnumerator(timespanStdevs,Kusto.Language.Syntax.FunctionCallExpression);try{while($t.moveNext())fc=$t.Current,isConverted=Kusto.Language.Editor.StdevTimespanConversionAnalyzer.IsArgumentOfFunction(fc,Kusto.Language.Functions.ToTimespan),isConverted||diagnostics.add(Kusto.Language.Editor.StdevTimespanConversionAnalyzer._diagnostic.WithLocation(fc.Name))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}}});Bridge.define("Kusto.Language.FunctionCallExpansion",{inherits:[Kusto.Language.Syntax.SyntaxTree],ctors:{ctor:function(root,original,offsetInOriginal){original===void 0&&(original=null);offsetInOriginal===void 0&&(offsetInOriginal=0);this.$initialize();Kusto.Language.Syntax.SyntaxTree.ctor.call(this,root,original,offsetInOriginal)}}});Bridge.define("Kusto.Language.GlobalStateProperty$1",function(T){return{inherits:[Kusto.Language.GlobalStateProperty],props:{DefaultValue:Bridge.getDefaultValue(T)},ctors:{ctor:function(name,defaultValue){defaultValue===void 0&&(defaultValue=Bridge.getDefaultValue(T));this.$initialize();Kusto.Language.GlobalStateProperty.ctor.call(this,name);this.DefaultValue=defaultValue}}}});Bridge.define("Kusto.Language.Parsing.Parser$2",function(TInput,TOutput){return{inherits:[Kusto.Language.Parsing.Parser$1(TInput)],methods:{WithTag$1:function(tag){return Bridge.cast(this.WithTag(tag),Kusto.Language.Parsing.Parser$2(TInput,TOutput))},WithAnnotations$1:function(annotations){return Bridge.cast(this.WithAnnotations(annotations),Kusto.Language.Parsing.Parser$2(TInput,TOutput))},WithIsHidden$1:function(isHidden){return Bridge.cast(this.WithIsHidden(isHidden),Kusto.Language.Parsing.Parser$2(TInput,TOutput))},Hide$1:function(){return this.WithIsHidden$1(!0)},Cast:function(TNewOutput){return Kusto.Language.Parsing.Parsers$1(TInput).Rule(TOutput,TNewOutput,this,function(o){return Bridge.cast(Bridge.unbox(o,TNewOutput),TNewOutput)}).WithTag$1(this.Tag)}}}});Bridge.define("Kusto.Language.Parsing.AriaBridgeCommandGrammar",{inherits:[Kusto.Language.Parsing.CommandGrammar],ctors:{ctor:function(globals){this.$initialize();Kusto.Language.Parsing.CommandGrammar.ctor.call(this,globals)}},methods:{CreateCommandParsers:function(rules){var ShowVersion=Kusto.Language.Parsing.CommandGrammar.Command("ShowVersion",Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.RequiredToken("version")));return System.Array.init([ShowVersion],Kusto.Language.Parsing.Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Command))}}});Bridge.define("Kusto.Language.Parsing.ArraySource$1",function(TInput){return{inherits:[Kusto.Language.Parsing.Source$1(TInput)],fields:{_input:null,_offset:0,_end:0},ctors:{ctor:function(input,start,length){start===void 0&&(start=0);length===void 0&&(length=-1);this.$initialize();Kusto.Language.Parsing.Source$1(TInput).ctor.call(this);this._input=input;this._offset=start;this._end=length>=0?start+Math.min(length,System.Array.getCount(input,TInput)-start|0)|0:System.Array.getCount(input,TInput)}},methods:{Peek:function(n){return(this._offset+n|0)<this._end?System.Array.getItem(this._input,n+this._offset|0,TInput):Bridge.getDefaultValue(TInput)},IsEnd:function(n){return n===void 0&&(n=0),(this._offset+n|0)>=this._end}}}});Bridge.define("Kusto.Language.Parsing.BestParser$1",function(TInput){return{inherits:[Kusto.Language.Parsing.Parser$1(TInput)],fields:{_parsers:null},props:{Parsers:{get:function(){return this._parsers}},IsAlternation:{get:function(){return!0}},ChildParserCount:{get:function(){return this._parsers.length}}},ctors:{ctor:function(parsers){var $t;this.$initialize();Kusto.Language.Parsing.Parser$1(TInput).ctor.call(this);this._parsers=($t=Kusto.Language.Parsing.Parser$1(TInput),System.Linq.Enumerable.from(parsers,$t).ToArray($t))}},methods:{GetChildParser:function(index){return index>=0&&index<this._parsers.length?this._parsers[System.Array.index(index,this._parsers)]:null},Accept$2:function(visitor){visitor.VisitBest(this)},Accept:function(TResult,visitor){return visitor.VisitBest(this)},Accept$1:function(TArg,TResult,visitor,arg){return visitor.VisitBest(this,arg)},Clone:function(){return new(Kusto.Language.Parsing.BestParser$1(TInput))(this.Parsers)},Parse:function(source,inputStart,output,outputStart){for(var parser,length,minLength=-1,maxLength=-1,bestParser=-1,i=0;i<this._parsers.length;i=i+1|0)parser=this._parsers[System.Array.index(i,this._parsers)],length=parser.Scan(source,inputStart),length>maxLength?(maxLength=length,bestParser=i):length<minLength&&(minLength=length);return maxLength>=0&&this._parsers[System.Array.index(bestParser,this._parsers)].Parse(source,inputStart,output,outputStart),maxLength},Scan:function(source,start){for(var parser,n,max=-1,min=-1,i=0;i<this._parsers.length;i=i+1|0)parser=this._parsers[System.Array.index(i,this._parsers)],n=parser.Scan(source,start),n>max?max=n:n<min&&(min=n);return max>=0?max:min}}}});Bridge.define("Kusto.Language.Parsing.ClusterManagerCommandGrammar",{inherits:[Kusto.Language.Parsing.CommandGrammar],ctors:{ctor:function(globals){this.$initialize();Kusto.Language.Parsing.CommandGrammar.ctor.call(this,globals)}},methods:{CreateCommandParsers:function(rules){var ShowVersion=Kusto.Language.Parsing.CommandGrammar.Command("ShowVersion",Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.RequiredToken("version")));return System.Array.init([ShowVersion],Kusto.Language.Parsing.Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Command))}}});Bridge.define("Kusto.Language.Parsing.DataManagerCommandGrammar",{inherits:[Kusto.Language.Parsing.CommandGrammar],ctors:{ctor:function(globals){this.$initialize();Kusto.Language.Parsing.CommandGrammar.ctor.call(this,globals)}},methods:{CreateCommandParsers:function(rules){var ShowVersion=Kusto.Language.Parsing.CommandGrammar.Command("ShowVersion",Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.RequiredToken("version")));return System.Array.init([ShowVersion],Kusto.Language.Parsing.Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Command))}}});Bridge.define("Kusto.Language.Parsing.Describer.Writer$1",function(TInput){return{inherits:[Kusto.Language.Parsing.ParserVisitor$1(TInput)],$kind:"nested class",fields:{builder:null,separator:null,showRequired:!1},ctors:{ctor:function(showRequired){this.$initialize();Kusto.Language.Parsing.ParserVisitor$1(TInput).ctor.call(this);this.builder=new System.Text.StringBuilder;this.showRequired=showRequired}},methods:{toString:function(){return this.builder.toString()},Visit:function(parser){parser==null||parser.IsHidden||(System.String.isNullOrEmpty(parser.Tag)?parser.Accept$2(this):this.WriteTerm(parser.Tag))},WriteTerm:function(term){System.String.isNullOrEmpty(term)||this.builder.append(term)},WriteAlternation:function(parsers){this.WriteSeparated(" | ",parsers)},WriteSequence:function(parsers){this.WriteSeparated(" ",parsers)},WriteOptional:function(parser){this.WriteBracketed("[","]",parser)},WriteRequired:function(parser){var nested=new(Kusto.Language.Parsing.Describer.Writer$1(TInput))(this.showRequired);nested.Visit(parser);nested.separator!=null?(this.builder.append("("),this.builder.append(nested.toString()),this.builder.append(")")):this.builder.append(nested.toString());this.builder.append("!")},WriteZeroOrMore:function(parser){this.WriteBracketed("{","}",parser)},WriteOneOrMore:function(parser){this.WriteBracketed("{","}+",parser)},WriteSeparated:function(separator,parsers){for(var parser,nestedBuilder,i1,grammarBuilder,builders=new(System.Collections.Generic.List$1(Kusto.Language.Parsing.Describer.Writer$1(TInput)).ctor),i=0,n=System.Array.getCount(parsers,Kusto.Language.Parsing.Parser$1(TInput));i<n;i=i+1|0)parser=System.Array.getItem(parsers,i,Kusto.Language.Parsing.Parser$1(TInput)),parser.IsHidden||(nestedBuilder=new(Kusto.Language.Parsing.Describer.Writer$1(TInput))(this.showRequired),nestedBuilder.Visit(parser),nestedBuilder.builder.getLength()>0&&builders.add(nestedBuilder));if(builders.Count>1)for(this.separator=separator,i1=0;i1<builders.Count;i1=i1+1|0)i1>0&&this.builder.append(separator),grammarBuilder=builders.getItem(i1),grammarBuilder.separator==null||Bridge.referenceEquals(grammarBuilder.separator,separator)?this.builder.append(grammarBuilder.builder.toString()):(this.builder.append("("),this.builder.append(grammarBuilder.builder.toString()),this.builder.append(")"));else builders.Count===1&&(this.builder=builders.getItem(0).builder,this.separator=builders.getItem(0).separator)},WriteBracketed:function(startBracket,endBracket,parser,action){var nestedBuilder,text;action===void 0&&(action=null);nestedBuilder=new(Kusto.Language.Parsing.Describer.Writer$1(TInput))(this.showRequired);nestedBuilder.Visit(parser);text=nestedBuilder.toString();text.length>0&&(this.builder.append(startBracket),this.builder.append(text),this.builder.append(endBracket))},VisitApply:function(TLeft,TOutput,parser){switch(parser.ApplyKind){case Kusto.Language.Parsing.ApplyKind.ZeroOrMore:this.WriteSequence(System.Array.init([parser.LeftParser,Kusto.Language.Parsing.Parsers$1(TInput).ZeroOrMore(parser.RightParser)],Kusto.Language.Parsing.Parser$1(TInput)));break;case Kusto.Language.Parsing.ApplyKind.ZeroOrOne:this.WriteSequence(System.Array.init([parser.LeftParser,Kusto.Language.Parsing.Parsers$1(TInput).ZeroOrOne(parser.RightParser)],Kusto.Language.Parsing.Parser$1(TInput)));break;default:this.WriteSequence(System.Array.init([parser.LeftParser,parser.RightParser],Kusto.Language.Parsing.Parser$1(TInput)));break}},VisitBest$1:function(TOutput,parser){this.WriteAlternation(parser.Parsers)},VisitBest:function(parser){this.WriteAlternation(parser.Parsers)},VisitConvert:function(TOutput,parser){this.Visit(parser.Pattern)},VisitFails:function(parser){this.WriteBracketed("fails(",")",parser.Pattern)},VisitFirst$1:function(TOutput,parser){this.WriteAlternation(parser.Parsers)},VisitFirst:function(parser){this.WriteAlternation(parser.Parsers)},VisitForward:function(TOutput,parser){this.WriteTerm("forward()")},VisitIf$1:function(TOutput,parser){this.Visit(parser.Parser)},VisitIf:function(parser){this.Visit(parser.Parser)},VisitLimit:function(TOutput,parser){this.Visit(parser.Limited)},VisitMap:function(TOutput,parser){this.WriteTerm("map()")},VisitMatch:function(parser){this.WriteTerm("match()")},VisitMatch$1:function(TOutput,parser){this.WriteTerm("match()")},VisitNot:function(parser){this.WriteBracketed("not(",")",parser.Pattern)},VisitOneOrMore:function(parser){this.WriteOneOrMore(parser.Parser)},VisitOptional:function(TOutput,parser){this.WriteOptional(parser.Parser)},VisitProduce:function(TOutput,parser){this.Visit(parser.Parser)},VisitRequired:function(TOutput,parser){this.showRequired?this.WriteRequired(parser.Parser):this.Visit(parser.Parser)},VisitRule:function(TOutput,parser){this.WriteSequence(parser.Parsers)},VisitSequence:function(parser){this.WriteSequence(parser.Parsers)},VisitZeroOrMore:function(parser){parser.ZeroOrOne?this.WriteOptional(parser.Parser):this.WriteZeroOrMore(parser.Parser)}}}});Bridge.define("Kusto.Language.Parsing.EngineCommandGrammar",{inherits:[Kusto.Language.Parsing.CommandGrammar],ctors:{ctor:function(globals){this.$initialize();Kusto.Language.Parsing.CommandGrammar.ctor.call(this,globals)}},methods:{CreateCommandParsers:function(rules){var shape0=Kusto.Language.Parsing.CommandGrammar.CD$1("Role"),shape1=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Role"),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal,!0)],Kusto.Language.Syntax.CustomElementDescriptor),shape2=Kusto.Language.Parsing.CommandGrammar.CD$1("Principal",Kusto.Language.Editor.CompletionHint.Literal),shape3=Kusto.Language.Parsing.CommandGrammar.CD$1("SkipResults"),shape4=Kusto.Language.Parsing.CommandGrammar.CD$1("Notes",Kusto.Language.Editor.CompletionHint.Literal),shape5=Kusto.Language.Parsing.CommandGrammar.CD$1("principal",Kusto.Language.Editor.CompletionHint.Literal),shape6=Kusto.Language.Parsing.CommandGrammar.CD$1("notes",Kusto.Language.Editor.CompletionHint.Literal),shape7=Kusto.Language.Parsing.CommandGrammar.CD$1("Policy",Kusto.Language.Editor.CompletionHint.Literal),shape8=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Policy",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor),shape9=Kusto.Language.Parsing.CommandGrammar.CD$1("policy",Kusto.Language.Editor.CompletionHint.Literal),shape10=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("policy",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor),shape11=Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),shape12=Kusto.Language.Parsing.CommandGrammar.CD$1("PolicyName",Kusto.Language.Editor.CompletionHint.Literal),shape13=Kusto.Language.Parsing.CommandGrammar.CD$1("EncodingPolicy",Kusto.Language.Editor.CompletionHint.Literal),shape14=Kusto.Language.Parsing.CommandGrammar.CD$1("IngestionBatchingPolicy",Kusto.Language.Editor.CompletionHint.Literal),shape15=Kusto.Language.Parsing.CommandGrammar.CD$1("ManagedIdentityPolicy",Kusto.Language.Editor.CompletionHint.Literal),shape16=Kusto.Language.Parsing.CommandGrammar.CD$1("PropertyName",Kusto.Language.Editor.CompletionHint.None),shape17=Kusto.Language.Parsing.CommandGrammar.CD$1("Value",Kusto.Language.Editor.CompletionHint.Literal),shape18=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD$1("PropertyName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Value",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor),shape19=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor),shape20=Kusto.Language.Parsing.CommandGrammar.CD$1("RecoverabilityValue"),shape21=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("RecoverabilityValue")],Kusto.Language.Syntax.CustomElementDescriptor),shape22=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Policy",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor),shape23=Kusto.Language.Parsing.CommandGrammar.CD$1("databaseName",Kusto.Language.Editor.CompletionHint.Literal),shape24=Kusto.Language.Parsing.CommandGrammar.CD$1("MergePolicy",Kusto.Language.Editor.CompletionHint.Literal),shape25=Kusto.Language.Parsing.CommandGrammar.CD$1("MaterializedViewName",Kusto.Language.Editor.CompletionHint.MaterializedView),shape26=Kusto.Language.Parsing.CommandGrammar.CD$1("SoftDeleteValue",Kusto.Language.Editor.CompletionHint.Literal),shape27=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("SoftDeleteValue",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor),shape28=Kusto.Language.Parsing.CommandGrammar.CD$1("RetentionPolicy",Kusto.Language.Editor.CompletionHint.Literal),shape29=Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),shape30=Kusto.Language.Parsing.CommandGrammar.CD$1("PartitionFunction"),shape31=Kusto.Language.Parsing.CommandGrammar.CD$1("DateTimeColumn",Kusto.Language.Editor.CompletionHint.None),shape32=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD$1("PartitionFunction"),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DateTimeColumn",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor),shape33=Kusto.Language.Parsing.CommandGrammar.CD$1("PartitionType"),shape34=Kusto.Language.Parsing.CommandGrammar.CD$1("PartitionName",Kusto.Language.Editor.CompletionHint.None),shape35=Kusto.Language.Parsing.CommandGrammar.CD$1("PathSeparator",Kusto.Language.Editor.CompletionHint.Literal),shape36=Kusto.Language.Parsing.CommandGrammar.CD$1("DataFormatKind"),shape37=Kusto.Language.Parsing.CommandGrammar.CD$1("StorageConnectionString",Kusto.Language.Editor.CompletionHint.Literal),shape38=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor),shape39=Kusto.Language.Parsing.CommandGrammar.CD$1("ColumnName",Kusto.Language.Editor.CompletionHint.Column),shape40=Kusto.Language.Parsing.CommandGrammar.CD$1("ShardingPolicy",Kusto.Language.Editor.CompletionHint.Literal),shape41=Kusto.Language.Parsing.CommandGrammar.CD$1("StreamingIngestionPolicy",Kusto.Language.Editor.CompletionHint.Literal),shape42=Kusto.Language.Parsing.CommandGrammar.CD$1("PropertyValue",Kusto.Language.Editor.CompletionHint.Literal),shape43=Kusto.Language.Parsing.CommandGrammar.CD$1("tableName",Kusto.Language.Editor.CompletionHint.Table),shape44=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Tabular)],Kusto.Language.Syntax.CustomElementDescriptor),shape45=Kusto.Language.Parsing.CommandGrammar.CD$1("csl"),shape46=Kusto.Language.Parsing.CommandGrammar.CD$1("MappingKind"),shape47=Kusto.Language.Parsing.CommandGrammar.CD$1("MappingName",Kusto.Language.Editor.CompletionHint.Literal),shape48=Kusto.Language.Parsing.CommandGrammar.CD$1("MappingFormat",Kusto.Language.Editor.CompletionHint.Literal),shape49=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD$1("PropertyName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("PropertyValue",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor),shape50=Kusto.Language.Parsing.CommandGrammar.CD$1("thumbprint",Kusto.Language.Editor.CompletionHint.Literal),shape51=Kusto.Language.Parsing.CommandGrammar.CD$1("t",Kusto.Language.Editor.CompletionHint.Literal),shape52=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("tableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD$1("csl")],Kusto.Language.Syntax.CustomElementDescriptor),shape53=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("PolicyName",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor),shape54=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("IngestionBatchingPolicy",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor),shape55=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("ManagedIdentityPolicy",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor),shape56=Kusto.Language.Parsing.CommandGrammar.CD$1("RowStorePolicy",Kusto.Language.Editor.CompletionHint.Literal),shape57=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("RowStorePolicy",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor),shape58=Kusto.Language.Parsing.CommandGrammar.CD$1("HotData",Kusto.Language.Editor.CompletionHint.Literal),shape59=Kusto.Language.Parsing.CommandGrammar.CD$1("HotIndex",Kusto.Language.Editor.CompletionHint.Literal),shape60=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("HotData",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("HotIndex",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor),shape61=Kusto.Language.Parsing.CommandGrammar.CD$1("Timespan",Kusto.Language.Editor.CompletionHint.Literal),shape62=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Timespan",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor),shape63=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("ColumnName",Kusto.Language.Editor.CompletionHint.Column),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("EncodingPolicy",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor),shape64=Kusto.Language.Parsing.CommandGrammar.CD$1("ColumnType"),shape65=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("MappingKind"),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("MappingName",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD$1("MappingFormat",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor),shape66=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor),shape67=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("PolicyName",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor),shape68=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("EncodingPolicy",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor),shape69=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("IngestionBatchingPolicy",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor),shape70=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("ManagedIdentityPolicy",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor),shape71=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("MergePolicy",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor),shape72=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DataFormatKind"),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor),shape73=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("ShardingPolicy",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor),shape74=Kusto.Language.Parsing.CommandGrammar.CD$1("ShardsGroupingPolicy",Kusto.Language.Editor.CompletionHint.Literal),shape75=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("ShardsGroupingPolicy",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor),shape76=Kusto.Language.Parsing.CommandGrammar.CD$1("Status"),shape77=Kusto.Language.Parsing.CommandGrammar.CD$1("databaseName",Kusto.Language.Editor.CompletionHint.Database),shape78=Kusto.Language.Parsing.CommandGrammar.CD$1("EntityGroupName",Kusto.Language.Editor.CompletionHint.EntityGroup),shape79=Kusto.Language.Parsing.CommandGrammar.CD$1("clusterName",Kusto.Language.Editor.CompletionHint.Literal),shape80=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("clusterName",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("databaseName",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor),shape81=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("databaseName",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor),shape82=Kusto.Language.Parsing.CommandGrammar.CD$1("container",Kusto.Language.Editor.CompletionHint.Literal),shape83=Kusto.Language.Parsing.CommandGrammar.CD$1("ColumnName",Kusto.Language.Editor.CompletionHint.None),shape84=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD$1("ColumnName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("ColumnType")],Kusto.Language.Syntax.CustomElementDescriptor),shape85=Kusto.Language.Parsing.CommandGrammar.CD$1("BinValue",Kusto.Language.Editor.CompletionHint.Literal),shape86=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD$1("PartitionFunction"),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DateTimeColumn",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("BinValue",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor),shape87=Kusto.Language.Parsing.CommandGrammar.CD$1("StringColumn",Kusto.Language.Editor.CompletionHint.None),shape88=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD$1("PartitionType"),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor),shape89=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD$1("PartitionName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor),shape90=Kusto.Language.Parsing.CommandGrammar.CD$1("DateTimeFormat",Kusto.Language.Editor.CompletionHint.Literal),shape91=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DateTimeFormat",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("PartitionName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor),shape92=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal,!0)],Kusto.Language.Syntax.CustomElementDescriptor),shape93=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor),shape94=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor),shape95=Kusto.Language.Parsing.CommandGrammar.CD$1("TableKind"),shape96=Kusto.Language.Parsing.CommandGrammar.CD$1("HashMod",Kusto.Language.Editor.CompletionHint.Literal),shape97=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD$1("PartitionType"),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("PartitionFunction"),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("StringColumn",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("HashMod",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor),shape98=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("StringColumn",Kusto.Language.Editor.CompletionHint.None)],Kusto.Language.Syntax.CustomElementDescriptor),shape99=Kusto.Language.Parsing.CommandGrammar.CD$1("CatalogExpression",Kusto.Language.Editor.CompletionHint.Literal),shape100=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("CatalogExpression",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor),shape101=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("ExternalTableName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableKind"),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DataFormatKind"),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor),shape102=Kusto.Language.Parsing.CommandGrammar.CD$1("ExternalTableName",Kusto.Language.Editor.CompletionHint.None),shape103=Kusto.Language.Parsing.CommandGrammar.CD$1("tableName",Kusto.Language.Editor.CompletionHint.ExternalTable),shape104=Kusto.Language.Parsing.CommandGrammar.CD$1("leaderClusterMetadataPath",Kusto.Language.Editor.CompletionHint.Literal),shape105=Kusto.Language.Parsing.CommandGrammar.CD$1("modificationKind"),shape106=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("modificationKind")],Kusto.Language.Syntax.CustomElementDescriptor),shape107=Kusto.Language.Parsing.CommandGrammar.CD$1("dbName",Kusto.Language.Editor.CompletionHint.Database),shape108=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("leaderClusterMetadataPath",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor),shape109=Kusto.Language.Parsing.CommandGrammar.CD$1("entityListKind"),shape110=Kusto.Language.Parsing.CommandGrammar.CD$1("operationName"),shape111=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("dbName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("entityListKind"),Kusto.Language.Parsing.CommandGrammar.CD$1("operationName"),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor),shape112=Kusto.Language.Parsing.CommandGrammar.CD$1("hotDataToken",Kusto.Language.Editor.CompletionHint.Literal),shape113=Kusto.Language.Parsing.CommandGrammar.CD$1("hotIndexToken",Kusto.Language.Editor.CompletionHint.Literal),shape114=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("hotDataToken",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("hotIndexToken",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor),shape115=Kusto.Language.Parsing.CommandGrammar.CD$1("hotToken",Kusto.Language.Editor.CompletionHint.Literal),shape116=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("hotToken",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor),shape117=Kusto.Language.Parsing.CommandGrammar.CD$1("d2",Kusto.Language.Editor.CompletionHint.Literal),shape118=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD$1("d1",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("d2",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor),shape119=Kusto.Language.Parsing.CommandGrammar.CD$1("p",Kusto.Language.Editor.CompletionHint.Literal),shape120=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("p",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor),shape121=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor),shape122=Kusto.Language.Parsing.CommandGrammar.CD$1("hotWindows",524288,!0),shape123=Kusto.Language.Parsing.CommandGrammar.CD$1("d1",Kusto.Language.Editor.CompletionHint.Literal),shape124=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("dbName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("modificationKind")],Kusto.Language.Syntax.CustomElementDescriptor),shape125=Kusto.Language.Parsing.CommandGrammar.CD$1("name",Kusto.Language.Editor.CompletionHint.None),shape126=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("dbName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("hotWindows",524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor),shape127=Kusto.Language.Parsing.CommandGrammar.CD$1("FunctionName",Kusto.Language.Editor.CompletionHint.Function),shape128=Kusto.Language.Parsing.CommandGrammar.CD$1("PropertyName"),shape129=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD$1("PropertyName"),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("PropertyValue",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor),shape130=Kusto.Language.Parsing.CommandGrammar.CD$1("Documentation",Kusto.Language.Editor.CompletionHint.Literal),shape131=Kusto.Language.Parsing.CommandGrammar.CD$1("Folder",Kusto.Language.Editor.CompletionHint.Literal),shape132=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("MaterializedViewName",Kusto.Language.Editor.CompletionHint.MaterializedView),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor),shape133=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("MaterializedViewName",Kusto.Language.Editor.CompletionHint.MaterializedView),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Policy",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor),shape134=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor),shape135=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor),shape136=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("EncodingPolicy",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor),shape137=Kusto.Language.Parsing.CommandGrammar.CD$1("ExtentTagsRetentionPolicy",Kusto.Language.Editor.CompletionHint.Literal),shape138=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("IngestionBatchingPolicy",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor),shape139=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("MergePolicy",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor),shape140=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD$1("PartitionType"),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor),shape141=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD$1("PartitionType"),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("StringColumn",Kusto.Language.Editor.CompletionHint.None)],Kusto.Language.Syntax.CustomElementDescriptor),shape142=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DataFormatKind"),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor),shape143=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Policy",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor),shape144=Kusto.Language.Parsing.CommandGrammar.CD$1("Query",Kusto.Language.Editor.CompletionHint.Literal),shape145=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD$1("ColumnName",Kusto.Language.Editor.CompletionHint.Column),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor),shape146=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Column),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor),shape147=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("ShardingPolicy",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor),shape148=Kusto.Language.Parsing.CommandGrammar.CD$1("UpdatePolicy",Kusto.Language.Editor.CompletionHint.Literal),shape149=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("UpdatePolicy",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor),shape150=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor),shape151=Kusto.Language.Parsing.CommandGrammar.CD$1("rowStoreKey",Kusto.Language.Editor.CompletionHint.Literal),shape152=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("rowStoreKey",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor),shape153=Kusto.Language.Parsing.CommandGrammar.CD$1("rowStoreName",Kusto.Language.Editor.CompletionHint.None),shape154=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("rowStoreName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor),shape155=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor),shape156=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor),shape157=Kusto.Language.Parsing.CommandGrammar.CD$1("DocString",Kusto.Language.Editor.CompletionHint.Literal),shape158=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD$1("ColumnName",Kusto.Language.Editor.CompletionHint.Column),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DocString",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor),shape159=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Column),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor),shape160=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("tableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD$1("csl")],Kusto.Language.Syntax.CustomElementDescriptor),shape161=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("MappingKind"),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("MappingName",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD$1("MappingFormat",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor),shape162=Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Database),shape163=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Policy",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor),shape164=Kusto.Language.Parsing.CommandGrammar.CD$1("QueryOrCommand",Kusto.Language.Editor.CompletionHint.Tabular),shape165=Kusto.Language.Parsing.CommandGrammar.CD$1("Path",Kusto.Language.Editor.CompletionHint.Literal),shape166=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("tableName",Kusto.Language.Editor.CompletionHint.Table)],Kusto.Language.Syntax.CustomElementDescriptor),shape167=Kusto.Language.Parsing.CommandGrammar.CD$1("Version",Kusto.Language.Editor.CompletionHint.Literal),shape168=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Version",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor),shape169=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD$1("ReadOnly"),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor),shape170=Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.None),shape171=Kusto.Language.Parsing.CommandGrammar.CD$1("ExternalTableName",Kusto.Language.Editor.CompletionHint.ExternalTable),shape172=Kusto.Language.Parsing.CommandGrammar.CD$1("Query",Kusto.Language.Editor.CompletionHint.Tabular),shape173=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("ExternalTableName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableKind"),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("StorageConnectionString",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor),shape174=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.None)],Kusto.Language.Syntax.CustomElementDescriptor),shape175=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("ExternalTableName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableKind"),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor),shape176=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("ExternalTableName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableKind"),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("StorageConnectionString",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor),shape177=Kusto.Language.Parsing.CommandGrammar.CD$1("WorkloadGroupName",Kusto.Language.Editor.CompletionHint.None),shape178=Kusto.Language.Parsing.CommandGrammar.CD$1("WorkloadGroup",Kusto.Language.Editor.CompletionHint.Literal),shape179=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("WorkloadGroupName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD$1("WorkloadGroup",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor),shape180=Kusto.Language.Parsing.CommandGrammar.CD$1("MaterializedViewName",Kusto.Language.Editor.CompletionHint.None),shape181=Kusto.Language.Parsing.CommandGrammar.CD$1("UserName",Kusto.Language.Editor.CompletionHint.Literal),shape182=Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.None),shape183=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("MappingKind"),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("MappingName",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD$1("MappingFormat",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor),shape184=Kusto.Language.Parsing.CommandGrammar.CD$1("IfNotExists"),shape185=Kusto.Language.Parsing.CommandGrammar.CD$1("EntityGroupName",Kusto.Language.Editor.CompletionHint.None),shape186=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("ExternalTableName",Kusto.Language.Editor.CompletionHint.ExternalTable),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("MappingName",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD$1("MappingFormat",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor),shape187=Kusto.Language.Parsing.CommandGrammar.CD$1("FunctionName",Kusto.Language.Editor.CompletionHint.None),shape188=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor),shape189=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor),shape190=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor),shape191=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor),shape192=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("ColumnName",Kusto.Language.Editor.CompletionHint.Column),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor),shape193=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor),shape194=Kusto.Language.Parsing.CommandGrammar.CD$1("name",Kusto.Language.Editor.CompletionHint.MaterializedView),shape195=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("dbName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor),shape196=Kusto.Language.Parsing.CommandGrammar.CD$1("name",Kusto.Language.Editor.CompletionHint.Table),shape197=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("MaterializedViewName",Kusto.Language.Editor.CompletionHint.MaterializedView),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor),shape198=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor),shape199=Kusto.Language.Parsing.CommandGrammar.CD$1("AppName",Kusto.Language.Editor.CompletionHint.Literal),shape200=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("AppName",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor),shape201=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("UserName",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor),shape202=Kusto.Language.Parsing.CommandGrammar.CD$1("ContinuousExportName",Kusto.Language.Editor.CompletionHint.None),shape203=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD$1("Role"),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal,!0)],Kusto.Language.Syntax.CustomElementDescriptor),shape204=Kusto.Language.Parsing.CommandGrammar.CD$1("IfExists"),shape205=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor),shape206=Kusto.Language.Parsing.CommandGrammar.CD$1("SkipSeal"),shape207=Kusto.Language.Parsing.CommandGrammar.CD$1("d",Kusto.Language.Editor.CompletionHint.Literal),shape208=Kusto.Language.Parsing.CommandGrammar.CD$1("TrimSize",Kusto.Language.Editor.CompletionHint.Literal),shape209=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TrimSize",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor),shape210=Kusto.Language.Parsing.CommandGrammar.CD$1("LimitCount",Kusto.Language.Editor.CompletionHint.Literal),shape211=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("LimitCount",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor),shape212=Kusto.Language.Parsing.CommandGrammar.CD$1("Older",Kusto.Language.Editor.CompletionHint.Literal),shape213=Kusto.Language.Parsing.CommandGrammar.CD$1("ExtentId",Kusto.Language.Editor.CompletionHint.Literal),shape214=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table)],Kusto.Language.Syntax.CustomElementDescriptor),shape215=Kusto.Language.Parsing.CommandGrammar.CD$1("externalTableName",Kusto.Language.Editor.CompletionHint.ExternalTable),shape216=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("externalTableName",Kusto.Language.Editor.CompletionHint.ExternalTable),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal,!0)],Kusto.Language.Syntax.CustomElementDescriptor),shape217=Kusto.Language.Parsing.CommandGrammar.CD$1("serviceType",Kusto.Language.Editor.CompletionHint.Literal),shape218=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("serviceType",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor),shape219=Kusto.Language.Parsing.CommandGrammar.CD$1("operationRole"),shape220=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("FunctionName",Kusto.Language.Editor.CompletionHint.Function),Kusto.Language.Parsing.CommandGrammar.CD$1("Role"),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal,!0)],Kusto.Language.Syntax.CustomElementDescriptor),shape221=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("FunctionName",Kusto.Language.Editor.CompletionHint.Function),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor),shape222=Kusto.Language.Parsing.CommandGrammar.CD$1("materializedViewName",Kusto.Language.Editor.CompletionHint.MaterializedView),shape223=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("materializedViewName",Kusto.Language.Editor.CompletionHint.MaterializedView),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal,!0)],Kusto.Language.Syntax.CustomElementDescriptor),shape224=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("MaterializedViewName",Kusto.Language.Editor.CompletionHint.MaterializedView)],Kusto.Language.Syntax.CustomElementDescriptor),shape225=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("rowStoreName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor),shape226=Kusto.Language.Parsing.CommandGrammar.CD$1("containerId",Kusto.Language.Editor.CompletionHint.Literal),shape227=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD$1("Role"),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal,!0)],Kusto.Language.Syntax.CustomElementDescriptor),shape228=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor),shape229=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("ContinuousExportName",Kusto.Language.Editor.CompletionHint.None)],Kusto.Language.Syntax.CustomElementDescriptor),shape230=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Tabular)],Kusto.Language.Syntax.CustomElementDescriptor),shape231=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Query",Kusto.Language.Editor.CompletionHint.Tabular)],Kusto.Language.Syntax.CustomElementDescriptor),shape232=Kusto.Language.Parsing.CommandGrammar.CD$1("Data",Kusto.Language.Editor.CompletionHint.None),shape233=Kusto.Language.Parsing.CommandGrammar.CD$1("GUID",Kusto.Language.Editor.CompletionHint.Literal),shape234=Kusto.Language.Parsing.CommandGrammar.CD$1("SourceTableName",Kusto.Language.Editor.CompletionHint.Table),shape235=Kusto.Language.Parsing.CommandGrammar.CD$1("DestinationTableName",Kusto.Language.Editor.CompletionHint.Table),shape236=Kusto.Language.Parsing.CommandGrammar.CD$1("NewColumnName",Kusto.Language.Editor.CompletionHint.None),shape237=Kusto.Language.Parsing.CommandGrammar.CD$1("NewTableName",Kusto.Language.Editor.CompletionHint.None),shape238=Kusto.Language.Parsing.CommandGrammar.CD$1("ExtentsToDropQuery",Kusto.Language.Editor.CompletionHint.Tabular),shape239=Kusto.Language.Parsing.CommandGrammar.CD$1("ExtentsToMoveQuery",Kusto.Language.Editor.CompletionHint.Tabular),shape240=Kusto.Language.Parsing.CommandGrammar.CD$1("StoredQueryResultName",Kusto.Language.Editor.CompletionHint.None),shape241=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("QueryOrCommand",Kusto.Language.Editor.CompletionHint.Tabular)],Kusto.Language.Syntax.CustomElementDescriptor),shape242=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal,!0)],Kusto.Language.Syntax.CustomElementDescriptor),shape243=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor),shape244=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD$1("Role"),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor),shape245=Kusto.Language.Parsing.CommandGrammar.CD$1("PrettyName",Kusto.Language.Editor.CompletionHint.Literal),shape246=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("PrettyName",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor),shape247=Kusto.Language.Parsing.CommandGrammar.CD$1("viewName",Kusto.Language.Editor.CompletionHint.MaterializedView),shape248=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor),shape249=Kusto.Language.Parsing.CommandGrammar.CD$1("Tag",Kusto.Language.Editor.CompletionHint.Literal),shape250=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Tag",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor),shape251=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("policy",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor),shape252=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor),shape253=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor),shape254=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("ContinuousExportName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor),shape255=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.None)],Kusto.Language.Syntax.CustomElementDescriptor),shape256=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor),shape257=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor),shape258=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor),shape259=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Version",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor),shape260=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor),shape261=Kusto.Language.Parsing.CommandGrammar.CD$1("Details"),shape262=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Database)],Kusto.Language.Syntax.CustomElementDescriptor),shape263=Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName"),shape264=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName"),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor),shape265=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor),shape266=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor),shape267=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor),shape268=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor),shape269=Kusto.Language.Parsing.CommandGrammar.CD$1("name",Kusto.Language.Editor.CompletionHint.Literal),shape270=Kusto.Language.Parsing.CommandGrammar.CD$1("databaseVersion",Kusto.Language.Editor.CompletionHint.Literal),shape271=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("databaseVersion",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor),shape272=Kusto.Language.Parsing.CommandGrammar.CD$1("Script"),shape273=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor),shape274=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Version",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor),shape275=Kusto.Language.Parsing.CommandGrammar.CD$1("flavor"),shape276=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("flavor"),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor),shape277=Kusto.Language.Parsing.CommandGrammar.CD$1("obj",Kusto.Language.Editor.CompletionHint.Literal),shape278=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("databaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor),shape279=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("databaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor),shape280=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD$1("Principal",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor),shape281=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("databaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor),shape282=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor),shape283=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor),shape284=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Version",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor),shape285=Kusto.Language.Parsing.CommandGrammar.CD$1("Scope"),shape286=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Scope"),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor),shape287=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("EntityGroupName",Kusto.Language.Editor.CompletionHint.EntityGroup)],Kusto.Language.Syntax.CustomElementDescriptor),shape288=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("ExternalTableName",Kusto.Language.Editor.CompletionHint.ExternalTable),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor),shape289=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("ExternalTableName",Kusto.Language.Editor.CompletionHint.ExternalTable),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("MappingName",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor),shape290=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("ExternalTableName",Kusto.Language.Editor.CompletionHint.ExternalTable)],Kusto.Language.Syntax.CustomElementDescriptor),shape291=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor),shape292=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("FunctionName",Kusto.Language.Editor.CompletionHint.Function)],Kusto.Language.Syntax.CustomElementDescriptor),shape293=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("MappingKind"),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor),shape294=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("MaterializedViewName",Kusto.Language.Editor.CompletionHint.MaterializedView),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor),shape295=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("viewName",Kusto.Language.Editor.CompletionHint.MaterializedView),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor),shape296=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("viewName",Kusto.Language.Editor.CompletionHint.MaterializedView),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor),shape297=Kusto.Language.Parsing.CommandGrammar.CD$1("OperationId",Kusto.Language.Editor.CompletionHint.Literal),shape298=Kusto.Language.Parsing.CommandGrammar.CD$1("queryText"),shape299=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("tableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor),shape300=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor),shape301=Kusto.Language.Parsing.CommandGrammar.CD$1("ShardsGroupId",Kusto.Language.Editor.CompletionHint.Literal),shape302=System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table)],Kusto.Language.Syntax.CustomElementDescriptor),shape303=Kusto.Language.Parsing.CommandGrammar.CD$1("eid",Kusto.Language.Editor.CompletionHint.Literal),shape304=Kusto.Language.Parsing.CommandGrammar.CD$1("tableName",Kusto.Language.Editor.CompletionHint.None),missing0=function(source,start){return new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement)).ctor)([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement))(rules.MissingStringLiteral(source,start))])},missing1=function(source,start){return Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape44,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("<|"),rules.MissingExpression(source,start)]),Kusto.Language.Syntax.SyntaxElement)},missing2=function(source,start){return Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape38,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("("),new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement)).ctor)([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement))(rules.MissingStringLiteral(source,start))]),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(")")]),Kusto.Language.Syntax.SyntaxElement)},missing3=function(source,start){return new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement)).ctor)([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement))(Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape18,[rules.MissingNameDeclaration(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("="),rules.MissingValue(source,start)]),Kusto.Language.Syntax.SyntaxElement))])},missing4=function(source,start){return Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape21,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("recoverability"),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("="),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$2(["disabled","enabled"])]),Kusto.Language.Syntax.SyntaxElement)},missing5=function(source,start){return new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement)).ctor)([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement))(Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape80,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("cluster"),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("("),rules.MissingStringLiteral(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(")"),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("."),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("database"),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("("),rules.MissingStringLiteral(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(")")]),Kusto.Language.Syntax.SyntaxElement))])},missing6=function(source,start){return Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape86,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("bin"),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("("),rules.MissingNameDeclaration(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(","),rules.MissingValue(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(")")]),Kusto.Language.Syntax.SyntaxElement)},missing7=function(source,start){return Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape140,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("datetime"),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("="),Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape86,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("bin"),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("("),rules.MissingNameDeclaration(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(","),rules.MissingValue(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(")")]),Kusto.Language.Syntax.SyntaxElement)]),Kusto.Language.Syntax.SyntaxElement)},missing8=function(source,start){return new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement)).ctor)([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement))(Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape89,[rules.MissingNameDeclaration(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(":"),Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape140,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("datetime"),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("="),Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape86,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("bin"),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("("),rules.MissingNameDeclaration(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(","),rules.MissingValue(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(")")]),Kusto.Language.Syntax.SyntaxElement)]),Kusto.Language.Syntax.SyntaxElement)]),Kusto.Language.Syntax.SyntaxElement))])},missing9=function(source,start){return new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SyntaxElement).ctor)([Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape92,[Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape91,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("datetime_pattern"),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("("),rules.MissingStringLiteral(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(","),rules.MissingNameDeclaration(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(")")]),Kusto.Language.Syntax.SyntaxElement),rules.MissingStringLiteral(source,start)]),Kusto.Language.Syntax.SyntaxElement)])},missing10=function(source,start){return new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement)).ctor)([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement))(Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape145,[rules.MissingNameReference(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$2(["asc","desc"])]),Kusto.Language.Syntax.SyntaxElement))])},missing11=function(source,start){return new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement)).ctor)([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement))(Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape49,[rules.MissingNameDeclaration(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("="),rules.MissingValue(source,start)]),Kusto.Language.Syntax.SyntaxElement))])},missing12=function(source,start){return new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement)).ctor)([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement))(Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape84,[rules.MissingNameDeclaration(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(":"),rules.MissingType(source,start)]),Kusto.Language.Syntax.SyntaxElement))])},missing13=function(source,start){return new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement)).ctor)([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement))(Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape129,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("docstring"),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("="),rules.MissingValue(source,start)]),Kusto.Language.Syntax.SyntaxElement))])},missing14=function(source,start){return new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement)).ctor)([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement))(Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape158,[rules.MissingNameReference(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(":"),rules.MissingStringLiteral(source,start)]),Kusto.Language.Syntax.SyntaxElement))])},missing15=function(source,start){return Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("*")},missing16=function(source,start){return Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape60,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("hotdata"),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("="),rules.MissingValue(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("hotindex"),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("="),rules.MissingValue(source,start)]),Kusto.Language.Syntax.SyntaxElement)},missing17=function(source,start){return Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("disable")},missing18=function(source,start){return Bridge.cast(new Kusto.Language.Syntax.CustomNode.ctor([new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement)).ctor)([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement))(Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape80,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("cluster"),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("("),rules.MissingStringLiteral(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(")"),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("."),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("database"),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("("),rules.MissingStringLiteral(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(")")]),Kusto.Language.Syntax.SyntaxElement))]),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(")")]),Kusto.Language.Syntax.SyntaxElement)},missing19=function(source,start){return Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("hours",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor),[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("older"),rules.MissingValue(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("hours")]),Kusto.Language.Syntax.SyntaxElement)},missing20=function(source,start){return Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape88,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("datetime"),Bridge.cast(new Kusto.Language.Syntax.CustomNode.ctor([Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("="),Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape86,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("bin"),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("("),rules.MissingNameDeclaration(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(","),rules.MissingValue(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(")")]),Kusto.Language.Syntax.SyntaxElement)]),Kusto.Language.Syntax.SyntaxElement)]),Kusto.Language.Syntax.SyntaxElement)},missing21=function(source,start){return new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement)).ctor)([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement))(Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape89,[rules.MissingNameDeclaration(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(":"),Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape88,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("datetime"),Bridge.cast(new Kusto.Language.Syntax.CustomNode.ctor([Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("="),Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape86,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("bin"),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("("),rules.MissingNameDeclaration(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(","),rules.MissingValue(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(")")]),Kusto.Language.Syntax.SyntaxElement)]),Kusto.Language.Syntax.SyntaxElement)]),Kusto.Language.Syntax.SyntaxElement)]),Kusto.Language.Syntax.SyntaxElement))])},missing22=function(source,start){return Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape88,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("datetime"),Bridge.cast(new Kusto.Language.Syntax.CustomNode.ctor([Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("="),Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape86,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("bin"),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("("),rules.MissingNameDeclaration(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(","),rules.MissingValue(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(")")]),Kusto.Language.Syntax.SyntaxElement)]),Kusto.Language.Syntax.SyntaxElement)]),Kusto.Language.Syntax.SyntaxElement)},missing23=function(source,start){return new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement)).ctor)([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement))(Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape89,[rules.MissingNameDeclaration(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(":"),Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape88,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("datetime"),Bridge.cast(new Kusto.Language.Syntax.CustomNode.ctor([Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("="),Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape86,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("bin"),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("("),rules.MissingNameDeclaration(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(","),rules.MissingValue(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(")")]),Kusto.Language.Syntax.SyntaxElement)]),Kusto.Language.Syntax.SyntaxElement)]),Kusto.Language.Syntax.SyntaxElement)]),Kusto.Language.Syntax.SyntaxElement))])},missing24=function(source,start){return Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape88,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("datetime"),Bridge.cast(new Kusto.Language.Syntax.CustomNode.ctor([Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("="),Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape86,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("bin"),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("("),rules.MissingNameDeclaration(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(","),rules.MissingValue(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(")")]),Kusto.Language.Syntax.SyntaxElement)]),Kusto.Language.Syntax.SyntaxElement)]),Kusto.Language.Syntax.SyntaxElement)},missing25=function(source,start){return new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement)).ctor)([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement))(Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape89,[rules.MissingNameDeclaration(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(":"),Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape88,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("datetime"),Bridge.cast(new Kusto.Language.Syntax.CustomNode.ctor([Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("="),Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape86,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("bin"),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("("),rules.MissingNameDeclaration(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(","),rules.MissingValue(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(")")]),Kusto.Language.Syntax.SyntaxElement)]),Kusto.Language.Syntax.SyntaxElement)]),Kusto.Language.Syntax.SyntaxElement)]),Kusto.Language.Syntax.SyntaxElement))])},missing26=function(source,start){return Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("serviceToNode",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor),[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("assignments"),rules.MissingStringLiteral(source,start)]),Kusto.Language.Syntax.SyntaxElement)},missing27=function(source,start){return Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("databaseNamePrefix",Kusto.Language.Editor.CompletionHint.None)],Kusto.Language.Syntax.CustomElementDescriptor),[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("database-name-prefix"),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("="),rules.MissingNameDeclaration(source,start)]),Kusto.Language.Syntax.SyntaxElement)},missing28=function(source,start){return new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement)).ctor)([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement))(rules.MissingNameDeclaration(source,start))])},missing29=function(source,start){return Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape114,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("hotdata"),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("="),rules.MissingValue(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("hotindex"),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("="),rules.MissingValue(source,start)]),Kusto.Language.Syntax.SyntaxElement)},missing30=function(source,start){return Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape118,[rules.MissingValue(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(".."),rules.MissingValue(source,start)]),Kusto.Language.Syntax.SyntaxElement)},missing31=function(source,start){return new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement)).ctor)([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement))(Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape129,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("dimensionMaterializedViews"),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("="),rules.MissingValue(source,start)]),Kusto.Language.Syntax.SyntaxElement))])},missing32=function(source,start){return new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement)).ctor)([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement))(rules.MissingNameReference(source,start))])},missing33=function(source,start){return new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement)).ctor)([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement))(Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD$1("ColumnName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor),[rules.MissingNameDeclaration(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$2(["asc","desc"])]),Kusto.Language.Syntax.SyntaxElement))])},missing34=function(source,start){return Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape155,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("("),new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement)).ctor)([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement))(Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape84,[rules.MissingNameDeclaration(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(":"),rules.MissingType(source,start)]),Kusto.Language.Syntax.SyntaxElement))]),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(")")]),Kusto.Language.Syntax.SyntaxElement)},missing35=function(source,start){return new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement)).ctor)([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement))(Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape129,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("creationTime"),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("="),rules.MissingValue(source,start)]),Kusto.Language.Syntax.SyntaxElement))])},missing36=function(source,start){return Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor),[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("("),new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement)).ctor)([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement))(rules.MissingNameReference(source,start))]),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(")")]),Kusto.Language.Syntax.SyntaxElement)},missing37=function(source,start){return new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SyntaxElement).ctor)([rules.MissingValue(source,start)])},missing38=function(source,start){return new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement)).ctor)([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement))(Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape189,[rules.MissingNameDeclaration(source,start),Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape155,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("("),new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement)).ctor)([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement))(Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape84,[rules.MissingNameDeclaration(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(":"),rules.MissingType(source,start)]),Kusto.Language.Syntax.SyntaxElement))]),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(")")]),Kusto.Language.Syntax.SyntaxElement)]),Kusto.Language.Syntax.SyntaxElement))])},missing39=function(source,start){return Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape88,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("datetime"),Bridge.cast(new Kusto.Language.Syntax.CustomNode.ctor([Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("="),Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape86,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("bin"),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("("),rules.MissingNameDeclaration(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(","),rules.MissingValue(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(")")]),Kusto.Language.Syntax.SyntaxElement)]),Kusto.Language.Syntax.SyntaxElement)]),Kusto.Language.Syntax.SyntaxElement)},missing40=function(source,start){return new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement)).ctor)([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement))(Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape89,[rules.MissingNameDeclaration(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(":"),Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape88,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("datetime"),Bridge.cast(new Kusto.Language.Syntax.CustomNode.ctor([Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("="),Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape86,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("bin"),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("("),rules.MissingNameDeclaration(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(","),rules.MissingValue(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(")")]),Kusto.Language.Syntax.SyntaxElement)]),Kusto.Language.Syntax.SyntaxElement)]),Kusto.Language.Syntax.SyntaxElement)]),Kusto.Language.Syntax.SyntaxElement))])},missing41=function(source,start){return Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape88,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("datetime"),Bridge.cast(new Kusto.Language.Syntax.CustomNode.ctor([Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("="),Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape86,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("bin"),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("("),rules.MissingNameDeclaration(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(","),rules.MissingValue(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(")")]),Kusto.Language.Syntax.SyntaxElement)]),Kusto.Language.Syntax.SyntaxElement)]),Kusto.Language.Syntax.SyntaxElement)},missing42=function(source,start){return new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement)).ctor)([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement))(Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape89,[rules.MissingNameDeclaration(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(":"),Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape88,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("datetime"),Bridge.cast(new Kusto.Language.Syntax.CustomNode.ctor([Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("="),Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape86,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("bin"),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("("),rules.MissingNameDeclaration(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(","),rules.MissingValue(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(")")]),Kusto.Language.Syntax.SyntaxElement)]),Kusto.Language.Syntax.SyntaxElement)]),Kusto.Language.Syntax.SyntaxElement)]),Kusto.Language.Syntax.SyntaxElement))])},missing43=function(source,start){return Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape88,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("datetime"),Bridge.cast(new Kusto.Language.Syntax.CustomNode.ctor([Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("="),Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape86,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("bin"),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("("),rules.MissingNameDeclaration(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(","),rules.MissingValue(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(")")]),Kusto.Language.Syntax.SyntaxElement)]),Kusto.Language.Syntax.SyntaxElement)]),Kusto.Language.Syntax.SyntaxElement)},missing44=function(source,start){return new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement)).ctor)([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement))(Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape89,[rules.MissingNameDeclaration(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(":"),Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape88,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("datetime"),Bridge.cast(new Kusto.Language.Syntax.CustomNode.ctor([Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("="),Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape86,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("bin"),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("("),rules.MissingNameDeclaration(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(","),rules.MissingValue(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(")")]),Kusto.Language.Syntax.SyntaxElement)]),Kusto.Language.Syntax.SyntaxElement)]),Kusto.Language.Syntax.SyntaxElement)]),Kusto.Language.Syntax.SyntaxElement))])},missing45=function(source,start){return new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement)).ctor)([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement))(Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape129,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("autoUpdateSchema"),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("="),rules.MissingValue(source,start)]),Kusto.Language.Syntax.SyntaxElement))])},missing46=function(source,start){return Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape88,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("datetime"),Bridge.cast(new Kusto.Language.Syntax.CustomNode.ctor([Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("="),Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape86,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("bin"),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("("),rules.MissingNameDeclaration(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(","),rules.MissingValue(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(")")]),Kusto.Language.Syntax.SyntaxElement)]),Kusto.Language.Syntax.SyntaxElement)]),Kusto.Language.Syntax.SyntaxElement)},missing47=function(source,start){return new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement)).ctor)([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement))(Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape89,[rules.MissingNameDeclaration(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(":"),Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape88,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("datetime"),Bridge.cast(new Kusto.Language.Syntax.CustomNode.ctor([Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("="),Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape86,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("bin"),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("("),rules.MissingNameDeclaration(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(","),rules.MissingValue(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(")")]),Kusto.Language.Syntax.SyntaxElement)]),Kusto.Language.Syntax.SyntaxElement)]),Kusto.Language.Syntax.SyntaxElement)]),Kusto.Language.Syntax.SyntaxElement))])},missing48=function(source,start){return Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape88,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("datetime"),Bridge.cast(new Kusto.Language.Syntax.CustomNode.ctor([Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("="),Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape86,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("bin"),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("("),rules.MissingNameDeclaration(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(","),rules.MissingValue(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(")")]),Kusto.Language.Syntax.SyntaxElement)]),Kusto.Language.Syntax.SyntaxElement)]),Kusto.Language.Syntax.SyntaxElement)},missing49=function(source,start){return new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement)).ctor)([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement))(Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape89,[rules.MissingNameDeclaration(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(":"),Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape88,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("datetime"),Bridge.cast(new Kusto.Language.Syntax.CustomNode.ctor([Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("="),Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape86,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("bin"),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("("),rules.MissingNameDeclaration(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(","),rules.MissingValue(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(")")]),Kusto.Language.Syntax.SyntaxElement)]),Kusto.Language.Syntax.SyntaxElement)]),Kusto.Language.Syntax.SyntaxElement)]),Kusto.Language.Syntax.SyntaxElement))])},missing50=function(source,start){return Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape88,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("datetime"),Bridge.cast(new Kusto.Language.Syntax.CustomNode.ctor([Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("="),Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape86,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("bin"),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("("),rules.MissingNameDeclaration(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(","),rules.MissingValue(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(")")]),Kusto.Language.Syntax.SyntaxElement)]),Kusto.Language.Syntax.SyntaxElement)]),Kusto.Language.Syntax.SyntaxElement)},missing51=function(source,start){return new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement)).ctor)([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement))(Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape89,[rules.MissingNameDeclaration(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(":"),Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape88,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("datetime"),Bridge.cast(new Kusto.Language.Syntax.CustomNode.ctor([Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("="),Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape86,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("bin"),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("("),rules.MissingNameDeclaration(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(","),rules.MissingValue(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(")")]),Kusto.Language.Syntax.SyntaxElement)]),Kusto.Language.Syntax.SyntaxElement)]),Kusto.Language.Syntax.SyntaxElement)]),Kusto.Language.Syntax.SyntaxElement))])},missing52=function(source,start){return Bridge.cast(new Kusto.Language.Syntax.CustomNode.ctor([Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("all"),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("tables")]),Kusto.Language.Syntax.SyntaxElement)},missing53=function(source,start){return new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement)).ctor)([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement))(rules.MissingValue(source,start))])},missing54=function(source,start){return Bridge.cast(new Kusto.Language.Syntax.CustomNode.ctor([Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("all"),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("tables")]),Kusto.Language.Syntax.SyntaxElement)},missing55=function(source,start){return Bridge.cast(new Kusto.Language.Syntax.CustomNode.ctor([Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("all"),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("tables")]),Kusto.Language.Syntax.SyntaxElement)},missing56=function(source,start){return new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement)).ctor)([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement))(Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape129,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("ContinueOnErrors"),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("="),rules.MissingValue(source,start)]),Kusto.Language.Syntax.SyntaxElement))])},missing57=function(source,start){return Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Data",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor),[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("["),rules.MissingInputText(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("]")]),Kusto.Language.Syntax.SyntaxElement)},missing58=function(source,start){return new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement)).ctor)([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement))(Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD$1("NewColumnName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("ColumnName",Kusto.Language.Editor.CompletionHint.Column)],Kusto.Language.Syntax.CustomElementDescriptor),[rules.MissingNameDeclaration(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("="),rules.MissingNameReference(source,start)]),Kusto.Language.Syntax.SyntaxElement))])},missing59=function(source,start){return new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement)).ctor)([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement))(Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD$1("NewTableName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table)],Kusto.Language.Syntax.CustomElementDescriptor),[rules.MissingNameDeclaration(source,start),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("="),rules.MissingNameReference(source,start)]),Kusto.Language.Syntax.SyntaxElement))])},missing60=function(source,start){return Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape242,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("("),new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement)).ctor)([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement))(rules.MissingStringLiteral(source,start))]),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(")"),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("skip-results"),rules.MissingStringLiteral(source,start)]),Kusto.Language.Syntax.SyntaxElement)},missing61=function(source,start){return Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal,!0)],Kusto.Language.Syntax.CustomElementDescriptor),[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("("),new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement)).ctor)([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement))(rules.MissingStringLiteral(source,start))]),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(")"),rules.MissingStringLiteral(source,start)]),Kusto.Language.Syntax.SyntaxElement)},missing62=function(source,start){return new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement)).ctor)([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement))(Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape250,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("tags"),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$2(["!contains","!has","contains","has"]),rules.MissingStringLiteral(source,start)]),Kusto.Language.Syntax.SyntaxElement))])},missing63=function(source,start){return Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("roles")},missing64=function(source,start){return new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement)).ctor)([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement))(Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape260,[rules.MissingNameReference(source,start),Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape259,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("if_later_than"),rules.MissingStringLiteral(source,start)]),Kusto.Language.Syntax.SyntaxElement)]),Kusto.Language.Syntax.SyntaxElement))])},missing65=function(source,start){return Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape92,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("operations"),rules.MissingValue(source,start)]),Kusto.Language.Syntax.SyntaxElement)},missing66=function(source,start){return Bridge.cast(new Kusto.Language.Syntax.CustomNode.ctor([Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("corrupted"),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("datetime")]),Kusto.Language.Syntax.SyntaxElement)},missing67=function(source,start){return Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape243,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("databases"),Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape291,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("("),Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement)).Empty(),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1(")")]),Kusto.Language.Syntax.SyntaxElement)]),Kusto.Language.Syntax.SyntaxElement)},missing68=function(source,start){return new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement)).ctor)([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement))(Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape129,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("reconstructCsl"),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("="),rules.MissingValue(source,start)]),Kusto.Language.Syntax.SyntaxElement))])},missing69=function(source,start){return new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement)).ctor)([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement))(Bridge.cast(new Kusto.Language.Syntax.CustomNode.$ctor1(shape129,[Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("from"),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("="),rules.MissingValue(source,start)]),Kusto.Language.Syntax.SyntaxElement))])},missing70=function(source,start){return Bridge.cast(new Kusto.Language.Syntax.CustomNode.ctor([Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("corrupted"),Kusto.Language.Parsing.CommandGrammar.CreateMissingToken$1("datetime")]),Kusto.Language.Syntax.SyntaxElement)},fragment0=Kusto.Language.Parsing.CommandGrammar.Custom$6(rules.NameDeclaration,Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.Value,rules.MissingValue),shape18),fragment1=Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token$1("recoverability"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.CommandGrammar.RequiredToken$1(["disabled","enabled"]),shape21),fragment2=Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token$1("softdelete"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.Value,rules.MissingValue),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment1),shape27),fragment3=Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token$1("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape37),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),shape38),fragment4=Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token$1("with"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(fragment0),missing3),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),shape19),fragment5=Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token$1("with"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.CommandGrammar.ZeroOrMoreCommaList(fragment0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),shape19),fragment6=Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token$1("<|"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.QueryInput,rules.MissingExpression),shape44),fragment7=Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token$1("with"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$6(rules.NameDeclaration,Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.Value,rules.MissingValue),shape49)),missing11),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),shape19),fragment8=Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token$1("hotdata"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.Value,rules.MissingValue),Kusto.Language.Parsing.CommandGrammar.RequiredToken("hotindex"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.Value,rules.MissingValue),shape60),fragment9=Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token$1("hot"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.Value,rules.MissingValue),shape62),fragment10=Kusto.Language.Parsing.CommandGrammar.Custom(Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("."),Kusto.Language.Parsing.CommandGrammar.RequiredToken("database"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),shape80),fragment11=Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),shape81),fragment12=Kusto.Language.Parsing.CommandGrammar.Custom$6(rules.NameDeclaration,Kusto.Language.Parsing.CommandGrammar.RequiredToken(":"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.Type,rules.MissingType),shape84),fragment13=Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token$1("bin"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),Kusto.Language.Parsing.CommandGrammar.RequiredToken(","),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.Value,rules.MissingValue),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),shape86),fragment14=Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token$1("startofday"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),shape32),fragment15=Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token$1("startofmonth"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),shape32),fragment16=Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token$1("startofweek"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),shape32),fragment17=Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token$1("startofyear"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),shape32),fragment18=Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token$1("pathformat"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape35)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreList(Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token$1("datetime_pattern"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.CommandGrammar.RequiredToken(","),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),shape91),Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("datetime_pattern")),rules.NameDeclaration),shape34)]),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape35)),shape92)),missing9),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),shape93),fragment19=Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token$1("partition"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("by"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$6(rules.NameDeclaration,Kusto.Language.Parsing.CommandGrammar.RequiredToken(":"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token$1("datetime"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token$1("="),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[fragment13,fragment14,fragment15,fragment16,fragment17]),missing6))),shape88),Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token$1("long"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.CommandGrammar.RequiredToken("hash"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),Kusto.Language.Parsing.CommandGrammar.RequiredToken(","),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.Value,rules.MissingValue),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),shape97),Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token$1("string"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token$1("="),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),shape98)),shape88)]),missing22),shape89)),missing23),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment18),shape94),fragment20=Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token$1("catalog"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape100),fragment21=Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token$1("from"),rules.StringLiteral,shape108),fragment22=Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token$1("from"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape108),fragment23=Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token$1("hotdata"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.Value,rules.MissingValue),Kusto.Language.Parsing.CommandGrammar.RequiredToken("hotindex"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.Value,rules.MissingValue),shape114),fragment24=Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token$1("hot"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.Value,rules.MissingValue),shape116),fragment25=Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1(",")),Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token$1("hot_window"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$6(rules.Value,Kusto.Language.Parsing.CommandGrammar.RequiredToken(".."),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.Value,rules.MissingValue),shape118),missing30),shape120)),shape121),fragment26=Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[Kusto.Language.Parsing.CommandGrammar.Token$1("dimensionMaterializedViews"),Kusto.Language.Parsing.CommandGrammar.Token$1("dimensionTables"),Kusto.Language.Parsing.CommandGrammar.Token$1("lookback"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["dimensionMaterializedViews","dimensionTables","lookback"])])),rules.NameDeclaration)]),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.Value,rules.MissingValue),shape129),fragment27=Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token$1("partition"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("by"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$6(rules.NameDeclaration,Kusto.Language.Parsing.CommandGrammar.RequiredToken(":"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token$1("datetime"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[fragment13,fragment14,fragment15,fragment16,fragment17]),missing6),shape140),Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token$1("string"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),shape141)]),missing7),shape89)),missing8),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment18),shape94),fragment28=Kusto.Language.Parsing.CommandGrammar.Custom$7(rules.ColumnNameReference,Kusto.Language.Parsing.CommandGrammar.RequiredToken$1(["asc","desc"]),shape145),fragment29=Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token$1("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(fragment12),missing12),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),shape155),fragment30=Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token$1("with"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[Kusto.Language.Parsing.CommandGrammar.Token$1("docstring"),Kusto.Language.Parsing.CommandGrammar.Token$1("folder"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["docstring","folder"])])),rules.NameDeclaration)]),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.Value,rules.MissingValue),shape129)),missing13),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")")),fragment31=Kusto.Language.Parsing.CommandGrammar.Custom$6(rules.ColumnNameReference,Kusto.Language.Parsing.CommandGrammar.RequiredToken(":"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape158),fragment32=Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token$1("into"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.TableNameReference,rules.MissingNameReference),shape166),fragment33=Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token$1("readonly"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token$1("version"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape168)),shape169),fragment34=Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),shape174),fragment35=Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token$1("with"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[Kusto.Language.Parsing.CommandGrammar.Token$1("autoUpdateSchema"),Kusto.Language.Parsing.CommandGrammar.Token$1("backfill"),Kusto.Language.Parsing.CommandGrammar.Token$1("dimensionMaterializedViews"),Kusto.Language.Parsing.CommandGrammar.Token$1("dimensionTables"),Kusto.Language.Parsing.CommandGrammar.Token$1("docString"),Kusto.Language.Parsing.CommandGrammar.Token$1("effectiveDateTime"),Kusto.Language.Parsing.CommandGrammar.Token$1("folder"),Kusto.Language.Parsing.CommandGrammar.Token$1("lookback"),Kusto.Language.Parsing.CommandGrammar.Token$1("updateExtentsCreationTime"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["autoUpdateSchema","backfill","dimensionMaterializedViews","dimensionTables","docString","effectiveDateTime","folder","lookback","updateExtentsCreationTime"])])),rules.NameDeclaration)]),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.Value,rules.MissingValue),shape129)),missing45),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")")),fragment36=Kusto.Language.Parsing.CommandGrammar.Custom$6(rules.NameDeclaration,Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.Value,rules.MissingValue),shape49),fragment37=Kusto.Language.Parsing.CommandGrammar.Custom$7(rules.NameDeclaration,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,fragment29,missing34),shape189),fragment38=Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token$1("application"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape200),fragment39=Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token$1("user"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape201),fragment40=Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token$1("all"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("tables")),fragment41=Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token$1("trim"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("by"),Kusto.Language.Parsing.CommandGrammar.RequiredToken$1(["datasize","extentsize"]),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.Value,rules.MissingValue),Kusto.Language.Parsing.CommandGrammar.RequiredToken$1(["bytes","GB","MB"]),shape209),fragment42=Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token$1("limit"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.Value,rules.MissingValue),shape211),fragment43=Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token$1("from"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.TableNameReference,rules.MissingNameReference),shape214),fragment44=Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token$1("with"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[Kusto.Language.Parsing.CommandGrammar.Token$1("ContinueOnErrors"),Kusto.Language.Parsing.CommandGrammar.Token$1("ThrowOnErrors"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["ContinueOnErrors","ThrowOnErrors"])])),rules.NameDeclaration)]),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.Value,rules.MissingValue),shape129)),missing56),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")")),fragment45=Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token$1("with"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[Kusto.Language.Parsing.CommandGrammar.Token$1("creationTime"),Kusto.Language.Parsing.CommandGrammar.Token$1("distributed"),Kusto.Language.Parsing.CommandGrammar.Token$1("docstring"),Kusto.Language.Parsing.CommandGrammar.Token$1("extend_schema"),Kusto.Language.Parsing.CommandGrammar.Token$1("folder"),Kusto.Language.Parsing.CommandGrammar.Token$1("format"),Kusto.Language.Parsing.CommandGrammar.Token$1("ignoreFirstRecord"),Kusto.Language.Parsing.CommandGrammar.Token$1("ingestIfNotExists"),Kusto.Language.Parsing.CommandGrammar.Token$1("ingestionMappingReference"),Kusto.Language.Parsing.CommandGrammar.Token$1("ingestionMapping"),Kusto.Language.Parsing.CommandGrammar.Token$1("persistDetails"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy_ingestionTime"),Kusto.Language.Parsing.CommandGrammar.Token$1("recreate_schema"),Kusto.Language.Parsing.CommandGrammar.Token$1("small_dimension_table"),Kusto.Language.Parsing.CommandGrammar.Token$1("tags"),Kusto.Language.Parsing.CommandGrammar.Token$1("validationPolicy"),Kusto.Language.Parsing.CommandGrammar.Token$1("zipPattern"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["creationTime","distributed","docstring","extend_schema","folder","format","ignoreFirstRecord","ingestIfNotExists","ingestionMappingReference","ingestionMapping","persistDetails","policy_ingestionTime","recreate_schema","small_dimension_table","tags","validationPolicy","zipPattern"])])),rules.NameDeclaration)]),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.Value,rules.MissingValue),shape129)),missing35),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")")),fragment46=Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[Kusto.Language.Parsing.CommandGrammar.Token$1("creationTime"),Kusto.Language.Parsing.CommandGrammar.Token$1("distributed"),Kusto.Language.Parsing.CommandGrammar.Token$1("docstring"),Kusto.Language.Parsing.CommandGrammar.Token$1("extend_schema"),Kusto.Language.Parsing.CommandGrammar.Token$1("folder"),Kusto.Language.Parsing.CommandGrammar.Token$1("format"),Kusto.Language.Parsing.CommandGrammar.Token$1("ignoreFirstRecord"),Kusto.Language.Parsing.CommandGrammar.Token$1("ingestIfNotExists"),Kusto.Language.Parsing.CommandGrammar.Token$1("ingestionMappingReference"),Kusto.Language.Parsing.CommandGrammar.Token$1("ingestionMapping"),Kusto.Language.Parsing.CommandGrammar.Token$1("persistDetails"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy_ingestionTime"),Kusto.Language.Parsing.CommandGrammar.Token$1("recreate_schema"),Kusto.Language.Parsing.CommandGrammar.Token$1("small_dimension_table"),Kusto.Language.Parsing.CommandGrammar.Token$1("tags"),Kusto.Language.Parsing.CommandGrammar.Token$1("validationPolicy"),Kusto.Language.Parsing.CommandGrammar.Token$1("zipPattern"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["creationTime","distributed","docstring","extend_schema","folder","format","ignoreFirstRecord","ingestIfNotExists","ingestionMappingReference","ingestionMapping","persistDetails","policy_ingestionTime","recreate_schema","small_dimension_table","tags","validationPolicy","zipPattern"])])),rules.NameDeclaration)]),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.Value,rules.MissingValue),shape129),fragment47=Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token$1("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape165),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),shape38),fragment48=Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token$1("with"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.CommandGrammar.RequiredToken("rebuild"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.CommandGrammar.RequiredToken("true"),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")")),fragment49=Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token$1("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape2),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("skip-results"),shape3)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape4)),shape242),fragment50=Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token$1("none"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("skip-results"),shape3)),shape243),fragment51=Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token$1("("),Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[rules.WildcardedNameDeclaration,rules.DatabaseNameReference]),shape182),rules.MissingNameDeclaration,!1),Kusto.Language.Parsing.CommandGrammar.Token$1(")"),shape155),fragment52=Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token$1("tags"),Kusto.Language.Parsing.CommandGrammar.RequiredToken$1(["!contains","!has","contains","has"]),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape250),fragment53=Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token$1("with"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.CommandGrammar.RequiredToken("extentsShowFilteringRuntimePolicy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.Value,rules.MissingValue),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),shape251),fragment54=Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token$1("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.AnyGuidLiteralOrString,shape213),rules.MissingValue,!1),missing53),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),shape38),fragment55=Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token$1(","),Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[rules.WildcardedNameDeclaration,rules.DatabaseNameReference]),shape182),rules.MissingNameDeclaration,!1),shape255),fragment56=Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token$1("("),Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.AnyGuidLiteralOrString,shape213),rules.MissingValue,!1),Kusto.Language.Parsing.CommandGrammar.Token$1(")"),shape38),fragment57=Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token$1("where"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreList(fragment52,Kusto.Language.Parsing.CommandGrammar.Token$1("and"),void 0,!1),missing62)),fragment58=Kusto.Language.Parsing.CommandGrammar.Custom$7(rules.DatabaseNameReference,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token$1("if_later_than"),rules.StringLiteral,shape259)),shape260),fragment59=Kusto.Language.Parsing.CommandGrammar.Custom$7(rules.DatabaseNameReference,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token$1("if_later_than"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape259)),shape260),fragment60=Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token$1(","),Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(fragment58),shape262),fragment61=Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token$1(","),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(fragment59),missing64),shape262),fragment62=Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token$1("if_later_than"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape271),fragment63=Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token$1("if_later_than"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape259),fragment64=Kusto.Language.Parsing.CommandGrammar.Custom$7(rules.StringLiteral,Kusto.Language.Parsing.CommandGrammar.RequiredToken("roles"),shape280),fragment65=Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token$1("with"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.CommandGrammar.RequiredToken("scope"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.CommandGrammar.RequiredToken$1(["cluster","workloadgroup"]),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),shape286),fragment66=Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token$1("("),Kusto.Language.Parsing.CommandGrammar.ZeroOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1(")")),rules.DatabaseNameReference),shape77),rules.MissingNameReference,!1),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),shape291),fragment67=Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token$1("as"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("json")),fragment68=Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token$1("corrupted"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("datetime")),AddClusterRole=Kusto.Language.Parsing.CommandGrammar.Command("AddClusterRole",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("add",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("admins"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape2),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("skip-results"),shape3)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape4)),shape1)),AddClusterRole2=Kusto.Language.Parsing.CommandGrammar.Command("AddClusterRole",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("add",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("alldatabasesadmins"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape2),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("skip-results"),shape3)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape4)),shape1)),AddClusterRole3=Kusto.Language.Parsing.CommandGrammar.Command("AddClusterRole",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("add",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("alldatabasesmonitors"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape2),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("skip-results"),shape3)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape4)),shape1)),AddClusterRole4=Kusto.Language.Parsing.CommandGrammar.Command("AddClusterRole",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("add",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("alldatabasesviewers"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape2),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("skip-results"),shape3)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape4)),shape1)),AddClusterBlockedPrincipals=Kusto.Language.Parsing.CommandGrammar.Command("AddClusterBlockedPrincipals",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("add",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("blockedprincipals"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment38),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment39),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token$1("period"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.Value,rules.MissingValue),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Period",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token$1("reason"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Reason",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Principal",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),AddClusterRole5=Kusto.Language.Parsing.CommandGrammar.Command("AddClusterRole",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("add",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("databasecreators"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape2),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("skip-results"),shape3)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape4)),shape1)),AddClusterRole6=Kusto.Language.Parsing.CommandGrammar.Command("AddClusterRole",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("add",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("monitors"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape2),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("skip-results"),shape3)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape4)),shape1)),AddClusterRole7=Kusto.Language.Parsing.CommandGrammar.Command("AddClusterRole",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("add",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("ops"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape2),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("skip-results"),shape3)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape4)),shape1)),AddClusterRole8=Kusto.Language.Parsing.CommandGrammar.Command("AddClusterRole",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("add",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("users"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape2),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("skip-results"),shape3)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape4)),shape1)),AddClusterRole9=Kusto.Language.Parsing.CommandGrammar.Command("AddClusterRole",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("add",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("viewers"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape2),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("skip-results"),shape3)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape4)),shape1)),AddDatabaseRole=Kusto.Language.Parsing.CommandGrammar.Command("AddDatabaseRole",Kusto.Language.Parsing.CommandGrammar.Custom(Kusto.Language.Parsing.CommandGrammar.Token("add",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.DatabaseNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken$1(["admins","ingestors","monitors","unrestrictedviewers","users","viewers"]),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape2),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("skip-results"),shape3)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape4)),shape203)),AddExternalTableAdmins=Kusto.Language.Parsing.CommandGrammar.Command("AddExternalTableAdmins",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("add",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("external"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.ExternalTableNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("admins"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape5),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("skip-results")),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape6))],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),shape216)),AddFollowerDatabaseAuthorizedPrincipals=Kusto.Language.Parsing.CommandGrammar.Command("AddFollowerDatabaseAuthorizedPrincipals",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("add",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("follower"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.DatabaseNameReference,rules.MissingNameReference),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment22),Kusto.Language.Parsing.CommandGrammar.RequiredToken$1(["admins","monitors","unrestrictedviewers","users","viewers"]),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape5),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape6))],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("dbName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD$1("operationRole"),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),AddFunctionRole=Kusto.Language.Parsing.CommandGrammar.Command("AddFunctionRole",Kusto.Language.Parsing.CommandGrammar.Custom(Kusto.Language.Parsing.CommandGrammar.Token("add",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("function"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.FunctionNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("admins"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape2),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("skip-results"),shape3)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape4)),shape220)),AddMaterializedViewAdmins=Kusto.Language.Parsing.CommandGrammar.Command("AddMaterializedViewAdmins",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("add",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.MaterializedViewNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("admins"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape5),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape6)),shape223)),AddTableRole=Kusto.Language.Parsing.CommandGrammar.Command("AddTableRole",Kusto.Language.Parsing.CommandGrammar.Custom(Kusto.Language.Parsing.CommandGrammar.Token("add",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.RequiredToken("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.TableNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken$1(["admins","ingestors"]),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape2),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("skip-results"),shape3)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape4)),shape227)),AlterMergeExtentTagsFromQuery=Kusto.Language.Parsing.CommandGrammar.Command("AlterMergeExtentTagsFromQuery",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("alter-merge",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("async"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.TableNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("extent"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("tags"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape51),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment5),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,fragment6,missing1)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),shape52)),AlterMergeClusterPolicyCallout=Kusto.Language.Parsing.CommandGrammar.Command("AlterMergeClusterPolicyCallout",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("alter-merge",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("callout"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape8)),AlterMergeClusterPolicyCapacity=Kusto.Language.Parsing.CommandGrammar.Command("AlterMergeClusterPolicyCapacity",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("alter-merge",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("capacity"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape8)),AlterMergeClusterPolicyDiagnostics=Kusto.Language.Parsing.CommandGrammar.Command("AlterMergeClusterPolicyDiagnostics",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("alter-merge",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("diagnostics"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape53)),AlterMergeClusterPolicyIngestionBatching=Kusto.Language.Parsing.CommandGrammar.Command("AlterMergeClusterPolicyIngestionBatching",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("alter-merge",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("ingestionbatching"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape54)),AlterMergeClusterPolicyManagedIdentity=Kusto.Language.Parsing.CommandGrammar.Command("AlterMergeClusterPolicyManagedIdentity",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("alter-merge",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("managed_identity"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape55)),AlterMergeClusterPolicyMultiDatabaseAdmins=Kusto.Language.Parsing.CommandGrammar.Command("AlterMergeClusterPolicyMultiDatabaseAdmins",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("alter-merge",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("multidatabaseadmins"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape8)),AlterMergeClusterPolicyQueryWeakConsistency=Kusto.Language.Parsing.CommandGrammar.Command("AlterMergeClusterPolicyQueryWeakConsistency",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("alter-merge",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("query_weak_consistency"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape8)),AlterMergeClusterPolicyRequestClassification=Kusto.Language.Parsing.CommandGrammar.Command("AlterMergeClusterPolicyRequestClassification",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("alter-merge",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("request_classification"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape8)),AlterMergeClusterPolicyRowStore=Kusto.Language.Parsing.CommandGrammar.Command("AlterMergeClusterPolicyRowStore",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("alter-merge",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("rowstore"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape57)),AlterMergeClusterPolicySharding=Kusto.Language.Parsing.CommandGrammar.Command("AlterMergeClusterPolicySharding",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("alter-merge",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("sharding"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape10)),AlterMergeClusterPolicyStreamingIngestion=Kusto.Language.Parsing.CommandGrammar.Command("AlterMergeClusterPolicyStreamingIngestion",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("alter-merge",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("policy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("streamingingestion"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape10)),AlterMergeColumnPolicyEncoding=Kusto.Language.Parsing.CommandGrammar.Command("AlterMergeColumnPolicyEncoding",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter-merge",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("column"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.TableColumnNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("policy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("encoding"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape63)),AlterMergeDatabaseIngestionMapping=Kusto.Language.Parsing.CommandGrammar.Command("AlterMergeDatabaseIngestionMapping",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("alter-merge",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("ingestion"),Kusto.Language.Parsing.CommandGrammar.RequiredToken$1(["avro","csv","json","orc","parquet","w3clogfile"]),Kusto.Language.Parsing.CommandGrammar.RequiredToken("mapping"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape65)),AlterMergeDatabasePolicyDiagnostics=Kusto.Language.Parsing.CommandGrammar.Command("AlterMergeDatabasePolicyDiagnostics",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter-merge",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("diagnostics"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape67)),AlterMergeDatabasePolicyEncoding=Kusto.Language.Parsing.CommandGrammar.Command("AlterMergeDatabasePolicyEncoding",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter-merge",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("encoding"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape68)),AlterMergeDatabasePolicyIngestionBatching=Kusto.Language.Parsing.CommandGrammar.Command("AlterMergeDatabasePolicyIngestionBatching",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter-merge",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("ingestionbatching"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape69)),AlterMergeDatabasePolicyManagedIdentity=Kusto.Language.Parsing.CommandGrammar.Command("AlterMergeDatabasePolicyManagedIdentity",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter-merge",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("managed_identity"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape70)),AlterMergeDatabasePolicyMerge=Kusto.Language.Parsing.CommandGrammar.Command("AlterMergeDatabasePolicyMerge",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter-merge",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("merge"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape71)),AlterMergeDatabasePolicyMirroring=Kusto.Language.Parsing.CommandGrammar.Command("AlterMergeDatabasePolicyMirroring",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("alter-merge",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("mirroring"),Kusto.Language.Parsing.CommandGrammar.Token$1("dataformat"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.CommandGrammar.RequiredToken("parquet"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment3),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment4)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),shape72)),AlterMergeDatabasePolicyMirroringWithJson=Kusto.Language.Parsing.CommandGrammar.Command("AlterMergeDatabasePolicyMirroringWithJson",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter-merge",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("mirroring"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape22)),AlterMergeDatabasePolicyRetention=Kusto.Language.Parsing.CommandGrammar.Command("AlterMergeDatabasePolicyRetention",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter-merge",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("retention"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[fragment1,fragment2,Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape28)]),missing4),shape66)),AlterMergeDatabasePolicySharding=Kusto.Language.Parsing.CommandGrammar.Command("AlterMergeDatabasePolicySharding",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter-merge",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("sharding"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape73)),AlterMergeDatabasePolicyShardsGrouping=Kusto.Language.Parsing.CommandGrammar.Command("AlterMergeDatabasePolicyShardsGrouping",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter-merge",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("shards_grouping").Hide$1(),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape75)),AlterMergeDatabasePolicyStreamingIngestion=Kusto.Language.Parsing.CommandGrammar.Command("AlterMergeDatabasePolicyStreamingIngestion",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter-merge",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("streamingingestion"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("StreamingIngestionPolicy",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),AlterMergeDatabaseTableMirroringPolicyTemplates=Kusto.Language.Parsing.CommandGrammar.Command("AlterMergeDatabaseTableMirroringPolicyTemplates",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter-merge",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.DatabaseNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("policy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("table_mirroring_templates"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape22)),AlterMergeEntityGroup=Kusto.Language.Parsing.CommandGrammar.Command("AlterMergeEntityGroup",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter-merge",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("entity_group"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.EntityGroupNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[fragment10,fragment11])),missing5),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("EntityGroupName",Kusto.Language.Editor.CompletionHint.EntityGroup),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),AlterMergeMaterializedViewPolicyMerge=Kusto.Language.Parsing.CommandGrammar.Command("AlterMergeMaterializedViewPolicyMerge",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter-merge",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),rules.MaterializedViewNameReference,Kusto.Language.Parsing.CommandGrammar.RequiredToken("policy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("merge"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("MaterializedViewName",Kusto.Language.Editor.CompletionHint.MaterializedView),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("MergePolicy",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),AlterMergeMaterializedViewPolicyPartitioning=Kusto.Language.Parsing.CommandGrammar.Command("AlterMergeMaterializedViewPolicyPartitioning",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter-merge",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),rules.DatabaseMaterializedViewNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("partitioning"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape133)),AlterMergeMaterializedViewPolicyRetention=Kusto.Language.Parsing.CommandGrammar.Command("AlterMergeMaterializedViewPolicyRetention",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter-merge",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.DatabaseMaterializedViewNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("policy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("retention"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[fragment1,fragment2,Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape28)]),missing4),shape132)),AlterMergeTablePolicyEncoding=Kusto.Language.Parsing.CommandGrammar.Command("AlterMergeTablePolicyEncoding",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter-merge",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.DatabaseTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("encoding"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape136)),AlterMergeTablePolicyIngestionBatching=Kusto.Language.Parsing.CommandGrammar.Command("AlterMergeTablePolicyIngestionBatching",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter-merge",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.DatabaseTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("ingestionbatching"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape138)),AlterMergeTablePolicyMerge=Kusto.Language.Parsing.CommandGrammar.Command("AlterMergeTablePolicyMerge",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter-merge",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.DatabaseTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("merge"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape139)),AlterMergeTablePolicyMirroring=Kusto.Language.Parsing.CommandGrammar.Command("AlterMergeTablePolicyMirroring",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("alter-merge",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.DatabaseTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("mirroring"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment27),Kusto.Language.Parsing.CommandGrammar.RequiredToken("dataformat"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.CommandGrammar.RequiredToken("parquet"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment3),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment4)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),shape142)),AlterMergeTablePolicyPartitioning=Kusto.Language.Parsing.CommandGrammar.Command("AlterMergeTablePolicyPartitioning",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter-merge",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.DatabaseTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("partitioning"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape143)),AlterMergeTablePolicyRetention=Kusto.Language.Parsing.CommandGrammar.Command("AlterMergeTablePolicyRetention",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter-merge",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.DatabaseTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("retention"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[fragment1,fragment2,Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape28)]),missing4),shape135)),AlterMergeTablePolicyRowOrder=Kusto.Language.Parsing.CommandGrammar.Command("AlterMergeTablePolicyRowOrder",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("alter-merge",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.DatabaseTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("roworder"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(fragment28),missing10),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),shape146)),AlterMergeTablePolicySharding=Kusto.Language.Parsing.CommandGrammar.Command("AlterMergeTablePolicySharding",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter-merge",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.DatabaseTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("sharding"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape147)),AlterMergeTablePolicyStreamingIngestion=Kusto.Language.Parsing.CommandGrammar.Command("AlterMergeTablePolicyStreamingIngestion",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter-merge",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.DatabaseTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("streamingingestion"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("StreamingIngestionPolicy",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),AlterMergeTablePolicyUpdate=Kusto.Language.Parsing.CommandGrammar.Command("AlterMergeTablePolicyUpdate",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("alter-merge",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.DatabaseTableNameReference,Kusto.Language.Parsing.CommandGrammar.RequiredToken("policy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("update"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),shape149)),AlterMergeTable=Kusto.Language.Parsing.CommandGrammar.Command("AlterMergeTable",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("alter-merge",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.TableNameReference,fragment29,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment30),shape156)),AlterMergeTableColumnDocStrings=Kusto.Language.Parsing.CommandGrammar.Command("AlterMergeTableColumnDocStrings",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("alter-merge",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.TableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("column-docstrings"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(fragment31),missing14),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),shape159)),AlterMergeExtentTagsFromQuery2=Kusto.Language.Parsing.CommandGrammar.Command("AlterMergeExtentTagsFromQuery",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("alter-merge",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.TableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("extent"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("tags"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape51),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment5),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,fragment6,missing1)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),shape160)),AlterMergeTableIngestionMapping=Kusto.Language.Parsing.CommandGrammar.Command("AlterMergeTableIngestionMapping",Kusto.Language.Parsing.CommandGrammar.Custom(Kusto.Language.Parsing.CommandGrammar.Token("alter-merge",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.TableNameReference,Kusto.Language.Parsing.CommandGrammar.RequiredToken("ingestion"),Kusto.Language.Parsing.CommandGrammar.RequiredToken$1(["avro","csv","json","orc","parquet","w3clogfile"]),Kusto.Language.Parsing.CommandGrammar.RequiredToken("mapping"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),shape161)),AlterMergeTablePolicyMirroringWithJson=Kusto.Language.Parsing.CommandGrammar.Command("AlterMergeTablePolicyMirroringWithJson",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter-merge",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.DatabaseNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("policy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("mirroring"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape163)),AlterMergeWorkloadGroup=Kusto.Language.Parsing.CommandGrammar.Command("AlterMergeWorkloadGroup",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("alter-merge",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.RequiredToken("workload_group"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape179)),AlterClusterStorageKeys=Kusto.Language.Parsing.CommandGrammar.Command("AlterClusterStorageKeys",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("async"),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("storage"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("keys"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),Kusto.Language.Parsing.CommandGrammar.RequiredToken("decryption-certificate-thumbprint"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("thumbprint",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),AlterDatabaseStorageKeys=Kusto.Language.Parsing.CommandGrammar.Command("AlterDatabaseStorageKeys",Kusto.Language.Parsing.CommandGrammar.Custom(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("async"),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.DatabaseNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("storage"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("keys"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),Kusto.Language.Parsing.CommandGrammar.RequiredToken("decryption-certificate-thumbprint"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("databaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("thumbprint",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),AlterExtentTagsFromQuery=Kusto.Language.Parsing.CommandGrammar.Command("AlterExtentTagsFromQuery",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("async"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.TableNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("extent"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("tags"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape51),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment5),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,fragment6,missing1)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),shape52)),AlterCache=Kusto.Language.Parsing.CommandGrammar.Command("AlterCache",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cache"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("on"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[Kusto.Language.Parsing.CommandGrammar.Token$1("*"),Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.BracketedStringLiteral,Kusto.Language.Parsing.CommandGrammar.CD$1("NodeList",Kusto.Language.Editor.CompletionHint.Literal))]),missing15),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.BracketedStringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Action",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),AlterClusterPolicyCaching=Kusto.Language.Parsing.CommandGrammar.Command("AlterClusterPolicyCaching",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("caching"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[fragment8,fragment9]),missing16))),AlterClusterPolicyCallout=Kusto.Language.Parsing.CommandGrammar.Command("AlterClusterPolicyCallout",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("callout"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape8)),AlterClusterPolicyCapacity=Kusto.Language.Parsing.CommandGrammar.Command("AlterClusterPolicyCapacity",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("capacity"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape8)),AlterClusterPolicyDiagnostics=Kusto.Language.Parsing.CommandGrammar.Command("AlterClusterPolicyDiagnostics",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("diagnostics"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape53)),AlterClusterPolicyIngestionBatching=Kusto.Language.Parsing.CommandGrammar.Command("AlterClusterPolicyIngestionBatching",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("ingestionbatching"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape54)),AlterClusterPolicyManagedIdentity=Kusto.Language.Parsing.CommandGrammar.Command("AlterClusterPolicyManagedIdentity",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("managed_identity"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape55)),AlterClusterPolicyMultiDatabaseAdmins=Kusto.Language.Parsing.CommandGrammar.Command("AlterClusterPolicyMultiDatabaseAdmins",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("multidatabaseadmins"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape8)),AlterClusterPolicyQueryWeakConsistency=Kusto.Language.Parsing.CommandGrammar.Command("AlterClusterPolicyQueryWeakConsistency",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("query_weak_consistency"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape8)),AlterClusterPolicyRequestClassification=Kusto.Language.Parsing.CommandGrammar.Command("AlterClusterPolicyRequestClassification",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("request_classification"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.CommandGrammar.RequiredToken("<|"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.QueryInput,rules.MissingExpression),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Policy",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Query",Kusto.Language.Editor.CompletionHint.Tabular)],Kusto.Language.Syntax.CustomElementDescriptor))),AlterClusterPolicyRowStore=Kusto.Language.Parsing.CommandGrammar.Command("AlterClusterPolicyRowStore",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("rowstore"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape57)),AlterClusterPolicySandbox=Kusto.Language.Parsing.CommandGrammar.Command("AlterClusterPolicySandbox",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("sandbox"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("SandboxPolicy",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),AlterClusterPolicySharding=Kusto.Language.Parsing.CommandGrammar.Command("AlterClusterPolicySharding",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("sharding"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape10)),AlterClusterPolicyStreamingIngestion=Kusto.Language.Parsing.CommandGrammar.Command("AlterClusterPolicyStreamingIngestion",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("streamingingestion"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("StreamingIngestionPolicy",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),AlterClusterStorageKeys2=Kusto.Language.Parsing.CommandGrammar.Command("AlterClusterStorageKeys",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("storage"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("keys"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),Kusto.Language.Parsing.CommandGrammar.RequiredToken("decryption-certificate-thumbprint"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("thumbprint",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),AlterColumnsPolicyEncodingByQuery=Kusto.Language.Parsing.CommandGrammar.Command("AlterColumnsPolicyEncodingByQuery",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("columns"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("policy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("encoding"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.CommandGrammar.RequiredToken("<|"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.QueryInput,rules.MissingExpression),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("EncodingPolicy",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("QueryOrCommand",Kusto.Language.Editor.CompletionHint.Tabular)],Kusto.Language.Syntax.CustomElementDescriptor))),AlterColumnPolicyCaching=Kusto.Language.Parsing.CommandGrammar.Command("AlterColumnPolicyCaching",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("column"),rules.DatabaseTableColumnNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("caching"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[fragment8,fragment9]),missing16),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("ColumnName",Kusto.Language.Editor.CompletionHint.Column),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),AlterColumnPolicyEncodingType=Kusto.Language.Parsing.CommandGrammar.Command("AlterColumnPolicyEncodingType",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("column"),rules.DatabaseTableColumnNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("encoding"),Kusto.Language.Parsing.CommandGrammar.Token$1("type"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("ColumnName",Kusto.Language.Editor.CompletionHint.Column),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("EncodingPolicyType",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),AlterColumnPolicyEncoding=Kusto.Language.Parsing.CommandGrammar.Command("AlterColumnPolicyEncoding",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("column"),rules.DatabaseTableColumnNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("encoding"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape63)),AlterColumnType=Kusto.Language.Parsing.CommandGrammar.Command("AlterColumnType",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("column"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.DatabaseTableColumnNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("type"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.Type,rules.MissingType),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("ColumnName",Kusto.Language.Editor.CompletionHint.Column),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("ColumnType")],Kusto.Language.Syntax.CustomElementDescriptor))),AlterDatabaseIngestionMapping=Kusto.Language.Parsing.CommandGrammar.Command("AlterDatabaseIngestionMapping",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("ingestion"),Kusto.Language.Parsing.CommandGrammar.RequiredToken$1(["avro","csv","json","orc","parquet","w3clogfile"]),Kusto.Language.Parsing.CommandGrammar.RequiredToken("mapping"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape65)),AlterDatabasePersistMetadata=Kusto.Language.Parsing.CommandGrammar.Command("AlterDatabasePersistMetadata",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("persist"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("metadata"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$7(rules.StringLiteral,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("allow-non-empty-container"),Kusto.Language.Parsing.CommandGrammar.CD$1("AllowNonEmptyContainer"))),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD$1("Path",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),AlterDatabasePolicyCaching=Kusto.Language.Parsing.CommandGrammar.Command("AlterDatabasePolicyCaching",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("caching"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[fragment8,fragment9]),missing16),shape66)),AlterDatabasePolicyDiagnostics=Kusto.Language.Parsing.CommandGrammar.Command("AlterDatabasePolicyDiagnostics",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("diagnostics"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape67)),AlterDatabasePolicyEncoding=Kusto.Language.Parsing.CommandGrammar.Command("AlterDatabasePolicyEncoding",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("encoding"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape68)),AlterDatabasePolicyExtentTagsRetention=Kusto.Language.Parsing.CommandGrammar.Command("AlterDatabasePolicyExtentTagsRetention",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("extent_tags_retention"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("ExtentTagsRetentionPolicy",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),AlterDatabasePolicyIngestionBatching=Kusto.Language.Parsing.CommandGrammar.Command("AlterDatabasePolicyIngestionBatching",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("ingestionbatching"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape69)),AlterDatabasePolicyManagedIdentity=Kusto.Language.Parsing.CommandGrammar.Command("AlterDatabasePolicyManagedIdentity",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("managed_identity"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape70)),AlterDatabasePolicyMerge=Kusto.Language.Parsing.CommandGrammar.Command("AlterDatabasePolicyMerge",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("merge"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape71)),AlterDatabasePolicyMirroring=Kusto.Language.Parsing.CommandGrammar.Command("AlterDatabasePolicyMirroring",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("mirroring"),Kusto.Language.Parsing.CommandGrammar.Token$1("dataformat"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.CommandGrammar.RequiredToken("parquet"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment3),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment4)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),shape72)),AlterDatabasePolicyMirroringWithJson=Kusto.Language.Parsing.CommandGrammar.Command("AlterDatabasePolicyMirroringWithJson",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("mirroring"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape22)),AlterDatabasePolicyRetention=Kusto.Language.Parsing.CommandGrammar.Command("AlterDatabasePolicyRetention",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("retention"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("RetentionPolicy",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),AlterDatabasePolicySharding=Kusto.Language.Parsing.CommandGrammar.Command("AlterDatabasePolicySharding",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("sharding"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape73)),AlterDatabasePolicyShardsGrouping=Kusto.Language.Parsing.CommandGrammar.Command("AlterDatabasePolicyShardsGrouping",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("shards_grouping").Hide$1(),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape75)),AlterDatabasePolicyStreamingIngestion=Kusto.Language.Parsing.CommandGrammar.Command("AlterDatabasePolicyStreamingIngestion",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("streamingingestion"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("disable"),shape76),Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("enable"),shape76),Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape41)]),missing17),shape66)),AlterDatabaseTableMirroringPolicyTemplates=Kusto.Language.Parsing.CommandGrammar.Command("AlterDatabaseTableMirroringPolicyTemplates",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("table_mirroring_templates"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape22)),AlterDatabasePrettyName=Kusto.Language.Parsing.CommandGrammar.Command("AlterDatabasePrettyName",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("prettyname"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape246)),AlterDatabaseStorageKeys2=Kusto.Language.Parsing.CommandGrammar.Command("AlterDatabaseStorageKeys",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.DatabaseNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("storage"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("keys"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),Kusto.Language.Parsing.CommandGrammar.RequiredToken("decryption-certificate-thumbprint"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("databaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("thumbprint",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),AlterEntityGroup=Kusto.Language.Parsing.CommandGrammar.Command("AlterEntityGroup",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("entity_group"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.EntityGroupNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[fragment10,fragment11])),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")")),missing18),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("EntityGroupName",Kusto.Language.Editor.CompletionHint.EntityGroup),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),AlterExtentContainersAdd=Kusto.Language.Parsing.CommandGrammar.Command("AlterExtentContainersAdd",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("extentcontainers"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("add"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$7(rules.Value,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.AnyGuidLiteralOrString,rules.MissingValue),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD$1("hardDeletePeriod",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD$1("containerId",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("databaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("container",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),AlterExtentContainersDrop=Kusto.Language.Parsing.CommandGrammar.Command("AlterExtentContainersDrop",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("extentcontainers"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("drop"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.AnyGuidLiteralOrString,shape82)),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("databaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),AlterExtentContainersRecycle=Kusto.Language.Parsing.CommandGrammar.Command("AlterExtentContainersRecycle",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("extentcontainers"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("recycle"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token$1("older"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[rules.Value,rules.Value]),rules.MissingValue),Kusto.Language.Parsing.CommandGrammar.RequiredToken("hours"),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("hours",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor)),Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.AnyGuidLiteralOrString,shape82)]),missing19),shape281)),AlterExtentContainersSet=Kusto.Language.Parsing.CommandGrammar.Command("AlterExtentContainersSet",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("extentcontainers"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.DatabaseNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("set"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("state"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.AnyGuidLiteralOrString,rules.MissingValue),Kusto.Language.Parsing.CommandGrammar.RequiredToken("to"),Kusto.Language.Parsing.CommandGrammar.RequiredToken$1(["readonly","readwrite"]),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("databaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("container",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),AlterStorageExternalTable=Kusto.Language.Parsing.CommandGrammar.Command("AlterStorageExternalTable",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("external"),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.NameDeclaration,Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(fragment12),missing12),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("kind"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.CommandGrammar.RequiredToken("adl").Hide$1(),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment19),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment20),Kusto.Language.Parsing.CommandGrammar.RequiredToken("dataformat"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.CommandGrammar.RequiredToken$1(["apacheavro","avro","csv","json","multijson","orc","parquet","psv","raw","scsv","sohsv","sstream","tsve","tsv","txt","w3clogfile"]),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape37),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment4)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),shape101)),AlterStorageExternalTable2=Kusto.Language.Parsing.CommandGrammar.Command("AlterStorageExternalTable",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("external"),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.NameDeclaration,Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(fragment12),missing12),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("kind"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.CommandGrammar.RequiredToken("blob").Hide$1(),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment19),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment20),Kusto.Language.Parsing.CommandGrammar.RequiredToken("dataformat"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.CommandGrammar.RequiredToken$1(["apacheavro","avro","csv","json","multijson","orc","parquet","psv","raw","scsv","sohsv","sstream","tsve","tsv","txt","w3clogfile"]),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape37),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment4)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),shape101)),AlterStorageExternalTable3=Kusto.Language.Parsing.CommandGrammar.Command("AlterStorageExternalTable",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("external"),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.NameDeclaration,Kusto.Language.Parsing.CommandGrammar.Token$1("("),Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(fragment12),Kusto.Language.Parsing.CommandGrammar.Token$1(")"),Kusto.Language.Parsing.CommandGrammar.Token$1("kind"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.CommandGrammar.RequiredToken("delta"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment4)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),shape173)),AlterSqlExternalTable=Kusto.Language.Parsing.CommandGrammar.Command("AlterSqlExternalTable",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("external"),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.NameDeclaration,Kusto.Language.Parsing.CommandGrammar.Token$1("("),Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(fragment12),Kusto.Language.Parsing.CommandGrammar.Token$1(")"),Kusto.Language.Parsing.CommandGrammar.Token$1("kind"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.CommandGrammar.RequiredToken("sql"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment34),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment4)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),shape175)),AlterStorageExternalTable4=Kusto.Language.Parsing.CommandGrammar.Command("AlterStorageExternalTable",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("external"),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.NameDeclaration,Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(fragment12),missing12),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("kind"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.CommandGrammar.RequiredToken("storage"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment19),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment20),Kusto.Language.Parsing.CommandGrammar.RequiredToken("dataformat"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.CommandGrammar.RequiredToken$1(["apacheavro","avro","csv","json","multijson","orc","parquet","psv","raw","scsv","sohsv","sstream","tsve","tsv","txt","w3clogfile"]),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape37),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment4)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),shape101)),AlterExternalTableDocString=Kusto.Language.Parsing.CommandGrammar.Command("AlterExternalTableDocString",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("external"),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.ExternalTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("docstring"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("tableName",Kusto.Language.Editor.CompletionHint.ExternalTable),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("docStringValue",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),AlterExternalTableFolder=Kusto.Language.Parsing.CommandGrammar.Command("AlterExternalTableFolder",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("external"),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.ExternalTableNameReference,Kusto.Language.Parsing.CommandGrammar.RequiredToken("folder"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("tableName",Kusto.Language.Editor.CompletionHint.ExternalTable),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("folderValue",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),AlterStorageExternalTable5=Kusto.Language.Parsing.CommandGrammar.Command("AlterStorageExternalTable",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("external"),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.NameDeclaration,Kusto.Language.Parsing.CommandGrammar.Token$1("kind"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.CommandGrammar.RequiredToken("delta"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment4)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),shape176)),AlterExternalTableMapping=Kusto.Language.Parsing.CommandGrammar.Command("AlterExternalTableMapping",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("external"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.ExternalTableNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("mapping"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape186)),AlterFabricServiceAssignmentsCommand=Kusto.Language.Parsing.CommandGrammar.Command("AlterFabricServiceAssignmentsCommand",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("fabric"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("service"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token$1("assignments"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("serviceToNode",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor)),Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token$1("assignment"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.CommandGrammar.RequiredToken("to"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("serviceId",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("nodeId",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))]),missing26),shape218)),AlterFollowerClusterConfiguration=Kusto.Language.Parsing.CommandGrammar.Command("AlterFollowerClusterConfiguration",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("follower"),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("configuration"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("from"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token$1("database-name-prefix"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("databaseNamePrefix",Kusto.Language.Editor.CompletionHint.None)],Kusto.Language.Syntax.CustomElementDescriptor)),Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token$1("default-caching-policies-modification-kind"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.CommandGrammar.RequiredToken$1(["none","replace","union"]),shape106),Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token$1("default-principals-modification-kind"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.CommandGrammar.RequiredToken$1(["none","replace","union"]),shape106),Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token$1("follow-authorized-principals"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.Value,rules.MissingValue),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("followAuthorizedPrincipals",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))]),missing27),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("leaderClusterMetadataPath",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),AlterFollowerDatabaseConfiguration=Kusto.Language.Parsing.CommandGrammar.Command("AlterFollowerDatabaseConfiguration",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("follower"),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment21),Kusto.Language.Parsing.CommandGrammar.Token$1("caching-policies-modification-kind"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.CommandGrammar.RequiredToken$1(["none","replace","union"]),shape124)),AlterFollowerDatabaseConfiguration2=Kusto.Language.Parsing.CommandGrammar.Command("AlterFollowerDatabaseConfiguration",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("follower"),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment21),Kusto.Language.Parsing.CommandGrammar.Token$1("database-name-override"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("dbName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("databaseNameOverride",Kusto.Language.Editor.CompletionHint.None)],Kusto.Language.Syntax.CustomElementDescriptor))),AlterFollowerDatabaseChildEntities=Kusto.Language.Parsing.CommandGrammar.Command("AlterFollowerDatabaseChildEntities",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("follower"),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment21),Kusto.Language.Parsing.CommandGrammar.Token$1("external"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("tables"),Kusto.Language.Parsing.CommandGrammar.RequiredToken$1(["exclude","include"]),Kusto.Language.Parsing.CommandGrammar.RequiredToken$1(["add","drop"]),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.WildcardedNameDeclaration,Kusto.Language.Parsing.CommandGrammar.CD$1("ename",Kusto.Language.Editor.CompletionHint.None)),rules.MissingNameDeclaration,!1),missing28),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")")],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("dbName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("entityListKind"),Kusto.Language.Parsing.CommandGrammar.CD$1("operationName"),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),AlterFollowerTablesPolicyCaching=Kusto.Language.Parsing.CommandGrammar.Command("AlterFollowerTablesPolicyCaching",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("follower"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.DatabaseNameReference,rules.MissingNameReference),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment22),Kusto.Language.Parsing.CommandGrammar.RequiredToken("materialized-views"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.NameDeclaration,shape125),rules.MissingNameDeclaration,!1),missing28),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("policy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("caching"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[fragment23,fragment24]),missing29),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment25)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),shape126)),AlterFollowerDatabaseChildEntities2=Kusto.Language.Parsing.CommandGrammar.Command("AlterFollowerDatabaseChildEntities",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("follower"),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment21),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-views"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("exclude"),Kusto.Language.Parsing.CommandGrammar.RequiredToken$1(["add","drop"]),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.WildcardedNameDeclaration,Kusto.Language.Parsing.CommandGrammar.CD$1("ename",Kusto.Language.Editor.CompletionHint.None)),rules.MissingNameDeclaration,!1),missing28),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")")],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),shape111)),AlterFollowerDatabaseChildEntities3=Kusto.Language.Parsing.CommandGrammar.Command("AlterFollowerDatabaseChildEntities",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("follower"),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment21),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-views"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("include"),Kusto.Language.Parsing.CommandGrammar.RequiredToken$1(["add","drop"]),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.WildcardedNameDeclaration,Kusto.Language.Parsing.CommandGrammar.CD$1("ename",Kusto.Language.Editor.CompletionHint.None)),rules.MissingNameDeclaration,!1),missing28),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")")],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),shape111)),AlterFollowerTablesPolicyCaching2=Kusto.Language.Parsing.CommandGrammar.Command("AlterFollowerTablesPolicyCaching",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("follower"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.DatabaseNameReference,rules.MissingNameReference),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment22),Kusto.Language.Parsing.CommandGrammar.RequiredToken("materialized-view"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.MaterializedViewNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("policy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("caching"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[fragment23,fragment24]),missing29),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment25)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("dbName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("name",Kusto.Language.Editor.CompletionHint.MaterializedView),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("hotWindows",524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),AlterFollowerDatabaseConfiguration3=Kusto.Language.Parsing.CommandGrammar.Command("AlterFollowerDatabaseConfiguration",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("follower"),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment21),Kusto.Language.Parsing.CommandGrammar.Token$1("metadata"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("dbName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("serializedDatabaseMetadataOverride",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),AlterFollowerDatabaseAuthorizedPrincipals=Kusto.Language.Parsing.CommandGrammar.Command("AlterFollowerDatabaseAuthorizedPrincipals",Kusto.Language.Parsing.CommandGrammar.Custom(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("follower"),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment21),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("caching"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[fragment23,fragment24]),missing29),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment25),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("dbName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("hotWindows",524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),AlterFollowerDatabaseConfiguration4=Kusto.Language.Parsing.CommandGrammar.Command("AlterFollowerDatabaseConfiguration",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("follower"),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment21),Kusto.Language.Parsing.CommandGrammar.Token$1("prefetch-extents"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.Value,rules.MissingValue),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("dbName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("prefetchExtents",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),AlterFollowerDatabaseConfiguration5=Kusto.Language.Parsing.CommandGrammar.Command("AlterFollowerDatabaseConfiguration",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("follower"),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment21),Kusto.Language.Parsing.CommandGrammar.Token$1("principals-modification-kind"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.CommandGrammar.RequiredToken$1(["none","replace","union"]),shape124)),AlterFollowerTablesPolicyCaching3=Kusto.Language.Parsing.CommandGrammar.Command("AlterFollowerTablesPolicyCaching",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("follower"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.DatabaseNameReference,rules.MissingNameReference),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment22),Kusto.Language.Parsing.CommandGrammar.RequiredToken("tables"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.NameDeclaration,shape125),rules.MissingNameDeclaration,!1),missing28),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("policy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("caching"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[fragment23,fragment24]),missing29),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment25)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),shape126)),AlterFollowerDatabaseChildEntities4=Kusto.Language.Parsing.CommandGrammar.Command("AlterFollowerDatabaseChildEntities",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("follower"),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment21),Kusto.Language.Parsing.CommandGrammar.Token$1("tables"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("exclude"),Kusto.Language.Parsing.CommandGrammar.RequiredToken$1(["add","drop"]),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.WildcardedNameDeclaration,Kusto.Language.Parsing.CommandGrammar.CD$1("ename",Kusto.Language.Editor.CompletionHint.None)),rules.MissingNameDeclaration,!1),missing28),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")")],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),shape111)),AlterFollowerDatabaseChildEntities5=Kusto.Language.Parsing.CommandGrammar.Command("AlterFollowerDatabaseChildEntities",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("follower"),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment21),Kusto.Language.Parsing.CommandGrammar.Token$1("tables"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("include"),Kusto.Language.Parsing.CommandGrammar.RequiredToken$1(["add","drop"]),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.WildcardedNameDeclaration,Kusto.Language.Parsing.CommandGrammar.CD$1("ename",Kusto.Language.Editor.CompletionHint.None)),rules.MissingNameDeclaration,!1),missing28),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")")],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),shape111)),AlterFollowerTablesPolicyCaching4=Kusto.Language.Parsing.CommandGrammar.Command("AlterFollowerTablesPolicyCaching",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("follower"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.DatabaseNameReference,rules.MissingNameReference),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment22),Kusto.Language.Parsing.CommandGrammar.RequiredToken("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.TableNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("policy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("caching"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[fragment23,fragment24]),missing29),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment25)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("dbName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("name",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("hotWindows",524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),AlterFunction=Kusto.Language.Parsing.CommandGrammar.Command("AlterFunction",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("function"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("with"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(fragment0),missing3),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("with")),rules.FunctionNameReference),rules.MissingNameReference),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.FunctionDeclaration,rules.MissingFunctionDeclaration),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("FunctionName",Kusto.Language.Editor.CompletionHint.Function),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),AlterFunctionDocString=Kusto.Language.Parsing.CommandGrammar.Command("AlterFunctionDocString",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("function"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("with")),rules.FunctionNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("docstring"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Function),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Documentation",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),AlterFunctionFolder=Kusto.Language.Parsing.CommandGrammar.Command("AlterFunctionFolder",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("function"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("with")),rules.FunctionNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("folder"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("FunctionName",Kusto.Language.Editor.CompletionHint.Function),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Folder",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),AlterFunction2=Kusto.Language.Parsing.CommandGrammar.Command("AlterFunction",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("function"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("with")),rules.FunctionNameReference),rules.MissingNameReference),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.FunctionDeclaration,rules.MissingFunctionDeclaration),shape221)),AlterMaterializedViewOverMaterializedView=Kusto.Language.Parsing.CommandGrammar.Command("AlterMaterializedViewOverMaterializedView",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),Kusto.Language.Parsing.CommandGrammar.Token$1("with"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(fragment26),missing31),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("with")),rules.MaterializedViewNameReference),rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("on"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("materialized-view"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.MaterializedViewNameReference,rules.MissingNameReference),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.FunctionBody,rules.MissingFunctionBody)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("MaterializedViewName",Kusto.Language.Editor.CompletionHint.MaterializedView),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.MaterializedView),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),AlterMaterializedView=Kusto.Language.Parsing.CommandGrammar.Command("AlterMaterializedView",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),Kusto.Language.Parsing.CommandGrammar.Token$1("with"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(fragment26),missing31),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("with")),rules.MaterializedViewNameReference),rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("on"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.TableNameReference,rules.MissingNameReference),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.FunctionBody,rules.MissingFunctionBody)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("MaterializedViewName",Kusto.Language.Editor.CompletionHint.MaterializedView),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),AlterMaterializedViewAutoUpdateSchema=Kusto.Language.Parsing.CommandGrammar.Command("AlterMaterializedViewAutoUpdateSchema",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("with")),rules.MaterializedViewNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("autoUpdateSchema"),Kusto.Language.Parsing.CommandGrammar.RequiredToken$1(["false","true"]),shape197)),AlterMaterializedViewDocString=Kusto.Language.Parsing.CommandGrammar.Command("AlterMaterializedViewDocString",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("with")),rules.MaterializedViewNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("docstring"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("MaterializedViewName",Kusto.Language.Editor.CompletionHint.MaterializedView),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Documentation",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),AlterMaterializedViewFolder=Kusto.Language.Parsing.CommandGrammar.Command("AlterMaterializedViewFolder",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("with")),rules.MaterializedViewNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("folder"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("MaterializedViewName",Kusto.Language.Editor.CompletionHint.MaterializedView),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Folder",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),AlterMaterializedViewLookback=Kusto.Language.Parsing.CommandGrammar.Command("AlterMaterializedViewLookback",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("with")),rules.MaterializedViewNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("lookback"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.Value,rules.MissingValue),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("MaterializedViewName",Kusto.Language.Editor.CompletionHint.MaterializedView),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Lookback",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),AlterMaterializedViewOverMaterializedView2=Kusto.Language.Parsing.CommandGrammar.Command("AlterMaterializedViewOverMaterializedView",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("with")),rules.MaterializedViewNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("on"),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.MaterializedViewNameReference,rules.MissingNameReference),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.FunctionBody,rules.MissingFunctionBody),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("MaterializedViewName",Kusto.Language.Editor.CompletionHint.MaterializedView),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.MaterializedView),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),AlterMaterializedView2=Kusto.Language.Parsing.CommandGrammar.Command("AlterMaterializedView",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("with")),rules.MaterializedViewNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("on"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.TableNameReference,rules.MissingNameReference),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.FunctionBody,rules.MissingFunctionBody),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("MaterializedViewName",Kusto.Language.Editor.CompletionHint.MaterializedView),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),AlterMaterializedViewPolicyCaching=Kusto.Language.Parsing.CommandGrammar.Command("AlterMaterializedViewPolicyCaching",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("with")),rules.DatabaseMaterializedViewNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("caching"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[fragment8,fragment9]),missing16),shape132)),AlterMaterializedViewPolicyPartitioning=Kusto.Language.Parsing.CommandGrammar.Command("AlterMaterializedViewPolicyPartitioning",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("with")),rules.DatabaseMaterializedViewNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("partitioning"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape133)),AlterMaterializedViewPolicyRetention=Kusto.Language.Parsing.CommandGrammar.Command("AlterMaterializedViewPolicyRetention",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("with")),rules.DatabaseMaterializedViewNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("retention"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("MaterializedViewName",Kusto.Language.Editor.CompletionHint.MaterializedView),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("RetentionPolicy",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),AlterMaterializedViewPolicyRowLevelSecurity=Kusto.Language.Parsing.CommandGrammar.Command("AlterMaterializedViewPolicyRowLevelSecurity",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("with")),rules.DatabaseMaterializedViewNameReference),rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("policy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("row_level_security"),Kusto.Language.Parsing.CommandGrammar.RequiredToken$1(["disable","enable"]),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("MaterializedViewName",Kusto.Language.Editor.CompletionHint.MaterializedView),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Query",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),AlterPoliciesOfRetention=Kusto.Language.Parsing.CommandGrammar.Command("AlterPoliciesOfRetention",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("policies"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("of"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("retention"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("internal")),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD$1("policies",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),AlterTablesPolicyCaching=Kusto.Language.Parsing.CommandGrammar.Command("AlterTablesPolicyCaching",Kusto.Language.Parsing.CommandGrammar.Custom(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("tables"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.TableNameReference,shape29),rules.MissingNameReference,!1),Kusto.Language.Parsing.CommandGrammar.Token$1(")"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("caching"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[fragment8,fragment9]),missing16),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment25),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),AlterTablesPolicyIngestionBatching=Kusto.Language.Parsing.CommandGrammar.Command("AlterTablesPolicyIngestionBatching",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("tables"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.TableNameReference,shape29),rules.MissingNameReference,!1),Kusto.Language.Parsing.CommandGrammar.Token$1(")"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("ingestionbatching"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("IngestionBatchingPolicy",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),AlterTablesPolicyIngestionTime=Kusto.Language.Parsing.CommandGrammar.Command("AlterTablesPolicyIngestionTime",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("tables"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.TableNameReference,shape29),rules.MissingNameReference,!1),Kusto.Language.Parsing.CommandGrammar.Token$1(")"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("ingestiontime"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("true"),shape134)),AlterTablesPolicyMerge=Kusto.Language.Parsing.CommandGrammar.Command("AlterTablesPolicyMerge",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("tables"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.TableNameReference,shape29),rules.MissingNameReference,!1),Kusto.Language.Parsing.CommandGrammar.Token$1(")"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("merge"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("policy",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),AlterTablesPolicyRestrictedViewAccess=Kusto.Language.Parsing.CommandGrammar.Command("AlterTablesPolicyRestrictedViewAccess",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("tables"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.TableNameReference,shape29),rules.MissingNameReference,!1),Kusto.Language.Parsing.CommandGrammar.Token$1(")"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("restricted_view_access"),Kusto.Language.Parsing.CommandGrammar.RequiredToken$1(["false","true"]),shape134)),AlterTablesPolicyRetention=Kusto.Language.Parsing.CommandGrammar.Command("AlterTablesPolicyRetention",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("tables"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.TableNameReference,shape29),rules.MissingNameReference,!1),Kusto.Language.Parsing.CommandGrammar.Token$1(")"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("retention"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("RetentionPolicy",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),AlterTablesPolicyRowOrder=Kusto.Language.Parsing.CommandGrammar.Command("AlterTablesPolicyRowOrder",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("tables"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.TableNameReference,shape29),rules.MissingNameReference,!1),missing32),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("policy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("roworder"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$7(rules.NameDeclaration,Kusto.Language.Parsing.CommandGrammar.RequiredToken$1(["asc","desc"]),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD$1("ColumnName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),missing33),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")")],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),AlterTableColumnStatisticsMethod=Kusto.Language.Parsing.CommandGrammar.Command("AlterTableColumnStatisticsMethod",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.DatabaseTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("column"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("statistics"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("method"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("newMethod",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),AlterTablePolicyAutoDelete=Kusto.Language.Parsing.CommandGrammar.Command("AlterTablePolicyAutoDelete",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.DatabaseTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("auto_delete"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("AutoDeletePolicy",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),AlterTablePolicyCaching=Kusto.Language.Parsing.CommandGrammar.Command("AlterTablePolicyCaching",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.DatabaseTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("caching"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[fragment8,fragment9]),missing16),shape135)),AlterTablePolicyEncoding=Kusto.Language.Parsing.CommandGrammar.Command("AlterTablePolicyEncoding",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.DatabaseTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("encoding"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape136)),AlterTablePolicyExtentTagsRetention=Kusto.Language.Parsing.CommandGrammar.Command("AlterTablePolicyExtentTagsRetention",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.DatabaseTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("extent_tags_retention"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("ExtentTagsRetentionPolicy",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),AlterTablePolicyIngestionBatching=Kusto.Language.Parsing.CommandGrammar.Command("AlterTablePolicyIngestionBatching",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.DatabaseTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("ingestionbatching"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape138)),AlterTablePolicyIngestionTime=Kusto.Language.Parsing.CommandGrammar.Command("AlterTablePolicyIngestionTime",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.DatabaseTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("ingestiontime"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("true"),shape135)),AlterTablePolicyMerge=Kusto.Language.Parsing.CommandGrammar.Command("AlterTablePolicyMerge",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.DatabaseTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("merge"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape139)),AlterTablePolicyMirroring=Kusto.Language.Parsing.CommandGrammar.Command("AlterTablePolicyMirroring",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.DatabaseTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("mirroring"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment27),Kusto.Language.Parsing.CommandGrammar.RequiredToken("dataformat"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.CommandGrammar.RequiredToken("parquet"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment3),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment4)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),shape142)),AlterTablePolicyPartitioning=Kusto.Language.Parsing.CommandGrammar.Command("AlterTablePolicyPartitioning",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.DatabaseTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("partitioning"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape143)),AlterTablePolicyRestrictedViewAccess=Kusto.Language.Parsing.CommandGrammar.Command("AlterTablePolicyRestrictedViewAccess",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.DatabaseTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("restricted_view_access"),Kusto.Language.Parsing.CommandGrammar.RequiredToken$1(["false","true"]),shape135)),AlterTablePolicyRetention=Kusto.Language.Parsing.CommandGrammar.Command("AlterTablePolicyRetention",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.DatabaseTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("retention"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("RetentionPolicy",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),AlterTablePolicyRowLevelSecurity=Kusto.Language.Parsing.CommandGrammar.Command("AlterTablePolicyRowLevelSecurity",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.DatabaseTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("row_level_security"),Kusto.Language.Parsing.CommandGrammar.RequiredToken$1(["disable","enable"]),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment5),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD$1("Query",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),AlterTablePolicyRowOrder=Kusto.Language.Parsing.CommandGrammar.Command("AlterTablePolicyRowOrder",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.DatabaseTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("roworder"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(fragment28),missing10),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),shape146)),AlterTablePolicySharding=Kusto.Language.Parsing.CommandGrammar.Command("AlterTablePolicySharding",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.DatabaseTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("sharding"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape147)),AlterTablePolicyStreamingIngestion=Kusto.Language.Parsing.CommandGrammar.Command("AlterTablePolicyStreamingIngestion",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.DatabaseTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("streamingingestion"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("disable"),shape76),Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("enable"),shape76),Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape41)]),missing17),shape135)),AlterTablePolicyUpdate=Kusto.Language.Parsing.CommandGrammar.Command("AlterTablePolicyUpdate",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.DatabaseTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("update"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),shape149)),AlterTableRowStoreReferencesDisableBlockedKeys=Kusto.Language.Parsing.CommandGrammar.Command("AlterTableRowStoreReferencesDisableBlockedKeys",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.DatabaseTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("rowstore_references"),Kusto.Language.Parsing.CommandGrammar.Token$1("disable"),Kusto.Language.Parsing.CommandGrammar.Token$1("blocked"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("keys"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),shape150)),AlterTableRowStoreReferencesDisableKey=Kusto.Language.Parsing.CommandGrammar.Command("AlterTableRowStoreReferencesDisableKey",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.DatabaseTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("rowstore_references"),Kusto.Language.Parsing.CommandGrammar.Token$1("disable"),Kusto.Language.Parsing.CommandGrammar.Token$1("key"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),shape152)),AlterTableRowStoreReferencesDisableRowStore=Kusto.Language.Parsing.CommandGrammar.Command("AlterTableRowStoreReferencesDisableRowStore",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.DatabaseTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("rowstore_references"),Kusto.Language.Parsing.CommandGrammar.Token$1("disable"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("rowstore"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),shape154)),AlterTableRowStoreReferencesDropBlockedKeys=Kusto.Language.Parsing.CommandGrammar.Command("AlterTableRowStoreReferencesDropBlockedKeys",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.DatabaseTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("rowstore_references"),Kusto.Language.Parsing.CommandGrammar.Token$1("drop"),Kusto.Language.Parsing.CommandGrammar.Token$1("blocked"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("keys"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),shape150)),AlterTableRowStoreReferencesDropKey=Kusto.Language.Parsing.CommandGrammar.Command("AlterTableRowStoreReferencesDropKey",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.DatabaseTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("rowstore_references"),Kusto.Language.Parsing.CommandGrammar.Token$1("drop"),Kusto.Language.Parsing.CommandGrammar.Token$1("key"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),shape152)),AlterTableRowStoreReferencesDropRowStore=Kusto.Language.Parsing.CommandGrammar.Command("AlterTableRowStoreReferencesDropRowStore",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.DatabaseTableNameReference,Kusto.Language.Parsing.CommandGrammar.RequiredToken("rowstore_references"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("drop"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("rowstore"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),shape154)),AlterTable=Kusto.Language.Parsing.CommandGrammar.Command("AlterTable",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.TableNameReference,fragment29,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment30),shape156)),AlterTableColumnDocStrings=Kusto.Language.Parsing.CommandGrammar.Command("AlterTableColumnDocStrings",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.TableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("column-docstrings"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(fragment31),missing14),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),shape159)),AlterTableColumnsPolicyEncoding=Kusto.Language.Parsing.CommandGrammar.Command("AlterTableColumnsPolicyEncoding",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.TableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("columns"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("policy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("encoding"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("EncodingPolicies",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),AlterTableColumnStatistics=Kusto.Language.Parsing.CommandGrammar.Command("AlterTableColumnStatistics",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.TableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("column"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("statistics"),Kusto.Language.Parsing.CommandGrammar.ZeroOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$7(rules.NameDeclaration,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD$1("c2",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD$1("statisticsValues2",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.None)],Kusto.Language.Syntax.CustomElementDescriptor))),AlterTableDocString=Kusto.Language.Parsing.CommandGrammar.Command("AlterTableDocString",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.TableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("docstring"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Documentation",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),AlterExtentTagsFromQuery2=Kusto.Language.Parsing.CommandGrammar.Command("AlterExtentTagsFromQuery",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.TableNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("extent"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("tags"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape51),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment5),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,fragment6,missing1)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),shape160)),AlterTableFolder=Kusto.Language.Parsing.CommandGrammar.Command("AlterTableFolder",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.TableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("folder"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Folder",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),AlterTableIngestionMapping=Kusto.Language.Parsing.CommandGrammar.Command("AlterTableIngestionMapping",Kusto.Language.Parsing.CommandGrammar.Custom(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.TableNameReference,Kusto.Language.Parsing.CommandGrammar.RequiredToken("ingestion"),Kusto.Language.Parsing.CommandGrammar.RequiredToken$1(["avro","csv","json","orc","parquet","w3clogfile"]),Kusto.Language.Parsing.CommandGrammar.RequiredToken("mapping"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),shape161)),AlterTablePolicyMirroringWithJson=Kusto.Language.Parsing.CommandGrammar.Command("AlterTablePolicyMirroringWithJson",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.RequiredToken("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.DatabaseNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("policy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("mirroring"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape163)),AppendTable=Kusto.Language.Parsing.CommandGrammar.Command("AppendTable",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("append",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("async")),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("async")),rules.TableNameReference),rules.MissingNameReference),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment45),Kusto.Language.Parsing.CommandGrammar.RequiredToken("<|"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.QueryInput,rules.MissingExpression),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("QueryOrCommand",Kusto.Language.Editor.CompletionHint.Tabular)],Kusto.Language.Syntax.CustomElementDescriptor))),ApplyTableMirroringPolicyTemplateToTables=Kusto.Language.Parsing.CommandGrammar.Command("ApplyTableMirroringPolicyTemplateToTables",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("apply",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.RequiredToken("table_mirroring_template"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token$1("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.TableNameReference,shape29),rules.MissingNameReference,!1),missing32),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor)),Kusto.Language.Parsing.CommandGrammar.Custom$8(fragment6,shape45)]),missing36),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TemplateName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),AttachExtentsIntoTableByMetadata=Kusto.Language.Parsing.CommandGrammar.Command("AttachExtentsIntoTableByMetadata",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("attach",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("async"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("extents"),Kusto.Language.Parsing.CommandGrammar.ZeroOrMoreList(fragment32),Kusto.Language.Parsing.CommandGrammar.RequiredToken("by"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("metadata"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,fragment6,missing1),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("csl")],Kusto.Language.Syntax.CustomElementDescriptor))),AttachDatabase=Kusto.Language.Parsing.CommandGrammar.Command("AttachDatabase",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("attach",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.RequiredToken("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$2(["all","metadata"])).Hide$1(),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["all","metadata"])])),rules.DatabaseNameReference),rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("from"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment33),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Path",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),AttachExtentsIntoTableByMetadata2=Kusto.Language.Parsing.CommandGrammar.Command("AttachExtentsIntoTableByMetadata",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("attach",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("by"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("metadata"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,fragment6,missing1),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("csl")],Kusto.Language.Syntax.CustomElementDescriptor))),AttachExtentsIntoTableByContainer=Kusto.Language.Parsing.CommandGrammar.Command("AttachExtentsIntoTableByContainer",Kusto.Language.Parsing.CommandGrammar.Custom(Kusto.Language.Parsing.CommandGrammar.Token("attach",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.CommandGrammar.Token$1("into"),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.TableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("by"),Kusto.Language.Parsing.CommandGrammar.Token$1("container"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.AnyGuidLiteralOrString,shape303)),missing37),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("tableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("containerUri",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),AttachExtentsIntoTableByMetadata3=Kusto.Language.Parsing.CommandGrammar.Command("AttachExtentsIntoTableByMetadata",Kusto.Language.Parsing.CommandGrammar.Custom(Kusto.Language.Parsing.CommandGrammar.Token("attach",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("into"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.TableNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.ZeroOrMoreList(fragment32),Kusto.Language.Parsing.CommandGrammar.RequiredToken("by"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("metadata"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,fragment6,missing1),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("tableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("csl")],Kusto.Language.Syntax.CustomElementDescriptor))),AttachDatabase2=Kusto.Language.Parsing.CommandGrammar.Command("AttachDatabase",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("attach",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.RequiredToken("from"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment33),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Path",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),CancelOperation=Kusto.Language.Parsing.CommandGrammar.Command("CancelOperation",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("cancel",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("operation"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.AnyGuidLiteralOrString,rules.MissingValue),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("obj",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),CancelQuery=Kusto.Language.Parsing.CommandGrammar.Command("CancelQuery",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("cancel",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.RequiredToken("query"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("ClientRequestId",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),CleanDatabaseExtentContainers=Kusto.Language.Parsing.CommandGrammar.Command("CleanDatabaseExtentContainers",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("clean",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.RequiredToken("databases"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("async")),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment66),Kusto.Language.Parsing.CommandGrammar.RequiredToken("extentcontainers"),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),ClearTableData=Kusto.Language.Parsing.CommandGrammar.Command("ClearTableData",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("clear",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.RequiredToken("async"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.TableNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("data"),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),ClearRemoteClusterDatabaseSchema=Kusto.Language.Parsing.CommandGrammar.Command("ClearRemoteClusterDatabaseSchema",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("clear",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cache"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("remote-schema"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("cluster"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("."),Kusto.Language.Parsing.CommandGrammar.RequiredToken("database"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")")],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("clusterName",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("databaseName",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),ClearClusterCredStoreCache=Kusto.Language.Parsing.CommandGrammar.Command("ClearClusterCredStoreCache",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("clear",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("cache"),Kusto.Language.Parsing.CommandGrammar.Token$1("credstore"))),ClearExternalArtifactsCache=Kusto.Language.Parsing.CommandGrammar.Command("ClearExternalArtifactsCache",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("clear",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("cache"),Kusto.Language.Parsing.CommandGrammar.Token$1("external-artifacts"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token$1("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,Kusto.Language.Parsing.CommandGrammar.CD$1("ArtifactUri",Kusto.Language.Editor.CompletionHint.Literal)),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),shape38),missing2))),ClearClusterGroupMembershipCache=Kusto.Language.Parsing.CommandGrammar.Command("ClearClusterGroupMembershipCache",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("clear",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("cache"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("groupmembership"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment5),shape252)),ClearDatabaseCacheQueryResults=Kusto.Language.Parsing.CommandGrammar.Command("ClearDatabaseCacheQueryResults",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("clear",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("cache"),Kusto.Language.Parsing.CommandGrammar.Token$1("query_results"))),ClearDatabaseCacheQueryWeakConsistency=Kusto.Language.Parsing.CommandGrammar.Command("ClearDatabaseCacheQueryWeakConsistency",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("clear",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("cache"),Kusto.Language.Parsing.CommandGrammar.Token$1("query_weak_consistency"))),ClearDatabaseCacheStreamingIngestionSchema=Kusto.Language.Parsing.CommandGrammar.Command("ClearDatabaseCacheStreamingIngestionSchema",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("clear",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("cache"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("streamingingestion"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("schema"))),ClearMaterializedViewData=Kusto.Language.Parsing.CommandGrammar.Command("ClearMaterializedViewData",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("clear",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),rules.MaterializedViewNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("data"),shape294)),ClearMaterializedViewStatistics=Kusto.Language.Parsing.CommandGrammar.Command("ClearMaterializedViewStatistics",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("clear",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.MaterializedViewNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("statistics"),shape296)),ClearTableCacheStreamingIngestionSchema=Kusto.Language.Parsing.CommandGrammar.Command("ClearTableCacheStreamingIngestionSchema",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("clear",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.TableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("cache"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("streamingingestion"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("schema"),shape135)),ClearTableData2=Kusto.Language.Parsing.CommandGrammar.Command("ClearTableData",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("clear",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.RequiredToken("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.TableNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("data"),shape228)),CreateMergeTables=Kusto.Language.Parsing.CommandGrammar.Command("CreateMergeTables",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("create-merge",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("tables"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(fragment37),missing38),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),shape190)),CreateMergeTable=Kusto.Language.Parsing.CommandGrammar.Command("CreateMergeTable",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("create-merge",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.RequiredToken("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,fragment29,missing34),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment30),shape191)),CreateOrAlterContinuousExport=Kusto.Language.Parsing.CommandGrammar.Command("CreateOrAlterContinuousExport",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("create-or-alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("continuous-export"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token$1("over"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.NameDeclaration,shape170),rules.MissingNameDeclaration,!1),missing28),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),shape19)),Kusto.Language.Parsing.CommandGrammar.RequiredToken("to"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.ExternalTableNameReference,rules.MissingNameReference),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),Kusto.Language.Parsing.CommandGrammar.RequiredToken("<|"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.QueryInput,rules.MissingExpression)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("ContinuousExportName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("ExternalTableName",Kusto.Language.Editor.CompletionHint.ExternalTable),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Query",Kusto.Language.Editor.CompletionHint.Tabular)],Kusto.Language.Syntax.CustomElementDescriptor))),CreateOrAlterDatabaseIngestionMapping=Kusto.Language.Parsing.CommandGrammar.Command("CreateOrAlterDatabaseIngestionMapping",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("create-or-alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),Kusto.Language.Parsing.CommandGrammar.RequiredToken("ingestion"),Kusto.Language.Parsing.CommandGrammar.RequiredToken$1(["avro","csv","json","orc","parquet","w3clogfile"]),Kusto.Language.Parsing.CommandGrammar.RequiredToken("mapping"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape183)),CreateOrAlterEntityGroupCommand=Kusto.Language.Parsing.CommandGrammar.Command("CreateOrAlterEntityGroupCommand",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("create-or-alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("entity_group"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[fragment10,fragment11])),missing5),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("EntityGroupName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),CreateOrAlterStorageExternalTable=Kusto.Language.Parsing.CommandGrammar.Command("CreateOrAlterStorageExternalTable",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("create-or-alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("external"),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.NameDeclaration,Kusto.Language.Parsing.CommandGrammar.Token$1("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(fragment12),missing12),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("kind"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.CommandGrammar.RequiredToken("adl").Hide$1(),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment19),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment20),Kusto.Language.Parsing.CommandGrammar.RequiredToken("dataformat"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.CommandGrammar.RequiredToken$1(["apacheavro","avro","csv","json","multijson","orc","parquet","psv","raw","scsv","sohsv","sstream","tsve","tsv","txt","w3clogfile"]),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape37),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment4)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),shape101)),CreateOrAlterStorageExternalTable2=Kusto.Language.Parsing.CommandGrammar.Command("CreateOrAlterStorageExternalTable",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("create-or-alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("external"),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.NameDeclaration,Kusto.Language.Parsing.CommandGrammar.Token$1("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(fragment12),missing12),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("kind"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.CommandGrammar.RequiredToken("blob").Hide$1(),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment19),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment20),Kusto.Language.Parsing.CommandGrammar.RequiredToken("dataformat"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.CommandGrammar.RequiredToken$1(["apacheavro","avro","csv","json","multijson","orc","parquet","psv","raw","scsv","sohsv","sstream","tsve","tsv","txt","w3clogfile"]),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape37),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment4)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),shape101)),CreateOrAlterStorageExternalTable3=Kusto.Language.Parsing.CommandGrammar.Command("CreateOrAlterStorageExternalTable",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("create-or-alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("external"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(fragment12),missing12),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("kind"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.CommandGrammar.RequiredToken("delta"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment4)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),shape173)),CreateOrAlterSqlExternalTable=Kusto.Language.Parsing.CommandGrammar.Command("CreateOrAlterSqlExternalTable",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("create-or-alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("external"),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.NameDeclaration,Kusto.Language.Parsing.CommandGrammar.Token$1("("),Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(fragment12),Kusto.Language.Parsing.CommandGrammar.Token$1(")"),Kusto.Language.Parsing.CommandGrammar.Token$1("kind"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.CommandGrammar.RequiredToken("sql"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment34),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment4)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),shape175)),CreateOrAlterStorageExternalTable4=Kusto.Language.Parsing.CommandGrammar.Command("CreateOrAlterStorageExternalTable",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("create-or-alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("external"),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.NameDeclaration,Kusto.Language.Parsing.CommandGrammar.Token$1("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(fragment12),missing12),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("kind"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.CommandGrammar.RequiredToken("storage"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment19),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment20),Kusto.Language.Parsing.CommandGrammar.RequiredToken("dataformat"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.CommandGrammar.RequiredToken$1(["apacheavro","avro","csv","json","multijson","orc","parquet","psv","raw","scsv","sohsv","sstream","tsve","tsv","txt","w3clogfile"]),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape37),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment4)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),shape101)),CreateOrAlterStorageExternalTable5=Kusto.Language.Parsing.CommandGrammar.Command("CreateOrAlterStorageExternalTable",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("create-or-alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("external"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),Kusto.Language.Parsing.CommandGrammar.RequiredToken("kind"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.CommandGrammar.RequiredToken("delta"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment4)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),shape176)),CreateOrAlterFunction=Kusto.Language.Parsing.CommandGrammar.Command("CreateOrAlterFunction",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("create-or-alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("function"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment4),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("with")),rules.NameDeclaration),rules.MissingNameDeclaration),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.FunctionDeclaration,rules.MissingFunctionDeclaration),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD$1("FunctionName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),CreateOrAlterMaterializedViewOverMaterializedView=Kusto.Language.Parsing.CommandGrammar.Command("CreateOrAlterMaterializedViewOverMaterializedView",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("create-or-alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment35),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("with")),rules.MaterializedViewNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("on"),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.MaterializedViewNameReference,rules.MissingNameReference),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.FunctionBody,rules.MissingFunctionBody),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD$1("MaterializedViewName",Kusto.Language.Editor.CompletionHint.MaterializedView),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.MaterializedView),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),CreateOrAlterMaterializedView=Kusto.Language.Parsing.CommandGrammar.Command("CreateOrAlterMaterializedView",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("create-or-alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment35),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("with")),rules.MaterializedViewNameReference),rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("on"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.TableNameReference,rules.MissingNameReference),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.FunctionBody,rules.MissingFunctionBody),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD$1("MaterializedViewName",Kusto.Language.Editor.CompletionHint.MaterializedView),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),CreateOrAlterTableIngestionMapping=Kusto.Language.Parsing.CommandGrammar.Command("CreateOrAlterTableIngestionMapping",Kusto.Language.Parsing.CommandGrammar.Custom(Kusto.Language.Parsing.CommandGrammar.Token("create-or-alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.TableNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("ingestion"),Kusto.Language.Parsing.CommandGrammar.RequiredToken$1(["avro","csv","json","orc","parquet","w3clogfile"]),Kusto.Language.Parsing.CommandGrammar.RequiredToken("mapping"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),shape161)),CreateOrAleterWorkloadGroup=Kusto.Language.Parsing.CommandGrammar.Command("CreateOrAleterWorkloadGroup",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("create-or-alter",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.RequiredToken("workload_group"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape179)),CreateMaterializedViewOverMaterializedView=Kusto.Language.Parsing.CommandGrammar.Command("CreateMaterializedViewOverMaterializedView",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("create",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("async"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("ifnotexists")),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment35),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("with")),rules.NameDeclaration),Kusto.Language.Parsing.CommandGrammar.Token$1("on"),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.MaterializedViewNameReference,rules.MissingNameReference),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.FunctionBody,rules.MissingFunctionBody)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD$1("MaterializedViewName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.MaterializedView),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),CreateMaterializedView=Kusto.Language.Parsing.CommandGrammar.Command("CreateMaterializedView",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("create",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("async"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("ifnotexists")),Kusto.Language.Parsing.CommandGrammar.RequiredToken("materialized-view"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment35),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("with")),rules.NameDeclaration),rules.MissingNameDeclaration),Kusto.Language.Parsing.CommandGrammar.RequiredToken("on"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.TableNameReference,rules.MissingNameReference),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.FunctionBody,rules.MissingFunctionBody)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD$1("MaterializedViewName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),CreateBasicAuthUser=Kusto.Language.Parsing.CommandGrammar.Command("CreateBasicAuthUser",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("create",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("basicauth"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("user"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token$1("password"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Password",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("UserName",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),CreateDatabase=Kusto.Language.Parsing.CommandGrammar.Command("CreateDatabase",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("create",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),Kusto.Language.Parsing.CommandGrammar.RequiredToken("ifnotexists"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD$1("IfNotExists"),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),CreateDatabaseIngestionMapping=Kusto.Language.Parsing.CommandGrammar.Command("CreateDatabaseIngestionMapping",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("create",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.NameDeclaration,Kusto.Language.Parsing.CommandGrammar.Token$1("ingestion"),Kusto.Language.Parsing.CommandGrammar.RequiredToken$1(["avro","csv","json","orc","parquet","w3clogfile"]),Kusto.Language.Parsing.CommandGrammar.RequiredToken("mapping"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape183)),CreateDatabase2=Kusto.Language.Parsing.CommandGrammar.Command("CreateDatabase",Kusto.Language.Parsing.CommandGrammar.Custom(Kusto.Language.Parsing.CommandGrammar.Token("create",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),Kusto.Language.Parsing.CommandGrammar.RequiredToken("persist"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape165),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("ifnotexists"),shape184)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),CreateDatabase3=Kusto.Language.Parsing.CommandGrammar.Command("CreateDatabase",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("create",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),Kusto.Language.Parsing.CommandGrammar.RequiredToken("volatile"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("ifnotexists"),shape184)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),CreateDatabase4=Kusto.Language.Parsing.CommandGrammar.Command("CreateDatabase",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("create",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),Kusto.Language.Parsing.CommandGrammar.RequiredToken("with"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(fragment36),missing11),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),CreateDatabase5=Kusto.Language.Parsing.CommandGrammar.Command("CreateDatabase",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("create",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.None)],Kusto.Language.Syntax.CustomElementDescriptor))),CreateEntityGroupCommand=Kusto.Language.Parsing.CommandGrammar.Command("CreateEntityGroupCommand",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("create",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("entity_group"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("ifnotexists")),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[Kusto.Language.Parsing.CommandGrammar.Custom(Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),rules.StringLiteral,Kusto.Language.Parsing.CommandGrammar.Token$1(")"),Kusto.Language.Parsing.CommandGrammar.Token$1("."),Kusto.Language.Parsing.CommandGrammar.RequiredToken("database"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),shape80),Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("clusterName",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor)),fragment11])),missing5),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("EntityGroupName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),CreateStorageExternalTable=Kusto.Language.Parsing.CommandGrammar.Command("CreateStorageExternalTable",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("create",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("external"),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.NameDeclaration,Kusto.Language.Parsing.CommandGrammar.Token$1("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(fragment12),missing12),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("kind"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.CommandGrammar.RequiredToken("adl").Hide$1(),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment19),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment20),Kusto.Language.Parsing.CommandGrammar.RequiredToken("dataformat"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.CommandGrammar.RequiredToken$1(["apacheavro","avro","csv","json","multijson","orc","parquet","psv","raw","scsv","sohsv","sstream","tsve","tsv","txt","w3clogfile"]),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape37),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment4)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),shape101)),CreateStorageExternalTable2=Kusto.Language.Parsing.CommandGrammar.Command("CreateStorageExternalTable",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("create",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("external"),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.NameDeclaration,Kusto.Language.Parsing.CommandGrammar.Token$1("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(fragment12),missing12),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("kind"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.CommandGrammar.RequiredToken("blob").Hide$1(),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment19),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment20),Kusto.Language.Parsing.CommandGrammar.RequiredToken("dataformat"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.CommandGrammar.RequiredToken$1(["apacheavro","avro","csv","json","multijson","orc","parquet","psv","raw","scsv","sohsv","sstream","tsve","tsv","txt","w3clogfile"]),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape37),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment4)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),shape101)),CreateStorageExternalTable3=Kusto.Language.Parsing.CommandGrammar.Command("CreateStorageExternalTable",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("create",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("external"),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.NameDeclaration,Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(fragment12),missing12),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("kind"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.CommandGrammar.RequiredToken("delta"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment4)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),shape173)),CreateSqlExternalTable=Kusto.Language.Parsing.CommandGrammar.Command("CreateSqlExternalTable",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("create",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("external"),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.NameDeclaration,Kusto.Language.Parsing.CommandGrammar.Token$1("("),Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(fragment12),Kusto.Language.Parsing.CommandGrammar.Token$1(")"),Kusto.Language.Parsing.CommandGrammar.Token$1("kind"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.CommandGrammar.RequiredToken("sql"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment34),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment4)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),shape175)),CreateStorageExternalTable4=Kusto.Language.Parsing.CommandGrammar.Command("CreateStorageExternalTable",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("create",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("external"),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.NameDeclaration,Kusto.Language.Parsing.CommandGrammar.Token$1("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(fragment12),missing12),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("kind"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.CommandGrammar.RequiredToken("storage"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment19),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment20),Kusto.Language.Parsing.CommandGrammar.RequiredToken("dataformat"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.CommandGrammar.RequiredToken$1(["apacheavro","avro","csv","json","multijson","orc","parquet","psv","raw","scsv","sohsv","sstream","tsve","tsv","txt","w3clogfile"]),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape37),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment4)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),shape101)),CreateStorageExternalTable5=Kusto.Language.Parsing.CommandGrammar.Command("CreateStorageExternalTable",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("create",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("external"),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.NameDeclaration,Kusto.Language.Parsing.CommandGrammar.RequiredToken("kind"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.CommandGrammar.RequiredToken("delta"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment4)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),shape176)),CreateExternalTableMapping=Kusto.Language.Parsing.CommandGrammar.Command("CreateExternalTableMapping",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("create",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("external"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.ExternalTableNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("mapping"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape186)),CreateFunction=Kusto.Language.Parsing.CommandGrammar.Command("CreateFunction",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("create",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("function"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("ifnotexists")),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment5),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["ifnotexists","with"])])),rules.NameDeclaration),rules.MissingNameDeclaration),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.FunctionDeclaration,rules.MissingFunctionDeclaration),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD$1("FunctionName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),CreateMaterializedViewOverMaterializedView2=Kusto.Language.Parsing.CommandGrammar.Command("CreateMaterializedViewOverMaterializedView",Kusto.Language.Parsing.CommandGrammar.Custom(Kusto.Language.Parsing.CommandGrammar.Token("create",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("ifnotexists"),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment35),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("with")),rules.NameDeclaration),Kusto.Language.Parsing.CommandGrammar.Token$1("on"),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.MaterializedViewNameReference,rules.MissingNameReference),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.FunctionBody,rules.MissingFunctionBody),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD$1("MaterializedViewName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.MaterializedView),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),CreateMaterializedView2=Kusto.Language.Parsing.CommandGrammar.Command("CreateMaterializedView",Kusto.Language.Parsing.CommandGrammar.Custom(Kusto.Language.Parsing.CommandGrammar.Token("create",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("ifnotexists"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("materialized-view"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment35),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("with")),rules.NameDeclaration),rules.MissingNameDeclaration),Kusto.Language.Parsing.CommandGrammar.RequiredToken("on"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.TableNameReference,rules.MissingNameReference),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.FunctionBody,rules.MissingFunctionBody),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD$1("MaterializedViewName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),CreateMaterializedViewOverMaterializedView3=Kusto.Language.Parsing.CommandGrammar.Command("CreateMaterializedViewOverMaterializedView",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("create",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment35),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("with")),rules.NameDeclaration),Kusto.Language.Parsing.CommandGrammar.Token$1("on"),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.MaterializedViewNameReference,rules.MissingNameReference),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.FunctionBody,rules.MissingFunctionBody),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD$1("MaterializedViewName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.MaterializedView),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),CreateMaterializedView3=Kusto.Language.Parsing.CommandGrammar.Command("CreateMaterializedView",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("create",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment35),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("with")),rules.NameDeclaration),rules.MissingNameDeclaration),Kusto.Language.Parsing.CommandGrammar.RequiredToken("on"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.TableNameReference,rules.MissingNameReference),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.FunctionBody,rules.MissingFunctionBody),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD$1("MaterializedViewName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),CreateRequestSupport=Kusto.Language.Parsing.CommandGrammar.Command("CreateRequestSupport",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("create",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("request_support"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),shape188)),CreateRowStore=Kusto.Language.Parsing.CommandGrammar.Command("CreateRowStore",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("create",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("rowstore"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),shape188)),CreateTables=Kusto.Language.Parsing.CommandGrammar.Command("CreateTables",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("create",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("tables"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(fragment37),missing38),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),shape190)),CreateTable=Kusto.Language.Parsing.CommandGrammar.Command("CreateTable",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("create",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.NameDeclaration,fragment29,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment30),shape191)),CreateTableBasedOnAnother=Kusto.Language.Parsing.CommandGrammar.Command("CreateTableBasedOnAnother",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("create",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.NameDeclaration,Kusto.Language.Parsing.CommandGrammar.Token$1("based-on"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("ifnotexists")),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment30),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("NewTableName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),CreateTableIngestionMapping=Kusto.Language.Parsing.CommandGrammar.Command("CreateTableIngestionMapping",Kusto.Language.Parsing.CommandGrammar.Custom(Kusto.Language.Parsing.CommandGrammar.Token("create",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),Kusto.Language.Parsing.CommandGrammar.RequiredToken("ingestion"),Kusto.Language.Parsing.CommandGrammar.RequiredToken$1(["avro","csv","json","orc","parquet","w3clogfile"]),Kusto.Language.Parsing.CommandGrammar.RequiredToken("mapping"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("MappingKind"),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("MappingName",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD$1("MappingFormat",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),CreateTempStorage=Kusto.Language.Parsing.CommandGrammar.Command("CreateTempStorage",Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token("create",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.RequiredToken("tempstorage"))),DefineTables=Kusto.Language.Parsing.CommandGrammar.Command("DefineTables",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("define",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("tables"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(fragment37),missing38),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),shape190)),DefineTable=Kusto.Language.Parsing.CommandGrammar.Command("DefineTable",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("define",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.RequiredToken("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,fragment29,missing34),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment30),shape191)),DeleteMaterializedViewRecords=Kusto.Language.Parsing.CommandGrammar.Command("DeleteMaterializedViewRecords",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("delete",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("async"),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.MaterializedViewNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("records"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,fragment6,missing1),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("MaterializedViewName",Kusto.Language.Editor.CompletionHint.MaterializedView),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD$1("csl")],Kusto.Language.Syntax.CustomElementDescriptor))),DeleteTableRecords=Kusto.Language.Parsing.CommandGrammar.Command("DeleteTableRecords",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("delete",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.RequiredToken("async"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.TableNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("records"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,fragment6,missing1),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD$1("csl")],Kusto.Language.Syntax.CustomElementDescriptor))),DeleteClusterPolicyCaching=Kusto.Language.Parsing.CommandGrammar.Command("DeleteClusterPolicyCaching",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("delete",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("caching"))),DeleteClusterPolicyCallout=Kusto.Language.Parsing.CommandGrammar.Command("DeleteClusterPolicyCallout",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("delete",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("callout"))),DeleteClusterPolicyManagedIdentity=Kusto.Language.Parsing.CommandGrammar.Command("DeleteClusterPolicyManagedIdentity",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("delete",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("managed_identity"))),DeleteClusterPolicyRequestClassification=Kusto.Language.Parsing.CommandGrammar.Command("DeleteClusterPolicyRequestClassification",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("delete",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("request_classification"))),DeleteClusterPolicyRowStore=Kusto.Language.Parsing.CommandGrammar.Command("DeleteClusterPolicyRowStore",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("delete",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("rowstore"))),DeleteClusterPolicySandbox=Kusto.Language.Parsing.CommandGrammar.Command("DeleteClusterPolicySandbox",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("delete",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("sandbox"))),DeleteClusterPolicySharding=Kusto.Language.Parsing.CommandGrammar.Command("DeleteClusterPolicySharding",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("delete",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("sharding"))),DeleteClusterPolicyStreamingIngestion=Kusto.Language.Parsing.CommandGrammar.Command("DeleteClusterPolicyStreamingIngestion",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("delete",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("policy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("streamingingestion"))),DeleteColumnPolicyCaching=Kusto.Language.Parsing.CommandGrammar.Command("DeleteColumnPolicyCaching",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("delete",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("column"),rules.DatabaseTableColumnNameReference,Kusto.Language.Parsing.CommandGrammar.RequiredToken("policy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("caching"),shape192)),DeleteColumnPolicyEncoding=Kusto.Language.Parsing.CommandGrammar.Command("DeleteColumnPolicyEncoding",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("delete",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("column"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.TableColumnNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("policy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("encoding"),shape192)),DeleteDatabasePolicyCaching=Kusto.Language.Parsing.CommandGrammar.Command("DeleteDatabasePolicyCaching",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("delete",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("caching"),shape193)),DeleteDatabasePolicyDiagnostics=Kusto.Language.Parsing.CommandGrammar.Command("DeleteDatabasePolicyDiagnostics",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("delete",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("diagnostics"),shape193)),DeleteDatabasePolicyEncoding=Kusto.Language.Parsing.CommandGrammar.Command("DeleteDatabasePolicyEncoding",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("delete",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("encoding"),shape193)),DeleteDatabasePolicyExtentTagsRetention=Kusto.Language.Parsing.CommandGrammar.Command("DeleteDatabasePolicyExtentTagsRetention",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("delete",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("extent_tags_retention"),shape193)),DeleteDatabasePolicyIngestionBatching=Kusto.Language.Parsing.CommandGrammar.Command("DeleteDatabasePolicyIngestionBatching",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("delete",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("ingestionbatching"),shape193)),DeleteDatabasePolicyManagedIdentity=Kusto.Language.Parsing.CommandGrammar.Command("DeleteDatabasePolicyManagedIdentity",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("delete",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("managed_identity"),shape193)),DeleteDatabasePolicyMerge=Kusto.Language.Parsing.CommandGrammar.Command("DeleteDatabasePolicyMerge",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("delete",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("merge"),shape193)),DeleteDatabasePolicyMirroring=Kusto.Language.Parsing.CommandGrammar.Command("DeleteDatabasePolicyMirroring",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("delete",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("mirroring"),shape193)),DeleteDatabasePolicyRetention=Kusto.Language.Parsing.CommandGrammar.Command("DeleteDatabasePolicyRetention",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("delete",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("retention"),shape193)),DeleteDatabasePolicySharding=Kusto.Language.Parsing.CommandGrammar.Command("DeleteDatabasePolicySharding",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("delete",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("sharding"),shape193)),DeleteDatabasePolicyShardsGrouping=Kusto.Language.Parsing.CommandGrammar.Command("DeleteDatabasePolicyShardsGrouping",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("delete",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("shards_grouping").Hide$1(),shape193)),DeleteDatabasePolicyStreamingIngestion=Kusto.Language.Parsing.CommandGrammar.Command("DeleteDatabasePolicyStreamingIngestion",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("delete",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("streamingingestion"),shape193)),DropDatabaseTableMirroringPolicyTemplates=Kusto.Language.Parsing.CommandGrammar.Command("DropDatabaseTableMirroringPolicyTemplates",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("delete",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.DatabaseNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("policy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("table_mirroring_templates"),shape193)),DropFollowerTablesPolicyCaching=Kusto.Language.Parsing.CommandGrammar.Command("DropFollowerTablesPolicyCaching",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("delete",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("follower"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.DatabaseNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("materialized-views"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.NameDeclaration,shape125),rules.MissingNameDeclaration,!1),missing28),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("policy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("caching")],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),shape195)),DropFollowerTablesPolicyCaching2=Kusto.Language.Parsing.CommandGrammar.Command("DropFollowerTablesPolicyCaching",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("delete",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("follower"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.DatabaseNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("materialized-view"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.MaterializedViewNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("policy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("caching"),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("dbName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("name",Kusto.Language.Editor.CompletionHint.MaterializedView),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),DropFollowerDatabasePolicyCaching=Kusto.Language.Parsing.CommandGrammar.Command("DropFollowerDatabasePolicyCaching",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("delete",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("follower"),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("caching"),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("dbName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),DropFollowerTablesPolicyCaching3=Kusto.Language.Parsing.CommandGrammar.Command("DropFollowerTablesPolicyCaching",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("delete",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("follower"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.DatabaseNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("tables"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.NameDeclaration,shape125),rules.MissingNameDeclaration,!1),missing28),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("policy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("caching")],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),shape195)),DropFollowerTablesPolicyCaching4=Kusto.Language.Parsing.CommandGrammar.Command("DropFollowerTablesPolicyCaching",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("delete",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("follower"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.DatabaseNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.TableNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("policy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("caching"),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("dbName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("name",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),DeleteMaterializedViewRecords2=Kusto.Language.Parsing.CommandGrammar.Command("DeleteMaterializedViewRecords",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("delete",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.MaterializedViewNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("records"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,fragment6,missing1),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("MaterializedViewName",Kusto.Language.Editor.CompletionHint.MaterializedView),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD$1("csl")],Kusto.Language.Syntax.CustomElementDescriptor))),DeleteMaterializedViewPolicyCaching=Kusto.Language.Parsing.CommandGrammar.Command("DeleteMaterializedViewPolicyCaching",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("delete",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),rules.DatabaseMaterializedViewNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("caching"),shape197)),DeleteMaterializedViewPolicyPartitioning=Kusto.Language.Parsing.CommandGrammar.Command("DeleteMaterializedViewPolicyPartitioning",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("delete",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),rules.DatabaseMaterializedViewNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("partitioning"),shape197)),DeleteMaterializedViewPolicyRowLevelSecurity=Kusto.Language.Parsing.CommandGrammar.Command("DeleteMaterializedViewPolicyRowLevelSecurity",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("delete",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.DatabaseMaterializedViewNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("policy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("row_level_security"),shape197)),DeletePoliciesOfRetention=Kusto.Language.Parsing.CommandGrammar.Command("DeletePoliciesOfRetention",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("delete",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("policies"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("of"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("retention"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,Kusto.Language.Parsing.CommandGrammar.CD$1("entity",Kusto.Language.Editor.CompletionHint.Literal)),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),DeleteTablePolicyAutoDelete=Kusto.Language.Parsing.CommandGrammar.Command("DeleteTablePolicyAutoDelete",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("delete",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.DatabaseTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("auto_delete"),shape198)),DeleteTablePolicyCaching=Kusto.Language.Parsing.CommandGrammar.Command("DeleteTablePolicyCaching",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("delete",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.DatabaseTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("caching"),shape198)),DeleteTablePolicyEncoding=Kusto.Language.Parsing.CommandGrammar.Command("DeleteTablePolicyEncoding",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("delete",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.DatabaseTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("encoding"),shape198)),DeleteTablePolicyExtentTagsRetention=Kusto.Language.Parsing.CommandGrammar.Command("DeleteTablePolicyExtentTagsRetention",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("delete",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.DatabaseTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("extent_tags_retention"),shape198)),DeleteTablePolicyIngestionBatching=Kusto.Language.Parsing.CommandGrammar.Command("DeleteTablePolicyIngestionBatching",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("delete",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.DatabaseTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("ingestionbatching"),shape198)),DeleteTablePolicyIngestionTime=Kusto.Language.Parsing.CommandGrammar.Command("DeleteTablePolicyIngestionTime",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("delete",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.DatabaseTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("ingestiontime"),shape198)),DeleteTablePolicyMerge=Kusto.Language.Parsing.CommandGrammar.Command("DeleteTablePolicyMerge",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("delete",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.DatabaseTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("merge"),shape198)),DeleteTablePolicyMirroring=Kusto.Language.Parsing.CommandGrammar.Command("DeleteTablePolicyMirroring",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("delete",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.DatabaseTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("mirroring"),shape198)),DeleteTablePolicyPartitioning=Kusto.Language.Parsing.CommandGrammar.Command("DeleteTablePolicyPartitioning",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("delete",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.DatabaseTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("partitioning"),shape198)),DeleteTablePolicyRestrictedViewAccess=Kusto.Language.Parsing.CommandGrammar.Command("DeleteTablePolicyRestrictedViewAccess",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("delete",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.DatabaseTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("restricted_view_access"),shape198)),DeleteTablePolicyRetention=Kusto.Language.Parsing.CommandGrammar.Command("DeleteTablePolicyRetention",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("delete",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.DatabaseTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("retention"),shape198)),DeleteTablePolicyRowLevelSecurity=Kusto.Language.Parsing.CommandGrammar.Command("DeleteTablePolicyRowLevelSecurity",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("delete",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.DatabaseTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("row_level_security"),shape198)),DeleteTablePolicyRowOrder=Kusto.Language.Parsing.CommandGrammar.Command("DeleteTablePolicyRowOrder",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("delete",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.DatabaseTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("roworder"),shape198)),DeleteTablePolicySharding=Kusto.Language.Parsing.CommandGrammar.Command("DeleteTablePolicySharding",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("delete",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.DatabaseTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("sharding"),shape198)),DeleteTablePolicyStreamingIngestion=Kusto.Language.Parsing.CommandGrammar.Command("DeleteTablePolicyStreamingIngestion",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("delete",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.DatabaseTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("streamingingestion"),shape198)),DeleteTablePolicyUpdate=Kusto.Language.Parsing.CommandGrammar.Command("DeleteTablePolicyUpdate",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("delete",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.DatabaseTableNameReference,Kusto.Language.Parsing.CommandGrammar.RequiredToken("policy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("update"),shape198)),DeleteTableRecords2=Kusto.Language.Parsing.CommandGrammar.Command("DeleteTableRecords",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("delete",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.RequiredToken("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.TableNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("records"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,fragment6,missing1),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD$1("csl")],Kusto.Language.Syntax.CustomElementDescriptor))),DetachDatabase=Kusto.Language.Parsing.CommandGrammar.Command("DetachDatabase",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("detach",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.DatabaseNameReference,rules.MissingNameReference),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("ifexists"),shape204)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("skip-seal"),shape206)),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),DropRowStore=Kusto.Language.Parsing.CommandGrammar.Command("DropRowStore",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("detach",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.RequiredToken("rowstore"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("ifexists")),shape225)),DisableContinuousExport=Kusto.Language.Parsing.CommandGrammar.Command("DisableContinuousExport",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("disable",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("continuous-export"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("ContinousExportName",Kusto.Language.Editor.CompletionHint.None)],Kusto.Language.Syntax.CustomElementDescriptor))),DisableDatabaseStreamingIngestionMaintenanceMode=Kusto.Language.Parsing.CommandGrammar.Command("DisableDatabaseStreamingIngestionMaintenanceMode",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("disable",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("streamingingestion_maintenance_mode"))),DisableDatabaseMaintenanceMode=Kusto.Language.Parsing.CommandGrammar.Command("DisableDatabaseMaintenanceMode",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("disable",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("streamingingestion_maintenance_mode")),rules.DatabaseNameReference),rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("maintenance_mode"),shape205)),EnableDisableMaterializedView=Kusto.Language.Parsing.CommandGrammar.Command("EnableDisableMaterializedView",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("disable",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.MaterializedViewNameReference,rules.MissingNameReference),shape224)),DisablePlugin=Kusto.Language.Parsing.CommandGrammar.Command("DisablePlugin",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("disable",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.RequiredToken("plugin"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[rules.StringLiteral,rules.NameDeclaration]),rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("pluginName",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),DropPretendExtentsByProperties=Kusto.Language.Parsing.CommandGrammar.Command("DropPretendExtentsByProperties",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("drop-pretend",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.RequiredToken("extents"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token$1("older"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.Value,rules.MissingValue),Kusto.Language.Parsing.CommandGrammar.RequiredToken$1(["days","hours"]),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Older",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),Kusto.Language.Parsing.CommandGrammar.RequiredToken("from"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[fragment40,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("all")),rules.TableNameReference),shape29)]),missing52),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment41),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment42),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),DropEmptyExtentContainers=Kusto.Language.Parsing.CommandGrammar.Command("DropEmptyExtentContainers",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("async"),Kusto.Language.Parsing.CommandGrammar.Token$1("empty"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("extentcontainers"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.DatabaseNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("until"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.Value,rules.MissingValue),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("whatif")),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("databaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("d",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),DropExtentTagsFromTable=Kusto.Language.Parsing.CommandGrammar.Command("DropExtentTagsFromTable",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("async"),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.TableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("extent"),Kusto.Language.Parsing.CommandGrammar.Token$1("tags"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape51),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment5)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("tableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),DropExtentTagsFromQuery=Kusto.Language.Parsing.CommandGrammar.Command("DropExtentTagsFromQuery",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("async"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.TableNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("extent"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("tags"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,fragment6,missing1),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("tableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("csl")],Kusto.Language.Syntax.CustomElementDescriptor))),DropExtentTagsFromQuery2=Kusto.Language.Parsing.CommandGrammar.Command("DropExtentTagsFromQuery",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("async"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.TableNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("extent"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("tags"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("with"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.CommandGrammar.ZeroOrMoreCommaList(fragment0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,fragment6,missing1)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("tableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("csl")],Kusto.Language.Syntax.CustomElementDescriptor))),DropBasicAuthUser=Kusto.Language.Parsing.CommandGrammar.Command("DropBasicAuthUser",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("basicauth"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("user"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("UserName",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),DropClusterRole=Kusto.Language.Parsing.CommandGrammar.Command("DropClusterRole",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("admins"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape2),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("skip-results"),shape3)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape4)),shape1)),DropClusterRole2=Kusto.Language.Parsing.CommandGrammar.Command("DropClusterRole",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("alldatabasesadmins"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape2),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("skip-results"),shape3)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape4)),shape1)),DropClusterRole3=Kusto.Language.Parsing.CommandGrammar.Command("DropClusterRole",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("alldatabasesmonitors"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape2),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("skip-results"),shape3)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape4)),shape1)),DropClusterRole4=Kusto.Language.Parsing.CommandGrammar.Command("DropClusterRole",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("alldatabasesviewers"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape2),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("skip-results"),shape3)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape4)),shape1)),DropClusterBlockedPrincipals=Kusto.Language.Parsing.CommandGrammar.Command("DropClusterBlockedPrincipals",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("blockedprincipals"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment38),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment39),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Principal",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),DropClusterRole5=Kusto.Language.Parsing.CommandGrammar.Command("DropClusterRole",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("databasecreators"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape2),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("skip-results"),shape3)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape4)),shape1)),DropClusterRole6=Kusto.Language.Parsing.CommandGrammar.Command("DropClusterRole",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("monitors"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape2),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("skip-results"),shape3)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape4)),shape1)),DropClusterRole7=Kusto.Language.Parsing.CommandGrammar.Command("DropClusterRole",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("ops"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape2),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("skip-results"),shape3)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape4)),shape1)),DropClusterRole8=Kusto.Language.Parsing.CommandGrammar.Command("DropClusterRole",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("users"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape2),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("skip-results"),shape3)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape4)),shape1)),DropClusterRole9=Kusto.Language.Parsing.CommandGrammar.Command("DropClusterRole",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("viewers"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape2),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("skip-results"),shape3)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape4)),shape1)),DropColumn=Kusto.Language.Parsing.CommandGrammar.Command("DropColumn",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("column"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.TableColumnNameReference,rules.MissingNameReference),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("ColumnName",Kusto.Language.Editor.CompletionHint.Column)],Kusto.Language.Syntax.CustomElementDescriptor))),DropContinuousExport=Kusto.Language.Parsing.CommandGrammar.Command("DropContinuousExport",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("continuous-export"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),shape229)),DropDatabaseRole=Kusto.Language.Parsing.CommandGrammar.Command("DropDatabaseRole",Kusto.Language.Parsing.CommandGrammar.Custom(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("admins"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape2),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("skip-results"),shape3)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape4)),shape203)),DetachDatabase2=Kusto.Language.Parsing.CommandGrammar.Command("DetachDatabase",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token$1("drop").Hide$1(),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.DatabaseNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("ifexists"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("skip-seal"),shape206)),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD$1("IfExists"),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),DropDatabaseIngestionMapping=Kusto.Language.Parsing.CommandGrammar.Command("DropDatabaseIngestionMapping",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("ingestion"),Kusto.Language.Parsing.CommandGrammar.RequiredToken$1(["avro","csv","json","orc","parquet","w3clogfile"]),Kusto.Language.Parsing.CommandGrammar.RequiredToken("mapping"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("MappingKind"),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("MappingName",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),DropDatabaseRole2=Kusto.Language.Parsing.CommandGrammar.Command("DropDatabaseRole",Kusto.Language.Parsing.CommandGrammar.Custom(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("ingestors"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape2),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("skip-results"),shape3)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape4)),shape203)),DropDatabaseRole3=Kusto.Language.Parsing.CommandGrammar.Command("DropDatabaseRole",Kusto.Language.Parsing.CommandGrammar.Custom(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("monitors"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape2),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("skip-results"),shape3)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape4)),shape203)),DropDatabasePrettyName=Kusto.Language.Parsing.CommandGrammar.Command("DropDatabasePrettyName",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("prettyname"),shape205)),DetachDatabase3=Kusto.Language.Parsing.CommandGrammar.Command("DetachDatabase",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token$1("drop").Hide$1(),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.DatabaseNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("skip-seal"),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD$1("SkipSeal")],Kusto.Language.Syntax.CustomElementDescriptor))),DropDatabaseRole4=Kusto.Language.Parsing.CommandGrammar.Command("DropDatabaseRole",Kusto.Language.Parsing.CommandGrammar.Custom(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("unrestrictedviewers"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape2),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("skip-results"),shape3)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape4)),shape203)),DropDatabaseRole5=Kusto.Language.Parsing.CommandGrammar.Command("DropDatabaseRole",Kusto.Language.Parsing.CommandGrammar.Custom(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("users"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape2),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("skip-results"),shape3)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape4)),shape203)),DropDatabaseRole6=Kusto.Language.Parsing.CommandGrammar.Command("DropDatabaseRole",Kusto.Language.Parsing.CommandGrammar.Custom(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("viewers"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape2),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("skip-results"),shape3)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape4)),shape203)),DetachDatabase4=Kusto.Language.Parsing.CommandGrammar.Command("DetachDatabase",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token$1("drop").Hide$1(),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.DatabaseNameReference,rules.MissingNameReference),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database)],Kusto.Language.Syntax.CustomElementDescriptor))),DropEmptyExtentContainers2=Kusto.Language.Parsing.CommandGrammar.Command("DropEmptyExtentContainers",Kusto.Language.Parsing.CommandGrammar.Custom(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("empty"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("extentcontainers"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.DatabaseNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("until"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.Value,rules.MissingValue),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("whatif")),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("databaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("d",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),DropEntityGroup=Kusto.Language.Parsing.CommandGrammar.Command("DropEntityGroup",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("entity_group"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.EntityGroupNameReference,rules.MissingNameReference),shape287)),DropExtents=Kusto.Language.Parsing.CommandGrammar.Command("DropExtents",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.AnyGuidLiteralOrString,shape213),rules.MissingValue,!1),missing53),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment43),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),DropExtents2=Kusto.Language.Parsing.CommandGrammar.Command("DropExtents",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("<|"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.QueryInput,rules.MissingExpression),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Query",Kusto.Language.Editor.CompletionHint.Tabular)],Kusto.Language.Syntax.CustomElementDescriptor))),DropExtents3=Kusto.Language.Parsing.CommandGrammar.Command("DropExtents",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("from"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[fragment40,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("all")),rules.TableNameReference),shape29)]),missing54),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment41),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment42),shape267)),DropExtents4=Kusto.Language.Parsing.CommandGrammar.Command("DropExtents",Kusto.Language.Parsing.CommandGrammar.Custom(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("older"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.Value,rules.MissingValue),Kusto.Language.Parsing.CommandGrammar.RequiredToken$1(["days","hours"]),Kusto.Language.Parsing.CommandGrammar.RequiredToken("from"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[fragment40,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("all")),rules.TableNameReference),shape29)]),missing55),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment41),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment42),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Older",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),DropExtentsPartitionMetadata=Kusto.Language.Parsing.CommandGrammar.Command("DropExtentsPartitionMetadata",Kusto.Language.Parsing.CommandGrammar.Custom(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.CommandGrammar.Token$1("partition"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("metadata"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("from"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.TableNameReference,rules.MissingNameReference),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token$1("between"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.Value,rules.MissingValue),Kusto.Language.Parsing.CommandGrammar.RequiredToken(".."),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.Value,rules.MissingValue),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("d1",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("d2",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,fragment6,missing1),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD$1("csl")],Kusto.Language.Syntax.CustomElementDescriptor))),DropExtents5=Kusto.Language.Parsing.CommandGrammar.Command("DropExtents",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("whatif"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("<|"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.QueryInput,rules.MissingExpression),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Query",Kusto.Language.Editor.CompletionHint.Tabular)],Kusto.Language.Syntax.CustomElementDescriptor))),DropExtentTagsRetention=Kusto.Language.Parsing.CommandGrammar.Command("DropExtentTagsRetention",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("extent"),Kusto.Language.Parsing.CommandGrammar.Token$1("tags"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("retention"))),DropExtent=Kusto.Language.Parsing.CommandGrammar.Command("DropExtent",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("extent"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.AnyGuidLiteralOrString,rules.MissingValue),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment43),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("ExtentId",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),DropExternalTableAdmins=Kusto.Language.Parsing.CommandGrammar.Command("DropExternalTableAdmins",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("external"),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.ExternalTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("admins"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape5),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("skip-results")),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape6))],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),shape216)),DropExternalTableMapping=Kusto.Language.Parsing.CommandGrammar.Command("DropExternalTableMapping",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("external"),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.ExternalTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("mapping"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape289)),DropExternalTable=Kusto.Language.Parsing.CommandGrammar.Command("DropExternalTable",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("external"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.ExternalTableNameReference,rules.MissingNameReference),shape290)),DropFabricServiceAssignmentsCommand=Kusto.Language.Parsing.CommandGrammar.Command("DropFabricServiceAssignmentsCommand",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("fabric"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("service"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.CommandGrammar.RequiredToken("assignments"),shape218)),DropFollowerDatabases=Kusto.Language.Parsing.CommandGrammar.Command("DropFollowerDatabases",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("follower"),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.DatabaseNameReference,shape77),rules.MissingNameReference,!1),missing32),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("from"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("leaderClusterMetadataPath",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),DropFollowerDatabases2=Kusto.Language.Parsing.CommandGrammar.Command("DropFollowerDatabases",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("follower"),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("from"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("databaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("leaderClusterMetadataPath",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),DropFollowerDatabaseAuthorizedPrincipals=Kusto.Language.Parsing.CommandGrammar.Command("DropFollowerDatabaseAuthorizedPrincipals",Kusto.Language.Parsing.CommandGrammar.Custom(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("follower"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.DatabaseNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken$1(["admins","monitors","unrestrictedviewers","users","viewers"]),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment22),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape5),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("dbName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD$1("operationRole"),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),DropFunctions=Kusto.Language.Parsing.CommandGrammar.Command("DropFunctions",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("functions"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.FunctionNameReference,shape127),rules.MissingNameReference,!1),missing32),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("ifexists")),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Function),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),DropFunctionRole=Kusto.Language.Parsing.CommandGrammar.Command("DropFunctionRole",Kusto.Language.Parsing.CommandGrammar.Custom(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("function"),rules.FunctionNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("admins"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape2),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("skip-results"),shape3)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape4)),shape220)),DropFunction=Kusto.Language.Parsing.CommandGrammar.Command("DropFunction",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("function"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.FunctionNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("ifexists"),shape221)),DropFunction2=Kusto.Language.Parsing.CommandGrammar.Command("DropFunction",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("function"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.FunctionNameReference,rules.MissingNameReference),shape292)),DropMaterializedViewAdmins=Kusto.Language.Parsing.CommandGrammar.Command("DropMaterializedViewAdmins",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),rules.MaterializedViewNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("admins"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape5),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape6)),shape223)),DropMaterializedView=Kusto.Language.Parsing.CommandGrammar.Command("DropMaterializedView",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.MaterializedViewNameReference,rules.MissingNameReference),shape224)),DropRowStore2=Kusto.Language.Parsing.CommandGrammar.Command("DropRowStore",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("rowstore"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("ifexists")),shape225)),StoredQueryResultsDrop=Kusto.Language.Parsing.CommandGrammar.Command("StoredQueryResultsDrop",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("stored_query_results"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("by"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("user"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Principal",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),StoredQueryResultDrop=Kusto.Language.Parsing.CommandGrammar.Command("StoredQueryResultDrop",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("stored_query_result"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("StoredQueryResultName",Kusto.Language.Editor.CompletionHint.None)],Kusto.Language.Syntax.CustomElementDescriptor))),DropStoredQueryResultContainers=Kusto.Language.Parsing.CommandGrammar.Command("DropStoredQueryResultContainers",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("storedqueryresultcontainers"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.DatabaseNameReference,rules.MissingNameReference),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.AnyGuidLiteralOrString,shape226)),missing37),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),DropTables=Kusto.Language.Parsing.CommandGrammar.Command("DropTables",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("tables"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.TableNameReference,shape29),rules.MissingNameReference,!1),missing32),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("ifexists")),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),DropTableRole=Kusto.Language.Parsing.CommandGrammar.Command("DropTableRole",Kusto.Language.Parsing.CommandGrammar.Custom(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.TableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("admins"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape2),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("skip-results"),shape3)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape4)),shape227)),DropTableColumns=Kusto.Language.Parsing.CommandGrammar.Command("DropTableColumns",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.TableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("columns"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.ColumnNameReference,shape39),rules.MissingNameReference,!1),missing32),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),shape159)),DropExtentTagsFromTable2=Kusto.Language.Parsing.CommandGrammar.Command("DropExtentTagsFromTable",Kusto.Language.Parsing.CommandGrammar.Custom(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.TableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("extent"),Kusto.Language.Parsing.CommandGrammar.Token$1("tags"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape51),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment5),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("tableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),DropExtentTagsFromQuery3=Kusto.Language.Parsing.CommandGrammar.Command("DropExtentTagsFromQuery",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.TableNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("extent"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("tags"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,fragment6,missing1),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("tableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("csl")],Kusto.Language.Syntax.CustomElementDescriptor))),DropExtentTagsFromQuery4=Kusto.Language.Parsing.CommandGrammar.Command("DropExtentTagsFromQuery",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.TableNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("extent"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("tags"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("with"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.CommandGrammar.ZeroOrMoreCommaList(fragment0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,fragment6,missing1)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("tableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("csl")],Kusto.Language.Syntax.CustomElementDescriptor))),DropTable=Kusto.Language.Parsing.CommandGrammar.Command("DropTable",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.TableNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("ifexists"),shape228)),DropTableIngestionMapping=Kusto.Language.Parsing.CommandGrammar.Command("DropTableIngestionMapping",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.TableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("ingestion"),Kusto.Language.Parsing.CommandGrammar.RequiredToken$1(["avro","csv","json","orc","parquet","w3clogfile"]),Kusto.Language.Parsing.CommandGrammar.RequiredToken("mapping"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("MappingKind"),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("MappingName",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),DropTableRole2=Kusto.Language.Parsing.CommandGrammar.Command("DropTableRole",Kusto.Language.Parsing.CommandGrammar.Custom(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.TableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("ingestors"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape2),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("skip-results"),shape3)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape4)),shape227)),DropTable2=Kusto.Language.Parsing.CommandGrammar.Command("DropTable",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.TableNameReference,rules.MissingNameReference),shape302)),DropTempStorage=Kusto.Language.Parsing.CommandGrammar.Command("DropTempStorage",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("tempstorage"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("older"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.Value,rules.MissingValue),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("olderThan",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),DropUnusedStoredQueryResultContainers=Kusto.Language.Parsing.CommandGrammar.Command("DropUnusedStoredQueryResultContainers",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("unused"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("storedqueryresultcontainers"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.DatabaseNameReference,rules.MissingNameReference),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("databaseName",Kusto.Language.Editor.CompletionHint.Database)],Kusto.Language.Syntax.CustomElementDescriptor))),DropWorkloadGroup=Kusto.Language.Parsing.CommandGrammar.Command("DropWorkloadGroup",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("drop",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.RequiredToken("workload_group"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("WorkloadGroupName",Kusto.Language.Editor.CompletionHint.None)],Kusto.Language.Syntax.CustomElementDescriptor))),EnableContinuousExport=Kusto.Language.Parsing.CommandGrammar.Command("EnableContinuousExport",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("enable",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("continuous-export"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),shape229)),EnableDatabaseStreamingIngestionMaintenanceMode=Kusto.Language.Parsing.CommandGrammar.Command("EnableDatabaseStreamingIngestionMaintenanceMode",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("enable",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("streamingingestion_maintenance_mode"))),EnableDatabaseMaintenanceMode=Kusto.Language.Parsing.CommandGrammar.Command("EnableDatabaseMaintenanceMode",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("enable",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("streamingingestion_maintenance_mode")),rules.DatabaseNameReference),rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("maintenance_mode"),shape205)),EnableDisableMaterializedView2=Kusto.Language.Parsing.CommandGrammar.Command("EnableDisableMaterializedView",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("enable",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.MaterializedViewNameReference,rules.MissingNameReference),shape224)),EnablePlugin=Kusto.Language.Parsing.CommandGrammar.Command("EnablePlugin",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("enable",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.RequiredToken("plugin"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[rules.StringLiteral,rules.NameDeclaration]),rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("name",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),ExecuteClusterScript=Kusto.Language.Parsing.CommandGrammar.Command("ExecuteClusterScript",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("execute",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("script"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment44),Kusto.Language.Parsing.CommandGrammar.RequiredToken("<|"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.ScriptInput,rules.MissingStatement),shape230)),ExecuteDatabaseScript=Kusto.Language.Parsing.CommandGrammar.Command("ExecuteDatabaseScript",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("execute",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.RequiredToken("database"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("script"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment44),Kusto.Language.Parsing.CommandGrammar.RequiredToken("<|"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.ScriptInput,rules.MissingStatement),shape230)),ExecuteDatabaseScript2=Kusto.Language.Parsing.CommandGrammar.Command("ExecuteDatabaseScript",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("execute",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.RequiredToken("script"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment44),Kusto.Language.Parsing.CommandGrammar.RequiredToken("<|"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.ScriptInput,rules.MissingStatement),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Tabular)],Kusto.Language.Syntax.CustomElementDescriptor))),ExportToStorage=Kusto.Language.Parsing.CommandGrammar.Command("ExportToStorage",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("export",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("async")),Kusto.Language.Parsing.CommandGrammar.RequiredToken("compressed"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("to"),Kusto.Language.Parsing.CommandGrammar.RequiredToken$1(["csv","json","parquet","tsv"]),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,Kusto.Language.Parsing.CommandGrammar.CD$1("DataConnectionString",Kusto.Language.Editor.CompletionHint.Literal)),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),Kusto.Language.Parsing.CommandGrammar.RequiredToken("<|"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.QueryInput,rules.MissingExpression)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Query",Kusto.Language.Editor.CompletionHint.Tabular)],Kusto.Language.Syntax.CustomElementDescriptor))),ExportToStorage2=Kusto.Language.Parsing.CommandGrammar.Command("ExportToStorage",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("export",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("async")),Kusto.Language.Parsing.CommandGrammar.RequiredToken("to"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("csv"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,Kusto.Language.Parsing.CommandGrammar.CD$1("DataConnectionString",Kusto.Language.Editor.CompletionHint.Literal)),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),Kusto.Language.Parsing.CommandGrammar.RequiredToken("<|"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.QueryInput,rules.MissingExpression)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),shape231)),ExportToStorage3=Kusto.Language.Parsing.CommandGrammar.Command("ExportToStorage",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("export",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("async")),Kusto.Language.Parsing.CommandGrammar.RequiredToken("to"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("json"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,Kusto.Language.Parsing.CommandGrammar.CD$1("DataConnectionString",Kusto.Language.Editor.CompletionHint.Literal)),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),Kusto.Language.Parsing.CommandGrammar.RequiredToken("<|"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.QueryInput,rules.MissingExpression)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),shape231)),ExportToStorage4=Kusto.Language.Parsing.CommandGrammar.Command("ExportToStorage",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("export",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("async")),Kusto.Language.Parsing.CommandGrammar.RequiredToken("to"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("parquet"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,Kusto.Language.Parsing.CommandGrammar.CD$1("DataConnectionString",Kusto.Language.Editor.CompletionHint.Literal)),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),Kusto.Language.Parsing.CommandGrammar.RequiredToken("<|"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.QueryInput,rules.MissingExpression)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),shape231)),ExportToSqlTable=Kusto.Language.Parsing.CommandGrammar.Command("ExportToSqlTable",Kusto.Language.Parsing.CommandGrammar.Custom(Kusto.Language.Parsing.CommandGrammar.Token("export",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("async")),Kusto.Language.Parsing.CommandGrammar.Token$1("to"),Kusto.Language.Parsing.CommandGrammar.Token$1("sql"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),Kusto.Language.Parsing.CommandGrammar.RequiredToken("<|"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.QueryInput,rules.MissingExpression),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("SqlTableName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD$1("SqlConnectionString",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Query",Kusto.Language.Editor.CompletionHint.Tabular)],Kusto.Language.Syntax.CustomElementDescriptor))),ExportToExternalTable=Kusto.Language.Parsing.CommandGrammar.Command("ExportToExternalTable",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("export",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("async")),Kusto.Language.Parsing.CommandGrammar.Token$1("to"),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.ExternalTableNameReference,rules.MissingNameReference),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),Kusto.Language.Parsing.CommandGrammar.RequiredToken("<|"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.QueryInput,rules.MissingExpression),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("ExternalTableName",Kusto.Language.Editor.CompletionHint.ExternalTable),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Query",Kusto.Language.Editor.CompletionHint.Tabular)],Kusto.Language.Syntax.CustomElementDescriptor))),ExportToStorage5=Kusto.Language.Parsing.CommandGrammar.Command("ExportToStorage",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("export",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("async")),Kusto.Language.Parsing.CommandGrammar.RequiredToken("to"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("tsv"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,Kusto.Language.Parsing.CommandGrammar.CD$1("DataConnectionString",Kusto.Language.Editor.CompletionHint.Literal)),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),Kusto.Language.Parsing.CommandGrammar.RequiredToken("<|"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.QueryInput,rules.MissingExpression)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),shape231)),IngestIntoTable=Kusto.Language.Parsing.CommandGrammar.Command("IngestIntoTable",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("ingest",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.RequiredToken("async"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("into"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.TableNameReference,rules.MissingNameReference),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[fragment47,Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape165)]),missing2),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment45),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),IngestInlineIntoTable=Kusto.Language.Parsing.CommandGrammar.Command("IngestInlineIntoTable",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("ingest",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("inline"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("into"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token$1("["),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.BracketedInputText,rules.MissingInputText),Kusto.Language.Parsing.CommandGrammar.RequiredToken("]"),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Data",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor)),Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token$1("<|"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.InputText,rules.MissingInputText),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Data",Kusto.Language.Editor.CompletionHint.None)],Kusto.Language.Syntax.CustomElementDescriptor)),Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token$1("with"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(fragment46),missing35),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("<|"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.InputText,rules.MissingInputText),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Data",Kusto.Language.Editor.CompletionHint.None)],Kusto.Language.Syntax.CustomElementDescriptor))]),missing57),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),IngestIntoTable2=Kusto.Language.Parsing.CommandGrammar.Command("IngestIntoTable",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("ingest",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.RequiredToken("into"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.TableNameReference,rules.MissingNameReference),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[fragment47,Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape165)]),missing2),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment45),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),AttachDatabase3=Kusto.Language.Parsing.CommandGrammar.Command("AttachDatabase",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token$1("load").Hide$1(),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$2(["all","metadata"])).Hide$1(),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["all","metadata"])])),rules.DatabaseNameReference),rules.MissingNameReference),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database)],Kusto.Language.Syntax.CustomElementDescriptor))),Kusto.Language.Parsing.CommandGrammar.RequiredToken("from"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment33),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Path",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),MergeExtents=Kusto.Language.Parsing.CommandGrammar.Command("MergeExtents",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("merge",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.RequiredToken("async"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["async","database","dryrun"])])),rules.TableNameReference),rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.AnyGuidLiteralOrString,shape233),rules.MissingValue,!1),missing53),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment48),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),MergeDatabaseShardGroups=Kusto.Language.Parsing.CommandGrammar.Command("MergeDatabaseShardGroups",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("merge",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database").Hide$1(),Kusto.Language.Parsing.CommandGrammar.RequiredToken("shard-groups").Hide$1())),MergeExtentsDryrun=Kusto.Language.Parsing.CommandGrammar.Command("MergeExtentsDryrun",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("merge",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("dryrun"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.TableNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.AnyGuidLiteralOrString,shape233),rules.MissingValue,!1),missing53),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),MergeExtents2=Kusto.Language.Parsing.CommandGrammar.Command("MergeExtents",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("merge",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["async","database","dryrun"])])),rules.TableNameReference),rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.AnyGuidLiteralOrString,shape233),rules.MissingValue,!1),missing53),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment48),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),MoveExtentsFrom=Kusto.Language.Parsing.CommandGrammar.Command("MoveExtentsFrom",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("move",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("async")),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.CommandGrammar.Token$1("all"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("from"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.TableNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("to"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.TableNameReference,rules.MissingNameReference)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("SourceTableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DestinationTableName",Kusto.Language.Editor.CompletionHint.Table)],Kusto.Language.Syntax.CustomElementDescriptor))),MoveExtentsFrom2=Kusto.Language.Parsing.CommandGrammar.Command("MoveExtentsFrom",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("move",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("async")),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.CommandGrammar.Token$1("from"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.TableNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("to"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.TableNameReference,rules.MissingNameReference),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment5),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.AnyGuidLiteralOrString,shape233),rules.MissingValue,!1),missing53),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")")],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("SourceTableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DestinationTableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),MoveExtentsQuery=Kusto.Language.Parsing.CommandGrammar.Command("MoveExtentsQuery",Kusto.Language.Parsing.CommandGrammar.Custom(Kusto.Language.Parsing.CommandGrammar.Token("move",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("async")),Kusto.Language.Parsing.CommandGrammar.RequiredToken("extents"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("to"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.TableNameReference,rules.MissingNameReference),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment5),Kusto.Language.Parsing.CommandGrammar.RequiredToken("<|"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.QueryInput,rules.MissingExpression),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DestinationTableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Query",Kusto.Language.Editor.CompletionHint.Tabular)],Kusto.Language.Syntax.CustomElementDescriptor))),PatchExtentCorruptedDatetime=Kusto.Language.Parsing.CommandGrammar.Command("PatchExtentCorruptedDatetime",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token$1("patch"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.TableNameReference,rules.MissingNameReference),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Table)],Kusto.Language.Syntax.CustomElementDescriptor))),Kusto.Language.Parsing.CommandGrammar.RequiredToken("extents"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("corrupted"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("datetime"),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor)).Hide$1()),RenameColumns=Kusto.Language.Parsing.CommandGrammar.Command("RenameColumns",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("rename",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("columns"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$6(rules.NameDeclaration,Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.DatabaseTableColumnNameReference,rules.MissingNameReference),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD$1("NewColumnName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("ColumnName",Kusto.Language.Editor.CompletionHint.Column)],Kusto.Language.Syntax.CustomElementDescriptor))),missing58),shape174)),RenameColumn=Kusto.Language.Parsing.CommandGrammar.Command("RenameColumn",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("rename",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("column"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.DatabaseTableColumnNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("to"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("ColumnName",Kusto.Language.Editor.CompletionHint.Column),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("NewColumnName",Kusto.Language.Editor.CompletionHint.None)],Kusto.Language.Syntax.CustomElementDescriptor))),RenameMaterializedView=Kusto.Language.Parsing.CommandGrammar.Command("RenameMaterializedView",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("rename",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.MaterializedViewNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("to"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("MaterializedViewName",Kusto.Language.Editor.CompletionHint.MaterializedView),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("NewMaterializedViewName",Kusto.Language.Editor.CompletionHint.None)],Kusto.Language.Syntax.CustomElementDescriptor))),RenameTables=Kusto.Language.Parsing.CommandGrammar.Command("RenameTables",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("rename",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("tables"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$6(rules.NameDeclaration,Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.TableNameReference,rules.MissingNameReference),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD$1("NewTableName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table)],Kusto.Language.Syntax.CustomElementDescriptor))),missing59),shape174)),RenameTable=Kusto.Language.Parsing.CommandGrammar.Command("RenameTable",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("rename",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.RequiredToken("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.TableNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("to"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("NewTableName",Kusto.Language.Editor.CompletionHint.None)],Kusto.Language.Syntax.CustomElementDescriptor))),ReplaceExtents=Kusto.Language.Parsing.CommandGrammar.Command("ReplaceExtents",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("replace",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.RequiredToken("async"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("extents"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("in"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.TableNameReference,rules.MissingNameReference),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment5),Kusto.Language.Parsing.CommandGrammar.RequiredToken("<|"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("{"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.QueryInput,rules.MissingExpression),Kusto.Language.Parsing.CommandGrammar.RequiredToken("}"),Kusto.Language.Parsing.CommandGrammar.RequiredToken(","),Kusto.Language.Parsing.CommandGrammar.RequiredToken("{"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.QueryInput,rules.MissingExpression),Kusto.Language.Parsing.CommandGrammar.RequiredToken("}")],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DestinationTableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("ExtentsToDropQuery",Kusto.Language.Editor.CompletionHint.Tabular),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("ExtentsToMoveQuery",Kusto.Language.Editor.CompletionHint.Tabular),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),ReplaceDatabaseKeyVaultSecrets=Kusto.Language.Parsing.CommandGrammar.Command("ReplaceDatabaseKeyVaultSecrets",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token$1("replace"),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("keyvaultsecrets"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("secrets",Kusto.Language.Editor.CompletionHint.None)],Kusto.Language.Syntax.CustomElementDescriptor)).Hide$1()),ReplaceExtents2=Kusto.Language.Parsing.CommandGrammar.Command("ReplaceExtents",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("replace",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.RequiredToken("extents"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("in"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.TableNameReference,rules.MissingNameReference),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment5),Kusto.Language.Parsing.CommandGrammar.RequiredToken("<|"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("{"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.QueryInput,rules.MissingExpression),Kusto.Language.Parsing.CommandGrammar.RequiredToken("}"),Kusto.Language.Parsing.CommandGrammar.RequiredToken(","),Kusto.Language.Parsing.CommandGrammar.RequiredToken("{"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.QueryInput,rules.MissingExpression),Kusto.Language.Parsing.CommandGrammar.RequiredToken("}")],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DestinationTableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("ExtentsToDropQuery",Kusto.Language.Editor.CompletionHint.Tabular),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("ExtentsToMoveQuery",Kusto.Language.Editor.CompletionHint.Tabular),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),SetOrAppendTable=Kusto.Language.Parsing.CommandGrammar.Command("SetOrAppendTable",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("set-or-append",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("async")),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("async")),rules.NameDeclaration),rules.MissingNameDeclaration),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment45),Kusto.Language.Parsing.CommandGrammar.RequiredToken("<|"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.QueryInput,rules.MissingExpression),shape241)),StoredQueryResultSetOrReplace=Kusto.Language.Parsing.CommandGrammar.Command("StoredQueryResultSetOrReplace",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("set-or-replace",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("async")),Kusto.Language.Parsing.CommandGrammar.Token$1("stored_query_result"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment45),Kusto.Language.Parsing.CommandGrammar.RequiredToken("<|"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.QueryInput,rules.MissingExpression),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("StoredQueryResultName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Query",Kusto.Language.Editor.CompletionHint.Tabular)],Kusto.Language.Syntax.CustomElementDescriptor))),SetOrReplaceTable=Kusto.Language.Parsing.CommandGrammar.Command("SetOrReplaceTable",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("set-or-replace",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("async")),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["async","stored_query_result"])])),rules.NameDeclaration),rules.MissingNameDeclaration),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment45),Kusto.Language.Parsing.CommandGrammar.RequiredToken("<|"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.QueryInput,rules.MissingExpression),shape241)),SetAccess=Kusto.Language.Parsing.CommandGrammar.Command("SetAccess",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("set",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("access"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.DatabaseNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("to"),Kusto.Language.Parsing.CommandGrammar.RequiredToken$1(["readonly","readwrite"]),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("AccessMode")],Kusto.Language.Syntax.CustomElementDescriptor))),StoredQueryResultSet=Kusto.Language.Parsing.CommandGrammar.Command("StoredQueryResultSet",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("set",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("async"),Kusto.Language.Parsing.CommandGrammar.Token$1("stored_query_result"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment45),Kusto.Language.Parsing.CommandGrammar.RequiredToken("<|"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.QueryInput,rules.MissingExpression),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("StoredQueryResultName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Query",Kusto.Language.Editor.CompletionHint.Tabular)],Kusto.Language.Syntax.CustomElementDescriptor))),SetTable=Kusto.Language.Parsing.CommandGrammar.Command("SetTable",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("set",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.RequiredToken("async"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["access","async","cluster","continuous-export","database","external","function","materialized-view","stored_query_result","table"])])),rules.NameDeclaration),rules.MissingNameDeclaration),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment45),Kusto.Language.Parsing.CommandGrammar.RequiredToken("<|"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.QueryInput,rules.MissingExpression),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("QueryOrCommand",Kusto.Language.Editor.CompletionHint.Tabular)],Kusto.Language.Syntax.CustomElementDescriptor))),SetClusterRole=Kusto.Language.Parsing.CommandGrammar.Command("SetClusterRole",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("set",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.RequiredToken$1(["admins","alldatabasesadmins","alldatabasesmonitors","alldatabasesviewers","databasecreators","monitors","ops","users","viewers"]),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[fragment49,fragment50]),missing60),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Role"),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),SetContinuousExportCursor=Kusto.Language.Parsing.CommandGrammar.Command("SetContinuousExportCursor",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("set",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("continuous-export"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),Kusto.Language.Parsing.CommandGrammar.RequiredToken("cursor"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("to"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("jobName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("cursorValue",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),SetDatabaseRole=Kusto.Language.Parsing.CommandGrammar.Command("SetDatabaseRole",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("set",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.DatabaseNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("admins"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[fragment49,fragment50]),missing60),shape244)),SetDatabaseRole2=Kusto.Language.Parsing.CommandGrammar.Command("SetDatabaseRole",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("set",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.DatabaseNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("ingestors"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[fragment49,fragment50]),missing60),shape244)),SetDatabaseRole3=Kusto.Language.Parsing.CommandGrammar.Command("SetDatabaseRole",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("set",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.DatabaseNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("monitors"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[fragment49,fragment50]),missing60),shape244)),AlterDatabasePrettyName2=Kusto.Language.Parsing.CommandGrammar.Command("AlterDatabasePrettyName",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("set",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("prettyname"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape246)),SetDatabaseRole4=Kusto.Language.Parsing.CommandGrammar.Command("SetDatabaseRole",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("set",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.DatabaseNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("unrestrictedviewers"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[fragment49,fragment50]),missing60),shape244)),SetDatabaseRole5=Kusto.Language.Parsing.CommandGrammar.Command("SetDatabaseRole",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("set",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.DatabaseNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("users"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[fragment49,fragment50]),missing60),shape244)),SetDatabaseRole6=Kusto.Language.Parsing.CommandGrammar.Command("SetDatabaseRole",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("set",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.DatabaseNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("viewers"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[fragment49,fragment50]),missing60),shape244)),SetExternalTableAdmins=Kusto.Language.Parsing.CommandGrammar.Command("SetExternalTableAdmins",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("set",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("external"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.ExternalTableNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("admins"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token$1("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape5),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("skip-results")),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape6)),shape242),Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token$1("none"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("skip-results")),shape243)]),missing60),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("externalTableName",Kusto.Language.Editor.CompletionHint.ExternalTable),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),SetFunctionRole=Kusto.Language.Parsing.CommandGrammar.Command("SetFunctionRole",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("set",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("function"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.FunctionNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("admins"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[fragment49,fragment50]),missing60),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("FunctionName",Kusto.Language.Editor.CompletionHint.Function),Kusto.Language.Parsing.CommandGrammar.CD$1("Role"),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),SetMaterializedViewAdmins=Kusto.Language.Parsing.CommandGrammar.Command("SetMaterializedViewAdmins",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("set",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),rules.MaterializedViewNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("admins"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token$1("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape5),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape6)),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal,!0)],Kusto.Language.Syntax.CustomElementDescriptor)),Kusto.Language.Parsing.CommandGrammar.Token$1("none")]),missing61),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("materializedViewName",Kusto.Language.Editor.CompletionHint.MaterializedView),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),SetMaterializedViewConcurrency=Kusto.Language.Parsing.CommandGrammar.Command("SetMaterializedViewConcurrency",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("set",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),rules.MaterializedViewNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("concurrency"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token$1("="),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[rules.Value,rules.Value]),rules.MissingValue),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("n",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),shape295)),SetMaterializedViewCursor=Kusto.Language.Parsing.CommandGrammar.Command("SetMaterializedViewCursor",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("set",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.MaterializedViewNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("cursor"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("to"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("MaterializedViewName",Kusto.Language.Editor.CompletionHint.MaterializedView),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("CursorValue",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),StoredQueryResultSet2=Kusto.Language.Parsing.CommandGrammar.Command("StoredQueryResultSet",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("set",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("stored_query_result"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment45),Kusto.Language.Parsing.CommandGrammar.RequiredToken("<|"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.QueryInput,rules.MissingExpression),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("StoredQueryResultName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Query",Kusto.Language.Editor.CompletionHint.Tabular)],Kusto.Language.Syntax.CustomElementDescriptor))),SetTableRowStoreReferences=Kusto.Language.Parsing.CommandGrammar.Command("SetTableRowStoreReferences",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("set",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.DatabaseTableNameReference,Kusto.Language.Parsing.CommandGrammar.RequiredToken("rowstore_references"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("references",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),SetTableRole=Kusto.Language.Parsing.CommandGrammar.Command("SetTableRole",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("set",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.TableNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken$1(["admins","ingestors"]),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[fragment49,fragment50]),missing60),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD$1("Role"),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),SetTable2=Kusto.Language.Parsing.CommandGrammar.Command("SetTable",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("set",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["access","async","cluster","continuous-export","database","external","function","materialized-view","stored_query_result","table"])])),rules.NameDeclaration),rules.MissingNameDeclaration),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment45),Kusto.Language.Parsing.CommandGrammar.RequiredToken("<|"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.QueryInput,rules.MissingExpression),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("QueryOrCommand",Kusto.Language.Editor.CompletionHint.Tabular)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowBasicAuthUsers=Kusto.Language.Parsing.CommandGrammar.Command("ShowBasicAuthUsers",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("basicauth"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("users"))),ShowCache=Kusto.Language.Parsing.CommandGrammar.Command("ShowCache",Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cache"))),ShowCallStacks=Kusto.Language.Parsing.CommandGrammar.Command("ShowCallStacks",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("callstacks"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),shape188)),ShowCapacity=Kusto.Language.Parsing.CommandGrammar.Command("ShowCapacity",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("capacity"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$2(["data-export","extents-merge","extents-partition","ingestions","materialized-view","mirroring","periodic-storage-artifacts-cleanup","purge-storage-artifacts-cleanup","queries","query-acceleration","stored-query-results","streaming-ingestion-post-processing","table-purge"]),Kusto.Language.Parsing.CommandGrammar.CD$1("Resource"))),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment65),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowCertificates=Kusto.Language.Parsing.CommandGrammar.Command("ShowCertificates",Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("certificates"))),ShowCloudSettings=Kusto.Language.Parsing.CommandGrammar.Command("ShowCloudSettings",Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cloudsettings"))),ShowClusterAdminState=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterAdminState",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("admin"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("state"))),ShowClusterBlockedPrincipals=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterBlockedPrincipals",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("blockedprincipals"))),ShowClusterDatabasesDataStats=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterDatabasesDataStats",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment51),Kusto.Language.Parsing.CommandGrammar.Token$1("datastats"),shape248)),ShowClusterDatabasesDetails=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterDatabasesDetails",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment51),Kusto.Language.Parsing.CommandGrammar.Token$1("details"),shape248)),ShowClusterDatabasesIdentity=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterDatabasesIdentity",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment51),Kusto.Language.Parsing.CommandGrammar.Token$1("identity"),shape248)),ShowClusterDatabasesMetadata=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterDatabasesMetadata",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment51),Kusto.Language.Parsing.CommandGrammar.Token$1("metadata"),shape248)),ShowClusterDatabasesPolicies=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterDatabasesPolicies",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment51),Kusto.Language.Parsing.CommandGrammar.Token$1("policies"),shape248)),ShowClusterDatabasesDetails2=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterDatabasesDetails",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment51),Kusto.Language.Parsing.CommandGrammar.Token$1("verbose"),shape248)),ShowClusterDatabases=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterDatabases",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token$1("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[rules.WildcardedNameDeclaration,rules.DatabaseNameReference]),shape182),rules.MissingNameDeclaration,!1),missing28),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),shape155)),shape253)),ShowClusterDetails=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterDetails",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("details"))),ShowClusterExtentsMetadata=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterExtentsMetadata",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment56),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("hot")),Kusto.Language.Parsing.CommandGrammar.Token$1("metadata"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment57),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment53),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowClusterExtents=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterExtents",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment54),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("hot")),Kusto.Language.Parsing.CommandGrammar.RequiredToken("where"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreList(fragment52,Kusto.Language.Parsing.CommandGrammar.Token$1("and"),void 0,!1),missing62),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment53),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowClusterExtents2=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterExtents",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment54),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("hot")),Kusto.Language.Parsing.CommandGrammar.RequiredToken("with"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.CommandGrammar.RequiredToken("extentsShowFilteringRuntimePolicy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.Value,rules.MissingValue),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")")],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("policy",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),ShowClusterExtents3=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterExtents",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment54),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("hot")),shape265)),ShowIngestionMappings=Kusto.Language.Parsing.CommandGrammar.Command("ShowIngestionMappings",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("ingestion"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$2(["apacheavro","avro","csv","json","orc","parquet","sstream","w3clogfile"]),shape46)),Kusto.Language.Parsing.CommandGrammar.RequiredToken("mappings"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowClusterJournal=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterJournal",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("journal"))),ShowClusterMonitoring=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterMonitoring",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("monitoring"))),ShowClusterNetwork=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterNetwork",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("network"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.Value,Kusto.Language.Parsing.CommandGrammar.CD$1("bytes",Kusto.Language.Editor.CompletionHint.Literal))),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowClusterPendingContinuousExports=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterPendingContinuousExports",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("pending"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("continuous-exports"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),shape252)),ShowClusterPolicyCaching=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterPolicyCaching",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("caching"))),ShowClusterPolicyCallout=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterPolicyCallout",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("callout"))),ShowClusterPolicyCapacity=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterPolicyCapacity",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("capacity"))),ShowClusterPolicyDiagnostics=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterPolicyDiagnostics",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("diagnostics"))),ShowClusterPolicyIngestionBatching=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterPolicyIngestionBatching",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("ingestionbatching"))),ShowClusterPolicyManagedIdentity=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterPolicyManagedIdentity",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("managed_identity"))),ShowClusterPolicyMultiDatabaseAdmins=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterPolicyMultiDatabaseAdmins",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("multidatabaseadmins"))),ShowClusterPolicyQueryWeakConsistency=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterPolicyQueryWeakConsistency",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("query_weak_consistency"))),ShowClusterPolicyRequestClassification=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterPolicyRequestClassification",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("request_classification"))),ShowClusterPolicyRowStore=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterPolicyRowStore",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("rowstore"))),ShowClusterPolicySandbox=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterPolicySandbox",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("sandbox"))),ShowClusterPolicySharding=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterPolicySharding",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("sharding"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),shape252)),ShowClusterPolicyStreamingIngestion=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterPolicyStreamingIngestion",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("streamingingestion"))),ShowClusterPrincipals=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterPrincipals",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("principals"))),ShowClusterPrincipalRoles=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterPrincipalRoles",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("principal"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[Kusto.Language.Parsing.CommandGrammar.Token$1("roles"),fragment64]),missing63),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),shape252)),ShowClusterSandboxesStats=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterSandboxesStats",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("sandboxes"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("stats"))),ShowClusterScaleIn=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterScaleIn",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("scalein"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[rules.Value,rules.Value]),rules.MissingValue),Kusto.Language.Parsing.CommandGrammar.RequiredToken("nodes"),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("num",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),ShowSchema=Kusto.Language.Parsing.CommandGrammar.Command("ShowSchema",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("schema"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[fragment67,Kusto.Language.Parsing.CommandGrammar.Token$1("details")])),shape253)),ShowClusterServices=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterServices",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("services"))),ShowClusterStorageKeysHash=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterStorageKeysHash",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"),Kusto.Language.Parsing.CommandGrammar.Token$1("storage"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("keys"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("hash"))),ShowCluster=Kusto.Language.Parsing.CommandGrammar.Command("ShowCluster",Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("cluster"))),ShowColumnPolicyCaching=Kusto.Language.Parsing.CommandGrammar.Command("ShowColumnPolicyCaching",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("column"),Kusto.Language.Parsing.CommandGrammar.Token$1("*"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("policy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("caching"),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("ColumnName"),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),ShowColumnPolicyCaching2=Kusto.Language.Parsing.CommandGrammar.Command("ShowColumnPolicyCaching",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("column"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("*")),rules.DatabaseTableColumnNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("policy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("caching"),shape192)),ShowColumnPolicyEncoding=Kusto.Language.Parsing.CommandGrammar.Command("ShowColumnPolicyEncoding",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("column"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("*")),rules.TableColumnNameReference),rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("policy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("encoding"),shape192)),ShowCommandsAndQueries=Kusto.Language.Parsing.CommandGrammar.Command("ShowCommandsAndQueries",Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("commands-and-queries"))),ShowCommands=Kusto.Language.Parsing.CommandGrammar.Command("ShowCommands",Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("commands"))),ShowCommConcurrency=Kusto.Language.Parsing.CommandGrammar.Command("ShowCommConcurrency",Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("commconcurrency"))),ShowCommPools=Kusto.Language.Parsing.CommandGrammar.Command("ShowCommPools",Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("commpools"))),ShowContinuousExports=Kusto.Language.Parsing.CommandGrammar.Command("ShowContinuousExports",Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("continuous-exports"))),ShowContinuousExportExportedArtifacts=Kusto.Language.Parsing.CommandGrammar.Command("ShowContinuousExportExportedArtifacts",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("continuous-export"),rules.NameDeclaration,Kusto.Language.Parsing.CommandGrammar.Token$1("exported-artifacts"),shape254)),ShowContinuousExportFailures=Kusto.Language.Parsing.CommandGrammar.Command("ShowContinuousExportFailures",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("continuous-export"),rules.NameDeclaration,Kusto.Language.Parsing.CommandGrammar.Token$1("failures"),shape254)),ShowContinuousExport=Kusto.Language.Parsing.CommandGrammar.Command("ShowContinuousExport",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("continuous-export"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),shape229)),ShowClusterDatabasesDataStats2=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterDatabasesDataStats",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),rules.WildcardedNameDeclaration,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment55),Kusto.Language.Parsing.CommandGrammar.Token$1(")"),Kusto.Language.Parsing.CommandGrammar.Token$1("datastats"),shape256)),ShowClusterDatabasesDetails3=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterDatabasesDetails",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),rules.WildcardedNameDeclaration,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment55),Kusto.Language.Parsing.CommandGrammar.Token$1(")"),Kusto.Language.Parsing.CommandGrammar.Token$1("details"),shape256)),ShowClusterDatabasesIdentity2=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterDatabasesIdentity",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),rules.WildcardedNameDeclaration,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment55),Kusto.Language.Parsing.CommandGrammar.Token$1(")"),Kusto.Language.Parsing.CommandGrammar.Token$1("identity"),shape256)),ShowClusterDatabasesMetadata2=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterDatabasesMetadata",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),rules.WildcardedNameDeclaration,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment55),Kusto.Language.Parsing.CommandGrammar.Token$1(")"),Kusto.Language.Parsing.CommandGrammar.Token$1("metadata"),shape256)),ShowClusterDatabasesPolicies2=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterDatabasesPolicies",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),rules.WildcardedNameDeclaration,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment55),Kusto.Language.Parsing.CommandGrammar.Token$1(")"),Kusto.Language.Parsing.CommandGrammar.Token$1("policies"),shape256)),ShowClusterDatabasesDetails4=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterDatabasesDetails",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),rules.WildcardedNameDeclaration,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment55),Kusto.Language.Parsing.CommandGrammar.Token$1(")"),Kusto.Language.Parsing.CommandGrammar.Token$1("verbose"),shape256)),ShowClusterDatabases2=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterDatabases",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.WildcardedNameDeclaration,rules.MissingNameDeclaration),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token$1(","),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[rules.WildcardedNameDeclaration,rules.DatabaseNameReference]),shape182),rules.MissingNameDeclaration,!1),missing28),shape255)),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),ShowClusterDatabasesDataStats3=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterDatabasesDataStats",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1(")"),Kusto.Language.Parsing.CommandGrammar.Token$1("datastats"),shape257)),ShowClusterDatabasesDetails5=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterDatabasesDetails",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1(")"),Kusto.Language.Parsing.CommandGrammar.Token$1("details"),shape257)),ShowDatabaseExtentsMetadata=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseExtentsMetadata",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1(")"),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment56),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("hot")),Kusto.Language.Parsing.CommandGrammar.Token$1("metadata"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment57),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment53)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowDatabaseExtents=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseExtents",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1(")"),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment54),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("hot")),Kusto.Language.Parsing.CommandGrammar.RequiredToken("where"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreList(fragment52,Kusto.Language.Parsing.CommandGrammar.Token$1("and"),void 0,!1),missing62),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment53)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowDatabaseExtents2=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseExtents",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1(")"),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment54),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("hot")),Kusto.Language.Parsing.CommandGrammar.RequiredToken("with"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.CommandGrammar.RequiredToken("extentsShowFilteringRuntimePolicy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.Value,rules.MissingValue),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")")],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("policy",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),ShowDatabaseExtents3=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseExtents",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1(")"),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment54),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("hot")),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowClusterDatabasesIdentity3=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterDatabasesIdentity",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1(")"),Kusto.Language.Parsing.CommandGrammar.Token$1("identity"),shape257)),ShowClusterDatabasesMetadata3=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterDatabasesMetadata",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1(")"),Kusto.Language.Parsing.CommandGrammar.Token$1("metadata"),shape257)),ShowClusterDatabasesPolicies3=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterDatabasesPolicies",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1(")"),Kusto.Language.Parsing.CommandGrammar.Token$1("policies"),shape257)),ShowDatabasesSchemaAsJson=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabasesSchemaAsJson",Kusto.Language.Parsing.CommandGrammar.Custom(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1(")"),Kusto.Language.Parsing.CommandGrammar.Token$1("schema"),Kusto.Language.Parsing.CommandGrammar.Token$1("as"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("json"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowDatabasesSchemaAsJson2=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabasesSchemaAsJson",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1(")"),Kusto.Language.Parsing.CommandGrammar.Token$1("schema"),Kusto.Language.Parsing.CommandGrammar.Token$1("details"),Kusto.Language.Parsing.CommandGrammar.Token$1("as"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("json"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowDatabasesSchema=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabasesSchema",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.DatabaseNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("schema"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("details"),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Details")],Kusto.Language.Syntax.CustomElementDescriptor))),ShowDatabasesSchema2=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabasesSchema",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.DatabaseNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("schema"),shape257)),ShowClusterDatabasesDetails6=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterDatabasesDetails",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1(")"),Kusto.Language.Parsing.CommandGrammar.Token$1("verbose"),shape257)),ShowClusterDatabases3=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterDatabases",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.DatabaseNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),ShowClusterDatabasesDataStats4=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterDatabasesDataStats",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1(","),Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[rules.WildcardedNameDeclaration,rules.DatabaseNameReference]),shape182),rules.MissingNameDeclaration,!1),Kusto.Language.Parsing.CommandGrammar.Token$1(")"),Kusto.Language.Parsing.CommandGrammar.Token$1("datastats"),shape258)),ShowClusterDatabasesDetails7=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterDatabasesDetails",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1(","),Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[rules.WildcardedNameDeclaration,rules.DatabaseNameReference]),shape182),rules.MissingNameDeclaration,!1),Kusto.Language.Parsing.CommandGrammar.Token$1(")"),Kusto.Language.Parsing.CommandGrammar.Token$1("details"),shape258)),ShowDatabaseExtentsMetadata2=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseExtentsMetadata",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1(","),Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.DatabaseNameReference,shape11),rules.MissingNameReference,!1),Kusto.Language.Parsing.CommandGrammar.Token$1(")"),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment56),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("hot")),Kusto.Language.Parsing.CommandGrammar.Token$1("metadata"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment57),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment53)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowDatabaseExtents4=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseExtents",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1(","),Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.DatabaseNameReference,shape11),rules.MissingNameReference,!1),Kusto.Language.Parsing.CommandGrammar.Token$1(")"),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment54),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("hot")),Kusto.Language.Parsing.CommandGrammar.RequiredToken("where"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreList(fragment52,Kusto.Language.Parsing.CommandGrammar.Token$1("and"),void 0,!1),missing62),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment53)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowDatabaseExtents5=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseExtents",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1(","),Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.DatabaseNameReference,shape11),rules.MissingNameReference,!1),Kusto.Language.Parsing.CommandGrammar.Token$1(")"),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment54),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("hot")),Kusto.Language.Parsing.CommandGrammar.RequiredToken("with"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.CommandGrammar.RequiredToken("extentsShowFilteringRuntimePolicy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.Value,rules.MissingValue),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")")],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("policy",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),ShowDatabaseExtents6=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseExtents",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1(","),Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.DatabaseNameReference,shape11),rules.MissingNameReference,!1),Kusto.Language.Parsing.CommandGrammar.Token$1(")"),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment54),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("hot"))],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowClusterDatabasesIdentity4=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterDatabasesIdentity",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1(","),Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[rules.WildcardedNameDeclaration,rules.DatabaseNameReference]),shape182),rules.MissingNameDeclaration,!1),Kusto.Language.Parsing.CommandGrammar.Token$1(")"),Kusto.Language.Parsing.CommandGrammar.Token$1("identity"),shape258)),ShowClusterDatabasesMetadata4=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterDatabasesMetadata",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1(","),Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[rules.WildcardedNameDeclaration,rules.DatabaseNameReference]),shape182),rules.MissingNameDeclaration,!1),Kusto.Language.Parsing.CommandGrammar.Token$1(")"),Kusto.Language.Parsing.CommandGrammar.Token$1("metadata"),shape258)),ShowClusterDatabasesPolicies4=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterDatabasesPolicies",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1(","),Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[rules.WildcardedNameDeclaration,rules.DatabaseNameReference]),shape182),rules.MissingNameDeclaration,!1),Kusto.Language.Parsing.CommandGrammar.Token$1(")"),Kusto.Language.Parsing.CommandGrammar.Token$1("policies"),shape258)),ShowDatabasesSchemaAsJson3=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabasesSchemaAsJson",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1(","),Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(fragment58),Kusto.Language.Parsing.CommandGrammar.Token$1(")"),Kusto.Language.Parsing.CommandGrammar.Token$1("schema"),Kusto.Language.Parsing.CommandGrammar.Token$1("as"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("json"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowDatabasesSchemaAsJson4=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabasesSchemaAsJson",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1(","),Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(fragment58),Kusto.Language.Parsing.CommandGrammar.Token$1(")"),Kusto.Language.Parsing.CommandGrammar.Token$1("schema"),Kusto.Language.Parsing.CommandGrammar.Token$1("details"),Kusto.Language.Parsing.CommandGrammar.Token$1("as"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("json"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowDatabasesSchema3=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabasesSchema",Kusto.Language.Parsing.CommandGrammar.Custom(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.DatabaseNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken(","),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(fragment59),missing64),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("schema"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("details"),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Details")],Kusto.Language.Syntax.CustomElementDescriptor))),ShowDatabasesSchema4=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabasesSchema",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.DatabaseNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken(","),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(fragment59),missing64),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("schema"),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),ShowClusterDatabasesDetails8=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterDatabasesDetails",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1(","),Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[rules.WildcardedNameDeclaration,rules.DatabaseNameReference]),shape182),rules.MissingNameDeclaration,!1),Kusto.Language.Parsing.CommandGrammar.Token$1(")"),Kusto.Language.Parsing.CommandGrammar.Token$1("verbose"),shape258)),ShowClusterDatabases4=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterDatabases",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.DatabaseNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken(","),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[rules.WildcardedNameDeclaration,rules.DatabaseNameReference]),shape182),rules.MissingNameDeclaration,!1),missing28),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),ShowDatabasesSchemaAsJson5=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabasesSchemaAsJson",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("if_later_than"),rules.StringLiteral,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment60),Kusto.Language.Parsing.CommandGrammar.Token$1(")"),Kusto.Language.Parsing.CommandGrammar.Token$1("schema"),Kusto.Language.Parsing.CommandGrammar.Token$1("as"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("json"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Version",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowDatabasesSchemaAsJson6=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabasesSchemaAsJson",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),rules.DatabaseNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("if_later_than"),rules.StringLiteral,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment60),Kusto.Language.Parsing.CommandGrammar.Token$1(")"),Kusto.Language.Parsing.CommandGrammar.Token$1("schema"),Kusto.Language.Parsing.CommandGrammar.Token$1("details"),Kusto.Language.Parsing.CommandGrammar.Token$1("as"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("json"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Version",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowDatabasesSchema5=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabasesSchema",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.DatabaseNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("if_later_than"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment61),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("schema"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("details")],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Version",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Details")],Kusto.Language.Syntax.CustomElementDescriptor))),ShowDatabasesSchema6=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabasesSchema",Kusto.Language.Parsing.CommandGrammar.Custom(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.DatabaseNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("if_later_than"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment61),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("schema"),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Version",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),ShowClusterDatabasesDataStats5=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterDatabasesDataStats",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.Token$1("datastats"))),ShowClusterDatabasesDetails9=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterDatabasesDetails",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.Token$1("details"))),ShowDatabasesEntities=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabasesEntities",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.Token$1("entities"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment5),shape253)),ShowClusterDatabasesIdentity5=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterDatabasesIdentity",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.Token$1("identity"))),ShowDatabasesManagementGroups=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabasesManagementGroups",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.Token$1("management"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("groups"))),ShowClusterDatabasesMetadata5=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterDatabasesMetadata",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.Token$1("metadata"))),ShowClusterDatabasesPolicies5=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterDatabasesPolicies",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.Token$1("policies"))),ShowDatabasesSchemaAsJson7=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabasesSchemaAsJson",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.Token$1("schema"),Kusto.Language.Parsing.CommandGrammar.Token$1("as"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("json"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),shape268)),ShowDatabasesSchemaAsJson8=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabasesSchemaAsJson",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.Token$1("schema"),Kusto.Language.Parsing.CommandGrammar.Token$1("details"),Kusto.Language.Parsing.CommandGrammar.Token$1("as"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("json"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),shape266)),ShowDatabasesSchema7=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabasesSchema",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.Token$1("schema"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("details"),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Details")],Kusto.Language.Syntax.CustomElementDescriptor))),ShowDatabasesSchema8=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabasesSchema",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.Token$1("schema"))),ShowClusterDatabasesDetails10=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterDatabasesDetails",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.CommandGrammar.Token$1("verbose"))),ShowClusterDatabases5=Kusto.Language.Parsing.CommandGrammar.Command("ShowClusterDatabases",Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("databases"))),ShowDatabasePolicyCaching=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabasePolicyCaching",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("*"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("caching"),shape264)),ShowDatabasePolicyExtentTagsRetention=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabasePolicyExtentTagsRetention",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("*"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("extent_tags_retention"),shape264)),ShowDatabasePolicyIngestionBatching=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabasePolicyIngestionBatching",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("*"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("ingestionbatching"),shape264)),ShowDatabasePolicyMerge=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabasePolicyMerge",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("*"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("merge"),shape264)),ShowDatabasePolicyRetention=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabasePolicyRetention",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("*"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("retention"),shape264)),ShowDatabasePolicySharding=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabasePolicySharding",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("*"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("sharding"),shape264)),ShowDatabasePolicyShardsGrouping=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabasePolicyShardsGrouping",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("*"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("policy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("shards_grouping").Hide$1(),shape264)),ShowDatabaseCacheQueryResults=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseCacheQueryResults",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("cache"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("query_results"))),ShowDatabaseCslSchema=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseCslSchema",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("cslschema"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("script"),shape272)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment62),shape265)),ShowDatabaseDataStats=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseDataStats",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("datastats"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),shape253)),ShowDatabaseDetails=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseDetails",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("details"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),shape276)),ShowDatabaseExtentsMetadata3=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseExtentsMetadata",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.AnyGuidLiteralOrString,shape213),rules.MissingValue,!1),Kusto.Language.Parsing.CommandGrammar.Token$1(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("hot")),Kusto.Language.Parsing.CommandGrammar.Token$1("metadata"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment57),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment53)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowDatabaseExtents7=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseExtents",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.AnyGuidLiteralOrString,shape213),rules.MissingValue,!1),missing53),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("hot")),Kusto.Language.Parsing.CommandGrammar.RequiredToken("where"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreList(fragment52,Kusto.Language.Parsing.CommandGrammar.Token$1("and"),void 0,!1),missing62),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment53)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowDatabaseExtents8=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseExtents",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.AnyGuidLiteralOrString,shape213),rules.MissingValue,!1),missing53),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("hot")),Kusto.Language.Parsing.CommandGrammar.RequiredToken("with"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.CommandGrammar.RequiredToken("extentsShowFilteringRuntimePolicy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.Value,rules.MissingValue),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")")],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("policy",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),ShowDatabaseExtents9=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseExtents",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.AnyGuidLiteralOrString,shape213),rules.MissingValue,!1),missing53),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("hot")),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowDatabaseExtentsMetadata4=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseExtentsMetadata",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.CommandGrammar.Token$1("hot"),Kusto.Language.Parsing.CommandGrammar.Token$1("metadata"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment57),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment53),shape273)),ShowDatabaseExtents10=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseExtents",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("hot"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("where"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreList(fragment52,Kusto.Language.Parsing.CommandGrammar.Token$1("and"),void 0,!1),missing62),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment53),shape266)),ShowDatabaseExtents11=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseExtents",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("hot"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("with"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.CommandGrammar.RequiredToken("extentsShowFilteringRuntimePolicy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.Value,rules.MissingValue),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")")],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("policy",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),ShowDatabaseExtents12=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseExtents",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("hot"))),ShowDatabaseExtentsMetadata5=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseExtentsMetadata",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.CommandGrammar.Token$1("metadata"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment57),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment53),shape267)),ShowDatabaseExtentsPartitioningStatistics=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseExtentsPartitioningStatistics",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.CommandGrammar.Token$1("partitioning"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("statistics"))),ShowDatabaseExtents13=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseExtents",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("where"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreList(fragment52,Kusto.Language.Parsing.CommandGrammar.Token$1("and"),void 0,!1),missing62),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment53),shape268)),ShowDatabaseExtents14=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseExtents",Kusto.Language.Parsing.CommandGrammar.Custom(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("with"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.CommandGrammar.RequiredToken("extentsShowFilteringRuntimePolicy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.Value,rules.MissingValue),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("policy",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),ShowDatabaseExtents15=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseExtents",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"))),ShowDatabaseExtentTagsStatistics=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseExtentTagsStatistics",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("extent"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("tags"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("statistics"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token$1("with"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.CommandGrammar.RequiredToken("minCreationTime"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.Value,rules.MissingValue),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("minCreationTime",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),shape268)),ShowDatabaseIdentity=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseIdentity",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("identity"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),shape253)),ShowDatabaseIngestionMappings=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseIngestionMappings",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("ingestion"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$2(["apacheavro","avro","csv","json","orc","parquet","sstream","w3clogfile"]),shape46)),Kusto.Language.Parsing.CommandGrammar.RequiredToken("mappings"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape269)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowDatabaseKeyVaultSecrets=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseKeyVaultSecrets",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token$1("show"),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("keyvault"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("secrets")).Hide$1()),ShowDatabaseCslSchema2=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseCslSchema",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("kqlschema"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("script"),shape272)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment62),shape265)),ShowDatabaseMetadata=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseMetadata",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("metadata"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),shape253)),ShowDatabasePolicies=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabasePolicies",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("policies"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),shape253)),ShowDatabasePolicyCaching2=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabasePolicyCaching",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("caching"))),ShowDatabasePolicyExtentTagsRetention2=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabasePolicyExtentTagsRetention",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("extent_tags_retention"))),ShowDatabasePolicyIngestionBatching2=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabasePolicyIngestionBatching",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("ingestionbatching"))),ShowDatabasePolicyMerge2=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabasePolicyMerge",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("merge"))),ShowDatabasePolicyRetention2=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabasePolicyRetention",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("retention"))),ShowDatabasePolicySharding2=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabasePolicySharding",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("sharding"))),ShowDatabasePolicyShardsGrouping2=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabasePolicyShardsGrouping",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("shards_grouping").Hide$1())),ShowDatabasePrincipals=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabasePrincipals",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("principals"))),ShowDatabaseSchemaAsCslScript=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseSchemaAsCslScript",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("schema"),Kusto.Language.Parsing.CommandGrammar.Token$1("as"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("csl"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("script"),shape272)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),shape273)),ShowDatabaseSchemaAsJson=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseSchemaAsJson",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("schema"),Kusto.Language.Parsing.CommandGrammar.Token$1("as"),Kusto.Language.Parsing.CommandGrammar.Token$1("json"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),shape268)),ShowDatabaseSchemaAsCslScript2=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseSchemaAsCslScript",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("schema"),Kusto.Language.Parsing.CommandGrammar.Token$1("as"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("kql"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("script"),shape272)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),shape273)),ShowDatabaseSchema=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseSchema",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("schema"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("details"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment63),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Details"),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowDatabaseSchemaAsCslScript3=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseSchemaAsCslScript",Kusto.Language.Parsing.CommandGrammar.Custom(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("schema"),Kusto.Language.Parsing.CommandGrammar.Token$1("if_later_than"),rules.StringLiteral,Kusto.Language.Parsing.CommandGrammar.Token$1("as"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("csl"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("script"),shape272)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),shape274)),ShowDatabaseSchemaAsJson2=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseSchemaAsJson",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("schema"),Kusto.Language.Parsing.CommandGrammar.Token$1("if_later_than"),rules.StringLiteral,Kusto.Language.Parsing.CommandGrammar.Token$1("as"),Kusto.Language.Parsing.CommandGrammar.Token$1("json"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Version",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowDatabaseSchemaAsCslScript4=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseSchemaAsCslScript",Kusto.Language.Parsing.CommandGrammar.Custom(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("schema"),Kusto.Language.Parsing.CommandGrammar.Token$1("if_later_than"),rules.StringLiteral,Kusto.Language.Parsing.CommandGrammar.Token$1("as"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("kql"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("script"),shape272)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),shape274)),ShowDatabaseSchema2=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseSchema",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("schema"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("if_later_than"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Version",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowDatabaseSchemaViolations=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseSchemaViolations",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("schema"),Kusto.Language.Parsing.CommandGrammar.Token$1("violations"))),ShowDatabaseSchema3=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseSchema",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("schema"))),DatabaseShardGroupsStatisticsShow=Kusto.Language.Parsing.CommandGrammar.Command("DatabaseShardGroupsStatisticsShow",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("shard-groups").Hide$1(),Kusto.Language.Parsing.CommandGrammar.RequiredToken("statistics").Hide$1())),ShowDatabaseDetails2=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseDetails",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.Token$1("verbose"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),shape276)),ShowDatabase=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabase",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("with"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(fragment36),missing11),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),ShowDatabaseCslSchema3=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseCslSchema",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["*","cache","cslschema","datastats","details","extents","extent","identity","ingestion","keyvault","kqlschema","metadata","policies","policy","principals","schema","shard-groups","verbose","with"])])),rules.DatabaseNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("cslschema"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("script"),shape272)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment62),shape278)),ShowDatabaseEntity=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseEntity",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["*","cache","cslschema","datastats","details","extents","extent","identity","ingestion","keyvault","kqlschema","metadata","policies","policy","principals","schema","shard-groups","verbose","with"])])),rules.DatabaseNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("entity"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment5),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("EntityName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowDatabaseExtentContainersCleanOperations=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseExtentContainersCleanOperations",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["*","cache","cslschema","datastats","details","extents","extent","identity","ingestion","keyvault","kqlschema","metadata","policies","policy","principals","schema","shard-groups","verbose","with"])])),rules.DatabaseNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("extentcontainers"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("clean"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("operations"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.AnyGuidLiteralOrString,shape277)),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("databaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowDatabaseExtentsMetadata6=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseExtentsMetadata",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["*","cache","cslschema","datastats","details","extents","extent","identity","ingestion","keyvault","kqlschema","metadata","policies","policy","principals","schema","shard-groups","verbose","with"])])),rules.DatabaseNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.AnyGuidLiteralOrString,shape213),rules.MissingValue,!1),Kusto.Language.Parsing.CommandGrammar.Token$1(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("hot")),Kusto.Language.Parsing.CommandGrammar.Token$1("metadata"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment57),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment53)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowDatabaseExtents16=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseExtents",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["*","cache","cslschema","datastats","details","extents","extent","identity","ingestion","keyvault","kqlschema","metadata","policies","policy","principals","schema","shard-groups","verbose","with"])])),rules.DatabaseNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.AnyGuidLiteralOrString,shape213),rules.MissingValue,!1),missing53),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("hot")),Kusto.Language.Parsing.CommandGrammar.RequiredToken("where"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreList(fragment52,Kusto.Language.Parsing.CommandGrammar.Token$1("and"),void 0,!1),missing62),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment53)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowDatabaseExtents17=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseExtents",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["*","cache","cslschema","datastats","details","extents","extent","identity","ingestion","keyvault","kqlschema","metadata","policies","policy","principals","schema","shard-groups","verbose","with"])])),rules.DatabaseNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.AnyGuidLiteralOrString,shape213),rules.MissingValue,!1),missing53),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("hot")),Kusto.Language.Parsing.CommandGrammar.RequiredToken("with"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.CommandGrammar.RequiredToken("extentsShowFilteringRuntimePolicy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.Value,rules.MissingValue),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")")],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("policy",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),ShowDatabaseExtents18=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseExtents",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["*","cache","cslschema","datastats","details","extents","extent","identity","ingestion","keyvault","kqlschema","metadata","policies","policy","principals","schema","shard-groups","verbose","with"])])),rules.DatabaseNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.AnyGuidLiteralOrString,shape213),rules.MissingValue,!1),missing53),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("hot")),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowDatabaseExtentsMetadata7=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseExtentsMetadata",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["*","cache","cslschema","datastats","details","extents","extent","identity","ingestion","keyvault","kqlschema","metadata","policies","policy","principals","schema","shard-groups","verbose","with"])])),rules.DatabaseNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.CommandGrammar.Token$1("hot"),Kusto.Language.Parsing.CommandGrammar.Token$1("metadata"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment57),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment53),shape282)),ShowDatabaseExtents19=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseExtents",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["*","cache","cslschema","datastats","details","extents","extent","identity","ingestion","keyvault","kqlschema","metadata","policies","policy","principals","schema","shard-groups","verbose","with"])])),rules.DatabaseNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("hot"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("where"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreList(fragment52,Kusto.Language.Parsing.CommandGrammar.Token$1("and"),void 0,!1),missing62),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment53),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowDatabaseExtents20=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseExtents",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["*","cache","cslschema","datastats","details","extents","extent","identity","ingestion","keyvault","kqlschema","metadata","policies","policy","principals","schema","shard-groups","verbose","with"])])),rules.DatabaseNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("hot"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("with"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.CommandGrammar.RequiredToken("extentsShowFilteringRuntimePolicy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.Value,rules.MissingValue),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")")],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("policy",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),ShowDatabaseExtents21=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseExtents",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["*","cache","cslschema","datastats","details","extents","extent","identity","ingestion","keyvault","kqlschema","metadata","policies","policy","principals","schema","shard-groups","verbose","with"])])),rules.DatabaseNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("hot"),shape193)),ShowDatabaseExtentsMetadata8=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseExtentsMetadata",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["*","cache","cslschema","datastats","details","extents","extent","identity","ingestion","keyvault","kqlschema","metadata","policies","policy","principals","schema","shard-groups","verbose","with"])])),rules.DatabaseNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.CommandGrammar.Token$1("metadata"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment57),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment53),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowDatabaseExtentsPartitioningStatistics2=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseExtentsPartitioningStatistics",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["*","cache","cslschema","datastats","details","extents","extent","identity","ingestion","keyvault","kqlschema","metadata","policies","policy","principals","schema","shard-groups","verbose","with"])])),rules.DatabaseNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.CommandGrammar.Token$1("partitioning"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("statistics"),shape66)),ShowDatabaseExtents22=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseExtents",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["*","cache","cslschema","datastats","details","extents","extent","identity","ingestion","keyvault","kqlschema","metadata","policies","policy","principals","schema","shard-groups","verbose","with"])])),rules.DatabaseNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("where"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreList(fragment52,Kusto.Language.Parsing.CommandGrammar.Token$1("and"),void 0,!1),missing62),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment53),shape283)),ShowDatabaseExtents23=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseExtents",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["*","cache","cslschema","datastats","details","extents","extent","identity","ingestion","keyvault","kqlschema","metadata","policies","policy","principals","schema","shard-groups","verbose","with"])])),rules.DatabaseNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("with"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.CommandGrammar.RequiredToken("extentsShowFilteringRuntimePolicy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.Value,rules.MissingValue),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")")],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("policy",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),ShowDatabaseExtents24=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseExtents",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["*","cache","cslschema","datastats","details","extents","extent","identity","ingestion","keyvault","kqlschema","metadata","policies","policy","principals","schema","shard-groups","verbose","with"])])),rules.DatabaseNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),shape205)),ShowDatabaseIngestionMappings2=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseIngestionMappings",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["*","cache","cslschema","datastats","details","extents","extent","identity","ingestion","keyvault","kqlschema","metadata","policies","policy","principals","schema","shard-groups","verbose","with"])])),rules.DatabaseNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("ingestion"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$2(["apacheavro","avro","csv","json","orc","parquet","sstream","w3clogfile"]),shape46)),Kusto.Language.Parsing.CommandGrammar.RequiredToken("mappings"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,shape269)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("databaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowDatabaseJournal=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseJournal",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["*","cache","cslschema","datastats","details","extents","extent","identity","ingestion","keyvault","kqlschema","metadata","policies","policy","principals","schema","shard-groups","verbose","with"])])),rules.DatabaseNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("journal"),shape205)),ShowDatabaseCslSchema4=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseCslSchema",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["*","cache","cslschema","datastats","details","extents","extent","identity","ingestion","keyvault","kqlschema","metadata","policies","policy","principals","schema","shard-groups","verbose","with"])])),rules.DatabaseNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("kqlschema"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("script"),shape272)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment62),shape278)),ShowDatabasePolicyCaching3=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabasePolicyCaching",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["*","cache","cslschema","datastats","details","extents","extent","identity","ingestion","keyvault","kqlschema","metadata","policies","policy","principals","schema","shard-groups","verbose","with"])])),rules.DatabaseNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("caching"),shape193)),ShowDatabasePolicyDiagnostics=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabasePolicyDiagnostics",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["*","cache","cslschema","datastats","details","extents","extent","identity","ingestion","keyvault","kqlschema","metadata","policies","policy","principals","schema","shard-groups","verbose","with"])])),rules.DatabaseNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("diagnostics"),shape193)),ShowDatabasePolicyEncoding=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabasePolicyEncoding",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["*","cache","cslschema","datastats","details","extents","extent","identity","ingestion","keyvault","kqlschema","metadata","policies","policy","principals","schema","shard-groups","verbose","with"])])),rules.DatabaseNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("encoding"),shape193)),ShowDatabasePolicyExtentTagsRetention3=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabasePolicyExtentTagsRetention",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["*","cache","cslschema","datastats","details","extents","extent","identity","ingestion","keyvault","kqlschema","metadata","policies","policy","principals","schema","shard-groups","verbose","with"])])),rules.DatabaseNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("extent_tags_retention"),shape193)),ShowDatabasePolicyHardRetentionViolations=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabasePolicyHardRetentionViolations",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["*","cache","cslschema","datastats","details","extents","extent","identity","ingestion","keyvault","kqlschema","metadata","policies","policy","principals","schema","shard-groups","verbose","with"])])),rules.DatabaseNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("hardretention"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("violations"),shape279)),ShowDatabasePolicyIngestionBatching3=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabasePolicyIngestionBatching",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["*","cache","cslschema","datastats","details","extents","extent","identity","ingestion","keyvault","kqlschema","metadata","policies","policy","principals","schema","shard-groups","verbose","with"])])),rules.DatabaseNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("ingestionbatching"),shape193)),ShowDatabasePolicyManagedIdentity=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabasePolicyManagedIdentity",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["*","cache","cslschema","datastats","details","extents","extent","identity","ingestion","keyvault","kqlschema","metadata","policies","policy","principals","schema","shard-groups","verbose","with"])])),rules.DatabaseNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("managed_identity"),shape193)),ShowDatabasePolicyMerge3=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabasePolicyMerge",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["*","cache","cslschema","datastats","details","extents","extent","identity","ingestion","keyvault","kqlschema","metadata","policies","policy","principals","schema","shard-groups","verbose","with"])])),rules.DatabaseNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("merge"),shape193)),ShowDatabasePolicyMirroring=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabasePolicyMirroring",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["*","cache","cslschema","datastats","details","extents","extent","identity","ingestion","keyvault","kqlschema","metadata","policies","policy","principals","schema","shard-groups","verbose","with"])])),rules.DatabaseNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("mirroring"),shape193)),ShowDatabasePolicyRetention3=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabasePolicyRetention",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["*","cache","cslschema","datastats","details","extents","extent","identity","ingestion","keyvault","kqlschema","metadata","policies","policy","principals","schema","shard-groups","verbose","with"])])),rules.DatabaseNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("retention"),shape193)),ShowDatabasePolicySharding3=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabasePolicySharding",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["*","cache","cslschema","datastats","details","extents","extent","identity","ingestion","keyvault","kqlschema","metadata","policies","policy","principals","schema","shard-groups","verbose","with"])])),rules.DatabaseNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("sharding"),shape193)),ShowDatabasePolicyShardsGrouping3=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabasePolicyShardsGrouping",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["*","cache","cslschema","datastats","details","extents","extent","identity","ingestion","keyvault","kqlschema","metadata","policies","policy","principals","schema","shard-groups","verbose","with"])])),rules.DatabaseNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("shards_grouping").Hide$1(),shape193)),ShowDatabasePolicySoftRetentionViolations=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabasePolicySoftRetentionViolations",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["*","cache","cslschema","datastats","details","extents","extent","identity","ingestion","keyvault","kqlschema","metadata","policies","policy","principals","schema","shard-groups","verbose","with"])])),rules.DatabaseNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("softretention"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("violations"),shape279)),ShowDatabasePolicyStreamingIngestion=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabasePolicyStreamingIngestion",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["*","cache","cslschema","datastats","details","extents","extent","identity","ingestion","keyvault","kqlschema","metadata","policies","policy","principals","schema","shard-groups","verbose","with"])])),rules.DatabaseNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("streamingingestion"),shape193)),ShowDatabaseTableMirroringPolicyTemplates=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseTableMirroringPolicyTemplates",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["*","cache","cslschema","datastats","details","extents","extent","identity","ingestion","keyvault","kqlschema","metadata","policies","policy","principals","schema","shard-groups","verbose","with"])])),rules.DatabaseNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("table_mirroring_templates"),shape193)),ShowDatabasePrincipals2=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabasePrincipals",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["*","cache","cslschema","datastats","details","extents","extent","identity","ingestion","keyvault","kqlschema","metadata","policies","policy","principals","schema","shard-groups","verbose","with"])])),rules.DatabaseNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("principals"),shape205)),ShowDatabasePrincipalRoles=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabasePrincipalRoles",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["*","cache","cslschema","datastats","details","extents","extent","identity","ingestion","keyvault","kqlschema","metadata","policies","policy","principals","schema","shard-groups","verbose","with"])])),rules.DatabaseNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("principal"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[Kusto.Language.Parsing.CommandGrammar.Token$1("roles"),fragment64]),missing63),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowDatabasePurgeOperation=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabasePurgeOperation",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["*","cache","cslschema","datastats","details","extents","extent","identity","ingestion","keyvault","kqlschema","metadata","policies","policy","principals","schema","shard-groups","verbose","with"])])),rules.DatabaseNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("purge"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token$1("operations"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.AnyGuidLiteralOrString,shape277)),shape92),Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token$1("operation"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.AnyGuidLiteralOrString,rules.MissingValue),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("obj",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))]),missing65),shape281)),ShowDatabaseSchemaAsCslScript5=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseSchemaAsCslScript",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["*","cache","cslschema","datastats","details","extents","extent","identity","ingestion","keyvault","kqlschema","metadata","policies","policy","principals","schema","shard-groups","verbose","with"])])),rules.DatabaseNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("schema"),Kusto.Language.Parsing.CommandGrammar.Token$1("as"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("csl"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("script"),shape272)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),shape282)),ShowDatabaseSchemaAsJson3=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseSchemaAsJson",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["*","cache","cslschema","datastats","details","extents","extent","identity","ingestion","keyvault","kqlschema","metadata","policies","policy","principals","schema","shard-groups","verbose","with"])])),rules.DatabaseNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("schema"),Kusto.Language.Parsing.CommandGrammar.Token$1("as"),Kusto.Language.Parsing.CommandGrammar.Token$1("json"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),shape283)),ShowDatabaseSchemaAsCslScript6=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseSchemaAsCslScript",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["*","cache","cslschema","datastats","details","extents","extent","identity","ingestion","keyvault","kqlschema","metadata","policies","policy","principals","schema","shard-groups","verbose","with"])])),rules.DatabaseNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("schema"),Kusto.Language.Parsing.CommandGrammar.Token$1("as"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("kql"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("script"),shape272)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),shape282)),ShowDatabaseSchema4=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseSchema",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["*","cache","cslschema","datastats","details","extents","extent","identity","ingestion","keyvault","kqlschema","metadata","policies","policy","principals","schema","shard-groups","verbose","with"])])),rules.DatabaseNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("schema"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("details"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment63),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Details"),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowDatabaseSchemaAsCslScript7=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseSchemaAsCslScript",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["*","cache","cslschema","datastats","details","extents","extent","identity","ingestion","keyvault","kqlschema","metadata","policies","policy","principals","schema","shard-groups","verbose","with"])])),rules.DatabaseNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("schema"),Kusto.Language.Parsing.CommandGrammar.Token$1("if_later_than"),rules.StringLiteral,Kusto.Language.Parsing.CommandGrammar.Token$1("as"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("csl"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("script"),shape272)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),shape284)),ShowDatabaseSchemaAsJson4=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseSchemaAsJson",Kusto.Language.Parsing.CommandGrammar.Custom(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["*","cache","cslschema","datastats","details","extents","extent","identity","ingestion","keyvault","kqlschema","metadata","policies","policy","principals","schema","shard-groups","verbose","with"])])),rules.DatabaseNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("schema"),Kusto.Language.Parsing.CommandGrammar.Token$1("if_later_than"),rules.StringLiteral,Kusto.Language.Parsing.CommandGrammar.Token$1("as"),Kusto.Language.Parsing.CommandGrammar.Token$1("json"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Version",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowDatabaseSchemaAsCslScript8=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseSchemaAsCslScript",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["*","cache","cslschema","datastats","details","extents","extent","identity","ingestion","keyvault","kqlschema","metadata","policies","policy","principals","schema","shard-groups","verbose","with"])])),rules.DatabaseNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("schema"),Kusto.Language.Parsing.CommandGrammar.Token$1("if_later_than"),rules.StringLiteral,Kusto.Language.Parsing.CommandGrammar.Token$1("as"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("kql"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$1("script"),shape272)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),shape284)),ShowDatabaseSchema5=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseSchema",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["*","cache","cslschema","datastats","details","extents","extent","identity","ingestion","keyvault","kqlschema","metadata","policies","policy","principals","schema","shard-groups","verbose","with"])])),rules.DatabaseNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("schema"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("if_later_than"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DatabaseName",Kusto.Language.Editor.CompletionHint.Database),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Version",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowDatabaseSchemaViolations2=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseSchemaViolations",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["*","cache","cslschema","datastats","details","extents","extent","identity","ingestion","keyvault","kqlschema","metadata","policies","policy","principals","schema","shard-groups","verbose","with"])])),rules.DatabaseNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("schema"),Kusto.Language.Parsing.CommandGrammar.Token$1("violations"),shape193)),ShowDatabaseSchema6=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabaseSchema",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["*","cache","cslschema","datastats","details","extents","extent","identity","ingestion","keyvault","kqlschema","metadata","policies","policy","principals","schema","shard-groups","verbose","with"])])),rules.DatabaseNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("schema"),shape205)),DatabaseShardGroupsStatisticsShow2=Kusto.Language.Parsing.CommandGrammar.Command("DatabaseShardGroupsStatisticsShow",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["*","cache","cslschema","datastats","details","extents","extent","identity","ingestion","keyvault","kqlschema","metadata","policies","policy","principals","schema","shard-groups","verbose","with"])])),rules.DatabaseNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("shard-groups").Hide$1(),Kusto.Language.Parsing.CommandGrammar.RequiredToken("statistics").Hide$1(),shape193)),ShowDatabase2=Kusto.Language.Parsing.CommandGrammar.Command("ShowDatabase",Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("database"))),ShowDataOperations=Kusto.Language.Parsing.CommandGrammar.Command("ShowDataOperations",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("data"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("operations"))),ShowDiagnostics=Kusto.Language.Parsing.CommandGrammar.Command("ShowDiagnostics",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("diagnostics"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment65),shape188)),ShowEntityGroups=Kusto.Language.Parsing.CommandGrammar.Command("ShowEntityGroups",Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("entity_groups"))),ShowEntityGroup=Kusto.Language.Parsing.CommandGrammar.Command("ShowEntityGroup",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("entity_group"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.EntityGroupNameReference,rules.MissingNameReference),shape287)),ShowEntitySchema=Kusto.Language.Parsing.CommandGrammar.Command("ShowEntitySchema",Kusto.Language.Parsing.CommandGrammar.Custom(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("entity"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.QualifiedNameDeclaration,rules.MissingNameDeclaration),Kusto.Language.Parsing.CommandGrammar.RequiredToken("schema"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("as"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("json"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token$1("in"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("databases"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.StringLiteral,Kusto.Language.Parsing.CommandGrammar.CD$1("item",Kusto.Language.Editor.CompletionHint.Literal)),rules.MissingStringLiteral,!1),missing0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token$1("except"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("excludedFunctions",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("entity",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowExtentContainers=Kusto.Language.Parsing.CommandGrammar.Command("ShowExtentContainers",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("extentcontainers"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),shape188)),ShowExtentCorruptedDatetime=Kusto.Language.Parsing.CommandGrammar.Command("ShowExtentCorruptedDatetime",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,fragment68,missing66).Hide$1())),ShowExternalTables=Kusto.Language.Parsing.CommandGrammar.Command("ShowExternalTables",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("external"),Kusto.Language.Parsing.CommandGrammar.Token$1("tables"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment5),shape253)),ShowExternalTableArtifacts=Kusto.Language.Parsing.CommandGrammar.Command("ShowExternalTableArtifacts",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("external"),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.ExternalTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("artifacts"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment42),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("ExternalTableName",Kusto.Language.Editor.CompletionHint.ExternalTable),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowExternalTableCslSchema=Kusto.Language.Parsing.CommandGrammar.Command("ShowExternalTableCslSchema",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("external"),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.ExternalTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("cslschema"),shape288)),ShowExternalTableCslSchema2=Kusto.Language.Parsing.CommandGrammar.Command("ShowExternalTableCslSchema",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("external"),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.ExternalTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("kqlschema"),shape288)),ShowExternalTableMappings=Kusto.Language.Parsing.CommandGrammar.Command("ShowExternalTableMappings",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("external"),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.ExternalTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("mappings"),shape288)),ShowExternalTableMapping=Kusto.Language.Parsing.CommandGrammar.Command("ShowExternalTableMapping",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("external"),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.ExternalTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("mapping"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),shape289)),ShowExternalTablePrincipals=Kusto.Language.Parsing.CommandGrammar.Command("ShowExternalTablePrincipals",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("external"),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.ExternalTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("principals"),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("tableName",Kusto.Language.Editor.CompletionHint.ExternalTable),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),ShowExternalTablesPrincipalRoles=Kusto.Language.Parsing.CommandGrammar.Command("ShowExternalTablesPrincipalRoles",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("external"),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.ExternalTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("principal"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[Kusto.Language.Parsing.CommandGrammar.Token$1("roles"),fragment64]),missing63),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("ExternalTableName",Kusto.Language.Editor.CompletionHint.ExternalTable),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowExternalTableSchema=Kusto.Language.Parsing.CommandGrammar.Command("ShowExternalTableSchema",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("external"),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.ExternalTableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("schema"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("as"),Kusto.Language.Parsing.CommandGrammar.RequiredToken$1(["csl","json","kql"]),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("ExternalTableName",Kusto.Language.Editor.CompletionHint.ExternalTable),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),ShowExternalTable=Kusto.Language.Parsing.CommandGrammar.Command("ShowExternalTable",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("external"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.ExternalTableNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("with"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.CommandGrammar.ZeroOrMoreCommaList(fragment0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("ExternalTableName",Kusto.Language.Editor.CompletionHint.ExternalTable),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),ShowExternalTable2=Kusto.Language.Parsing.CommandGrammar.Command("ShowExternalTable",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("external"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.ExternalTableNameReference,rules.MissingNameReference),shape290)),ShowFabricCache=Kusto.Language.Parsing.CommandGrammar.Command("ShowFabricCache",Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("fabriccache"))),ShowFabricClocks=Kusto.Language.Parsing.CommandGrammar.Command("ShowFabricClocks",Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("fabricclocks"))),ShowFabricLocks=Kusto.Language.Parsing.CommandGrammar.Command("ShowFabricLocks",Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("fabriclocks"))),ShowFabric=Kusto.Language.Parsing.CommandGrammar.Command("ShowFabric",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("fabric"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("id",Kusto.Language.Editor.CompletionHint.None)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowFeatureFlags=Kusto.Language.Parsing.CommandGrammar.Command("ShowFeatureFlags",Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("featureflags"))),ShowFollowerDatabase=Kusto.Language.Parsing.CommandGrammar.Command("ShowFollowerDatabase",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("follower"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token$1("databases"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment66),shape243),Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token$1("database"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.DatabaseNameReference,rules.MissingNameReference),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("databaseName",Kusto.Language.Editor.CompletionHint.Database)],Kusto.Language.Syntax.CustomElementDescriptor))]),missing67))),ShowFreshness=Kusto.Language.Parsing.CommandGrammar.Command("ShowFreshness",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("freshness").Hide$1(),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.TableNameReference,rules.MissingNameReference),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token$1("column"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.ColumnNameReference,rules.MissingNameReference),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("columnName",Kusto.Language.Editor.CompletionHint.Column)],Kusto.Language.Syntax.CustomElementDescriptor))),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token$1("threshold"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.Value,rules.MissingValue),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("threshold",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("tableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowFunctions=Kusto.Language.Parsing.CommandGrammar.Command("ShowFunctions",Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("functions"))),ShowFunctionPrincipals=Kusto.Language.Parsing.CommandGrammar.Command("ShowFunctionPrincipals",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("function"),rules.FunctionNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("principals"),shape221)),ShowFunctionPrincipalRoles=Kusto.Language.Parsing.CommandGrammar.Command("ShowFunctionPrincipalRoles",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("function"),rules.FunctionNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("principal"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[Kusto.Language.Parsing.CommandGrammar.Token$1("roles"),fragment64]),missing63),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("FunctionName",Kusto.Language.Editor.CompletionHint.Function),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowFunctionSchemaAsJson=Kusto.Language.Parsing.CommandGrammar.Command("ShowFunctionSchemaAsJson",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("function"),rules.FunctionNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("schema"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("as"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("json"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment5),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("functionName",Kusto.Language.Editor.CompletionHint.Function),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowFunction=Kusto.Language.Parsing.CommandGrammar.Command("ShowFunction",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("function"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.FunctionNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("with"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.CommandGrammar.ZeroOrMoreCommaList(fragment0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("FunctionName",Kusto.Language.Editor.CompletionHint.Function),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),ShowFunction2=Kusto.Language.Parsing.CommandGrammar.Command("ShowFunction",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("function"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.FunctionNameReference,rules.MissingNameReference),shape292)),ShowIngestionMappings2=Kusto.Language.Parsing.CommandGrammar.Command("ShowIngestionMappings",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("ingestion"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("apacheavro"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("mappings"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),shape293)),ShowIngestionMappings3=Kusto.Language.Parsing.CommandGrammar.Command("ShowIngestionMappings",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("ingestion"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("avro"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("mappings"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),shape293)),ShowIngestionMappings4=Kusto.Language.Parsing.CommandGrammar.Command("ShowIngestionMappings",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("ingestion"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("csv"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("mappings"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),shape293)),ShowIngestionFailures=Kusto.Language.Parsing.CommandGrammar.Command("ShowIngestionFailures",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("ingestion"),Kusto.Language.Parsing.CommandGrammar.Token$1("failures"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token$1("with"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.CommandGrammar.RequiredToken("OperationId"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.AnyGuidLiteralOrString,rules.MissingValue),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("OperationId",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),shape253)),ShowIngestionMappings5=Kusto.Language.Parsing.CommandGrammar.Command("ShowIngestionMappings",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("ingestion"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("json"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("mappings"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),shape293)),ShowIngestionMappings6=Kusto.Language.Parsing.CommandGrammar.Command("ShowIngestionMappings",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("ingestion"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("mappings"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),shape253)),ShowIngestionMappings7=Kusto.Language.Parsing.CommandGrammar.Command("ShowIngestionMappings",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("ingestion"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("orc"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("mappings"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),shape293)),ShowIngestionMappings8=Kusto.Language.Parsing.CommandGrammar.Command("ShowIngestionMappings",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("ingestion"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("parquet"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("mappings"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),shape293)),ShowIngestionMappings9=Kusto.Language.Parsing.CommandGrammar.Command("ShowIngestionMappings",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("ingestion"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("sstream"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("mappings"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),shape293)),ShowIngestionMappings10=Kusto.Language.Parsing.CommandGrammar.Command("ShowIngestionMappings",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("ingestion"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("w3clogfile"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("mappings"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),shape293)),ShowJournal=Kusto.Language.Parsing.CommandGrammar.Command("ShowJournal",Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("journal"))),ShowMaterializedViewsDetails=Kusto.Language.Parsing.CommandGrammar.Command("ShowMaterializedViewsDetails",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-views"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.MaterializedViewNameReference,shape25),rules.MissingNameReference,!1),missing32),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("details"),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.MaterializedView),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),ShowMaterializedViewsDetails2=Kusto.Language.Parsing.CommandGrammar.Command("ShowMaterializedViewsDetails",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-views"),Kusto.Language.Parsing.CommandGrammar.Token$1("details"))),ShowMaterializedViews=Kusto.Language.Parsing.CommandGrammar.Command("ShowMaterializedViews",Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-views"))),ShowMaterializedViewCslSchema=Kusto.Language.Parsing.CommandGrammar.Command("ShowMaterializedViewCslSchema",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),rules.MaterializedViewNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("cslschema"),shape294)),ShowMaterializedViewDetails=Kusto.Language.Parsing.CommandGrammar.Command("ShowMaterializedViewDetails",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),rules.MaterializedViewNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("details"),shape294)),ShowMaterializedViewDiagnostics=Kusto.Language.Parsing.CommandGrammar.Command("ShowMaterializedViewDiagnostics",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),rules.MaterializedViewNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("diagnostics"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),shape295)),ShowMaterializedViewExtents=Kusto.Language.Parsing.CommandGrammar.Command("ShowMaterializedViewExtents",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),rules.MaterializedViewNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment54),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("hot")),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("MaterializedViewName",Kusto.Language.Editor.CompletionHint.MaterializedView),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowMaterializedViewFailures=Kusto.Language.Parsing.CommandGrammar.Command("ShowMaterializedViewFailures",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),rules.MaterializedViewNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("failures"),shape296)),ShowMaterializedViewCslSchema2=Kusto.Language.Parsing.CommandGrammar.Command("ShowMaterializedViewCslSchema",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),rules.MaterializedViewNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("kqlschema"),shape294)),ShowMaterializedViewPolicyMerge=Kusto.Language.Parsing.CommandGrammar.Command("ShowMaterializedViewPolicyMerge",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),rules.MaterializedViewNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("merge"),shape197)),ShowMaterializedViewPolicyPartitioning=Kusto.Language.Parsing.CommandGrammar.Command("ShowMaterializedViewPolicyPartitioning",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),rules.MaterializedViewNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("partitioning"),shape197)),ShowMaterializedViewPolicyRetention=Kusto.Language.Parsing.CommandGrammar.Command("ShowMaterializedViewPolicyRetention",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),rules.MaterializedViewNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("retention"),shape197)),ShowMaterializedViewPrincipals=Kusto.Language.Parsing.CommandGrammar.Command("ShowMaterializedViewPrincipals",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),rules.MaterializedViewNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("principals"),shape294)),ShowMaterializedViewSchemaAsJson=Kusto.Language.Parsing.CommandGrammar.Command("ShowMaterializedViewSchemaAsJson",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),rules.MaterializedViewNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("schema"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("as"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("json"),shape132)),ShowMaterializedViewStatistics=Kusto.Language.Parsing.CommandGrammar.Command("ShowMaterializedViewStatistics",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),rules.MaterializedViewNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("statistics"),shape296)),ShowMaterializedView=Kusto.Language.Parsing.CommandGrammar.Command("ShowMaterializedView",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),rules.MaterializedViewNameReference,shape224)),ShowMaterializedViewPolicyCaching=Kusto.Language.Parsing.CommandGrammar.Command("ShowMaterializedViewPolicyCaching",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),rules.DatabaseMaterializedViewNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("caching"),shape197)),ShowMaterializedViewPolicyRowLevelSecurity=Kusto.Language.Parsing.CommandGrammar.Command("ShowMaterializedViewPolicyRowLevelSecurity",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("materialized-view"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.DatabaseMaterializedViewNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("policy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("row_level_security"),shape197)),ShowMemory=Kusto.Language.Parsing.CommandGrammar.Command("ShowMemory",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("memory"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("details")),shape188)),ShowMemPools=Kusto.Language.Parsing.CommandGrammar.Command("ShowMemPools",Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("mempools"))),ShowOperations=Kusto.Language.Parsing.CommandGrammar.Command("ShowOperations",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("operations"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token$1("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.AnyGuidLiteralOrString,shape297),rules.MissingValue,!1),missing53),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),shape38),Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.AnyGuidLiteralOrString,shape297)])),shape188)),ShowOperationDetails=Kusto.Language.Parsing.CommandGrammar.Command("ShowOperationDetails",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("operation"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.AnyGuidLiteralOrString,rules.MissingValue),Kusto.Language.Parsing.CommandGrammar.RequiredToken("details"),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("OperationId",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),ShowPlugins=Kusto.Language.Parsing.CommandGrammar.Command("ShowPlugins",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("plugins"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),shape188)),ShowPrincipalAccess=Kusto.Language.Parsing.CommandGrammar.Command("ShowPrincipalAccess",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("principal"),Kusto.Language.Parsing.CommandGrammar.Token$1("access"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),shape253)),ShowPrincipalRoles=Kusto.Language.Parsing.CommandGrammar.Command("ShowPrincipalRoles",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("principal"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("roles"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),shape253)),ShowPrincipalRoles2=Kusto.Language.Parsing.CommandGrammar.Command("ShowPrincipalRoles",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("principal"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.CommandGrammar.RequiredToken("roles"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Principal",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowQueries=Kusto.Language.Parsing.CommandGrammar.Command("ShowQueries",Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("queries"))),ShowQueryExecution=Kusto.Language.Parsing.CommandGrammar.Command("ShowQueryExecution",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("queryexecution"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,fragment6,missing1),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("queryText")],Kusto.Language.Syntax.CustomElementDescriptor))),ShowQueryPlan=Kusto.Language.Parsing.CommandGrammar.Command("ShowQueryPlan",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("queryplan"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token$1("with"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[Kusto.Language.Parsing.CommandGrammar.Token$1("reconstructCsl"),Kusto.Language.Parsing.CommandGrammar.Token$1("showExternalArtifacts"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["reconstructCsl","showExternalArtifacts"])])),rules.NameDeclaration)]),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.Value,rules.MissingValue),shape129)),missing68),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"))),Kusto.Language.Parsing.CommandGrammar.RequiredToken("<|"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.QueryInput,rules.MissingExpression),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Query",Kusto.Language.Editor.CompletionHint.Tabular)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowQueryCallTree=Kusto.Language.Parsing.CommandGrammar.Command("ShowQueryCallTree",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("query"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("call-tree"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,fragment6,missing1),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("queryText")],Kusto.Language.Syntax.CustomElementDescriptor))),ShowRequestSupport=Kusto.Language.Parsing.CommandGrammar.Command("ShowRequestSupport",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("request_support"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("key",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowRowStores=Kusto.Language.Parsing.CommandGrammar.Command("ShowRowStores",Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("rowstores"))),ShowRowStoreSeals=Kusto.Language.Parsing.CommandGrammar.Command("ShowRowStoreSeals",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("rowstore"),Kusto.Language.Parsing.CommandGrammar.Token$1("seals"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("tableName",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowRowStoreTransactions=Kusto.Language.Parsing.CommandGrammar.Command("ShowRowStoreTransactions",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("rowstore"),Kusto.Language.Parsing.CommandGrammar.Token$1("transactions"))),ShowRowStore=Kusto.Language.Parsing.CommandGrammar.Command("ShowRowStore",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("rowstore"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["seals","transactions"])])),rules.NameDeclaration),rules.MissingNameDeclaration),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("rowStoreName",Kusto.Language.Editor.CompletionHint.None)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowRunningQueries=Kusto.Language.Parsing.CommandGrammar.Command("ShowRunningQueries",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("running"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("queries"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token$1("by"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[Kusto.Language.Parsing.CommandGrammar.Token$1("*"),fragment39]),missing15))),shape253)),ShowSchema2=Kusto.Language.Parsing.CommandGrammar.Command("ShowSchema",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("schema"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[fragment67,Kusto.Language.Parsing.CommandGrammar.Token$1("details")])),shape188)),ShowServicePoints=Kusto.Language.Parsing.CommandGrammar.Command("ShowServicePoints",Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("servicepoints"))),StoredQueryResultsShow=Kusto.Language.Parsing.CommandGrammar.Command("StoredQueryResultsShow",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("stored_query_results"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("with")),rules.NameDeclaration),shape240)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment5),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.None,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),StoredQueryResultShowSchema=Kusto.Language.Parsing.CommandGrammar.Command("StoredQueryResultShowSchema",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("stored_query_result"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),Kusto.Language.Parsing.CommandGrammar.RequiredToken("schema"),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("StoredQueryResultName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),ShowStreamingIngestionFailures=Kusto.Language.Parsing.CommandGrammar.Command("ShowStreamingIngestionFailures",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("streamingingestion"),Kusto.Language.Parsing.CommandGrammar.Token$1("failures"))),ShowStreamingIngestionStatistics=Kusto.Language.Parsing.CommandGrammar.Command("ShowStreamingIngestionStatistics",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("streamingingestion"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("statistics"))),ShowTablesDetails=Kusto.Language.Parsing.CommandGrammar.Command("ShowTablesDetails",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("tables"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.TableNameReference,shape29),rules.MissingNameReference,!1),Kusto.Language.Parsing.CommandGrammar.Token$1(")"),Kusto.Language.Parsing.CommandGrammar.Token$1("details"),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),ShowTableExtentsMetadata=Kusto.Language.Parsing.CommandGrammar.Command("ShowTableExtentsMetadata",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("tables"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.TableNameReference,shape29),rules.MissingNameReference,!1),Kusto.Language.Parsing.CommandGrammar.Token$1(")"),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment56),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("hot")),Kusto.Language.Parsing.CommandGrammar.Token$1("metadata"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment57),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment53)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowTableExtents=Kusto.Language.Parsing.CommandGrammar.Command("ShowTableExtents",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("tables"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.TableNameReference,shape29),rules.MissingNameReference,!1),Kusto.Language.Parsing.CommandGrammar.Token$1(")"),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment54),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("hot")),Kusto.Language.Parsing.CommandGrammar.RequiredToken("where"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreList(fragment52,Kusto.Language.Parsing.CommandGrammar.Token$1("and"),void 0,!1),missing62),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment53)],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowTableExtents2=Kusto.Language.Parsing.CommandGrammar.Command("ShowTableExtents",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("tables"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.TableNameReference,shape29),rules.MissingNameReference,!1),Kusto.Language.Parsing.CommandGrammar.Token$1(")"),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment54),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("hot")),Kusto.Language.Parsing.CommandGrammar.RequiredToken("with"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.CommandGrammar.RequiredToken("extentsShowFilteringRuntimePolicy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.Value,rules.MissingValue),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")")],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("policy",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),ShowTableExtents3=Kusto.Language.Parsing.CommandGrammar.Command("ShowTableExtents",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("tables"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.TableNameReference,shape29),rules.MissingNameReference,!1),Kusto.Language.Parsing.CommandGrammar.Token$1(")"),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment54),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("hot")),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),TablesShardGroupsStatisticsShow=Kusto.Language.Parsing.CommandGrammar.Command("TablesShardGroupsStatisticsShow",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("tables"),Kusto.Language.Parsing.CommandGrammar.Token$1("("),Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.TableNameReference,shape29),rules.MissingNameReference,!1),Kusto.Language.Parsing.CommandGrammar.Token$1(")"),Kusto.Language.Parsing.CommandGrammar.Token$1("shard-groups").Hide$1(),Kusto.Language.Parsing.CommandGrammar.RequiredToken("statistics").Hide$1(),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),ShowTables=Kusto.Language.Parsing.CommandGrammar.Command("ShowTables",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("tables"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.TableNameReference,shape29),rules.MissingNameReference,!1),missing32),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),ShowTablesColumnStatistics=Kusto.Language.Parsing.CommandGrammar.Command("ShowTablesColumnStatistics",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("tables"),Kusto.Language.Parsing.CommandGrammar.Token$1("column"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("statistics"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("older"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.Value,rules.MissingValue),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("outdatewindow",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowTablesDetails2=Kusto.Language.Parsing.CommandGrammar.Command("ShowTablesDetails",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("tables"),Kusto.Language.Parsing.CommandGrammar.Token$1("details"))),TablesShardGroupsStatisticsShow2=Kusto.Language.Parsing.CommandGrammar.Command("TablesShardGroupsStatisticsShow",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("tables"),Kusto.Language.Parsing.CommandGrammar.Token$1("shard-groups").Hide$1(),Kusto.Language.Parsing.CommandGrammar.RequiredToken("statistics").Hide$1())),ShowTables2=Kusto.Language.Parsing.CommandGrammar.Command("ShowTables",Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("tables"))),ShowTableOperationsMirroringStatus=Kusto.Language.Parsing.CommandGrammar.Command("ShowTableOperationsMirroringStatus",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.CommandGrammar.Token$1("*"),Kusto.Language.Parsing.CommandGrammar.Token$1("operations"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("mirroring-status"),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName"),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),ShowTableStarPolicyCaching=Kusto.Language.Parsing.CommandGrammar.Command("ShowTableStarPolicyCaching",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.CommandGrammar.Token$1("*"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("caching"))),ShowTableStarPolicyExtentTagsRetention=Kusto.Language.Parsing.CommandGrammar.Command("ShowTableStarPolicyExtentTagsRetention",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.CommandGrammar.Token$1("*"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("extent_tags_retention"))),ShowTableStarPolicyIngestionBatching=Kusto.Language.Parsing.CommandGrammar.Command("ShowTableStarPolicyIngestionBatching",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.CommandGrammar.Token$1("*"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("ingestionbatching"))),ShowTableStarPolicyIngestionTime=Kusto.Language.Parsing.CommandGrammar.Command("ShowTableStarPolicyIngestionTime",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.CommandGrammar.Token$1("*"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("ingestiontime"))),ShowTableStarPolicyMerge=Kusto.Language.Parsing.CommandGrammar.Command("ShowTableStarPolicyMerge",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.CommandGrammar.Token$1("*"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("merge"))),ShowTableStarPolicyMirroring=Kusto.Language.Parsing.CommandGrammar.Command("ShowTableStarPolicyMirroring",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.CommandGrammar.Token$1("*"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("mirroring"))),ShowTableStarPolicyPartitioning=Kusto.Language.Parsing.CommandGrammar.Command("ShowTableStarPolicyPartitioning",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.CommandGrammar.Token$1("*"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("partitioning"))),ShowTableStarPolicyRestrictedViewAccess=Kusto.Language.Parsing.CommandGrammar.Command("ShowTableStarPolicyRestrictedViewAccess",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.CommandGrammar.Token$1("*"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("restricted_view_access"))),ShowTableStarPolicyRetention=Kusto.Language.Parsing.CommandGrammar.Command("ShowTableStarPolicyRetention",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.CommandGrammar.Token$1("*"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("retention"))),ShowTableStarPolicyRowLevelSecurity=Kusto.Language.Parsing.CommandGrammar.Command("ShowTableStarPolicyRowLevelSecurity",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.CommandGrammar.Token$1("*"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("row_level_security"))),ShowTableStarPolicyRowOrder=Kusto.Language.Parsing.CommandGrammar.Command("ShowTableStarPolicyRowOrder",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.CommandGrammar.Token$1("*"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("roworder"))),ShowTableStarPolicySharding=Kusto.Language.Parsing.CommandGrammar.Command("ShowTableStarPolicySharding",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.CommandGrammar.Token$1("*"),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("sharding"))),ShowTableStarPolicyUpdate=Kusto.Language.Parsing.CommandGrammar.Command("ShowTableStarPolicyUpdate",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.CommandGrammar.Token$1("*"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("policy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("update"))),ShowTablePolicyAutoDelete=Kusto.Language.Parsing.CommandGrammar.Command("ShowTablePolicyAutoDelete",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("*")),rules.DatabaseTableNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("auto_delete"),shape198)),ShowTablePolicyCaching=Kusto.Language.Parsing.CommandGrammar.Command("ShowTablePolicyCaching",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("*")),rules.DatabaseTableNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("caching"),shape198)),ShowTablePolicyEncoding=Kusto.Language.Parsing.CommandGrammar.Command("ShowTablePolicyEncoding",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("*")),rules.DatabaseTableNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("encoding"),shape198)),ShowTablePolicyExtentTagsRetention=Kusto.Language.Parsing.CommandGrammar.Command("ShowTablePolicyExtentTagsRetention",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("*")),rules.DatabaseTableNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("extent_tags_retention"),shape198)),ShowTablePolicyIngestionBatching=Kusto.Language.Parsing.CommandGrammar.Command("ShowTablePolicyIngestionBatching",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("*")),rules.DatabaseTableNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("ingestionbatching"),shape198)),ShowTablePolicyIngestionTime=Kusto.Language.Parsing.CommandGrammar.Command("ShowTablePolicyIngestionTime",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("*")),rules.DatabaseTableNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("ingestiontime"),shape198)),ShowTablePolicyMerge=Kusto.Language.Parsing.CommandGrammar.Command("ShowTablePolicyMerge",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("*")),rules.DatabaseTableNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("merge"),shape198)),ShowTablePolicyMirroring=Kusto.Language.Parsing.CommandGrammar.Command("ShowTablePolicyMirroring",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("*")),rules.DatabaseTableNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("mirroring"),shape198)),ShowTablePolicyPartitioning=Kusto.Language.Parsing.CommandGrammar.Command("ShowTablePolicyPartitioning",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("*")),rules.DatabaseTableNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("partitioning"),shape198)),ShowTablePolicyRestrictedViewAccess=Kusto.Language.Parsing.CommandGrammar.Command("ShowTablePolicyRestrictedViewAccess",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("*")),rules.DatabaseTableNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("restricted_view_access"),shape198)),ShowTablePolicyRetention=Kusto.Language.Parsing.CommandGrammar.Command("ShowTablePolicyRetention",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("*")),rules.DatabaseTableNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("retention"),shape198)),ShowTablePolicyRowLevelSecurity=Kusto.Language.Parsing.CommandGrammar.Command("ShowTablePolicyRowLevelSecurity",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("*")),rules.DatabaseTableNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("row_level_security"),shape198)),ShowTablePolicyRowOrder=Kusto.Language.Parsing.CommandGrammar.Command("ShowTablePolicyRowOrder",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("*")),rules.DatabaseTableNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("roworder"),shape198)),ShowTablePolicySharding=Kusto.Language.Parsing.CommandGrammar.Command("ShowTablePolicySharding",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("*")),rules.DatabaseTableNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("sharding"),shape198)),ShowTablePolicyStreamingIngestion=Kusto.Language.Parsing.CommandGrammar.Command("ShowTablePolicyStreamingIngestion",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("*")),rules.DatabaseTableNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.Token$1("streamingingestion"),shape198)),ShowTablePolicyUpdate=Kusto.Language.Parsing.CommandGrammar.Command("ShowTablePolicyUpdate",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("*")),rules.DatabaseTableNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("policy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("update"),shape198)),ShowTableRowStoreReferences=Kusto.Language.Parsing.CommandGrammar.Command("ShowTableRowStoreReferences",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("*")),rules.DatabaseTableNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("rowstore_references"),shape228)),ShowTableRowStoreSealInfo=Kusto.Language.Parsing.CommandGrammar.Command("ShowTableRowStoreSealInfo",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("*")),rules.DatabaseTableNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("rowstore_sealinfo"),shape299)),ShowTableRowStores=Kusto.Language.Parsing.CommandGrammar.Command("ShowTableRowStores",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("*")),rules.DatabaseTableNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("rowstores"),shape299)),ShowTableColumnsClassification=Kusto.Language.Parsing.CommandGrammar.Command("ShowTableColumnsClassification",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("*")),rules.TableNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("columns"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("classification"),shape198)),ShowTableColumnStatitics=Kusto.Language.Parsing.CommandGrammar.Command("ShowTableColumnStatitics",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("*")),rules.TableNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("column"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("statistics"),shape198)),ShowTableCslSchema=Kusto.Language.Parsing.CommandGrammar.Command("ShowTableCslSchema",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("*")),rules.TableNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("cslschema"),shape228)),ShowTableDataStatistics=Kusto.Language.Parsing.CommandGrammar.Command("ShowTableDataStatistics",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("*")),rules.TableNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("data"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("statistics"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token$1("with"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[Kusto.Language.Parsing.CommandGrammar.Token$1("from"),Kusto.Language.Parsing.CommandGrammar.Token$1("samplepercent"),Kusto.Language.Parsing.CommandGrammar.Token$1("scope"),Kusto.Language.Parsing.CommandGrammar.Token$1("to"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["from","samplepercent","scope","to"])])),rules.NameDeclaration)]),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.Value,rules.MissingValue),shape129)),missing69),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"))),shape300)),ShowTableDetails=Kusto.Language.Parsing.CommandGrammar.Command("ShowTableDetails",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("*")),rules.TableNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("details"),shape228)),ShowTableDimensions=Kusto.Language.Parsing.CommandGrammar.Command("ShowTableDimensions",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("*")),rules.TableNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("dimensions"),shape228)),ShowExtentCorruptedDatetime2=Kusto.Language.Parsing.CommandGrammar.Command("ShowExtentCorruptedDatetime",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("*")),rules.TableNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,fragment68,missing70).Hide$1(),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),ShowTableExtentsMetadata2=Kusto.Language.Parsing.CommandGrammar.Command("ShowTableExtentsMetadata",Kusto.Language.Parsing.CommandGrammar.Custom(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("*")),rules.TableNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment56),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("hot")),Kusto.Language.Parsing.CommandGrammar.Token$1("metadata"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment57),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment53),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowTableExtents4=Kusto.Language.Parsing.CommandGrammar.Command("ShowTableExtents",Kusto.Language.Parsing.CommandGrammar.Custom(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("*")),rules.TableNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment54),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("hot")),Kusto.Language.Parsing.CommandGrammar.RequiredToken("where"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreList(fragment52,Kusto.Language.Parsing.CommandGrammar.Token$1("and"),void 0,!1),missing62),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment53),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowTableExtents5=Kusto.Language.Parsing.CommandGrammar.Command("ShowTableExtents",Kusto.Language.Parsing.CommandGrammar.Custom$9(System.Array.init([Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("*")),rules.TableNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment54),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("hot")),Kusto.Language.Parsing.CommandGrammar.RequiredToken("with"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.CommandGrammar.RequiredToken("extentsShowFilteringRuntimePolicy"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.Value,rules.MissingValue),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")")],Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("policy",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),ShowTableExtents6=Kusto.Language.Parsing.CommandGrammar.Command("ShowTableExtents",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("*")),rules.TableNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment54),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("hot")),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowTableIngestionMappings=Kusto.Language.Parsing.CommandGrammar.Command("ShowTableIngestionMappings",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("*")),rules.TableNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("ingestion"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$2(["avro","csv","json","orc","parquet","w3clogfile"]),shape46)),Kusto.Language.Parsing.CommandGrammar.Token$1("mappings"),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),ShowTableIngestionMapping=Kusto.Language.Parsing.CommandGrammar.Command("ShowTableIngestionMapping",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("*")),rules.TableNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("ingestion"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(Kusto.Language.Parsing.CommandGrammar.Token$2(["avro","csv","json","orc","parquet","w3clogfile"]),shape46)),Kusto.Language.Parsing.CommandGrammar.RequiredToken("mapping"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("MappingName",Kusto.Language.Editor.CompletionHint.Literal)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowTableCslSchema2=Kusto.Language.Parsing.CommandGrammar.Command("ShowTableCslSchema",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("*")),rules.TableNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("kqlschema"),shape228)),ShowTableOperationsMirroringExportedArtifacts=Kusto.Language.Parsing.CommandGrammar.Command("ShowTableOperationsMirroringExportedArtifacts",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("*")),rules.TableNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("operations"),Kusto.Language.Parsing.CommandGrammar.Token$1("mirroring-exported-artifacts"),shape198)),ShowTableOperationsMirroringFailures=Kusto.Language.Parsing.CommandGrammar.Command("ShowTableOperationsMirroringFailures",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("*")),rules.TableNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("operations"),Kusto.Language.Parsing.CommandGrammar.Token$1("mirroring-failures"),shape198)),ShowTableOperationsMirroringStatus2=Kusto.Language.Parsing.CommandGrammar.Command("ShowTableOperationsMirroringStatus",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("*")),rules.TableNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("operations"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("mirroring-status"),shape198)),ShowTablePrincipals=Kusto.Language.Parsing.CommandGrammar.Command("ShowTablePrincipals",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("*")),rules.TableNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("principals"),shape228)),ShowTablePrincipalRoles=Kusto.Language.Parsing.CommandGrammar.Command("ShowTablePrincipalRoles",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("*")),rules.TableNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("principal"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[Kusto.Language.Parsing.CommandGrammar.Token$1("roles"),fragment64]),missing63),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment7),shape300)),ShowTableSchemaAsJson=Kusto.Language.Parsing.CommandGrammar.Command("ShowTableSchemaAsJson",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("*")),rules.TableNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("schema"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("as"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("json"),shape135)),TableShardGroupsStatisticsShow=Kusto.Language.Parsing.CommandGrammar.Command("TableShardGroupsStatisticsShow",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("*")),rules.TableNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("shard-groups").Hide$1(),Kusto.Language.Parsing.CommandGrammar.Token$1("statistics").Hide$1(),shape198)),TableShardGroupsShow=Kusto.Language.Parsing.CommandGrammar.Command("TableShardGroupsShow",Kusto.Language.Parsing.CommandGrammar.Custom$5(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("*")),rules.TableNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("shard-groups").Hide$1(),shape228)),TableShardsGroupMetadataShow=Kusto.Language.Parsing.CommandGrammar.Command("TableShardsGroupMetadataShow",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("*")),rules.TableNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("shards-group").Hide$1(),rules.AnyGuidLiteralOrString,Kusto.Language.Parsing.CommandGrammar.Token$1("shards").Hide$1(),Kusto.Language.Parsing.CommandGrammar.Token$1("metadata").Hide$1(),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("ShardsGroupId",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),TableShardsGroupShow=Kusto.Language.Parsing.CommandGrammar.Command("TableShardsGroupShow",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("*")),rules.TableNameReference),Kusto.Language.Parsing.CommandGrammar.Token$1("shards-group").Hide$1(),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.AnyGuidLiteralOrString,rules.MissingValue),Kusto.Language.Parsing.CommandGrammar.RequiredToken("shards").Hide$1(),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("ShardsGroupId",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),ShowTable=Kusto.Language.Parsing.CommandGrammar.Command("ShowTable",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.CommandGrammar.Token$1("*")),rules.TableNameReference),rules.MissingNameReference),shape302)),ShowTcpConnections=Kusto.Language.Parsing.CommandGrammar.Command("ShowTcpConnections",Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("tcpconnections"))),ShowTcpPorts=Kusto.Language.Parsing.CommandGrammar.Command("ShowTcpPorts",Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("tcpports"))),ShowThreadPools=Kusto.Language.Parsing.CommandGrammar.Command("ShowThreadPools",Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("threadpools"))),ShowVersion=Kusto.Language.Parsing.CommandGrammar.Command("ShowVersion",Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("version"))),ShowWorkloadGroups=Kusto.Language.Parsing.CommandGrammar.Command("ShowWorkloadGroups",Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("workload_groups"))),ShowWorkloadGroup=Kusto.Language.Parsing.CommandGrammar.Command("ShowWorkloadGroup",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("workload_group"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("WorkloadGroup",Kusto.Language.Editor.CompletionHint.None)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowExtentDetails=Kusto.Language.Parsing.CommandGrammar.Command("ShowExtentDetails",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["basicauth","cache","callstacks","capacity","certificates","cloudsettings","cluster","column","commands-and-queries","commands","commconcurrency","commpools","continuous-exports","continuous-export","databases","database","data","diagnostics","entity_groups","entity_group","entity","extentcontainers","extents","external","fabriccache","fabricclocks","fabriclocks","fabric","featureflags","follower","freshness","functions","function","ingestion","journal","materialized-views","materialized-view","memory","mempools","operations","operation","plugins","principal","queries","queryexecution","queryplan","query","request_support","rowstores","rowstore","running","schema","servicepoints","stored_query_results","stored_query_result","streamingingestion","tables","table","tcpconnections","tcpports","threadpools","version","workload_groups","workload_group"])])),rules.NameDeclaration),rules.MissingNameDeclaration),Kusto.Language.Parsing.CommandGrammar.RequiredToken("extent"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("details"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.AnyGuidLiteralOrString,shape303)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment5),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("tableName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.Literal,!0),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowExtentDetails2=Kusto.Language.Parsing.CommandGrammar.Command("ShowExtentDetails",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["basicauth","cache","callstacks","capacity","certificates","cloudsettings","cluster","column","commands-and-queries","commands","commconcurrency","commpools","continuous-exports","continuous-export","databases","database","data","diagnostics","entity_groups","entity_group","entity","extentcontainers","extents","external","fabriccache","fabricclocks","fabriclocks","fabric","featureflags","follower","freshness","functions","function","ingestion","journal","materialized-views","materialized-view","memory","mempools","operations","operation","plugins","principal","queries","queryexecution","queryplan","query","request_support","rowstores","rowstore","running","schema","servicepoints","stored_query_results","stored_query_result","streamingingestion","tables","table","tcpconnections","tcpports","threadpools","version","workload_groups","workload_group"])])),rules.NameDeclaration),rules.MissingNameDeclaration),Kusto.Language.Parsing.CommandGrammar.RequiredToken("extent"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("with"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("("),Kusto.Language.Parsing.CommandGrammar.ZeroOrMoreCommaList(fragment0),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("tableName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),ShowExtentColumnStorageStats=Kusto.Language.Parsing.CommandGrammar.Command("ShowExtentColumnStorageStats",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["basicauth","cache","callstacks","capacity","certificates","cloudsettings","cluster","column","commands-and-queries","commands","commconcurrency","commpools","continuous-exports","continuous-export","databases","database","data","diagnostics","entity_groups","entity_group","entity","extentcontainers","extents","external","fabriccache","fabricclocks","fabriclocks","fabric","featureflags","follower","freshness","functions","function","ingestion","journal","materialized-views","materialized-view","memory","mempools","operations","operation","plugins","principal","queries","queryexecution","queryplan","query","request_support","rowstores","rowstore","running","schema","servicepoints","stored_query_results","stored_query_result","streamingingestion","tables","table","tcpconnections","tcpports","threadpools","version","workload_groups","workload_group"])])),rules.NameDeclaration),Kusto.Language.Parsing.CommandGrammar.Token$1("extent"),rules.AnyGuidLiteralOrString,Kusto.Language.Parsing.CommandGrammar.Token$1("column"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),Kusto.Language.Parsing.CommandGrammar.RequiredToken("storage"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("stats"),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("tableName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("extentId",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("columnName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),ShowExtentDetails3=Kusto.Language.Parsing.CommandGrammar.Command("ShowExtentDetails",Kusto.Language.Parsing.CommandGrammar.Custom$4(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["basicauth","cache","callstacks","capacity","certificates","cloudsettings","cluster","column","commands-and-queries","commands","commconcurrency","commpools","continuous-exports","continuous-export","databases","database","data","diagnostics","entity_groups","entity_group","entity","extentcontainers","extents","external","fabriccache","fabricclocks","fabriclocks","fabric","featureflags","follower","freshness","functions","function","ingestion","journal","materialized-views","materialized-view","memory","mempools","operations","operation","plugins","principal","queries","queryexecution","queryplan","query","request_support","rowstores","rowstore","running","schema","servicepoints","stored_query_results","stored_query_result","streamingingestion","tables","table","tcpconnections","tcpports","threadpools","version","workload_groups","workload_group"])])),rules.NameDeclaration),rules.MissingNameDeclaration),Kusto.Language.Parsing.CommandGrammar.RequiredToken("extent"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.AnyGuidLiteralOrString,rules.MissingValue),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment5),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("tableName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("eid",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),ShowExtentDetails4=Kusto.Language.Parsing.CommandGrammar.Command("ShowExtentDetails",Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token("show",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.CommandGrammar.Token$2(["basicauth","cache","callstacks","capacity","certificates","cloudsettings","cluster","column","commands-and-queries","commands","commconcurrency","commpools","continuous-exports","continuous-export","databases","database","data","diagnostics","entity_groups","entity_group","entity","extentcontainers","extents","external","fabriccache","fabricclocks","fabriclocks","fabric","featureflags","follower","freshness","functions","function","ingestion","journal","materialized-views","materialized-view","memory","mempools","operations","operation","plugins","principal","queries","queryexecution","queryplan","query","request_support","rowstores","rowstore","running","schema","servicepoints","stored_query_results","stored_query_result","streamingingestion","tables","table","tcpconnections","tcpports","threadpools","version","workload_groups","workload_group"])])),rules.NameDeclaration),rules.MissingNameDeclaration),Kusto.Language.Parsing.CommandGrammar.RequiredToken("extent"),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("tableName",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD()],Kusto.Language.Syntax.CustomElementDescriptor))),TableShuffleExtents=Kusto.Language.Parsing.CommandGrammar.Command("TableShuffleExtents",Kusto.Language.Parsing.CommandGrammar.Custom$2(Kusto.Language.Parsing.CommandGrammar.Token("shuffle",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("async")),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.TableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("extents"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Kusto.Language.Syntax.SyntaxElement,[Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token$1("("),Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.AnyGuidLiteralOrString,shape233),rules.MissingValue,!1),Kusto.Language.Parsing.CommandGrammar.Token$1(")"),shape38),Kusto.Language.Parsing.CommandGrammar.Custom$6(Kusto.Language.Parsing.CommandGrammar.Token$1("("),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.OneOrMoreCommaList(Kusto.Language.Parsing.CommandGrammar.Custom$8(rules.AnyGuidLiteralOrString,shape233),rules.MissingValue,!1),missing53),Kusto.Language.Parsing.CommandGrammar.RequiredToken(")"),shape38),Kusto.Language.Parsing.CommandGrammar.Token$1("all")]),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment5),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),TableShuffleExtentsQuery=Kusto.Language.Parsing.CommandGrammar.Command("TableShuffleExtentsQuery",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("shuffle",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("async")),Kusto.Language.Parsing.CommandGrammar.RequiredToken("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.TableNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("extents"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,fragment5),Kusto.Language.Parsing.CommandGrammar.RequiredToken("<|"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.QueryInput,rules.MissingExpression),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("tableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Query",Kusto.Language.Editor.CompletionHint.Tabular)],Kusto.Language.Syntax.CustomElementDescriptor))),UndoDropTable=Kusto.Language.Parsing.CommandGrammar.Command("UndoDropTable",Kusto.Language.Parsing.CommandGrammar.Custom(Kusto.Language.Parsing.CommandGrammar.Token("undo",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.RequiredToken("drop"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Custom$7(Kusto.Language.Parsing.CommandGrammar.Token$1("as"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.None)],Kusto.Language.Syntax.CustomElementDescriptor))),Kusto.Language.Parsing.CommandGrammar.RequiredToken("version"),Kusto.Language.Parsing.CommandGrammar.RequiredToken("="),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.StringLiteral,rules.MissingStringLiteral),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.CommandGrammar.Token$1("internal")),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("Version",Kusto.Language.Editor.CompletionHint.Literal),Kusto.Language.Parsing.CommandGrammar.CD(524288,!0)],Kusto.Language.Syntax.CustomElementDescriptor))),TableDataUpdate=Kusto.Language.Parsing.CommandGrammar.Command("TableDataUpdate",Kusto.Language.Parsing.CommandGrammar.Custom$1(Kusto.Language.Parsing.CommandGrammar.Token("update",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.Token$1("table"),rules.TableNameReference,Kusto.Language.Parsing.CommandGrammar.Token$1("delete"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),Kusto.Language.Parsing.CommandGrammar.RequiredToken("append"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,fragment6,missing1),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("DeleteIdentifier",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("AppendIdentifier",Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD$1("csl")],Kusto.Language.Syntax.CustomElementDescriptor))),TableDataUpdateShortSyntax=Kusto.Language.Parsing.CommandGrammar.Command("TableDataUpdateShortSyntax",Kusto.Language.Parsing.CommandGrammar.Custom$3(Kusto.Language.Parsing.CommandGrammar.Token("update",Kusto.Language.Editor.CompletionKind.CommandPrefix),Kusto.Language.Parsing.CommandGrammar.RequiredToken("table"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.TableNameReference,rules.MissingNameReference),Kusto.Language.Parsing.CommandGrammar.RequiredToken("on"),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,rules.NameDeclaration,rules.MissingNameDeclaration),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required$1(Kusto.Language.Syntax.SyntaxElement,fragment6,missing1),System.Array.init([Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD$1("TableName",Kusto.Language.Editor.CompletionHint.Table),Kusto.Language.Parsing.CommandGrammar.CD(),Kusto.Language.Parsing.CommandGrammar.CD(Kusto.Language.Editor.CompletionHint.None),Kusto.Language.Parsing.CommandGrammar.CD$1("csl")],Kusto.Language.Syntax.CustomElementDescriptor)));return System.Array.init([AddClusterRole,AddClusterRole2,AddClusterRole3,AddClusterRole4,AddClusterBlockedPrincipals,AddClusterRole5,AddClusterRole6,AddClusterRole7,AddClusterRole8,AddClusterRole9,AddDatabaseRole,AddExternalTableAdmins,AddFollowerDatabaseAuthorizedPrincipals,AddFunctionRole,AddMaterializedViewAdmins,AddTableRole,AlterMergeExtentTagsFromQuery,AlterMergeClusterPolicyCallout,AlterMergeClusterPolicyCapacity,AlterMergeClusterPolicyDiagnostics,AlterMergeClusterPolicyIngestionBatching,AlterMergeClusterPolicyManagedIdentity,AlterMergeClusterPolicyMultiDatabaseAdmins,AlterMergeClusterPolicyQueryWeakConsistency,AlterMergeClusterPolicyRequestClassification,AlterMergeClusterPolicyRowStore,AlterMergeClusterPolicySharding,AlterMergeClusterPolicyStreamingIngestion,AlterMergeColumnPolicyEncoding,AlterMergeDatabaseIngestionMapping,AlterMergeDatabasePolicyDiagnostics,AlterMergeDatabasePolicyEncoding,AlterMergeDatabasePolicyIngestionBatching,AlterMergeDatabasePolicyManagedIdentity,AlterMergeDatabasePolicyMerge,AlterMergeDatabasePolicyMirroring,AlterMergeDatabasePolicyMirroringWithJson,AlterMergeDatabasePolicyRetention,AlterMergeDatabasePolicySharding,AlterMergeDatabasePolicyShardsGrouping,AlterMergeDatabasePolicyStreamingIngestion,AlterMergeDatabaseTableMirroringPolicyTemplates,AlterMergeEntityGroup,AlterMergeMaterializedViewPolicyMerge,AlterMergeMaterializedViewPolicyPartitioning,AlterMergeMaterializedViewPolicyRetention,AlterMergeTablePolicyEncoding,AlterMergeTablePolicyIngestionBatching,AlterMergeTablePolicyMerge,AlterMergeTablePolicyMirroring,AlterMergeTablePolicyPartitioning,AlterMergeTablePolicyRetention,AlterMergeTablePolicyRowOrder,AlterMergeTablePolicySharding,AlterMergeTablePolicyStreamingIngestion,AlterMergeTablePolicyUpdate,AlterMergeTable,AlterMergeTableColumnDocStrings,AlterMergeExtentTagsFromQuery2,AlterMergeTableIngestionMapping,AlterMergeTablePolicyMirroringWithJson,AlterMergeWorkloadGroup,AlterClusterStorageKeys,AlterDatabaseStorageKeys,AlterExtentTagsFromQuery,AlterCache,AlterClusterPolicyCaching,AlterClusterPolicyCallout,AlterClusterPolicyCapacity,AlterClusterPolicyDiagnostics,AlterClusterPolicyIngestionBatching,AlterClusterPolicyManagedIdentity,AlterClusterPolicyMultiDatabaseAdmins,AlterClusterPolicyQueryWeakConsistency,AlterClusterPolicyRequestClassification,AlterClusterPolicyRowStore,AlterClusterPolicySandbox,AlterClusterPolicySharding,AlterClusterPolicyStreamingIngestion,AlterClusterStorageKeys2,AlterColumnsPolicyEncodingByQuery,AlterColumnPolicyCaching,AlterColumnPolicyEncodingType,AlterColumnPolicyEncoding,AlterColumnType,AlterDatabaseIngestionMapping,AlterDatabasePersistMetadata,AlterDatabasePolicyCaching,AlterDatabasePolicyDiagnostics,AlterDatabasePolicyEncoding,AlterDatabasePolicyExtentTagsRetention,AlterDatabasePolicyIngestionBatching,AlterDatabasePolicyManagedIdentity,AlterDatabasePolicyMerge,AlterDatabasePolicyMirroring,AlterDatabasePolicyMirroringWithJson,AlterDatabasePolicyRetention,AlterDatabasePolicySharding,AlterDatabasePolicyShardsGrouping,AlterDatabasePolicyStreamingIngestion,AlterDatabaseTableMirroringPolicyTemplates,AlterDatabasePrettyName,AlterDatabaseStorageKeys2,AlterEntityGroup,AlterExtentContainersAdd,AlterExtentContainersDrop,AlterExtentContainersRecycle,AlterExtentContainersSet,AlterStorageExternalTable,AlterStorageExternalTable2,AlterStorageExternalTable3,AlterSqlExternalTable,AlterStorageExternalTable4,AlterExternalTableDocString,AlterExternalTableFolder,AlterStorageExternalTable5,AlterExternalTableMapping,AlterFabricServiceAssignmentsCommand,AlterFollowerClusterConfiguration,AlterFollowerDatabaseConfiguration,AlterFollowerDatabaseConfiguration2,AlterFollowerDatabaseChildEntities,AlterFollowerTablesPolicyCaching,AlterFollowerDatabaseChildEntities2,AlterFollowerDatabaseChildEntities3,AlterFollowerTablesPolicyCaching2,AlterFollowerDatabaseConfiguration3,AlterFollowerDatabaseAuthorizedPrincipals,AlterFollowerDatabaseConfiguration4,AlterFollowerDatabaseConfiguration5,AlterFollowerTablesPolicyCaching3,AlterFollowerDatabaseChildEntities4,AlterFollowerDatabaseChildEntities5,AlterFollowerTablesPolicyCaching4,AlterFunction,AlterFunctionDocString,AlterFunctionFolder,AlterFunction2,AlterMaterializedViewOverMaterializedView,AlterMaterializedView,AlterMaterializedViewAutoUpdateSchema,AlterMaterializedViewDocString,AlterMaterializedViewFolder,AlterMaterializedViewLookback,AlterMaterializedViewOverMaterializedView2,AlterMaterializedView2,AlterMaterializedViewPolicyCaching,AlterMaterializedViewPolicyPartitioning,AlterMaterializedViewPolicyRetention,AlterMaterializedViewPolicyRowLevelSecurity,AlterPoliciesOfRetention,AlterTablesPolicyCaching,AlterTablesPolicyIngestionBatching,AlterTablesPolicyIngestionTime,AlterTablesPolicyMerge,AlterTablesPolicyRestrictedViewAccess,AlterTablesPolicyRetention,AlterTablesPolicyRowOrder,AlterTableColumnStatisticsMethod,AlterTablePolicyAutoDelete,AlterTablePolicyCaching,AlterTablePolicyEncoding,AlterTablePolicyExtentTagsRetention,AlterTablePolicyIngestionBatching,AlterTablePolicyIngestionTime,AlterTablePolicyMerge,AlterTablePolicyMirroring,AlterTablePolicyPartitioning,AlterTablePolicyRestrictedViewAccess,AlterTablePolicyRetention,AlterTablePolicyRowLevelSecurity,AlterTablePolicyRowOrder,AlterTablePolicySharding,AlterTablePolicyStreamingIngestion,AlterTablePolicyUpdate,AlterTableRowStoreReferencesDisableBlockedKeys,AlterTableRowStoreReferencesDisableKey,AlterTableRowStoreReferencesDisableRowStore,AlterTableRowStoreReferencesDropBlockedKeys,AlterTableRowStoreReferencesDropKey,AlterTableRowStoreReferencesDropRowStore,AlterTable,AlterTableColumnDocStrings,AlterTableColumnsPolicyEncoding,AlterTableColumnStatistics,AlterTableDocString,AlterExtentTagsFromQuery2,AlterTableFolder,AlterTableIngestionMapping,AlterTablePolicyMirroringWithJson,AppendTable,ApplyTableMirroringPolicyTemplateToTables,AttachExtentsIntoTableByMetadata,AttachDatabase,AttachExtentsIntoTableByMetadata2,AttachExtentsIntoTableByContainer,AttachExtentsIntoTableByMetadata3,AttachDatabase2,CancelOperation,CancelQuery,CleanDatabaseExtentContainers,ClearTableData,ClearRemoteClusterDatabaseSchema,ClearClusterCredStoreCache,ClearExternalArtifactsCache,ClearClusterGroupMembershipCache,ClearDatabaseCacheQueryResults,ClearDatabaseCacheQueryWeakConsistency,ClearDatabaseCacheStreamingIngestionSchema,ClearMaterializedViewData,ClearMaterializedViewStatistics,ClearTableCacheStreamingIngestionSchema,ClearTableData2,CreateMergeTables,CreateMergeTable,CreateOrAlterContinuousExport,CreateOrAlterDatabaseIngestionMapping,CreateOrAlterEntityGroupCommand,CreateOrAlterStorageExternalTable,CreateOrAlterStorageExternalTable2,CreateOrAlterStorageExternalTable3,CreateOrAlterSqlExternalTable,CreateOrAlterStorageExternalTable4,CreateOrAlterStorageExternalTable5,CreateOrAlterFunction,CreateOrAlterMaterializedViewOverMaterializedView,CreateOrAlterMaterializedView,CreateOrAlterTableIngestionMapping,CreateOrAleterWorkloadGroup,CreateMaterializedViewOverMaterializedView,CreateMaterializedView,CreateBasicAuthUser,CreateDatabase,CreateDatabaseIngestionMapping,CreateDatabase2,CreateDatabase3,CreateDatabase4,CreateDatabase5,CreateEntityGroupCommand,CreateStorageExternalTable,CreateStorageExternalTable2,CreateStorageExternalTable3,CreateSqlExternalTable,CreateStorageExternalTable4,CreateStorageExternalTable5,CreateExternalTableMapping,CreateFunction,CreateMaterializedViewOverMaterializedView2,CreateMaterializedView2,CreateMaterializedViewOverMaterializedView3,CreateMaterializedView3,CreateRequestSupport,CreateRowStore,CreateTables,CreateTable,CreateTableBasedOnAnother,CreateTableIngestionMapping,CreateTempStorage,DefineTables,DefineTable,DeleteMaterializedViewRecords,DeleteTableRecords,DeleteClusterPolicyCaching,DeleteClusterPolicyCallout,DeleteClusterPolicyManagedIdentity,DeleteClusterPolicyRequestClassification,DeleteClusterPolicyRowStore,DeleteClusterPolicySandbox,DeleteClusterPolicySharding,DeleteClusterPolicyStreamingIngestion,DeleteColumnPolicyCaching,DeleteColumnPolicyEncoding,DeleteDatabasePolicyCaching,DeleteDatabasePolicyDiagnostics,DeleteDatabasePolicyEncoding,DeleteDatabasePolicyExtentTagsRetention,DeleteDatabasePolicyIngestionBatching,DeleteDatabasePolicyManagedIdentity,DeleteDatabasePolicyMerge,DeleteDatabasePolicyMirroring,DeleteDatabasePolicyRetention,DeleteDatabasePolicySharding,DeleteDatabasePolicyShardsGrouping,DeleteDatabasePolicyStreamingIngestion,DropDatabaseTableMirroringPolicyTemplates,DropFollowerTablesPolicyCaching,DropFollowerTablesPolicyCaching2,DropFollowerDatabasePolicyCaching,DropFollowerTablesPolicyCaching3,DropFollowerTablesPolicyCaching4,DeleteMaterializedViewRecords2,DeleteMaterializedViewPolicyCaching,DeleteMaterializedViewPolicyPartitioning,DeleteMaterializedViewPolicyRowLevelSecurity,DeletePoliciesOfRetention,DeleteTablePolicyAutoDelete,DeleteTablePolicyCaching,DeleteTablePolicyEncoding,DeleteTablePolicyExtentTagsRetention,DeleteTablePolicyIngestionBatching,DeleteTablePolicyIngestionTime,DeleteTablePolicyMerge,DeleteTablePolicyMirroring,DeleteTablePolicyPartitioning,DeleteTablePolicyRestrictedViewAccess,DeleteTablePolicyRetention,DeleteTablePolicyRowLevelSecurity,DeleteTablePolicyRowOrder,DeleteTablePolicySharding,DeleteTablePolicyStreamingIngestion,DeleteTablePolicyUpdate,DeleteTableRecords2,DetachDatabase,DropRowStore,DisableContinuousExport,DisableDatabaseStreamingIngestionMaintenanceMode,DisableDatabaseMaintenanceMode,EnableDisableMaterializedView,DisablePlugin,DropPretendExtentsByProperties,DropEmptyExtentContainers,DropExtentTagsFromTable,DropExtentTagsFromQuery,DropExtentTagsFromQuery2,DropBasicAuthUser,DropClusterRole,DropClusterRole2,DropClusterRole3,DropClusterRole4,DropClusterBlockedPrincipals,DropClusterRole5,DropClusterRole6,DropClusterRole7,DropClusterRole8,DropClusterRole9,DropColumn,DropContinuousExport,DropDatabaseRole,DetachDatabase2,DropDatabaseIngestionMapping,DropDatabaseRole2,DropDatabaseRole3,DropDatabasePrettyName,DetachDatabase3,DropDatabaseRole4,DropDatabaseRole5,DropDatabaseRole6,DetachDatabase4,DropEmptyExtentContainers2,DropEntityGroup,DropExtents,DropExtents2,DropExtents3,DropExtents4,DropExtentsPartitionMetadata,DropExtents5,DropExtentTagsRetention,DropExtent,DropExternalTableAdmins,DropExternalTableMapping,DropExternalTable,DropFabricServiceAssignmentsCommand,DropFollowerDatabases,DropFollowerDatabases2,DropFollowerDatabaseAuthorizedPrincipals,DropFunctions,DropFunctionRole,DropFunction,DropFunction2,DropMaterializedViewAdmins,DropMaterializedView,DropRowStore2,StoredQueryResultsDrop,StoredQueryResultDrop,DropStoredQueryResultContainers,DropTables,DropTableRole,DropTableColumns,DropExtentTagsFromTable2,DropExtentTagsFromQuery3,DropExtentTagsFromQuery4,DropTable,DropTableIngestionMapping,DropTableRole2,DropTable2,DropTempStorage,DropUnusedStoredQueryResultContainers,DropWorkloadGroup,EnableContinuousExport,EnableDatabaseStreamingIngestionMaintenanceMode,EnableDatabaseMaintenanceMode,EnableDisableMaterializedView2,EnablePlugin,ExecuteClusterScript,ExecuteDatabaseScript,ExecuteDatabaseScript2,ExportToStorage,ExportToStorage2,ExportToStorage3,ExportToStorage4,ExportToSqlTable,ExportToExternalTable,ExportToStorage5,IngestIntoTable,IngestInlineIntoTable,IngestIntoTable2,AttachDatabase3,MergeExtents,MergeDatabaseShardGroups,MergeExtentsDryrun,MergeExtents2,MoveExtentsFrom,MoveExtentsFrom2,MoveExtentsQuery,PatchExtentCorruptedDatetime,RenameColumns,RenameColumn,RenameMaterializedView,RenameTables,RenameTable,ReplaceExtents,ReplaceDatabaseKeyVaultSecrets,ReplaceExtents2,SetOrAppendTable,StoredQueryResultSetOrReplace,SetOrReplaceTable,SetAccess,StoredQueryResultSet,SetTable,SetClusterRole,SetContinuousExportCursor,SetDatabaseRole,SetDatabaseRole2,SetDatabaseRole3,AlterDatabasePrettyName2,SetDatabaseRole4,SetDatabaseRole5,SetDatabaseRole6,SetExternalTableAdmins,SetFunctionRole,SetMaterializedViewAdmins,SetMaterializedViewConcurrency,SetMaterializedViewCursor,StoredQueryResultSet2,SetTableRowStoreReferences,SetTableRole,SetTable2,ShowBasicAuthUsers,ShowCache,ShowCallStacks,ShowCapacity,ShowCertificates,ShowCloudSettings,ShowClusterAdminState,ShowClusterBlockedPrincipals,ShowClusterDatabasesDataStats,ShowClusterDatabasesDetails,ShowClusterDatabasesIdentity,ShowClusterDatabasesMetadata,ShowClusterDatabasesPolicies,ShowClusterDatabasesDetails2,ShowClusterDatabases,ShowClusterDetails,ShowClusterExtentsMetadata,ShowClusterExtents,ShowClusterExtents2,ShowClusterExtents3,ShowIngestionMappings,ShowClusterJournal,ShowClusterMonitoring,ShowClusterNetwork,ShowClusterPendingContinuousExports,ShowClusterPolicyCaching,ShowClusterPolicyCallout,ShowClusterPolicyCapacity,ShowClusterPolicyDiagnostics,ShowClusterPolicyIngestionBatching,ShowClusterPolicyManagedIdentity,ShowClusterPolicyMultiDatabaseAdmins,ShowClusterPolicyQueryWeakConsistency,ShowClusterPolicyRequestClassification,ShowClusterPolicyRowStore,ShowClusterPolicySandbox,ShowClusterPolicySharding,ShowClusterPolicyStreamingIngestion,ShowClusterPrincipals,ShowClusterPrincipalRoles,ShowClusterSandboxesStats,ShowClusterScaleIn,ShowSchema,ShowClusterServices,ShowClusterStorageKeysHash,ShowCluster,ShowColumnPolicyCaching,ShowColumnPolicyCaching2,ShowColumnPolicyEncoding,ShowCommandsAndQueries,ShowCommands,ShowCommConcurrency,ShowCommPools,ShowContinuousExports,ShowContinuousExportExportedArtifacts,ShowContinuousExportFailures,ShowContinuousExport,ShowClusterDatabasesDataStats2,ShowClusterDatabasesDetails3,ShowClusterDatabasesIdentity2,ShowClusterDatabasesMetadata2,ShowClusterDatabasesPolicies2,ShowClusterDatabasesDetails4,ShowClusterDatabases2,ShowClusterDatabasesDataStats3,ShowClusterDatabasesDetails5,ShowDatabaseExtentsMetadata,ShowDatabaseExtents,ShowDatabaseExtents2,ShowDatabaseExtents3,ShowClusterDatabasesIdentity3,ShowClusterDatabasesMetadata3,ShowClusterDatabasesPolicies3,ShowDatabasesSchemaAsJson,ShowDatabasesSchemaAsJson2,ShowDatabasesSchema,ShowDatabasesSchema2,ShowClusterDatabasesDetails6,ShowClusterDatabases3,ShowClusterDatabasesDataStats4,ShowClusterDatabasesDetails7,ShowDatabaseExtentsMetadata2,ShowDatabaseExtents4,ShowDatabaseExtents5,ShowDatabaseExtents6,ShowClusterDatabasesIdentity4,ShowClusterDatabasesMetadata4,ShowClusterDatabasesPolicies4,ShowDatabasesSchemaAsJson3,ShowDatabasesSchemaAsJson4,ShowDatabasesSchema3,ShowDatabasesSchema4,ShowClusterDatabasesDetails8,ShowClusterDatabases4,ShowDatabasesSchemaAsJson5,ShowDatabasesSchemaAsJson6,ShowDatabasesSchema5,ShowDatabasesSchema6,ShowClusterDatabasesDataStats5,ShowClusterDatabasesDetails9,ShowDatabasesEntities,ShowClusterDatabasesIdentity5,ShowDatabasesManagementGroups,ShowClusterDatabasesMetadata5,ShowClusterDatabasesPolicies5,ShowDatabasesSchemaAsJson7,ShowDatabasesSchemaAsJson8,ShowDatabasesSchema7,ShowDatabasesSchema8,ShowClusterDatabasesDetails10,ShowClusterDatabases5,ShowDatabasePolicyCaching,ShowDatabasePolicyExtentTagsRetention,ShowDatabasePolicyIngestionBatching,ShowDatabasePolicyMerge,ShowDatabasePolicyRetention,ShowDatabasePolicySharding,ShowDatabasePolicyShardsGrouping,ShowDatabaseCacheQueryResults,ShowDatabaseCslSchema,ShowDatabaseDataStats,ShowDatabaseDetails,ShowDatabaseExtentsMetadata3,ShowDatabaseExtents7,ShowDatabaseExtents8,ShowDatabaseExtents9,ShowDatabaseExtentsMetadata4,ShowDatabaseExtents10,ShowDatabaseExtents11,ShowDatabaseExtents12,ShowDatabaseExtentsMetadata5,ShowDatabaseExtentsPartitioningStatistics,ShowDatabaseExtents13,ShowDatabaseExtents14,ShowDatabaseExtents15,ShowDatabaseExtentTagsStatistics,ShowDatabaseIdentity,ShowDatabaseIngestionMappings,ShowDatabaseKeyVaultSecrets,ShowDatabaseCslSchema2,ShowDatabaseMetadata,ShowDatabasePolicies,ShowDatabasePolicyCaching2,ShowDatabasePolicyExtentTagsRetention2,ShowDatabasePolicyIngestionBatching2,ShowDatabasePolicyMerge2,ShowDatabasePolicyRetention2,ShowDatabasePolicySharding2,ShowDatabasePolicyShardsGrouping2,ShowDatabasePrincipals,ShowDatabaseSchemaAsCslScript,ShowDatabaseSchemaAsJson,ShowDatabaseSchemaAsCslScript2,ShowDatabaseSchema,ShowDatabaseSchemaAsCslScript3,ShowDatabaseSchemaAsJson2,ShowDatabaseSchemaAsCslScript4,ShowDatabaseSchema2,ShowDatabaseSchemaViolations,ShowDatabaseSchema3,DatabaseShardGroupsStatisticsShow,ShowDatabaseDetails2,ShowDatabase,ShowDatabaseCslSchema3,ShowDatabaseEntity,ShowDatabaseExtentContainersCleanOperations,ShowDatabaseExtentsMetadata6,ShowDatabaseExtents16,ShowDatabaseExtents17,ShowDatabaseExtents18,ShowDatabaseExtentsMetadata7,ShowDatabaseExtents19,ShowDatabaseExtents20,ShowDatabaseExtents21,ShowDatabaseExtentsMetadata8,ShowDatabaseExtentsPartitioningStatistics2,ShowDatabaseExtents22,ShowDatabaseExtents23,ShowDatabaseExtents24,ShowDatabaseIngestionMappings2,ShowDatabaseJournal,ShowDatabaseCslSchema4,ShowDatabasePolicyCaching3,ShowDatabasePolicyDiagnostics,ShowDatabasePolicyEncoding,ShowDatabasePolicyExtentTagsRetention3,ShowDatabasePolicyHardRetentionViolations,ShowDatabasePolicyIngestionBatching3,ShowDatabasePolicyManagedIdentity,ShowDatabasePolicyMerge3,ShowDatabasePolicyMirroring,ShowDatabasePolicyRetention3,ShowDatabasePolicySharding3,ShowDatabasePolicyShardsGrouping3,ShowDatabasePolicySoftRetentionViolations,ShowDatabasePolicyStreamingIngestion,ShowDatabaseTableMirroringPolicyTemplates,ShowDatabasePrincipals2,ShowDatabasePrincipalRoles,ShowDatabasePurgeOperation,ShowDatabaseSchemaAsCslScript5,ShowDatabaseSchemaAsJson3,ShowDatabaseSchemaAsCslScript6,ShowDatabaseSchema4,ShowDatabaseSchemaAsCslScript7,ShowDatabaseSchemaAsJson4,ShowDatabaseSchemaAsCslScript8,ShowDatabaseSchema5,ShowDatabaseSchemaViolations2,ShowDatabaseSchema6,DatabaseShardGroupsStatisticsShow2,ShowDatabase2,ShowDataOperations,ShowDiagnostics,ShowEntityGroups,ShowEntityGroup,ShowEntitySchema,ShowExtentContainers,ShowExtentCorruptedDatetime,ShowExternalTables,ShowExternalTableArtifacts,ShowExternalTableCslSchema,ShowExternalTableCslSchema2,ShowExternalTableMappings,ShowExternalTableMapping,ShowExternalTablePrincipals,ShowExternalTablesPrincipalRoles,ShowExternalTableSchema,ShowExternalTable,ShowExternalTable2,ShowFabricCache,ShowFabricClocks,ShowFabricLocks,ShowFabric,ShowFeatureFlags,ShowFollowerDatabase,ShowFreshness,ShowFunctions,ShowFunctionPrincipals,ShowFunctionPrincipalRoles,ShowFunctionSchemaAsJson,ShowFunction,ShowFunction2,ShowIngestionMappings2,ShowIngestionMappings3,ShowIngestionMappings4,ShowIngestionFailures,ShowIngestionMappings5,ShowIngestionMappings6,ShowIngestionMappings7,ShowIngestionMappings8,ShowIngestionMappings9,ShowIngestionMappings10,ShowJournal,ShowMaterializedViewsDetails,ShowMaterializedViewsDetails2,ShowMaterializedViews,ShowMaterializedViewCslSchema,ShowMaterializedViewDetails,ShowMaterializedViewDiagnostics,ShowMaterializedViewExtents,ShowMaterializedViewFailures,ShowMaterializedViewCslSchema2,ShowMaterializedViewPolicyMerge,ShowMaterializedViewPolicyPartitioning,ShowMaterializedViewPolicyRetention,ShowMaterializedViewPrincipals,ShowMaterializedViewSchemaAsJson,ShowMaterializedViewStatistics,ShowMaterializedView,ShowMaterializedViewPolicyCaching,ShowMaterializedViewPolicyRowLevelSecurity,ShowMemory,ShowMemPools,ShowOperations,ShowOperationDetails,ShowPlugins,ShowPrincipalAccess,ShowPrincipalRoles,ShowPrincipalRoles2,ShowQueries,ShowQueryExecution,ShowQueryPlan,ShowQueryCallTree,ShowRequestSupport,ShowRowStores,ShowRowStoreSeals,ShowRowStoreTransactions,ShowRowStore,ShowRunningQueries,ShowSchema2,ShowServicePoints,StoredQueryResultsShow,StoredQueryResultShowSchema,ShowStreamingIngestionFailures,ShowStreamingIngestionStatistics,ShowTablesDetails,ShowTableExtentsMetadata,ShowTableExtents,ShowTableExtents2,ShowTableExtents3,TablesShardGroupsStatisticsShow,ShowTables,ShowTablesColumnStatistics,ShowTablesDetails2,TablesShardGroupsStatisticsShow2,ShowTables2,ShowTableOperationsMirroringStatus,ShowTableStarPolicyCaching,ShowTableStarPolicyExtentTagsRetention,ShowTableStarPolicyIngestionBatching,ShowTableStarPolicyIngestionTime,ShowTableStarPolicyMerge,ShowTableStarPolicyMirroring,ShowTableStarPolicyPartitioning,ShowTableStarPolicyRestrictedViewAccess,ShowTableStarPolicyRetention,ShowTableStarPolicyRowLevelSecurity,ShowTableStarPolicyRowOrder,ShowTableStarPolicySharding,ShowTableStarPolicyUpdate,ShowTablePolicyAutoDelete,ShowTablePolicyCaching,ShowTablePolicyEncoding,ShowTablePolicyExtentTagsRetention,ShowTablePolicyIngestionBatching,ShowTablePolicyIngestionTime,ShowTablePolicyMerge,ShowTablePolicyMirroring,ShowTablePolicyPartitioning,ShowTablePolicyRestrictedViewAccess,ShowTablePolicyRetention,ShowTablePolicyRowLevelSecurity,ShowTablePolicyRowOrder,ShowTablePolicySharding,ShowTablePolicyStreamingIngestion,ShowTablePolicyUpdate,ShowTableRowStoreReferences,ShowTableRowStoreSealInfo,ShowTableRowStores,ShowTableColumnsClassification,ShowTableColumnStatitics,ShowTableCslSchema,ShowTableDataStatistics,ShowTableDetails,ShowTableDimensions,ShowExtentCorruptedDatetime2,ShowTableExtentsMetadata2,ShowTableExtents4,ShowTableExtents5,ShowTableExtents6,ShowTableIngestionMappings,ShowTableIngestionMapping,ShowTableCslSchema2,ShowTableOperationsMirroringExportedArtifacts,ShowTableOperationsMirroringFailures,ShowTableOperationsMirroringStatus2,ShowTablePrincipals,ShowTablePrincipalRoles,ShowTableSchemaAsJson,TableShardGroupsStatisticsShow,TableShardGroupsShow,TableShardsGroupMetadataShow,TableShardsGroupShow,ShowTable,ShowTcpConnections,ShowTcpPorts,ShowThreadPools,ShowVersion,ShowWorkloadGroups,ShowWorkloadGroup,ShowExtentDetails,ShowExtentDetails2,ShowExtentColumnStorageStats,ShowExtentDetails3,ShowExtentDetails4,TableShuffleExtents,TableShuffleExtentsQuery,UndoDropTable,TableDataUpdate,TableDataUpdateShortSyntax],Kusto.Language.Parsing.Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Command))}}});Bridge.define("Kusto.Language.Parsing.FailsParser$1",function(TInput){return{inherits:[Kusto.Language.Parsing.Parser$1(TInput)],props:{Pattern:null,IsNegation:{get:function(){return!0}},ChildParserCount:{get:function(){return 1}}},ctors:{ctor:function(pattern){this.$initialize();Kusto.Language.Parsing.Parser$1(TInput).ctor.call(this);this.Pattern=pattern}},methods:{Clone:function(){return new(Kusto.Language.Parsing.FailsParser$1(TInput))(this.Pattern)},GetChildParser:function(index){return index===0?this.Pattern:null},Accept$2:function(visitor){visitor.VisitFails(this)},Accept:function(TResult,visitor){return visitor.VisitFails(this)},Accept$1:function(TArg,TResult,visitor,arg){return visitor.VisitFails(this,arg)},Parse:function(source,inputStart,output,outputStart){return this.Scan(source,inputStart)},Scan:function(source,start){return source.IsEnd(start)?0:this.Pattern.Scan(source,start)>=0?-1:0}}}});Bridge.define("Kusto.Language.Parsing.FirstParser$1",function(TInput){return{inherits:[Kusto.Language.Parsing.Parser$1(TInput)],fields:{_parsers:null},props:{Parsers:{get:function(){return this._parsers}},IsAlternation:{get:function(){return!0}},ChildParserCount:{get:function(){return this._parsers.length}}},ctors:{ctor:function(parsers){var $t;this.$initialize();Kusto.Language.Parsing.Parser$1(TInput).ctor.call(this);this._parsers=($t=Kusto.Language.Parsing.Parser$1(TInput),System.Linq.Enumerable.from(parsers,$t).ToArray($t))}},methods:{GetChildParser:function(index){return index>=0&&index<this._parsers.length?this._parsers[System.Array.index(index,this._parsers)]:null},Accept$2:function(visitor){visitor.VisitFirst(this)},Accept:function(TResult,visitor){return visitor.VisitFirst(this)},Accept$1:function(TArg,TResult,visitor,arg){return visitor.VisitFirst(this,arg)},Clone:function(){return new(Kusto.Language.Parsing.FirstParser$1(TInput))(this.Parsers)},Parse:function(source,inputStart,output,outputCount){for(var parser,length,minLength=-1,i=0;i<this._parsers.length;i=i+1|0){if(parser=this._parsers[System.Array.index(i,this._parsers)],length=parser.Parse(source,inputStart,output,outputCount),length>=0)return length;length<minLength&&(minLength=length)}return minLength},Scan:function(source,start){for(var parser,n,minLength=-1,i=0;i<this._parsers.length;i=i+1|0){if(parser=this._parsers[System.Array.index(i,this._parsers)],n=parser.Scan(source,start),n>=0)return n;n<minLength&&(minLength=n)}return minLength}}}});Bridge.define("Kusto.Language.Parsing.IfParser$1",function(TInput){return{inherits:[Kusto.Language.Parsing.Parser$1(TInput)],props:{Test:null,Parser:null,IsConditional:{get:function(){return!0}},ChildParserCount:{get:function(){return 2}}},ctors:{ctor:function(test,parser){this.$initialize();Kusto.Language.Parsing.Parser$1(TInput).ctor.call(this);this.Test=test;this.Parser=parser}},methods:{GetChildParser:function(index){switch(index){case 0:return this.Test;case 1:return this.Parser;default:return null}},Accept$2:function(visitor){visitor.VisitIf(this)},Accept:function(TResult,visitor){return visitor.VisitIf(this)},Accept$1:function(TArg,TResult,visitor,arg){return visitor.VisitIf(this,arg)},Clone:function(){return new(Kusto.Language.Parsing.IfParser$1(TInput))(this.Test,this.Parser)},Parse:function(source,inputStart,output,outputStart){var length=this.Test.Scan(source,inputStart);return length<0?length:this.Parser.Parse(source,inputStart,output,outputStart)},Scan:function(source,start){var length=this.Test.Scan(source,start);return length<0?length:this.Parser.Scan(source,start)}}}});Bridge.define("Kusto.Language.Parsing.LexicalToken",{props:{Kind:0,Trivia:null,Text:null,Diagnostics:null,Length:{get:function(){return this.Trivia.length+this.Text.length|0}},DebugText:{get:function(){return this.Text.length>0?this.Text:Kusto.Language.Syntax.SyntaxFacts.GetText(this.Kind)}}},ctors:{$ctor1:function(kind,trivia,text,diagnostics){diagnostics===void 0&&(diagnostics=null);var $t,$t1;this.$initialize();this.Kind=kind;this.Trivia=($t=trivia,$t!=null?$t:"");this.Text=($t1=text,$t1!=null?$t1:"");this.Diagnostics=diagnostics||Kusto.Language.Diagnostic.NoDiagnostics},ctor:function(kind,trivia,text,diagnostic){Kusto.Language.Parsing.LexicalToken.$ctor1.call(this,kind,trivia,text,diagnostic!=null?System.Array.init([diagnostic],Kusto.Language.Diagnostic):null)}}});Bridge.define("Kusto.Language.Parsing.LimitSource$1",function(TInput){return{inherits:[Kusto.Language.Parsing.Source$1(TInput)],fields:{_source:null,_limit:0},ctors:{ctor:function(source,limit){this.$initialize();Kusto.Language.Parsing.Source$1(TInput).ctor.call(this);this._source=source;this._limit=limit}},methods:{IsEnd:function(n){return n===void 0&&(n=0),n>=this._limit||this._source.IsEnd(n)},Peek:function(n){return n===void 0&&(n=0),this._source.Peek(n)}}}});Bridge.define("Kusto.Language.Parsing.MatchParser$1",function(TInput){return{inherits:[Kusto.Language.Parsing.Parser$1(TInput)],props:{Consumer:null,IsMatch:{get:function(){return!0}},ChildParserCount:{get:function(){return 0}}},ctors:{ctor:function(consumer){this.$initialize();Kusto.Language.Parsing.Parser$1(TInput).ctor.call(this);this.Consumer=consumer},$ctor1:function(predicate){Kusto.Language.Parsing.MatchParser$1(TInput).ctor.call(this,function(source,start){return!source.IsEnd(start)&&predicate(source.Peek(start))?1:-1})}},methods:{GetChildParser:function(index){return null},Clone:function(){return new(Kusto.Language.Parsing.MatchParser$1(TInput).ctor)(this.Consumer)},Accept$2:function(visitor){visitor.VisitMatch(this)},Accept:function(TResult,visitor){return visitor.VisitMatch(this)},Accept$1:function(TArg,TResult,visitor,arg){return visitor.VisitMatch(this,arg)},Scan:function(source,start){return this.Consumer(source,start)},Parse:function(source,inputStart,output,outputStart){return this.Scan(source,inputStart)}}}});Bridge.define("Kusto.Language.Parsing.NotParser$1",function(TInput){return{inherits:[Kusto.Language.Parsing.Parser$1(TInput)],props:{Pattern:null,IsNegation:{get:function(){return!0}},ChildParserCount:{get:function(){return 1}}},ctors:{ctor:function(parser){this.$initialize();Kusto.Language.Parsing.Parser$1(TInput).ctor.call(this);this.Pattern=parser}},methods:{GetChildParser:function(index){return index===0?this.Pattern:null},Clone:function(){return new(Kusto.Language.Parsing.NotParser$1(TInput))(this.Pattern)},Accept$2:function(visitor){visitor.VisitNot(this)},Accept:function(TResult,visitor){return visitor.VisitNot(this)},Accept$1:function(TArg,TResult,visitor,arg){return visitor.VisitNot(this,arg)},Parse:function(source,inputStart,output,outputStart){return this.Scan(source,inputStart)},Scan:function(source,start){return source.IsEnd(start)?-1:this.Pattern.Scan(source,start)>=0?-1:1}}}});Bridge.define("Kusto.Language.Parsing.OneOrMoreParser$1",function(TInput){return{inherits:[Kusto.Language.Parsing.Parser$1(TInput)],props:{Parser:null,IsRepetition:{get:function(){return!0}},ChildParserCount:{get:function(){return 1}}},ctors:{ctor:function(parser){this.$initialize();Kusto.Language.Parsing.Parser$1(TInput).ctor.call(this);this.Parser=parser}},methods:{GetChildParser:function(index){return index===0?this.Parser:null},Accept$2:function(visitor){visitor.VisitOneOrMore(this)},Accept:function(TResult,visitor){return visitor.VisitOneOrMore(this)},Accept$1:function(TArg,TResult,visitor,arg){return visitor.VisitOneOrMore(this,arg)},Clone:function(){return new(Kusto.Language.Parsing.OneOrMoreParser$1(TInput))(this.Parser)},Parse:function(source,inputStart,output,outputStart){var firstLen=this.Parser.Parse(source,inputStart,output,output.Count),length,len;if(firstLen<0)return firstLen;for(length=firstLen;;)if(len=this.Parser.Parse(source,inputStart+length|0,output,output.Count),len<=0)return length;else length=length+len|0},Scan:function(source,start){var n=this.Parser.Scan(source,start),len;if(n<0)return n;for(len=n;;){if(n=this.Parser.Scan(source,start+len|0),n<=0)break;len=len+n|0}return len}}}});Bridge.define("Kusto.Language.Parsing.ScannerExtensions.ReuseableTextSource",{inherits:[Kusto.Language.Parsing.Source$1(System.Char)],$kind:"nested class",fields:{_source:null,_offset:0,_end:0},ctors:{init:function(){this._source=""},ctor:function(){this.$initialize();Kusto.Language.Parsing.Source$1(System.Char).ctor.call(this)}},methods:{Init$1:function(source,offset,length){this._source=source;this._offset=offset;this._end=offset+length|0},Init:function(source){this.Init$1(source,0,source.length)},Clear:function(){this._source="";this._offset=0;this._end=0},Peek:function(n){return n===void 0&&(n=0),(this._offset+n|0)<this._end?this._source.charCodeAt(this._offset+n|0):0},IsEnd:function(n){return n===void 0&&(n=0),(this._offset+n|0)>=this._end}}});Bridge.define("Kusto.Language.Parsing.SequenceParser$1",function(TInput){return{inherits:[Kusto.Language.Parsing.Parser$1(TInput)],fields:{_parsers:null},props:{Parsers:{get:function(){return this._parsers}},IsSequence:{get:function(){return!0}},ChildParserCount:{get:function(){return this._parsers.length}}},ctors:{ctor:function(parsers){var $t;this.$initialize();Kusto.Language.Parsing.Parser$1(TInput).ctor.call(this);this._parsers=($t=Kusto.Language.Parsing.Parser$1(TInput),System.Linq.Enumerable.from(parsers,$t).ToArray($t))}},methods:{GetChildParser:function(index){return index>=0&&index<this._parsers.length?this._parsers[System.Array.index(index,this._parsers)]:null},Accept$2:function(visitor){visitor.VisitSequence(this)},Accept:function(TResult,visitor){return visitor.VisitSequence(this)},Accept$1:function(TArg,TResult,visitor,arg){return visitor.VisitSequence(this,arg)},Clone:function(){return new(Kusto.Language.Parsing.SequenceParser$1(TInput))(this.Parsers)},Parse:function(source,inputStart,output,outputStart){for(var parser,len,length=0,originalOutputCount=output.Count,i=0;i<this._parsers.length;i=i+1|0){if(parser=this._parsers[System.Array.index(i,this._parsers)],len=parser.Parse(source,inputStart+length|0,output,output.Count),len<0)return Kusto.Language.Utils.ListExtensions.SetCount(System.Object,output,originalOutputCount),(-length|0)+len|0;length=length+len|0}return length},Scan:function(source,start){for(var parser,n,len=0,i=0;i<this._parsers.length;i=i+1|0){if(parser=this._parsers[System.Array.index(i,this._parsers)],n=parser.Scan(source,start+len|0),n<0)return n-len|0;len=len+n|0}return len}}}});Bridge.define("Kusto.Language.Parsing.StackSafeParser$1",function(TInput){return{inherits:[Kusto.Language.Parsing.ParserVisitor$2(TInput,Kusto.Language.Parsing.Parser$1(TInput))],statics:{methods:{Scan:function(parser,source,start){return Kusto.Language.Parsing.SafeScanner.ScanSafe(TInput,parser,source,start)}}},fields:{source:null,output:null,stack:null,stackPosition:0,state:null,scanner:null},ctors:{ctor:function(source,output){this.$initialize();Kusto.Language.Parsing.ParserVisitor$2(TInput,Kusto.Language.Parsing.Parser$1(TInput)).ctor.call(this);this.stack=new(System.Collections.Generic.List$1(Kusto.Language.Parsing.StackSafeParser$1.ParseState(TInput)).ctor);this.stackPosition=-1;this.scanner=new(Kusto.Language.Parsing.StackSafeScanner$1(TInput))(source);this.Initialize(source,output)}},methods:{Initialize:function(source,output){this.source=source;this.output=output;this.scanner.Initialize(source)},Clear:function(){this.source=null;this.output=null;this.scanner.Clear()},Push:function(parser,inputStart,outputStart){this.stackPosition=this.stackPosition+1|0;this.stackPosition===this.stack.Count&&this.stack.add(new(Kusto.Language.Parsing.StackSafeParser$1.ParseState(TInput)));this.state=this.stack.getItem(this.stackPosition);this.state.Init(parser,inputStart,outputStart,this.output.Count)},Pop:function(){this.stackPosition=this.stackPosition-1|0;this.stackPosition>=0&&(this.state=this.stack.getItem(this.stackPosition))},Parse:function(parser,inputStart,outputStart){var nextParser,result;for(this.state=null,this.stackPosition=-1,this.Push(parser,inputStart,outputStart);;)if(nextParser=this.state.Parser.Accept(Kusto.Language.Parsing.Parser$1(TInput),this),nextParser!=null)this.Push(nextParser,this.state.InputStart+this.state.InputLength|0,this.state.NextOutputStart);else if(result=this.state.InputLength,this.stackPosition===0)return result;else this.Pop(),this.state.LastResult=result},VisitApply:function(TLeft,TOutput,parser){var $t;return this.state.State===0?(this.state.State=1,this.state.NextOutputStart=this.state.OutputStart,parser.LeftParser):this.state.State===1?this.state.LastResult<0?(this.state.InputLength=parser.ApplyKind===Kusto.Language.Parsing.ApplyKind.One?(-this.state.InputLength|0)+this.state.LastResult|0:this.state.LastResult,null):(this.state.InputLength=this.state.LastResult,this.state.State=2,this.state.NextOutputStart=this.state.OutputStart,parser.RightParser):this.state.LastResult>0&&(($t=this.state).InputLength=$t.InputLength+this.state.LastResult|0,parser.ApplyKind===Kusto.Language.Parsing.ApplyKind.ZeroOrMore)?parser.RightParser:null},VisitBest:function(parser){var i,p,length;if(this.state.State===0){var minLength=-1,maxLength=-1,bestParser=-1;for(i=0;i<System.Array.getCount(parser.Parsers,Kusto.Language.Parsing.Parser$1(TInput));i=i+1|0)p=System.Array.getItem(parser.Parsers,i,Kusto.Language.Parsing.Parser$1(TInput)),length=this.scanner.Scan(p,this.state.InputStart),length>maxLength?(maxLength=length,bestParser=i):length<minLength&&(minLength=length);return maxLength>=0?(this.state.State=1,this.state.NextOutputStart=this.state.OutputStart,System.Array.getItem(parser.Parsers,bestParser,Kusto.Language.Parsing.Parser$1(TInput))):(this.state.InputLength=-1,null)}else return this.state.InputLength=this.state.LastResult,null},VisitBest$1:function(TOutput,parser){var i,p,length;if(this.state.State===0){var minLength=-1,maxLength=-1,bestParser=-1;for(i=0;i<System.Array.getCount(parser.Parsers,Kusto.Language.Parsing.Parser$2(TInput,TOutput));i=i+1|0)p=System.Array.getItem(parser.Parsers,i,Kusto.Language.Parsing.Parser$2(TInput,TOutput)),length=this.scanner.Scan(p,this.state.InputStart),length>maxLength?(maxLength=length,bestParser=i):length<minLength&&(minLength=length);return maxLength>=0?(this.state.State=1,this.state.NextOutputStart=this.state.OutputStart,System.Array.getItem(parser.Parsers,bestParser,Kusto.Language.Parsing.Parser$2(TInput,TOutput))):(this.state.InputLength=-1,null)}else return this.state.InputLength=this.state.LastResult,null},VisitConvert:function(TOutput,parser){return this.state.InputLength=parser.Parse(this.source,this.state.InputStart,this.output,this.output.Count),null},VisitFails:function(parser){throw new System.NotImplementedException.ctor;},VisitFirst$1:function(TOutput,parser){var $t,next;return this.state.State===0?(this.state.State=1,this.state.NextOutputStart=this.state.OutputStart,System.Array.getItem(parser.Parsers,0,Kusto.Language.Parsing.Parser$2(TInput,TOutput))):this.state.LastResult<0?(this.state.LastResult<this.state.BestFailedResult&&(this.state.BestFailedResult=this.state.LastResult),Kusto.Language.Utils.ListExtensions.SetCount(System.Object,this.output,this.state.OriginalOutputCount),this.state.State<System.Array.getCount(parser.Parsers,Kusto.Language.Parsing.Parser$2(TInput,TOutput))?(next=System.Array.getItem(parser.Parsers,this.state.State,Kusto.Language.Parsing.Parser$2(TInput,TOutput)),($t=this.state).State=$t.State+1|0,this.state.NextOutputStart=this.state.OutputStart,next):(this.state.InputLength=this.state.BestFailedResult,null)):(this.state.InputLength=this.state.LastResult,null)},VisitFirst:function(parser){var $t,next;return this.state.State===0?(this.state.State=1,this.state.NextOutputStart=this.state.OutputStart,System.Array.getItem(parser.Parsers,0,Kusto.Language.Parsing.Parser$1(TInput))):this.state.LastResult<0?(this.state.LastResult<this.state.BestFailedResult&&(this.state.BestFailedResult=this.state.LastResult),Kusto.Language.Utils.ListExtensions.SetCount(System.Object,this.output,this.state.OriginalOutputCount),this.state.State<System.Array.getCount(parser.Parsers,Kusto.Language.Parsing.Parser$1(TInput))?(next=System.Array.getItem(parser.Parsers,this.state.State,Kusto.Language.Parsing.Parser$1(TInput)),($t=this.state).State=$t.State+1|0,this.state.NextOutputStart=this.state.OutputStart,next):(this.state.InputLength=this.state.BestFailedResult,null)):(this.state.InputLength=this.state.LastResult,null)},VisitForward:function(TOutput,parser){return this.state.State===0?(this.state.State=1,this.state.NextOutputStart=this.state.OutputStart,parser.DeferredParser()):(this.state.InputLength=this.state.LastResult,null)},VisitIf$1:function(TOutput,parser){if(this.state.State===0){var length=Kusto.Language.Parsing.StackSafeParser$1(TInput).Scan(parser.Test,this.source,this.state.InputStart);return length<0?(this.state.InputLength=length,null):(this.state.State=1,this.state.NextOutputStart=this.state.OutputStart,parser.Parser)}else return this.state.InputLength=this.state.LastResult,null},VisitIf:function(parser){if(this.state.State===0){var length=Kusto.Language.Parsing.StackSafeParser$1(TInput).Scan(parser.Test,this.source,this.state.InputStart);return length<0?(this.state.InputLength=length,null):(this.state.State=1,this.state.NextOutputStart=this.state.OutputStart,parser.Parser)}else return this.state.InputLength=this.state.LastResult,null},VisitLimit:function(TOutput,parser){if(this.state.State===0){var len=parser.Limiter.Scan(this.source,this.state.InputStart);return len>0?(this.state.PreviousSource=this.source,this.source=new(Kusto.Language.Parsing.LimitSource$1(TInput))(this.source,this.state.InputStart+len|0),this.state.State=1,parser.Limited):(this.state.InputLength=-1,null)}else return this.source=this.state.PreviousSource,this.state.InputLength=this.state.LastResult,null},VisitMap:function(TOutput,parser){return this.state.InputLength=parser.Parse(this.source,this.state.InputStart,this.output,this.output.Count),null},VisitMatch:function(parser){throw new System.NotImplementedException.ctor;},VisitMatch$1:function(TOutput,parser){return this.state.InputLength=parser.Parse(this.source,this.state.InputStart,this.output,this.output.Count),null},VisitNot:function(parser){throw new System.NotImplementedException.ctor;},VisitOneOrMore:function(parser){var $t,$t1;return this.state.State===0?(this.state.State=1,this.state.NextOutputStart=this.output.Count,parser.Parser):this.state.State===1&&this.state.LastResult<0?(this.state.InputLength=this.state.LastResult,null):this.state.LastResult>0?(($t=this.state).State=$t.State+1|0,($t1=this.state).InputLength=$t1.InputLength+this.state.LastResult|0,this.state.NextOutputStart=this.output.Count,parser.Parser):null},VisitOptional:function(TOutput,parser){return this.state.State===0?(this.state.State=1,this.state.NextOutputStart=this.output.Count,parser.Parser):this.state.LastResult<0?(Kusto.Language.Utils.ListExtensions.SetCount(System.Object,this.output,this.state.OriginalOutputCount),this.output.add(parser.Producer()),this.state.InputLength=0,null):(this.state.InputLength=this.state.LastResult,null)},VisitProduce:function(TOutput,parser){if(this.state.State===0)return this.state.State=1,this.state.NextOutputStart=this.state.OutputStart,parser.Parser;else{if(this.state.LastResult>=0){var value=parser.Producer(this.output,this.state.OutputStart);Kusto.Language.Utils.ListExtensions.SetCount(System.Object,this.output,this.state.OutputStart);this.output.add(value)}else Kusto.Language.Utils.ListExtensions.SetCount(System.Object,this.output,this.state.OriginalOutputCount);return this.state.InputLength=this.state.LastResult,null}},VisitRequired:function(TOutput,parser){return this.state.State===0?(this.state.State=1,this.state.NextOutputStart=this.output.Count,parser.Parser):this.state.LastResult<0?(Kusto.Language.Utils.ListExtensions.SetCount(System.Object,this.output,this.state.OriginalOutputCount),this.output.add(parser.Producer(this.source,this.state.InputStart)),this.state.InputLength=0,null):(this.state.InputLength=this.state.LastResult,null)},VisitRule:function(TOutput,parser){var $t,$t1,value,next;return this.state.LastResult<0?(this.state.InputLength=(-this.state.InputLength|0)+this.state.LastResult|0,Kusto.Language.Utils.ListExtensions.SetCount(System.Object,this.output,this.state.OriginalOutputCount),null):(($t=this.state).InputLength=$t.InputLength+this.state.LastResult|0,this.state.State>=System.Array.getCount(parser.Parsers,Kusto.Language.Parsing.Parser$1(TInput))?(value=parser.ListProducer(this.output,this.state.OutputStart),Kusto.Language.Utils.ListExtensions.SetCount(System.Object,this.output,this.state.OutputStart),this.output.add(value),null):(next=System.Array.getItem(parser.Parsers,this.state.State,Kusto.Language.Parsing.Parser$1(TInput)),($t1=this.state).State=$t1.State+1|0,this.state.NextOutputStart=this.output.Count,next))},VisitSequence:function(parser){var $t,$t1,next;return this.state.LastResult<0?(this.state.InputLength=(-this.state.InputLength|0)+this.state.LastResult|0,Kusto.Language.Utils.ListExtensions.SetCount(System.Object,this.output,this.state.OriginalOutputCount),null):(($t=this.state).InputLength=$t.InputLength+this.state.LastResult|0,this.state.State>=System.Array.getCount(parser.Parsers,Kusto.Language.Parsing.Parser$1(TInput))?null:(next=System.Array.getItem(parser.Parsers,this.state.State,Kusto.Language.Parsing.Parser$1(TInput)),($t1=this.state).State=$t1.State+1|0,this.state.NextOutputStart=this.output.Count,next))},VisitZeroOrMore:function(parser){var $t,$t1;return this.state.State===0||this.state.LastResult>0&&!parser.ZeroOrOne?(($t=this.state).State=$t.State+1|0,($t1=this.state).InputLength=$t1.InputLength+this.state.LastResult|0,this.state.NextOutputStart=this.output.Count,parser.Parser):null}}}});Bridge.define("Kusto.Language.Parsing.StackSafeParser$1.ParseState",function(TInput){return{$kind:"nested class",fields:{InputLength:0,NextOutputStart:0,State:0,LastResult:0,BestFailedResult:0,BestSuccessResult:0,PreviousSource:null},props:{Parser:null,InputStart:0,OutputStart:0,OriginalOutputCount:0},methods:{Init:function(parser,inputStart,outputStart,outputCount){this.Parser=parser;this.InputStart=inputStart;this.OutputStart=outputStart;this.OriginalOutputCount=outputCount;this.InputLength=0;this.State=0;this.LastResult=0;this.NextOutputStart=outputCount;this.BestFailedResult=0;this.BestSuccessResult=0}}}});Bridge.define("Kusto.Language.Parsing.StackSafeScanner$1",function(TInput){return{inherits:[Kusto.Language.Parsing.ParserVisitor$2(TInput,Kusto.Language.Parsing.Parser$1(TInput))],fields:{source:null,stack:null,stackPosition:0,state:null},ctors:{ctor:function(source){this.$initialize();Kusto.Language.Parsing.ParserVisitor$2(TInput,Kusto.Language.Parsing.Parser$1(TInput)).ctor.call(this);this.stack=new(System.Collections.Generic.List$1(Kusto.Language.Parsing.StackSafeScanner$1.ScanState(TInput)).ctor);this.stackPosition=-1;this.Initialize(source)}},methods:{Initialize:function(source){this.source=source},Clear:function(){this.source=null},Push:function(parser,inputStart){this.stackPosition=this.stackPosition+1|0;this.stackPosition===this.stack.Count&&this.stack.add(new(Kusto.Language.Parsing.StackSafeScanner$1.ScanState(TInput)));this.state=this.stack.getItem(this.stackPosition);this.state.Init(parser,inputStart)},Pop:function(){this.stackPosition=this.stackPosition-1|0;this.stackPosition>=0&&(this.state=this.stack.getItem(this.stackPosition))},Scan:function(parser,start){var nextParser,result;for(this.state=null,this.stackPosition=-1,this.Push(parser,start);;)if(nextParser=this.state.Parser.Accept(Kusto.Language.Parsing.Parser$1(TInput),this),nextParser!=null)this.Push(nextParser,this.state.InputStart+this.state.InputLength|0);else if(result=this.state.InputLength,this.stackPosition===0)return result;else this.Pop(),this.state.LastResult=result},VisitApply:function(TLeft,TOutput,parser){var $t;return this.state.State===0?(this.state.State=1,parser.LeftParser):this.state.State===1?this.state.LastResult<0?(this.state.InputLength=parser.ApplyKind===Kusto.Language.Parsing.ApplyKind.One?(-this.state.InputLength|0)+this.state.LastResult|0:this.state.LastResult,null):(this.state.InputLength=this.state.LastResult,this.state.State=2,parser.RightParser):this.state.LastResult>0&&(($t=this.state).InputLength=$t.InputLength+this.state.LastResult|0,parser.ApplyKind===Kusto.Language.Parsing.ApplyKind.ZeroOrMore)?parser.RightParser:null},VisitBest:function(parser){var $t,next;return this.state.State===0?(this.state.BestFailedResult=-1,this.state.BestSuccessResult=-1,this.state.State=1,System.Array.getItem(parser.Parsers,0,Kusto.Language.Parsing.Parser$1(TInput))):(this.state.LastResult>this.state.BestSuccessResult?this.state.BestSuccessResult=this.state.LastResult:this.state.LastResult<this.state.BestFailedResult&&(this.state.BestFailedResult=this.state.LastResult),this.state.State>=System.Array.getCount(parser.Parsers,Kusto.Language.Parsing.Parser$1(TInput))?this.state.BestSuccessResult>=0?(this.state.InputLength=this.state.BestSuccessResult,null):(this.state.InputLength=this.state.BestFailedResult,null):(this.state.InputLength=0,next=System.Array.getItem(parser.Parsers,this.state.State,Kusto.Language.Parsing.Parser$1(TInput)),($t=this.state).State=$t.State+1|0,next))},VisitBest$1:function(TOutput,parser){var $t,next;return this.state.State===0?(this.state.BestFailedResult=-1,this.state.BestSuccessResult=-1,this.state.State=1,System.Array.getItem(parser.Parsers,0,Kusto.Language.Parsing.Parser$2(TInput,TOutput))):(this.state.LastResult>this.state.BestSuccessResult?this.state.BestSuccessResult=this.state.LastResult:this.state.LastResult<this.state.BestFailedResult&&(this.state.BestFailedResult=this.state.LastResult),this.state.State>=System.Array.getCount(parser.Parsers,Kusto.Language.Parsing.Parser$2(TInput,TOutput))?this.state.BestSuccessResult>=0?(this.state.InputLength=this.state.BestSuccessResult,null):(this.state.InputLength=this.state.BestFailedResult,null):(this.state.InputLength=0,next=System.Array.getItem(parser.Parsers,this.state.State,Kusto.Language.Parsing.Parser$2(TInput,TOutput)),($t=this.state).State=$t.State+1|0,next))},VisitConvert:function(TOutput,parser){return this.state.State===0?(this.state.State=1,parser.Pattern):(this.state.InputLength=this.state.LastResult,null)},VisitFails:function(parser){var $t;return this.state.State===0?this.source.IsEnd(this.state.InputStart)?(this.state.InputLength=0,null):(($t=this.state).State=$t.State+1|0,parser.Pattern):(this.state.InputLength=this.state.LastResult>=0?-1:0,null)},VisitFirst$1:function(TOutput,parser){var $t,next;return this.state.State===0?(this.state.State=1,System.Array.getItem(parser.Parsers,0,Kusto.Language.Parsing.Parser$2(TInput,TOutput))):this.state.LastResult<0?(this.state.LastResult<this.state.BestFailedResult&&(this.state.BestFailedResult=this.state.LastResult),this.state.State<System.Array.getCount(parser.Parsers,Kusto.Language.Parsing.Parser$2(TInput,TOutput))?(next=System.Array.getItem(parser.Parsers,this.state.State,Kusto.Language.Parsing.Parser$2(TInput,TOutput)),($t=this.state).State=$t.State+1|0,next):(this.state.InputLength=this.state.BestFailedResult,null)):(this.state.InputLength=this.state.LastResult,null)},VisitFirst:function(parser){var $t,next;return this.state.State===0?(this.state.State=1,System.Array.getItem(parser.Parsers,0,Kusto.Language.Parsing.Parser$1(TInput))):this.state.LastResult<0?(this.state.LastResult<this.state.BestFailedResult&&(this.state.BestFailedResult=this.state.LastResult),this.state.State<System.Array.getCount(parser.Parsers,Kusto.Language.Parsing.Parser$1(TInput))?(next=System.Array.getItem(parser.Parsers,this.state.State,Kusto.Language.Parsing.Parser$1(TInput)),($t=this.state).State=$t.State+1|0,next):(this.state.InputLength=this.state.BestFailedResult,null)):(this.state.InputLength=this.state.LastResult,null)},VisitForward:function(TOutput,parser){return this.state.State===0?(this.state.State=1,parser.DeferredParser()):(this.state.InputLength=this.state.LastResult,null)},VisitIf$1:function(TOutput,parser){if(this.state.State===0)return this.state.State=1,parser.Test;else if(this.state.State===1){var length=this.state.LastResult;return length<0?(this.state.InputLength=length,null):(this.state.State=2,parser.Parser)}else return this.state.InputLength=this.state.LastResult,null},VisitIf:function(parser){if(this.state.State===0)return this.state.State=1,parser.Test;else if(this.state.State===1){var length=this.state.LastResult;return length<0?(this.state.InputLength=length,null):(this.state.State=2,parser.Parser)}else return this.state.InputLength=this.state.LastResult,null},VisitLimit:function(TOutput,parser){if(this.state.State===0){var len=parser.Limiter.Scan(this.source,this.state.InputStart);return len>0?(this.state.PreviousSource=this.source,this.source=new(Kusto.Language.Parsing.LimitSource$1(TInput))(this.source,this.state.InputStart+len|0),this.state.State=1,parser.Limited):(this.state.InputLength=-1,null)}else return this.source=this.state.PreviousSource,this.state.InputLength=this.state.LastResult,null},VisitMap:function(TOutput,parser){return this.state.InputLength=parser.Scan(this.source,this.state.InputStart),null},VisitMatch:function(parser){return this.state.InputLength=parser.Scan(this.source,this.state.InputStart),null},VisitMatch$1:function(TOutput,parser){return this.state.InputLength=parser.Scan(this.source,this.state.InputStart),null},VisitNot:function(parser){var $t;return this.state.State===0?this.source.IsEnd(this.state.InputStart)?(this.state.InputLength=-1,null):(($t=this.state).State=$t.State+1|0,parser.Pattern):this.state.LastResult>=0?(this.state.InputLength=-1,null):(this.state.InputLength=1,null)},VisitOneOrMore:function(parser){var $t,$t1;return this.state.State===0?(this.state.State=1,parser.Parser):this.state.State===1&&this.state.LastResult<0?(this.state.InputLength=this.state.LastResult,null):this.state.LastResult>0?(($t=this.state).State=$t.State+1|0,($t1=this.state).InputLength=$t1.InputLength+this.state.LastResult|0,parser.Parser):null},VisitOptional:function(TOutput,parser){return this.state.State===0?(this.state.State=1,parser.Parser):this.state.LastResult<0?(this.state.InputLength=0,null):(this.state.InputLength=this.state.LastResult,null)},VisitProduce:function(TOutput,parser){return this.state.State===0?(this.state.State=1,parser.Parser):(this.state.InputLength=this.state.LastResult,null)},VisitRequired:function(TOutput,parser){return this.state.State===0?(this.state.State=1,parser.Parser):this.state.LastResult<0?(this.state.InputLength=0,null):(this.state.InputLength=this.state.LastResult,null)},VisitRule:function(TOutput,parser){var $t,$t1,next;return this.state.LastResult<0?(this.state.InputLength=(-this.state.InputLength|0)+this.state.LastResult|0,null):(($t=this.state).InputLength=$t.InputLength+this.state.LastResult|0,this.state.State>=System.Array.getCount(parser.Parsers,Kusto.Language.Parsing.Parser$1(TInput))?null:(next=System.Array.getItem(parser.Parsers,this.state.State,Kusto.Language.Parsing.Parser$1(TInput)),($t1=this.state).State=$t1.State+1|0,next))},VisitSequence:function(parser){var $t,$t1,next;return this.state.LastResult<0?(this.state.InputLength=(-this.state.InputLength|0)+this.state.LastResult|0,null):(($t=this.state).InputLength=$t.InputLength+this.state.LastResult|0,this.state.State>=System.Array.getCount(parser.Parsers,Kusto.Language.Parsing.Parser$1(TInput))?null:(next=System.Array.getItem(parser.Parsers,this.state.State,Kusto.Language.Parsing.Parser$1(TInput)),($t1=this.state).State=$t1.State+1|0,next))},VisitZeroOrMore:function(parser){var $t,$t1;return this.state.State===0||this.state.LastResult>0&&!parser.ZeroOrOne?(($t=this.state).State=$t.State+1|0,($t1=this.state).InputLength=$t1.InputLength+this.state.LastResult|0,parser.Parser):null}}}});Bridge.define("Kusto.Language.Parsing.StackSafeScanner$1.ScanState",function(TInput){return{$kind:"nested class",fields:{InputLength:0,State:0,LastResult:0,BestFailedResult:0,BestSuccessResult:0,PreviousSource:null},props:{Parser:null,InputStart:0},methods:{Init:function(parser,inputStart){this.Parser=parser;this.InputStart=inputStart;this.InputLength=0;this.State=0;this.LastResult=0;this.BestFailedResult=0;this.BestSuccessResult=0}}}});Bridge.define("Kusto.Language.Parsing.TextSource",{inherits:[Kusto.Language.Parsing.Source$1(System.Char)],fields:{_source:null,_offset:0,_end:0,_strings:null},props:{Position:{get:function(){return this._offset}}},ctors:{$ctor1:function(source,offset,length){this.$initialize();Kusto.Language.Parsing.Source$1(System.Char).ctor.call(this);this._source=source;this._offset=offset;this._end=offset+length|0},ctor:function(source){Kusto.Language.Parsing.TextSource.$ctor1.call(this,source,0,source.length)}},methods:{Peek:function(n){return n===void 0&&(n=0),(this._offset+n|0)<this._end?this._source.charCodeAt(this._offset+n|0):0},IsEnd:function(n){return n===void 0&&(n=0),(this._offset+n|0)>=this._end},PeekText:function(length){return this.PeekText$1(0,length)},PeekText$1:function(start,length){return this._strings==null&&(this._strings=new Kusto.Language.Utils.StringTable),this._strings.Add$1(this._source,this._offset+start|0,length)},Matches:function(start,text){var $t,offs=this._offset+start|0;return offs<this._source.length&&text.length>0&&this._source.charCodeAt(offs)===text.charCodeAt(0)&&($t=text.length,System.String.compare(this._source.substr(offs,$t),text.substr(0,$t)))===0},Matches$1:function(start,text,ignoreCase){var $t;return($t=text.length,System.String.compare(this._source.substr(this._offset+start|0,$t),text.substr(0,$t),ignoreCase))===0}}});Bridge.define("Kusto.Language.Parsing.ZeroOrMoreParser$1",function(TInput){return{inherits:[Kusto.Language.Parsing.Parser$1(TInput)],props:{Parser:null,ZeroOrOne:!1,IsOptional:{get:function(){return!0}},IsRepetition:{get:function(){return!0}},ChildParserCount:{get:function(){return 1}}},ctors:{ctor:function(parser,zeroOrOne){zeroOrOne===void 0&&(zeroOrOne=!1);this.$initialize();Kusto.Language.Parsing.Parser$1(TInput).ctor.call(this);this.Parser=parser;this.ZeroOrOne=zeroOrOne}},methods:{GetChildParser:function(index){return index===0?this.Parser:null},Accept$2:function(visitor){visitor.VisitZeroOrMore(this)},Accept:function(TResult,visitor){return visitor.VisitZeroOrMore(this)},Accept$1:function(TArg,TResult,visitor,arg){return visitor.VisitZeroOrMore(this,arg)},Clone:function(){return new(Kusto.Language.Parsing.ZeroOrMoreParser$1(TInput))(this.Parser,this.ZeroOrOne)},Parse:function(source,inputStart,output,outputStart){for(var length=0,len;;)if(len=this.Parser.Parse(source,inputStart+length|0,output,output.Count),len>0&&(length=length+len|0),len<=0||this.ZeroOrOne)return length},Scan:function(source,start){for(var len=0,n;;)if(n=this.Parser.Scan(source,start+len|0),n>0&&(len=len+n|0),n<=0||this.ZeroOrOne)break;return len}}}});Bridge.define("Kusto.Language.QueryOperatorParameter",{inherits:[Kusto.Language.Symbols.Symbol],fields:{_isHidden:!1},props:{ValueKind:0,IsCaseSensitive:!1,Values:null,IsRepeatable:!1,HasNoEquals:!1,Aliases:null,IsHidden:{get:function(){return this._isHidden}},Kind:{get:function(){return Kusto.Language.Symbols.SymbolKind.QueryOperatorParameter}}},ctors:{ctor:function(name,kind,isCaseSensitive,values,isRepeatable,isHidden,hasNoEquals,aliases){this.$initialize();Kusto.Language.Symbols.Symbol.ctor.call(this,name);this.ValueKind=kind;this.Values=Kusto.Language.Utils.ListExtensions.ToReadOnly(System.String,values);this.IsCaseSensitive=isCaseSensitive;this.IsRepeatable=isRepeatable;this._isHidden=isHidden;this.HasNoEquals=hasNoEquals;this.Aliases=Kusto.Language.Utils.ListExtensions.ToReadOnly(System.String,aliases)},$ctor1:function(name,kind,isCaseSensitive,values,isRepeatable,aliases){isCaseSensitive===void 0&&(isCaseSensitive=!0);values===void 0&&(values=null);isRepeatable===void 0&&(isRepeatable=!1);aliases===void 0&&(aliases=null);Kusto.Language.QueryOperatorParameter.ctor.call(this,name,kind,isCaseSensitive,values,isRepeatable,!1,!1,aliases)}},methods:{WithIsHidden:function(isHidden){return this.IsHidden!==isHidden?new Kusto.Language.QueryOperatorParameter.ctor(this.Name,this.ValueKind,this.IsCaseSensitive,this.Values,this.IsRepeatable,isHidden,this.HasNoEquals,this.Aliases):this},WithValues:function(values){return Bridge.referenceEquals(this.Values,values)?this:new Kusto.Language.QueryOperatorParameter.ctor(this.Name,this.ValueKind,this.IsCaseSensitive,values,this.IsRepeatable,this.IsHidden,this.HasNoEquals,this.Aliases)},WithIsCaseSensitive:function(isCaseSensitive){return this.IsCaseSensitive!==isCaseSensitive?new Kusto.Language.QueryOperatorParameter.ctor(this.Name,this.ValueKind,isCaseSensitive,this.Values,this.IsRepeatable,this.IsHidden,this.HasNoEquals,this.Aliases):this},WithHasNoEquals:function(hasNoEquals){return this.HasNoEquals!==hasNoEquals?new Kusto.Language.QueryOperatorParameter.ctor(this.Name,this.ValueKind,this.IsCaseSensitive,this.Values,this.IsRepeatable,this.IsHidden,hasNoEquals,this.Aliases):this},Hide:function(){return this.WithIsHidden(!0)}}});Bridge.define("Kusto.Language.Symbols.BlockRepeatingParameterLayout",{inherits:[Kusto.Language.Symbols.ParameterLayout],methods:{GetArgumentParameters$1:function(signature,$arguments,argumentParameters){signature.HasRepeatableParameters?this.GetArgumentParameters$2(signature,System.Array.getCount($arguments,Kusto.Language.Syntax.Expression),argumentParameters):Kusto.Language.Symbols.NonRepeatingParameterLayout.LayoutParameters(signature,System.Array.getCount($arguments,Kusto.Language.Syntax.Expression),$arguments,argumentParameters)},GetArgumentParameters:function(signature,argumentTypes,argumentParameters){signature.HasRepeatableParameters?this.GetArgumentParameters$2(signature,System.Array.getCount(argumentTypes,Kusto.Language.Symbols.TypeSymbol),argumentParameters):Kusto.Language.Symbols.NonRepeatingParameterLayout.LayoutParameters(signature,System.Array.getCount(argumentTypes,Kusto.Language.Symbols.TypeSymbol),null,argumentParameters)},GetArgumentParameters$2:function(signature,nArguments,argumentParameters){for(var index,firstRepeatableParameter=Kusto.Language.Utils.ListExtensions.FirstIndex(Kusto.Language.Symbols.Parameter,signature.Parameters,function(p){return p.IsRepeatable}),lastRepeatableParameter=Kusto.Language.Utils.ListExtensions.LastIndex(Kusto.Language.Symbols.Parameter,signature.Parameters,function(p){return p.IsRepeatable}),firstRepeatingArgument=firstRepeatableParameter,numberOfRepeatingParameters=(lastRepeatableParameter-firstRepeatableParameter|0)+1|0,minRepeats=System.Array.getItem(signature.Parameters,firstRepeatableParameter,Kusto.Language.Symbols.Parameter).MinOccurring,maxRepeats=System.Array.getItem(signature.Parameters,firstRepeatableParameter,Kusto.Language.Symbols.Parameter).MaxOccurring,minRepeatingArguments=Bridge.Int.mul(numberOfRepeatingParameters,minRepeats),maxRepeatingArguments=Bridge.Int.mul(numberOfRepeatingParameters,maxRepeats),parametersAfterLastRepeatingParameter=(System.Array.getCount(signature.Parameters,Kusto.Language.Symbols.Parameter)-lastRepeatableParameter|0)-1|0,possibleRepeatingArguments=(nArguments-firstRepeatingArgument|0)-parametersAfterLastRepeatingParameter|0,expectedRepeatingArguments=Math.min(maxRepeatingArguments,Math.max(minRepeatingArguments,possibleRepeatingArguments)),repeatingArgumentGroups=Bridge.Int.div((expectedRepeatingArguments+numberOfRepeatingParameters|0)-1|0,numberOfRepeatingParameters)|0,totalRepeatingArguments=Bridge.Int.mul(repeatingArgumentGroups,numberOfRepeatingParameters),lastRepeatingArgument=(firstRepeatableParameter+totalRepeatingArguments|0)-1|0,i=0;i<nArguments;i=i+1|0)i<firstRepeatingArgument?argumentParameters.add(System.Array.getItem(signature.Parameters,i,Kusto.Language.Symbols.Parameter)):i>=firstRepeatingArgument&&i<=lastRepeatingArgument?argumentParameters.add(System.Array.getItem(signature.Parameters,firstRepeatableParameter+(i-firstRepeatingArgument|0)%numberOfRepeatingParameters|0,Kusto.Language.Symbols.Parameter)):(index=lastRepeatableParameter+(i-lastRepeatingArgument|0)|0,index<System.Array.getCount(signature.Parameters,Kusto.Language.Symbols.Parameter)?argumentParameters.add(System.Array.getItem(signature.Parameters,index,Kusto.Language.Symbols.Parameter)):argumentParameters.add(Kusto.Language.Symbols.Signature.UnknownParameter))},GetNextPossibleParameters:function(signature,$arguments,possibleParameters){var argumentIndex=System.Array.getCount($arguments,Kusto.Language.Syntax.Expression),firstRepeatableParameter,lastRepeatableParameter,iRepeatableParam,iEndParam,lastRepeatingArgument,iEndParam1;if(signature.HasRepeatableParameters)if(firstRepeatableParameter=Kusto.Language.Utils.ListExtensions.FirstIndex(Kusto.Language.Symbols.Parameter,signature.Parameters,function(p){return p.IsRepeatable}),lastRepeatableParameter=Kusto.Language.Utils.ListExtensions.LastIndex(Kusto.Language.Symbols.Parameter,signature.Parameters,function(p){return p.IsRepeatable}),argumentIndex<firstRepeatableParameter)possibleParameters.add(System.Array.getItem(signature.Parameters,argumentIndex,Kusto.Language.Symbols.Parameter));else{var nRepeatable=(lastRepeatableParameter-firstRepeatableParameter|0)+1|0,minOccurring=System.Array.getItem(signature.Parameters,firstRepeatableParameter,Kusto.Language.Symbols.Parameter).MinOccurring,maxOccurring=System.Array.getItem(signature.Parameters,firstRepeatableParameter,Kusto.Language.Symbols.Parameter).MaxOccurring,repeatGroup=Bridge.Int.div(argumentIndex-firstRepeatableParameter|0,nRepeatable)|0,repeatOffset=(argumentIndex-firstRepeatableParameter|0)%nRepeatable;repeatGroup<maxOccurring?(iRepeatableParam=repeatOffset+firstRepeatableParameter|0,possibleParameters.add(System.Array.getItem(signature.Parameters,iRepeatableParam,Kusto.Language.Symbols.Parameter)),repeatGroup>=minOccurring&&(iEndParam=(lastRepeatableParameter+repeatOffset|0)+1|0,iEndParam<System.Array.getCount(signature.Parameters,Kusto.Language.Symbols.Parameter)&&possibleParameters.add(System.Array.getItem(signature.Parameters,iEndParam,Kusto.Language.Symbols.Parameter)))):(lastRepeatingArgument=firstRepeatableParameter+Bridge.Int.mul(nRepeatable,maxOccurring)|0,iEndParam1=((argumentIndex-lastRepeatingArgument|0)+lastRepeatableParameter|0)+1|0,iEndParam1<System.Array.getCount(signature.Parameters,Kusto.Language.Symbols.Parameter)&&possibleParameters.add(System.Array.getItem(signature.Parameters,iEndParam1,Kusto.Language.Symbols.Parameter)))}else argumentIndex<System.Array.getCount(signature.Parameters,Kusto.Language.Symbols.Parameter)&&possibleParameters.add(System.Array.getItem(signature.Parameters,argumentIndex,Kusto.Language.Symbols.Parameter))},IsValidArgumentCount:function(signature,argumentCount){var isValid=Kusto.Language.Symbols.ParameterLayout.prototype.IsValidArgumentCount.call(this,signature,argumentCount);if(isValid&&signature.HasRepeatableParameters){var firstRepeatableParameter=Kusto.Language.Utils.ListExtensions.FirstIndex(Kusto.Language.Symbols.Parameter,signature.Parameters,function(p){return p.IsRepeatable}),lastRepeatableParameter=Kusto.Language.Utils.ListExtensions.LastIndex(Kusto.Language.Symbols.Parameter,signature.Parameters,function(p){return p.IsRepeatable}),nVariable=(lastRepeatableParameter-firstRepeatableParameter|0)+1|0,nBefore=firstRepeatableParameter,nAfter=System.Array.getCount(signature.Parameters,Kusto.Language.Symbols.Parameter)-(nBefore+nVariable|0)|0,nFixed=nBefore+nAfter|0;isValid=(argumentCount-nFixed|0)%nVariable==0}return isValid}}});Bridge.define("Kusto.Language.Symbols.TypeSymbol",{inherits:[Kusto.Language.Symbols.Symbol],ctors:{ctor:function(name){this.$initialize();Kusto.Language.Symbols.Symbol.ctor.call(this,name)}}});Bridge.define("Kusto.Language.Symbols.ColumnSymbol",{inherits:[Kusto.Language.Symbols.Symbol],statics:{methods:{GetTrulyOriginalColumns:function(columns){var $t,mostOriginal,col;if(System.Linq.Enumerable.from(columns,Kusto.Language.Symbols.ColumnSymbol).all(function(c){return System.Array.getCount(c.OriginalColumns,Kusto.Language.Symbols.ColumnSymbol)===0}))return columns;mostOriginal=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor);$t=Bridge.getEnumerator(columns,Kusto.Language.Symbols.ColumnSymbol);try{while($t.moveNext())col=$t.Current,System.Array.getCount(col.OriginalColumns,Kusto.Language.Symbols.ColumnSymbol)>0?mostOriginal.AddRange(col.OriginalColumns):mostOriginal.add(col)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return mostOriginal},Combine:function(kind,columnSets){var $t,columns=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor),list;$t=Bridge.getEnumerator(columnSets,System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.ColumnSymbol));try{while($t.moveNext())list=$t.Current,columns.AddRange(list)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}switch(kind){case Kusto.Language.Symbols.CombineKind.UnifySameNameAndType:Kusto.Language.Binding.Binder.UnifyColumnsWithSameNameAndType(columns);break;case Kusto.Language.Symbols.CombineKind.UnifySameName:Kusto.Language.Binding.Binder.UnifyColumnsWithSameName(columns);break;case Kusto.Language.Symbols.CombineKind.UniqueNames:Kusto.Language.Binding.Binder.MakeColumnNamesUnique(columns);break}return columns},Combine$1:function(kind,columnSets){return columnSets===void 0&&(columnSets=[]),Kusto.Language.Symbols.ColumnSymbol.Combine(kind,Bridge.cast(columnSets,System.Collections.Generic.IEnumerable$1(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.ColumnSymbol))))}}},props:{Type:null,Description:null,OriginalColumns:null,Source:null,Examples:null,Kind:{get:function(){return Kusto.Language.Symbols.SymbolKind.Column}},Tabularity:{get:function(){return Kusto.Language.Symbols.Tabularity.Scalar}}},ctors:{ctor:function(name,type,description,originalColumns,source,examples){description===void 0&&(description=null);originalColumns===void 0&&(originalColumns=null);source===void 0&&(source=null);examples===void 0&&(examples=null);var $t;this.$initialize();Kusto.Language.Symbols.Symbol.ctor.call(this,name);this.Type=type==null||type.IsError?Kusto.Language.Symbols.ScalarTypes.Unknown:type;this.Description=($t=description,$t!=null?$t:"");this.OriginalColumns=originalColumns!=null&&System.Array.getCount(originalColumns,Kusto.Language.Symbols.ColumnSymbol)>0?Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Symbols.ColumnSymbol,Kusto.Language.Symbols.ColumnSymbol.GetTrulyOriginalColumns(originalColumns)):Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Symbols.ColumnSymbol).Instance;this.Source=source;this.Examples=Kusto.Language.Utils.ListExtensions.ToReadOnly(System.String,examples)}},methods:{With:function(name,type,description,originalColumns,source,examples){name===void 0&&(name=new(Kusto.Language.Utils.Optional$1(System.String)));type===void 0&&(type=new(Kusto.Language.Utils.Optional$1(Kusto.Language.Symbols.TypeSymbol)));description===void 0&&(description=new(Kusto.Language.Utils.Optional$1(System.String)));originalColumns===void 0&&(originalColumns=new(Kusto.Language.Utils.Optional$1(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.ColumnSymbol))));source===void 0&&(source=new(Kusto.Language.Utils.Optional$1(Kusto.Language.Syntax.SyntaxNode)));examples===void 0&&(examples=new(Kusto.Language.Utils.Optional$1(System.Collections.Generic.IReadOnlyList$1(System.String))));var newName=name.HasValue?name.Value:this.Name,newType=type.HasValue?type.Value:this.Type,newDesc=description.HasValue?description.Value:this.Description,newOC=originalColumns.HasValue?originalColumns.Value:this.OriginalColumns,newSource=source.HasValue?source.Value:this.Source,newExamples=examples.HasValue?examples.Value:this.Examples;return!Bridge.referenceEquals(newName,this.Name)||!Bridge.referenceEquals(newType,this.Type)||!Bridge.referenceEquals(newDesc,this.Description)||!Bridge.referenceEquals(newOC,this.OriginalColumns)||!Bridge.referenceEquals(newSource,this.Source)||!Bridge.referenceEquals(newExamples,this.Examples)?new Kusto.Language.Symbols.ColumnSymbol(newName,newType,newDesc,newOC,newSource,newExamples):this},WithName:function(name){return this.With(Kusto.Language.Utils.Optional$1(System.String).op_Implicit(name),void 0,void 0,void 0,void 0,void 0)},WithType:function(type){return this.With(void 0,Kusto.Language.Utils.Optional$1(Kusto.Language.Symbols.TypeSymbol).op_Implicit(type),void 0,void 0,void 0,void 0)},WithDescription:function(description){return this.With(void 0,void 0,Kusto.Language.Utils.Optional$1(System.String).op_Implicit(description),void 0,void 0,void 0)},WithOriginalColumns$1:function(originalColumns){return this.With(void 0,void 0,void 0,new(Kusto.Language.Utils.Optional$1(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.ColumnSymbol)).$ctor1)(originalColumns),void 0,void 0)},WithOriginalColumns:function(originalColumns){return originalColumns===void 0&&(originalColumns=[]),this.WithOriginalColumns$1(Bridge.cast(originalColumns,System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.ColumnSymbol)))},WithSource:function(source){return this.With(void 0,void 0,void 0,void 0,Kusto.Language.Utils.Optional$1(Kusto.Language.Syntax.SyntaxNode).op_Implicit(source),void 0)},WithExamples:function(examples){return this.With(void 0,void 0,void 0,void 0,void 0,new(Kusto.Language.Utils.Optional$1(System.Collections.Generic.IReadOnlyList$1(System.String)).$ctor1)(examples))}}});Bridge.define("Kusto.Language.Symbols.CommandSymbol",{inherits:[Kusto.Language.Symbols.Symbol],fields:{_resultSchema:null,_resultType:null},props:{ResultSchema:{get:function(){return this._resultSchema==null&&this._resultType!=null&&(this._resultSchema=Kusto.Language.Symbols.SchemaDisplay.GetText(this._resultType)),this._resultSchema}},ResultType:{get:function(){return this._resultType==null&&this._resultSchema!=null&&(this._resultType=Bridge.referenceEquals(this._resultSchema,"()")||Bridge.referenceEquals(this._resultSchema,"(*)")?(new Kusto.Language.Symbols.TableSymbol.ctor).WithIsOpen(!0):Kusto.Language.Symbols.TableSymbol.From(this._resultSchema)),this._resultType}},Construction:null,Kind:{get:function(){return Kusto.Language.Symbols.SymbolKind.Command}}},ctors:{$ctor1:function(name,resultSchema,construction){construction===void 0&&(construction=null);var $t;this.$initialize();Kusto.Language.Symbols.Symbol.ctor.call(this,name);this._resultSchema=resultSchema;this.Construction=($t=construction,$t!=null?$t:"")},ctor:function(name,resultType,construction){construction===void 0&&(construction=null);var $t;this.$initialize();Kusto.Language.Symbols.Symbol.ctor.call(this,name);this._resultType=resultType;this.Construction=($t=construction,$t!=null?$t:"")}}});Bridge.define("Kusto.Language.Symbols.CustomParameterLayout",{inherits:[Kusto.Language.Symbols.ParameterLayout],fields:{_builder:null},ctors:{ctor:function(builder){this.$initialize();Kusto.Language.Symbols.ParameterLayout.ctor.call(this);this._builder=builder}},methods:{GetArgumentParameters$1:function(signature,$arguments,argumentParameters){this._builder(signature,$arguments,argumentParameters);for(var i=0;i<argumentParameters.Count;i=i+1|0)argumentParameters.getItem(i)==null&&argumentParameters.setItem(i,Kusto.Language.Symbols.Signature.UnknownParameter);while(argumentParameters.Count<System.Array.getCount($arguments,Kusto.Language.Syntax.Expression))argumentParameters.add(Kusto.Language.Symbols.Signature.UnknownParameter)}}});Bridge.define("Kusto.Language.Symbols.EmptyScope",{inherits:[Kusto.Language.Symbols.Scope],statics:{fields:{Instance:null},ctors:{init:function(){this.Instance=new Kusto.Language.Symbols.EmptyScope}}},methods:{GetSymbols$1:function(name,match,symbols){}}});Bridge.define("Kusto.Language.Symbols.NonRepeatingParameterLayout",{inherits:[Kusto.Language.Symbols.ParameterLayout],statics:{methods:{LayoutParameters:function(signature,nArguments,$arguments,argumentParameters){for(var sn,i=0;i<nArguments;i=i+1|0)signature.AllowsNamedArguments&&$arguments!=null&&(sn=Bridge.as(System.Array.getItem($arguments,i,Kusto.Language.Syntax.Expression),Kusto.Language.Syntax.SimpleNamedExpression))!=null?argumentParameters.add(signature.GetParameter(sn.Name.SimpleName)||Kusto.Language.Symbols.Signature.UnknownParameter):i<System.Array.getCount(signature.Parameters,Kusto.Language.Symbols.Parameter)?argumentParameters.add(System.Array.getItem(signature.Parameters,i,Kusto.Language.Symbols.Parameter)):argumentParameters.add(Kusto.Language.Symbols.Signature.UnknownParameter)}}},methods:{GetArgumentParameters$1:function(signature,$arguments,argumentParameters){Kusto.Language.Symbols.NonRepeatingParameterLayout.LayoutParameters(signature,System.Array.getCount($arguments,Kusto.Language.Syntax.Expression),$arguments,argumentParameters)},GetArgumentParameters:function(signature,argumentTypes,argumentParameters){Kusto.Language.Symbols.NonRepeatingParameterLayout.LayoutParameters(signature,System.Array.getCount(argumentTypes,Kusto.Language.Symbols.TypeSymbol),null,argumentParameters)},GetNextPossibleParameters:function(signature,existingArguments,possibleParameters){var iParameter=System.Array.getCount(existingArguments,Kusto.Language.Syntax.Expression);iParameter<System.Array.getCount(signature.Parameters,Kusto.Language.Symbols.Parameter)&&possibleParameters.add(System.Array.getItem(signature.Parameters,iParameter,Kusto.Language.Symbols.Parameter))}}});Bridge.define("Kusto.Language.Symbols.OperatorSymbol",{inherits:[Kusto.Language.Symbols.Symbol],props:{Kind:{get:function(){return Kusto.Language.Symbols.SymbolKind.Operator}},OperatorKind:0,Result:null,Tabularity:{get:function(){return Kusto.Language.Symbols.Tabularity.Scalar}},Signatures:null},ctors:{$ctor2:function(kind,signatures){var $t,signature;this.$initialize();Kusto.Language.Symbols.Symbol.ctor.call(this,System.Enum.toString(Kusto.Language.Symbols.OperatorKind,kind));this.OperatorKind=kind;this.Signatures=Kusto.Language.Utils.ArgumentCheckers.CheckArgumentNullOrElementNull(Kusto.Language.Symbols.Signature,Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Symbols.Signature,signatures),"signatures");$t=Bridge.getEnumerator(this.Signatures,Kusto.Language.Symbols.Signature);try{while($t.moveNext())signature=$t.Current,signature.Symbol=this}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}},ctor:function(kind,signatures){signatures===void 0&&(signatures=[]);Kusto.Language.Symbols.OperatorSymbol.$ctor2.call(this,kind,Bridge.cast(signatures,System.Collections.Generic.IEnumerable$1(Kusto.Language.Symbols.Signature)))},$ctor1:function(kind,resultType){Kusto.Language.Symbols.OperatorSymbol.ctor.call(this,kind,System.Array.init([new Kusto.Language.Symbols.Signature.$ctor5(Kusto.Language.Utils.ArgumentCheckers.CheckArgumentNull(Kusto.Language.Symbols.TypeSymbol,resultType,"resultType"))],Kusto.Language.Symbols.Signature))}}});Bridge.define("Kusto.Language.Symbols.OptionSymbol",{inherits:[Kusto.Language.Symbols.Symbol],props:{Description:null,Types:null,Examples:null,Kind:{get:function(){return Kusto.Language.Symbols.SymbolKind.Option}},Tabularity:{get:function(){return Kusto.Language.Symbols.Tabularity.Scalar}}},ctors:{$ctor1:function(name,description,types,examples){description===void 0&&(description=null);types===void 0&&(types=null);examples===void 0&&(examples=null);var $t;this.$initialize();Kusto.Language.Symbols.Symbol.ctor.call(this,name);this.Description=($t=description,$t!=null?$t:"");this.Types=types||Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Symbols.ScalarSymbol).Instance;this.Examples=examples||Kusto.Language.Utils.EmptyReadOnlyList$1(System.String).Instance},ctor:function(name,description,type,examples){examples===void 0&&(examples=null);Kusto.Language.Symbols.OptionSymbol.$ctor1.call(this,name,description,System.Array.init([Kusto.Language.Utils.ArgumentCheckers.CheckArgumentNull(Kusto.Language.Symbols.ScalarSymbol,type,"type")],Kusto.Language.Symbols.ScalarSymbol),examples)}}});Bridge.define("Kusto.Language.Symbols.ParameterSymbol",{inherits:[Kusto.Language.Symbols.Symbol],props:{Type:null,Description:null,Kind:{get:function(){return Kusto.Language.Symbols.SymbolKind.Parameter}},Tabularity:{get:function(){return this.Type.Tabularity}}},ctors:{ctor:function(name,type,description){description===void 0&&(description=null);var $t;this.$initialize();Kusto.Language.Symbols.Symbol.ctor.call(this,name);this.Type=Kusto.Language.Utils.ArgumentCheckers.CheckArgumentNull(Kusto.Language.Symbols.TypeSymbol,type,"type");this.Description=($t=description,$t!=null?$t:"")}}});Bridge.define("Kusto.Language.Symbols.RepeatingParameterLayout",{inherits:[Kusto.Language.Symbols.ParameterLayout],statics:{fields:{s_typeListPool:null,s_parameterListPool:null},ctors:{init:function(){this.s_typeListPool=new(Kusto.Language.Utils.ObjectPool$1(System.Collections.Generic.List$1(Kusto.Language.Symbols.TypeSymbol)))(function(){return new(System.Collections.Generic.List$1(Kusto.Language.Symbols.TypeSymbol).ctor)},function(list){list.clear()});this.s_parameterListPool=new(Kusto.Language.Utils.ObjectPool$1(System.Collections.Generic.List$1(Kusto.Language.Symbols.Parameter)))(function(){return new(System.Collections.Generic.List$1(Kusto.Language.Symbols.Parameter).ctor)},function(list){list.clear()})}},methods:{GetArgumentTypes:function($arguments,types){var $t,arg;$t=Bridge.getEnumerator($arguments,Kusto.Language.Syntax.Expression);try{while($t.moveNext())arg=$t.Current,types.add(arg.ResultType)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}}},fields:{_allowSkippingOptionalParameters:!1},ctors:{ctor:function(allowSkippingOptionalParameters){this.$initialize();Kusto.Language.Symbols.ParameterLayout.ctor.call(this);this._allowSkippingOptionalParameters=allowSkippingOptionalParameters}},methods:{GetArgumentParameters$1:function(signature,$arguments,argumentParameters){var argTypes=Kusto.Language.Symbols.RepeatingParameterLayout.s_typeListPool.AllocateFromPool(),iCurrentParameter,iCurrentParameterCount;try{Kusto.Language.Symbols.RepeatingParameterLayout.GetArgumentTypes($arguments,argTypes);iCurrentParameter={v:0};iCurrentParameterCount={v:0};this.GetArgumentParameters$2(signature,$arguments,argTypes,argumentParameters,iCurrentParameter,iCurrentParameterCount)}finally{Kusto.Language.Symbols.RepeatingParameterLayout.s_typeListPool.ReturnToPool(argTypes)}},GetArgumentParameters:function(signature,argumentTypes,argumentParameters){var iCurrentParameter={v:0},iCurrentParameterCount={v:0};this.GetArgumentParameters$2(signature,null,argumentTypes,argumentParameters,iCurrentParameter,iCurrentParameterCount)},GetArgumentParameters$2:function(signature,$arguments,argumentTypes,argumentParameters,iCurrentParameter,iCurrentParameterCount){for(var currentParam,nextParam,nextMatch,iArg=0;iArg<System.Array.getCount(argumentTypes,Kusto.Language.Symbols.TypeSymbol);iArg=iArg+1|0){if(iArg>=signature.MaxArgumentCount){argumentParameters.add(Kusto.Language.Symbols.Signature.UnknownParameter);continue}if(currentParam=System.Array.getItem(signature.Parameters,iCurrentParameter.v,Kusto.Language.Symbols.Parameter),iCurrentParameter.v<(System.Array.getCount(signature.Parameters,Kusto.Language.Symbols.Parameter)-1|0)&&iCurrentParameterCount.v>=currentParam.MaxOccurring&&(iCurrentParameter.v=iCurrentParameter.v+1|0,iCurrentParameterCount.v=0,currentParam=System.Array.getItem(signature.Parameters,iCurrentParameter.v,Kusto.Language.Symbols.Parameter)),iCurrentParameterCount.v<currentParam.MinOccurring||iCurrentParameterCount.v===0&&currentParam.MinOccurring===0&&!this._allowSkippingOptionalParameters)argumentParameters.add(currentParam),iCurrentParameterCount.v=iCurrentParameterCount.v+1|0;else if(iCurrentParameter.v===(System.Array.getCount(signature.Parameters,Kusto.Language.Symbols.Parameter)-1|0))iCurrentParameterCount.v<currentParam.MaxOccurring?(argumentParameters.add(currentParam),iCurrentParameterCount.v=iCurrentParameterCount.v+1|0):argumentParameters.add(Kusto.Language.Symbols.Signature.UnknownParameter);else for(var arg=$arguments!=null?System.Array.getItem($arguments,iArg,Kusto.Language.Syntax.Expression):null,argType=System.Array.getItem(argumentTypes,iArg,Kusto.Language.Symbols.TypeSymbol),currentMatch=Kusto.Language.Binding.Binder.GetParameterMatchKind(signature,argumentParameters,argumentTypes,currentParam,arg,argType,!1),iNextParameter=iCurrentParameter.v+1|0;iNextParameter<System.Array.getCount(signature.Parameters,Kusto.Language.Symbols.Parameter);)if(nextParam=System.Array.getItem(signature.Parameters,iNextParameter,Kusto.Language.Symbols.Parameter),nextMatch=Kusto.Language.Binding.Binder.GetParameterMatchKind(signature,argumentParameters,argumentTypes,nextParam,arg,argType,!1),currentMatch>=nextMatch&&currentMatch!==Kusto.Language.Binding.ParameterMatchKind.None){argumentParameters.add(currentParam);iCurrentParameterCount.v=iCurrentParameterCount.v+1|0;break}else if(nextMatch!==Kusto.Language.Binding.ParameterMatchKind.None){argumentParameters.add(nextParam);iCurrentParameter.v=iNextParameter;iCurrentParameterCount.v=1;break}else if(nextParam.MinOccurring===0&&this._allowSkippingOptionalParameters&&iNextParameter<(System.Array.getCount(signature.Parameters,Kusto.Language.Symbols.Parameter)-1|0)){iNextParameter=iNextParameter+1|0;continue}else{argumentParameters.add(currentParam);iCurrentParameterCount.v=iCurrentParameterCount.v+1|0;break}}},GetNextPossibleParameters:function(signature,$arguments,possibleParameters){var existingArgumentParameters=Kusto.Language.Symbols.RepeatingParameterLayout.s_parameterListPool.AllocateFromPool(),argumentTypes=Kusto.Language.Symbols.RepeatingParameterLayout.s_typeListPool.AllocateFromPool(),iCurrentParameter,iCurrentParameterCount,currentParam,iNextParameter,nextParam;try{if(Kusto.Language.Symbols.RepeatingParameterLayout.GetArgumentTypes($arguments,argumentTypes),iCurrentParameter={v:0},iCurrentParameterCount={v:0},this.GetArgumentParameters$2(signature,$arguments,argumentTypes,existingArgumentParameters,iCurrentParameter,iCurrentParameterCount),System.Array.getCount($arguments,Kusto.Language.Syntax.Expression)>=signature.MaxArgumentCount)return;if(currentParam=System.Array.getItem(signature.Parameters,iCurrentParameter.v,Kusto.Language.Symbols.Parameter),iCurrentParameter.v<(System.Array.getCount(signature.Parameters,Kusto.Language.Symbols.Parameter)-1|0)&&iCurrentParameterCount.v>=currentParam.MaxOccurring&&(iCurrentParameter.v=iCurrentParameter.v+1|0,iCurrentParameterCount.v=0,currentParam=System.Array.getItem(signature.Parameters,iCurrentParameter.v,Kusto.Language.Symbols.Parameter)),iCurrentParameterCount.v<currentParam.MinOccurring)possibleParameters.add(currentParam),iCurrentParameterCount.v=iCurrentParameterCount.v+1|0;else if(iCurrentParameter.v===(System.Array.getCount(signature.Parameters,Kusto.Language.Symbols.Parameter)-1|0))iCurrentParameterCount.v<currentParam.MaxOccurring&&(possibleParameters.add(currentParam),iCurrentParameterCount.v=iCurrentParameterCount.v+1|0);else if(possibleParameters.add(currentParam),iCurrentParameterCount.v>0||this._allowSkippingOptionalParameters)for(iNextParameter=iCurrentParameter.v+1|0;iNextParameter<System.Array.getCount(signature.Parameters,Kusto.Language.Symbols.Parameter);)if(nextParam=System.Array.getItem(signature.Parameters,iNextParameter,Kusto.Language.Symbols.Parameter),possibleParameters.add(nextParam),nextParam.MinOccurring===0&&this._allowSkippingOptionalParameters&&iNextParameter<(System.Array.getCount(signature.Parameters,Kusto.Language.Symbols.Parameter)-1|0)){iNextParameter=iNextParameter+1|0;continue}else break}finally{Kusto.Language.Symbols.RepeatingParameterLayout.s_typeListPool.ReturnToPool(argumentTypes);Kusto.Language.Symbols.RepeatingParameterLayout.s_parameterListPool.ReturnToPool(existingArgumentParameters)}}}});Bridge.define("Kusto.Language.Symbols.VariableSymbol",{inherits:[Kusto.Language.Symbols.Symbol],props:{Type:null,IsConstant:!1,ConstantValueInfo:null,ConstantValue:{get:function(){var $t;return($t=this.ConstantValueInfo)!=null?$t.Value:null}},Source:null,Kind:{get:function(){return Kusto.Language.Symbols.SymbolKind.Variable}},Tabularity:{get:function(){return this.Type.Tabularity}}},ctors:{ctor:function(name,type,isConstant,constantValueInfo,source){isConstant===void 0&&(isConstant=!1);constantValueInfo===void 0&&(constantValueInfo=null);source===void 0&&(source=null);this.$initialize();Kusto.Language.Symbols.Symbol.ctor.call(this,name);this.Type=Kusto.Language.Utils.ArgumentCheckers.CheckArgumentNull(Kusto.Language.Symbols.TypeSymbol,type,"type");this.IsConstant=isConstant;this.ConstantValueInfo=constantValueInfo;this.Source=source}}});Bridge.define("Kusto.Language.Syntax.SyntaxNode",{inherits:[Kusto.Language.Syntax.SyntaxElement],fields:{fullWidth:0},props:{FullWidth:{get:function(){return this.fullWidth}},ReferencedSymbol:{get:function(){var $t;return($t=this.GetSemanticInfo())!=null?$t.ReferencedSymbol:null}},ReferencedSignature:{get:function(){var $t;return($t=this.GetSemanticInfo())!=null?$t.ReferencedSignature:null}},CalledFunctionHasErrors:{get:function(){var $t,$t1,$t2;return $t=($t1=this.GetSemanticInfo())!=null&&($t2=$t1.CalledFunctionInfo)!=null?$t2.HasErrors:null,$t!=null?$t:!1}},Alternates:{get:function(){var $t;return($t=this.GetSemanticInfo())!=null?$t.Alternates:null}},SemanticDiagnostics:{get:function(){var $t;return(($t=this.GetSemanticInfo())!=null?$t.Diagnostics:null)||Kusto.Language.Diagnostic.NoDiagnostics}},IsBound:{get:function(){return this.GetSemanticInfo()!=null}}},ctors:{ctor:function(diagnostics){this.$initialize();Kusto.Language.Syntax.SyntaxElement.ctor.call(this,diagnostics)}},methods:{Init:function(){Kusto.Language.Syntax.SyntaxElement.prototype.Init.call(this);this.fullWidth=this.ComputeFullWidth()},Clone$1:function(includeDiagnostics){return includeDiagnostics===void 0&&(includeDiagnostics=!0),Bridge.cast(this.CloneCore(includeDiagnostics),Kusto.Language.Syntax.SyntaxNode)},WalkNodes:function(action){Kusto.Language.Syntax.SyntaxElement.WalkNodes(this,action)},GetOriginalNode:function(){for(var $t,node=this,startInOriginal,locationInOriginal;(($t=node.Tree)!=null?$t.Original:null)!=null;)if(startInOriginal=node.Tree.OffsetInOriginal+node.TextStart|0,locationInOriginal=node.Tree.Original.Root.GetNodeAt(startInOriginal,node.Width),locationInOriginal!=null){node=locationInOriginal;continue}return node},GetPositionInOriginalTree:function(position){for(var originalPosition=position,tree=this.Tree;tree.Original!=null;)originalPosition=originalPosition+tree.OffsetInOriginal|0,tree=tree.Original;return originalPosition},GetExpansion:function(){var $t,$t1,$t2;return($t=this.GetSemanticInfo())!=null&&($t1=$t.CalledFunctionInfo)!=null&&($t2=$t1.Expansion)!=null?$t2.Root:null},GetCalledFunctionBody:function(){var $t,$t1,$t2;return($t=this.GetSemanticInfo())!=null&&($t1=$t.CalledFunctionInfo)!=null&&($t2=$t1.Expansion)!=null?$t2.Root:null},GetCalledFunctionFacts:function(){var $t,$t1;return($t=this.GetSemanticInfo())!=null&&($t1=$t.CalledFunctionInfo)!=null?$t1.Facts:null},GetCalledFunctionDiagnostics:function(){var $t,$t1;return(($t=this.GetSemanticInfo())!=null&&($t1=$t.CalledFunctionInfo)!=null?$t1.Diagnostics:null)||Kusto.Language.Diagnostic.NoDiagnostics},GetSemanticInfo:function(){var data=this.GetExtendedData(!1);return data!=null?data.SemanticInfo:null}}});Bridge.define("Kusto.Language.Syntax.DefaultSyntaxVisitor$1",function(TResult){return{inherits:[Kusto.Language.Syntax.SyntaxVisitor$1(TResult)],methods:{VisitDirectiveBlock:function(node){return this.DefaultVisit(node)},VisitSkippedTokens:function(node){return this.DefaultVisit(node)},VisitQueryBlock:function(node){return this.DefaultVisit(node)},VisitTypeOfLiteralExpression:function(node){return this.DefaultVisit(node)},VisitBadQueryOperator:function(node){return this.DefaultVisit(node)},VisitCompoundStringLiteralExpression:function(node){return this.DefaultVisit(node)},VisitTokenName:function(node){return this.DefaultVisit(node)},VisitBracketedName:function(node){return this.DefaultVisit(node)},VisitBracedName:function(node){return this.DefaultVisit(node)},VisitWildcardedName:function(node){return this.DefaultVisit(node)},VisitBracketedWildcardedName:function(node){return this.DefaultVisit(node)},VisitNameDeclaration:function(node){return this.DefaultVisit(node)},VisitNameReference:function(node){return this.DefaultVisit(node)},VisitLiteralExpression:function(node){return this.DefaultVisit(node)},VisitStarExpression:function(node){return this.DefaultVisit(node)},VisitAtExpression:function(node){return this.DefaultVisit(node)},VisitJsonPair:function(node){return this.DefaultVisit(node)},VisitJsonObjectExpression:function(node){return this.DefaultVisit(node)},VisitJsonArrayExpression:function(node){return this.DefaultVisit(node)},VisitDynamicExpression:function(node){return this.DefaultVisit(node)},VisitParenthesizedExpression:function(node){return this.DefaultVisit(node)},VisitExpressionList:function(node){return this.DefaultVisit(node)},VisitExpressionCouple:function(node){return this.DefaultVisit(node)},VisitPrefixUnaryExpression:function(node){return this.DefaultVisit(node)},VisitBinaryExpression:function(node){return this.DefaultVisit(node)},VisitInExpression:function(node){return this.DefaultVisit(node)},VisitHasAnyExpression:function(node){return this.DefaultVisit(node)},VisitHasAllExpression:function(node){return this.DefaultVisit(node)},VisitBetweenExpression:function(node){return this.DefaultVisit(node)},VisitFunctionCallExpression:function(node){return this.DefaultVisit(node)},VisitToScalarExpression:function(node){return this.DefaultVisit(node)},VisitToTableExpression:function(node){return this.DefaultVisit(node)},VisitMaterializedViewCombineExpression:function(node){return this.DefaultVisit(node)},VisitMaterializedViewCombineNameClause:function(node){return this.DefaultVisit(node)},VisitMaterializedViewCombineClause:function(node){return this.DefaultVisit(node)},VisitSimpleNamedExpression:function(node){return this.DefaultVisit(node)},VisitRenameList:function(node){return this.DefaultVisit(node)},VisitCompoundNamedExpression:function(node){return this.DefaultVisit(node)},VisitBracketedExpression:function(node){return this.DefaultVisit(node)},VisitPathExpression:function(node){return this.DefaultVisit(node)},VisitElementExpression:function(node){return this.DefaultVisit(node)},VisitPipeExpression:function(node){return this.DefaultVisit(node)},VisitRangeOperator:function(node){return this.DefaultVisit(node)},VisitNamedParameter:function(node){return this.DefaultVisit(node)},VisitConsumeOperator:function(node){return this.DefaultVisit(node)},VisitCountOperator:function(node){return this.DefaultVisit(node)},VisitCountAsIdentifierClause:function(node){return this.DefaultVisit(node)},VisitExecuteAndCacheOperator:function(node){return this.DefaultVisit(node)},VisitExtendOperator:function(node){return this.DefaultVisit(node)},VisitFacetOperator:function(node){return this.DefaultVisit(node)},VisitFacetWithOperatorClause:function(node){return this.DefaultVisit(node)},VisitFacetWithExpressionClause:function(node){return this.DefaultVisit(node)},VisitFilterOperator:function(node){return this.DefaultVisit(node)},VisitGetSchemaOperator:function(node){return this.DefaultVisit(node)},VisitFindOperator:function(node){return this.DefaultVisit(node)},VisitDataScopeClause:function(node){return this.DefaultVisit(node)},VisitTypedColumnReference:function(node){return this.DefaultVisit(node)},VisitFindInClause:function(node){return this.DefaultVisit(node)},VisitFindProjectClause:function(node){return this.DefaultVisit(node)},VisitPackExpression:function(node){return this.DefaultVisit(node)},VisitNameAndTypeDeclaration:function(node){return this.DefaultVisit(node)},VisitPrimitiveTypeExpression:function(node){return this.DefaultVisit(node)},VisitSearchOperator:function(node){return this.DefaultVisit(node)},VisitForkOperator:function(node){return this.DefaultVisit(node)},VisitNameEqualsClause:function(node){return this.DefaultVisit(node)},VisitForkExpression:function(node){return this.DefaultVisit(node)},VisitMakeSeriesOperator:function(node){return this.DefaultVisit(node)},VisitMakeSeriesExpression:function(node){return this.DefaultVisit(node)},VisitDefaultExpressionClause:function(node){return this.DefaultVisit(node)},VisitMakeSeriesOnClause:function(node){return this.DefaultVisit(node)},VisitMakeSeriesFromClause:function(node){return this.DefaultVisit(node)},VisitMakeSeriesToClause:function(node){return this.DefaultVisit(node)},VisitMakeSeriesStepClause:function(node){return this.DefaultVisit(node)},VisitMakeSeriesInRangeClause:function(node){return this.DefaultVisit(node)},VisitMakeSeriesFromToStepClause:function(node){return this.DefaultVisit(node)},VisitMakeSeriesByClause:function(node){return this.DefaultVisit(node)},VisitMvExpandOperator:function(node){return this.DefaultVisit(node)},VisitMvExpandExpression:function(node){return this.DefaultVisit(node)},VisitMvExpandRowLimitClause:function(node){return this.DefaultVisit(node)},VisitMvApplyOperator:function(node){return this.DefaultVisit(node)},VisitMvApplyExpression:function(node){return this.DefaultVisit(node)},VisitMvApplyRowLimitClause:function(node){return this.DefaultVisit(node)},VisitMvApplyContextIdClause:function(node){return this.DefaultVisit(node)},VisitMvApplySubqueryExpression:function(node){return this.DefaultVisit(node)},VisitToTypeOfClause:function(node){return this.DefaultVisit(node)},VisitEvaluateSchemaClause:function(node){return this.DefaultVisit(node)},VisitEvaluateOperator:function(node){return this.DefaultVisit(node)},VisitParseOperator:function(node){return this.DefaultVisit(node)},VisitParseWhereOperator:function(node){return this.DefaultVisit(node)},VisitParseKvWithClause:function(node){return this.DefaultVisit(node)},VisitParseKvOperator:function(node){return this.DefaultVisit(node)},VisitPartitionOperator:function(node){return this.DefaultVisit(node)},VisitPartitionQuery:function(node){return this.DefaultVisit(node)},VisitPartitionScope:function(node){return this.DefaultVisit(node)},VisitPartitionSubquery:function(node){return this.DefaultVisit(node)},VisitProjectOperator:function(node){return this.DefaultVisit(node)},VisitProjectAwayOperator:function(node){return this.DefaultVisit(node)},VisitProjectKeepOperator:function(node){return this.DefaultVisit(node)},VisitProjectRenameOperator:function(node){return this.DefaultVisit(node)},VisitProjectReorderOperator:function(node){return this.DefaultVisit(node)},VisitSampleOperator:function(node){return this.DefaultVisit(node)},VisitSampleDistinctOperator:function(node){return this.DefaultVisit(node)},VisitEntityGroup:function(node){return this.DefaultVisit(node)},VisitReduceByOperator:function(node){return this.DefaultVisit(node)},VisitReduceByWithClause:function(node){return this.DefaultVisit(node)},VisitSummarizeOperator:function(node){return this.DefaultVisit(node)},VisitMacroExpandScopeReferenceName:function(node){return this.DefaultVisit(node)},VisitMacroExpandOperator:function(node){return this.DefaultVisit(node)},VisitSummarizeByClause:function(node){return this.DefaultVisit(node)},VisitDistinctOperator:function(node){return this.DefaultVisit(node)},VisitTakeOperator:function(node){return this.DefaultVisit(node)},VisitSortOperator:function(node){return this.DefaultVisit(node)},VisitOrderedExpression:function(node){return this.DefaultVisit(node)},VisitOrderingClause:function(node){return this.DefaultVisit(node)},VisitOrderingNullsClause:function(node){return this.DefaultVisit(node)},VisitTopHittersOperator:function(node){return this.DefaultVisit(node)},VisitTopHittersByClause:function(node){return this.DefaultVisit(node)},VisitTopOperator:function(node){return this.DefaultVisit(node)},VisitTopNestedOperator:function(node){return this.DefaultVisit(node)},VisitTopNestedClause:function(node){return this.DefaultVisit(node)},VisitTopNestedWithOthersClause:function(node){return this.DefaultVisit(node)},VisitUnionOperator:function(node){return this.DefaultVisit(node)},VisitAsOperator:function(node){return this.DefaultVisit(node)},VisitSerializeOperator:function(node){return this.DefaultVisit(node)},VisitInvokeOperator:function(node){return this.DefaultVisit(node)},VisitRenderOperator:function(node){return this.DefaultVisit(node)},VisitMakeGraphOperator:function(node){return this.DefaultVisit(node)},VisitMakeGraphWithTablesAndKeysClause:function(node){return this.DefaultVisit(node)},VisitMakeGraphWithImplicitIdClause:function(node){return this.DefaultVisit(node)},VisitGraphMarkComponentsOperator:function(node){return this.DefaultVisit(node)},VisitMakeGraphTableAndKeyClause:function(node){return this.DefaultVisit(node)},VisitMakeGraphPartitionedByClause:function(node){return this.DefaultVisit(node)},VisitGraphMergeOperator:function(node){return this.DefaultVisit(node)},VisitGraphToTableOperator:function(node){return this.DefaultVisit(node)},VisitGraphToTableOutputClause:function(node){return this.DefaultVisit(node)},VisitGraphToTableAsClause:function(node){return this.DefaultVisit(node)},VisitGraphMatchOperator:function(node){return this.DefaultVisit(node)},VisitGraphMatchPattern:function(node){return this.DefaultVisit(node)},VisitGraphMatchPatternNode:function(node){return this.DefaultVisit(node)},VisitGraphMatchPatternEdge:function(node){return this.DefaultVisit(node)},VisitGraphMatchPatternEdgeRange:function(node){return this.DefaultVisit(node)},VisitWhereClause:function(node){return this.DefaultVisit(node)},VisitProjectClause:function(node){return this.DefaultVisit(node)},VisitNameReferenceList:function(node){return this.DefaultVisit(node)},VisitRenderWithClause:function(node){return this.DefaultVisit(node)},VisitPrintOperator:function(node){return this.DefaultVisit(node)},VisitAliasStatement:function(node){return this.DefaultVisit(node)},VisitLetStatement:function(node){return this.DefaultVisit(node)},VisitFunctionDeclaration:function(node){return this.DefaultVisit(node)},VisitFunctionParameters:function(node){return this.DefaultVisit(node)},VisitFunctionParameter:function(node){return this.DefaultVisit(node)},VisitDefaultValueDeclaration:function(node){return this.DefaultVisit(node)},VisitFunctionBody:function(node){return this.DefaultVisit(node)},VisitSchemaTypeExpression:function(node){return this.DefaultVisit(node)},VisitExpressionStatement:function(node){return this.DefaultVisit(node)},VisitMaterializeExpression:function(node){return this.DefaultVisit(node)},VisitSetOptionStatement:function(node){return this.DefaultVisit(node)},VisitOptionValueClause:function(node){return this.DefaultVisit(node)},VisitQueryParametersStatement:function(node){return this.DefaultVisit(node)},VisitRestrictStatement:function(node){return this.DefaultVisit(node)},VisitPatternStatement:function(node){return this.DefaultVisit(node)},VisitPatternDeclaration:function(node){return this.DefaultVisit(node)},VisitPatternPathParameter:function(node){return this.DefaultVisit(node)},VisitPatternMatch:function(node){return this.DefaultVisit(node)},VisitPatternPathValue:function(node){return this.DefaultVisit(node)},VisitDataScopeExpression:function(node){return this.DefaultVisit(node)},VisitDataTableExpression:function(node){return this.DefaultVisit(node)},VisitRowSchema:function(node){return this.DefaultVisit(node)},VisitEvaluateRowSchema:function(node){return this.DefaultVisit(node)},VisitExternalDataExpression:function(node){return this.DefaultVisit(node)},VisitContextualDataTableExpression:function(node){return this.DefaultVisit(node)},VisitExternalDataWithClause:function(node){return this.DefaultVisit(node)},VisitJoinOperator:function(node){return this.DefaultVisit(node)},VisitLookupOperator:function(node){return this.DefaultVisit(node)},VisitJoinOnClause:function(node){return this.DefaultVisit(node)},VisitJoinWhereClause:function(node){return this.DefaultVisit(node)},VisitScanOperator:function(node){return this.DefaultVisit(node)},VisitAssertSchemaOperator:function(node){return this.DefaultVisit(node)},VisitScanDeclareClause:function(node){return this.DefaultVisit(node)},VisitScanOrderByClause:function(node){return this.DefaultVisit(node)},VisitScanPartitionByClause:function(node){return this.DefaultVisit(node)},VisitScanStepOutput:function(node){return this.DefaultVisit(node)},VisitScanStep:function(node){return this.DefaultVisit(node)},VisitScanComputationClause:function(node){return this.DefaultVisit(node)},VisitScanAssignment:function(node){return this.DefaultVisit(node)},VisitPartitionByOperator:function(node){return this.DefaultVisit(node)},VisitPartitionByIdClause:function(node){return this.DefaultVisit(node)},VisitCommandWithValueClause:function(node){return this.DefaultVisit(node)},VisitCommandWithPropertyListClause:function(node){return this.DefaultVisit(node)},VisitUnknownCommand:function(node){return this.DefaultVisit(node)},VisitCustomCommand:function(node){return this.DefaultVisit(node)},VisitCommandAndSkippedTokens:function(node){return this.DefaultVisit(node)},VisitBadCommand:function(node){return this.DefaultVisit(node)},VisitCommandBlock:function(node){return this.DefaultVisit(node)},VisitCustom:function(node){return this.DefaultVisit(node)},VisitList:function(list){return this.DefaultVisit(list)},VisitSeparatedElement:function(separatedElement){return this.DefaultVisit(separatedElement)}}}});Bridge.define("Kusto.Language.Syntax.SyntaxToken",{inherits:[Kusto.Language.Syntax.SyntaxElement],statics:{methods:{From:function(token,diagnostic){diagnostic===void 0&&(diagnostic=null);var dx=token.Diagnostics;diagnostic!=null&&(dx=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Diagnostic,System.Linq.Enumerable.from(dx,Kusto.Language.Diagnostic).concat(System.Array.init([diagnostic],Kusto.Language.Diagnostic))));switch(Kusto.Language.Syntax.SyntaxFacts.GetCategory(token.Kind)){case Kusto.Language.Syntax.SyntaxCategory.Identifier:return Kusto.Language.Syntax.SyntaxToken.Identifier(token.Trivia,token.Text,void 0,dx);case Kusto.Language.Syntax.SyntaxCategory.Keyword:return Kusto.Language.Syntax.SyntaxToken.Keyword(token.Trivia,token.Kind,void 0,dx);case Kusto.Language.Syntax.SyntaxCategory.Literal:return Kusto.Language.Syntax.SyntaxToken.Literal(token.Trivia,token.Text,token.Kind,dx);case Kusto.Language.Syntax.SyntaxCategory.Punctuation:return Kusto.Language.Syntax.SyntaxToken.Punctuation(token.Trivia,token.Kind,dx);case Kusto.Language.Syntax.SyntaxCategory.Operator:return Kusto.Language.Syntax.SyntaxToken.Operator(token.Trivia,token.Kind,dx);case Kusto.Language.Syntax.SyntaxCategory.Other:default:return Kusto.Language.Syntax.SyntaxToken.Other(token.Trivia,token.Text,token.Kind,dx)}},Keyword:function(trivia,keyword,valueText,diagnostics){return valueText===void 0&&(valueText=null),diagnostics===void 0&&(diagnostics=null),Kusto.Language.Syntax.SyntaxToken.CheckCategory(keyword,Kusto.Language.Syntax.SyntaxCategory.Keyword),valueText==null||Bridge.referenceEquals(valueText,Kusto.Language.Syntax.SyntaxFacts.GetText(keyword))?new Kusto.Language.Syntax.SyntaxToken.KindToken(trivia,keyword,diagnostics):new Kusto.Language.Syntax.SyntaxToken.TextAndKindToken(trivia,Kusto.Language.Syntax.SyntaxFacts.GetText(keyword),valueText,keyword,diagnostics)},Identifier:function(trivia,text,valueText,diagnostics){return valueText===void 0&&(valueText=null),diagnostics===void 0&&(diagnostics=null),valueText==null||Bridge.referenceEquals(valueText,text)?new Kusto.Language.Syntax.SyntaxToken.IdentifierToken(trivia,text,diagnostics):new Kusto.Language.Syntax.SyntaxToken.TextAndKindToken(trivia,text,valueText,Kusto.Language.Syntax.SyntaxKind.IdentifierToken,diagnostics)},Punctuation:function(trivia,kind,diagnostics){return diagnostics===void 0&&(diagnostics=null),Kusto.Language.Syntax.SyntaxToken.CheckCategory(kind,Kusto.Language.Syntax.SyntaxCategory.Punctuation),new Kusto.Language.Syntax.SyntaxToken.KindToken(trivia,kind,diagnostics)},Operator:function(trivia,kind,diagnostics){return diagnostics===void 0&&(diagnostics=null),Kusto.Language.Syntax.SyntaxToken.CheckCategory(kind,Kusto.Language.Syntax.SyntaxCategory.Operator),new Kusto.Language.Syntax.SyntaxToken.KindToken(trivia,kind,diagnostics)},Literal:function(trivia,text,kind,diagnostics){return diagnostics===void 0&&(diagnostics=null),Kusto.Language.Syntax.SyntaxToken.CheckCategory(kind,Kusto.Language.Syntax.SyntaxCategory.Literal),new Kusto.Language.Syntax.SyntaxToken.LiteralToken(trivia,text,kind,diagnostics)},Other:function(trivia,text,kind,diagnostics){return diagnostics===void 0&&(diagnostics=null),Kusto.Language.Syntax.SyntaxToken.CheckCategory(kind,Kusto.Language.Syntax.SyntaxCategory.Other),new Kusto.Language.Syntax.SyntaxToken.TextAndKindToken(trivia,text,text,kind,diagnostics)},Missing$1:function(trivia,kind,diagnostics){return new Kusto.Language.Syntax.SyntaxToken.MissingToken(trivia,kind,diagnostics)},Missing:function(kind,diagnostic){return diagnostic===void 0&&(diagnostic=null),new Kusto.Language.Syntax.SyntaxToken.MissingToken("",kind,diagnostic!=null?System.Array.init([diagnostic],Kusto.Language.Diagnostic):null)},CheckCategory:function(kind,category){if(Kusto.Language.Syntax.SyntaxFacts.GetCategory(kind)!==category)throw new System.ArgumentException.$ctor1(System.String.format("The kind {0} is not a {1}",Bridge.box(kind,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind)),System.Enum.toString(Kusto.Language.Syntax.SyntaxCategory,category).toLowerCase()));}}},props:{Trivia:{get:function(){return""}},Text:{get:function(){return""}},Value:{get:function(){return this.Text}},ValueText:{get:function(){return this.Text}},ChildCount:{get:function(){return 0}},TriviaWidth:{get:function(){return this.Trivia.length}},FullWidth:{get:function(){return this.Trivia.length+this.Text.length|0}},Width:{get:function(){return this.Text.length}},IsToken:{get:function(){return!0}},IsLiteral:{get:function(){return!1}},Prefix:{get:function(){return""}}},ctors:{ctor:function(diagnostics){this.$initialize();Kusto.Language.Syntax.SyntaxElement.ctor.call(this,diagnostics)}},methods:{Clone$1:function(includeDiagnostics){return includeDiagnostics===void 0&&(includeDiagnostics=!0),Bridge.cast(this.CloneCore(includeDiagnostics),Kusto.Language.Syntax.SyntaxToken)},ToString:function(includeTrivia){return System.String.isNullOrEmpty(this.Trivia)||includeTrivia!==Kusto.Language.Syntax.IncludeTrivia.All?this.Text:(this.Trivia||"")+(this.Text||"")},Write:function(builder,includeTrivia,initialTriviaStart){if(!System.String.isNullOrEmpty(this.Trivia)){var beforeQuery=this.TriviaStart===initialTriviaStart,afterQuery=this.Kind===Kusto.Language.Syntax.SyntaxKind.EndOfTextToken;switch(includeTrivia){case Kusto.Language.Syntax.IncludeTrivia.All:builder.append(this.Trivia);break;case Kusto.Language.Syntax.IncludeTrivia.Interior:beforeQuery||builder.append(this.Trivia);break;case Kusto.Language.Syntax.IncludeTrivia.Minimal:beforeQuery||afterQuery||(System.String.contains(this.Trivia,"\n")?builder.append("\n"):builder.append(" "));break;case Kusto.Language.Syntax.IncludeTrivia.SingleLine:beforeQuery||afterQuery||builder.append(" ");break}}builder.append(this.Text)},GetNextToken:function(includeZeroWidthTokens){return includeZeroWidthTokens===void 0&&(includeZeroWidthTokens=!1),Kusto.Language.Syntax.SyntaxElement.GetNextToken(null,this,includeZeroWidthTokens)},GetPreviousToken:function(includeZeroWidthTokens){return includeZeroWidthTokens===void 0&&(includeZeroWidthTokens=!1),Kusto.Language.Syntax.SyntaxElement.GetPreviousToken(null,this,includeZeroWidthTokens)}}});Bridge.define("Kusto.Language.Utils.StringAndNumberComparer",{inherits:[System.Collections.Generic.IComparer$1(System.String)],statics:{fields:{Ordinal:null,OrdinalIgnoreCase:null},ctors:{init:function(){this.Ordinal=new Kusto.Language.Utils.StringAndNumberComparer(4);this.OrdinalIgnoreCase=new Kusto.Language.Utils.StringAndNumberComparer(5)}},methods:{LengthOfNumber:function(text,startIndex){for(var index=startIndex;index<text.length;index=index+1|0)if(!System.Char.isDigit(text.charCodeAt(index)))break;return index-startIndex|0}}},fields:{_comparison:0},alias:["compare",["System$Collections$Generic$IComparer$1$System$String$compare","System$Collections$Generic$IComparer$1$compare"]],ctors:{ctor:function(comparison){this.$initialize();this._comparison=comparison}},methods:{compare:function(xText,yText){for(var xStart=0,yStart=0,xSegmentIsNumber,ySegmentIsNumber,commonLength,comp1;xStart<xText.length&&yStart<yText.length;)if(xSegmentIsNumber=System.Char.isDigit(xText.charCodeAt(xStart)),ySegmentIsNumber=System.Char.isDigit(yText.charCodeAt(yStart)),xSegmentIsNumber&&ySegmentIsNumber){var xNumberLength=Kusto.Language.Utils.StringAndNumberComparer.LengthOfNumber(xText,xStart),yNumberLength=Kusto.Language.Utils.StringAndNumberComparer.LengthOfNumber(yText,yStart),comp=this.CompareNumberSegment(xText,xStart,xNumberLength,yText,yStart,yNumberLength);if(comp!==0)return comp;xStart=xStart+xNumberLength|0;yStart=yStart+yNumberLength|0}else if(xSegmentIsNumber||ySegmentIsNumber)return xText.charCodeAt(xStart)-yText.charCodeAt(yStart)|0;else{if(commonLength=this.GetCommonLengthWithoutDigits(xText,xStart,yText,yStart),comp1=System.String.compare(xText.substr(xStart,commonLength),yText.substr(yStart,commonLength),this._comparison),comp1!==0)return comp1;xStart=xStart+commonLength|0;yStart=yStart+commonLength|0}return(xText.length-xStart|0)>0?1:(yText.length-yStart|0)>0?-1:0},GetCommonLengthWithoutDigits:function(xText,xStart,yText,yStart){for(var length=0;(xStart+length|0)<xText.length&&!System.Char.isDigit(xText.charCodeAt(xStart+length|0))&&(yStart+length|0)<yText.length&&!System.Char.isDigit(yText.charCodeAt(yStart+length|0));)length=length+1|0;return length},CompareNumberSegment:function(xText,xStart,xLength,yText,yStart,yLength){while(xStart<xText.length&&xLength>yLength&&xText.charCodeAt(xStart)===48)xStart=xStart+1|0;while(yStart<yText.length&&yLength>xLength&&yText.charCodeAt(yStart)===48)yStart=yStart+1|0;return xLength>0&&xLength===yLength?System.String.compare(xText.substr(xStart,xLength),yText.substr(yStart,xLength)):xLength-yLength|0}}});Bridge.define("Kusto.Language.Utils.StringTable",{inherits:[System.Collections.Generic.IEnumerable$1(System.String)],fields:{map:null},alias:["GetEnumerator",["System$Collections$Generic$IEnumerable$1$System$String$GetEnumerator","System$Collections$Generic$IEnumerable$1$GetEnumerator"]],ctors:{init:function(){this.map=new(Kusto.Language.Utils.TextKeyedDictionary$1(System.String))},ctor:function(){this.$initialize()}},methods:{Add:function(text){var result={};return this.map.TryGetValue(text,0,text.length,result)||(result.v=this.map.GetOrAddValue$3(text,0,text.length,function(_t,_s,_l){return _s>0||_l<_t.length?_t.substr(_s,_l):_t})),result.v},Add$2:function(strings){var $t,s;$t=Bridge.getEnumerator(strings,System.String);try{while($t.moveNext())s=$t.Current,this.Add(s)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}},Add$1:function(text,start,length){var result={};return this.map.TryGetValue(text,start,length,result)||(result.v=this.map.GetOrAddValue$3(text,start,length,function(_t,_s,_l){return _t.substr(_s,_l)})),result.v},Contains:function(text){return this.map.ContainsKey(text)},ContainsKey:function(text,start,length){return this.map.ContainsKey$1(text,start,length)},GetEnumerator:function(){return this.map.GetEnumerator()},System$Collections$IEnumerable$GetEnumerator:function(){return this.GetEnumerator()}}});Bridge.define("Kusto.Language.Utils.SubstringMap$1.Node.ArrayCharMap",function(TValue){return{inherits:[Kusto.Language.Utils.SubstringMap$1.Node.CharMap(TValue)],$kind:"nested class",fields:{_pairs:null,_length:0},ctors:{ctor:function(count){this.$initialize();Kusto.Language.Utils.SubstringMap$1.Node.CharMap(TValue).ctor.call(this);this._pairs=System.Array.init(count,function(){return new(System.Collections.Generic.KeyValuePair$2(System.Char,Kusto.Language.Utils.SubstringMap$1.Node(TValue)))},System.Collections.Generic.KeyValuePair$2(System.Char,Kusto.Language.Utils.SubstringMap$1.Node(TValue)));this._length=0}},methods:{Add:function(key,node){return this._length<(this._pairs.length-1|0)?(this._pairs[System.Array.index(this._length,this._pairs)]=new(System.Collections.Generic.KeyValuePair$2(System.Char,Kusto.Language.Utils.SubstringMap$1.Node(TValue)).$ctor1)(key,node),this._length=this._length+1|0,this):new(Kusto.Language.Utils.SubstringMap$1.Node.DictionaryMap(TValue))(this._pairs).Add(key,node)},Get:function(key){for(var kvp,i=0;i<this._length;i=i+1|0)if(kvp=this._pairs[System.Array.index(i,this._pairs)],kvp.key===key)return kvp.value;return null}}}});Bridge.define("Kusto.Language.Utils.SubstringMap$1.Node.DictionaryMap",function(TValue){return{inherits:[Kusto.Language.Utils.SubstringMap$1.Node.CharMap(TValue)],$kind:"nested class",fields:{_map:null},ctors:{ctor:function(kvps){var $t,kvp;if(kvps===void 0&&(kvps=null),this.$initialize(),Kusto.Language.Utils.SubstringMap$1.Node.CharMap(TValue).ctor.call(this),this._map=new(System.Collections.Generic.Dictionary$2(System.Char,Kusto.Language.Utils.SubstringMap$1.Node(TValue)).ctor),kvps!=null){$t=Bridge.getEnumerator(kvps);try{while($t.moveNext())kvp=$t.Current,this._map.add(kvp.key,kvp.value)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}}},methods:{Add:function(key,node){return this._map.add(key,node),this},Get:function(key){var value={};return this._map.tryGetValue(key,value),value.v}}}});Bridge.define("Kusto.Language.Utils.SubstringMap$1.Node.SingleCharMap",function(TValue){return{inherits:[Kusto.Language.Utils.SubstringMap$1.Node.CharMap(TValue)],$kind:"nested class",fields:{_key:0,_node:null},ctors:{ctor:function(key,node){this.$initialize();Kusto.Language.Utils.SubstringMap$1.Node.CharMap(TValue).ctor.call(this);this._key=key;this._node=node}},methods:{Add:function(key,node){return new(Kusto.Language.Utils.SubstringMap$1.Node.ArrayCharMap(TValue))(3).Add(this._key,this._node).Add(key,node)},Get:function(key){return this._key===key?this._node:null}}}});Bridge.define("Kusto.Language.Binding.Binder.AsContextBuilder",{inherits:[Kusto.Language.Syntax.DefaultSyntaxVisitor],$kind:"nested class",fields:{_position:0,_binder:null},ctors:{ctor:function(position,binder){this.$initialize();Kusto.Language.Syntax.DefaultSyntaxVisitor.ctor.call(this);this._position=position;this._binder=binder}},methods:{DefaultVisit:function(node){var i,n,child;if(node!=null)for(i=0,n=node.ChildCount;i<n;i=i+1|0)child=Bridge.as(node.GetChild(i),Kusto.Language.Syntax.SyntaxNode),child!=null&&child.Accept$1(this)},VisitAsOperator:function(node){var name,type,declaration;Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitAsOperator.call(this,node);name=node.Name.SimpleName;type=node.ResultType;!System.String.isNullOrEmpty(name)&&this._position>node.End&&type!=null&&(declaration=new Kusto.Language.Symbols.VariableSymbol(node.Name.SimpleName,type),this._binder._localScope.AddSymbol(declaration))},VisitFunctionBody:function(node){this._position>node.TextStart&&this._position<node.End&&Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitFunctionBody.call(this,node)}}});Bridge.define("Kusto.Language.Binding.Binder.ContextBuilder",{inherits:[Kusto.Language.Syntax.DefaultSyntaxVisitor],$kind:"nested class",statics:{methods:{CanHoldMore:function(node){for(var i,child,lastToken=node.GetLastToken(!0),subNode=lastToken.Parent;!Bridge.referenceEquals(subNode,node)&&subNode.TextStart>node.TextStart;subNode=subNode.Parent)for(i=subNode.ChildCount-1|0;i>=0;i=i-1|0){if((child=subNode.GetChild(i),child==null&&subNode.IsOptional(i))||Bridge.is(child,Kusto.Language.Syntax.SyntaxList))return!0;if(child!=null&&child.Width>0)break}return!1},IsInTriviaAfter:function(node,position){return Kusto.Language.Binding.Binder.ContextBuilder.IsInTriviaAfter$1(node.GetLastToken(),position)},IsInTriviaAfter$1:function(token,position){var nextToken=token.GetNextToken();return nextToken==null||position<nextToken.TextStart||nextToken.Kind===Kusto.Language.Syntax.SyntaxKind.EndOfTextToken},IsIncomplete:function(node){var $t,last=node.GetLastToken(!0);return $t=last!=null?last.IsMissing:null,$t!=null?$t:!1}}},fields:{_binder:null,_position:0,_asBuilder:null},ctors:{ctor:function(binder,position){this.$initialize();Kusto.Language.Syntax.DefaultSyntaxVisitor.ctor.call(this);this._binder=binder;this._position=position;this._asBuilder=new Kusto.Language.Binding.Binder.AsContextBuilder(position,this._binder)}},methods:{DefaultVisit:function(node){for(var parentNode,parent=node.Parent;parent!=null;parent=parent.Parent)if((parentNode=parent)!=null){parentNode.Accept$1(this);break}node.Parent==null&&node.Accept$1(this._asBuilder)},VisitPathExpression:function(node){Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitPathExpression.call(this,node);this._position>=node.Selector.TriviaStart&&(this._binder._pathScope=node.Expression.ResultType)},VisitElementExpression:function(node){Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitElementExpression.call(this,node);this._position>=node.Selector.TriviaStart&&(this._binder._pathScope=node.Expression.ResultType)},VisitParenthesizedExpression:function(node){Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitParenthesizedExpression.call(this,node);this._binder._pathScope=null;this._binder._implicitArgumentType=null},VisitFunctionCallExpression:function(node){Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitFunctionCallExpression.call(this,node);this._position>node.Name.End&&(this._binder._pathScope=null,this._binder._scopeKind=this._binder.GetArgumentScope$1(node,this._position,this._binder._scopeKind),this._binder._rowScope=Kusto.Language.Binding.Binder.GetArgumentRowScope(node,this._position,this._binder._rowScope),this._binder._implicitArgumentType=null)},VisitPipeExpression:function(node){Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitPipeExpression.call(this,node);this._position>=node.Operator.TriviaStart&&(this._binder._rowScope=Bridge.as(node.Expression.ResultType,Kusto.Language.Symbols.TableSymbol))},VisitEvaluateOperator:function(node){Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitEvaluateOperator.call(this,node);this._position>=node.Parameters.End&&(this._binder._scopeKind=Kusto.Language.Binding.ScopeKind.PlugIn)},VisitSummarizeOperator:function(node){Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitSummarizeOperator.call(this,node);(node.ByClause==null||this._position<node.ByClause.TextStart)&&(this._binder._scopeKind=Kusto.Language.Binding.ScopeKind.Aggregate)},VisitMacroExpandOperator:function(node){var $t,$t1,scopeSymbol,egSymbol,entityGroupName;Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitMacroExpandOperator.call(this,node);this._position>=node.OpenParen.End&&((scopeSymbol=($t=node.ScopeReferenceName)!=null&&($t1=$t.EntityGroupReferenceName)!=null?$t1.ReferencedSymbol:Bridge.as(null,Kusto.Language.Symbols.EntityGroupElementSymbol))!=null?this._binder._localScope.AddSymbol(scopeSymbol):(egSymbol=Bridge.as(node.EntityGroup.ResultType,Kusto.Language.Symbols.EntityGroupSymbol))!=null&&(entityGroupName=Bridge.as(node.EntityGroup,Kusto.Language.Syntax.NameReference))!=null&&(scopeSymbol=new Kusto.Language.Symbols.EntityGroupElementSymbol.$ctor1(entityGroupName.SimpleName,egSymbol),this._binder._localScope.AddSymbol(scopeSymbol)))},VisitNamedParameter:function(node){Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitNamedParameter.call(this,node);this._position>=node.EqualToken.End&&(node.Expression.IsMissing||this._position<node.End)&&(this._binder._scopeKind=Kusto.Language.Binding.ScopeKind.Normal)},VisitMakeSeriesOperator:function(node){Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitMakeSeriesOperator.call(this,node);(this._position<node.OnClause.TextStart||node.OnClause.IsMissing&&node.OnClause.End===node.End&&this._position>=node.End)&&(this._binder._scopeKind=Kusto.Language.Binding.ScopeKind.Aggregate)},VisitTopNestedClause:function(node){Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitTopNestedClause.call(this,node);node.ByKeyword.Width>0&&this._position>node.ByKeyword.End&&(this._binder._scopeKind=Kusto.Language.Binding.ScopeKind.Aggregate)},VisitFunctionDeclaration:function(node){Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitFunctionDeclaration.call(this,node);this._position>=node.Body.TextStart&&(this._position<node.Body.End||node.Body.CloseBrace.IsMissing&&this._position<=(node.Body.End+1|0))&&this._binder.AddDeclarationsToLocalScope(node.Parameters.Parameters)},VisitFunctionBody:function(node){Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitFunctionBody.call(this,node);(node.CloseBrace.IsMissing||this._position<node.CloseBrace.TextStart)&&this.AddStatementDeclarationsToScope(node.Statements)},VisitQueryBlock:function(node){Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitQueryBlock.call(this,node);this.AddStatementDeclarationsToScope(node.Statements)},VisitCommandBlock:function(node){var command,commandResults;Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitCommandBlock.call(this,node);node.Statements.Count>0&&node.Statements.getItem$1(0).Separator!=null&&this._position>node.Statements.getItem$1(0).End?(command=node.Statements.getItem$1(0).Element$1.GetFirstDescendant(Kusto.Language.Syntax.Command),command!=null&&(commandResults=new Kusto.Language.Symbols.VariableSymbol("$command_results",Kusto.Language.Binding.Binder.GetResultTypeOrError(command)),this._binder._localScope.AddSymbol(commandResults))):this.AddStatementDeclarationsToScope(node.Statements)},AddStatementDeclarationsToScope:function(statementList){for(var se,ls,qps,ps,i=0,n=statementList.Count;i<n;i=i+1|0){if(se=statementList.getItem$1(i),this._position<se.End||Kusto.Language.Binding.Binder.ContextBuilder.IsInTriviaAfter(se.Element$1,this._position)&&(Kusto.Language.Binding.Binder.ContextBuilder.IsIncomplete(se.Element$1)||Kusto.Language.Binding.Binder.ContextBuilder.CanHoldMore(se.Element$1)))break;(ls=Bridge.as(se.Element$1,Kusto.Language.Syntax.LetStatement))!=null?this._binder.AddLetDeclarationToScope(this._binder._localScope,ls):(qps=Bridge.as(se.Element$1,Kusto.Language.Syntax.QueryParametersStatement))!=null?this._binder.AddDeclarationsToLocalScope(qps.Parameters):(ps=Bridge.as(se.Element$1,Kusto.Language.Syntax.PatternStatement))!=null&&this._binder._localScope.AddSymbol(Kusto.Language.Binding.Binder.GetReferencedSymbol$1(ps.Name))}},VisitPatternDeclaration:function(node){Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitPatternDeclaration.call(this,node);this._position>node.Patterns.TextStart&&(this._binder.AddDeclarationsToLocalScope$1(node.Parameters),node.PathParameter!=null&&this._binder.AddDeclarationToLocalScope(node.PathParameter.Parameter.Name))},VisitJoinOperator:function(node){Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitJoinOperator.call(this,node);node.ConditionClause==null||this._position<node.ConditionClause.TextStart?this._binder._rowScope=null:node.ConditionClause!=null&&this._position>=node.ConditionClause.TextStart&&(this._binder._rightRowScope=Bridge.as(node.Expression.ResultType,Kusto.Language.Symbols.TableSymbol))},VisitLookupOperator:function(node){Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitLookupOperator.call(this,node);node.LookupClause.IsMissing||this._position<node.LookupClause.TextStart?this._binder._rowScope=null:this._position>=node.LookupClause.TextStart&&(this._binder._rightRowScope=Bridge.as(node.Expression.ResultType,Kusto.Language.Symbols.TableSymbol))},VisitUnionOperator:function(node){Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitUnionOperator.call(this,node);this._binder._rowScope=null},VisitFindOperator:function(node){Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitFindOperator.call(this,node);(node.InClause==null||this._position>=node.InClause.End)&&(this._binder._rowScope=this._binder.GetFindColumnsTable(node))},VisitSearchOperator:function(node){Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitSearchOperator.call(this,node);this._position>=node.Condition.TextStart&&(this._binder._rowScope=this._binder.GetSearchColumnsTable(node));node.InClause!=null&&this._position>=node.InClause.TextStart&&(this._binder._rowScope=null)},VisitMvApplyOperator:function(node){if(Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitMvApplyOperator.call(this,node),!node.OnKeyword.IsMissing&&this._position>=node.OnKeyword.TextStart){var info=new Kusto.Language.Binding.Binder.NodeBinder(this._binder).VisitMvApplyOperator(node);this._binder._rowScope=Bridge.as(info!=null?info.ResultType:null,Kusto.Language.Symbols.TableSymbol)}},VisitInvokeOperator:function(node){Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitInvokeOperator.call(this,node);node.Function!=null&&!node.Function.IsMissing&&this._position>node.Function.TextStart&&(this._binder._rowScope=null)},VisitPartitionOperator:function(node){if(Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitPartitionOperator.call(this,node),this._position>=node.Operand.TextStart&&Bridge.is(node.Operand,Kusto.Language.Syntax.PartitionQuery)){var column=Bridge.as(node.ByExpression.ReferencedSymbol,Kusto.Language.Symbols.ColumnSymbol);column!=null&&this._binder._localScope.AddSymbol(column)}},VisitScanOperator:function(node){Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitScanOperator.call(this,node);this._position>node.WithKeyword.TextStart&&node.DeclareClause!=null&&(this._binder.AddDeclarationsToLocalScope(node.DeclareClause.Declarations),this._binder.AddStepDeclarationsToLocalScope(node))},VisitCustomCommand:function(node){var nearestTableRef=System.Linq.Enumerable.from(node.GetDescendants(Kusto.Language.Syntax.NameReference,function(nr){return Bridge.is(nr.ReferencedSymbol,Kusto.Language.Symbols.TableSymbol)}),Kusto.Language.Syntax.NameReference).where(Bridge.fn.bind(this,function(nr){return nr.End<=this._position})).lastOrDefault(null,null);nearestTableRef!=null&&(this._binder._rowScope=Bridge.cast(nearestTableRef.ReferencedSymbol,Kusto.Language.Symbols.TableSymbol))},VisitToScalarExpression:function(node){Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitToScalarExpression.call(this,node);this._binder._rowScope=null},VisitToTableExpression:function(node){Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitToTableExpression.call(this,node);this._binder._rowScope=null},VisitSetOptionStatement:function(node){Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitSetOptionStatement.call(this,node);this._position>=node.SetKeyword.End&&(node.ValueClause==null||this._position<=node.ValueClause.TextStart)&&(this._binder._scopeKind=Kusto.Language.Binding.ScopeKind.Option)},VisitMaterializedViewCombineExpression:function(node){Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitMaterializedViewCombineExpression.call(this,node);this._position>node.AggregationsClause.OpenParen.TextStart&&(this._binder._rowScope=Bridge.as(Kusto.Language.Binding.Binder.GetResultType$1(node.DeltaClause.Expression),Kusto.Language.Symbols.TableSymbol))},VisitMakeGraphTableAndKeyClause:function(node){Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitMakeGraphTableAndKeyClause.call(this,node);this._position>=node.OnKeyword.TextStart&&(this._binder._rowScope=Bridge.as(node.Table.ResultType,Kusto.Language.Symbols.TableSymbol))},VisitGraphMatchOperator:function(node){Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitGraphMatchOperator.call(this,node);(node.WhereClause!=null&&this._position>=node.WhereClause.TextStart||node.ProjectClause!=null&&this._position>=node.ProjectClause.TextStart)&&(this._binder._localScope=new Kusto.Language.Binding.LocalScope.ctor(this._binder._localScope),this._binder.AddGraphMatchPatternDeclarationsToLocalScope(node))},VisitGraphMergeOperator:function(node){if(Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitGraphMergeOperator.call(this,node),node.OnClause==null||this._position<node.OnClause.TextStart)this._binder._rowScope=null;else if(node.OnClause!=null&&this._position>=node.OnClause.TextStart){var lgs,leftShape=(lgs=Kusto.Language.Binding.Binder.GetGraphSymbol(node))!=null?lgs.EdgeShape:null,rgs,rightShape=(rgs=Bridge.as(node.Graph.ResultType,Kusto.Language.Symbols.GraphSymbol))!=null?rgs.EdgeShape:null;this._binder._rowScope=leftShape||rightShape;this._binder._rightRowScope=rightShape||leftShape}}}});Bridge.define("Kusto.Language.Binding.Binder.NodeBinder",{inherits:[Kusto.Language.Syntax.SyntaxVisitor$1(Kusto.Language.Binding.SemanticInfo)],$kind:"nested class",statics:{fields:{s_symbolMapPool:null,s_joinColumnsPool:null,s_GetSchemaSchema:null,s_GetSchemaInfo:null,s_GetSchemaAsCslSchema:null,s_GetSchemaAsCslInfo:null},ctors:{init:function(){this.s_symbolMapPool=new(Kusto.Language.Utils.ObjectPool$1(System.Collections.Generic.Dictionary$2(System.String,Kusto.Language.Symbols.Symbol)))(function(){return new(System.Collections.Generic.Dictionary$2(System.String,Kusto.Language.Symbols.Symbol).ctor)},function(d){d.clear()});this.s_joinColumnsPool=new(Kusto.Language.Utils.ObjectPool$1(System.Collections.Generic.List$1(Kusto.Language.Binding.Binder.NodeBinder.JoinColumnPair)))(function(){return new(System.Collections.Generic.List$1(Kusto.Language.Binding.Binder.NodeBinder.JoinColumnPair).ctor)},function(list){list.clear()});this.s_GetSchemaSchema=new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("ColumnName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("ColumnOrdinal",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("DataType",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("ColumnType",Kusto.Language.Symbols.ScalarTypes.String)]);this.s_GetSchemaInfo=new Kusto.Language.Binding.SemanticInfo.$ctor5(Kusto.Language.Binding.Binder.NodeBinder.s_GetSchemaSchema);this.s_GetSchemaAsCslSchema=new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("Schema",Kusto.Language.Symbols.ScalarTypes.String)]);this.s_GetSchemaAsCslInfo=new Kusto.Language.Binding.SemanticInfo.$ctor5(Kusto.Language.Binding.Binder.NodeBinder.s_GetSchemaAsCslSchema)}},methods:{GetNameFromContext:function(expr){var ls;return(ls=Bridge.as(expr.Parent,Kusto.Language.Syntax.LetStatement))!=null?ls.Name.SimpleName:""},TryGetIntValue:function(value,intValue){var iVal,longVal;return(iVal=Bridge.is(value,System.Int32)?System.Nullable.getValue(Bridge.cast(Bridge.unbox(value,System.Int32),System.Int32)):null)!=null?(intValue.v=iVal,!0):System.Nullable.liftne("ne",longVal=Bridge.is(value,System.Int64)?System.Nullable.getValue(Bridge.cast(Bridge.unbox(value,System.Int64),System.Int64)):null,System.Int64.lift(null))?(intValue.v=System.Int64.clip32(longVal),!0):(intValue.v=0,!1)},IsArgument:function(e){var se,list,el;return(se=Bridge.as(e.Parent,Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)))!=null&&(list=Bridge.as(se.Parent,Kusto.Language.Syntax.SyntaxList))!=null&&(el=Bridge.as(list.Parent,Kusto.Language.Syntax.ExpressionList))!=null&&Bridge.is(el.Parent,Kusto.Language.Syntax.FunctionCallExpression)},IsLeftOperand:function(e){var be;return(be=Bridge.as(e.Parent,Kusto.Language.Syntax.BinaryExpression))!=null&&Bridge.referenceEquals(be.Left,e)},CheckQueryOperators:function(expr,validQueryOperators,diagnostics,operatorRequired,allowContextualRoot){var pe,q;for(operatorRequired===void 0&&(operatorRequired=!0),allowContextualRoot===void 0&&(allowContextualRoot=!1);(pe=Bridge.as(expr,Kusto.Language.Syntax.PipeExpression))!=null;)Kusto.Language.Binding.Binder.NodeBinder.CheckQueryOperator(pe.Operator,validQueryOperators,diagnostics),expr=pe.Expression;(q=Bridge.as(expr,Kusto.Language.Syntax.QueryOperator))!=null?Kusto.Language.Binding.Binder.NodeBinder.CheckQueryOperator(q,validQueryOperators,diagnostics):!operatorRequired||allowContextualRoot&&Bridge.is(expr,Kusto.Language.Syntax.ContextualDataTableExpression)||diagnostics.add(Kusto.Language.DiagnosticFacts.GetQueryOperatorExpected().WithLocation(expr))},CheckQueryOperator:function(queryOperator,validQueryOperators,diagnostics){var keyword=queryOperator.GetFirstToken();keyword==null||System.Linq.Enumerable.from(validQueryOperators,Kusto.Language.Syntax.SyntaxKind).contains(queryOperator.Kind)||queryOperator.ContainsSyntaxDiagnostics||diagnostics.add(Kusto.Language.DiagnosticFacts.GetQueryOperatorNotAllowedInContext(keyword.Text).WithLocation(keyword))},GetPackColumns:function(tables,projectedColumns,packColumns){var $t,$t1,$t2,colNameMap=Kusto.Language.Binding.Binder.s_stringSetPool.AllocateFromPool(),c,t,c1;try{$t=Bridge.getEnumerator(projectedColumns,Kusto.Language.Symbols.ColumnSymbol);try{while($t.moveNext())c=$t.Current,colNameMap.add(c.Name)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}$t1=Bridge.getEnumerator(tables,Kusto.Language.Symbols.TableSymbol);try{while($t1.moveNext())if(t=$t1.Current,!t.IsOpen){$t2=Bridge.getEnumerator(t.Columns,Kusto.Language.Symbols.ColumnSymbol);try{while($t2.moveNext())if(c1=$t2.Current,!colNameMap.contains(c1.Name)){packColumns.add(c1);break}}finally{Bridge.is($t2,System.IDisposable)&&$t2.System$IDisposable$Dispose()}}}finally{Bridge.is($t1,System.IDisposable)&&$t1.System$IDisposable$Dispose()}}finally{Kusto.Language.Binding.Binder.s_stringSetPool.ReturnToPool(colNameMap)}},ReferencesAllTablesImplicitly:function(node){return node.Condition.GetFirstDescendantOrSelf(Kusto.Language.Syntax.StarExpression)!=null?!0:node.Condition.GetFirstDescendantOrSelf(Kusto.Language.Syntax.Expression,function(e){return Kusto.Language.Binding.Binder.NodeBinder.IsStandAloneSearchTerm(e)})!=null},IsStandAloneSearchTerm:function(expr){return expr.IsConstant&&Bridge.is(expr.ConstantValue,System.String)&&Bridge.referenceEquals(expr.ResultType,Kusto.Language.Symbols.ScalarTypes.Bool)},IsAntiOrSemiJoin:function(joinKind){return Kusto.Language.Binding.Binder.NodeBinder.IsLeftAntiOrSemiJoin(joinKind)||Kusto.Language.Binding.Binder.NodeBinder.IsRightAntiOrSemiJoin(joinKind)},IsLeftAntiOrSemiJoin:function(joinKind){switch(joinKind){case"anti":case"leftanti":case"leftsemi":case"leftantisemi":return!0;default:return!1}},IsRightAntiOrSemiJoin:function(joinKind){switch(joinKind){case"rightanti":case"rightsemi":case"rightantisemi":return!0;default:return!1}},CheckJoinOnKeysComparable:function(left,right,diagnostics){var leftType=Bridge.as(left.ResultType,Kusto.Language.Symbols.ScalarSymbol)||Kusto.Language.Symbols.ScalarTypes.Unknown,rightType=Bridge.as(right.ResultType,Kusto.Language.Symbols.ScalarSymbol)||Kusto.Language.Symbols.ScalarTypes.Unknown;if(Bridge.is(leftType,Kusto.Language.Symbols.DynamicSymbol))return diagnostics!=null&&diagnostics.add(Kusto.Language.DiagnosticFacts.GetJoinKeyCannotBeDynamic().WithLocation(left)),!1;else if(Bridge.is(rightType,Kusto.Language.Symbols.DynamicSymbol))return diagnostics!=null&&diagnostics.add(Kusto.Language.DiagnosticFacts.GetJoinKeyCannotBeDynamic().WithLocation(right)),!1;return Bridge.referenceEquals(leftType,Kusto.Language.Symbols.ScalarTypes.Unknown)||leftType.IsError||Bridge.referenceEquals(rightType,Kusto.Language.Symbols.ScalarTypes.Unknown)||rightType.IsError?!0:Bridge.referenceEquals(Kusto.Language.Binding.Binder.Promote(leftType),Kusto.Language.Binding.Binder.Promote(rightType))?!0:(diagnostics!=null&&diagnostics.add(Kusto.Language.DiagnosticFacts.GetJoinKeysNotComparable(leftType.Name,rightType.Name)),!1)},RemoveParenthesis:function(expression){for(var pe;(pe=Bridge.as(expression,Kusto.Language.Syntax.ParenthesizedExpression))!=null;)expression=pe.Expression;return expression},GetReferencedName:function(expression){var nr,br;do{if(Bridge.is(expression,Kusto.Language.Syntax.NameReference))return nr=Bridge.cast(expression,Kusto.Language.Syntax.NameReference),nr.SimpleName;if(Bridge.is(expression,Kusto.Language.Syntax.BracketedExpression)){if(br=Bridge.cast(expression,Kusto.Language.Syntax.BracketedExpression),br.Expression.Kind===Kusto.Language.Syntax.SyntaxKind.StringLiteralExpression||br.Expression.Kind===Kusto.Language.Syntax.SyntaxKind.CompoundStringLiteralExpression)return Bridge.cast(br.Expression.LiteralValue,System.String);break}}while(0);return null},GetMvExpandResultType:function(parameters,expression,toTypeOf){var $t,$t1,newType,toTypeOfType,arrayType,bagexpKind;return(toTypeOfType=toTypeOf!=null&&($t=toTypeOf.TypeOf)!=null?$t.ReferencedSymbol:Bridge.as(null,Kusto.Language.Symbols.TypeSymbol))!=null?newType=toTypeOfType:(arrayType=Bridge.as(expression.ResultType,Kusto.Language.Symbols.DynamicArraySymbol))!=null?newType=Kusto.Language.Symbols.TypeFacts.GetElementType(expression.ResultType):Bridge.is(expression.ResultType,Kusto.Language.Symbols.DynamicBagSymbol)?(bagexpKind=($t1=Kusto.Language.Syntax.SyntaxExtensions.GetParameterNameValue(parameters,Kusto.Language.QueryOperatorParameters.BagExpansion),$t1!=null?$t1:Kusto.Language.Syntax.SyntaxExtensions.GetParameterNameValue(parameters,Kusto.Language.QueryOperatorParameters.Kind)),newType=Bridge.referenceEquals(bagexpKind,"array")?Kusto.Language.Symbols.ScalarTypes.DynamicArray:Kusto.Language.Symbols.ScalarTypes.DynamicBag):newType=Bridge.is(expression.ResultType,Kusto.Language.Symbols.DynamicSymbol)?Kusto.Language.Symbols.ScalarTypes.Dynamic:expression.ResultType,newType}}},fields:{_binder:null},props:{RowScopeOrEmpty:{get:function(){return this._binder.RowScopeOrEmpty}},RightRowScopeOrEmpty:{get:function(){return this._binder.RightRowScopeOrEmpty}}},ctors:{ctor:function(binder){this.$initialize();Kusto.Language.Syntax.SyntaxVisitor$1(Kusto.Language.Binding.SemanticInfo).ctor.call(this);this._binder=binder}},methods:{VisitNameAndTypeDeclaration:function(node){return Kusto.Language.Binding.Binder.VoidInfo},VisitFunctionDeclaration:function(node){var $t,diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),parameters,canBeTabular,i,fp,isOptional,p,name,fs;try{for(parameters=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.Parameter).ctor),canBeTabular=!0,i=0;i<node.Parameters.Parameters.Count;i=i+1|0)fp=node.Parameters.Parameters.getItem$1(i).Element$1,isOptional=fp.DefaultValue!=null,(p=Bridge.as(fp.NameAndType.Name.ReferencedSymbol,Kusto.Language.Symbols.ParameterSymbol))!=null&&(p.IsTabular&&!canBeTabular&&diagnostics.add(Kusto.Language.DiagnosticFacts.GetTabularParametersMustBeDeclaredFirst().WithLocation(fp)),canBeTabular=p.IsTabular,parameters.add(Kusto.Language.Symbols.Parameter.From(p,isOptional,($t=fp.DefaultValue)!=null?$t.Value:null)));return name=Kusto.Language.Binding.Binder.NodeBinder.GetNameFromContext(node),fs=new Kusto.Language.Symbols.FunctionSymbol.$ctor8(name,node.Body,parameters).WithIsView(node.ViewKeyword!=null),new Kusto.Language.Binding.SemanticInfo.$ctor5(fs,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitFunctionParameter:function(node){var diagnostics,type;if(node.DefaultValue!=null){diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool();try{if(type=this._binder.GetTypeFromTypeExpression(node.NameAndType.Type),type==null||type.IsError||this._binder.CheckIsLiteralNotToken(node.DefaultValue.Value,diagnostics)&&this._binder.CheckIsType(node.DefaultValue.Value,type,Kusto.Language.Symbols.Conversion.Compatible,diagnostics),diagnostics.Count>0)return new Kusto.Language.Binding.SemanticInfo.$ctor6(diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}}return null},VisitDefaultValueDeclaration:function(node){return null},VisitFunctionBody:function(node){return null},VisitFunctionParameters:function(node){return null},VisitPatternStatement:function(node){return null},VisitPatternDeclaration:function(node){var $t,$t1,$t2,$t3,$t4,diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),patternsigs,parameters,i,n,pathParameter,name1,type1,i1,n1,pattern,values,v,vn,parameter1,value,pathValue,patternName,resultType;try{for(patternsigs=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.PatternSignature).ctor),parameters=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.Parameter).ctor),i=0,n=node.Parameters.Count;i<n;i=i+1|0){var parameter=node.Parameters.getItem$1(0).Element$1,name=parameter.Name.SimpleName,type=this._binder.GetTypeFromTypeExpression(parameter.Type,diagnostics);parameters.add(new Kusto.Language.Symbols.Parameter.$ctor2(name,type))}for(pathParameter=null,node.PathParameter!=null&&(name1=node.PathParameter.Parameter.Name.SimpleName,type1=this._binder.GetTypeFromTypeExpression(node.PathParameter.Parameter.Type),pathParameter=new Kusto.Language.Symbols.Parameter.$ctor2(name1,type1)),i1=0,n1=node.Patterns.Count;i1<n1;i1=i1+1|0){for(pattern=node.Patterns.getItem$1(i1),pattern.ParameterValues.Expressions.Count!==node.Parameters.Count&&diagnostics.add(Kusto.Language.DiagnosticFacts.GetValueCountMustEqualParameterCount().WithLocation(pattern.ParameterValues)),values=new(System.Collections.Generic.List$1(System.String).ctor),v=0,vn=pattern.ParameterValues.Expressions.Count;v<vn;v=v+1|0)parameter1=node.Parameters.getItem$1(v).Element$1,value=pattern.ParameterValues.Expressions.getItem$1(v).Element$1,this._binder.CheckIsExactType(value,Kusto.Language.Symbols.ScalarTypes.String,diagnostics)&&this._binder.CheckIsLiteral(value,diagnostics),values.add(($t=($t1=value.LiteralValue)!=null?Bridge.toString($t1):null,$t!=null?$t:""));pathValue=null;pattern.PathValue==null&&node.PathParameter!=null?diagnostics.add(Kusto.Language.DiagnosticFacts.GetPathValueExpected().WithLocation(pattern.EqualToken)):pattern.PathValue!=null&&node.PathParameter==null?diagnostics.add(Kusto.Language.DiagnosticFacts.GetPathValueWithNoPathParameter().WithLocation(pattern.PathValue)):pattern.PathValue!=null&&node.PathParameter!=null&&(this._binder.CheckIsExactType(pattern.PathValue.Value,Kusto.Language.Symbols.ScalarTypes.String,diagnostics)&&this._binder.CheckIsLiteral(pattern.PathValue.Value,diagnostics),pathValue=($t2=($t3=pattern.PathValue.Value.LiteralValue)!=null?Bridge.toString($t3):null,$t2!=null?$t2:""));patternsigs.add(new Kusto.Language.Symbols.PatternSignature.ctor(values,pathValue,pattern.Body))}return patternName=($t4=Bridge.as(node.Parent,Kusto.Language.Syntax.PatternStatement))!=null?$t4.Name.SimpleName:null,resultType=new Kusto.Language.Symbols.PatternSymbol.$ctor1(patternName,parameters,pathParameter,patternsigs),new Kusto.Language.Binding.SemanticInfo.$ctor5(resultType,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitMaterializeExpression:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool();try{return this._binder.CheckIsTabularOrGraph(node.Expression,diagnostics),new Kusto.Language.Binding.SemanticInfo.$ctor5(Kusto.Language.Binding.Binder.GetResultTypeOrError(node.Expression),diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitNameDeclaration:function(node){return null},VisitLiteralExpression:function(node){switch(node.Kind){case Kusto.Language.Syntax.SyntaxKind.BooleanLiteralExpression:return Kusto.Language.Binding.Binder.LiteralBoolInfo;case Kusto.Language.Syntax.SyntaxKind.IntLiteralExpression:return Kusto.Language.Binding.Binder.LiteralIntInfo;case Kusto.Language.Syntax.SyntaxKind.LongLiteralExpression:return Kusto.Language.Binding.Binder.LiteralLongInfo;case Kusto.Language.Syntax.SyntaxKind.RealLiteralExpression:return Kusto.Language.Binding.Binder.LiteralRealInfo;case Kusto.Language.Syntax.SyntaxKind.DecimalLiteralExpression:return this._binder._dynamicDepth!==0?new Kusto.Language.Binding.SemanticInfo.$ctor4(Kusto.Language.Symbols.ScalarTypes.Decimal,Kusto.Language.DiagnosticFacts.GetDecimalInDynamic().WithLocation(node)):Kusto.Language.Binding.Binder.LiteralDecimalInfo;case Kusto.Language.Syntax.SyntaxKind.StringLiteralExpression:return Kusto.Language.Binding.Binder.LiteralStringInfo;case Kusto.Language.Syntax.SyntaxKind.DateTimeLiteralExpression:return Kusto.Language.Binding.Binder.LiteralDateTimeInfo;case Kusto.Language.Syntax.SyntaxKind.TimespanLiteralExpression:return Kusto.Language.Binding.Binder.LiteralTimeSpanInfo;case Kusto.Language.Syntax.SyntaxKind.GuidLiteralExpression:return Kusto.Language.Binding.Binder.LiteralGuidInfo;case Kusto.Language.Syntax.SyntaxKind.TokenLiteralExpression:return Kusto.Language.Binding.Binder.VoidInfo;case Kusto.Language.Syntax.SyntaxKind.NullLiteralExpression:return Kusto.Language.Binding.Binder.LiteralNullInfo;default:throw new System.InvalidOperationException.$ctor1(System.String.format("Unknown literal kind: {0}",[Bridge.box(node.Kind,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))]));}},VisitTypeOfLiteralExpression:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),type,pt,columns,i,element,s;try{if(node.Types.Count===1&&(pt=Bridge.as(node.Types.getItem$1(0).Element$1,Kusto.Language.Syntax.PrimitiveTypeExpression))!=null)type=Kusto.Language.Binding.Binder.GetType(pt,diagnostics);else{columns=Kusto.Language.Binding.Binder.s_columnListPool.AllocateFromPool();try{for(i=0;i<node.Types.Count;i=i+1|0){element=node.Types.getItem$1(i).Element$1;do{if(Bridge.is(element,Kusto.Language.Syntax.StarExpression)){s=Bridge.cast(element,Kusto.Language.Syntax.StarExpression);this._binder._rowScope!=null?columns.AddRange(this._binder.GetDeclaredAndInferredColumns(this.RowScopeOrEmpty)):diagnostics.add(Kusto.Language.DiagnosticFacts.GetNoColumnsInScope().WithLocation(s));break}if(Bridge.is(element,Kusto.Language.Syntax.NameAndTypeDeclaration)){var nat=Bridge.cast(element,Kusto.Language.Syntax.NameAndTypeDeclaration),declaredType=this._binder.GetTypeFromTypeExpression(nat.Type,diagnostics),newColumn=new Kusto.Language.Symbols.ColumnSymbol(nat.Name.SimpleName,declaredType);columns.add(newColumn);break}diagnostics.add(Kusto.Language.DiagnosticFacts.GetInvalidColumnDeclaration().WithLocation(element));break}while(0)}type=new Kusto.Language.Symbols.TableSymbol.$ctor3(columns)}finally{Kusto.Language.Binding.Binder.s_columnListPool.ReturnToPool(columns)}}return new Kusto.Language.Binding.SemanticInfo.$ctor3(type,Kusto.Language.Symbols.ScalarTypes.Type,diagnostics,!0,void 0)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitDynamicExpression:function(node){var info=node.Expression.GetSemanticInfo();return new Kusto.Language.Binding.SemanticInfo.$ctor5(Kusto.Language.Symbols.ScalarTypes.GetDynamic(info.ResultType),void 0,!0,void 0)},VisitCompoundStringLiteralExpression:function(node){return Kusto.Language.Binding.Binder.LiteralStringInfo},VisitBinaryExpression:function(node){var opKind=Kusto.Language.Binding.Binder.GetOperatorKind(node.Kind);if(opKind!==Kusto.Language.Symbols.OperatorKind.None)return this._binder.GetBinaryOperatorInfo$1(opKind,node.Left,node.Right,node.Operator);else throw new System.InvalidOperationException.$ctor1(System.String.format("Unknown binary operator kind: {0}",[Bridge.box(node.Kind,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))]));},VisitPrefixUnaryExpression:function(node){var opKind=Kusto.Language.Binding.Binder.GetOperatorKind(node.Kind);if(opKind!==Kusto.Language.Symbols.OperatorKind.None)return this._binder.GetUnaryOperatorInfo(opKind,node.Expression,node.Operator);else throw new System.InvalidOperationException.$ctor1(System.String.format("Unknown unary operator kind: {0}",[Bridge.box(node.Kind,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))]));},VisitInExpression:function(node){var dx=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),args=Kusto.Language.Binding.Binder.s_expressionListPool.AllocateFromPool(),i,op;try{for(args.add(node.Left),i=0;i<node.Right.Expressions.Count;i=i+1|0)args.add(node.Right.Expressions.getItem$1(i).Element$1);return op=Kusto.Language.Syntax.SyntaxFacts.GetOperatorKind(node.Operator.Kind),this._binder.GetOperatorInfo(op,args,node.Operator)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(dx);Kusto.Language.Binding.Binder.s_expressionListPool.ReturnToPool(args)}},VisitHasAnyExpression:function(node){var dx=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),args=Kusto.Language.Binding.Binder.s_expressionListPool.AllocateFromPool(),i,op;try{for(args.add(node.Left),i=0;i<node.Right.Expressions.Count;i=i+1|0)args.add(node.Right.Expressions.getItem$1(i).Element$1);return op=Kusto.Language.Syntax.SyntaxFacts.GetOperatorKind(node.Operator.Kind),this._binder.GetOperatorInfo(op,args,node.Operator)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(dx);Kusto.Language.Binding.Binder.s_expressionListPool.ReturnToPool(args)}},VisitHasAllExpression:function(node){var dx=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),args=Kusto.Language.Binding.Binder.s_expressionListPool.AllocateFromPool(),i,op;try{for(args.add(node.Left),i=0;i<node.Right.Expressions.Count;i=i+1|0)args.add(node.Right.Expressions.getItem$1(i).Element$1);return op=Kusto.Language.Syntax.SyntaxFacts.GetOperatorKind(node.Operator.Kind),this._binder.GetOperatorInfo(op,args,node.Operator)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(dx);Kusto.Language.Binding.Binder.s_expressionListPool.ReturnToPool(args)}},VisitBetweenExpression:function(node){var dx=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),args=Kusto.Language.Binding.Binder.s_expressionListPool.AllocateFromPool(),op;try{return args.add(node.Left),args.add(node.Right.First),args.add(node.Right.Second),op=Kusto.Language.Syntax.SyntaxFacts.GetOperatorKind(node.Operator.Kind),this._binder.GetOperatorInfo(op,args,node.Operator)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(dx);Kusto.Language.Binding.Binder.s_expressionListPool.ReturnToPool(args)}},VisitToScalarExpression:function(node){var dx=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),resultType,table,col;try{return node.KindParameter!=null&&this._binder.CheckQueryOperatorParameter(node.KindParameter,Kusto.Language.QueryOperatorParameters.ToScalarKindParameter,dx),resultType=Kusto.Language.Binding.Binder.GetResultType$1(node.Expression),(table=Bridge.as(resultType,Kusto.Language.Symbols.TableSymbol))!=null?System.Array.getCount(table.Columns,Kusto.Language.Symbols.ColumnSymbol)>0?(col=System.Array.getItem(table.Columns,0,Kusto.Language.Symbols.ColumnSymbol),new Kusto.Language.Binding.SemanticInfo.$ctor5(col.Type,dx,!0,void 0)):(dx.add(Kusto.Language.DiagnosticFacts.GetTableHasNoColumns().WithLocation(node.Expression)),new Kusto.Language.Binding.SemanticInfo.$ctor5(Kusto.Language.Symbols.ErrorSymbol.Instance,dx,!0,void 0)):Bridge.is(resultType,Kusto.Language.Symbols.ScalarSymbol)?new Kusto.Language.Binding.SemanticInfo.$ctor5(resultType,dx,!0,void 0):(dx.add(Kusto.Language.DiagnosticFacts.GetTableOrScalarExpected().WithLocation(node.Expression)),new Kusto.Language.Binding.SemanticInfo.$ctor5(Kusto.Language.Symbols.ErrorSymbol.Instance,dx,!0,void 0))}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(dx)}},VisitToTableExpression:function(node){var dx=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),table;try{return(node.KindParameter!=null&&this._binder.CheckQueryOperatorParameter(node.KindParameter,Kusto.Language.QueryOperatorParameters.ToTableKindParameter,dx),this._binder.CheckIsTabular(node.Expression,dx))?(table=Bridge.cast(Kusto.Language.Binding.Binder.GetResultType$1(node.Expression),Kusto.Language.Symbols.TableSymbol),new Kusto.Language.Binding.SemanticInfo.$ctor5(table,dx)):new Kusto.Language.Binding.SemanticInfo.$ctor5(Kusto.Language.Symbols.ErrorSymbol.Instance,dx)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(dx)}},VisitTokenName:function(node){return null},VisitBracketedName:function(node){return null},VisitBracedName:function(node){return null},VisitWildcardedName:function(node){return null},VisitBracketedWildcardedName:function(node){return null},VisitNameReference:function(node){var $t,_discard1,_discard2,wc,bwc,_discard3;do{if($t=node.Name,Bridge.is($t,Kusto.Language.Syntax.TokenName))return _discard1=Bridge.cast($t,Kusto.Language.Syntax.TokenName),this._binder.BindName(node.SimpleName,node.Match,node);if(Bridge.is($t,Kusto.Language.Syntax.BracketedName))return _discard2=Bridge.cast($t,Kusto.Language.Syntax.BracketedName),this._binder.BindName(node.SimpleName,node.Match,node);if(Bridge.is($t,Kusto.Language.Syntax.WildcardedName))return wc=Bridge.cast($t,Kusto.Language.Syntax.WildcardedName),this.VisitWildcardedNameReference(node,wc.SimpleName);if(Bridge.is($t,Kusto.Language.Syntax.BracketedWildcardedName))return bwc=Bridge.cast($t,Kusto.Language.Syntax.BracketedWildcardedName),this.VisitWildcardedNameReference(node,bwc.SimpleName);if(Bridge.is($t,Kusto.Language.Syntax.BracedName))return _discard3=Bridge.cast($t,Kusto.Language.Syntax.BracedName),this.VisitClientParameterReference(node);throw new System.NotImplementedException.ctor;}while(0)},VisitClientParameterReference:function(node){var symbol,table;return this._binder._globals.GetProperty(System.Boolean,Kusto.Language.Properties.AllowClientParameters)?(symbol=this._binder._globals.GetClientSymbol(node.SimpleName))!=null?Kusto.Language.Binding.Binder.GetSemanticInfo(symbol,null):Kusto.Language.Binding.Binder.IsInTabularContext(node)?(table=new Kusto.Language.Symbols.TableSymbol.$ctor4(node.SimpleName).WithIsOpen(!0),new Kusto.Language.Binding.SemanticInfo.$ctor5(table)):new Kusto.Language.Binding.SemanticInfo.$ctor5(Kusto.Language.Symbols.ScalarTypes.Unknown):new Kusto.Language.Binding.SemanticInfo.$ctor4(Kusto.Language.Symbols.ScalarTypes.Unknown,Kusto.Language.DiagnosticFacts.GetClientParametersNotSupported().WithLocation(node))},VisitWildcardedNameReference:function(node,pattern){var list=Kusto.Language.Binding.Binder.s_symbolListPool.AllocateFromPool(),filteredList=Kusto.Language.Binding.Binder.s_symbolListPool.AllocateFromPool(),matchingList=Kusto.Language.Binding.Binder.s_symbolListPool.AllocateFromPool(),match;try{return match=Kusto.Language.Binding.Binder.IsInTabularContext(node)?1082:569,this._binder.GetSymbolsInContext(node,match,10,list),this.FilterVisibleSymbols(node,list,filteredList),Kusto.Language.Binding.Binder.GetWildcardSymbols(pattern,filteredList,matchingList),matchingList.Count===1?Kusto.Language.Binding.Binder.CreateSemanticInfo(matchingList.getItem(0)):matchingList.Count>1?Kusto.Language.Binding.Binder.CreateSemanticInfo(new Kusto.Language.Symbols.GroupSymbol.$ctor1(matchingList)):this._binder._rowScope!=null&&this._binder._rowScope.IsOpen?Kusto.Language.Binding.Binder.CreateSemanticInfo(new Kusto.Language.Symbols.GroupSymbol.ctor):new Kusto.Language.Binding.SemanticInfo.$ctor4(Kusto.Language.Symbols.ErrorSymbol.Instance,Kusto.Language.DiagnosticFacts.GetNameDoesNotReferToAnyKnownItem(pattern).WithLocation(node))}finally{Kusto.Language.Binding.Binder.s_symbolListPool.ReturnToPool(list);Kusto.Language.Binding.Binder.s_symbolListPool.ReturnToPool(filteredList);Kusto.Language.Binding.Binder.s_symbolListPool.ReturnToPool(matchingList)}},FilterVisibleSymbols:function(location,symbols,filteredSymbols){var $t,IsInsideCurrentDatabaseFunction=this._binder.IsInsideCurrentDatabaseFunctionBody(location),map=Kusto.Language.Binding.Binder.NodeBinder.s_symbolMapPool.AllocateFromPool(),symbol,existingSymbol,tab,fs,fs2,tab2,fs3;try{$t=Bridge.getEnumerator(symbols,Kusto.Language.Symbols.Symbol);try{while($t.moveNext())symbol=$t.Current,existingSymbol={},map.tryGetValue(symbol.Name,existingSymbol)?(tab=Bridge.as(symbol,Kusto.Language.Symbols.TableSymbol))!=null&&(fs=Bridge.as(existingSymbol.v,Kusto.Language.Symbols.FunctionSymbol))!=null&&fs.MinArgumentCount===0&&this._binder._currentDatabase.GetAnyTable(symbol.Name)!=null&&IsInsideCurrentDatabaseFunction?map.setItem(symbol.Name,tab):(fs2=Bridge.as(symbol,Kusto.Language.Symbols.FunctionSymbol))==null||fs2.MinArgumentCount!==0||(tab2=Bridge.as(existingSymbol.v,Kusto.Language.Symbols.TableSymbol))==null||this._binder._currentDatabase.GetAnyTable(symbol.Name)==null||IsInsideCurrentDatabaseFunction||map.setItem(symbol.Name,fs2):(fs3=Bridge.as(symbol,Kusto.Language.Symbols.FunctionSymbol))!=null&&fs3.MinArgumentCount>0||map.add(symbol.Name,symbol)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}filteredSymbols.AddRange(map.Values)}finally{Kusto.Language.Binding.Binder.NodeBinder.s_symbolMapPool.ReturnToPool(map)}},VisitBracketedExpression:function(node){var ee,pe,indexerType;return(ee=Bridge.as(node.Parent,Kusto.Language.Syntax.ElementExpression))!=null&&Bridge.referenceEquals(ee.Selector,node)?this.GetElementExpressionInfo(ee.Expression,node):(pe=Bridge.as(node.Parent,Kusto.Language.Syntax.PathExpression))!=null&&Bridge.referenceEquals(pe.Selector,node)?this.GetElementExpressionInfo(pe.Expression,node):(indexerType=Kusto.Language.Binding.Binder.GetResultTypeOrError(node.Expression),indexerType.IsError)?Kusto.Language.Binding.Binder.ErrorInfo:Bridge.referenceEquals(indexerType,Kusto.Language.Symbols.ScalarTypes.String)?node.Expression.IsLiteral?this._binder.BindName(Bridge.cast(node.Expression.LiteralValue,System.String),Kusto.Language.Symbols.SymbolMatch.Default,node.Expression):new Kusto.Language.Binding.SemanticInfo.$ctor4(Kusto.Language.Symbols.ErrorSymbol.Instance,Kusto.Language.DiagnosticFacts.GetExpressionMustBeLiteral().WithLocation(node.Expression)):new Kusto.Language.Binding.SemanticInfo.$ctor4(Kusto.Language.Symbols.ErrorSymbol.Instance,Kusto.Language.DiagnosticFacts.GetExpressionMustHaveType(Kusto.Language.Symbols.ScalarSymbol,[Kusto.Language.Symbols.ScalarTypes.String]).WithLocation(node.Expression))},GetElementExpressionInfo:function(collection,selector){var indexerType=Kusto.Language.Binding.Binder.GetResultTypeOrError(selector.Expression),collectionType,arrayType,elementType,bagType,prop,name,ts,index,col;return indexerType.IsError?Kusto.Language.Binding.Binder.ErrorInfo:(collectionType=collection.ResultType,collectionType==null||collectionType.IsError?Kusto.Language.Binding.Binder.ErrorInfo:(arrayType=Bridge.as(collectionType,Kusto.Language.Symbols.DynamicArraySymbol))!=null?(elementType=Kusto.Language.Symbols.ScalarTypes.GetDynamic(arrayType.ElementType),Kusto.Language.Symbols.TypeFacts.IsIntegerOrDynamic(indexerType)?new Kusto.Language.Binding.SemanticInfo.$ctor5(elementType):new Kusto.Language.Binding.SemanticInfo.$ctor4(elementType,Kusto.Language.DiagnosticFacts.GetExpressionMustHaveType(Kusto.Language.Symbols.ScalarSymbol,[Kusto.Language.Symbols.ScalarTypes.Int,Kusto.Language.Symbols.ScalarTypes.Long]).WithLocation(selector.Expression))):(bagType=Bridge.as(collectionType,Kusto.Language.Symbols.DynamicBagSymbol))!=null?Kusto.Language.Symbols.TypeFacts.IsStringOrDynamic(indexerType)?(prop={},(name=Bridge.as(selector.Expression.ConstantValue,System.String))!=null&&bagType.TryGetProperty(name,prop)?new Kusto.Language.Binding.SemanticInfo.$ctor5(Kusto.Language.Symbols.ScalarTypes.GetDynamic(prop.v.Type)):new Kusto.Language.Binding.SemanticInfo.$ctor5(Kusto.Language.Symbols.ScalarTypes.Dynamic)):new Kusto.Language.Binding.SemanticInfo.$ctor4(Kusto.Language.Symbols.ScalarTypes.Dynamic,Kusto.Language.DiagnosticFacts.GetExpressionMustHaveType(Kusto.Language.Symbols.ScalarSymbol,[Kusto.Language.Symbols.ScalarTypes.String]).WithLocation(selector.Expression)):Bridge.referenceEquals(collectionType,Kusto.Language.Symbols.ScalarTypes.Dynamic)?Kusto.Language.Symbols.TypeFacts.IsStringOrDynamic(indexerType)||Kusto.Language.Symbols.TypeFacts.IsIntegerOrDynamic(indexerType)?new Kusto.Language.Binding.SemanticInfo.$ctor5(Kusto.Language.Symbols.ScalarTypes.Dynamic):new Kusto.Language.Binding.SemanticInfo.$ctor4(Kusto.Language.Symbols.ScalarTypes.Dynamic,Kusto.Language.DiagnosticFacts.GetExpressionMustHaveType(Kusto.Language.Symbols.ScalarSymbol,[Kusto.Language.Symbols.ScalarTypes.Int,Kusto.Language.Symbols.ScalarTypes.Long,Kusto.Language.Symbols.ScalarTypes.String]).WithLocation(selector.Expression)):(ts=Bridge.as(collectionType,Kusto.Language.Symbols.TupleSymbol))!=null?(index={},Kusto.Language.Symbols.TypeFacts.IsInteger(indexerType)&&selector.Expression.IsConstant&&Kusto.Language.Binding.Binder.NodeBinder.TryGetIntValue(selector.Expression.ConstantValue,index)&&index.v>=0&&index.v<System.Array.getCount(ts.Columns,Kusto.Language.Symbols.ColumnSymbol))?(col=System.Array.getItem(ts.Columns,index.v,Kusto.Language.Symbols.ColumnSymbol),new Kusto.Language.Binding.SemanticInfo.$ctor3(col,col.Type)):new Kusto.Language.Binding.SemanticInfo.$ctor5(Kusto.Language.Symbols.ScalarTypes.Unknown):Bridge.referenceEquals(collectionType,Kusto.Language.Symbols.ScalarTypes.Unknown)?new Kusto.Language.Binding.SemanticInfo.$ctor5(Kusto.Language.Symbols.ScalarTypes.Unknown):new Kusto.Language.Binding.SemanticInfo.$ctor4(Kusto.Language.Symbols.ErrorSymbol.Instance,Kusto.Language.DiagnosticFacts.GetTheElementAccessOperatorIsNotAllowedInThisContext().WithLocation(selector)))},VisitPathExpression:function(node){return new Kusto.Language.Binding.SemanticInfo.$ctor3(Kusto.Language.Binding.Binder.GetReferencedSymbol$1(node.Selector),Kusto.Language.Binding.Binder.GetResultTypeOrError(node.Selector))},VisitElementExpression:function(node){return new Kusto.Language.Binding.SemanticInfo.$ctor3(Kusto.Language.Binding.Binder.GetReferencedSymbol$1(node.Selector),Kusto.Language.Binding.Binder.GetResultTypeOrError(node.Selector))},VisitFunctionCallExpression:function(node){return this._binder.BindFunctionCallOrPattern(node)},VisitParenthesizedExpression:function(node){return new Kusto.Language.Binding.SemanticInfo.$ctor5(Kusto.Language.Binding.Binder.GetResultTypeOrError(node.Expression))},VisitEntityGroup:function(node){var $t,dxs=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),symbols=Kusto.Language.Binding.Binder.s_symbolListPool.AllocateFromPool(),se,expectedKind,name,type;try{if(node.Entities.Count>0){$t=Bridge.getEnumerator(node.Entities,"GetEnumerator$1");try{while($t.moveNext())se=$t.Current,expectedKind=symbols.Count>0?symbols.getItem(0).Kind:null,this.CheckEntityGroupElementKind(expectedKind,se.Element$1,dxs)&&symbols.add(se.Element$1.ResultType)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return name=Kusto.Language.Binding.Binder.NodeBinder.GetNameFromContext(node),type=new Kusto.Language.Symbols.EntityGroupSymbol.$ctor2(name,symbols),new Kusto.Language.Binding.SemanticInfo.$ctor5(type,dxs)}else return dxs.add(Kusto.Language.DiagnosticFacts.GetClusterDatabaseOrTableExpected().WithLocation(node.OpenBracket)),new Kusto.Language.Binding.SemanticInfo.$ctor5(Kusto.Language.Symbols.ErrorSymbol.Instance,dxs)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(dxs);Kusto.Language.Binding.Binder.s_symbolListPool.ReturnToPool(symbols)}},CheckEntityGroupElementKind:function(kind,expr,diagnostics){var resultType=Kusto.Language.Binding.Binder.GetResultTypeOrError(expr),expectedKind=new Kusto.Language.Symbols.SymbolKind;if((expectedKind=Bridge.is(kind,System.Int32)?System.Nullable.getValue(kind):null)!=null)if(resultType.Kind===expectedKind)return!0;else{switch(expectedKind){case Kusto.Language.Symbols.SymbolKind.Table:diagnostics.add(Kusto.Language.DiagnosticFacts.GetTableExpected().WithLocation(expr));break;case Kusto.Language.Symbols.SymbolKind.Database:diagnostics.add(Kusto.Language.DiagnosticFacts.GetDatabaseExpected().WithLocation(expr));break;case Kusto.Language.Symbols.SymbolKind.Cluster:diagnostics.add(Kusto.Language.DiagnosticFacts.GetClusterExpected().WithLocation(expr));break}return!1}else return Bridge.is(resultType,Kusto.Language.Symbols.ClusterSymbol)||Bridge.is(resultType,Kusto.Language.Symbols.DatabaseSymbol)||Bridge.is(resultType,Kusto.Language.Symbols.TableSymbol)?!0:(diagnostics.add(Kusto.Language.DiagnosticFacts.GetClusterDatabaseOrTableExpected().WithLocation(expr)),!1)},VisitOrderedExpression:function(node){return new Kusto.Language.Binding.SemanticInfo.$ctor3(Kusto.Language.Binding.Binder.GetReferencedSymbol$1(node.Expression),Kusto.Language.Binding.Binder.GetResultTypeOrError(node.Expression))},VisitSimpleNamedExpression:function(node){return new Kusto.Language.Binding.SemanticInfo.$ctor5(Kusto.Language.Binding.Binder.GetResultTypeOrError(node.Expression))},VisitCompoundNamedExpression:function(node){return new Kusto.Language.Binding.SemanticInfo.$ctor5(Kusto.Language.Binding.Binder.GetResultTypeOrError(node.Expression))},VisitPipeExpression:function(node){return new Kusto.Language.Binding.SemanticInfo.$ctor5(Kusto.Language.Binding.Binder.GetResultTypeOrError(node.Operator))},VisitAtExpression:function(node){return null},VisitDataScopeExpression:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool();try{return this._binder.CheckIsTabular(node.Expression,diagnostics),new Kusto.Language.Binding.SemanticInfo.$ctor5(Kusto.Language.Binding.Binder.GetResultTypeOrError(node.Expression),diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitExpressionCouple:function(node){return null},VisitExpressionList:function(node){return null},VisitForkExpression:function(node){var resultType=Kusto.Language.Binding.Binder.GetResultTypeOrError(node.Expression),table;return node.NameEquals!=null&&(table=Bridge.as(resultType,Kusto.Language.Symbols.TableSymbol))!=null&&(resultType=new Kusto.Language.Symbols.TableSymbol.$ctor3(this._binder.GetDeclaredAndInferredColumns(table)).WithInheritableProperties(table).WithName(node.NameEquals.Name.SimpleName)),new Kusto.Language.Binding.SemanticInfo.$ctor5(resultType)},VisitPartitionSubquery:function(node){var resultType=Kusto.Language.Binding.Binder.GetResultTypeOrError(node.Subquery),table;return(table=Bridge.as(resultType,Kusto.Language.Symbols.TableSymbol))!=null&&(resultType=new Kusto.Language.Symbols.TableSymbol.$ctor3(this._binder.GetDeclaredAndInferredColumns(table)).WithInheritableProperties(table)),new Kusto.Language.Binding.SemanticInfo.$ctor5(resultType)},VisitPartitionQuery:function(node){var resultType=Kusto.Language.Binding.Binder.GetResultTypeOrError(node.Query),table;return(table=Bridge.as(resultType,Kusto.Language.Symbols.TableSymbol))!=null&&(resultType=new Kusto.Language.Symbols.TableSymbol.$ctor3(this._binder.GetDeclaredAndInferredColumns(table)).WithInheritableProperties(table)),new Kusto.Language.Binding.SemanticInfo.$ctor5(resultType)},VisitPartitionScope:function(node){return null},VisitJsonArrayExpression:function(node){var commonType=Kusto.Language.Symbols.TypeFacts.GetCommonResultType$1(node.Values,Kusto.Language.Symbols.Conversion.None),arrayType=Kusto.Language.Symbols.ScalarTypes.GetDynamicArray(commonType);return new Kusto.Language.Binding.SemanticInfo.$ctor5(arrayType)},VisitJsonObjectExpression:function(node){var columns=Kusto.Language.Binding.Binder.s_columnListPool.AllocateFromPool(),i,pair,column,bagType;try{for(i=0;i<node.Pairs.Count;i=i+1|0)pair=node.Pairs.getItem$1(i).Element$1,column=new Kusto.Language.Symbols.ColumnSymbol(pair.Name.ValueText,pair.Value.ResultType||Kusto.Language.Symbols.ScalarTypes.Unknown),columns.add(column);return bagType=Kusto.Language.Symbols.ScalarTypes.GetDynamicBag$1(columns),new Kusto.Language.Binding.SemanticInfo.$ctor5(bagType)}finally{Kusto.Language.Binding.Binder.s_columnListPool.ReturnToPool(columns)}},VisitJsonPair:function(node){return null},VisitList:function(list){return null},VisitSeparatedElement:function(separatedElement){return null},VisitMakeSeriesExpression:function(node){return new Kusto.Language.Binding.SemanticInfo.$ctor5(Kusto.Language.Binding.Binder.GetResultTypeOrError(node.Expression))},VisitNamedParameter:function(node){return null},VisitPackExpression:function(node){return null},VisitPatternMatch:function(node){return null},VisitPatternPathValue:function(node){return null},VisitPatternPathParameter:function(node){return null},VisitPrimitiveTypeExpression:function(node){var dx=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),type;try{return type=this._binder.GetTypeFromTypeExpression(node,dx),new Kusto.Language.Binding.SemanticInfo.$ctor3(type,Kusto.Language.Symbols.VoidSymbol.Instance,dx)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(dx)}},VisitSchemaTypeExpression:function(node){var dx=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),type;try{return type=this._binder.GetTypeFromTypeExpression(node,dx),new Kusto.Language.Binding.SemanticInfo.$ctor3(type,Kusto.Language.Symbols.VoidSymbol.Instance,dx)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(dx)}},VisitQueryBlock:function(node){return null},VisitSkippedTokens:function(node){return null},VisitRenameList:function(node){return null},VisitNameReferenceList:function(node){return null},VisitStarExpression:function(node){if(Kusto.Language.Binding.Binder.NodeBinder.IsArgument(node)){var columns=this._binder.GetDeclaredAndInferredColumns(this.RowScopeOrEmpty),refSymbol=new Kusto.Language.Symbols.GroupSymbol.$ctor1(columns),resultSymbol=new Kusto.Language.Symbols.TupleSymbol.$ctor1(columns);return new Kusto.Language.Binding.SemanticInfo.$ctor3(refSymbol,resultSymbol)}else return Kusto.Language.Binding.Binder.NodeBinder.IsLeftOperand(node)?new Kusto.Language.Binding.SemanticInfo.$ctor5(Kusto.Language.Symbols.ScalarTypes.Dynamic):null},VisitTypedColumnReference:function(node){return new Kusto.Language.Binding.SemanticInfo.$ctor5(Kusto.Language.Binding.Binder.GetResultTypeOrError(node.Column))},VisitCustom:function(node){return null},VisitMaterializedViewCombineExpression:function(node){var resultType=Kusto.Language.Binding.Binder.GetResultTypeOrError(node.AggregationsClause.Expression);return new Kusto.Language.Binding.SemanticInfo.$ctor5(resultType)},VisitMaterializedViewCombineNameClause:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool();try{return!this._binder.CheckIsExactType(node.Value,Kusto.Language.Symbols.ScalarTypes.String,diagnostics)||!this._binder.CheckIsLiteral(node.Value,diagnostics)?new Kusto.Language.Binding.SemanticInfo.$ctor6(diagnostics):null}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitMaterializedViewCombineClause:function(node){return null},CheckFirstInPipe:function(queryOp,diagnostics){Kusto.Language.KustoFacts.HasPipedInput(queryOp)&&diagnostics.add(Kusto.Language.DiagnosticFacts.GetQueryOperatorMustBeFirst().WithLocation(queryOp.GetChild(0)||queryOp))},CheckNotFirstInPipe:function(queryOp,diagnostics){Kusto.Language.KustoFacts.HasPipedInput(queryOp)||diagnostics.add(Kusto.Language.DiagnosticFacts.GetQueryOperatorCannotBeFirst().WithLocation(queryOp.GetChild(0)||queryOp))},VisitBadQueryOperator:function(node){return Kusto.Language.Binding.Binder.ErrorInfo},VisitFilterOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),resultTable;try{return this.CheckNotFirstInPipe(node,diagnostics),this._binder.CheckQueryOperatorParameters(node.Parameters,Kusto.Language.QueryOperatorParameters.FilterParameters,diagnostics),this._binder.CheckIsExactType(node.Condition,Kusto.Language.Symbols.ScalarTypes.Bool,diagnostics),resultTable=new Kusto.Language.Symbols.TableSymbol.$ctor3(this._binder.GetDeclaredAndInferredColumns(this.RowScopeOrEmpty)).WithInheritableProperties(this.RowScopeOrEmpty),new Kusto.Language.Binding.SemanticInfo.$ctor5(resultTable,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitTakeOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),resultTable;try{return this.CheckNotFirstInPipe(node,diagnostics),this._binder.CheckQueryOperatorParameters(node.Parameters,Kusto.Language.QueryOperatorParameters.TakeParameters,diagnostics),this._binder.CheckIsInteger(node.Expression,diagnostics),resultTable=new Kusto.Language.Symbols.TableSymbol.$ctor3(this._binder.GetDeclaredAndInferredColumns(this.RowScopeOrEmpty)).WithInheritableProperties(this.RowScopeOrEmpty).WithIsSorted(!1),new Kusto.Language.Binding.SemanticInfo.$ctor5(resultTable,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitSampleOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),resultTable;try{return this.CheckNotFirstInPipe(node,diagnostics),this._binder.CheckQueryOperatorParameters(node.Parameters,Kusto.Language.QueryOperatorParameters.SampleParameters,diagnostics),this._binder.CheckIsInteger(node.Expression,diagnostics),resultTable=new Kusto.Language.Symbols.TableSymbol.$ctor3(this._binder.GetDeclaredAndInferredColumns(this.RowScopeOrEmpty)).WithInheritableProperties(this.RowScopeOrEmpty).WithIsSorted(!1),new Kusto.Language.Binding.SemanticInfo.$ctor5(resultTable,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitSampleDistinctOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),ofCol,result;try{return this.CheckNotFirstInPipe(node,diagnostics),this._binder.CheckQueryOperatorParameters(node.Parameters,Kusto.Language.QueryOperatorParameters.SampleDistinctParameters,diagnostics),this._binder.CheckIsInteger(node.Expression,diagnostics),this._binder.CheckIsColumn(node.OfExpression,diagnostics),ofCol=Kusto.Language.Binding.Binder.GetOrDeclareColumnForExpression(node.OfExpression,void 0,void 0,"Column1"),result=new Kusto.Language.Symbols.TableSymbol.ctor([ofCol]).WithInheritableProperties(this.RowScopeOrEmpty).WithIsSorted(!1),new Kusto.Language.Binding.SemanticInfo.$ctor5(result,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitCountOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),name;try{return this.CheckNotFirstInPipe(node,diagnostics),name=node.AsIdentifier!=null?node.AsIdentifier.Identifier.ValueText:"Count",new Kusto.Language.Binding.SemanticInfo.$ctor5(new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol(name,Kusto.Language.Symbols.ScalarTypes.Long)]),diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitProjectOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),builder=Kusto.Language.Binding.Binder.s_projectionBuilderPool.AllocateFromPool(),resultTable;try{return this.CheckNotFirstInPipe(node,diagnostics),this._binder.CheckIsScalar$1(node.Expressions,diagnostics),this._binder.CreateProjectionColumns$1(node.Expressions,builder,diagnostics),resultTable=new Kusto.Language.Symbols.TableSymbol.$ctor3(builder.GetProjection()).WithInheritableProperties(this.RowScopeOrEmpty),new Kusto.Language.Binding.SemanticInfo.$ctor5(resultTable,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_projectionBuilderPool.ReturnToPool(builder)}},VisitProjectAwayOperator:function(node){var $t,diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),columns=Kusto.Language.Binding.Binder.s_columnListPool.AllocateFromPool(),namesToRemove,column,resultType,info;try{this.CheckNotFirstInPipe(node,diagnostics);this._binder.GetColumnsInColumnList(node.Expressions,columns,diagnostics);namesToRemove=new(System.Collections.Generic.HashSet$1(System.String).$ctor1)(System.Linq.Enumerable.from(columns,Kusto.Language.Symbols.ColumnSymbol).select(function(c){return c.Name}));columns.clear();$t=Bridge.getEnumerator(this.RowScopeOrEmpty.Members,Kusto.Language.Symbols.Symbol);try{while($t.moveNext())column=Bridge.cast($t.Current,Kusto.Language.Symbols.ColumnSymbol),namesToRemove.contains(column.Name)||columns.add(column)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return resultType=new Kusto.Language.Symbols.TableSymbol.$ctor3(columns).WithInheritableProperties(this.RowScopeOrEmpty),info=new Kusto.Language.Binding.SemanticInfo.$ctor5(resultType,diagnostics),info}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_columnListPool.ReturnToPool(columns)}},VisitProjectKeepOperator:function(node){var $t,diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),columns=Kusto.Language.Binding.Binder.s_columnListPool.AllocateFromPool(),namesToKeep,column,resultType,info;try{this.CheckNotFirstInPipe(node,diagnostics);this._binder.GetColumnsInColumnList(node.Expressions,columns,diagnostics);namesToKeep=new(System.Collections.Generic.HashSet$1(System.String).$ctor1)(System.Linq.Enumerable.from(columns,Kusto.Language.Symbols.ColumnSymbol).select(function(c){return c.Name}));columns.clear();$t=Bridge.getEnumerator(this.RowScopeOrEmpty.Members,Kusto.Language.Symbols.Symbol);try{while($t.moveNext())column=Bridge.cast($t.Current,Kusto.Language.Symbols.ColumnSymbol),namesToKeep.contains(column.Name)&&columns.add(column)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return resultType=new Kusto.Language.Symbols.TableSymbol.$ctor3(columns).WithInheritableProperties(this.RowScopeOrEmpty),info=new Kusto.Language.Binding.SemanticInfo.$ctor5(resultType,diagnostics),info}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_columnListPool.ReturnToPool(columns)}},VisitProjectRenameOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),builder=Kusto.Language.Binding.Binder.s_projectionBuilderPool.AllocateFromPool(),resultTable;try{return this.CheckNotFirstInPipe(node,diagnostics),builder.AddRange(this._binder.GetDeclaredAndInferredColumns(this.RowScopeOrEmpty),!0,!0),this._binder.CreateProjectionColumns$1(node.Expressions,builder,diagnostics,Kusto.Language.Binding.Binder.ProjectionStyle.Rename,!1),resultTable=new Kusto.Language.Symbols.TableSymbol.$ctor3(builder.GetProjection()).WithInheritableProperties(this.RowScopeOrEmpty),new Kusto.Language.Binding.SemanticInfo.$ctor5(resultTable,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_projectionBuilderPool.ReturnToPool(builder)}},VisitProjectReorderOperator:function(node){var $t,diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),builder=Kusto.Language.Binding.Binder.s_projectionBuilderPool.AllocateFromPool(),col,resultTable,info;try{this.CheckNotFirstInPipe(node,diagnostics);this._binder.CreateProjectionColumns$1(node.Expressions,builder,diagnostics,Kusto.Language.Binding.Binder.ProjectionStyle.Reorder,!0);$t=Bridge.getEnumerator(this.RowScopeOrEmpty.Columns,Kusto.Language.Symbols.ColumnSymbol);try{while($t.moveNext())col=$t.Current,builder.Add(col)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return resultTable=new Kusto.Language.Symbols.TableSymbol.$ctor3(builder.GetProjection()).WithInheritableProperties(this.RowScopeOrEmpty),info=new Kusto.Language.Binding.SemanticInfo.$ctor5(resultTable,diagnostics),info}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_projectionBuilderPool.ReturnToPool(builder)}},VisitExtendOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),builder=Kusto.Language.Binding.Binder.s_projectionBuilderPool.AllocateFromPool(),resultType,info;try{return this.CheckNotFirstInPipe(node,diagnostics),this._binder.CheckIsScalar$1(node.Expressions,diagnostics),builder.AddRange(this._binder.GetDeclaredAndInferredColumns(this.RowScopeOrEmpty),!1,!0),this._binder.CreateProjectionColumns$1(node.Expressions,builder,diagnostics,Kusto.Language.Binding.Binder.ProjectionStyle.Extend,!1),resultType=new Kusto.Language.Symbols.TableSymbol.$ctor3(builder.GetProjection()).WithInheritableProperties(this.RowScopeOrEmpty),info=new Kusto.Language.Binding.SemanticInfo.$ctor5(resultType,diagnostics),info}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_projectionBuilderPool.ReturnToPool(builder)}},VisitSummarizeOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),builder=Kusto.Language.Binding.Binder.s_projectionBuilderPool.AllocateFromPool(),i,expr,resultTable;try{if(this.CheckNotFirstInPipe(node,diagnostics),this._binder.CheckQueryOperatorParameters(node.Parameters,Kusto.Language.QueryOperatorParameters.SummarizeParameters,diagnostics),this._binder.CheckIsScalar$1(node.Aggregates,diagnostics),node.ByClause!=null){for(i=0;i<node.ByClause.Expressions.Count;i=i+1|0)expr=node.ByClause.Expressions.getItem$1(i).Element$1,this._binder.CheckIsScalar(expr,diagnostics)||this._binder.CheckIsNotType(expr,Kusto.Language.Symbols.ScalarTypes.Dynamic,diagnostics);this._binder.CreateProjectionColumns$1(node.ByClause.Expressions,builder,diagnostics);builder.DoNotAddAny(builder.GetProjection())}return this._binder.CreateProjectionColumns$1(node.Aggregates,builder,diagnostics,Kusto.Language.Binding.Binder.ProjectionStyle.Summarize,!1),resultTable=new Kusto.Language.Symbols.TableSymbol.$ctor3(builder.GetProjection()).WithInheritableProperties(this.RowScopeOrEmpty).WithIsSorted(!1),new Kusto.Language.Binding.SemanticInfo.$ctor5(resultTable,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_projectionBuilderPool.ReturnToPool(builder)}},VisitDistinctOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),builder=Kusto.Language.Binding.Binder.s_projectionBuilderPool.AllocateFromPool(),resultTable;try{return this.CheckNotFirstInPipe(node,diagnostics),this._binder.CheckQueryOperatorParameters(node.Parameters,Kusto.Language.QueryOperatorParameters.DistinctParameters,diagnostics),this._binder.CheckIsScalar$1(node.Expressions,diagnostics),this._binder.CreateProjectionColumns$1(node.Expressions,builder,diagnostics),resultTable=new Kusto.Language.Symbols.TableSymbol.$ctor3(builder.GetProjection()).WithInheritableProperties(this.RowScopeOrEmpty).WithIsSorted(!1),new Kusto.Language.Binding.SemanticInfo.$ctor5(resultTable,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_projectionBuilderPool.ReturnToPool(builder)}},VisitAssertSchemaOperator:function(node){var resultTable=new Kusto.Language.Symbols.TableSymbol.$ctor3(this._binder.GetDeclaredAndInferredColumns(this.RowScopeOrEmpty)).WithInheritableProperties(this.RowScopeOrEmpty);return new Kusto.Language.Binding.SemanticInfo.$ctor5(resultTable)},VisitTopOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),resultTable;try{return this.CheckNotFirstInPipe(node,diagnostics),this._binder.CheckIsInteger(node.Expression,diagnostics),this._binder.CheckIsScalar(node.ByExpression,diagnostics),resultTable=new Kusto.Language.Symbols.TableSymbol.$ctor3(this._binder.GetDeclaredAndInferredColumns(this.RowScopeOrEmpty)).WithInheritableProperties(this.RowScopeOrEmpty).WithIsSorted(!0),new Kusto.Language.Binding.SemanticInfo.$ctor5(resultTable,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitTopHittersOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),builder=Kusto.Language.Binding.Binder.s_projectionBuilderPool.AllocateFromPool(),approxSumCol,approxCountCol,resultTable;try{return this.CheckNotFirstInPipe(node,diagnostics),this._binder.CheckIsInteger(node.Expression,diagnostics),this._binder.CheckIsColumn(node.OfExpression,diagnostics),this._binder.CreateProjectionColumns(node.OfExpression,builder,diagnostics),node.ByClause!=null?(this._binder.CheckIsNumber(node.ByClause.Expression,diagnostics),approxSumCol=Kusto.Language.Binding.Binder.GetOrDeclareColumnForExpression(node.ByClause.Expression,"approximate_sum_"+(Kusto.Language.Binding.Binder.GetExpressionResultName(node.ByClause.Expression)||"")),builder.Add(approxSumCol)):(approxCountCol=Kusto.Language.Binding.Binder.GetOrDeclareColumnForExpression(node.OfExpression,"approximate_count_"+(Kusto.Language.Binding.Binder.GetExpressionResultName(node.OfExpression)||""),Kusto.Language.Symbols.ScalarTypes.Long),builder.Add(approxCountCol)),resultTable=new Kusto.Language.Symbols.TableSymbol.$ctor3(builder.GetProjection()).WithInheritableProperties(this.RowScopeOrEmpty).WithIsSorted(!0),new Kusto.Language.Binding.SemanticInfo.$ctor5(resultTable,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_projectionBuilderPool.ReturnToPool(builder)}},VisitTopNestedOperator:function(node){var $t,diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),columns=Kusto.Language.Binding.Binder.s_columnListPool.AllocateFromPool(),uniqueNames=Kusto.Language.Binding.Binder.s_uniqueNameTablePool.AllocateFromPool(),i,n,clause,ofName,ofCol,byName,byCol,resultTable;try{for(this.CheckNotFirstInPipe(node,diagnostics),i=0,n=node.Clauses.Count;i<n;i=i+1|0)clause=node.Clauses.getItem$1(i).Element$1,clause.Expression!=null&&this._binder.CheckIsInteger(clause.Expression,diagnostics),this._binder.CheckIsScalar(clause.OfExpression,diagnostics),clause.WithOthersClause!=null&&this._binder.CheckIsScalar(clause.WithOthersClause.Expression,diagnostics),this._binder.CheckIsScalar(clause.ByExpression,diagnostics),ofName=uniqueNames.GetOrAddName(Kusto.Language.Binding.Binder.GetExpressionResultName(clause.OfExpression)),ofCol=Kusto.Language.Binding.Binder.GetOrDeclareColumnForExpression(clause.OfExpression,ofName),columns.add(ofCol),byName=uniqueNames.GetOrAddName(($t=Kusto.Language.Binding.Binder.GetExpressionDeclaredName(clause.ByExpression),$t!=null?$t:"aggregated_"+(ofName||""))),byCol=Kusto.Language.Binding.Binder.GetOrDeclareColumnForExpression(clause.ByExpression,byName),columns.add(byCol);return resultTable=new Kusto.Language.Symbols.TableSymbol.$ctor3(columns).WithInheritableProperties(this.RowScopeOrEmpty).WithIsSorted(!0),new Kusto.Language.Binding.SemanticInfo.$ctor5(resultTable,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_columnListPool.ReturnToPool(columns);Kusto.Language.Binding.Binder.s_uniqueNameTablePool.ReturnToPool(uniqueNames)}},VisitConsumeOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool();try{return this.CheckNotFirstInPipe(node,diagnostics),this._binder.CheckQueryOperatorParameters(node.Parameters,Kusto.Language.QueryOperatorParameters.ConsumeParameters,diagnostics),new Kusto.Language.Binding.SemanticInfo.$ctor5(Kusto.Language.Symbols.VoidSymbol.Instance,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitExecuteAndCacheOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),resultTable;try{return this.CheckNotFirstInPipe(node,diagnostics),resultTable=new Kusto.Language.Symbols.TableSymbol.$ctor3(this.RowScopeOrEmpty.Columns).WithInheritableProperties(this.RowScopeOrEmpty),new Kusto.Language.Binding.SemanticInfo.$ctor5(resultTable,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitRowSchema:function(node){return null},VisitEvaluateRowSchema:function(node){return null},VisitDataTableExpression:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),columns=Kusto.Language.Binding.Binder.s_columnListPool.AllocateFromPool();try{return this._binder.CheckQueryOperatorParameters(node.Parameters,Kusto.Language.QueryOperatorParameters.DataTableParameters,diagnostics),Kusto.Language.Binding.Binder.CreateColumnsFromRowSchema(node.Schema.Columns,columns,diagnostics),this._binder.CheckDataValueTypes(node.Values,columns,diagnostics),new Kusto.Language.Binding.SemanticInfo.$ctor5(new Kusto.Language.Symbols.TableSymbol.$ctor3(columns),diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_columnListPool.ReturnToPool(columns)}},VisitContextualDataTableExpression:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),columns=Kusto.Language.Binding.Binder.s_columnListPool.AllocateFromPool(),_;try{return Kusto.Language.Binding.Binder.CreateColumnsFromRowSchema(node.Schema.Columns,columns,diagnostics),node.Id!=null&&(_=this._binder.CheckIsExactType(node.Id,Kusto.Language.Symbols.ScalarTypes.Guid,diagnostics)&&this._binder.CheckIsLiteral(node.Id,diagnostics)),new Kusto.Language.Binding.SemanticInfo.$ctor5(new Kusto.Language.Symbols.TableSymbol.$ctor3(columns),diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_columnListPool.ReturnToPool(columns)}},VisitExternalDataExpression:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),columns=Kusto.Language.Binding.Binder.s_columnListPool.AllocateFromPool();try{return Kusto.Language.Binding.Binder.CreateColumnsFromRowSchema(node.Schema.Columns,columns,diagnostics),System.Linq.Enumerable.from(node.URIs,Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)).select(Bridge.fn.bind(this,function(item){return this._binder.CheckIsExactType(item.Element$1,Kusto.Language.Symbols.ScalarTypes.String,diagnostics)})),node.WithClause!=null,new Kusto.Language.Binding.SemanticInfo.$ctor5(new Kusto.Language.Symbols.TableSymbol.$ctor3(columns),diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_columnListPool.ReturnToPool(columns)}},VisitSortOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),i,n,expr,resultTable;try{for(this.CheckNotFirstInPipe(node,diagnostics),this._binder.CheckQueryOperatorParameters(node.Parameters,Kusto.Language.QueryOperatorParameters.SortParameters,diagnostics),i=0,n=node.Expressions.Count;i<n;i=i+1|0)expr=node.Expressions.getItem$1(i).Element$1,this._binder.CheckIsScalar(expr,diagnostics);return resultTable=new Kusto.Language.Symbols.TableSymbol.$ctor3(this._binder.GetDeclaredAndInferredColumns(this.RowScopeOrEmpty)).WithInheritableProperties(this.RowScopeOrEmpty).WithIsSorted(!0),new Kusto.Language.Binding.SemanticInfo.$ctor5(resultTable,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitSerializeOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),builder=Kusto.Language.Binding.Binder.s_projectionBuilderPool.AllocateFromPool(),resultType,info;try{return this.CheckNotFirstInPipe(node,diagnostics),this._binder.CheckQueryOperatorParameters(node.Parameters,Kusto.Language.QueryOperatorParameters.SerializedParameters,diagnostics),this._binder.CheckIsScalar$1(node.Expressions,diagnostics),builder.AddRange(this._binder.GetDeclaredAndInferredColumns(this.RowScopeOrEmpty),!1,!0),this._binder.CreateProjectionColumns$1(node.Expressions,builder,diagnostics),resultType=new Kusto.Language.Symbols.TableSymbol.$ctor3(builder.GetProjection()).WithInheritableProperties(this.RowScopeOrEmpty).WithIsSerialized(!0),info=new Kusto.Language.Binding.SemanticInfo.$ctor5(resultType,diagnostics),info}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_projectionBuilderPool.ReturnToPool(builder)}},VisitAsOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),resultTable;try{return this.CheckNotFirstInPipe(node,diagnostics),this._binder.CheckQueryOperatorParameters(node.Parameters,Kusto.Language.QueryOperatorParameters.AsParameters,diagnostics),resultTable=new Kusto.Language.Symbols.TableSymbol.$ctor3(this.RowScopeOrEmpty.Columns).WithInheritableProperties(this.RowScopeOrEmpty),new Kusto.Language.Binding.SemanticInfo.$ctor5(resultTable)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitForkOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),tables,i,n,expr,tableType,name,table;try{for(this.CheckNotFirstInPipe(node,diagnostics),tables=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.TableSymbol).ctor),i=0,n=node.Expressions.Count;i<n;i=i+1|0)expr=node.Expressions.getItem$1(i).Expression,this._binder.CheckIsTabular(expr,diagnostics),Kusto.Language.Binding.Binder.NodeBinder.CheckQueryOperators(expr,Kusto.Language.KustoFacts.ForkOperatorKinds,diagnostics),tableType=Bridge.as(Kusto.Language.Binding.Binder.GetResultType$1(expr),Kusto.Language.Symbols.TableSymbol),tableType!=null&&(name=tables.Count===0?"Results":"Results_"+(tables.Count+1|0),table=new Kusto.Language.Symbols.TableSymbol.$ctor6(name,this._binder.GetDeclaredAndInferredColumns(tableType)).WithInheritableProperties(tableType),tables.add(table));return new Kusto.Language.Binding.SemanticInfo.$ctor5(new Kusto.Language.Symbols.GroupSymbol.$ctor1(tables),diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitPartitionByOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),tableType,result;try{return this.CheckNotFirstInPipe(node,diagnostics),this._binder.CheckIsColumn(node.Entity,diagnostics),Kusto.Language.Binding.Binder.NodeBinder.CheckQueryOperators(node.Subquery,Kusto.Language.KustoFacts.PostPipeOperatorKinds,diagnostics,!0,!0),tableType=Bridge.as(node.Subquery.ResultType,Kusto.Language.Symbols.TableSymbol),result=new Kusto.Language.Symbols.TableSymbol.$ctor3(this._binder.GetDeclaredAndInferredColumns(tableType)).WithInheritableProperties(this.RowScopeOrEmpty).WithIsSorted(!1),new Kusto.Language.Binding.SemanticInfo.$ctor5(result,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitPartitionByIdClause:function(node){return null},VisitPartitionOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),operand,ps,tableType,result;try{return(this.CheckNotFirstInPipe(node,diagnostics),this._binder.CheckQueryOperatorParameters(node.Parameters,Kusto.Language.QueryOperatorParameters.PartitionParameters,diagnostics),operand=node.Operand,this._binder.CheckIsColumn(node.ByExpression,diagnostics),this._binder.CheckIsTabular(operand,diagnostics),(ps=Bridge.as(operand,Kusto.Language.Syntax.PartitionSubquery))!=null&&Kusto.Language.Binding.Binder.NodeBinder.CheckQueryOperators(ps.Subquery,Kusto.Language.KustoFacts.PostPipeOperatorKinds,diagnostics),tableType=Bridge.as(Kusto.Language.Binding.Binder.GetResultType$1(operand),Kusto.Language.Symbols.TableSymbol),tableType==null)?new Kusto.Language.Binding.SemanticInfo.$ctor5(this.RowScopeOrEmpty,diagnostics):(result=new Kusto.Language.Symbols.TableSymbol.$ctor3(this._binder.GetDeclaredAndInferredColumns(tableType)).WithInheritableProperties(this.RowScopeOrEmpty).WithIsSorted(!1),new Kusto.Language.Binding.SemanticInfo.$ctor5(result,diagnostics))}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitSearchOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),columns=Kusto.Language.Binding.Binder.s_columnListPool.AllocateFromPool(),tables=Kusto.Language.Binding.Binder.s_tableListPool.AllocateFromPool(),result,i,n,expr,searchColumnsTable;try{if(this._binder.CheckQueryOperatorParameters(node.Parameters,Kusto.Language.QueryOperatorParameters.SearchParameters,diagnostics),this._binder.CheckIsExactType(node.Condition,Kusto.Language.Symbols.ScalarTypes.Bool,diagnostics),columns.add(new Kusto.Language.Symbols.ColumnSymbol("$table",Kusto.Language.Symbols.ScalarTypes.String)),node.InClause!=null)for(this.CheckFirstInPipe(node,diagnostics),i=0,n=node.InClause.Expressions.Count;i<n;i=i+1|0)expr=node.InClause.Expressions.getItem$1(i).Element$1,this._binder.CheckIsTabular(expr,diagnostics);return searchColumnsTable=this._binder.GetSearchColumnsTable(node),this._binder.GetDeclaredAndInferredColumns$1(searchColumnsTable,columns),result=this._binder._rowScope!=null?new Kusto.Language.Symbols.TableSymbol.$ctor3(columns).WithInheritableProperties(this._binder._rowScope).WithIsSorted(!1):new Kusto.Language.Symbols.TableSymbol.$ctor3(columns).WithIsOpen(searchColumnsTable.IsOpen),new Kusto.Language.Binding.SemanticInfo.$ctor5(result,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_tableListPool.ReturnToPool(tables);Kusto.Language.Binding.Binder.s_columnListPool.ReturnToPool(columns)}},VisitFindOperator:function(node){var $t,$t1,$t2,$t3,diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),columns=Kusto.Language.Binding.Binder.s_columnListPool.AllocateFromPool(),refColumns=Kusto.Language.Binding.Binder.s_columnListPool.AllocateFromPool(),packColumns=Kusto.Language.Binding.Binder.s_columnListPool.AllocateFromPool(),refTables=Kusto.Language.Binding.Binder.s_tableListPool.AllocateFromPool(),sourceColumnName,t,c,_discard5,commonColumnsTable,c1,i,exp,_discard4,tc,c2,type,nr,c21,columnNamesToRemove,i1,columnExp,col,resultTable;try{this._binder.CheckQueryOperatorParameters(node.Parameters,Kusto.Language.QueryOperatorParameters.FindParameters,diagnostics);this._binder.CheckIsExactType(node.Condition,Kusto.Language.Symbols.ScalarTypes.Bool,diagnostics);sourceColumnName=($t=Kusto.Language.Syntax.SyntaxExtensions.GetParameterNameValue(node.Parameters,Kusto.Language.QueryOperatorParameters.WithSource),$t!=null?$t:"source_");columns.add(new Kusto.Language.Symbols.ColumnSymbol(sourceColumnName,Kusto.Language.Symbols.ScalarTypes.String));var tables=this._binder.GetFindTables(node),resultIsOpen=System.Linq.Enumerable.from(tables,Kusto.Language.Symbols.TableSymbol).any(function(t){return t.IsOpen}),explicitPack=!1;if(this._binder.GetReferencedColumnsInTree(node.Condition,refColumns),System.Array.getCount(tables,Kusto.Language.Symbols.TableSymbol)===1)refTables.AddRange(tables);else if(Kusto.Language.Binding.Binder.NodeBinder.ReferencesAllTablesImplicitly(node))refTables.AddRange(tables);else if(System.Array.getCount(tables,Kusto.Language.Symbols.TableSymbol)>0&&refColumns.Count>0){$t1=Bridge.getEnumerator(tables,Kusto.Language.Symbols.TableSymbol);try{while($t1.moveNext()){t=$t1.Current;$t2=Bridge.getEnumerator(refColumns);try{while($t2.moveNext())if(c=$t2.Current,_discard5={},t.IsOpen||t.TryGetColumn(c.Name,_discard5)){refTables.add(t);break}}finally{Bridge.is($t2,System.IDisposable)&&$t2.System$IDisposable$Dispose()}}}finally{Bridge.is($t1,System.IDisposable)&&$t1.System$IDisposable$Dispose()}}if(node.Project==null||node.Project.ProjectKeyword.Kind===Kusto.Language.Syntax.SyntaxKind.ProjectSmartKeyword){commonColumnsTable=this._binder.GetTableOfCommonColumns(refTables);columns.AddRange(commonColumnsTable.Columns);$t3=Bridge.getEnumerator(refColumns);try{while($t3.moveNext())c1=$t3.Current,columns.contains(c1)||columns.add(c1)}finally{Bridge.is($t3,System.IDisposable)&&$t3.System$IDisposable$Dispose()}Kusto.Language.Binding.Binder.NodeBinder.GetPackColumns(refTables,columns,packColumns);packColumns.Count>0&&columns.add(new Kusto.Language.Symbols.ColumnSymbol("pack_",Kusto.Language.Symbols.ScalarTypes.Dynamic,void 0,packColumns,void 0,void 0));Kusto.Language.Binding.Binder.UnifyColumnsWithSameNameAndType(columns)}else for(resultIsOpen=!1,i=0;i<node.Project.Columns.Count;i=i+1|0){exp=node.Project.Columns.getItem$1(i).Element$1;do{if(Bridge.is(exp,Kusto.Language.Syntax.PackExpression)){_discard4=Bridge.cast(exp,Kusto.Language.Syntax.PackExpression);explicitPack=!0;i===(node.Project.Columns.Count-1|0)?(Kusto.Language.Binding.Binder.NodeBinder.GetPackColumns(refTables,columns,packColumns),columns.add(new Kusto.Language.Symbols.ColumnSymbol("pack_",Kusto.Language.Symbols.ScalarTypes.Dynamic,void 0,packColumns,void 0,void 0))):diagnostics.add(Kusto.Language.DiagnosticFacts.GetPackMustBeLastItemInList().WithLocation(exp));break}if(Bridge.is(exp,Kusto.Language.Syntax.TypedColumnReference)){tc=Bridge.cast(exp,Kusto.Language.Syntax.TypedColumnReference);this._binder.CheckIsColumn(tc.Column,diagnostics);(c2=Bridge.as(Kusto.Language.Binding.Binder.GetReferencedSymbol$1(tc.Column),Kusto.Language.Symbols.ColumnSymbol))!=null&&(type=this._binder.GetTypeFromTypeExpression(tc.Type,diagnostics),columns.add(new Kusto.Language.Symbols.ColumnSymbol(c2.Name,type,void 0,System.Array.init([c2],Kusto.Language.Symbols.ColumnSymbol),void 0,void 0)));break}if(Bridge.is(exp,Kusto.Language.Syntax.NameReference)){nr=Bridge.cast(exp,Kusto.Language.Syntax.NameReference);this._binder.CheckIsColumn(nr,diagnostics);(c21=Bridge.as(Kusto.Language.Binding.Binder.GetReferencedSymbol$1(nr),Kusto.Language.Symbols.ColumnSymbol))!=null&&columns.add(c21);break}}while(0)}if(node.ProjectAway!=null&&node.ProjectAway.Columns.Count>0)if(Bridge.is(node.ProjectAway.Columns.getItem$1(0).Element$1,Kusto.Language.Syntax.StarExpression))columns.RemoveAll(function(c3){return!Bridge.referenceEquals(c3.Name,sourceColumnName)&&(!Bridge.referenceEquals(c3.Name,"pack_")||!explicitPack)});else{columnNamesToRemove=Kusto.Language.Binding.Binder.s_stringSetPool.AllocateFromPool();try{for(i1=0;i1<node.ProjectAway.Columns.Count;i1=i1+1|0)columnExp=node.ProjectAway.Columns.getItem$1(i1).Element$1,(col=Bridge.as(Kusto.Language.Binding.Binder.GetReferencedSymbol$1(columnExp),Kusto.Language.Symbols.ColumnSymbol))!=null&&columnNamesToRemove.add(col.Name);columns.RemoveAll(function(c3){return columnNamesToRemove.contains(c3.Name)})}finally{Kusto.Language.Binding.Binder.s_stringSetPool.ReturnToPool(columnNamesToRemove)}}return resultTable=new Kusto.Language.Symbols.TableSymbol.$ctor3(columns).WithIsOpen(resultIsOpen),new Kusto.Language.Binding.SemanticInfo.$ctor5(resultTable,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_columnListPool.ReturnToPool(columns);Kusto.Language.Binding.Binder.s_columnListPool.ReturnToPool(refColumns);Kusto.Language.Binding.Binder.s_columnListPool.ReturnToPool(packColumns);Kusto.Language.Binding.Binder.s_tableListPool.ReturnToPool(refTables)}},VisitUnionOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),columns=Kusto.Language.Binding.Binder.s_columnListPool.AllocateFromPool(),tables=Kusto.Language.Binding.Binder.s_tableListPool.AllocateFromPool(),name,i,n,expr,unifiedTable,resultTable;try{for(this._binder.CheckQueryOperatorParameters(node.Parameters,Kusto.Language.QueryOperatorParameters.UnionParameters,diagnostics),(name=Kusto.Language.Syntax.SyntaxExtensions.GetParameterNameValue(node.Parameters,Kusto.Language.QueryOperatorParameters.WithSource))!=null&&columns.add(new Kusto.Language.Symbols.ColumnSymbol(name,Kusto.Language.Symbols.ScalarTypes.String)),this.RowScopeOrEmpty!=null&&tables.add(this.RowScopeOrEmpty),i=0,n=node.Expressions.Count;i<n;i=i+1|0)expr=node.Expressions.getItem$1(i).Element$1,this._binder.CheckIsTabular(expr,diagnostics),this._binder.AddTables(Kusto.Language.Binding.Binder.GetResultType$1(expr),tables);return unifiedTable=this._binder.GetTableOfColumnsUnifiedByNameAndType(tables),resultTable=unifiedTable,columns.Count>0&&(columns.AddRange(unifiedTable.Columns),resultTable=new Kusto.Language.Symbols.TableSymbol.$ctor3(columns)),System.Linq.Enumerable.from(tables,Kusto.Language.Symbols.TableSymbol).any(function(t){return t.IsOpen})&&(resultTable=resultTable.WithIsOpen(!0)),new Kusto.Language.Binding.SemanticInfo.$ctor5(resultTable.WithIsSorted(!1),diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_columnListPool.ReturnToPool(columns);Kusto.Language.Binding.Binder.s_tableListPool.ReturnToPool(tables)}},VisitLookupOperator:function(node){var $t,diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),columns=Kusto.Language.Binding.Binder.s_columnListPool.AllocateFromPool(),exprColumns=Kusto.Language.Binding.Binder.s_columnListPool.AllocateFromPool(),joinColumns=Kusto.Language.Binding.Binder.NodeBinder.s_joinColumnsPool.AllocateFromPool(),joc,col,index,jc,resultIsOpen,exprTable,resultTable;try{this.CheckNotFirstInPipe(node,diagnostics);this._binder.CheckQueryOperatorParameters(node.Parameters,Kusto.Language.QueryOperatorParameters.LookupParameters,diagnostics);this._binder.CheckIsTabular(node.Expression,diagnostics);(joc=Bridge.as(node.LookupClause,Kusto.Language.Syntax.JoinOnClause))!=null&&this.CheckJoinOnClause(joc,diagnostics,joinColumns);this._binder.GetDeclaredAndInferredColumns$1(this.RowScopeOrEmpty,exprColumns);$t=Bridge.getEnumerator(exprColumns);try{while($t.moveNext())col={v:$t.Current},index=Kusto.Language.Utils.ListExtensions.FirstIndex(Kusto.Language.Binding.Binder.NodeBinder.JoinColumnPair,joinColumns,function($me,col){return function(jc){return Bridge.referenceEquals(jc.Left,col.v)}}(this,col)),index>=0&&index<joinColumns.Count?(jc=joinColumns.getItem(index),columns.add(new Kusto.Language.Symbols.ColumnSymbol(jc.Left.Name,jc.Left.Type,jc.Left.Description,System.Array.init([jc.Left,jc.Right],Kusto.Language.Symbols.ColumnSymbol),void 0,void 0))):columns.add(col.v)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return resultIsOpen=this.RowScopeOrEmpty.IsOpen,exprTable=Bridge.as(Kusto.Language.Binding.Binder.GetResultType$1(node.Expression),Kusto.Language.Symbols.TableSymbol),exprTable!=null&&(exprColumns.clear(),this._binder.GetDeclaredAndInferredColumns$1(exprTable,exprColumns),exprColumns.RemoveAll(function(c){return System.Linq.Enumerable.from(joinColumns,Kusto.Language.Binding.Binder.NodeBinder.JoinColumnPair).any(function(jc1){return Bridge.referenceEquals(jc1.Right,c)})}),columns.AddRange(exprColumns),resultIsOpen=!!(resultIsOpen|exprTable.IsOpen)),Kusto.Language.Binding.Binder.MakeColumnNamesUnique(columns),resultTable=new Kusto.Language.Symbols.TableSymbol.$ctor3(columns).WithIsOpen(resultIsOpen),new Kusto.Language.Binding.SemanticInfo.$ctor5(resultTable,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_columnListPool.ReturnToPool(columns);Kusto.Language.Binding.Binder.s_columnListPool.ReturnToPool(exprColumns);Kusto.Language.Binding.Binder.NodeBinder.s_joinColumnsPool.ReturnToPool(joinColumns)}},VisitJoinOperator:function(node){var $t,diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),columns=Kusto.Language.Binding.Binder.s_columnListPool.AllocateFromPool(),c,c1,joinKind,resultIsOpen,exprTable,resultTable;try{this.CheckNotFirstInPipe(node,diagnostics);this._binder.CheckQueryOperatorParameters(node.Parameters,Kusto.Language.QueryOperatorParameters.JoinParameters,diagnostics);this._binder.CheckIsTabular(node.Expression,diagnostics);do{if($t=node.ConditionClause,Bridge.is($t,Kusto.Language.Syntax.JoinOnClause)){c=Bridge.cast($t,Kusto.Language.Syntax.JoinOnClause);this.CheckJoinOnClause(c,diagnostics);break}if(Bridge.is($t,Kusto.Language.Syntax.JoinWhereClause)){c1=Bridge.cast($t,Kusto.Language.Syntax.JoinWhereClause);this._binder.CheckIsExactType(c1.Expression,Kusto.Language.Symbols.ScalarTypes.Bool,diagnostics);break}}while(0);return joinKind=Kusto.Language.Syntax.SyntaxExtensions.GetParameterLiteralValue(System.String,node.Parameters,Kusto.Language.QueryOperatorParameters.Kind),resultIsOpen=!1,Kusto.Language.Binding.Binder.NodeBinder.IsRightAntiOrSemiJoin(joinKind)||(columns.AddRange(this._binder.GetDeclaredAndInferredColumns(this.RowScopeOrEmpty)),resultIsOpen=!!(resultIsOpen|this.RowScopeOrEmpty.IsOpen)),exprTable=Bridge.as(Kusto.Language.Binding.Binder.GetResultType$1(node.Expression),Kusto.Language.Symbols.TableSymbol),exprTable==null||Kusto.Language.Binding.Binder.NodeBinder.IsLeftAntiOrSemiJoin(joinKind)||(this._binder.GetDeclaredAndInferredColumns$1(exprTable,columns),resultIsOpen=!!(resultIsOpen|exprTable.IsOpen)),Kusto.Language.Binding.Binder.MakeColumnNamesUnique(columns),resultTable=new Kusto.Language.Symbols.TableSymbol.$ctor3(columns).WithIsOpen(resultIsOpen),new Kusto.Language.Binding.SemanticInfo.$ctor5(resultTable,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_columnListPool.ReturnToPool(columns)}},CheckJoinOnClause:function(clause,diagnostics,joinColumns){var i,n,expr;for(joinColumns===void 0&&(joinColumns=null),i=0,n=clause.Expressions.Count;i<n;i=i+1|0)expr=clause.Expressions.getItem$1(i).Element$1,this.CheckJoinOnExpression(expr,diagnostics,joinColumns)},CheckJoinOnExpression:function(condition,diagnostics,joinColumns){var be,leftMatchingColumn,rightMatchingColumn,nr,leftColumn,rightColumn;joinColumns===void 0&&(joinColumns=null);condition=Kusto.Language.Binding.Binder.NodeBinder.RemoveParenthesis(condition);(be=Bridge.as(condition,Kusto.Language.Syntax.BinaryExpression))!=null?be.Kind===Kusto.Language.Syntax.SyntaxKind.EqualExpression?(leftMatchingColumn={},rightMatchingColumn={},this.CheckJoinOnEquality(be,diagnostics,leftMatchingColumn,rightMatchingColumn)&&leftMatchingColumn.v!=null&&rightMatchingColumn.v!=null&&joinColumns!=null&&joinColumns.add(new Kusto.Language.Binding.Binder.NodeBinder.JoinColumnPair(leftMatchingColumn.v,rightMatchingColumn.v))):be.Kind===Kusto.Language.Syntax.SyntaxKind.AndExpression?(this.CheckJoinOnExpression(be.Left,diagnostics,joinColumns),this.CheckJoinOnExpression(be.Right,diagnostics,joinColumns)):diagnostics.add(Kusto.Language.DiagnosticFacts.GetInvalidJoinCondition().WithLocation(condition)):(nr=Bridge.as(condition,Kusto.Language.Syntax.NameReference))!=null?this._binder.CheckIsColumn(nr,diagnostics)&&(leftColumn={},rightColumn={},this.CheckCommonColumn(nr,diagnostics,leftColumn,rightColumn)&&leftColumn.v!=null&&rightColumn.v!=null&&joinColumns!=null&&joinColumns.add(new Kusto.Language.Binding.Binder.NodeBinder.JoinColumnPair(leftColumn.v,rightColumn.v)),this._binder.CheckIsScalar(condition,diagnostics)):diagnostics.add(Kusto.Language.DiagnosticFacts.GetInvalidJoinCondition().WithLocation(condition))},CheckCommonColumn:function(name,diagnostics,leftColumn,rightColumn){return rightColumn.v=null,this._binder.TryGetDeclaredOrInferredColumn(this.RowScopeOrEmpty,name.SimpleName,leftColumn)&&this._binder.TryGetDeclaredOrInferredColumn(this.RightRowScopeOrEmpty,name.SimpleName,rightColumn)?Bridge.referenceEquals(leftColumn.v.Type,rightColumn.v.Type)||Bridge.referenceEquals(leftColumn.v.Type,Kusto.Language.Symbols.ScalarTypes.Unknown)||Bridge.referenceEquals(rightColumn.v.Type,Kusto.Language.Symbols.ScalarTypes.Unknown)?!0:(diagnostics.add(Kusto.Language.DiagnosticFacts.GetCommonJoinColumnsMustHaveSameType(name.SimpleName).WithLocation(name)),!1):(diagnostics.add(Kusto.Language.DiagnosticFacts.GetColumnMustExistOnBothSidesOfJoin(name.SimpleName).WithLocation(name)),!1)},CheckJoinOnEquality:function(condition,diagnostics,leftColumn,rightColumn){leftColumn.v=null;rightColumn.v=null;condition=Kusto.Language.Binding.Binder.NodeBinder.RemoveParenthesis(condition);var be;return((be=Bridge.as(condition,Kusto.Language.Syntax.BinaryExpression))!=null&&condition.Kind===Kusto.Language.Syntax.SyntaxKind.EqualExpression)?!(this.CheckJoinOnEqualityOperand(be.Left,"$left",diagnostics,leftColumn)&this.CheckJoinOnEqualityOperand(be.Right,"$right",diagnostics,rightColumn))?!1:Kusto.Language.Binding.Binder.NodeBinder.CheckJoinOnKeysComparable(be.Left,be.Right,diagnostics):(diagnostics.add(Kusto.Language.DiagnosticFacts.GetInvalidJoinCondition().WithLocation(condition)),!1)},CheckJoinOnEqualityOperand:function(operand,prefix,diagnostics,column){column.v=null;operand=Kusto.Language.Binding.Binder.NodeBinder.RemoveParenthesis(operand);var path;return((path=Bridge.as(operand,Kusto.Language.Syntax.PathExpression))!=null&&Bridge.referenceEquals(Kusto.Language.Binding.Binder.NodeBinder.GetReferencedName(path.Expression),prefix))?this._binder.CheckIsColumn(operand,diagnostics)?(column.v=Bridge.as(Kusto.Language.Binding.Binder.GetReferencedSymbol$1(operand),Kusto.Language.Symbols.ColumnSymbol),this._binder.CheckIsScalar(operand,diagnostics)):!1:(diagnostics.add(Kusto.Language.DiagnosticFacts.GetInvalidJoinConditionOperand(prefix).WithLocation(operand)),!1)},VisitRangeOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool();try{this.CheckFirstInPipe(node,diagnostics);this._binder.CheckIsSummable(node.From,diagnostics);this._binder.CheckIsSummable(node.To,diagnostics);this._binder.CheckIsSummable(node.Step,diagnostics);this._binder.CheckIsNotConstantValue$1(node.Step,System.Int64(0),!1,diagnostics);var fromType=Kusto.Language.Binding.Binder.GetResultTypeOrError(node.From),toType=Kusto.Language.Binding.Binder.GetResultTypeOrError(node.To),stepType=Kusto.Language.Binding.Binder.GetResultTypeOrError(node.Step),fromToType=Kusto.Language.Symbols.TypeFacts.GetCommonScalarType([fromType,toType])||Kusto.Language.Symbols.ScalarTypes.Unknown,rangeType=Bridge.referenceEquals(fromToType,stepType)&&Bridge.referenceEquals(stepType,Kusto.Language.Symbols.ScalarTypes.Int)?Kusto.Language.Symbols.ScalarTypes.Int:this._binder.GetBinaryOperatorResultType(Kusto.Language.Symbols.OperatorKind.Add,fromToType,stepType,node.Step,diagnostics),rangeName=node.Name.SimpleName,result=new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol(rangeName,rangeType)]);return new Kusto.Language.Binding.SemanticInfo.$ctor5(result,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitFacetOperator:function(node){var $t,diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),tables,tableType,c,c1,i,n,expr;try{if(this.CheckNotFirstInPipe(node,diagnostics),tables=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.TableSymbol).ctor),node.WithClause!=null)do{if($t=node.WithClause,Bridge.is($t,Kusto.Language.Syntax.FacetWithOperatorClause)){c=Bridge.cast($t,Kusto.Language.Syntax.FacetWithOperatorClause);this._binder.CheckIsTabular(c.Operator,diagnostics);Kusto.Language.Binding.Binder.NodeBinder.CheckQueryOperators(c.Operator,Kusto.Language.KustoFacts.ForkOperatorKinds,diagnostics);tableType=Bridge.as(Kusto.Language.Binding.Binder.GetResultType$1(c.Operator),Kusto.Language.Symbols.TableSymbol);tableType!=null&&tables.add(tableType);break}if(Bridge.is($t,Kusto.Language.Syntax.FacetWithExpressionClause)){c1=Bridge.cast($t,Kusto.Language.Syntax.FacetWithExpressionClause);this._binder.CheckIsTabular(c1.Expression,diagnostics);tableType=Bridge.as(Kusto.Language.Binding.Binder.GetResultType$1(c1.Expression),Kusto.Language.Symbols.TableSymbol);tableType!=null&&tables.add(tableType);break}}while(0);for(i=0,n=node.Expressions.Count;i<n;i=i+1|0){expr=node.Expressions.getItem$1(i).Element$1;this._binder.CheckIsColumn(expr,diagnostics);var name=Kusto.Language.Binding.Binder.GetExpressionResultName(expr),tableName=i===0?"Facet":"Facet_"+(i+1|0),table=new Kusto.Language.Symbols.TableSymbol.$ctor4(tableName,[Kusto.Language.Binding.Binder.GetOrDeclareColumnForExpression(expr,name),Kusto.Language.Binding.Binder.GetOrDeclareColumnForExpression(expr,"count_"+(name||""),Kusto.Language.Symbols.ScalarTypes.Long)]).WithInheritableProperties(this.RowScopeOrEmpty).WithIsSorted(!1);tables.add(table)}return new Kusto.Language.Binding.SemanticInfo.$ctor5(new Kusto.Language.Symbols.GroupSymbol.$ctor1(tables),diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitMakeSeriesOperator:function(node){var $t,$t1,diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),builder=Kusto.Language.Binding.Binder.s_projectionBuilderPool.AllocateFromPool(),i,n,expr,i1,n1,agg,inRangeClause,fromToClause,resultType;try{if(this.CheckNotFirstInPipe(node,diagnostics),this._binder.CheckQueryOperatorParameters(node.Parameters,Kusto.Language.QueryOperatorParameters.MakeSeriesParameters,diagnostics),node.ByClause!=null)for(i=0,n=node.ByClause.Expressions.Count;i<n;i=i+1|0)expr=node.ByClause.Expressions.getItem$1(i).Element$1,this._binder.CheckIsScalar(expr,diagnostics),this._binder.CreateProjectionColumns(expr,builder,diagnostics);for(i1=0,n1=node.Aggregates.Count;i1<n1;i1=i1+1|0)agg=node.Aggregates.getItem$1(i1).Element$1,this._binder.CheckIsScalar(agg.Expression,diagnostics),agg.DefaultExpression!=null&&(this._binder.CheckIsLiteral(agg.DefaultExpression,diagnostics),this._binder.CheckIsType(agg.DefaultExpression,Kusto.Language.Binding.Binder.GetResultTypeOrError(agg.Expression),Kusto.Language.Symbols.Conversion.Promotable,diagnostics)),this._binder.CreateProjectionColumns(agg.Expression,builder,diagnostics,Kusto.Language.Binding.Binder.ProjectionStyle.Summarize,!1,Kusto.Language.Symbols.ScalarTypes.Dynamic,void 0);return node.OnClause!=null&&(this._binder.CheckIsScalar(node.OnClause.Expression,diagnostics),this._binder.CreateProjectionColumns(node.OnClause.Expression,builder,diagnostics,0,!1,Kusto.Language.Symbols.ScalarTypes.Dynamic,void 0),(inRangeClause=Bridge.as(node.RangeClause,Kusto.Language.Syntax.MakeSeriesInRangeClause))!=null?(inRangeClause.ContainsSyntaxDiagnostics||Kusto.Language.Binding.Binder.CheckArgumentCount(inRangeClause.Arguments.Expressions,3,diagnostics),inRangeClause.Arguments.Expressions.Count===3&&(this._binder.CheckIsType(inRangeClause.Arguments.Expressions.getItem$1(0).Element$1,Kusto.Language.Binding.Binder.GetResultTypeOrError(node.OnClause.Expression),Kusto.Language.Symbols.Conversion.Promotable,diagnostics),this._binder.CheckIsType(inRangeClause.Arguments.Expressions.getItem$1(1).Element$1,Kusto.Language.Binding.Binder.GetResultTypeOrError(node.OnClause.Expression),Kusto.Language.Symbols.Conversion.Promotable,diagnostics),this._binder.CheckIsIntervalType(inRangeClause.Arguments.Expressions.getItem$1(2).Element$1,Kusto.Language.Binding.Binder.GetResultTypeOrError(node.OnClause.Expression),diagnostics))):(fromToClause=Bridge.as(node.RangeClause,Kusto.Language.Syntax.MakeSeriesFromToStepClause))!=null&&((($t=fromToClause.MakeSeriesFromClause)!=null?$t.Expression:null)!=null&&this._binder.CheckIsType(fromToClause.MakeSeriesFromClause.Expression,Kusto.Language.Binding.Binder.GetResultTypeOrError(node.OnClause.Expression),Kusto.Language.Symbols.Conversion.Promotable,diagnostics),(($t1=fromToClause.MakeSeriesToClause)!=null?$t1.Expression:null)!=null&&this._binder.CheckIsType(fromToClause.MakeSeriesToClause.Expression,Kusto.Language.Binding.Binder.GetResultTypeOrError(node.OnClause.Expression),Kusto.Language.Symbols.Conversion.Promotable,diagnostics),this._binder.CheckIsIntervalType(fromToClause.MakeSeriesStepClause.Expression,Kusto.Language.Binding.Binder.GetResultTypeOrError(node.OnClause.Expression),diagnostics))),resultType=new Kusto.Language.Symbols.TableSymbol.$ctor3(builder.GetProjection()).WithInheritableProperties(this.RowScopeOrEmpty).WithIsSorted(!1),new Kusto.Language.Binding.SemanticInfo.$ctor5(resultType,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_projectionBuilderPool.ReturnToPool(builder)}},VisitMvExpandOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),builder=Kusto.Language.Binding.Binder.s_projectionBuilderPool.AllocateFromPool(),i,n,expr,newType,indexName,result;try{for(this.CheckNotFirstInPipe(node,diagnostics),builder.AddRange(this._binder.GetDeclaredAndInferredColumns(this.RowScopeOrEmpty),!1,!0),this._binder.CheckQueryOperatorParameters(node.Parameters,Kusto.Language.QueryOperatorParameters.MvExpandParameters,diagnostics),i=0,n=node.Expressions.Count;i<n;i=i+1|0)expr=node.Expressions.getItem$1(i).Element$1,this._binder.CheckIsDynamic(expr.Expression,diagnostics),newType=Kusto.Language.Binding.Binder.NodeBinder.GetMvExpandResultType(node.Parameters,expr.Expression,expr.ToTypeOf),this._binder.CreateProjectionColumns(expr.Expression,builder,diagnostics,Kusto.Language.Binding.Binder.ProjectionStyle.Replace,!1,newType,void 0);return(indexName=Kusto.Language.Syntax.SyntaxExtensions.GetParameterNameValue(node.Parameters,Kusto.Language.QueryOperatorParameters.WithItemIndex))!=null&&builder.Add(new Kusto.Language.Symbols.ColumnSymbol(indexName,Kusto.Language.Symbols.ScalarTypes.Long)),node.RowLimitClause!=null&&this._binder.CheckIsInteger(node.RowLimitClause.RowLimit,diagnostics),result=new Kusto.Language.Symbols.TableSymbol.$ctor3(builder.GetProjection()).WithInheritableProperties(this.RowScopeOrEmpty),new Kusto.Language.Binding.SemanticInfo.$ctor5(result,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_projectionBuilderPool.ReturnToPool(builder)}},VisitMvExpandExpression:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),colType;try{return colType=Kusto.Language.Binding.Binder.GetResultTypeOrError(node.Expression),node.ToTypeOf!=null&&(colType=Bridge.as(Kusto.Language.Binding.Binder.GetReferencedSymbol$1(node.ToTypeOf.TypeOf),Kusto.Language.Symbols.TypeSymbol)||Kusto.Language.Symbols.ErrorSymbol.Instance),new Kusto.Language.Binding.SemanticInfo.$ctor5(colType,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitMvApplyOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),builder=Kusto.Language.Binding.Binder.s_projectionBuilderPool.AllocateFromPool(),i,n,expr,newType,indexName,result;try{for(this.CheckNotFirstInPipe(node,diagnostics),builder.AddRange(this._binder.GetDeclaredAndInferredColumns(this.RowScopeOrEmpty),!1,!0),this._binder.CheckQueryOperatorParameters(node.Parameters,Kusto.Language.QueryOperatorParameters.MvApplyParameters,diagnostics),i=0,n=node.Expressions.Count;i<n;i=i+1|0)expr=node.Expressions.getItem$1(i).Element$1,this._binder.CheckIsDynamic(expr.Expression,diagnostics),newType=Kusto.Language.Binding.Binder.NodeBinder.GetMvExpandResultType(node.Parameters,expr.Expression,expr.ToTypeOf),this._binder.CreateProjectionColumns(expr.Expression,builder,diagnostics,Kusto.Language.Binding.Binder.ProjectionStyle.Replace,!1,newType,void 0);return(indexName=Kusto.Language.Syntax.SyntaxExtensions.GetParameterNameValue(node.Parameters,Kusto.Language.QueryOperatorParameters.WithItemIndex))!=null&&builder.Add(new Kusto.Language.Symbols.ColumnSymbol(indexName,Kusto.Language.Symbols.ScalarTypes.Long)),node.RowLimitClause!=null&&this._binder.CheckIsInteger(node.RowLimitClause.RowLimit,diagnostics),result=new Kusto.Language.Symbols.TableSymbol.$ctor3(builder.GetProjection()).WithInheritableProperties(this.RowScopeOrEmpty),new Kusto.Language.Binding.SemanticInfo.$ctor5(result,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_projectionBuilderPool.ReturnToPool(builder)}},VisitMvApplyExpression:function(node){var $t,$t1,$t2,diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),colType;try{return colType=(($t=node.Expression)!=null?$t.ResultType:null)||Kusto.Language.Symbols.ErrorSymbol.Instance,node.ToTypeOf!=null&&(colType=(($t1=node.ToTypeOf)!=null&&($t2=$t1.TypeOf)!=null?$t2.ResultType:null)||Kusto.Language.Symbols.ErrorSymbol.Instance),new Kusto.Language.Binding.SemanticInfo.$ctor5(colType,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitMvApplySubqueryExpression:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),resultType,table;try{return Kusto.Language.Binding.Binder.NodeBinder.CheckQueryOperators(node.Expression,Kusto.Language.KustoFacts.PostPipeOperatorKinds,diagnostics,!0,!0),resultType=Kusto.Language.Binding.Binder.GetResultTypeOrError(node.Expression),(table=Bridge.as(resultType,Kusto.Language.Symbols.TableSymbol))!=null&&(resultType=new Kusto.Language.Symbols.TableSymbol.$ctor3(this._binder.GetDeclaredAndInferredColumns(table)).WithInheritableProperties(table)),new Kusto.Language.Binding.SemanticInfo.$ctor5(resultType,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitPrintOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),builder=Kusto.Language.Binding.Binder.s_projectionBuilderPool.AllocateFromPool(),i,n,expr,resultType;try{for(this.CheckFirstInPipe(node,diagnostics),i=0,n=node.Expressions.Count;i<n;i=i+1|0)expr=node.Expressions.getItem$1(i).Element$1,this._binder.CheckIsScalar(expr,diagnostics),this._binder.CreateProjectionColumns(expr,builder,diagnostics,Kusto.Language.Binding.Binder.ProjectionStyle.Print,!1,void 0,"print_"+i);return resultType=new Kusto.Language.Symbols.TableSymbol.$ctor3(builder.GetProjection()),new Kusto.Language.Binding.SemanticInfo.$ctor5(resultType,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_projectionBuilderPool.ReturnToPool(builder)}},VisitReduceByOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),columns=Kusto.Language.Binding.Binder.s_columnListPool.AllocateFromPool(),resultType,kind;try{return this.CheckNotFirstInPipe(node,diagnostics),this._binder.CheckQueryOperatorParameters(node.Parameters,Kusto.Language.QueryOperatorParameters.ReduceParameters,diagnostics),this._binder.CheckIsExactType(node.Expression,Kusto.Language.Symbols.ScalarTypes.String,diagnostics),node.With!=null&&this._binder.CheckQueryOperatorParameters$1(node.With.Parameters,Kusto.Language.QueryOperatorParameters.ReduceWithParameters,diagnostics),kind=Kusto.Language.Syntax.SyntaxExtensions.GetParameterLiteralValue(System.String,node.Parameters,Kusto.Language.QueryOperatorParameters.Kind),Bridge.referenceEquals(kind,"source")&&this._binder.GetDeclaredAndInferredColumns$1(this.RowScopeOrEmpty,columns),columns.add(new Kusto.Language.Symbols.ColumnSymbol("Pattern",Kusto.Language.Symbols.ScalarTypes.String,void 0,void 0,node.Expression,void 0)),columns.add(new Kusto.Language.Symbols.ColumnSymbol("Count",Kusto.Language.Symbols.ScalarTypes.Long,void 0,void 0,node.Expression,void 0)),columns.add(new Kusto.Language.Symbols.ColumnSymbol("Representative",Kusto.Language.Symbols.ScalarTypes.String,void 0,void 0,node.Expression,void 0)),resultType=new Kusto.Language.Symbols.TableSymbol.$ctor3(columns),new Kusto.Language.Binding.SemanticInfo.$ctor5(resultType,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_columnListPool.ReturnToPool(columns)}},VisitRenderOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),columns=Kusto.Language.Binding.Binder.s_columnListPool.AllocateFromPool(),resultTable;try{return this.CheckNotFirstInPipe(node,diagnostics),this._binder.CheckIsToken(node.ChartType,Kusto.Language.KustoFacts.ChartTypes,!0,diagnostics),this._binder.CheckQueryOperatorParameters(node.Parameters,Kusto.Language.QueryOperatorParameters.RenderParameters,diagnostics),node.WithClause!=null&&this._binder.CheckQueryOperatorParameters$1(node.WithClause.Properties,Kusto.Language.QueryOperatorParameters.RenderWithProperties,diagnostics),this._binder.GetDeclaredAndInferredColumns$1(this.RowScopeOrEmpty,columns),resultTable=new Kusto.Language.Symbols.TableSymbol.$ctor3(columns).WithInheritableProperties(this.RowScopeOrEmpty),new Kusto.Language.Binding.SemanticInfo.$ctor5(resultTable,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_columnListPool.ReturnToPool(columns)}},ParseVisitCommon:function(node,expression,patterns,parameters){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),columns=Kusto.Language.Binding.Binder.s_columnListPool.AllocateFromPool(),declaredNames=Kusto.Language.Binding.Binder.s_stringSetPool.AllocateFromPool(),i,n,part,nextPart,prevPart,nat,pt,prevPart1,nd,col,nat1,pt1,type,col1,result;try{for(this.CheckNotFirstInPipe(node,diagnostics),this._binder.GetDeclaredAndInferredColumns$1(this.RowScopeOrEmpty,columns),this._binder.CheckQueryOperatorParameters(parameters,Kusto.Language.QueryOperatorParameters.ParseParameters,diagnostics),this._binder.CheckIsScalar(expression,diagnostics),i=0,n=patterns.Count;i<n;i=i+1|0){part=patterns.getItem$1(i);switch(part.Kind){case Kusto.Language.Syntax.SyntaxKind.StringLiteralExpression:case Kusto.Language.Syntax.SyntaxKind.CompoundStringLiteralExpression:break;case Kusto.Language.Syntax.SyntaxKind.StarExpression:i<(patterns.Count-1|0)&&(nextPart=patterns.getItem$1(i+1|0),nextPart.Kind!==Kusto.Language.Syntax.SyntaxKind.StringLiteralExpression&&nextPart.Kind!==Kusto.Language.Syntax.SyntaxKind.CompoundStringLiteralExpression&&diagnostics.add(Kusto.Language.DiagnosticFacts.GetParsePatternStringLiteralMustFollowStar().WithLocation(part)));i>0&&(prevPart=patterns.getItem$1(i-1|0),(prevPart.Kind===Kusto.Language.Syntax.SyntaxKind.NameDeclaration||prevPart.Kind===Kusto.Language.Syntax.SyntaxKind.BracketedExpression||(nat=Bridge.as(prevPart,Kusto.Language.Syntax.NameAndTypeDeclaration))!=null&&(pt=Bridge.as(nat.Type,Kusto.Language.Syntax.PrimitiveTypeExpression))!=null&&Bridge.referenceEquals(Kusto.Language.Binding.Binder.GetType(pt),Kusto.Language.Symbols.ScalarTypes.String))&&diagnostics.add(Kusto.Language.DiagnosticFacts.GetParsePatternUsingStarAfterStringColumnIsAmbiguous().WithLocation(part)));break;case Kusto.Language.Syntax.SyntaxKind.NameDeclaration:case Kusto.Language.Syntax.SyntaxKind.NameAndTypeDeclaration:i>0&&(prevPart1=patterns.getItem$1(i-1|0),prevPart1.Kind!==Kusto.Language.Syntax.SyntaxKind.StringLiteralExpression&&prevPart1.Kind!==Kusto.Language.Syntax.SyntaxKind.CompoundStringLiteralExpression&&diagnostics.add(Kusto.Language.DiagnosticFacts.GetParsePatternNameDoesNotFollowStringLiteral().WithLocation(part)));break;default:diagnostics.add(Kusto.Language.DiagnosticFacts.GetInvalidPatternPart().WithLocation(part));break}do{if(Bridge.is(part,Kusto.Language.Syntax.NameDeclaration)){nd=Bridge.cast(part,Kusto.Language.Syntax.NameDeclaration);Kusto.Language.Binding.Binder.DeclareColumnName(declaredNames,nd.SimpleName,diagnostics,nd)&&(col=new Kusto.Language.Symbols.ColumnSymbol(nd.SimpleName,Kusto.Language.Symbols.ScalarTypes.String,void 0,void 0,expression,void 0),columns.add(col),this._binder.SetSemanticInfo(nd,Kusto.Language.Binding.Binder.GetSemanticInfo(col)));break}if(Bridge.is(part,Kusto.Language.Syntax.NameAndTypeDeclaration)){nat1=Bridge.cast(part,Kusto.Language.Syntax.NameAndTypeDeclaration);(pt1=Bridge.as(nat1.Type,Kusto.Language.Syntax.PrimitiveTypeExpression))!=null&&Kusto.Language.Binding.Binder.DeclareColumnName(declaredNames,nat1.Name.SimpleName,diagnostics,nat1.Name)&&(type=Kusto.Language.Binding.Binder.GetType(pt1),col1=new Kusto.Language.Symbols.ColumnSymbol(nat1.Name.SimpleName,type,void 0,void 0,expression,void 0),columns.add(col1),this._binder.SetSemanticInfo(nat1.Name,Kusto.Language.Binding.Binder.GetSemanticInfo(col1)));break}}while(0)}return result=new Kusto.Language.Symbols.TableSymbol.$ctor3(columns).WithInheritableProperties(this.RowScopeOrEmpty),new Kusto.Language.Binding.SemanticInfo.$ctor5(result,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_columnListPool.ReturnToPool(columns);Kusto.Language.Binding.Binder.s_stringSetPool.ReturnToPool(declaredNames)}},VisitParseWhereOperator:function(node){return this.ParseVisitCommon(node,node.Expression,node.Patterns,node.Parameters)},VisitParseOperator:function(node){return this.ParseVisitCommon(node,node.Expression,node.Patterns,node.Parameters)},VisitParseKvWithClause:function(node){return null},VisitParseKvOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),columns=Kusto.Language.Binding.Binder.s_columnListPool.AllocateFromPool(),result;try{return this.CheckNotFirstInPipe(node,diagnostics),this._binder.GetDeclaredAndInferredColumns$1(this.RowScopeOrEmpty,columns),this._binder.CheckIsScalar(node.Expression,diagnostics),Kusto.Language.Binding.Binder.CreateColumnsFromRowSchema(node.Keys.Columns,columns,diagnostics),node.WithClause!=null&&this._binder.CheckQueryOperatorParameters$1(node.WithClause.Properties,Kusto.Language.QueryOperatorParameters.ParseKvWithProperties,diagnostics),result=new Kusto.Language.Symbols.TableSymbol.$ctor3(columns).WithInheritableProperties(this.RowScopeOrEmpty),new Kusto.Language.Binding.SemanticInfo.$ctor5(result,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_columnListPool.ReturnToPool(columns)}},VisitInvokeOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool();try{return this.CheckNotFirstInPipe(node,diagnostics),new Kusto.Language.Binding.SemanticInfo.$ctor5(Kusto.Language.Binding.Binder.GetResultTypeOrError(node.Function),diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitEvaluateOperator:function(node){var call=node.FunctionCall,diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),columns=Kusto.Language.Binding.Binder.s_columnListPool.AllocateFromPool();try{return this._binder.CheckQueryOperatorParameters(node.Parameters,Kusto.Language.QueryOperatorParameters.EvaluateParameters,diagnostics),node.Schema!=null?(Kusto.Language.Binding.Binder.CreateColumnsFromRowSchema(node.Schema.Schema.Columns,columns),new Kusto.Language.Binding.SemanticInfo.$ctor5(new Kusto.Language.Symbols.TableSymbol.$ctor3(columns),diagnostics)):new Kusto.Language.Binding.SemanticInfo.$ctor5(Kusto.Language.Binding.Binder.GetResultTypeOrError(node.FunctionCall),diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_columnListPool.ReturnToPool(columns)}},VisitGetSchemaOperator:function(node){var $t,$t1,diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool();try{return(this.CheckNotFirstInPipe(node,diagnostics),Bridge.referenceEquals(Bridge.cast(($t=node.KindParameter)!=null&&($t1=$t.Expression)!=null?$t1.LiteralValue:null,System.String),"csl"))?Kusto.Language.Binding.Binder.NodeBinder.s_GetSchemaAsCslInfo:Kusto.Language.Binding.Binder.NodeBinder.s_GetSchemaInfo}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitScanOperator:function(node){var $t,diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),columns=Kusto.Language.Binding.Binder.s_columnListPool.AllocateFromPool(),element,decl,matchIdParam,matchNd,matchIdColumnName,resultTable;try{if(this.CheckNotFirstInPipe(node,diagnostics),this._binder.CheckQueryOperatorParameters(node.Parameters,Kusto.Language.QueryOperatorParameters.ScanParameters,diagnostics),this._binder.GetDeclaredAndInferredColumns$1(this.RowScopeOrEmpty,columns),node.DeclareClause!=null){$t=Bridge.getEnumerator(node.DeclareClause.Declarations,"GetEnumerator$1");try{while($t.moveNext())element=$t.Current,decl=element.Element$1,columns.add(new Kusto.Language.Symbols.ColumnSymbol(decl.NameAndType.Name.SimpleName,Kusto.Language.Binding.Binder.GetDeclaredType(decl.NameAndType.Type),void 0,void 0,decl.NameAndType.Name,void 0))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}return matchIdParam=System.Linq.Enumerable.from(node.Parameters,Kusto.Language.Syntax.NamedParameter).firstOrDefault(function(np){return Bridge.referenceEquals(np.Name.SimpleName,Kusto.Language.QueryOperatorParameters.WithMatchId.Name)},null),matchIdColumnName=matchIdParam!=null&&(matchNd=Bridge.as(matchIdParam.Expression,Kusto.Language.Syntax.NameDeclaration))!=null?matchNd.SimpleName:"match_id",columns.add(new Kusto.Language.Symbols.ColumnSymbol(matchIdColumnName,Kusto.Language.Symbols.ScalarTypes.Long)),resultTable=new Kusto.Language.Symbols.TableSymbol.$ctor3(columns).WithInheritableProperties(this.RowScopeOrEmpty),new Kusto.Language.Binding.SemanticInfo.$ctor5(resultTable,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_columnListPool.ReturnToPool(columns)}},VisitScanOrderByClause:function(node){return null},VisitScanPartitionByClause:function(node){return null},VisitScanDeclareClause:function(node){return null},VisitScanAssignment:function(node){return null},VisitScanStep:function(node){return null},VisitScanStepOutput:function(node){return null},VisitScanComputationClause:function(node){return null},VisitMacroExpandScopeReferenceName:function(node){var $t,macroExpand,entityGroup,scopeSymbol;return(macroExpand=Bridge.as(node.Parent,Kusto.Language.Syntax.MacroExpandOperator))!=null&&(entityGroup=($t=macroExpand.EntityGroup)!=null?$t.ResultType:Bridge.as(null,Kusto.Language.Symbols.EntityGroupSymbol))!=null&&(scopeSymbol=new Kusto.Language.Symbols.EntityGroupElementSymbol.$ctor1(node.EntityGroupReferenceName.SimpleName,entityGroup),this._binder.SetSemanticInfo(node.EntityGroupReferenceName,new Kusto.Language.Binding.SemanticInfo.$ctor3(scopeSymbol,scopeSymbol))),null},VisitMacroExpandOperator:function(node){return null},VisitMakeGraphOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),nodesShape=null,tablesAndKeysClause,i,tableAndKey,table,implicitIdClause,table1,symbol;try{if(this.CheckNotFirstInPipe(node,diagnostics),this._binder.CheckIsColumn(node.SourceColumn,diagnostics),this._binder.CheckIsColumn(node.TargetColumn,diagnostics),Kusto.Language.Symbols.TypeFacts.IsAnyScalarExceptDynamic(node.SourceColumn.ResultType)||diagnostics.add(Kusto.Language.DiagnosticFacts.GetMakeGraphDynamicNodeIdColumnNotSupported().WithLocation(node.SourceColumn)),Kusto.Language.Symbols.TypeFacts.IsAnyScalarExceptDynamic(node.TargetColumn.ResultType)||diagnostics.add(Kusto.Language.DiagnosticFacts.GetMakeGraphDynamicNodeIdColumnNotSupported().WithLocation(node.TargetColumn)),(tablesAndKeysClause=Bridge.as(node.WithClause,Kusto.Language.Syntax.MakeGraphWithTablesAndKeysClause))!=null)for(nodesShape=Kusto.Language.Binding.Binder.s_tableListPool.AllocateFromPool(),i=0;i<tablesAndKeysClause.TablesAndKeys.Count;i=i+1|0)tableAndKey=tablesAndKeysClause.TablesAndKeys.getItem$1(i).Element$1,this._binder.CheckIsTabular(tableAndKey.Table,diagnostics),Kusto.Language.Symbols.TypeFacts.IsAnyScalarExceptDynamic(tableAndKey.Column.ResultType)||diagnostics.add(Kusto.Language.DiagnosticFacts.GetMakeGraphDynamicNodeIdColumnNotSupported().WithLocation(tableAndKey.Column)),(table=Bridge.as(tableAndKey.Table.ResultType,Kusto.Language.Symbols.TableSymbol))!=null&&nodesShape.add(table);else(implicitIdClause=Bridge.as(node.WithClause,Kusto.Language.Syntax.MakeGraphWithImplicitIdClause))!=null&&(nodesShape=Kusto.Language.Binding.Binder.s_tableListPool.AllocateFromPool(),System.String.isNullOrEmpty(implicitIdClause.Name.SimpleName)&&diagnostics.add(Kusto.Language.DiagnosticFacts.GetMakeGraphImplicityIdShouldNotBeEmpty().WithLocation(implicitIdClause.Name)),table1=new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol(implicitIdClause.Name.SimpleName,node.SourceColumn.ResultType)]),nodesShape.add(table1));return symbol=new Kusto.Language.Symbols.GraphSymbol.$ctor1(this.RowScopeOrEmpty,nodesShape),new Kusto.Language.Binding.SemanticInfo.$ctor5(symbol,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);nodesShape!=null&&Kusto.Language.Binding.Binder.s_tableListPool.ReturnToPool(nodesShape)}},VisitMakeGraphWithTablesAndKeysClause:function(node){return null},VisitMakeGraphWithImplicitIdClause:function(node){return null},VisitMakeGraphTableAndKeyClause:function(node){return null},VisitMakeGraphPartitionedByClause:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),tableType,result;try{return this._binder.CheckIsColumn(node.Entity,diagnostics),Kusto.Language.Binding.Binder.NodeBinder.CheckQueryOperators(node.Subquery,Kusto.Language.KustoFacts.PostPipeOperatorKinds,diagnostics,!0,!0),tableType=Bridge.as(node.Subquery.ResultType,Kusto.Language.Symbols.TableSymbol),result=new Kusto.Language.Symbols.TableSymbol.$ctor3(this._binder.GetDeclaredAndInferredColumns(tableType)).WithInheritableProperties(this.RowScopeOrEmpty).WithIsSorted(!1),new Kusto.Language.Binding.SemanticInfo.$ctor5(result,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitGraphMergeOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),leftGraph,rightGraph,symbol;try{return this.CheckNotFirstInPipe(node,diagnostics),leftGraph=Kusto.Language.Binding.Binder.GetGraphSymbol(node),leftGraph==null&&diagnostics.add(Kusto.Language.DiagnosticFacts.GetQueryOperatorExpectsGraph().WithLocation(node.GraphMergeKeyword)),this._binder.CheckIsGraph(node.Graph,diagnostics),rightGraph=Bridge.as(node.Graph.ResultType,Kusto.Language.Symbols.GraphSymbol),symbol=Bridge.cast(Kusto.Language.Symbols.GraphSymbol.Merge(leftGraph,rightGraph),Kusto.Language.Symbols.TypeSymbol)||Kusto.Language.Symbols.ErrorSymbol.Instance,new Kusto.Language.Binding.SemanticInfo.$ctor5(symbol,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitGraphMatchOperator:function(node){var $t,$t1,diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),builder=Kusto.Language.Binding.Binder.s_projectionBuilderPool.AllocateFromPool(),symbol,leftGraph,pattern,variableEdges,colType;try{if(this.CheckNotFirstInPipe(node,diagnostics),symbol=null,leftGraph=Kusto.Language.Binding.Binder.GetGraphSymbol(node),leftGraph==null&&diagnostics.add(Kusto.Language.DiagnosticFacts.GetQueryOperatorExpectsGraph().WithLocation(node.GraphMatchKeyword)),node.Patterns==null||node.Patterns.Count===0)diagnostics.add(Kusto.Language.DiagnosticFacts.GetMissingGraphMatchPattern().WithLocation(node.Patterns));else{$t=Bridge.getEnumerator(node.Patterns,"GetEnumerator$1");try{while($t.moveNext())pattern=$t.Current,this.CheckGraphMatchPattern(pattern.Element$1,diagnostics)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}if(node.WhereClause!=null&&this._binder.CheckIsExactType(node.WhereClause.Condition,Kusto.Language.Symbols.ScalarTypes.Bool,diagnostics),node.ProjectClause!=null){variableEdges=new(System.Collections.Generic.HashSet$1(System.String).ctor);node.Patterns.WalkElements(function(element){var edge;(edge=Bridge.as(element,Kusto.Language.Syntax.GraphMatchPatternEdge))!=null&&edge.Range!=null&&edge.Name!=null&&variableEdges.add(edge.Name.SimpleName)});$t1=Bridge.getEnumerator(node.ProjectClause.Expressions,"GetEnumerator$1");try{while($t1.moveNext()){var expr=$t1.Current,columnType=null,referencedElements={v:new(System.Collections.Generic.HashSet$1(System.String).ctor)};expr.Element$1.WalkNodes(function($me,referencedElements){return function(elementNode){var nameRef;(nameRef=Bridge.as(elementNode,Kusto.Language.Syntax.NameReference))!=null&&referencedElements.v.add(nameRef.SimpleName)}}(this,referencedElements));System.Linq.Enumerable.from(variableEdges,System.String).any(function($me,referencedElements){return function(e){return referencedElements.v.contains(e)}}(this,referencedElements))&&(colType=Kusto.Language.Binding.Binder.GetResultTypeOrError(expr.Element$1),columnType=Kusto.Language.Symbols.ScalarTypes.GetDynamicArray(colType));this._binder.CreateProjectionColumns(expr.Element$1,builder,diagnostics,Kusto.Language.Binding.Binder.ProjectionStyle.GraphMatch,!1,columnType,void 0)}}finally{Bridge.is($t1,System.IDisposable)&&$t1.System$IDisposable$Dispose()}symbol=new Kusto.Language.Symbols.TableSymbol.$ctor3(builder.GetProjection())}else symbol=Bridge.cast(leftGraph,Kusto.Language.Symbols.TypeSymbol)||Kusto.Language.Symbols.ErrorSymbol.Instance;return new Kusto.Language.Binding.SemanticInfo.$ctor5(symbol,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_projectionBuilderPool.ReturnToPool(builder)}},CheckGraphMatchPattern:function(node,diagnostics){var i,element,expectNode,lastElement;if(node.PatternElements==null||node.PatternElements.Count===0){diagnostics.add(Kusto.Language.DiagnosticFacts.GetMissingGraphMatchPatternElement().WithLocation(node));return}for(i=0;i<node.PatternElements.Count;i=i+1|0)element=node.PatternElements.getItem$1(i),expectNode=i%2==0,expectNode&&!Bridge.is(element,Kusto.Language.Syntax.GraphMatchPatternNode)?diagnostics.add(Kusto.Language.DiagnosticFacts.GetGraphMatchPatternSyntaxError("node","edge").WithLocation(element)):expectNode||Bridge.is(element,Kusto.Language.Syntax.GraphMatchPatternEdge)||diagnostics.add(Kusto.Language.DiagnosticFacts.GetGraphMatchPatternSyntaxError("edge","node").WithLocation(element));lastElement=node.PatternElements.getItem$1(node.PatternElements.Count-1|0);Bridge.is(lastElement,Kusto.Language.Syntax.GraphMatchPatternNode)||diagnostics.add(Kusto.Language.DiagnosticFacts.GetMissingGraphMatchPatternElement().WithLocation(lastElement))},VisitGraphMatchPattern:function(node){return null},VisitGraphMatchPatternNode:function(node){return null},VisitGraphMatchPatternEdge:function(node){return null},VisitGraphMatchPatternEdgeRange:function(node){return null},VisitWhereClause:function(node){return null},VisitProjectClause:function(node){return null},VisitGraphMarkComponentsOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),symbol;try{return this.CheckNotFirstInPipe(node,diagnostics),node.Parameters!=null&&this._binder.CheckQueryOperatorParameters(node.Parameters,Kusto.Language.QueryOperatorParameters.GraphMarkComponentsParameters,diagnostics),symbol=new Kusto.Language.Symbols.GraphSymbol.ctor(this.RowScopeOrEmpty),new Kusto.Language.Binding.SemanticInfo.$ctor5(symbol,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitGraphToTableOperator:function(node){var $t,$t1,diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),symbol,leftGraph,clause,nodesTableClause,edgesTableClause,nodesTable,edgesTable;try{if(this.CheckNotFirstInPipe(node,diagnostics),symbol=null,leftGraph=Kusto.Language.Binding.Binder.GetGraphSymbol(node),leftGraph==null)diagnostics.add(Kusto.Language.DiagnosticFacts.GetQueryOperatorExpectsGraph().WithLocation(node.GraphToTableKeyword));else if(node.OutputClause.Count===1)clause=node.OutputClause.getItem$1(0).Element$1,clause.EntityKeyword.Kind===Kusto.Language.Syntax.SyntaxKind.GraphEdgesKeyword?symbol=this.VisitGraphToTableEdgesClause(clause,leftGraph):clause.EntityKeyword.Kind===Kusto.Language.Syntax.SyntaxKind.NodesKeyword&&(symbol=this.VisitGraphToTableNodesClause(clause,leftGraph));else if(node.OutputClause.Count===2){if(nodesTableClause=($t=System.Linq.Enumerable.from(node.OutputClause,Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.GraphToTableOutputClause)).firstOrDefault(function(oc){return oc.Element$1.EntityKeyword.Kind===Kusto.Language.Syntax.SyntaxKind.NodesKeyword},null))!=null?$t.Element$1:null,edgesTableClause=($t1=System.Linq.Enumerable.from(node.OutputClause,Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.GraphToTableOutputClause)).firstOrDefault(function(oc){return oc.Element$1.EntityKeyword.Kind===Kusto.Language.Syntax.SyntaxKind.GraphEdgesKeyword},null))!=null?$t1.Element$1:null,nodesTableClause==null||edgesTableClause==null)return diagnostics.add(Kusto.Language.DiagnosticFacts.GetMissingGraphEntityType().WithLocation(node.OutputClause)),new Kusto.Language.Binding.SemanticInfo.$ctor6(diagnostics);nodesTable=this.VisitGraphToTableNodesClause(nodesTableClause,leftGraph);edgesTable=this.VisitGraphToTableEdgesClause(edgesTableClause,leftGraph);symbol=new Kusto.Language.Symbols.GroupSymbol.ctor([nodesTable,edgesTable])}else diagnostics.add(Kusto.Language.DiagnosticFacts.GetIncorrectNumberOfOutputGraphEntities().WithLocation(node.OutputClause));return new Kusto.Language.Binding.SemanticInfo.$ctor5(symbol,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitGraphToTableEdgesClause:function(node,graph){var $t,$t1,edges=(graph!=null?graph.EdgeShape:null)||this.RowScopeOrEmpty,name=($t=node.AsClause)!=null&&($t1=$t.Name)!=null?$t1.SimpleName:null,columns=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).$ctor2)(System.Array.getCount(edges.Columns,Kusto.Language.Symbols.ColumnSymbol));return this.AddGraphToTableHashColumn(node,columns,Kusto.Language.QueryOperatorParameters.WithSourceId),this.AddGraphToTableHashColumn(node,columns,Kusto.Language.QueryOperatorParameters.WithTargetId),columns.AddRange(edges.Columns),new Kusto.Language.Symbols.TableSymbol.$ctor6(name,columns)},VisitGraphToTableNodesClause:function(node,graph){var $t,$t1,nodes=(graph!=null?graph.NodeShape:null)||this.RowScopeOrEmpty,name=($t=node.AsClause)!=null&&($t1=$t.Name)!=null?$t1.SimpleName:null,columns=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).$ctor2)(System.Array.getCount(nodes.Columns,Kusto.Language.Symbols.ColumnSymbol));return this.AddGraphToTableHashColumn(node,columns,Kusto.Language.QueryOperatorParameters.WithNodeId),columns.AddRange(nodes.Columns),new Kusto.Language.Symbols.TableSymbol.$ctor6(name,columns)},AddGraphToTableHashColumn:function(node,columns,parameter){var hashColumn=Kusto.Language.Syntax.SyntaxExtensions.GetParameterNameValue(node.Parameters,parameter);System.String.isNullOrEmpty(hashColumn)||columns.add(new Kusto.Language.Symbols.ColumnSymbol(hashColumn,Kusto.Language.Symbols.ScalarTypes.Long))},VisitGraphToTableOutputClause:function(node){return null},VisitGraphToTableAsClause:function(node){return null},VisitCountAsIdentifierClause:function(node){return null},VisitDataScopeClause:function(node){return null},VisitDefaultExpressionClause:function(node){return null},VisitExternalDataWithClause:function(node){return null},VisitFacetWithOperatorClause:function(node){return null},VisitFacetWithExpressionClause:function(node){return null},VisitFindInClause:function(node){return null},VisitFindProjectClause:function(node){return null},VisitJoinOnClause:function(node){return null},VisitJoinWhereClause:function(node){return null},VisitMakeSeriesByClause:function(node){return null},VisitMakeSeriesInRangeClause:function(node){return null},VisitMakeSeriesFromClause:function(node){return null},VisitMakeSeriesToClause:function(node){return null},VisitMakeSeriesStepClause:function(node){return null},VisitMakeSeriesFromToStepClause:function(node){return null},VisitMakeSeriesOnClause:function(node){return null},VisitMvExpandRowLimitClause:function(node){return null},VisitMvApplyRowLimitClause:function(node){return null},VisitMvApplyContextIdClause:function(node){return null},VisitNameEqualsClause:function(node){return null},VisitOrderingClause:function(node){return null},VisitOrderingNullsClause:function(node){return null},VisitReduceByWithClause:function(node){return null},VisitRenderWithClause:function(node){return null},VisitSummarizeByClause:function(node){return null},VisitTopHittersByClause:function(node){return null},VisitTopNestedClause:function(node){return null},VisitTopNestedWithOthersClause:function(node){return null},VisitToTypeOfClause:function(node){return null},VisitEvaluateSchemaClause:function(node){return null},VisitAliasStatement:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool();try{Kusto.Language.Binding.Binder.GetResultTypeOrError(node.Expression).IsError||this._binder.CheckIsDatabase(node.Expression,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}return null},VisitExpressionStatement:function(node){return null},VisitLetStatement:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),name,ts;try{return(name=node.Name.Name.SimpleName,this._binder._localScope.ContainsSymbol(name)&&diagnostics.add(Kusto.Language.DiagnosticFacts.GetVariableAlreadyDeclared(name).WithLocation(node.Name)),(ts=Bridge.as(Kusto.Language.Binding.Binder.GetResultType$1(node.Expression),Kusto.Language.Symbols.TupleSymbol))!=null&&diagnostics.add(Kusto.Language.DiagnosticFacts.GetMultiValuedExpressionCannotBeAssignedToVariable().WithLocation(node.Expression)),diagnostics.Count>0)?new Kusto.Language.Binding.SemanticInfo.$ctor6(diagnostics):null}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitQueryParametersStatement:function(node){return null},VisitRestrictStatement:function(node){return null},VisitSetOptionStatement:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),option;try{if(this._binder.CheckIsIdentifierNameDeclaration(node.Name,diagnostics),option=this._binder._globals.GetOption(node.Name.SimpleName),option!=null&&this._binder.SetSemanticInfo(node.Name,new Kusto.Language.Binding.SemanticInfo.$ctor3(option,null)),node.ValueClause!=null&&this._binder.CheckIsLiteralOrName(node.ValueClause.Expression,diagnostics)&&option!=null&&System.Array.getCount(option.Types,Kusto.Language.Symbols.ScalarSymbol)>0&&this._binder.CheckIsAnyType(Kusto.Language.Symbols.ScalarSymbol,node.ValueClause.Expression,option.Types,Kusto.Language.Symbols.Conversion.Compatible,diagnostics),diagnostics.Count>0)return new Kusto.Language.Binding.SemanticInfo.$ctor6(diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}return null},VisitOptionValueClause:function(node){return null},VisitCommandWithValueClause:function(node){return null},VisitCommandWithPropertyListClause:function(node){return null},VisitBadCommand:function(node){return null},VisitCommandAndSkippedTokens:function(node){return null},VisitCommandBlock:function(node){return null},VisitCustomCommand:function(node){var commandSymbol=this._binder._globals.GetCommand(node.CommandKind);return commandSymbol!=null?new Kusto.Language.Binding.SemanticInfo.$ctor3(commandSymbol,commandSymbol.ResultType):null},VisitUnknownCommand:function(node){return null},VisitDirectiveBlock:function(node){return null}}});Bridge.define("Kusto.Language.Binding.Binder.SearchPredicateBinder",{inherits:[Kusto.Language.Syntax.DefaultSyntaxVisitor],$kind:"nested class",fields:{_binder:null,_treeBinder:null},props:{RowScopeOrEmpty:{get:function(){return this._binder._rowScope||Kusto.Language.Symbols.TableSymbol.Empty}}},ctors:{ctor:function(binder,treeBinder){this.$initialize();Kusto.Language.Syntax.DefaultSyntaxVisitor.ctor.call(this);this._binder=binder;this._treeBinder=treeBinder}},methods:{DefaultVisit:function(node){node.Accept$1(this._treeBinder)},VisitStarExpression:function(node){var b;(b=Bridge.as(node.Parent,Kusto.Language.Syntax.BinaryExpression))!=null?this._binder.SetSemanticInfo(node,new Kusto.Language.Binding.SemanticInfo.$ctor5(Kusto.Language.Symbols.ScalarTypes.Dynamic)):this._binder.SetSemanticInfo(node,new Kusto.Language.Binding.SemanticInfo.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool))},VisitLiteralExpression:function(node){this.BindStandAloneSearchTerm(node)},VisitNameReference:function(node){this.BindStandAloneSearchTerm(node)},BindStandAloneSearchTerm:function(node){node.Accept$1(this._treeBinder);node.IsConstant&&Bridge.referenceEquals(node.ResultType,Kusto.Language.Symbols.ScalarTypes.String)&&this._binder.SetSemanticInfo(node,node.GetSemanticInfo().WithResultType(Kusto.Language.Symbols.ScalarTypes.Bool))},VisitParenthesizedExpression:function(node){node.Expression.Accept$1(this);this._binder.SetSemanticInfo(node,new Kusto.Language.Binding.SemanticInfo.$ctor5(node.Expression.ResultType))},VisitBinaryExpression:function(node){var opKind=Kusto.Language.Binding.Binder.GetOperatorKind(node.Kind),info;switch(opKind){case Kusto.Language.Symbols.OperatorKind.And:case Kusto.Language.Symbols.OperatorKind.Or:node.Left.Accept$1(this);node.Right.Accept$1(this);info=this._binder.GetBinaryOperatorInfo$1(opKind,node.Left,node.Right,node.Operator);this._binder.SetSemanticInfo(node,info);break;default:node.Accept$1(this._treeBinder);break}}}});Bridge.define("Kusto.Language.Binding.Binder.TreeBinder",{inherits:[Kusto.Language.Syntax.DefaultSyntaxVisitor],$kind:"nested class",statics:{methods:{GetFirstExpressionStatement:function(statements){for(var es,i=0;i<statements.Count;i=i+1|0)if((es=Bridge.as(statements.getItem$1(i).Element$1,Kusto.Language.Syntax.ExpressionStatement))!=null)return es;return null},IsCommandButNotQueryPart:function(node){for(var p;(p=Bridge.as(node.Parent,Kusto.Language.Syntax.PathExpression))!=null;)node=p.Parent;return Bridge.is(node.Parent,Kusto.Language.Syntax.Command)||Bridge.is(node.Parent,Kusto.Language.Syntax.CustomNode)}}},fields:{_binder:null,_nodeBinder:null,predicateBinder:null},ctors:{ctor:function(binder){this.$initialize();Kusto.Language.Syntax.DefaultSyntaxVisitor.ctor.call(this);this._binder=binder;this._nodeBinder=new Kusto.Language.Binding.Binder.NodeBinder(binder)}},methods:{DefaultVisit:function(node){this.VisitChildren(node);this.BindNode(node)},VisitChildren:function(node){var i,n,child;if(node!=null)for(i=0,n=node.ChildCount;i<n;i=i+1|0)child=Bridge.as(node.GetChild(i),Kusto.Language.Syntax.SyntaxNode),child!=null&&child.Accept$1(this)},BindNode:function(node){this._binder._cancellationToken.ThrowIfCancellationRequested();var info=node.Accept(Kusto.Language.Binding.SemanticInfo,this._nodeBinder);this._binder.SetSemanticInfo(node,info)},VisitPathExpression:function(node){if(Bridge.is(node.Selector,Kusto.Language.Syntax.BracketedExpression)){Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitPathExpression.call(this,node);return}else{node.Expression.Accept$1(this);var oldPathScope=this._binder._pathScope;this._binder._pathScope=Kusto.Language.Binding.Binder.GetResultTypeOrError(node.Expression);try{node.Selector.Accept$1(this)}finally{this._binder._pathScope=oldPathScope}this.BindNode(node)}},VisitDynamicExpression:function(node){var $t,$t1;($t=this._binder)._dynamicDepth=$t._dynamicDepth+1|0;try{Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitDynamicExpression.call(this,node)}finally{($t1=this._binder)._dynamicDepth=$t1._dynamicDepth-1|0}},VisitPipeExpression:function(node){var union,oldIsFuzzy,isFuzzy,oldRowScope;(union=Bridge.as(node.Operator,Kusto.Language.Syntax.UnionOperator))!=null?(oldIsFuzzy=this._binder._isFuzzy,isFuzzy=Kusto.Language.Syntax.SyntaxExtensions.GetParameterLiteralValue(System.Nullable$1(System.Boolean),union.Parameters,Kusto.Language.QueryOperatorParameters.IsFuzzy),isFuzzy!=null&&(this._binder._isFuzzy=System.Nullable.getValue(isFuzzy)),node.Expression.Accept$1(this),this._binder._isFuzzy=oldIsFuzzy):node.Expression.Accept$1(this);oldRowScope=this._binder._rowScope;this._binder._rowScope=Bridge.as(Kusto.Language.Binding.Binder.GetResultType$1(node.Expression),Kusto.Language.Symbols.TableSymbol);try{node.Operator.Accept$1(this)}finally{this._binder._rowScope=oldRowScope}this.BindNode(node)},VisitLookupOperator:function(node){node.Parameters.Accept$1(this);var oldRowScope=this._binder._rowScope;this._binder._rowScope=null;try{node.Expression.Accept$1(this)}finally{this._binder._rowScope=oldRowScope}this._binder._rightRowScope=Bridge.as(Kusto.Language.Binding.Binder.GetResultType$1(node.Expression),Kusto.Language.Symbols.TableSymbol);try{node.LookupClause.Accept$1(this);this.BindNode(node)}finally{this._binder._rightRowScope=null}},VisitJoinOperator:function(node){var $t,oldRowScope;node.Parameters.Accept$1(this);oldRowScope=this._binder._rowScope;this._binder._rowScope=null;try{node.Expression.Accept$1(this)}finally{this._binder._rowScope=oldRowScope}this._binder._rightRowScope=Bridge.as(Kusto.Language.Binding.Binder.GetResultType$1(node.Expression),Kusto.Language.Symbols.TableSymbol);try{($t=node.ConditionClause)!=null?$t.Accept$1(this):null;this.BindNode(node)}finally{this._binder._rightRowScope=null}},VisitJoinOnClause:function(node){for(var i=0;i<node.Expressions.Count;i=i+1|0)this.VisitJoinOnExpression(node.Expressions.getItem$1(i).Element$1)},VisitJoinOnExpression:function(expr){var be;(be=Bridge.as(expr,Kusto.Language.Syntax.BinaryExpression))!=null&&be.Kind===Kusto.Language.Syntax.SyntaxKind.AndExpression?(this.VisitJoinOnExpression(be.Left),this.VisitJoinOnExpression(be.Right),this._binder.SetSemanticInfo(be,new Kusto.Language.Binding.SemanticInfo.$ctor5(Kusto.Language.Symbols.ScalarTypes.Bool))):(this._binder._commonColumnsOnly=!0,expr.Accept$1(this),this._binder._commonColumnsOnly=!1)},VisitUnionOperator:function(node){var oldRowScope=this._binder._rowScope,oldIsFuzzy,isFuzzy;this._binder._rowScope=null;oldIsFuzzy=this._binder._isFuzzy;isFuzzy=Kusto.Language.Syntax.SyntaxExtensions.GetParameterLiteralValue(System.Nullable$1(System.Boolean),node.Parameters,Kusto.Language.QueryOperatorParameters.IsFuzzy);isFuzzy!=null&&(this._binder._isFuzzy=System.Nullable.getValue(isFuzzy));this.VisitChildren(node);this._binder._rowScope=oldRowScope;this._binder._isFuzzy=oldIsFuzzy;this.BindNode(node)},VisitSummarizeOperator:function(node){var $t;node.Parameters.Accept$1(this);($t=node.ByClause)!=null?$t.Accept$1(this):null;this.VisitInScopeKind(node.Aggregates,Kusto.Language.Binding.ScopeKind.Aggregate);this.BindNode(node)},VisitMacroExpandOperator:function(node){var $t,$t1,$t2,$t3,$t4,$t5,$t6,$t7,$t8,oldIsFuzzy,isFuzzy,diagnostics,entitySymbol,statements,isPrimaryEntity,alternateScope,es,ts,tempScopeSymbol,resultType,info,statementsInfo;node.Parameters.Accept$1(this);oldIsFuzzy=this._binder._isFuzzy;isFuzzy=Kusto.Language.Syntax.SyntaxExtensions.GetParameterLiteralValue(System.Nullable$1(System.Boolean),node.Parameters,Kusto.Language.QueryOperatorParameters.IsFuzzy);isFuzzy!=null&&(this._binder._isFuzzy=System.Nullable.getValue(isFuzzy));node.EntityGroup.Accept$1(this);this._binder._isFuzzy=!1;($t=node.ScopeReferenceName)!=null?$t.Accept$1(this):null;diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool();try{var resultTables=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.TableSymbol).ctor),alternateStatementLists=new(System.Collections.Generic.List$1(Kusto.Language.Syntax.SyntaxNode).ctor),egSymbol=Bridge.as(node.EntityGroup.ResultType,Kusto.Language.Symbols.EntityGroupSymbol),declaredScope=Bridge.as(($t1=node.ScopeReferenceName)!=null&&($t2=$t1.EntityGroupReferenceName)!=null?$t2.ReferencedSymbol:null,Kusto.Language.Symbols.EntityGroupElementSymbol),entityGroupNameReference=Bridge.as(node.EntityGroup,Kusto.Language.Syntax.NameReference),scopeName=($t3=($t4=node.ScopeReferenceName)!=null&&($t5=$t4.EntityGroupReferenceName)!=null?$t5.SimpleName:null,$t3!=null?$t3:($t6=entityGroupNameReference!=null?entityGroupNameReference.SimpleName:null,$t6!=null?$t6:($t7=egSymbol!=null?egSymbol.Name:null,$t7!=null?$t7:"$scope"))),oldScope=this._binder._localScope;if(egSymbol!=null){$t8=Bridge.getEnumerator(System.Linq.Enumerable.from(egSymbol.Members).ofType(Kusto.Language.Symbols.TypeSymbol));try{while($t8.moveNext())entitySymbol=$t8.Current,this._binder._localScope=new Kusto.Language.Binding.LocalScope.ctor(oldScope),isPrimaryEntity=Bridge.referenceEquals(declaredScope!=null?declaredScope.UnderlyingSymbol:null,entitySymbol),isPrimaryEntity?(this._binder._localScope.AddSymbol(declaredScope),statements=node.StatementList):(alternateScope=new Kusto.Language.Symbols.EntityGroupElementSymbol.$ctor2(scopeName,egSymbol,entitySymbol),this._binder._localScope.AddSymbol(alternateScope),statements=Kusto.Language.Syntax.SyntaxNodeExtensions.CopyAsFragment(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)),node.StatementList),alternateStatementLists.add(statements)),statements.Accept$1(this),(es=Kusto.Language.Binding.Binder.TreeBinder.GetFirstExpressionStatement(statements))!=null&&(this._binder.CheckIsTabular(es.Expression,diagnostics),(ts=Bridge.as(Kusto.Language.Binding.Binder.GetResultType$1(es.Expression),Kusto.Language.Symbols.TableSymbol))!=null&&resultTables.add(ts))}finally{Bridge.is($t8,System.IDisposable)&&$t8.System$IDisposable$Dispose()}}else declaredScope!=null?this._binder._localScope.AddSymbol(declaredScope):(tempScopeSymbol=new Kusto.Language.Symbols.EntityGroupElementSymbol.ctor(scopeName),this._binder._localScope.AddSymbol(tempScopeSymbol)),node.StatementList.Accept$1(this);this._binder._localScope=oldScope;this._binder._isFuzzy=oldIsFuzzy;resultType=Kusto.Language.Symbols.TableSymbol.Combine$1(Kusto.Language.Symbols.CombineKind.UnifySameNameAndType,resultTables);info=new Kusto.Language.Binding.SemanticInfo.$ctor5(resultType,diagnostics);this._binder.SetSemanticInfo(node,info);alternateStatementLists.Count>0&&(statementsInfo=new Kusto.Language.Binding.SemanticInfo.$ctor6(null).WithAlternates(alternateStatementLists),this._binder.SetSemanticInfo(node.StatementList,statementsInfo))}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitMakeSeriesOperator:function(node){var $t,$t1,$t2;node.Parameters.Accept$1(this);this.VisitInScopeKind(node.Aggregates,Kusto.Language.Binding.ScopeKind.Aggregate);($t=node.OnClause)!=null?$t.Accept$1(this):null;($t1=node.RangeClause)!=null?$t1.Accept$1(this):null;($t2=node.ByClause)!=null?$t2.Accept$1(this):null;this.BindNode(node)},VisitInRowScope:function(node,rowScope){if(node!=null){var oldRowScope=this._binder._rowScope;this._binder._rowScope=rowScope;node.Accept$1(this);this._binder._rowScope=oldRowScope}},VisitInScopeKind:function(node,kind){if(node!=null){var oldScopeKind=this._binder._scopeKind;this._binder._scopeKind=kind;node.Accept$1(this);this._binder._scopeKind=oldScopeKind}},VisitTopNestedClause:function(node){var $t,$t1;($t=node.Expression)!=null?$t.Accept$1(this):null;node.OfExpression.Accept$1(this);($t1=node.WithOthersClause)!=null?$t1.Accept$1(this):null;this.VisitInScopeKind(node.ByExpression,Kusto.Language.Binding.ScopeKind.Aggregate);this.BindNode(node)},VisitAsOperator:function(node){if(Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitAsOperator.call(this,node),this._binder._rowScope!=null){var name=node.Name.SimpleName,symbol=new Kusto.Language.Symbols.VariableSymbol(name,this._binder._rowScope);this._binder.SetSemanticInfo(node.Name,new Kusto.Language.Binding.SemanticInfo.$ctor3(symbol,null));this._binder._localScope.AddSymbol(symbol)}this.BindNode(node)},VisitPartitionOperator:function(node){var oldRowScope,oldLocalScope,column;if(node.ByExpression.Accept$1(this),Bridge.is(node.Operand,Kusto.Language.Syntax.PartitionQuery)){oldRowScope=this._binder._rowScope;this._binder._rowScope=null;oldLocalScope=this._binder._localScope;try{column=Bridge.as(Kusto.Language.Binding.Binder.GetReferencedSymbol$1(node.ByExpression),Kusto.Language.Symbols.ColumnSymbol);column!=null&&(this._binder._localScope=new Kusto.Language.Binding.LocalScope.ctor(this._binder._localScope),this._binder._localScope.AddSymbol(column));node.Operand.Accept$1(this)}finally{this._binder._rowScope=oldRowScope;this._binder._localScope=oldLocalScope}}else node.Operand.Accept$1(this);this.BindNode(node)},VisitForkOperator:function(node){var $t,oldRowScope=this._binder._rowScope,expr;try{$t=Bridge.getEnumerator(node.Expressions,"GetEnumerator$1");try{while($t.moveNext())expr=$t.Current,this._binder._rowScope=oldRowScope,expr.Accept$1(this)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}finally{this._binder._rowScope=oldRowScope}this.BindNode(node)},VisitMaterializedViewCombineExpression:function(node){node.ViewName.Accept$1(this);node.BaseClause.Accept$1(this);node.DeltaClause.Accept$1(this);var oldScope=this._binder._rowScope;try{this._binder._rowScope=Bridge.as(Kusto.Language.Binding.Binder.GetResultType$1(node.DeltaClause.Expression),Kusto.Language.Symbols.TableSymbol);node.AggregationsClause.Accept$1(this)}finally{this._binder._rowScope=oldScope}this.BindNode(node)},VisitParenthesizedExpression:function(node){var oldPathScope=this._binder._pathScope;this._binder._pathScope=null;try{Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitParenthesizedExpression.call(this,node)}finally{this._binder._pathScope=oldPathScope}},VisitFunctionCallExpression:function(node){var oldPathScope,argumentScope,fn,fcInfo;node.Name.Accept$1(this);oldPathScope=this._binder._pathScope;this._binder._pathScope=null;try{argumentScope=this._binder.GetArgumentScope(node,this._binder._scopeKind);(fn=Bridge.as(Kusto.Language.Binding.Binder.GetReferencedSymbol$1(node.Name),Kusto.Language.Symbols.FunctionSymbol))!=null&&System.Array.getCount(fn.Signatures,Kusto.Language.Symbols.Signature)===1?this.VisitArgumentList(node.ArgumentList,System.Array.getItem(fn.Signatures,0,Kusto.Language.Symbols.Signature),argumentScope):this.VisitInScopeKind(node.ArgumentList,argumentScope)}finally{this._binder._pathScope=oldPathScope}this.BindNode(node);node.Name.ResultType!=null&&node.Name.ResultType.IsError||(fcInfo=node.GetSemanticInfo(),this._binder.SetSemanticInfo(node.Name,new Kusto.Language.Binding.SemanticInfo.$ctor3(fcInfo!=null?fcInfo.ReferencedSymbol:null,fcInfo!=null?fcInfo.ResultType:null)))},VisitArgumentList:function(list,signature,argumentScope){for(var i1,n1,arg,p,p0Table,oldRowScope,commonColumns,da,db,$t,$arguments=Kusto.Language.Binding.Binder.s_expressionListPool.AllocateFromPool(),argumentParameters=Kusto.Language.Binding.Binder.s_parameterListPool.AllocateFromPool(),i=0,n=list.Expressions.Count;i<n;i=i+1|0)$arguments.add(list.Expressions.getItem$1(i).Element$1);for(signature.GetArgumentParameters$2($arguments,argumentParameters),i1=0,n1=$arguments.Count;i1<n1;i1=i1+1|0)if(arg=$arguments.getItem(i1),p=argumentParameters.getItem(i1),p!=null)switch(p.ArgumentKind){case Kusto.Language.Symbols.ArgumentKind.Aggregate:this.VisitInScopeKind(arg,Kusto.Language.Binding.ScopeKind.Aggregate);break;case Kusto.Language.Symbols.ArgumentKind.Column_Parameter0:case Kusto.Language.Symbols.ArgumentKind.Column_Parameter0_Common:i1>0&&(p0Table=($t=$arguments.getItem(0))!=null?$t.ResultType:Bridge.as(null,Kusto.Language.Symbols.TableSymbol))!=null?(oldRowScope=this._binder._rowScope,p.ArgumentKind===Kusto.Language.Symbols.ArgumentKind.Column_Parameter0_Common?(commonColumns=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor),Kusto.Language.Binding.Binder.GetCommonColumns$1(this._binder._rowScope.Columns,p0Table.Columns,commonColumns),this._binder._rowScope=new Kusto.Language.Symbols.TableSymbol.$ctor3(commonColumns)):this._binder._rowScope=p0Table,this.VisitInScopeKind(arg,argumentScope),this._binder._rowScope=oldRowScope):this.VisitInScopeKind(arg,Kusto.Language.Binding.ScopeKind.Aggregate);break;case Kusto.Language.Symbols.ArgumentKind.Expression_Parameter0_Element:i1>0&&(da=Bridge.as($arguments.getItem(0).ResultType,Kusto.Language.Symbols.DynamicArraySymbol))!=null&&(db=Bridge.as(da.ElementType,Kusto.Language.Symbols.DynamicBagSymbol))!=null?this.VisitInRowScope(arg,new Kusto.Language.Symbols.TableSymbol.$ctor3(db.Properties)):this.VisitInScopeKind(arg,argumentScope);break;default:this.VisitInScopeKind(arg,argumentScope);break}else this.VisitInScopeKind(arg,argumentScope);Kusto.Language.Binding.Binder.s_expressionListPool.ReturnToPool($arguments);Kusto.Language.Binding.Binder.s_parameterListPool.ReturnToPool(argumentParameters)},VisitInvokeOperator:function(node){var oldRowScope=this._binder._rowScope;this._binder._implicitArgumentType=this._binder.RowScopeOrEmpty;this._binder._rowScope=null;try{node.Function.Accept$1(this)}finally{this._binder._rowScope=oldRowScope;this._binder._implicitArgumentType=null}this.BindNode(node)},VisitEvaluateOperator:function(node){var oldScopeKind=this._binder._scopeKind;this._binder._scopeKind=Kusto.Language.Binding.ScopeKind.PlugIn;try{this.VisitChildren(node)}finally{this._binder._scopeKind=oldScopeKind}this.BindNode(node)},VisitLetStatement:function(node){var valueInfo,exprType,local;Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitLetStatement.call(this,node);valueInfo={};Kusto.Language.Binding.Binder.TryGetLiteralValueInfo(node.Expression,valueInfo);exprType=Kusto.Language.Binding.Binder.GetResultTypeOrError(node.Expression);local=Bridge.is(exprType,Kusto.Language.Symbols.FunctionSymbol)||Bridge.is(exprType,Kusto.Language.Symbols.EntityGroupSymbol)?exprType:Bridge.cast(new Kusto.Language.Symbols.VariableSymbol(node.Name.SimpleName,exprType,Kusto.Language.Binding.Binder.GetIsConstant(node.Expression),valueInfo.v,node.Expression),Kusto.Language.Symbols.Symbol);this._binder.SetSemanticInfo(node.Name,new Kusto.Language.Binding.SemanticInfo.$ctor3(local,null));this._binder._localScope.AddSymbol(local)},VisitFunctionDeclaration:function(node){var oldLocalScope=this._binder._localScope,oldDefaultColumnNameSuffix=this._binder._defaultColumnNameSuffix;try{this._binder._staticScopes.setItem(node,oldLocalScope.Copy());this._binder._localScope=new Kusto.Language.Binding.LocalScope.ctor(oldLocalScope);this._binder._defaultColumnNameSuffix=1;Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitFunctionDeclaration.call(this,node)}finally{this._binder._localScope=oldLocalScope;this._binder._defaultColumnNameSuffix=oldDefaultColumnNameSuffix}},VisitFunctionParameters:function(node){Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitFunctionParameters.call(this,node);var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool();try{this._binder.BindParameterDeclarations(node.Parameters);this._binder.AddDeclarationsToLocalScope(node.Parameters)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitQueryParametersStatement:function(node){Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitQueryParametersStatement.call(this,node);this._binder.BindParameterDeclarations(node.Parameters);this._binder.AddDeclarationsToLocalScope(node.Parameters)},VisitScanOperator:function(node){var $t,$t1,oldLocalScope;node.Parameters.Accept$1(this);($t=node.OrderByClause)!=null?$t.Accept$1(this):null;($t1=node.PartitionByClause)!=null?$t1.Accept$1(this):null;oldLocalScope=this._binder._localScope;this._binder._localScope=new Kusto.Language.Binding.LocalScope.ctor(oldLocalScope);try{node.DeclareClause!=null&&(this._binder.BindColumnDeclarations(node.DeclareClause.Declarations),this._binder.AddDeclarationsToLocalScope(node.DeclareClause.Declarations));this._binder.BindStepDeclarations(node);this._binder.AddStepDeclarationsToLocalScope(node);node.Steps.Accept$1(this)}finally{this._binder._localScope=oldLocalScope}this.BindNode(node)},VisitPatternStatement:function(node){Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitPatternStatement.call(this,node);var type=node.Pattern!=null?Kusto.Language.Binding.Binder.GetResultTypeOrError(node.Pattern):new Kusto.Language.Symbols.PatternSymbol.ctor(node.Name.SimpleName),local=new Kusto.Language.Symbols.VariableSymbol(node.Name.SimpleName,type);this._binder.SetSemanticInfo(node.Name,new Kusto.Language.Binding.SemanticInfo.$ctor3(local,null));this._binder._localScope.AddSymbol(local)},VisitPatternDeclaration:function(node){this._binder.BindParameterDeclarations$1(node.Parameters);node.PathParameter!=null&&this._binder.BindParameterDeclaration$1(node.PathParameter.Parameter);var oldLocalScope=this._binder._localScope;try{this._binder._localScope=new Kusto.Language.Binding.LocalScope.ctor(oldLocalScope);this._binder.AddDeclarationsToLocalScope$1(node.Parameters);node.PathParameter!=null&&this._binder.AddDeclarationToLocalScope(node.PathParameter.Parameter.Name);Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitPatternDeclaration.call(this,node)}finally{this._binder._localScope=oldLocalScope}},VisitAliasStatement:function(node){Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitAliasStatement.call(this,node);var name=node.Name.SimpleName,db=Bridge.as(Kusto.Language.Binding.Binder.GetResultTypeOrError(node.Expression),Kusto.Language.Symbols.DatabaseSymbol);name!=null&&db!=null&&this._binder._aliasedDatabases.setItem(name,db)},VisitFindOperator:function(node){var $t,$t1,$t2,$t3,$t4,oldRowScope;($t=node.DataScope)!=null?$t.Accept$1(this):null;($t1=node.Parameters)!=null?$t1.Accept$1(this):null;($t2=node.InClause)!=null?$t2.Accept$1(this):null;oldRowScope=this._binder._rowScope;try{this._binder._rowScope=this._binder.GetFindColumnsTable(node);this.predicateBinder==null&&(this.predicateBinder=new Kusto.Language.Binding.Binder.SearchPredicateBinder(this._binder,this));node.Condition.Accept$1(this.predicateBinder);($t3=node.Project)!=null?$t3.Accept$1(this):null;($t4=node.ProjectAway)!=null?$t4.Accept$1(this):null}finally{this._binder._rowScope=oldRowScope}this.BindNode(node)},VisitSearchOperator:function(node){var $t,$t1,$t2,oldRowScope;($t=node.Parameters)!=null?$t.Accept$1(this):null;($t1=node.DataScope)!=null?$t1.Accept$1(this):null;oldRowScope=this._binder._rowScope;this._binder._rowScope=null;($t2=node.InClause)!=null?$t2.Accept$1(this):null;this._binder._rowScope=oldRowScope;this._binder._rowScope=this._binder.GetSearchColumnsTable(node);this.predicateBinder==null&&(this.predicateBinder=new Kusto.Language.Binding.Binder.SearchPredicateBinder(this._binder,this));node.Condition.Accept$1(this.predicateBinder);this._binder._rowScope=oldRowScope;this.BindNode(node)},VisitMvApplyOperator:function(node){var $t,$t1,$t2,$t3,$t4,subqueryInfo,appliedColumns,col,subqueryTable,col1,resultTable,applyInfo;($t=node.Expressions)!=null?$t.Accept$1(this):null;($t1=node.RowLimitClause)!=null?$t1.Accept$1(this):null;($t2=node.ContextIdClause)!=null?$t2.Accept$1(this):null;var info=node.Accept(Kusto.Language.Binding.SemanticInfo,this._nodeBinder),oldRowScope=this._binder._rowScope,builder=Kusto.Language.Binding.Binder.s_projectionBuilderPool.AllocateFromPool();try{if(this._binder._rowScope=Bridge.as(info.ResultType,Kusto.Language.Symbols.TableSymbol),node.Subquery.Accept$1(this),subqueryInfo=node.Subquery.GetSemanticInfo(),oldRowScope!=null){appliedColumns=new(System.Collections.Generic.HashSet$1(Kusto.Language.Symbols.ColumnSymbol).$ctor1)(System.Linq.Enumerable.from(node.Expressions,Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MvApplyExpression)).select(function(e){var $t3;return Bridge.as(($t3=e.Element$1.Expression)!=null?$t3.ReferencedSymbol:null,Kusto.Language.Symbols.ColumnSymbol)}).where(function(e){return e!=null}));$t3=Bridge.getEnumerator(oldRowScope.Columns,Kusto.Language.Symbols.ColumnSymbol);try{while($t3.moveNext())col=$t3.Current,appliedColumns.contains(col)||builder.Add(col,void 0,!1,!0)}finally{Bridge.is($t3,System.IDisposable)&&$t3.System$IDisposable$Dispose()}}if((subqueryTable=Bridge.as(subqueryInfo.ResultType,Kusto.Language.Symbols.TableSymbol))!=null){$t4=Bridge.getEnumerator(subqueryTable.Columns,Kusto.Language.Symbols.ColumnSymbol);try{while($t4.moveNext())col1=$t4.Current,builder.Add(col1,void 0,!0,!1)}finally{Bridge.is($t4,System.IDisposable)&&$t4.System$IDisposable$Dispose()}}resultTable=new Kusto.Language.Symbols.TableSymbol.$ctor3(builder.GetProjection()).WithInheritableProperties(this._binder.RowScopeOrEmpty);applyInfo=new Kusto.Language.Binding.SemanticInfo.$ctor5(resultTable,info.Diagnostics);this._binder.SetSemanticInfo(node,applyInfo)}finally{this._binder._rowScope=oldRowScope;Kusto.Language.Binding.Binder.s_projectionBuilderPool.ReturnToPool(builder)}},VisitNameReference:function(node){Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitNameReference.call(this,node);var ts;(ts=Bridge.as(node.ReferencedSymbol,Kusto.Language.Symbols.TableSymbol))!=null&&Kusto.Language.Binding.Binder.TreeBinder.IsCommandButNotQueryPart(node)&&(this._binder._rowScope=ts)},VisitCommandBlock:function(node){var commandStatement,command,commandResults,i;if(node.Statements.Count>0)for(commandStatement=node.Statements.getItem$1(0).Element$1,commandStatement.Accept$1(this),command=commandStatement.GetFirstDescendant(Kusto.Language.Syntax.Command),command!=null&&(commandResults=new Kusto.Language.Symbols.VariableSymbol("$command_results",Kusto.Language.Binding.Binder.GetResultTypeOrError(command)),this._binder._localScope.AddSymbol(commandResults)),i=1;i<node.Statements.Count;i=i+1|0)node.Statements.getItem$1(i).Element$1.Accept$1(this)},VisitToScalarExpression:function(node){var $t,$t1,oldScope;($t=node.KindParameter)!=null?$t.Accept$1(this):null;oldScope=this._binder._rowScope;this._binder._rowScope=null;try{($t1=node.Expression)!=null?$t1.Accept$1(this):null}finally{this._binder._rowScope=oldScope}this.BindNode(node)},VisitToTableExpression:function(node){var $t,$t1,oldScope;($t=node.KindParameter)!=null?$t.Accept$1(this):null;oldScope=this._binder._rowScope;this._binder._rowScope=null;try{($t1=node.Expression)!=null?$t1.Accept$1(this):null}finally{this._binder._rowScope=oldScope}this.BindNode(node)},VisitMakeGraphOperator:function(node){for(var child,mgInfo,info,i=0,n=node.ChildCount;i<n;i=i+1|0)(child=Bridge.as(node.GetChild(i),Kusto.Language.Syntax.SyntaxNode))==null||Bridge.referenceEquals(node.GetName(i),"PartitionedByClause")||child.Accept$1(this);this.BindNode(node);node.PartitionedByClause!=null&&(node.PartitionedByClause.Accept$1(this),mgInfo=node.GetSemanticInfo(),info=node.PartitionedByClause.Subquery.GetSemanticInfo().WithDiagnostics(mgInfo.Diagnostics),this._binder.SetSemanticInfo(node,info))},VisitMakeGraphTableAndKeyClause:function(node){var $t,$t1,oldScope;($t=node.Table)!=null?$t.Accept$1(this):null;oldScope=this._binder._rowScope;this._binder._rowScope=Bridge.as(node.Table.ResultType,Kusto.Language.Symbols.TableSymbol);try{($t1=node.Column)!=null?$t1.Accept$1(this):null}finally{this._binder._rowScope=oldScope}this.BindNode(node)},VisitGraphMergeOperator:function(node){var $t,oldScope=this._binder._rowScope,leftGraph,rightGraph;this._binder._rowScope=null;try{node.Graph.Accept$1(this);node.OnClause!=null&&(leftGraph=Kusto.Language.Binding.Binder.GetGraphSymbol(node),rightGraph=Bridge.as(node.Graph.ResultType,Kusto.Language.Symbols.GraphSymbol),this._binder._rowScope=leftGraph!=null?leftGraph.EdgeShape:null,this._binder._rightRowScope=rightGraph!=null?rightGraph.EdgeShape:null,($t=node.OnClause)!=null?$t.Accept$1(this):null)}finally{this._binder._rowScope=oldScope}this.BindNode(node)},VisitGraphMatchOperator:function(node){var $t,$t1,oldScope=this._binder._rowScope,oldLocalScope=this._binder._localScope;this._binder._rowScope=null;this._binder._localScope=new Kusto.Language.Binding.LocalScope.ctor(oldLocalScope);try{this._binder.BindGraphMatchPatternDeclarations(node);this._binder.AddGraphMatchPatternDeclarationsToLocalScope(node);($t=node.WhereClause)!=null?$t.Accept$1(this):null;($t1=node.ProjectClause)!=null?$t1.Accept$1(this):null}finally{this._binder._rowScope=oldScope;this._binder._localScope=oldLocalScope}this.BindNode(node)},VisitGraphToTableOperator:function(node){var oldScope,group,tables;Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitGraphToTableOperator.call(this,node);oldScope=this._binder._rowScope;this._binder._rowScope=null;try{node.OutputClause.Count>1&&(group=Bridge.as(node.ResultType,Kusto.Language.Symbols.GroupSymbol))!=null&&(tables=System.Linq.Enumerable.from(group.Members,Kusto.Language.Symbols.Symbol).where(function(m){return Bridge.is(m,Kusto.Language.Symbols.TableSymbol)}),this._binder._localScope.AddSymbols(tables))}finally{this._binder._rowScope=oldScope}this.BindNode(node)}}});Bridge.define("Kusto.Language.Editor.KustoCodeService",{inherits:[Kusto.Language.Editor.CommonCodeService],statics:{methods:{CanBeParsed:function(text){return text.length<=4194304},CanBeAnalyzed:function(code){return code.MaxDepth<=Kusto.Language.KustoCode.MaxAnalyzableSyntaxDepth},GetBestFunctionCallLocation:function(ex){var fc;return(fc=Bridge.as(ex,Kusto.Language.Syntax.FunctionCallExpression))!=null?fc.Name:ex},GetClusterReference:function(fc,location){var name={};return Bridge.referenceEquals(fc.ReferencedSymbol,Kusto.Language.Functions.Cluster)&&Kusto.Language.Editor.KustoCodeService.TryGetConstantStringArgumentValue(fc,0,name)?(location=location||fc.ArgumentList.Expressions.getItem$1(0).Element$1,new Kusto.Language.Editor.ClusterReference(name.v,location.TextStart,location.Width)):null},TryGetConstantStringArgumentValue:function(fc,index,constant){return fc.ArgumentList.Expressions.Count>index&&fc.ArgumentList.Expressions.getItem$1(index).Element$1.IsConstant?(constant.v=Bridge.as(fc.ArgumentList.Expressions.getItem$1(index).Element$1.ConstantValue,System.String),constant.v!=null):(constant.v=null,!1)},GetIncludeTrivia:function(kind){switch(kind){case Kusto.Language.Editor.MinimalTextKind.RemoveLeadingWhitespaceAndComments:return Kusto.Language.Syntax.IncludeTrivia.Interior;case Kusto.Language.Editor.MinimalTextKind.MinimizeWhitespaceAndRemoveComments:return Kusto.Language.Syntax.IncludeTrivia.Minimal;case Kusto.Language.Editor.MinimalTextKind.SingleLine:return Kusto.Language.Syntax.IncludeTrivia.SingleLine;default:throw new System.InvalidOperationException.$ctor1(System.String.format("Unhandled MinimalTextKind '{0}'",[Bridge.box(kind,Kusto.Language.Editor.MinimalTextKind,System.Enum.toStringFn(Kusto.Language.Editor.MinimalTextKind))]));}}}},fields:{kind:null,globals:null,lazyUnboundCode:null,lazyBoundCode:null,codeException:null,lazyDiagnostics:null,lazyAnalyzerDiagnostics:null,analyzers:null,actors:null,_analyzerInfos:null,_nameToActorMap:null},props:{Kind:{get:function(){return this.kind}}},ctors:{init:function(){this.analyzers=Kusto.Language.Editor.KustoAnalyzers.All;this.actors=Kusto.Language.Editor.KustoActors.All},$ctor2:function(text,globals,code,analyzers,actors){this.$initialize();Kusto.Language.Editor.CommonCodeService.ctor.call(this,text);this.kind=Kusto.Language.KustoCode.GetKind(text);this.globals=globals||(code!=null?code.Globals:null)||Kusto.Language.GlobalState.Default;this.lazyBoundCode=code;this.analyzers=analyzers||Kusto.Language.Editor.KustoAnalyzers.All;this.actors=actors||Kusto.Language.Editor.KustoActors.All},$ctor1:function(text,globals){globals===void 0&&(globals=null);Kusto.Language.Editor.KustoCodeService.$ctor2.call(this,text,globals||Kusto.Language.GlobalState.Default,null,null,null)},ctor:function(code){Kusto.Language.Editor.KustoCodeService.$ctor2.call(this,code.Text,code.Globals,code,null,null)}},methods:{WithActors:function(actors){return new Kusto.Language.Editor.KustoCodeService.$ctor2(this.Text,this.globals,this.lazyBoundCode,this.analyzers,actors)},WithAnalyzers:function(analyzers){return new Kusto.Language.Editor.KustoCodeService.$ctor2(this.Text,this.globals,this.lazyBoundCode,analyzers,this.actors)},TryGetBoundOrUnboundCode:function(cancellationToken,waitForAnalysis,code){if(this.lazyUnboundCode==null&&this.codeException==null&&waitForAnalysis&&Kusto.Language.Editor.KustoCodeService.CanBeParsed(this.Text)){this;try{if(this.lazyBoundCode!=null)return code.v=this.lazyBoundCode,!0;else{var newCode=Kusto.Language.KustoCode.Parse(this.Text,this.globals);Kusto.Language.Utils.Interlocked.CompareExchange(Kusto.Language.KustoCode,Bridge.ref(this,"lazyUnboundCode"),newCode,null)}}catch(e){e=System.Exception.create(e);this.codeException=e}}return code.v=this.lazyUnboundCode,code.v!=null},TryGetBoundCode:function(cancellationToken,waitForAnalysis,code){var newCode,newCode1;if(this.lazyBoundCode==null&&this.codeException==null&&waitForAnalysis&&Kusto.Language.Editor.KustoCodeService.CanBeParsed(this.Text)){this;try{this.lazyUnboundCode!=null?(newCode=this.lazyUnboundCode.Analyze(void 0,cancellationToken),Kusto.Language.Utils.Interlocked.CompareExchange(Kusto.Language.KustoCode,Bridge.ref(this,"lazyBoundCode"),newCode,null)):(newCode1=Kusto.Language.KustoCode.ParseAndAnalyze(this.Text,this.globals,cancellationToken),Kusto.Language.Utils.Interlocked.CompareExchange(Kusto.Language.KustoCode,Bridge.ref(this,"lazyBoundCode"),newCode1,null))}catch(e){e=System.Exception.create(e);this.codeException=e}}return code.v=this.lazyBoundCode,code.v!=null},IsFeatureSupported:function(feature,position){switch(this.Kind){case Kusto.Language.Editor.CodeKinds.Query:case Kusto.Language.Editor.CodeKinds.Command:return!0;case Kusto.Language.Editor.CodeKinds.Directive:switch(feature){case Kusto.Language.Editor.CodeServiceFeatures.Classification:return!0}return!1;default:return!1}},TryGetCachedDiagnostics:function(diagnostics){return diagnostics.v=this.lazyDiagnostics,diagnostics.v!=null},GetDiagnostics:function(waitForAnalysis,cancellationToken){var code,ds;if(waitForAnalysis===void 0&&(waitForAnalysis=!0),cancellationToken===void 0&&(cancellationToken=new Kusto.Language.Utils.CancellationToken),code={},this.lazyDiagnostics==null&&this.TryGetBoundCode(cancellationToken,waitForAnalysis,code)&&Kusto.Language.Editor.KustoCodeService.CanBeAnalyzed(code.v))try{ds=code.v.GetDiagnostics(cancellationToken);Kusto.Language.Utils.Interlocked.CompareExchange(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Diagnostic),Bridge.ref(this,"lazyDiagnostics"),ds,null)}catch($e1){$e1=System.Exception.create($e1);Kusto.Language.Utils.Interlocked.CompareExchange(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Diagnostic),Bridge.ref(this,"lazyDiagnostics"),Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Diagnostic).Instance,null)}return this.lazyDiagnostics||Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Diagnostic).Instance},TryGetCachedAnalyzerDiagnostics:function(diagnostics){return diagnostics.v=this.lazyAnalyzerDiagnostics,diagnostics.v!=null},GetAnalyzerDiagnostics:function(waitForAnalysis,cancellationToken){var $t,code,analyzerDx,analyzer,binderDx,distinctAnalyzerDx;if(waitForAnalysis===void 0&&(waitForAnalysis=!0),cancellationToken===void 0&&(cancellationToken=new Kusto.Language.Utils.CancellationToken),code={},this.lazyAnalyzerDiagnostics==null&&this.TryGetBoundCode(cancellationToken,waitForAnalysis,code)&&waitForAnalysis&&Kusto.Language.Editor.KustoCodeService.CanBeAnalyzed(code.v)){analyzerDx=new(System.Collections.Generic.List$1(Kusto.Language.Diagnostic).ctor);$t=Bridge.getEnumerator(this.analyzers,Kusto.Language.Editor.KustoAnalyzer);try{while($t.moveNext()){analyzer=$t.Current;cancellationToken.ThrowIfCancellationRequested();try{analyzer.Analyze(code.v,analyzerDx,cancellationToken)}catch(e){e=System.Exception.create(e);analyzerDx.add(Kusto.Language.DiagnosticFacts.AnalysisFailure(analyzer.Name,e.Message))}}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}binderDx=this.GetDiagnostics(waitForAnalysis,cancellationToken);distinctAnalyzerDx=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Diagnostic,System.Linq.Enumerable.from(binderDx,Kusto.Language.Diagnostic).concat(analyzerDx).distinct().skip(System.Array.getCount(binderDx,Kusto.Language.Diagnostic)));Kusto.Language.Utils.Interlocked.CompareExchange(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Diagnostic),Bridge.ref(this,"lazyAnalyzerDiagnostics"),distinctAnalyzerDx,null)}return this.lazyAnalyzerDiagnostics||Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Diagnostic).Instance},GetAnalyzers:function(){return this._analyzerInfos==null&&(this._analyzerInfos=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Editor.AnalyzerInfo,System.Linq.Enumerable.from(this.analyzers,Kusto.Language.Editor.KustoAnalyzer).select(function(a){return new Kusto.Language.Editor.AnalyzerInfo(a.Name,a.Diagnostics)}))),this._analyzerInfos},TryGetActor:function(name,actor){var $t;return this._nameToActorMap==null&&(this._nameToActorMap=($t=Kusto.Language.Editor.KustoActor,System.Linq.Enumerable.from(this.actors,$t).toDictionary(function(a){return a.Name},null,System.String,$t))),this._nameToActorMap.tryGetValue(name,actor)},GetCodeActions:function(position,selectionStart,selectionLength,options,waitForAnalysis,actorName,cancellationToken){var $t,actorActions,code,actions,actors,actor,actor1;if(options=options||Kusto.Language.Editor.CodeActionOptions.Default,actorActions=new(System.Collections.Generic.List$1(Kusto.Language.Editor.CodeAction).ctor),code={},this.TryGetBoundCode(cancellationToken,waitForAnalysis,code)){actions=new(System.Collections.Generic.List$1(Kusto.Language.Editor.CodeAction).ctor);actors=this.actors;actorName!=null&&(actor={},actors=this.TryGetActor(actorName,actor)?System.Array.init([actor.v],Kusto.Language.Editor.KustoActor):Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Editor.KustoActor).Instance);$t=Bridge.getEnumerator(actors,Kusto.Language.Editor.KustoActor);try{while($t.moveNext()){actor1={v:$t.Current};cancellationToken.ThrowIfCancellationRequested();try{actorActions.clear();actor1.v.GetActions(this,code.v,position,selectionStart,selectionLength,options,actorActions,waitForAnalysis,cancellationToken);actions.AddRange(System.Linq.Enumerable.from(actorActions,Kusto.Language.Editor.CodeAction).select(function($me,actor1){return Bridge.fn.bind($me,function(a){return this.AddActorName(a,actor1.v.Name)})}(this,actor1)))}catch($e1){$e1=System.Exception.create($e1)}}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return actions.Count>1&&actions.Sort$2(function(a,b){return System.String.compare(a.Title,b.Title,!0)}),new Kusto.Language.Editor.CodeActionInfo(actions)}return Kusto.Language.Editor.CodeActionInfo.NoActions},AddActorName:function(action,actorName){return Kusto.Language.Editor.ActorUtilities.AddData$1(action,[actorName])},ApplyCodeAction:function(action,caretPosition,options,cancellationToken){var code,actorName,actor;return options=options||Kusto.Language.Editor.CodeActionOptions.Default,code={},this.TryGetBoundCode(cancellationToken,!0,code)?(actorName=System.Linq.Enumerable.from(action.Data,System.String).lastOrDefault(null,null),actorName!=null)?(action=action.RemoveData(1),actor={},this.TryGetActor(actorName,actor)?actor.v.ApplyAction(this,code.v,action,caretPosition,options,cancellationToken):Kusto.Language.Editor.CodeActionResult.Failure(System.String.format("Unknown actor: {0}",[actorName]))):Kusto.Language.Editor.CodeActionResult.Failure("Unknown actor"):Kusto.Language.Editor.CodeActionResult.Failure("No semantic information available for this query")},GetClassifications:function(start,length,clipToRange,waitForAnalysis,cancellationToken){var code,classifications,clientParameterClassifications,merged;if(clipToRange===void 0&&(clipToRange=!0),waitForAnalysis===void 0&&(waitForAnalysis=!0),cancellationToken===void 0&&(cancellationToken=new Kusto.Language.Utils.CancellationToken),code={},this.TryGetBoundCode(cancellationToken,waitForAnalysis,code))try{return classifications=new(System.Collections.Generic.List$1(Kusto.Language.Editor.ClassifiedRange).ctor),Kusto.Language.Editor.KustoClassifier.GetClassifications(code.v.Syntax,start,length,clipToRange,classifications,cancellationToken),clientParameterClassifications=this.GetClientParametersClassifications(start,length,clipToRange),System.Array.getCount(clientParameterClassifications,Kusto.Language.Editor.ClassifiedRange)>0?(merged=Kusto.Language.Editor.CommonCodeService.Add(classifications,clientParameterClassifications),new Kusto.Language.Editor.ClassificationInfo(merged)):new Kusto.Language.Editor.ClassificationInfo(classifications)}catch($e1){return $e1=System.Exception.create($e1),Kusto.Language.Editor.ClassificationInfo.Empty}else return Kusto.Language.Editor.ClassificationInfo.Empty},GetClientParameters:function(){var $t,cps=Kusto.Language.Editor.CommonCodeService.prototype.GetClientParameters.call(this),code={},newCps,cp,token;if(System.Array.getCount(cps,Kusto.Language.Editor.ClientParameter)>0&&this.TryGetBoundOrUnboundCode(Bridge.getDefaultValue(Kusto.Language.Utils.CancellationToken),!0,code)){newCps=new(System.Collections.Generic.List$1(Kusto.Language.Editor.ClientParameter).ctor);$t=Bridge.getEnumerator(cps,Kusto.Language.Editor.ClientParameter);try{while($t.moveNext())cp=$t.Current,token=code.v.Syntax.GetTokenAt(cp.Start),cp.Start>=token.TextStart&&newCps.add(cp)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return newCps}return cps},GetOutlines:function(options,cancellationToken){cancellationToken===void 0&&(cancellationToken=new Kusto.Language.Utils.CancellationToken);var code={};if(this.TryGetBoundOrUnboundCode(cancellationToken,!0,code))try{return Kusto.Language.Editor.KustoOutliner.GetOutlines(code.v,options)}catch($e1){$e1=System.Exception.create($e1)}return Kusto.Language.Editor.CommonCodeService.prototype.GetOutlines.call(this,options,cancellationToken)},ShouldAutoComplete:function(position,key,cancellationToken){cancellationToken===void 0&&(cancellationToken=new Kusto.Language.Utils.CancellationToken);var code={};if(this.TryGetBoundOrUnboundCode(cancellationToken,!0,code)&&Kusto.Language.Editor.KustoCodeService.CanBeAnalyzed(code.v))try{return new Kusto.Language.Editor.KustoCompleter(code.v,Kusto.Language.Editor.CompletionOptions.Default,cancellationToken).ShouldAutoComplete(position,key)}catch($e1){$e1=System.Exception.create($e1)}return!1},GetCompletionItems:function(position,options,cancellationToken){options===void 0&&(options=null);cancellationToken===void 0&&(cancellationToken=new Kusto.Language.Utils.CancellationToken);var code={};if(this.TryGetBoundCode(cancellationToken,!0,code)&&Kusto.Language.Editor.KustoCodeService.CanBeAnalyzed(code.v))try{return new Kusto.Language.Editor.KustoCompleter(code.v,options||Kusto.Language.Editor.CompletionOptions.Default,cancellationToken).GetCompletionItems(position)}catch($e1){$e1=System.Exception.create($e1)}return Kusto.Language.Editor.CompletionInfo.Empty},GetQuickInfo:function(position,options,cancellationToken){options===void 0&&(options=null);cancellationToken===void 0&&(cancellationToken=new Kusto.Language.Utils.CancellationToken);var code={};if(this.TryGetBoundCode(cancellationToken,!0,code)&&Kusto.Language.Editor.KustoCodeService.CanBeAnalyzed(code.v))try{return new Kusto.Language.Editor.KustoQuickInfoBuilder(this,code.v,options||Kusto.Language.Editor.QuickInfoOptions.Default).GetQuickInfo(position,cancellationToken)}catch($e1){return $e1=System.Exception.create($e1),Kusto.Language.Editor.QuickInfo.Empty}else return this.codeException!=null?new Kusto.Language.Editor.QuickInfo.$ctor2(this.codeException.Message):Kusto.Language.Editor.QuickInfo.Empty},GetElement:function(position,cancellationToken){var code,token,prevToken,commentStart,commentLength;if(cancellationToken===void 0&&(cancellationToken=new Kusto.Language.Utils.CancellationToken),code={},this.TryGetBoundCode(cancellationToken,!0,code))try{return(token=code.v.Syntax.GetTokenAt(position),prevToken=token.GetPreviousToken(),position===token.TriviaStart&&(token.TriviaWidth>0||token.Kind===Kusto.Language.Syntax.SyntaxKind.EndOfTextToken)&&prevToken!=null&&(token=prevToken),(position>token.TriviaStart||position===token.TriviaStart&&prevToken==null)&&(position<token.TextStart||token.Kind===Kusto.Language.Syntax.SyntaxKind.EndOfTextToken))?(commentStart={},commentLength={},Kusto.Language.Parsing.TriviaFacts.TryGetCommentSpan(token.Trivia,position-token.TriviaStart|0,commentStart,commentLength)&&position<(commentStart.v+commentLength.v|0)?new Kusto.Language.Editor.TextRange.$ctor1(commentStart.v+token.TriviaStart|0,commentLength.v):new Kusto.Language.Editor.TextRange.$ctor1(position,0)):new Kusto.Language.Editor.TextRange.$ctor1(token.TextStart,token.Text.length)}catch($e1){$e1=System.Exception.create($e1)}return new Kusto.Language.Editor.TextRange.$ctor1(0,0)},GetRelatedElements:function(position,options,cancellationToken){options===void 0&&(options=0);cancellationToken===void 0&&(cancellationToken=new Kusto.Language.Utils.CancellationToken);var code={};if(this.TryGetBoundCode(cancellationToken,!0,code)&&Kusto.Language.Editor.KustoCodeService.CanBeAnalyzed(code.v))try{return new Kusto.Language.Editor.KustoRelatedElementFinder(code.v).FindRelatedElements(position,options)}catch($e1){$e1=System.Exception.create($e1)}return Kusto.Language.Editor.RelatedInfo.Empty},GetClusterReferences:function(cancellationToken){var code,clusters;if(cancellationToken===void 0&&(cancellationToken=new Kusto.Language.Utils.CancellationToken),code={},this.TryGetBoundCode(cancellationToken,!0,code)&&Kusto.Language.Editor.KustoCodeService.CanBeAnalyzed(code.v))try{return clusters=new(System.Collections.Generic.List$1(Kusto.Language.Editor.ClusterReference).ctor),code.v.HasSemantics&&this.GetClusterReferences$1(code.v.Syntax,null,clusters,cancellationToken),Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Editor.ClusterReference,clusters)}catch($e1){return $e1=System.Exception.create($e1),Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Editor.ClusterReference).Instance}else return Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Editor.ClusterReference).Instance},GetClusterReferences$1:function(root,location,clusters,cancellationToken){Kusto.Language.Syntax.SyntaxElement.WalkNodes(root,Bridge.fn.bind(this,function(element){var ex,fc,cluster,funFacts,calledBody;cancellationToken.ThrowIfCancellationRequested();(ex=Bridge.as(element,Kusto.Language.Syntax.Expression))!=null&&((fc=Bridge.as(element,Kusto.Language.Syntax.FunctionCallExpression))!=null&&Bridge.referenceEquals(ex.ReferencedSymbol,Kusto.Language.Functions.Cluster)?(cluster=Kusto.Language.Editor.KustoCodeService.GetClusterReference(fc,location),cluster!=null&&clusters.add(cluster)):(funFacts=ex.GetCalledFunctionFacts())!=null&&funFacts.HasClusterCall&&(calledBody=ex.GetCalledFunctionBody(),calledBody!=null&&this.GetClusterReferences$1(calledBody,location||Kusto.Language.Editor.KustoCodeService.GetBestFunctionCallLocation(ex),clusters,cancellationToken)))}),Bridge.fn.bind(this,function(node){var $t,alt;if(node.Alternates!=null){$t=Bridge.getEnumerator(node.Alternates,Kusto.Language.Syntax.SyntaxNode);try{while($t.moveNext())alt=$t.Current,this.GetClusterReferences$1(alt,location,clusters,cancellationToken)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}}),void 0)},GetDatabaseReferences:function(cancellationToken){var code,refs;if(cancellationToken===void 0&&(cancellationToken=new Kusto.Language.Utils.CancellationToken),code={},this.TryGetBoundCode(cancellationToken,!0,code)&&Kusto.Language.Editor.KustoCodeService.CanBeAnalyzed(code.v))try{return refs=new(System.Collections.Generic.List$1(Kusto.Language.Editor.DatabaseReference).ctor),code.v.HasSemantics&&this.GetDatabaseReferences$1(code.v.Syntax,null,this.globals.Cluster,this.globals.Database,refs,cancellationToken),refs}catch($e1){return $e1=System.Exception.create($e1),Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Editor.DatabaseReference).Instance}else return Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Editor.DatabaseReference).Instance},GetDatabaseReferences$1:function(root,location,defaultCluster,defaultDatabase,refs,cancellationToken){Kusto.Language.Syntax.SyntaxElement.WalkNodes(root,Bridge.fn.bind(this,function(node){var ex,fc,dbref,funFacts,calledBody,db,cluster;cancellationToken.ThrowIfCancellationRequested();(ex=Bridge.as(node,Kusto.Language.Syntax.Expression))!=null&&((fc=Bridge.as(ex,Kusto.Language.Syntax.FunctionCallExpression))!=null&&Bridge.referenceEquals(ex.ReferencedSymbol,Kusto.Language.Functions.Database)?(dbref=this.GetDatabaseReference(fc,location,defaultCluster),dbref!=null&&refs.add(dbref)):(funFacts=ex.GetCalledFunctionFacts())!=null&&funFacts.HasDatabaseCall&&(calledBody=ex.GetCalledFunctionBody(),calledBody!=null&&(db=this.globals.GetDatabase$2(ex.ReferencedSymbol)||defaultDatabase,cluster=this.globals.GetCluster(db)||defaultCluster,this.GetDatabaseReferences$1(calledBody,location||Kusto.Language.Editor.KustoCodeService.GetBestFunctionCallLocation(ex),cluster,db,refs,cancellationToken))))}),Bridge.fn.bind(this,function(node){var $t,alternate;if(node.Alternates!=null){$t=Bridge.getEnumerator(node.Alternates,Kusto.Language.Syntax.SyntaxNode);try{while($t.moveNext())alternate=$t.Current,this.GetDatabaseReferences$1(alternate,location,defaultCluster,defaultDatabase,refs,cancellationToken)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}}),void 0)},GetDatabaseReference:function(fc,location,defaultCluster){var $t,databaseName={},clusterName,p,cs;return Bridge.referenceEquals(fc.ReferencedSymbol,Kusto.Language.Functions.Database)&&Kusto.Language.Editor.KustoCodeService.TryGetConstantStringArgumentValue(fc,0,databaseName)?(location=location||fc.ArgumentList.Expressions.getItem$1(0).Element$1,clusterName=(p=Bridge.as(fc.Parent,Kusto.Language.Syntax.PathExpression))!=null&&Bridge.referenceEquals(p.Selector,fc)&&(cs=Bridge.as(p.Expression.ResultType,Kusto.Language.Symbols.ClusterSymbol))!=null?cs.Name:($t=defaultCluster!=null?defaultCluster.Name:null,$t!=null?$t:this.globals.Cluster.Name),new Kusto.Language.Editor.DatabaseReference(databaseName.v,clusterName,location.GetPositionInOriginalTree(location.TextStart),location.Width)):null},GetMinimalText:function(kind,cancellationToken){cancellationToken===void 0&&(cancellationToken=new Kusto.Language.Utils.CancellationToken);var code={};return this.TryGetBoundOrUnboundCode(cancellationToken,!0,code)?code.v.Syntax.ToString(Kusto.Language.Editor.KustoCodeService.GetIncludeTrivia(kind)):this.Text},GetFormattedText:function(options,caretPosition,cancellationToken){options===void 0&&(options=null);caretPosition===void 0&&(caretPosition=0);cancellationToken===void 0&&(cancellationToken=new Kusto.Language.Utils.CancellationToken);var code={};return this.TryGetBoundOrUnboundCode(cancellationToken,!0,code)&&Kusto.Language.Editor.KustoCodeService.CanBeAnalyzed(code.v)?Kusto.Language.Editor.KustoFormatter.GetFormattedText(code.v.Syntax,options,caretPosition):new Kusto.Language.Editor.FormattedText(this.Text,caretPosition)}}});Bridge.define("Kusto.Language.Editor.MultiAction",{inherits:[Kusto.Language.Editor.ApplyAction],props:{Actions:null},ctors:{$ctor1:function(kind,title,description,data,actions){this.$initialize();Kusto.Language.Editor.ApplyAction.ctor.call(this,kind,title,description,data);this.Actions=actions||Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Editor.ApplyAction).Instance},ctor:function(kind,title,description,actions){Kusto.Language.Editor.MultiAction.$ctor1.call(this,kind,title,description,null,actions)}},methods:{New$1:function(kind,title,description,data){return new Kusto.Language.Editor.MultiAction.$ctor1(kind,title,description,data,this.Actions)}}});Bridge.define("Kusto.Language.Editor.SingleAction",{inherits:[Kusto.Language.Editor.ApplyAction],ctors:{ctor:function(kind,title,description,data){data===void 0&&(data=null);this.$initialize();Kusto.Language.Editor.ApplyAction.ctor.call(this,kind,title,description,data)}},methods:{New$1:function(kind,title,description,data){return new Kusto.Language.Editor.SingleAction(kind,title,description,data)}}});Bridge.define("Kusto.Language.Editor.UnknownCodeService",{inherits:[Kusto.Language.Editor.CommonCodeService],props:{Kind:{get:function(){return"Unknown"}}},ctors:{ctor:function(text){this.$initialize();Kusto.Language.Editor.CommonCodeService.ctor.call(this,text)}}});Bridge.define("Kusto.Language.Parsing.ListPrimaryParser$2",function(TInput,TOutput){return{inherits:[Kusto.Language.Parsing.Parser$2(TInput,TOutput)],statics:{fields:{s_outputListPool:null},ctors:{init:function(){this.s_outputListPool=new(Kusto.Language.Utils.ObjectPool$1(System.Collections.Generic.List$1(System.Object)))(function(){return new(System.Collections.Generic.List$1(System.Object).ctor)},function(list){list.clear()},50)}}},methods:{Parse$1:function(source,start){var list=Kusto.Language.Parsing.ListPrimaryParser$2(TInput,TOutput).s_outputListPool.AllocateFromPool(),n;try{return n=this.Parse(source,start,list,0),new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(n,n>=0&&list.Count>0?Bridge.cast(Bridge.unbox(list.getItem(0),TOutput),TOutput):Bridge.getDefaultValue(TOutput))}finally{Kusto.Language.Parsing.ListPrimaryParser$2(TInput,TOutput).s_outputListPool.ReturnToPool(list)}}}}});Bridge.define("Kusto.Language.Parsing.BestParser$2",function(TInput,TOutput){return{inherits:[Kusto.Language.Parsing.Parser$2(TInput,TOutput)],fields:{_parsers:null,_fnIsBetter:null},props:{Parsers:{get:function(){return this._parsers}},IsBetter:{get:function(){return this._fnIsBetter}},IsAlternation:{get:function(){return!0}},ChildParserCount:{get:function(){return this._parsers.length}}},ctors:{ctor:function(parsers,fnIsBetter){fnIsBetter===void 0&&(fnIsBetter=null);var $t;this.$initialize();Kusto.Language.Parsing.Parser$2(TInput,TOutput).ctor.call(this);this._parsers=($t=Kusto.Language.Parsing.Parser$2(TInput,TOutput),System.Linq.Enumerable.from(parsers,$t).ToArray($t));this._fnIsBetter=fnIsBetter}},methods:{GetChildParser:function(index){return index>=0&&index<this._parsers.length?this._parsers[System.Array.index(index,this._parsers)]:null},Accept$2:function(visitor){visitor.VisitBest$1(TOutput,this)},Accept:function(TResult,visitor){return visitor.VisitBest$1(TOutput,this)},Accept$1:function(TArg,TResult,visitor,arg){return visitor.VisitBest$1(TOutput,this,arg)},Clone:function(){return new(Kusto.Language.Parsing.BestParser$2(TInput,TOutput))(this.Parsers)},Parse$1:function(source,start){for(var parser,length,bestP,bestV,i1,otherV,result,minLength=-1,maxLength=-1,bestParser=-1,candidates=null,i=0;i<this._parsers.length;i=i+1|0)parser=this._parsers[System.Array.index(i,this._parsers)],length=parser.Scan(source,start),length>maxLength?(maxLength=length,bestParser=i,candidates!=null&&candidates.clear()):length===maxLength&&bestParser>=0&&!Bridge.staticEquals(this._fnIsBetter,null)?(candidates==null&&(candidates=new(System.Collections.Generic.List$1(Kusto.Language.Parsing.Parser$2(TInput,TOutput)).ctor)),candidates.add(this._parsers[System.Array.index(i,this._parsers)])):length<minLength&&(minLength=length);if(maxLength>=0)if(bestP=this._parsers[System.Array.index(bestParser,this._parsers)],candidates!=null&&candidates.Count>0){for(bestV=bestP.Parse$1(source,start).Value,i1=0;i1<candidates.Count;i1=i1+1|0)otherV=candidates.getItem(i1).Parse$1(source,start).Value,this._fnIsBetter(otherV,bestV)&&(bestV=otherV);return new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(maxLength,bestV)}else return result=bestP.Parse$1(source,start),new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(maxLength,result.Value);else return new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(minLength,Bridge.getDefaultValue(TOutput))},Parse:function(source,inputStart,output,outputStart){for(var parser,length,bestP,bestV,i1,otherV,minLength=-1,maxLength=-1,bestParser=-1,candidates=null,i=0;i<this._parsers.length;i=i+1|0)parser=this._parsers[System.Array.index(i,this._parsers)],length=parser.Scan(source,inputStart),length>maxLength?(maxLength=length,bestParser=i,candidates!=null&&candidates.clear()):length===maxLength&&bestParser>=0&&!Bridge.staticEquals(this._fnIsBetter,null)?(candidates==null&&(candidates=new(System.Collections.Generic.List$1(Kusto.Language.Parsing.Parser$2(TInput,TOutput)).ctor)),candidates.add(this._parsers[System.Array.index(i,this._parsers)])):length<minLength&&(minLength=length);if(maxLength>=0)if(bestP=this._parsers[System.Array.index(bestParser,this._parsers)],candidates!=null&&candidates.Count>0){for(bestP.Parse(source,inputStart,output,outputStart),bestV=Bridge.cast(Bridge.unbox(output.getItem(outputStart),TOutput),TOutput),Kusto.Language.Utils.ListExtensions.SetCount(System.Object,output,outputStart),i1=0;i1<candidates.Count;i1=i1+1|0)candidates.getItem(i1).Parse(source,inputStart,output,outputStart),otherV=Bridge.cast(Bridge.unbox(output.getItem(outputStart),TOutput),TOutput),Kusto.Language.Utils.ListExtensions.SetCount(System.Object,output,outputStart),this._fnIsBetter(otherV,bestV)&&(bestV=otherV);output.add(bestV)}else bestP.Parse(source,inputStart,output,outputStart);return maxLength},Scan:function(source,start){for(var parser,n,max=-1,min=-1,i=0;i<this._parsers.length;i=i+1|0)parser=this._parsers[System.Array.index(i,this._parsers)],n=parser.Scan(source,start),n>max?max=n:n<min&&(min=n);return max>=0?max:min}}}});Bridge.define("Kusto.Language.Parsing.ResultPrimaryParser$2",function(TInput,TOutput){return{inherits:[Kusto.Language.Parsing.Parser$2(TInput,TOutput)],methods:{Parse:function(source,inputStart,output,outputStart){var result=this.Parse$1(source,inputStart);return result.Length>=0&&output.add(result.Value),result.Length}}}});Bridge.define("Kusto.Language.Parsing.FirstParser$2",function(TInput,TOutput){return{inherits:[Kusto.Language.Parsing.Parser$2(TInput,TOutput)],fields:{_parsers:null},props:{Parsers:{get:function(){return this._parsers}},IsAlternation:{get:function(){return!0}},ChildParserCount:{get:function(){return this._parsers.length}}},ctors:{ctor:function(parsers){var $t;this.$initialize();Kusto.Language.Parsing.Parser$2(TInput,TOutput).ctor.call(this);this._parsers=($t=Kusto.Language.Parsing.Parser$2(TInput,TOutput),System.Linq.Enumerable.from(parsers,$t).ToArray($t))}},methods:{GetChildParser:function(index){return index>=0&&index<this._parsers.length?this._parsers[System.Array.index(index,this._parsers)]:null},Accept$2:function(visitor){visitor.VisitFirst$1(TOutput,this)},Accept:function(TResult,visitor){return visitor.VisitFirst$1(TOutput,this)},Accept$1:function(TArg,TResult,visitor,arg){return visitor.VisitFirst$1(TOutput,this,arg)},Clone:function(){return new(Kusto.Language.Parsing.FirstParser$2(TInput,TOutput))(this.Parsers)},Parse$1:function(source,start){for(var parser,result,minLength=-1,i=0;i<this._parsers.length;i=i+1|0){if(parser=this._parsers[System.Array.index(i,this._parsers)],result=parser.Parse$1(source,start),result.Length>=0)return result;result.Length<minLength&&(minLength=result.Length)}return new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(minLength,Bridge.getDefaultValue(TOutput))},Parse:function(source,inputStart,output,outputStart){for(var parser,length,minLength=-1,originalOutputCount=output.Count,i=0;i<this._parsers.length;i=i+1|0){if(parser=this._parsers[System.Array.index(i,this._parsers)],Kusto.Language.Utils.ListExtensions.SetCount(System.Object,output,originalOutputCount),length=parser.Parse(source,inputStart,output,outputStart),length>=0)return length;length<minLength&&(minLength=length)}return minLength},Scan:function(source,start){for(var parser,n,minLength=-1,i=0;i<this._parsers.length;i=i+1|0){if(parser=this._parsers[System.Array.index(i,this._parsers)],n=parser.Scan(source,start),n>=0)return n;n<minLength&&(minLength=n)}return minLength}}}});Bridge.define("Kusto.Language.Parsing.IfParser$2",function(TInput,TOutput){return{inherits:[Kusto.Language.Parsing.Parser$2(TInput,TOutput)],props:{Test:null,Parser:null,IsConditional:{get:function(){return!0}},ChildParserCount:{get:function(){return 2}}},ctors:{ctor:function(test,parser){this.$initialize();Kusto.Language.Parsing.Parser$2(TInput,TOutput).ctor.call(this);this.Test=test;this.Parser=parser}},methods:{GetChildParser:function(index){switch(index){case 0:return this.Test;case 1:return this.Parser;default:return null}},Accept$2:function(visitor){visitor.VisitIf$1(TOutput,this)},Accept:function(TResult,visitor){return visitor.VisitIf$1(TOutput,this)},Accept$1:function(TArg,TResult,visitor,arg){return visitor.VisitIf$1(TOutput,this,arg)},Clone:function(){return new(Kusto.Language.Parsing.IfParser$2(TInput,TOutput))(this.Test,this.Parser)},Parse$1:function(source,start){var length=this.Test.Scan(source,start);return length<0?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(length,Bridge.getDefaultValue(TOutput)):this.Parser.Parse$1(source,start)},Parse:function(source,inputStart,output,outputStart){var length=this.Test.Scan(source,inputStart);return length<0?length:this.Parser.Parse(source,inputStart,output,outputStart)},Scan:function(source,start){var length=this.Test.Scan(source,start);return length<0?length:this.Parser.Scan(source,start)}}}});Bridge.define("Kusto.Language.Parsing.IsParentVisitor",{inherits:[Kusto.Language.Parsing.ParserVisitor$3(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken),System.Boolean)],statics:{fields:{Instance:null},ctors:{init:function(){this.Instance=new Kusto.Language.Parsing.IsParentVisitor}}},methods:{VisitApply:function(TLeft,TOutput,parser,child){return Bridge.referenceEquals(parser.LeftParser,child)||Bridge.referenceEquals(parser.RightParser,child)},VisitBest$1:function(TOutput,parser,child){return System.Linq.Enumerable.from(parser.Parsers,Kusto.Language.Parsing.Parser$2(Kusto.Language.Parsing.LexicalToken,TOutput)).any(function(p){return Bridge.referenceEquals(p,child)})},VisitBest:function(parser,child){return System.Linq.Enumerable.from(parser.Parsers,Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)).any(function(p){return Bridge.referenceEquals(p,child)})},VisitConvert:function(TOutput,parser,child){return Bridge.referenceEquals(parser.Pattern,child)},VisitFails:function(parser,child){return!Bridge.referenceEquals(parser.Pattern,child)},VisitFirst$1:function(TOutput,parser,child){return System.Linq.Enumerable.from(parser.Parsers,Kusto.Language.Parsing.Parser$2(Kusto.Language.Parsing.LexicalToken,TOutput)).any(function(p){return Bridge.referenceEquals(p,child)})},VisitFirst:function(parser,child){return System.Linq.Enumerable.from(parser.Parsers,Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)).any(function(p){return Bridge.referenceEquals(p,child)})},VisitForward:function(TOutput,parser,child){return Bridge.referenceEquals(parser.DeferredParser(),child)},VisitIf$1:function(TOutput,parser,child){return Bridge.referenceEquals(parser.Test,child)||Bridge.referenceEquals(parser.Parser,child)},VisitIf:function(parser,child){return Bridge.referenceEquals(parser.Test,child)||Bridge.referenceEquals(parser.Parser,child)},VisitMap:function(TOutput,parser,child){return!1},VisitMatch:function(parser,child){return!1},VisitMatch$1:function(TOutput,parser,child){return!1},VisitNot:function(parser,child){return Bridge.referenceEquals(parser.Pattern,child)},VisitOneOrMore:function(parser,child){return Bridge.referenceEquals(parser.Parser,child)},VisitOptional:function(TOutput,parser,child){return Bridge.referenceEquals(parser.Parser,child)},VisitProduce:function(TOutput,parser,child){return Bridge.referenceEquals(parser.Parser,child)},VisitRequired:function(TOutput,parser,child){return Bridge.referenceEquals(parser.Parser,child)},VisitRule:function(TOutput,parser,child){return System.Linq.Enumerable.from(parser.Parsers,Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)).any(function(p){return Bridge.referenceEquals(p,child)})},VisitSequence:function(parser,child){return System.Linq.Enumerable.from(parser.Parsers,Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)).any(function(p){return Bridge.referenceEquals(p,child)})},VisitZeroOrMore:function(parser,child){return Bridge.referenceEquals(parser.Parser,child)},VisitLimit:function(TOutput,parser,child){return Bridge.referenceEquals(parser.Limiter,child)||Bridge.referenceEquals(parser.Limited,child)}}});Bridge.define("Kusto.Language.Parsing.LimitParser$2",function(TInput,TOutput){return{inherits:[Kusto.Language.Parsing.Parser$2(TInput,TOutput)],fields:{Limiter:null,Limited:null},props:{IsConditional:{get:function(){return!0}},ChildParserCount:{get:function(){return 2}}},ctors:{ctor:function(limiter,limited){this.$initialize();Kusto.Language.Parsing.Parser$2(TInput,TOutput).ctor.call(this);this.Limiter=limiter;this.Limited=limited}},methods:{GetChildParser:function(index){switch(index){case 0:return this.Limiter;case 1:return this.Limited;default:return null}},Accept$2:function(visitor){visitor.VisitLimit(TOutput,this)},Accept:function(TResult,visitor){return visitor.VisitLimit(TOutput,this)},Accept$1:function(TArg,TResult,visitor,arg){return visitor.VisitLimit(TOutput,this,arg)},Parse$1:function(input,inputStart){var len=this.Limiter.Scan(input,inputStart),limitSource;return len>0?(limitSource=new(Kusto.Language.Parsing.LimitSource$1(TInput))(input,inputStart+len|0),this.Limited.Parse$1(limitSource,inputStart)):new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(-1,Bridge.getDefaultValue(TOutput))},Parse:function(input,inputStart,output,outputStart){var len=this.Limiter.Scan(input,inputStart),limitSource;return len>0?(limitSource=new(Kusto.Language.Parsing.LimitSource$1(TInput))(input,inputStart+len|0),this.Limited.Parse(limitSource,inputStart,output,outputStart)):-1},Scan:function(input,inputStart){var len=this.Limiter.Scan(input,inputStart),limitSource;return len>0?(limitSource=new(Kusto.Language.Parsing.LimitSource$1(TInput))(input,inputStart+len|0),this.Limited.Scan(limitSource,inputStart)):-1},Clone:function(){return new(Kusto.Language.Parsing.LimitParser$2(TInput,TOutput))(this.Limiter,this.Limited)}}}});Bridge.define("Kusto.Language.Parsing.MapParser$2.Node",function(TInput,TOutput){return{$kind:"nested class",statics:{methods:{From:function(keyValuePairs){var $t,node=new(Kusto.Language.Parsing.MapParser$2.Node(TInput,TOutput)),pair;$t=Bridge.getEnumerator(keyValuePairs,System.Collections.Generic.KeyValuePair$2(System.Collections.Generic.IEnumerable$1(TInput),Function));try{while($t.moveNext())pair=$t.Current,node.Add(pair.key,0,pair.value)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return node}}},fields:{map:null},props:{HasValue:!1,Value:null},ctors:{ctor:function(){this.$initialize()}},methods:{Add:function(sequence,pos,value){var $t,node=this,item,subNode;$t=Bridge.getEnumerator(sequence,TInput);try{while($t.moveNext())item=$t.Current,node.map==null&&(node.map=new(System.Collections.Generic.Dictionary$2(TInput,Kusto.Language.Parsing.MapParser$2.Node(TInput,TOutput)).ctor)),subNode={},node.map.tryGetValue(item,subNode)||(subNode.v=new(Kusto.Language.Parsing.MapParser$2.Node(TInput,TOutput)),node.map.add(item,subNode.v)),node=subNode.v}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}node.HasValue=!0;node.Value=value},TryGetValueNode:function(key,node){return this.map!=null?this.map.tryGetValue(key,node):(node.v=null,!1)}}}});Bridge.define("Kusto.Language.Parsing.MatchParser$2",function(TInput,TOutput){return{inherits:[Kusto.Language.Parsing.Parser$2(TInput,TOutput)],props:{Consumer:null,Producer:null,IsMatch:{get:function(){return!0}},ChildParserCount:{get:function(){return 0}}},ctors:{ctor:function(consumer,producer){this.$initialize();Kusto.Language.Parsing.Parser$2(TInput,TOutput).ctor.call(this);this.Consumer=consumer;this.Producer=producer},$ctor1:function(predicate,producer){Kusto.Language.Parsing.MatchParser$2(TInput,TOutput).ctor.call(this,function(source,start){return!source.IsEnd(start)&&predicate(source.Peek(start))?1:-1},function(source,start,length){return producer(source.Peek(start))})}},methods:{GetChildParser:function(index){return null},Clone:function(){return new(Kusto.Language.Parsing.MatchParser$2(TInput,TOutput).ctor)(this.Consumer,this.Producer)},Accept$2:function(visitor){visitor.VisitMatch$1(TOutput,this)},Accept:function(TResult,visitor){return visitor.VisitMatch$1(TOutput,this)},Accept$1:function(TArg,TResult,visitor,arg){return visitor.VisitMatch$1(TOutput,this,arg)},Scan:function(source,start){return this.Consumer(source,start)},Parse:function(source,inputStart,output,outputStart){var length=this.Consumer(source,inputStart),value;return length>=0&&(value=this.Producer(source,inputStart,length),output.add(value)),length},Parse$1:function(source,start){var length,value;return(start===void 0&&(start=0),length=this.Consumer(source,start),length>0)?(value=this.Producer(source,start,length),new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(length,value)):new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(length,Bridge.getDefaultValue(TOutput))}}}});Bridge.define("Kusto.Language.Parsing.OptionalParser$2",function(TInput,TOutput){return{inherits:[Kusto.Language.Parsing.Parser$2(TInput,TOutput)],props:{Parser:null,Producer:null,IsOptional:{get:function(){return!0}},ChildParserCount:{get:function(){return 1}}},ctors:{ctor:function(parser,producer){this.$initialize();Kusto.Language.Parsing.Parser$2(TInput,TOutput).ctor.call(this);this.Parser=parser;this.Producer=producer}},methods:{GetChildParser:function(index){return index===0?this.Parser:null},Accept$2:function(visitor){visitor.VisitOptional(TOutput,this)},Accept:function(TResult,visitor){return visitor.VisitOptional(TOutput,this)},Accept$1:function(TArg,TResult,visitor,arg){return visitor.VisitOptional(TOutput,this,arg)},Clone:function(){return new(Kusto.Language.Parsing.OptionalParser$2(TInput,TOutput))(this.Parser,this.Producer)},Parse$1:function(source,start){var result=this.Parser.Parse$1(source,start);return result.Length<0?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(0,this.Producer()):result},Parse:function(source,inputStart,output,outputStart){var originalOutputCount=output.Count,length=this.Parser.Parse(source,inputStart,output,output.Count);return length<0||output.Count===originalOutputCount?(Kusto.Language.Utils.ListExtensions.SetCount(System.Object,output,originalOutputCount),output.add(this.Producer()),0):length},Scan:function(source,start){var n=this.Parser.Scan(source,start);return n<0?0:n}}}});Bridge.define("Kusto.Language.Parsing.RequiredParser$2",function(TInput,TOutput){return{inherits:[Kusto.Language.Parsing.Parser$2(TInput,TOutput)],props:{Parser:null,Producer:null,IsRequired:{get:function(){return!0}},ChildParserCount:{get:function(){return 1}}},ctors:{ctor:function(parser,producer){this.$initialize();Kusto.Language.Parsing.Parser$2(TInput,TOutput).ctor.call(this);this.Parser=parser;this.Producer=producer}},methods:{GetChildParser:function(index){return index===0?this.Parser:null},Accept$2:function(visitor){visitor.VisitRequired(TOutput,this)},Accept:function(TResult,visitor){return visitor.VisitRequired(TOutput,this)},Accept$1:function(TArg,TResult,visitor,arg){return visitor.VisitRequired(TOutput,this,arg)},Clone:function(){return new(Kusto.Language.Parsing.RequiredParser$2(TInput,TOutput))(this.Parser,this.Producer)},Parse$1:function(source,start){var result=this.Parser.Parse$1(source,start);return result.Length<0?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(0,this.Producer(source,start)):result},Parse:function(source,inputStart,output,outputStart){var originalOutputCount=output.Count,length=this.Parser.Parse(source,inputStart,output,output.Count);return length<0||output.Count===originalOutputCount?(Kusto.Language.Utils.ListExtensions.SetCount(System.Object,output,originalOutputCount),output.add(this.Producer(source,inputStart)),0):length},Scan:function(source,start){var len=this.Parser.Scan(source,start);return len<0?0:len}}}});Bridge.define("Kusto.Language.Symbols.ClusterSymbol",{inherits:[Kusto.Language.Symbols.TypeSymbol],statics:{fields:{Unknown:null},ctors:{init:function(){this.Unknown=new Kusto.Language.Symbols.ClusterSymbol.$ctor2("",null,!0)}}},fields:{_members:null,_databases:null,_nameToDatabaseMap:null},props:{IsOpen:!1,Members:{get:function(){return this._members}},Kind:{get:function(){return Kusto.Language.Symbols.SymbolKind.Cluster}},Tabularity:{get:function(){return Kusto.Language.Symbols.Tabularity.Tabular}},Databases:{get:function(){return this._databases==null&&(this._databases=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Symbols.DatabaseSymbol,System.Linq.Enumerable.from(this._members).ofType(Kusto.Language.Symbols.DatabaseSymbol))),this._databases}}},ctors:{$ctor2:function(name,members,isOpen){isOpen===void 0&&(isOpen=!1);this.$initialize();Kusto.Language.Symbols.TypeSymbol.ctor.call(this,name);this._members=Kusto.Language.Utils.ListExtensions.ToSafeList(Kusto.Language.Symbols.Symbol,members);Kusto.Language.Utils.ArgumentCheckers.CheckArgumentNullOrElementNull(Kusto.Language.Symbols.Symbol,this._members,"members");this.IsOpen=isOpen},$ctor1:function(name,databases,isOpen){isOpen===void 0&&(isOpen=!1);Kusto.Language.Symbols.ClusterSymbol.$ctor2.call(this,name,Bridge.cast(databases,System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.Symbol)),isOpen)},ctor:function(name,databases){databases===void 0&&(databases=[]);Kusto.Language.Symbols.ClusterSymbol.$ctor1.call(this,name,databases,!1)}},methods:{AddMembers$1:function(members){var newMembers=System.Linq.Enumerable.from(this._members,Kusto.Language.Symbols.Symbol).concat(members);return new Kusto.Language.Symbols.ClusterSymbol.$ctor2(this.Name,newMembers,this.IsOpen)},AddMembers:function(members){return members===void 0&&(members=[]),this.AddMembers$1(Bridge.cast(members,System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.Symbol)))},GetDatabase:function(databaseName){var $t,tmp,db,databaseSymbol;if(System.String.isNullOrEmpty(databaseName))return null;if(this._nameToDatabaseMap==null){tmp=new(System.Collections.Generic.Dictionary$2(System.String,Kusto.Language.Symbols.DatabaseSymbol).ctor);$t=Bridge.getEnumerator(this.Databases,Kusto.Language.Symbols.DatabaseSymbol);try{while($t.moveNext())db=$t.Current,tmp.setItem(db.Name,db),System.String.isNullOrEmpty(db.AlternateName)||tmp.setItem(db.AlternateName,db)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}Kusto.Language.Utils.Interlocked.CompareExchange(System.Collections.Generic.Dictionary$2(System.String,Kusto.Language.Symbols.DatabaseSymbol),Bridge.ref(this,"_nameToDatabaseMap"),tmp,null)}return databaseSymbol={},this._nameToDatabaseMap.tryGetValue(databaseName,databaseSymbol),databaseSymbol.v},WithDatabases:function(databases){return new Kusto.Language.Symbols.ClusterSymbol.$ctor1(this.Name,databases,this.IsOpen)},AddDatabase:function(database){var newMembers=this._members.AddItem(database);return new Kusto.Language.Symbols.ClusterSymbol.$ctor2(this.Name,newMembers,this.IsOpen)},UpdateDatabase:function(existingDatabase,newDatabase){var newMembers=System.Linq.Enumerable.from(this._members,Kusto.Language.Symbols.Symbol).select(function(d){return Bridge.referenceEquals(d,existingDatabase)?newDatabase:d});return new Kusto.Language.Symbols.ClusterSymbol.$ctor2(this.Name,newMembers,this.IsOpen)},AddOrUpdateDatabase:function(newDatabase){var existingDatabase=this.GetDatabase(newDatabase.Name);return existingDatabase!=null?this.UpdateDatabase(existingDatabase,newDatabase):this.AddDatabase(newDatabase)},RemoveDatabase:function(symbolToRemove){var newMembers=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Symbols.Symbol,System.Linq.Enumerable.from(this._members,Kusto.Language.Symbols.Symbol).where(function(m){return!Bridge.referenceEquals(m,symbolToRemove)}));return new Kusto.Language.Symbols.ClusterSymbol.$ctor2(this.Name,newMembers,this.IsOpen)},RemoveDatabases:function(symbolsToRemove){var newMembers=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Symbols.Symbol,System.Linq.Enumerable.from(this._members,Kusto.Language.Symbols.Symbol).except(symbolsToRemove));return new Kusto.Language.Symbols.ClusterSymbol.$ctor2(this.Name,newMembers,this.IsOpen)}}});Bridge.define("Kusto.Language.Symbols.DatabaseSymbol",{inherits:[Kusto.Language.Symbols.TypeSymbol],statics:{fields:{Unknown:null},ctors:{init:function(){this.Unknown=new Kusto.Language.Symbols.DatabaseSymbol.$ctor1("",null,!0)}}},fields:{_alternateName:null,_members:null,_tables:null,_externalTables:null,_materializedViews:null,_functions:null,_entityGroups:null,_symbolSet:null},props:{IsOpen:!1,AlternateName:{get:function(){return this._alternateName}},Kind:{get:function(){return Kusto.Language.Symbols.SymbolKind.Database}},Tabularity:{get:function(){return Kusto.Language.Symbols.Tabularity.Tabular}},Members:{get:function(){return this._members}},Tables:{get:function(){return this._tables==null&&(this._tables=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Symbols.TableSymbol,System.Linq.Enumerable.from(this.Members).ofType(Kusto.Language.Symbols.TableSymbol).where(function(ts){return!ts.IsExternal&&!ts.IsMaterializedView}))),this._tables}},ExternalTables:{get:function(){return this._externalTables==null&&(this._externalTables=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Symbols.ExternalTableSymbol,System.Linq.Enumerable.from(this.Members).ofType(Kusto.Language.Symbols.ExternalTableSymbol))),this._externalTables}},MaterializedViews:{get:function(){return this._materializedViews==null&&(this._materializedViews=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Symbols.MaterializedViewSymbol,System.Linq.Enumerable.from(this.Members).ofType(Kusto.Language.Symbols.MaterializedViewSymbol))),this._materializedViews}},Functions:{get:function(){return this._functions==null&&(this._functions=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Symbols.FunctionSymbol,System.Linq.Enumerable.from(this.Members).ofType(Kusto.Language.Symbols.FunctionSymbol))),this._functions}},EntityGroups:{get:function(){return this._entityGroups==null&&(this._entityGroups=Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Symbols.EntityGroupSymbol,System.Linq.Enumerable.from(this.Members).ofType(Kusto.Language.Symbols.EntityGroupSymbol))),this._entityGroups}}},ctors:{$ctor3:function(name,alternateName,members,isOpen){isOpen===void 0&&(isOpen=!1);var $t;this.$initialize();Kusto.Language.Symbols.TypeSymbol.ctor.call(this,name);this._alternateName=($t=alternateName,$t!=null?$t:"");this._members=Kusto.Language.Utils.ArgumentCheckers.CheckArgumentNullOrElementNull(Kusto.Language.Symbols.Symbol,Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Symbols.Symbol,members),"members");this.IsOpen=isOpen},$ctor1:function(name,members,isOpen){isOpen===void 0&&(isOpen=!1);Kusto.Language.Symbols.DatabaseSymbol.$ctor3.call(this,name,null,members,isOpen)},$ctor2:function(name,alternateName,members){members===void 0&&(members=[]);Kusto.Language.Symbols.DatabaseSymbol.$ctor3.call(this,name,alternateName,Bridge.cast(members,System.Collections.Generic.IEnumerable$1(Kusto.Language.Symbols.Symbol)))},ctor:function(name,members){members===void 0&&(members=[]);Kusto.Language.Symbols.DatabaseSymbol.$ctor1.call(this,name,Bridge.cast(members,System.Collections.Generic.IEnumerable$1(Kusto.Language.Symbols.Symbol)))}},methods:{GetMember:function(name){return System.Linq.Enumerable.from(this._members,Kusto.Language.Symbols.Symbol).firstOrDefault(function(m){return Bridge.referenceEquals(m.Name,name)},null)},GetTable:function(name){return System.Linq.Enumerable.from(this.Tables,Kusto.Language.Symbols.TableSymbol).firstOrDefault(function(t){return Bridge.referenceEquals(t.Name,name)},null)},GetAnyTable:function(name){return this.GetTable(name)||this.GetExternalTable(name)||this.GetMaterializedView(name)},GetExternalTable:function(name){return System.Linq.Enumerable.from(this.ExternalTables,Kusto.Language.Symbols.ExternalTableSymbol).firstOrDefault(function(t){return Bridge.referenceEquals(t.Name,name)},null)},GetMaterializedView:function(name){return System.Linq.Enumerable.from(this.MaterializedViews,Kusto.Language.Symbols.MaterializedViewSymbol).firstOrDefault(function(t){return Bridge.referenceEquals(t.Name,name)},null)},GetFunction:function(name){return System.Linq.Enumerable.from(this.Functions,Kusto.Language.Symbols.FunctionSymbol).firstOrDefault(function(f){return Bridge.referenceEquals(f.Name,name)},null)},GetEntityGroup:function(name){return System.Linq.Enumerable.from(this.EntityGroups,Kusto.Language.Symbols.EntityGroupSymbol).firstOrDefault(function(eg){return Bridge.referenceEquals(eg.Name,name)},null)},WithAlternateName:function(alternateName){return Bridge.referenceEquals(this.AlternateName,alternateName)?this:new Kusto.Language.Symbols.DatabaseSymbol.$ctor3(this.Name,alternateName,this.Members,this.IsOpen)},WithMembers:function(members){return new Kusto.Language.Symbols.DatabaseSymbol.$ctor3(this.Name,this.AlternateName,members,this.IsOpen)},AddMembers$1:function(symbols){return new Kusto.Language.Symbols.DatabaseSymbol.$ctor3(this.Name,this.AlternateName,System.Linq.Enumerable.from(this.Members,Kusto.Language.Symbols.Symbol).concat(symbols),this.IsOpen)},AddMembers:function(symbols){return symbols===void 0&&(symbols=[]),this.AddMembers$1(Bridge.cast(symbols,System.Collections.Generic.IEnumerable$1(Kusto.Language.Symbols.Symbol)))},Contains:function(symbol){var $t,member;if(this._symbolSet==null){this._symbolSet=new(System.Collections.Generic.HashSet$1(Kusto.Language.Symbols.Symbol).ctor);$t=Bridge.getEnumerator(this.Members,Kusto.Language.Symbols.Symbol);try{while($t.moveNext())member=$t.Current,this._symbolSet.add(symbol)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}return this._symbolSet.contains(symbol)}}});Bridge.define("Kusto.Language.Symbols.ScalarSymbol",{inherits:[Kusto.Language.Symbols.TypeSymbol],statics:{fields:{None:null},ctors:{init:function(){this.None=System.Array.init([],System.String)}},methods:{From:function(typeName){return Kusto.Language.Symbols.ScalarTypes.GetSymbol(typeName)}}},props:{Tabularity:{get:function(){return Kusto.Language.Symbols.Tabularity.Scalar}},Aliases:{get:function(){return Kusto.Language.Symbols.ScalarSymbol.None}},IsInteger:{get:function(){return!1}},IsNumeric:{get:function(){return!1}},IsInterval:{get:function(){return!1}},IsSummable:{get:function(){return!1}},IsOrderable:{get:function(){return!1}},IsMultiValue:{get:function(){return!1}}},ctors:{ctor:function(name){this.$initialize();Kusto.Language.Symbols.TypeSymbol.ctor.call(this,name)}},methods:{IsWiderThan:function(scalar){return!1}}});Bridge.define("Kusto.Language.Symbols.EntityGroupElementSymbol",{inherits:[Kusto.Language.Symbols.TypeSymbol],statics:{fields:{SpecialMembers:null},ctors:{init:function(){this.SpecialMembers=System.Array.init([new Kusto.Language.Symbols.VariableSymbol("$current_database",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.VariableSymbol("$current_cluster_endpoint",Kusto.Language.Symbols.ScalarTypes.String)],Kusto.Language.Symbols.Symbol)}}},props:{EntityGroup:null,UnderlyingSymbol:null,Members:{get:function(){return Kusto.Language.Symbols.EntityGroupElementSymbol.SpecialMembers}},Tabularity:{get:function(){return this.UnderlyingSymbol.Tabularity}},Kind:{get:function(){return Kusto.Language.Symbols.SymbolKind.EntityGroupElement}}},ctors:{$ctor2:function(name,entityGroup,underlyingSymbol){this.$initialize();Kusto.Language.Symbols.TypeSymbol.ctor.call(this,name);this.EntityGroup=entityGroup||Kusto.Language.Symbols.EntityGroupSymbol.Empty;underlyingSymbol==null&&(underlyingSymbol=(entityGroup!=null?System.Linq.Enumerable.from(entityGroup.Members).ofType(Kusto.Language.Symbols.TypeSymbol).firstOrDefault(function(entity){return System.Array.getCount(entity.Members,Kusto.Language.Symbols.Symbol)>0},null):null)||(entityGroup!=null?System.Linq.Enumerable.from(entityGroup.Members).ofType(Kusto.Language.Symbols.TypeSymbol).firstOrDefault(null,null):null));underlyingSymbol==null&&(underlyingSymbol=Kusto.Language.Symbols.ErrorSymbol.Instance);this.UnderlyingSymbol=underlyingSymbol},$ctor1:function(name,entityGroup){Kusto.Language.Symbols.EntityGroupElementSymbol.$ctor2.call(this,name,entityGroup,null)},ctor:function(name){Kusto.Language.Symbols.EntityGroupElementSymbol.$ctor2.call(this,name,null,null)}}});Bridge.define("Kusto.Language.Symbols.EntityGroupSymbol",{inherits:[Kusto.Language.Symbols.TypeSymbol],statics:{fields:{Empty:null},ctors:{init:function(){this.Empty=new Kusto.Language.Symbols.EntityGroupSymbol.ctor}},methods:{CreateSignature:function(definition){var body=Kusto.Language.Symbols.EntityGroupSymbol.GetBodyFromDefinition(definition);return new Kusto.Language.Symbols.Signature.$ctor9(body,Kusto.Language.Symbols.Tabularity.Tabular)},GetBodyFromDefinition:function(definition){if(definition==null)return"entity_group []";if(definition=definition.trim(),System.String.startsWith(definition,"entity_group"))return definition;var expressionList=definition;return System.String.startsWith(definition,"[")&&System.String.endsWith(definition,"]")&&(expressionList=definition.substr(1,definition.length-2|0)),expressionList=expressionList.trim(),(System.String.startsWith(expressionList,'"')||System.String.startsWith(expressionList,"'"))&&(expressionList=Kusto.Language.KustoFacts.GetStringLiteralValue(expressionList)),System.String.format("entity_group [{0}]",[expressionList])}}},fields:{_members:null},props:{Definition:null,Description:null,Signature:null,Members:{get:function(){return this._members}},Tabularity:{get:function(){return Kusto.Language.Symbols.Tabularity.None}},Kind:{get:function(){return Kusto.Language.Symbols.SymbolKind.EntityGroup}}},ctors:{$ctor3:function(name,definition,description){description===void 0&&(description=null);var $t;this.$initialize();Kusto.Language.Symbols.TypeSymbol.ctor.call(this,name);this.Definition=definition;this.Description=($t=description,$t!=null?$t:"");this.Signature=Kusto.Language.Symbols.EntityGroupSymbol.CreateSignature(definition);this.Signature.Symbol=this;this._members=Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Symbols.Symbol).Instance},$ctor2:function(name,members,description){description===void 0&&(description=null);var $t;this.$initialize();Kusto.Language.Symbols.TypeSymbol.ctor.call(this,name);this.Definition=null;this.Description=($t=description,$t!=null?$t:"");this._members=Kusto.Language.Utils.ArgumentCheckers.CheckArgumentNullOrElementNull(Kusto.Language.Symbols.Symbol,Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Symbols.Symbol,members),"members");this.Signature=new Kusto.Language.Symbols.Signature.$ctor5(this);this.Signature.Symbol=this},$ctor1:function(name,members){members===void 0&&(members=[]);Kusto.Language.Symbols.EntityGroupSymbol.$ctor2.call(this,name,Bridge.cast(members,System.Collections.Generic.IEnumerable$1(Kusto.Language.Symbols.Symbol)))},ctor:function(members){members===void 0&&(members=[]);Kusto.Language.Symbols.EntityGroupSymbol.$ctor2.call(this,"",Bridge.cast(members,System.Collections.Generic.IEnumerable$1(Kusto.Language.Symbols.Symbol)))}}});Bridge.define("Kusto.Language.Symbols.ErrorSymbol",{inherits:[Kusto.Language.Symbols.TypeSymbol],statics:{fields:{Instance:null},ctors:{init:function(){this.Instance=new Kusto.Language.Symbols.ErrorSymbol}}},props:{Kind:{get:function(){return Kusto.Language.Symbols.SymbolKind.Error}},IsError:{get:function(){return!0}},Tabularity:{get:function(){return Kusto.Language.Symbols.Tabularity.None}}},ctors:{ctor:function(){this.$initialize();Kusto.Language.Symbols.TypeSymbol.ctor.call(this,"error")}}});Bridge.define("Kusto.Language.Symbols.TableSymbol",{inherits:[Kusto.Language.Symbols.TypeSymbol],statics:{fields:{InheritableState:0,Empty:null},ctors:{init:function(){this.InheritableState=7;this.Empty=new Kusto.Language.Symbols.TableSymbol.ctor}},methods:{From:function(schema){var rowSchema,columns;if(schema==null)throw new System.ArgumentNullException.$ctor1("schema");if(schema=schema.trim(),schema.length>0&&schema.charCodeAt(0)!==40&&(schema="("+(schema||"")),schema.length>0&&schema.charCodeAt(schema.length-1|0)!==41&&(schema=(schema||"")+")"),rowSchema=Kusto.Language.Parsing.QueryParser.ParseRowSchema$1(schema),rowSchema==null)throw new System.InvalidOperationException.$ctor1(System.String.format("Invalid schema: {0}",[schema]));return columns=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor),Kusto.Language.Binding.Binder.CreateColumnsFromRowSchema(rowSchema.Columns,columns),new Kusto.Language.Symbols.TableSymbol.$ctor3(columns)},Combine$1:function(kind,tables){return new Kusto.Language.Symbols.TableSymbol.$ctor3(Kusto.Language.Symbols.ColumnSymbol.Combine(kind,System.Linq.Enumerable.from(tables,Kusto.Language.Symbols.TableSymbol).select(function(t){return t.Columns})))},Combine:function(kind,tables){return tables===void 0&&(tables=[]),Kusto.Language.Symbols.TableSymbol.Combine$1(kind,Bridge.cast(tables,System.Collections.Generic.IEnumerable$1(Kusto.Language.Symbols.TableSymbol)))}}},fields:{state:0,lazyColumnMap:null},props:{Columns:null,Description:null,Kind:{get:function(){return this.IsMaterializedView?Kusto.Language.Symbols.SymbolKind.MaterializedView:Kusto.Language.Symbols.SymbolKind.Table}},Members:{get:function(){return this.Columns}},Tabularity:{get:function(){return Kusto.Language.Symbols.Tabularity.Tabular}},IsSorted:{get:function(){return(this.state&Kusto.Language.Symbols.TableSymbol.TableState.Sorted&65535)!=0}},IsSerialized:{get:function(){return(this.state&Kusto.Language.Symbols.TableSymbol.TableState.Serialized&65535)!=0}},IsOpen:{get:function(){return(this.state&Kusto.Language.Symbols.TableSymbol.TableState.Open&65535)!=0}},IsExternal:{get:function(){return Bridge.is(this,Kusto.Language.Symbols.ExternalTableSymbol)}},IsMaterializedView:{get:function(){return Bridge.is(this,Kusto.Language.Symbols.MaterializedViewSymbol)}},ColumnMap:{get:function(){var $t,map,col;if(this.lazyColumnMap==null){map=new(System.Collections.Generic.Dictionary$2(System.String,Kusto.Language.Symbols.ColumnSymbol).$ctor4)(System.Array.getCount(this.Columns,Kusto.Language.Symbols.ColumnSymbol));$t=Bridge.getEnumerator(this.Columns,Kusto.Language.Symbols.ColumnSymbol);try{while($t.moveNext())col=$t.Current,map.containsKey(col.Name)||map.add(col.Name,col)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}Kusto.Language.Utils.Interlocked.CompareExchange(System.Collections.Generic.Dictionary$2(System.String,Kusto.Language.Symbols.ColumnSymbol),Bridge.ref(this,"lazyColumnMap"),map,null)}return this.lazyColumnMap}}},ctors:{$ctor5:function(name,state,columns,description){var $t;this.$initialize();Kusto.Language.Symbols.TypeSymbol.ctor.call(this,name);this.state=state;this.Columns=Kusto.Language.Utils.ArgumentCheckers.CheckArgumentNullOrElementNull(Kusto.Language.Symbols.ColumnSymbol,Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Symbols.ColumnSymbol,columns),"columns");this.Description=($t=description,$t!=null?$t:"")},$ctor2:function(state,columns,description){Kusto.Language.Symbols.TableSymbol.$ctor5.call(this,"",state,columns,description)},$ctor1:function(sourceTable){Kusto.Language.Symbols.TableSymbol.$ctor5.call(this,sourceTable.Name,sourceTable.state,sourceTable.Columns,sourceTable.Description)},$ctor6:function(name,columns,description){description===void 0&&(description=null);Kusto.Language.Symbols.TableSymbol.$ctor5.call(this,name,Kusto.Language.Symbols.TableSymbol.TableState.None,columns,description)},$ctor7:function(name,schema,description){description===void 0&&(description=null);Kusto.Language.Symbols.TableSymbol.$ctor6.call(this,name,Kusto.Language.Symbols.TableSymbol.From(schema).Columns,description)},$ctor4:function(name,columns){columns===void 0&&(columns=[]);Kusto.Language.Symbols.TableSymbol.$ctor5.call(this,name,Kusto.Language.Symbols.TableSymbol.TableState.None,columns,null)},$ctor3:function(columns){Kusto.Language.Symbols.TableSymbol.$ctor5.call(this,"",Kusto.Language.Symbols.TableSymbol.TableState.None,columns,null)},ctor:function(columns){columns===void 0&&(columns=[]);Kusto.Language.Symbols.TableSymbol.$ctor3.call(this,Bridge.cast(columns,System.Collections.Generic.IEnumerable$1(Kusto.Language.Symbols.ColumnSymbol)))}},methods:{With:function(name,state,columns,description){var $t,$t1;name===void 0&&(name=null);state===void 0&&(state=null);columns===void 0&&(columns=null);description===void 0&&(description=null);var useName=($t=name,$t!=null?$t:this.Name),useState=System.Nullable.hasValue(state)?System.Nullable.getValue(state):this.state,useColumns=columns||this.Columns,useDescription=($t1=description,$t1!=null?$t1:this.Description);return Bridge.referenceEquals(useName,this.Name)&&useState===this.state&&Bridge.referenceEquals(useColumns,this.Columns)&&Bridge.referenceEquals(useDescription,this.Description)?this:this.Create(useName,useState,useColumns,useDescription)},Create:function(name,state,columns,description){return new Kusto.Language.Symbols.TableSymbol.$ctor5(name,state,columns,description)},WithName:function(name){return this.With(name,void 0,void 0,void 0)},WithDescripton:function(description){var $t;return this.With(void 0,void 0,void 0,($t=description,$t!=null?$t:""))},WithColumns$1:function(columns){return this.With(void 0,void 0,columns,void 0)},WithColumns:function(columns){return columns===void 0&&(columns=[]),this.WithColumns$1(Bridge.cast(columns,System.Collections.Generic.IEnumerable$1(Kusto.Language.Symbols.ColumnSymbol)))},AddColumns$1:function(columns){if(columns==null)throw new System.ArgumentNullException.$ctor1("columns");return this.With(void 0,void 0,System.Linq.Enumerable.from(this.Columns,Kusto.Language.Symbols.ColumnSymbol).concat(columns),void 0)},AddColumns:function(columns){return columns===void 0&&(columns=[]),this.AddColumns$1(Bridge.cast(columns,System.Collections.Generic.IEnumerable$1(Kusto.Language.Symbols.ColumnSymbol)))},WithState:function(newState){return this.With(void 0,newState,void 0,void 0)},WithIsSerialized:function(isSerialized){return this.WithState(isSerialized?(this.state|Kusto.Language.Symbols.TableSymbol.TableState.Serialized)&65535:this.state&65534)},WithIsSorted:function(isSorted){return this.WithState(isSorted?(this.state|Kusto.Language.Symbols.TableSymbol.TableState.Sorted)&65535:this.state&65533)},WithIsOpen:function(isOpen){return this.WithState(isOpen?(this.state|Kusto.Language.Symbols.TableSymbol.TableState.Open)&65535:this.state&65531)},WithIsExternal:function(isExternal){return Bridge.is(this,Kusto.Language.Symbols.ExternalTableSymbol)===isExternal?this:isExternal?new Kusto.Language.Symbols.ExternalTableSymbol.ctor(this):new Kusto.Language.Symbols.TableSymbol.$ctor1(this)},WithIsMaterializedView:function(isMaterializedView){return Bridge.is(this,Kusto.Language.Symbols.MaterializedViewSymbol)===isMaterializedView?this:isMaterializedView?new Kusto.Language.Symbols.MaterializedViewSymbol.ctor(this):new Kusto.Language.Symbols.TableSymbol.$ctor1(this)},WithInheritableProperties:function(table){if(table==null)throw new System.ArgumentNullException.$ctor1("table");var newState=(table.state&~Kusto.Language.Symbols.TableSymbol.InheritableState&65535|table.state&Kusto.Language.Symbols.TableSymbol.InheritableState&65535)&65535;return this.WithState(newState)},GetColumn:function(name){var column={};if(this.TryGetColumn(name,column))return column.v;else throw new System.InvalidOperationException.$ctor1(System.String.format("The column '{0}' does not exist.",[name]));},TryGetColumn:function(name,column){return this.ColumnMap.tryGetValue(name,column)},GetMembers$1:function(name,match,symbols,ignoreCase){if(ignoreCase===void 0&&(ignoreCase=!1),System.Array.getCount(this.Columns,Kusto.Language.Symbols.ColumnSymbol)>0)if(name!=null){var column={};this.ColumnMap.tryGetValue(name,column)&&Kusto.Language.Symbols.SymbolMatchExtensions.Matches$1(column.v,name,match,ignoreCase)&&symbols.add(column.v)}else Kusto.Language.Symbols.TypeSymbol.prototype.GetMembers$1.call(this,name,match,symbols)},WithSource:function(source){return this.WithColumns$1(System.Linq.Enumerable.from(this.Columns,Kusto.Language.Symbols.ColumnSymbol).select(function(p){return p.WithSource(source)}))}}});Bridge.define("Kusto.Language.Symbols.FunctionSymbol",{inherits:[Kusto.Language.Symbols.TypeSymbol],fields:{_flags:0},props:{Kind:{get:function(){return Kusto.Language.Symbols.SymbolKind.Function}},Signatures:null,Description:null,ResultNameKind:0,ResultNamePrefix:null,Alternative:null,IsObsolete:{get:function(){return this.Alternative!=null}},OptimizedAlternative:null,CustomAvailability:null,IsHidden:{get:function(){return(this._flags&Kusto.Language.Symbols.FunctionSymbol.FunctionFlags.Hidden)!=0||Bridge.ensureBaseProperty(this,"IsHidden").$Kusto$Language$Symbols$Symbol$IsHidden}},IsConstantFoldable:{get:function(){return(this._flags&Kusto.Language.Symbols.FunctionSymbol.FunctionFlags.Foldable)!=0}},IsView:{get:function(){return(this._flags&Kusto.Language.Symbols.FunctionSymbol.FunctionFlags.View)!=0}},Tabularity:{get:function(){return System.Array.getItem(this.Signatures,0,Kusto.Language.Symbols.Signature).Tabularity}},MinArgumentCount:{get:function(){var $t,min=-1,s;$t=Bridge.getEnumerator(this.Signatures,Kusto.Language.Symbols.Signature);try{while($t.moveNext())s=$t.Current,min=min===-1?s.MinArgumentCount:Math.min(min,s.MinArgumentCount)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return min}},MaxArgumentCount:{get:function(){var $t,max=-1,s;$t=Bridge.getEnumerator(this.Signatures,Kusto.Language.Symbols.Signature);try{while($t.moveNext())s=$t.Current,max=max===-1?s.MaxArgumentCount:Math.max(max,s.MaxArgumentCount)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return max}}},ctors:{$ctor9:function(name,signatures,flags,resultNameKind,resultNamePrefix,description,alternative,optimizedAlternative,fnAvailability){var $t,$t1,signature;this.$initialize();Kusto.Language.Symbols.TypeSymbol.ctor.call(this,name);this.Signatures=Kusto.Language.Utils.ArgumentCheckers.CheckArgumentNullOrEmptyOrElementNull(Kusto.Language.Symbols.Signature,Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Symbols.Signature,signatures),"signatures");this.Description=($t=description,$t!=null?$t:"");$t1=Bridge.getEnumerator(this.Signatures,Kusto.Language.Symbols.Signature);try{while($t1.moveNext())signature=$t1.Current,signature.Symbol=this}finally{Bridge.is($t1,System.IDisposable)&&$t1.System$IDisposable$Dispose()}this._flags=flags;this.ResultNameKind=resultNameKind;this.ResultNamePrefix=resultNamePrefix;this.Alternative=alternative;this.OptimizedAlternative=optimizedAlternative;this.CustomAvailability=fnAvailability},$ctor10:function(name,signatures,description){description===void 0&&(description=null);Kusto.Language.Symbols.FunctionSymbol.$ctor9.call(this,name,signatures,Kusto.Language.Symbols.FunctionSymbol.FunctionFlags.None,Kusto.Language.Symbols.ResultNameKind.Default,null,description,null,null,null)},$ctor4:function(name,signatures){signatures===void 0&&(signatures=[]);Kusto.Language.Symbols.FunctionSymbol.$ctor10.call(this,name,Bridge.cast(signatures,System.Collections.Generic.IEnumerable$1(Kusto.Language.Symbols.Signature)))},$ctor6:function(name,returnType,parameters,description){description===void 0&&(description=null);Kusto.Language.Symbols.FunctionSymbol.$ctor10.call(this,name,System.Array.init([new Kusto.Language.Symbols.Signature.$ctor6(returnType,parameters)],Kusto.Language.Symbols.Signature),description)},$ctor5:function(name,returnType,parameters){parameters===void 0&&(parameters=[]);Kusto.Language.Symbols.FunctionSymbol.$ctor4.call(this,name,System.Array.init([new Kusto.Language.Symbols.Signature.$ctor5(returnType,parameters)],Kusto.Language.Symbols.Signature))},$ctor3:function(name,returnTypeKind,parameters){Kusto.Language.Symbols.FunctionSymbol.$ctor4.call(this,name,System.Array.init([new Kusto.Language.Symbols.Signature.$ctor4(returnTypeKind,parameters)],Kusto.Language.Symbols.Signature))},$ctor2:function(name,returnTypeKind,parameters){parameters===void 0&&(parameters=[]);Kusto.Language.Symbols.FunctionSymbol.$ctor4.call(this,name,System.Array.init([new Kusto.Language.Symbols.Signature.$ctor2(returnTypeKind,parameters)],Kusto.Language.Symbols.Signature))},$ctor1:function(name,customReturnType,tabularity,parameters){Kusto.Language.Symbols.FunctionSymbol.$ctor4.call(this,name,System.Array.init([new Kusto.Language.Symbols.Signature.$ctor1(customReturnType,tabularity,parameters)],Kusto.Language.Symbols.Signature))},ctor:function(name,customReturnType,tabularity,parameters){parameters===void 0&&(parameters=[]);Kusto.Language.Symbols.FunctionSymbol.$ctor4.call(this,name,System.Array.init([new Kusto.Language.Symbols.Signature.ctor(customReturnType,tabularity,parameters)],Kusto.Language.Symbols.Signature))},$ctor13:function(name,body,tabularity,parameters,description){description===void 0&&(description=null);Kusto.Language.Symbols.FunctionSymbol.$ctor10.call(this,name,System.Array.init([new Kusto.Language.Symbols.Signature.$ctor10(body,tabularity,parameters)],Kusto.Language.Symbols.Signature),description)},$ctor12:function(name,body,tabularity,parameters){parameters===void 0&&(parameters=[]);Kusto.Language.Symbols.FunctionSymbol.$ctor4.call(this,name,System.Array.init([new Kusto.Language.Symbols.Signature.$ctor9(body,tabularity,parameters)],Kusto.Language.Symbols.Signature))},$ctor14:function(name,body,parameters,description){description===void 0&&(description=null);Kusto.Language.Symbols.FunctionSymbol.$ctor10.call(this,name,System.Array.init([new Kusto.Language.Symbols.Signature.$ctor10(body,Kusto.Language.Symbols.Tabularity.Unspecified,parameters)],Kusto.Language.Symbols.Signature),description)},$ctor11:function(name,body,parameters){parameters===void 0&&(parameters=[]);Kusto.Language.Symbols.FunctionSymbol.$ctor4.call(this,name,System.Array.init([new Kusto.Language.Symbols.Signature.$ctor9(body,Kusto.Language.Symbols.Tabularity.Unspecified,parameters)],Kusto.Language.Symbols.Signature))},$ctor15:function(name,parameterList,body,description){description===void 0&&(description=null);Kusto.Language.Symbols.FunctionSymbol.$ctor10.call(this,name,System.Array.init([new Kusto.Language.Symbols.Signature.$ctor10(body,Kusto.Language.Symbols.Tabularity.Unspecified,Kusto.Language.Symbols.Parameter.ParseList(parameterList))],Kusto.Language.Symbols.Signature),description)},$ctor8:function(name,declaration,parameters){Kusto.Language.Symbols.FunctionSymbol.$ctor4.call(this,name,System.Array.init([new Kusto.Language.Symbols.Signature.$ctor8(declaration,parameters)],Kusto.Language.Symbols.Signature))},$ctor7:function(name,declaration,parameters){parameters===void 0&&(parameters=[]);Kusto.Language.Symbols.FunctionSymbol.$ctor4.call(this,name,System.Array.init([new Kusto.Language.Symbols.Signature.$ctor7(declaration,parameters)],Kusto.Language.Symbols.Signature))}},methods:{With:function(name,signatures,flags,resultNameKind,resultNamePrefix,description,alternative,optimizedAlternative,fnAvailability){name===void 0&&(name=new(Kusto.Language.Utils.Optional$1(System.String)));signatures===void 0&&(signatures=new(Kusto.Language.Utils.Optional$1(System.Collections.Generic.IEnumerable$1(Kusto.Language.Symbols.Signature))));flags===void 0&&(flags=new(Kusto.Language.Utils.Optional$1(Kusto.Language.Symbols.FunctionSymbol.FunctionFlags)));resultNameKind===void 0&&(resultNameKind=new(Kusto.Language.Utils.Optional$1(Kusto.Language.Symbols.ResultNameKind)));resultNamePrefix===void 0&&(resultNamePrefix=new(Kusto.Language.Utils.Optional$1(System.String)));description===void 0&&(description=new(Kusto.Language.Utils.Optional$1(System.String)));alternative===void 0&&(alternative=new(Kusto.Language.Utils.Optional$1(System.String)));optimizedAlternative===void 0&&(optimizedAlternative=new(Kusto.Language.Utils.Optional$1(System.String)));fnAvailability===void 0&&(fnAvailability=new(Kusto.Language.Utils.Optional$1(Function)));var newName=name.HasValue?name.Value:this.Name,newSignatures=signatures.HasValue?signatures.Value:this.Signatures,newFlags=flags.HasValue?flags.Value:this._flags,newResultNameKind=resultNameKind.HasValue?resultNameKind.Value:this.ResultNameKind,newResultNamePrefix=resultNamePrefix.HasValue?resultNamePrefix.Value:this.ResultNamePrefix,newDescription=description.HasValue?description.Value:this.Description,newAlternative=alternative.HasValue?alternative.Value:this.Alternative,newOptimizedAlternative=optimizedAlternative.HasValue?optimizedAlternative.Value:this.OptimizedAlternative,newFnAvailability=fnAvailability.HasValue?fnAvailability.Value:this.CustomAvailability;return Bridge.referenceEquals(newName,this.Name)&&Bridge.referenceEquals(newSignatures,this.Signatures)&&newFlags===this._flags&&newResultNameKind===this.ResultNameKind&&Bridge.referenceEquals(newResultNamePrefix,this.ResultNamePrefix)&&Bridge.referenceEquals(newDescription,this.Description)&&Bridge.referenceEquals(newAlternative,this.Alternative)&&Bridge.referenceEquals(newOptimizedAlternative,this.OptimizedAlternative)&&Bridge.staticEquals(newFnAvailability,this.CustomAvailability)?this:new Kusto.Language.Symbols.FunctionSymbol.$ctor9(newName,newSignatures,newFlags,newResultNameKind,newResultNamePrefix,newDescription,newAlternative,newOptimizedAlternative,newFnAvailability)},Hide:function(){return this.WithIsHidden(!0)},WithIsHidden:function(isHidden){return this.With(void 0,void 0,Kusto.Language.Utils.Optional$1(Kusto.Language.Symbols.FunctionSymbol.FunctionFlags).op_Implicit(isHidden?this._flags|Kusto.Language.Symbols.FunctionSymbol.FunctionFlags.Hidden:this._flags&-2),void 0,void 0,void 0,void 0,void 0,void 0)},ConstantFoldable:function(){return this.WithIsConstantFoldable(!0)},WithIsConstantFoldable:function(isConstantFoldable){return this.With(void 0,void 0,Kusto.Language.Utils.Optional$1(Kusto.Language.Symbols.FunctionSymbol.FunctionFlags).op_Implicit(isConstantFoldable?this._flags|Kusto.Language.Symbols.FunctionSymbol.FunctionFlags.Foldable:this._flags&-3),void 0,void 0,void 0,void 0,void 0,void 0)},WithIsView:function(isView){return this.With(void 0,void 0,Kusto.Language.Utils.Optional$1(Kusto.Language.Symbols.FunctionSymbol.FunctionFlags).op_Implicit(isView?this._flags|Kusto.Language.Symbols.FunctionSymbol.FunctionFlags.View:this._flags&-5),void 0,void 0,void 0,void 0,void 0,void 0)},WithResultNamePrefix:function(resultNamePrefix){return this.With(void 0,void 0,void 0,void 0,Kusto.Language.Utils.Optional$1(System.String).op_Implicit(resultNamePrefix),void 0,void 0,void 0,void 0)},WithResultNameKind:function(kind){return this.With(void 0,void 0,void 0,Kusto.Language.Utils.Optional$1(Kusto.Language.Symbols.ResultNameKind).op_Implicit(kind),void 0,void 0,void 0,void 0,void 0)},WithDescription:function(description){return this.With(void 0,void 0,void 0,void 0,void 0,Kusto.Language.Utils.Optional$1(System.String).op_Implicit(description),void 0,void 0,void 0)},Obsolete:function(alternative){return this.WithIsObsolete(!0,alternative).Hide()},WithIsObsolete:function(isObsolete,alternative){var $t;return alternative===void 0&&(alternative=null),this.With(void 0,void 0,void 0,void 0,void 0,void 0,Kusto.Language.Utils.Optional$1(System.String).op_Implicit(isObsolete?($t=alternative,$t!=null?$t:""):null),void 0,void 0)},WithOptimizedAlternative:function(alternative){return this.With(void 0,void 0,void 0,void 0,void 0,void 0,void 0,Kusto.Language.Utils.Optional$1(System.String).op_Implicit(alternative),void 0)},WithCustomAvailability:function(fnAvailability){return this.With(void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,Kusto.Language.Utils.Optional$1(Function).op_Implicit(fnAvailability))},GetReturnType:function(globals){return System.Array.getItem(this.Signatures,0,Kusto.Language.Symbols.Signature).GetReturnType(globals)}}});Bridge.define("Kusto.Language.Symbols.GraphSymbol",{inherits:[Kusto.Language.Symbols.TypeSymbol],statics:{methods:{Merge:function(leftGraph,rightGraph){if(leftGraph!=null&&rightGraph!=null){var newEdgeShape=Kusto.Language.Symbols.TableSymbol.Combine(Kusto.Language.Symbols.CombineKind.UnifySameName,[leftGraph.EdgeShape,rightGraph.EdgeShape]),newNodeShape=null;return leftGraph.NodeShape!=null&&rightGraph.NodeShape!=null?newNodeShape=Kusto.Language.Symbols.TableSymbol.Combine(Kusto.Language.Symbols.CombineKind.UnifySameName,[leftGraph.NodeShape,rightGraph.NodeShape]):leftGraph.NodeShape!=null?newNodeShape=leftGraph.NodeShape:rightGraph.NodeShape!=null&&(newNodeShape=rightGraph.NodeShape),new Kusto.Language.Symbols.GraphSymbol.ctor(newEdgeShape,newNodeShape)}else return leftGraph!=null?leftGraph:rightGraph!=null?rightGraph:null}}},props:{EdgeShape:null,NodeShape:null,Kind:{get:function(){return Kusto.Language.Symbols.SymbolKind.Graph}},Tabularity:{get:function(){return Kusto.Language.Symbols.Tabularity.Graph}}},ctors:{$ctor2:function(name,edgeShape,nodeShape){nodeShape===void 0&&(nodeShape=null);this.$initialize();Kusto.Language.Symbols.TypeSymbol.ctor.call(this,name);this.EdgeShape=Kusto.Language.Utils.ArgumentCheckers.CheckArgumentNull(Kusto.Language.Symbols.TableSymbol,edgeShape,"edgeShape");this.NodeShape=nodeShape},$ctor3:function(name,edgeShape,nodeShapes){this.$initialize();Kusto.Language.Symbols.TypeSymbol.ctor.call(this,name);this.EdgeShape=Kusto.Language.Utils.ArgumentCheckers.CheckArgumentNull(Kusto.Language.Symbols.TableSymbol,edgeShape,"EdgeShape");this.NodeShape=nodeShapes!=null&&System.Array.getCount(nodeShapes,Kusto.Language.Symbols.TableSymbol)>0?Kusto.Language.Symbols.TableSymbol.Combine$1(Kusto.Language.Symbols.CombineKind.UnifySameName,nodeShapes):null},ctor:function(edgeShape,nodeShape){nodeShape===void 0&&(nodeShape=null);Kusto.Language.Symbols.GraphSymbol.$ctor2.call(this,"",edgeShape,nodeShape)},$ctor1:function(edgeShape,nodeShapes){Kusto.Language.Symbols.GraphSymbol.$ctor3.call(this,"",edgeShape,nodeShapes)}},methods:{WithName:function(name){return name!=null?new Kusto.Language.Symbols.GraphSymbol.$ctor2(name,this.EdgeShape,this.NodeShape):this},WithEdgeShape:function(edgeShape){return Bridge.referenceEquals(this.EdgeShape,edgeShape)?this:new Kusto.Language.Symbols.GraphSymbol.$ctor2(this.Name,edgeShape,this.NodeShape)},WithNodeShape:function(nodeShape){return this.NodeShape!=null?new Kusto.Language.Symbols.GraphSymbol.$ctor2(this.Name,this.EdgeShape,nodeShape):this}}});Bridge.define("Kusto.Language.Symbols.GroupSymbol",{inherits:[Kusto.Language.Symbols.TypeSymbol],fields:{members:null},props:{Kind:{get:function(){return Kusto.Language.Symbols.SymbolKind.Group}},Members:{get:function(){return this.members}},Tabularity:{get:function(){return System.Array.getItem(this.Members,0,Kusto.Language.Symbols.Symbol).Tabularity}}},ctors:{$ctor1:function(symbols){this.$initialize();Kusto.Language.Symbols.TypeSymbol.ctor.call(this,"group");this.members=Kusto.Language.Utils.ArgumentCheckers.CheckArgumentNullOrElementNull(Kusto.Language.Symbols.Symbol,Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Symbols.Symbol,symbols),"symbols")},ctor:function(symbols){symbols===void 0&&(symbols=[]);Kusto.Language.Symbols.GroupSymbol.$ctor1.call(this,Bridge.cast(symbols,System.Collections.Generic.IEnumerable$1(Kusto.Language.Symbols.Symbol)))}}});Bridge.define("Kusto.Language.Symbols.PatternSymbol",{inherits:[Kusto.Language.Symbols.TypeSymbol],props:{Kind:{get:function(){return Kusto.Language.Symbols.SymbolKind.Pattern}},Parameters:null,PathParameter:null,Signatures:null,Tabularity:{get:function(){return Kusto.Language.Symbols.Tabularity.Tabular}}},ctors:{$ctor1:function(name,parameters,pathParameter,signatures){var $t,sig;parameters===void 0&&(parameters=null);pathParameter===void 0&&(pathParameter=null);signatures===void 0&&(signatures=null);this.$initialize();Kusto.Language.Symbols.TypeSymbol.ctor.call(this,name);this.Parameters=Kusto.Language.Utils.ArgumentCheckers.CheckArgumentNullOrElementNull(Kusto.Language.Symbols.Parameter,parameters||Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Symbols.Parameter).Instance,"parameters");this.PathParameter=pathParameter;this.Signatures=Kusto.Language.Utils.ArgumentCheckers.CheckArgumentNullOrElementNull(Kusto.Language.Symbols.PatternSignature,signatures||Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Symbols.PatternSignature).Instance,"signatures");$t=Bridge.getEnumerator(this.Signatures,Kusto.Language.Symbols.PatternSignature);try{while($t.moveNext())sig=$t.Current,sig.Symbol=this}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}},ctor:function(name){Kusto.Language.Symbols.PatternSymbol.$ctor1.call(this,name,null,null,null)}}});Bridge.define("Kusto.Language.Symbols.VoidSymbol",{inherits:[Kusto.Language.Symbols.TypeSymbol],statics:{fields:{Instance:null},ctors:{init:function(){this.Instance=new Kusto.Language.Symbols.VoidSymbol}}},props:{Kind:{get:function(){return Kusto.Language.Symbols.SymbolKind.Void}},Tabularity:{get:function(){return Kusto.Language.Symbols.Tabularity.None}}},ctors:{ctor:function(){this.$initialize();Kusto.Language.Symbols.TypeSymbol.ctor.call(this,"void")}}});Bridge.define("Kusto.Language.Syntax.Statement",{inherits:[Kusto.Language.Syntax.SyntaxNode],ctors:{ctor:function(diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics)}}});Bridge.define("Kusto.Language.Syntax.Expression",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{IsLiteral:{get:function(){return!1}},LiteralValueInfo:{get:function(){return null}},LiteralValue:{get:function(){var $t;return($t=this.LiteralValueInfo)!=null?$t.Value:null}},ResultType:{get:function(){var type=this.RawResultType,ts,eges;if((ts=Bridge.as(type,Kusto.Language.Symbols.TupleSymbol))!=null&&System.Array.getCount(ts.Columns,Kusto.Language.Symbols.ColumnSymbol)===1&&ts.IsReducibleToScalar)return System.Array.getItem(ts.Columns,0,Kusto.Language.Symbols.ColumnSymbol).Type;else if((eges=Bridge.as(type,Kusto.Language.Symbols.EntityGroupElementSymbol))!=null)return eges.UnderlyingSymbol;return type}},RawResultType:{get:function(){var $t;return($t=this.GetSemanticInfo())!=null?$t.ResultType:null}},IsConstant:{get:function(){var $t,$t1;return $t=($t1=this.GetSemanticInfo())!=null?$t1.IsConstant:null,$t!=null?$t:!1}},ConstantValueInfo:{get:function(){var v;return this.IsLiteral?this.LiteralValueInfo:(v=Bridge.as(this.ReferencedSymbol,Kusto.Language.Symbols.VariableSymbol))!=null&&v.IsConstant?v.ConstantValueInfo:null}},ConstantValue:{get:function(){var $t;return($t=this.ConstantValueInfo)!=null?$t.Value:null}}},ctors:{ctor:function(diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics)}}});Bridge.define("Kusto.Language.Syntax.Name",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{SimpleName:{get:function(){return""}}},ctors:{ctor:function(diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics)}}});Bridge.define("Kusto.Language.Syntax.Clause",{inherits:[Kusto.Language.Syntax.SyntaxNode],ctors:{ctor:function(diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics)}}});Bridge.define("Kusto.Language.Syntax.CommandBlock",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.CommandBlock}},Statements:null,SkippedTokens:null,EndOfCommand:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(statements,skippedTokens,endOfCommand,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.Statements=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)),statements);this.SkippedTokens=this.Attach(Kusto.Language.Syntax.SkippedTokens,skippedTokens,!0);this.EndOfCommand=this.Attach(Kusto.Language.Syntax.SyntaxToken,endOfCommand,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Statements;case 1:return this.SkippedTokens;case 2:return this.EndOfCommand;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Statements";case 1:return"SkippedTokens";case 2:return"EndOfCommand";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 1:case 2:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Tabular;case 1:return Kusto.Language.Editor.CompletionHint.None;case 2:return Kusto.Language.Editor.CompletionHint.None;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitCommandBlock(this)},Accept:function(TResult,visitor){return visitor.VisitCommandBlock(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.CommandBlock(($t=this.Statements)!=null?$t.Clone$2(includeDiagnostics):null,Bridge.cast(($t1=this.SkippedTokens)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.SkippedTokens),($t2=this.EndOfCommand)!=null?$t2.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.CustomNode",{inherits:[Kusto.Language.Syntax.SyntaxNode],statics:{methods:{GetDefaultShape:function(count){for(var elements=System.Array.init(count,null,Kusto.Language.Syntax.CustomElementDescriptor),i=0;i<count;i=i+1|0)elements[System.Array.index(i,elements)]=Kusto.Language.Syntax.CustomElementDescriptor.Default;return elements}}},fields:{shape:null,elements:null},props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.CustomNode}},ChildCount:{get:function(){return System.Array.getCount(this.shape,Kusto.Language.Syntax.CustomElementDescriptor)}}},ctors:{$ctor2:function(shape,elements,diagnostics){var elist,i;if(this.$initialize(),Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics),shape==null)throw new System.ArgumentNullException.$ctor1("shape");if(elements==null)throw new System.ArgumentNullException.$ctor1("elements");if(this.shape=shape,elements!=null){for(elist=new(System.Collections.Generic.List$1(Kusto.Language.Syntax.SyntaxElement).$ctor2)(System.Array.getCount(elements,Kusto.Language.Syntax.SyntaxElement)),i=0;i<System.Array.getCount(elements,Kusto.Language.Syntax.SyntaxElement);i=i+1|0){var e=System.Array.getItem(elements,i,Kusto.Language.Syntax.SyntaxElement),optional=System.Array.getItem(this.shape,i,Kusto.Language.Syntax.CustomElementDescriptor).IsOptional,attached=this.Attach(Kusto.Language.Syntax.SyntaxElement,e,optional);elist.add(attached)}this.elements=elist.AsReadOnly()}else this.elements=Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Syntax.SyntaxElement).Instance;this.Init()},$ctor1:function(shape,elements){elements===void 0&&(elements=[]);Kusto.Language.Syntax.CustomNode.$ctor2.call(this,shape,elements,null)},ctor:function(elements){elements===void 0&&(elements=[]);Kusto.Language.Syntax.CustomNode.$ctor2.call(this,Kusto.Language.Syntax.CustomNode.GetDefaultShape(elements.length),elements,null)}},methods:{GetChild:function(index){if(index<0||index>=System.Array.getCount(this.shape,Kusto.Language.Syntax.CustomElementDescriptor))throw new System.ArgumentOutOfRangeException.$ctor1("index");return index<System.Array.getCount(this.elements,Kusto.Language.Syntax.SyntaxElement)?System.Array.getItem(this.elements,index,Kusto.Language.Syntax.SyntaxElement):null},GetName:function(index){if(index<0||index>=System.Array.getCount(this.shape,Kusto.Language.Syntax.CustomElementDescriptor))throw new System.ArgumentOutOfRangeException.$ctor1("index");return System.Array.getItem(this.shape,index,Kusto.Language.Syntax.CustomElementDescriptor).Name},GetCompletionHint:function(index){if(index<0||index>=System.Array.getCount(this.shape,Kusto.Language.Syntax.CustomElementDescriptor))throw new System.ArgumentOutOfRangeException.$ctor1("index");return System.Array.getItem(this.shape,index,Kusto.Language.Syntax.CustomElementDescriptor).CompletionHint},IsOptional:function(index){if(index<0||index>=System.Array.getCount(this.shape,Kusto.Language.Syntax.CustomElementDescriptor))throw new System.ArgumentOutOfRangeException.$ctor1("index");return System.Array.getItem(this.shape,index,Kusto.Language.Syntax.CustomElementDescriptor).IsOptional},Accept$1:function(visitor){visitor.VisitCustom(this)},Accept:function(TResult,visitor){return visitor.VisitCustom(this)},CloneCore:function(includeDiagnostics){var clonedElements=System.Linq.Enumerable.from(this.elements,Kusto.Language.Syntax.SyntaxElement).select(function(e){return e.Clone(includeDiagnostics)}).ToArray(Kusto.Language.Syntax.SyntaxElement);return new Kusto.Language.Syntax.CustomNode.$ctor1(this.shape,clonedElements)}}});Bridge.define("Kusto.Language.Syntax.DefaultValueDeclaration",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.DefaultValueDeclaration}},Equal:null,Value:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(equal,value,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.Equal=this.Attach(Kusto.Language.Syntax.SyntaxToken,equal);this.Value=this.Attach(Kusto.Language.Syntax.Expression,value);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Equal;case 1:return this.Value;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Equal";case 1:return"Value";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 1:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitDefaultValueDeclaration(this)},Accept:function(TResult,visitor){return visitor.VisitDefaultValueDeclaration(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.DefaultValueDeclaration(($t=this.Equal)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.Value)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.DirectiveBlock",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.DirectiveBlock}},DirectiveToken:null,SkippedTokens:null,EndOfText:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(directiveToken,skippedTokens,endOfText,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.DirectiveToken=this.Attach(Kusto.Language.Syntax.SyntaxToken,directiveToken);this.SkippedTokens=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SyntaxToken),skippedTokens);this.EndOfText=this.Attach(Kusto.Language.Syntax.SyntaxToken,endOfText,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.DirectiveToken;case 1:return this.SkippedTokens;case 2:return this.EndOfText;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"DirectiveToken";case 1:return"SkippedTokens";case 2:return"EndOfText";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 2:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.None;case 1:return Kusto.Language.Editor.CompletionHint.None;case 2:return Kusto.Language.Editor.CompletionHint.None;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitDirectiveBlock(this)},Accept:function(TResult,visitor){return visitor.VisitDirectiveBlock(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.DirectiveBlock(($t=this.DirectiveToken)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.SkippedTokens)!=null?$t1.Clone$2(includeDiagnostics):null,($t2=this.EndOfText)!=null?$t2.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.EvaluateRowSchema",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.EvaluateRowSchema}},OpenParen:null,LeadingComma:null,AsteriskToken:null,AsteriskTokenComma:null,Columns:null,CloseParen:null,ChildCount:{get:function(){return 6}}},ctors:{ctor:function(openParen,leadingComma,asteriskToken,asteriskTokenComma,columns,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.OpenParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,openParen);this.LeadingComma=this.Attach(Kusto.Language.Syntax.SyntaxToken,leadingComma,!0);this.AsteriskToken=this.Attach(Kusto.Language.Syntax.SyntaxToken,asteriskToken,!0);this.AsteriskTokenComma=this.Attach(Kusto.Language.Syntax.SyntaxToken,asteriskTokenComma,!0);this.Columns=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NameAndTypeDeclaration)),columns);this.CloseParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.OpenParen;case 1:return this.LeadingComma;case 2:return this.AsteriskToken;case 3:return this.AsteriskTokenComma;case 4:return this.Columns;case 5:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"OpenParen";case 1:return"LeadingComma";case 2:return"AsteriskToken";case 3:return"AsteriskTokenComma";case 4:return"Columns";case 5:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 1:case 2:case 3:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;case 3:return Kusto.Language.Editor.CompletionHint.Syntax;case 4:return Kusto.Language.Editor.CompletionHint.Declaration;case 5:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitEvaluateRowSchema(this)},Accept:function(TResult,visitor){return visitor.VisitEvaluateRowSchema(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3,$t4,$t5;return new Kusto.Language.Syntax.EvaluateRowSchema(($t=this.OpenParen)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.LeadingComma)!=null?$t1.Clone$1(includeDiagnostics):null,($t2=this.AsteriskToken)!=null?$t2.Clone$1(includeDiagnostics):null,($t3=this.AsteriskTokenComma)!=null?$t3.Clone$1(includeDiagnostics):null,($t4=this.Columns)!=null?$t4.Clone$2(includeDiagnostics):null,($t5=this.CloseParen)!=null?$t5.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.EvaluateSchemaClause",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.EvaluateSchemaClause}},ColonToken:null,Schema:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(colonToken,schema,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.ColonToken=this.Attach(Kusto.Language.Syntax.SyntaxToken,colonToken);this.Schema=this.Attach(Kusto.Language.Syntax.EvaluateRowSchema,schema,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.ColonToken;case 1:return this.Schema;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"ColonToken";case 1:return"Schema";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 1:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitEvaluateSchemaClause(this)},Accept:function(TResult,visitor){return visitor.VisitEvaluateSchemaClause(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.EvaluateSchemaClause(($t=this.ColonToken)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.Schema)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.EvaluateRowSchema),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.ExpressionCouple",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ExpressionCouple}},OpenParen:null,First:null,DotDot:null,Second:null,CloseParen:null,ChildCount:{get:function(){return 5}}},ctors:{ctor:function(openParen,first,dotDot,second,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.OpenParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,openParen);this.First=this.Attach(Kusto.Language.Syntax.Expression,first);this.DotDot=this.Attach(Kusto.Language.Syntax.SyntaxToken,dotDot);this.Second=this.Attach(Kusto.Language.Syntax.Expression,second);this.CloseParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.OpenParen;case 1:return this.First;case 2:return this.DotDot;case 3:return this.Second;case 4:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"OpenParen";case 1:return"First";case 2:return"DotDot";case 3:return"Second";case 4:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;case 1:return Kusto.Language.Editor.CompletionHint.Scalar;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;case 3:return Kusto.Language.Editor.CompletionHint.Scalar;case 4:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitExpressionCouple(this)},Accept:function(TResult,visitor){return visitor.VisitExpressionCouple(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3,$t4;return new Kusto.Language.Syntax.ExpressionCouple(($t=this.OpenParen)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.First)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),($t2=this.DotDot)!=null?$t2.Clone$1(includeDiagnostics):null,Bridge.cast(($t3=this.Second)!=null?$t3.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),($t4=this.CloseParen)!=null?$t4.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.ExpressionList",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ExpressionList}},OpenParen:null,Expressions:null,CloseParen:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(openParen,expressions,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.OpenParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,openParen);this.Expressions=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),expressions);this.CloseParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.OpenParen;case 1:return this.Expressions;case 2:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"OpenParen";case 1:return"Expressions";case 2:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;case 1:return Kusto.Language.Editor.CompletionHint.Scalar;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitExpressionList(this)},Accept:function(TResult,visitor){return visitor.VisitExpressionList(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.ExpressionList(($t=this.OpenParen)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Expressions)!=null?$t1.Clone$2(includeDiagnostics):null,($t2=this.CloseParen)!=null?$t2.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.FunctionBody",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.FunctionBody}},OpenBrace:null,Statements:null,Expression:null,Semicolon:null,CloseBrace:null,ChildCount:{get:function(){return 5}}},ctors:{ctor:function(openBrace,statements,expression,semicolon,closeBrace,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.OpenBrace=this.Attach(Kusto.Language.Syntax.SyntaxToken,openBrace);this.Statements=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)),statements);this.Expression=this.Attach(Kusto.Language.Syntax.Expression,expression,!0);this.Semicolon=this.Attach(Kusto.Language.Syntax.SyntaxToken,semicolon,!0);this.CloseBrace=this.Attach(Kusto.Language.Syntax.SyntaxToken,closeBrace);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.OpenBrace;case 1:return this.Statements;case 2:return this.Expression;case 3:return this.Semicolon;case 4:return this.CloseBrace;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"OpenBrace";case 1:return"Statements";case 2:return"Expression";case 3:return"Semicolon";case 4:return"CloseBrace";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 2:case 3:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;case 1:return Kusto.Language.Editor.CompletionHint.Tabular;case 2:return Kusto.Language.Editor.CompletionHint.Expression;case 3:return Kusto.Language.Editor.CompletionHint.Syntax;case 4:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitFunctionBody(this)},Accept:function(TResult,visitor){return visitor.VisitFunctionBody(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3,$t4;return new Kusto.Language.Syntax.FunctionBody(($t=this.OpenBrace)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Statements)!=null?$t1.Clone$2(includeDiagnostics):null,Bridge.cast(($t2=this.Expression)!=null?$t2.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),($t3=this.Semicolon)!=null?$t3.Clone$1(includeDiagnostics):null,($t4=this.CloseBrace)!=null?$t4.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.FunctionParameter",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.FunctionParameter}},NameAndType:null,DefaultValue:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(nameAndType,defaultValue,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.NameAndType=this.Attach(Kusto.Language.Syntax.NameAndTypeDeclaration,nameAndType);this.DefaultValue=this.Attach(Kusto.Language.Syntax.DefaultValueDeclaration,defaultValue,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.NameAndType;case 1:return this.DefaultValue;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"NameAndType";case 1:return"DefaultValue";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 1:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 1:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitFunctionParameter(this)},Accept:function(TResult,visitor){return visitor.VisitFunctionParameter(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.FunctionParameter(Bridge.cast(($t=this.NameAndType)!=null?$t.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.NameAndTypeDeclaration),Bridge.cast(($t1=this.DefaultValue)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.DefaultValueDeclaration),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.FunctionParameters",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.FunctionParameters}},OpenParen:null,Parameters:null,CloseParen:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(openParen,parameters,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.OpenParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,openParen);this.Parameters=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.FunctionParameter)),parameters);this.CloseParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.OpenParen;case 1:return this.Parameters;case 2:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"OpenParen";case 1:return"Parameters";case 2:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitFunctionParameters(this)},Accept:function(TResult,visitor){return visitor.VisitFunctionParameters(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.FunctionParameters(($t=this.OpenParen)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Parameters)!=null?$t1.Clone$2(includeDiagnostics):null,($t2=this.CloseParen)!=null?$t2.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.GraphMatchPatternNotation",{inherits:[Kusto.Language.Syntax.SyntaxNode],ctors:{ctor:function(diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics)}}});Bridge.define("Kusto.Language.Syntax.GraphMatchPatternEdgeRange",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.GraphMatchPatternEdgeRange}},Asterisk:null,RangeStart:null,DotDotToken:null,RangeEnd:null,ChildCount:{get:function(){return 4}}},ctors:{ctor:function(asterisk,rangeStart,dotDotToken,rangeEnd,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.Asterisk=this.Attach(Kusto.Language.Syntax.SyntaxToken,asterisk);this.RangeStart=this.Attach(Kusto.Language.Syntax.Expression,rangeStart);this.DotDotToken=this.Attach(Kusto.Language.Syntax.SyntaxToken,dotDotToken);this.RangeEnd=this.Attach(Kusto.Language.Syntax.Expression,rangeEnd);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Asterisk;case 1:return this.RangeStart;case 2:return this.DotDotToken;case 3:return this.RangeEnd;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Asterisk";case 1:return"RangeStart";case 2:return"DotDotToken";case 3:return"RangeEnd";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;case 1:return Kusto.Language.Editor.CompletionHint.Scalar;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;case 3:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitGraphMatchPatternEdgeRange(this)},Accept:function(TResult,visitor){return visitor.VisitGraphMatchPatternEdgeRange(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3;return new Kusto.Language.Syntax.GraphMatchPatternEdgeRange(($t=this.Asterisk)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.RangeStart)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),($t2=this.DotDotToken)!=null?$t2.Clone$1(includeDiagnostics):null,Bridge.cast(($t3=this.RangeEnd)!=null?$t3.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.JsonPair",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.JsonPair}},Name:null,Colon:null,Value:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(name,colon,value,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.Name=this.Attach(Kusto.Language.Syntax.SyntaxToken,name);this.Colon=this.Attach(Kusto.Language.Syntax.SyntaxToken,colon);this.Value=this.Attach(Kusto.Language.Syntax.Expression,value);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Name;case 1:return this.Colon;case 2:return this.Value;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Name";case 1:return"Colon";case 2:return"Value";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Declaration;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Literal;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitJsonPair(this)},Accept:function(TResult,visitor){return visitor.VisitJsonPair(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.JsonPair(($t=this.Name)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Colon)!=null?$t1.Clone$1(includeDiagnostics):null,Bridge.cast(($t2=this.Value)!=null?$t2.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.MakeGraphPartitionedByClause",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.MakeGraphPartitionedByClause}},PartitionedByKeyword:null,Entity:null,OpenParen:null,Subquery:null,CloseParen:null,ChildCount:{get:function(){return 5}}},ctors:{ctor:function(partitionedByKeyword,entity,openParen,subquery,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.PartitionedByKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,partitionedByKeyword);this.Entity=this.Attach(Kusto.Language.Syntax.NameReference,entity);this.OpenParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,openParen);this.Subquery=this.Attach(Kusto.Language.Syntax.Expression,subquery);this.CloseParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.PartitionedByKeyword;case 1:return this.Entity;case 2:return this.OpenParen;case 3:return this.Subquery;case 4:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"PartitionedByKeyword";case 1:return"Entity";case 2:return"OpenParen";case 3:return"Subquery";case 4:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Column;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;case 3:return Kusto.Language.Editor.CompletionHint.Query;case 4:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitMakeGraphPartitionedByClause(this)},Accept:function(TResult,visitor){return visitor.VisitMakeGraphPartitionedByClause(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3,$t4;return new Kusto.Language.Syntax.MakeGraphPartitionedByClause(($t=this.PartitionedByKeyword)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.Entity)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.NameReference),($t2=this.OpenParen)!=null?$t2.Clone$1(includeDiagnostics):null,Bridge.cast(($t3=this.Subquery)!=null?$t3.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),($t4=this.CloseParen)!=null?$t4.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.MakeGraphTableAndKeyClause",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.MakeGraphTableAndKeyClause}},Table:null,OnKeyword:null,Column:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(table,onKeyword,column,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.Table=this.Attach(Kusto.Language.Syntax.Expression,table);this.OnKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,onKeyword);this.Column=this.Attach(Kusto.Language.Syntax.NameReference,column);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Table;case 1:return this.OnKeyword;case 2:return this.Column;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Table";case 1:return"OnKeyword";case 2:return"Column";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Tabular;case 1:return Kusto.Language.Editor.CompletionHint.Keyword;case 2:return Kusto.Language.Editor.CompletionHint.Column;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitMakeGraphTableAndKeyClause(this)},Accept:function(TResult,visitor){return visitor.VisitMakeGraphTableAndKeyClause(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.MakeGraphTableAndKeyClause(Bridge.cast(($t=this.Table)!=null?$t.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),($t1=this.OnKeyword)!=null?$t1.Clone$1(includeDiagnostics):null,Bridge.cast(($t2=this.Column)!=null?$t2.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.NameReference),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.MakeGraphWithClause",{inherits:[Kusto.Language.Syntax.SyntaxNode],ctors:{ctor:function(diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics)}}});Bridge.define("Kusto.Language.Syntax.MaterializedViewCombineClause",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.MaterializedViewCombineClause}},Keyword:null,OpenParen:null,Expression:null,CloseParen:null,ChildCount:{get:function(){return 4}}},ctors:{ctor:function(keyword,openParen,expression,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.Keyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,keyword);this.OpenParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,openParen);this.Expression=this.Attach(Kusto.Language.Syntax.Expression,expression);this.CloseParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Keyword;case 1:return this.OpenParen;case 2:return this.Expression;case 3:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Keyword";case 1:return"OpenParen";case 2:return"Expression";case 3:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;case 3:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitMaterializedViewCombineClause(this)},Accept:function(TResult,visitor){return visitor.VisitMaterializedViewCombineClause(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3;return new Kusto.Language.Syntax.MaterializedViewCombineClause(($t=this.Keyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.OpenParen)!=null?$t1.Clone$1(includeDiagnostics):null,Bridge.cast(($t2=this.Expression)!=null?$t2.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),($t3=this.CloseParen)!=null?$t3.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.MaterializedViewCombineNameClause",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.MaterializedViewCombineExpression}},OpenParen:null,Value:null,CloseParen:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(openParen,value,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.OpenParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,openParen);this.Value=this.Attach(Kusto.Language.Syntax.Expression,value);this.CloseParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.OpenParen;case 1:return this.Value;case 2:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"OpenParen";case 1:return"Value";case 2:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;case 1:return Kusto.Language.Editor.CompletionHint.Literal;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitMaterializedViewCombineNameClause(this)},Accept:function(TResult,visitor){return visitor.VisitMaterializedViewCombineNameClause(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.MaterializedViewCombineNameClause(($t=this.OpenParen)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.Value)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),($t2=this.CloseParen)!=null?$t2.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.NamedParameter",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.NamedParameter}},Name:null,EqualToken:null,Expression:null,ExpressionHint:0,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(name,equalToken,expression,expressionHint,diagnostics){expressionHint===void 0&&(expressionHint=0);diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.Name=this.Attach(Kusto.Language.Syntax.NameDeclaration,name);this.EqualToken=this.Attach(Kusto.Language.Syntax.SyntaxToken,equalToken);this.Expression=this.Attach(Kusto.Language.Syntax.Expression,expression);this.ExpressionHint=expressionHint;this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Name;case 1:return this.EqualToken;case 2:return this.Expression;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Name";case 1:return"EqualToken";case 2:return"Expression";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Declaration;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.None;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitNamedParameter(this)},Accept:function(TResult,visitor){return visitor.VisitNamedParameter(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.NamedParameter(Bridge.cast(($t=this.Name)!=null?$t.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.NameDeclaration),($t1=this.EqualToken)!=null?$t1.Clone$1(includeDiagnostics):null,Bridge.cast(($t2=this.Expression)!=null?$t2.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),this.ExpressionHint,includeDiagnostics?this.SyntaxDiagnostics:null)},GetCompletionHint:function(index){return index===2?this.ExpressionHint:Kusto.Language.Syntax.SyntaxNode.prototype.GetCompletionHint.call(this,index)}}});Bridge.define("Kusto.Language.Syntax.OrderingClause",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.OrderingClause}},AscOrDescKeyword:null,NullsClause:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(ascOrDescKeyword,nullsClause,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.AscOrDescKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,ascOrDescKeyword,!0);this.NullsClause=this.Attach(Kusto.Language.Syntax.OrderingNullsClause,nullsClause,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.AscOrDescKeyword;case 1:return this.NullsClause;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"AscOrDescKeyword";case 1:return"NullsClause";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 0:case 1:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Clause;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitOrderingClause(this)},Accept:function(TResult,visitor){return visitor.VisitOrderingClause(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.OrderingClause(($t=this.AscOrDescKeyword)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.NullsClause)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.OrderingNullsClause),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.OrderingNullsClause",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.OrderingNullsClause}},NullsKeyword:null,FirstOrLastKeyword:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(nullsKeyword,firstOrLastKeyword,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.NullsKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,nullsKeyword);this.FirstOrLastKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,firstOrLastKeyword);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.NullsKeyword;case 1:return this.FirstOrLastKeyword;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"NullsKeyword";case 1:return"FirstOrLastKeyword";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Keyword;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitOrderingNullsClause(this)},Accept:function(TResult,visitor){return visitor.VisitOrderingNullsClause(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.OrderingNullsClause(($t=this.NullsKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.FirstOrLastKeyword)!=null?$t1.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.PartitionByIdClause",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.PartitionByIdClause}},IdKeyword:null,Value:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(idKeyword,value,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.IdKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,idKeyword);this.Value=this.Attach(Kusto.Language.Syntax.Expression,value);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.IdKeyword;case 1:return this.Value;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"IdKeyword";case 1:return"Value";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Literal;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitPartitionByIdClause(this)},Accept:function(TResult,visitor){return visitor.VisitPartitionByIdClause(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.PartitionByIdClause(($t=this.IdKeyword)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.Value)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.PartitionScope",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.PartitionScope}},InKeyword:null,Expression:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(inKeyword,expression,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.InKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,inKeyword);this.Expression=this.Attach(Kusto.Language.Syntax.Expression,expression);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.InKeyword;case 1:return this.Expression;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"InKeyword";case 1:return"Expression";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;case 1:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitPartitionScope(this)},Accept:function(TResult,visitor){return visitor.VisitPartitionScope(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.PartitionScope(($t=this.InKeyword)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.Expression)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.PatternMatch",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.PatternMatch}},ParameterValues:null,PathValue:null,EqualToken:null,Body:null,SemicolonToken:null,ChildCount:{get:function(){return 5}}},ctors:{ctor:function(parameterValues,pathValue,equalToken,body,semicolonToken,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.ParameterValues=this.Attach(Kusto.Language.Syntax.ExpressionList,parameterValues);this.PathValue=this.Attach(Kusto.Language.Syntax.PatternPathValue,pathValue,!0);this.EqualToken=this.Attach(Kusto.Language.Syntax.SyntaxToken,equalToken);this.Body=this.Attach(Kusto.Language.Syntax.FunctionBody,body);this.SemicolonToken=this.Attach(Kusto.Language.Syntax.SyntaxToken,semicolonToken);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.ParameterValues;case 1:return this.PathValue;case 2:return this.EqualToken;case 3:return this.Body;case 4:return this.SemicolonToken;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"ParameterValues";case 1:return"PathValue";case 2:return"EqualToken";case 3:return"Body";case 4:return"SemicolonToken";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 1:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;case 1:return Kusto.Language.Editor.CompletionHint.Clause;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;case 3:return Kusto.Language.Editor.CompletionHint.Clause;case 4:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitPatternMatch(this)},Accept:function(TResult,visitor){return visitor.VisitPatternMatch(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3,$t4;return new Kusto.Language.Syntax.PatternMatch(Bridge.cast(($t=this.ParameterValues)!=null?$t.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.ExpressionList),Bridge.cast(($t1=this.PathValue)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.PatternPathValue),($t2=this.EqualToken)!=null?$t2.Clone$1(includeDiagnostics):null,Bridge.cast(($t3=this.Body)!=null?$t3.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.FunctionBody),($t4=this.SemicolonToken)!=null?$t4.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.PatternPathParameter",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.PatternPathParameter}},OpenBracket:null,Parameter:null,CloseBracket:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(openBracket,parameter,closeBracket,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.OpenBracket=this.Attach(Kusto.Language.Syntax.SyntaxToken,openBracket);this.Parameter=this.Attach(Kusto.Language.Syntax.NameAndTypeDeclaration,parameter);this.CloseBracket=this.Attach(Kusto.Language.Syntax.SyntaxToken,closeBracket);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.OpenBracket;case 1:return this.Parameter;case 2:return this.CloseBracket;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"OpenBracket";case 1:return"Parameter";case 2:return"CloseBracket";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitPatternPathParameter(this)},Accept:function(TResult,visitor){return visitor.VisitPatternPathParameter(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.PatternPathParameter(($t=this.OpenBracket)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.Parameter)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.NameAndTypeDeclaration),($t2=this.CloseBracket)!=null?$t2.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.PatternPathValue",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.PatternPathValue}},DotToken:null,OpenBracket:null,Value:null,CloseBracket:null,ChildCount:{get:function(){return 4}}},ctors:{ctor:function(dotToken,openBracket,value,closeBracket,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.DotToken=this.Attach(Kusto.Language.Syntax.SyntaxToken,dotToken);this.OpenBracket=this.Attach(Kusto.Language.Syntax.SyntaxToken,openBracket);this.Value=this.Attach(Kusto.Language.Syntax.Expression,value);this.CloseBracket=this.Attach(Kusto.Language.Syntax.SyntaxToken,closeBracket);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.DotToken;case 1:return this.OpenBracket;case 2:return this.Value;case 3:return this.CloseBracket;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"DotToken";case 1:return"OpenBracket";case 2:return"Value";case 3:return"CloseBracket";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Scalar;case 3:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitPatternPathValue(this)},Accept:function(TResult,visitor){return visitor.VisitPatternPathValue(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3;return new Kusto.Language.Syntax.PatternPathValue(($t=this.DotToken)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.OpenBracket)!=null?$t1.Clone$1(includeDiagnostics):null,Bridge.cast(($t2=this.Value)!=null?$t2.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),($t3=this.CloseBracket)!=null?$t3.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.ProjectClause",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ProjectClause}},ProjectKeyword:null,Expressions:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(projectKeyword,expressions,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.ProjectKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,projectKeyword);this.Expressions=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),expressions);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.ProjectKeyword;case 1:return this.Expressions;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"ProjectKeyword";case 1:return"Expressions";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitProjectClause(this)},Accept:function(TResult,visitor){return visitor.VisitProjectClause(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.ProjectClause(($t=this.ProjectKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Expressions)!=null?$t1.Clone$2(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.QueryBlock",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.QueryBlock}},Statements:null,SkippedTokens:null,EndOfQuery:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(statements,skippedTokens,endOfQuery,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.Statements=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)),statements);this.SkippedTokens=this.Attach(Kusto.Language.Syntax.SkippedTokens,skippedTokens,!0);this.EndOfQuery=this.Attach(Kusto.Language.Syntax.SyntaxToken,endOfQuery,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Statements;case 1:return this.SkippedTokens;case 2:return this.EndOfQuery;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Statements";case 1:return"SkippedTokens";case 2:return"EndOfQuery";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 1:case 2:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Tabular;case 1:return Kusto.Language.Editor.CompletionHint.None;case 2:return Kusto.Language.Editor.CompletionHint.None;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitQueryBlock(this)},Accept:function(TResult,visitor){return visitor.VisitQueryBlock(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.QueryBlock(($t=this.Statements)!=null?$t.Clone$2(includeDiagnostics):null,Bridge.cast(($t1=this.SkippedTokens)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.SkippedTokens),($t2=this.EndOfQuery)!=null?$t2.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.RenameList",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.RenameList}},OpenParen:null,Names:null,CloseParen:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(openParen,names,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.OpenParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,openParen);this.Names=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NameDeclaration)),names);this.CloseParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.OpenParen;case 1:return this.Names;case 2:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"OpenParen";case 1:return"Names";case 2:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;case 1:return Kusto.Language.Editor.CompletionHint.Declaration;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitRenameList(this)},Accept:function(TResult,visitor){return visitor.VisitRenameList(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.RenameList(($t=this.OpenParen)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Names)!=null?$t1.Clone$2(includeDiagnostics):null,($t2=this.CloseParen)!=null?$t2.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.RowSchema",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.RowSchema}},OpenParen:null,LeadingComma:null,Columns:null,CloseParen:null,ChildCount:{get:function(){return 4}}},ctors:{ctor:function(openParen,leadingComma,columns,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.OpenParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,openParen);this.LeadingComma=this.Attach(Kusto.Language.Syntax.SyntaxToken,leadingComma,!0);this.Columns=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NameAndTypeDeclaration)),columns);this.CloseParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.OpenParen;case 1:return this.LeadingComma;case 2:return this.Columns;case 3:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"OpenParen";case 1:return"LeadingComma";case 2:return"Columns";case 3:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 1:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Declaration;case 3:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitRowSchema(this)},Accept:function(TResult,visitor){return visitor.VisitRowSchema(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3;return new Kusto.Language.Syntax.RowSchema(($t=this.OpenParen)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.LeadingComma)!=null?$t1.Clone$1(includeDiagnostics):null,($t2=this.Columns)!=null?$t2.Clone$2(includeDiagnostics):null,($t3=this.CloseParen)!=null?$t3.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.ScanAssignment",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ScanAssignment}},Name:null,EqualToken:null,Expression:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(name,equalToken,expression,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.Name=this.Attach(Kusto.Language.Syntax.NameReference,name);this.EqualToken=this.Attach(Kusto.Language.Syntax.SyntaxToken,equalToken);this.Expression=this.Attach(Kusto.Language.Syntax.Expression,expression);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Name;case 1:return this.EqualToken;case 2:return this.Expression;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Name";case 1:return"EqualToken";case 2:return"Expression";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Column;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitScanAssignment(this)},Accept:function(TResult,visitor){return visitor.VisitScanAssignment(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.ScanAssignment(Bridge.cast(($t=this.Name)!=null?$t.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.NameReference),($t1=this.EqualToken)!=null?$t1.Clone$1(includeDiagnostics):null,Bridge.cast(($t2=this.Expression)!=null?$t2.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.ScanComputationClause",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ScanComputationClause}},ArrowToken:null,Assignments:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(arrowToken,assignments,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.ArrowToken=this.Attach(Kusto.Language.Syntax.SyntaxToken,arrowToken);this.Assignments=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.ScanAssignment)),assignments);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.ArrowToken;case 1:return this.Assignments;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"ArrowToken";case 1:return"Assignments";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;case 1:return Kusto.Language.Editor.CompletionHint.Column;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitScanComputationClause(this)},Accept:function(TResult,visitor){return visitor.VisitScanComputationClause(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.ScanComputationClause(($t=this.ArrowToken)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Assignments)!=null?$t1.Clone$2(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.ScanDeclareClause",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ScanDeclareClause}},DeclareKeyword:null,OpenParen:null,Declarations:null,CloseParen:null,ChildCount:{get:function(){return 4}}},ctors:{ctor:function(declareKeyword,openParen,declarations,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.DeclareKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,declareKeyword);this.OpenParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,openParen);this.Declarations=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.FunctionParameter)),declarations);this.CloseParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.DeclareKeyword;case 1:return this.OpenParen;case 2:return this.Declarations;case 3:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"DeclareKeyword";case 1:return"OpenParen";case 2:return"Declarations";case 3:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;case 3:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitScanDeclareClause(this)},Accept:function(TResult,visitor){return visitor.VisitScanDeclareClause(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3;return new Kusto.Language.Syntax.ScanDeclareClause(($t=this.DeclareKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.OpenParen)!=null?$t1.Clone$1(includeDiagnostics):null,($t2=this.Declarations)!=null?$t2.Clone$2(includeDiagnostics):null,($t3=this.CloseParen)!=null?$t3.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.ScanOrderByClause",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ScanOrderByClause}},OrderKeyword:null,ByKeyword:null,Expressions:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(orderKeyword,byKeyword,expressions,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.OrderKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,orderKeyword);this.ByKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,byKeyword);this.Expressions=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),expressions);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.OrderKeyword;case 1:return this.ByKeyword;case 2:return this.Expressions;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"OrderKeyword";case 1:return"ByKeyword";case 2:return"Expressions";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Keyword;case 2:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitScanOrderByClause(this)},Accept:function(TResult,visitor){return visitor.VisitScanOrderByClause(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.ScanOrderByClause(($t=this.OrderKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.ByKeyword)!=null?$t1.Clone$1(includeDiagnostics):null,($t2=this.Expressions)!=null?$t2.Clone$2(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.ScanPartitionByClause",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ScanPartitionByClause}},PartitionKeyword:null,ByKeyword:null,Expressions:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(partitionKeyword,byKeyword,expressions,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.PartitionKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,partitionKeyword);this.ByKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,byKeyword);this.Expressions=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),expressions);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.PartitionKeyword;case 1:return this.ByKeyword;case 2:return this.Expressions;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"PartitionKeyword";case 1:return"ByKeyword";case 2:return"Expressions";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Keyword;case 2:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitScanPartitionByClause(this)},Accept:function(TResult,visitor){return visitor.VisitScanPartitionByClause(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.ScanPartitionByClause(($t=this.PartitionKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.ByKeyword)!=null?$t1.Clone$1(includeDiagnostics):null,($t2=this.Expressions)!=null?$t2.Clone$2(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.ScanStep",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ScanStep}},StepKeyword:null,Name:null,OptionalKeyword:null,ScanStepOutput:null,ColonToken:null,Condition:null,ComputationClause:null,SemicolonToken:null,ChildCount:{get:function(){return 8}}},ctors:{ctor:function(stepKeyword,name,optionalKeyword,scanStepOutput,colonToken,condition,computationClause,semicolonToken,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.StepKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,stepKeyword);this.Name=this.Attach(Kusto.Language.Syntax.NameDeclaration,name);this.OptionalKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,optionalKeyword,!0);this.ScanStepOutput=this.Attach(Kusto.Language.Syntax.ScanStepOutput,scanStepOutput,!0);this.ColonToken=this.Attach(Kusto.Language.Syntax.SyntaxToken,colonToken);this.Condition=this.Attach(Kusto.Language.Syntax.Expression,condition);this.ComputationClause=this.Attach(Kusto.Language.Syntax.ScanComputationClause,computationClause,!0);this.SemicolonToken=this.Attach(Kusto.Language.Syntax.SyntaxToken,semicolonToken);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.StepKeyword;case 1:return this.Name;case 2:return this.OptionalKeyword;case 3:return this.ScanStepOutput;case 4:return this.ColonToken;case 5:return this.Condition;case 6:return this.ComputationClause;case 7:return this.SemicolonToken;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"StepKeyword";case 1:return"Name";case 2:return"OptionalKeyword";case 3:return"ScanStepOutput";case 4:return"ColonToken";case 5:return"Condition";case 6:return"ComputationClause";case 7:return"SemicolonToken";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 2:case 3:case 6:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Keyword;case 3:return Kusto.Language.Editor.CompletionHint.Syntax;case 4:return Kusto.Language.Editor.CompletionHint.Syntax;case 5:return Kusto.Language.Editor.CompletionHint.Scalar;case 6:return Kusto.Language.Editor.CompletionHint.Syntax;case 7:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitScanStep(this)},Accept:function(TResult,visitor){return visitor.VisitScanStep(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3,$t4,$t5,$t6,$t7;return new Kusto.Language.Syntax.ScanStep(($t=this.StepKeyword)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.Name)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.NameDeclaration),($t2=this.OptionalKeyword)!=null?$t2.Clone$1(includeDiagnostics):null,Bridge.cast(($t3=this.ScanStepOutput)!=null?$t3.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.ScanStepOutput),($t4=this.ColonToken)!=null?$t4.Clone$1(includeDiagnostics):null,Bridge.cast(($t5=this.Condition)!=null?$t5.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),Bridge.cast(($t6=this.ComputationClause)!=null?$t6.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.ScanComputationClause),($t7=this.SemicolonToken)!=null?$t7.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.ScanStepOutput",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ScanStepOutput}},OutputKeyword:null,EqualToken:null,OutputKind:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(outputKeyword,equalToken,outputKind,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.OutputKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,outputKeyword);this.EqualToken=this.Attach(Kusto.Language.Syntax.SyntaxToken,equalToken);this.OutputKind=this.Attach(Kusto.Language.Syntax.SyntaxToken,outputKind);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.OutputKeyword;case 1:return this.EqualToken;case 2:return this.OutputKind;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"OutputKeyword";case 1:return"EqualToken";case 2:return"OutputKind";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Keyword;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitScanStepOutput(this)},Accept:function(TResult,visitor){return visitor.VisitScanStepOutput(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.ScanStepOutput(($t=this.OutputKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.EqualToken)!=null?$t1.Clone$1(includeDiagnostics):null,($t2=this.OutputKind)!=null?$t2.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.SeparatedElement",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Element:null,Separator:null,Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.SeparatedElement}},ChildCount:{get:function(){return 2}}},ctors:{ctor:function(element,separator){separator===void 0&&(separator=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,null);this.Element=this.Attach(Kusto.Language.Syntax.SyntaxElement,element);this.Separator=this.Attach(Kusto.Language.Syntax.SyntaxToken,separator,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Element;case 1:return this.Separator;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHint:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Inherit;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;default:throw new System.ArgumentOutOfRangeException.ctor;}},Accept$1:function(visitor){visitor.VisitSeparatedElement(this)},Accept:function(TResult,visitor){return visitor.VisitSeparatedElement(this)}}});Bridge.define("Kusto.Language.Syntax.SkippedTokens",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.SkippedTokens}},Tokens:null,ChildCount:{get:function(){return 1}}},ctors:{ctor:function(tokens,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.Tokens=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SyntaxToken),tokens);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Tokens;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Tokens";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.None;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitSkippedTokens(this)},Accept:function(TResult,visitor){return visitor.VisitSkippedTokens(this)},CloneCore:function(includeDiagnostics){var $t;return new Kusto.Language.Syntax.SkippedTokens(($t=this.Tokens)!=null?$t.Clone$2(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.SyntaxList",{inherits:[Kusto.Language.Syntax.SyntaxNode],fields:{elements:null},props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.List}},ElementType:{get:function(){return null}},Count:{get:function(){return this.elements.length}},ChildCount:{get:function(){return this.Count}}},ctors:{ctor:function(elements,diagnostics){this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.elements=elements;for(var i=0;i<elements.length;i=i+1|0)this.elements[System.Array.index(i,this.elements)]=this.Attach(Kusto.Language.Syntax.SyntaxElement,elements[System.Array.index(i,elements)]);this.Init()}},methods:{getItem:function(index){return this.elements[System.Array.index(index,this.elements)]},GetEnumerator:function(){return Bridge.getEnumerator(Bridge.cast(this.elements,System.Collections.Generic.IEnumerable$1(Kusto.Language.Syntax.SyntaxElement)),Kusto.Language.Syntax.SyntaxElement)},GetChild:function(index){return this.elements[System.Array.index(index,this.elements)]},GetElements:function(){return this.elements},Accept$1:function(visitor){visitor.VisitList(this)},Accept:function(TResult,visitor){return visitor.VisitList(this)}}});Bridge.define("Kusto.Language.Syntax.SyntaxToken.IdentifierToken",{inherits:[Kusto.Language.Syntax.SyntaxToken],$kind:"nested class",fields:{trivia:null,text:null,fullWidth:0},props:{Trivia:{get:function(){return this.trivia}},Text:{get:function(){return this.text}},FullWidth:{get:function(){return this.fullWidth}},Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.IdentifierToken}},Value:{get:function(){return this.Text}}},ctors:{ctor:function(trivia,text,diagnostics){var $t;this.$initialize();Kusto.Language.Syntax.SyntaxToken.ctor.call(this,diagnostics);this.trivia=($t=trivia,$t!=null?$t:"");this.text=text;this.fullWidth=this.trivia.length+this.text.length|0}},methods:{CloneCore:function(includeDiagnostics){return new Kusto.Language.Syntax.SyntaxToken.IdentifierToken(this.Trivia,this.Text,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.SyntaxToken.KindToken",{inherits:[Kusto.Language.Syntax.SyntaxToken],$kind:"nested class",fields:{trivia:null,kind:0,fullWidth:0},props:{Trivia:{get:function(){return this.trivia}},Kind:{get:function(){return this.kind}},FullWidth:{get:function(){return this.fullWidth}},Text:{get:function(){return Kusto.Language.Syntax.SyntaxFacts.GetText(this.Kind)}}},ctors:{ctor:function(trivia,kind,diagnostics){var $t;this.$initialize();Kusto.Language.Syntax.SyntaxToken.ctor.call(this,diagnostics);this.trivia=($t=trivia,$t!=null?$t:"");this.kind=kind;this.fullWidth=this.trivia.length+Kusto.Language.Syntax.SyntaxFacts.GetText(this.Kind).length|0}},methods:{CloneCore:function(includeDiagnostics){return new Kusto.Language.Syntax.SyntaxToken.KindToken(this.Trivia,this.Kind,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.SyntaxToken.LiteralToken",{inherits:[Kusto.Language.Syntax.SyntaxToken],$kind:"nested class",statics:{methods:{GetPrefixLength:function(text){for(var i=0,ch;i<text.length;)if(ch=text.charCodeAt(i),ch===40&&i>0)return i;else if(Kusto.Language.Parsing.TextFacts.IsLetter(ch))i=i+1|0;else return 0;return 0},GetValueSpan:function(text,start,length){start.v=0;var end=text.length,prefixLen=Kusto.Language.Syntax.SyntaxToken.LiteralToken.GetPrefixLength(text);if(prefixLen>0){for(start.v=prefixLen+1|0;start.v<text.length&&Kusto.Language.Parsing.TextFacts.IsWhitespace(text.charCodeAt(start.v));)start.v=start.v+1|0;for(System.String.endsWith(text,")")&&(end=text.length-1|0);end>(start.v+1|0)&&Kusto.Language.Parsing.TextFacts.IsWhitespace(text.charCodeAt(end-1|0));)end=end-1|0}length.v=end-start.v|0},GetValueText:function(text){var start={},length={};return Kusto.Language.Syntax.SyntaxToken.LiteralToken.GetValueSpan(text,start,length),start.v===0&&length.v===text.length?text:text.substr(start.v,length.v)},IsNull:function(text){var start={},length={};return Kusto.Language.Syntax.SyntaxToken.LiteralToken.GetValueSpan(text,start,length),System.String.compare(text.substr(start.v,length.v),"null".substr(0,length.v))===0},GetBooleanValue:function(text){var start={},length={};return Kusto.Language.Syntax.SyntaxToken.LiteralToken.GetValueSpan(text,start,length),System.String.compare(text.substr(start.v,length.v),"true".substr(0,length.v),!0)===0?Bridge.box(!0,System.Boolean,System.Boolean.toString):System.String.compare(text.substr(start.v,length.v),"false".substr(0,length.v),!0)===0?Bridge.box(!1,System.Boolean,System.Boolean.toString):null},GetIntValue:function(text){var valueText=Kusto.Language.Syntax.SyntaxToken.LiteralToken.GetValueText(text),result;switch(valueText){case"min":return-2147483648;case"max":return 2147483647;default:return result={},System.Int32.tryParse(valueText,result),result.v}},GetLongValue:function(text){var valueText=Kusto.Language.Syntax.SyntaxToken.LiteralToken.GetValueText(text),result;switch(valueText){case"min":return System.Int64.MinValue;case"max":return System.Int64.MaxValue;default:return result={},System.Int64.tryParse(valueText,result),result.v}},GetRealValue:function(text){var valueText=Kusto.Language.Syntax.SyntaxToken.LiteralToken.GetValueText(text),result;switch(valueText){case"min":return System.Double.min;case"max":return System.Double.max;default:return result={},System.Double.tryParse(valueText,null,result),result.v}},GetDecimalValue:function(text){var valueText=Kusto.Language.Syntax.SyntaxToken.LiteralToken.GetValueText(text),result;switch(valueText){case"min":return System.Decimal.MinValue;case"max":return System.Decimal.MaxValue;default:return result={},System.Decimal.tryParse(valueText,null,result),result.v}},GetTimeSpanValue:function(text){var valueText=Kusto.Language.Syntax.SyntaxToken.LiteralToken.GetValueText(text),split;switch(valueText){case"min":return System.TimeSpan.minValue;case"max":return System.TimeSpan.maxValue}for(split=0;split<valueText.length&&!System.Char.isLetter(valueText.charCodeAt(split));)split=split+1|0;var numberText=valueText.substr(0,split),wordText=valueText.substr(split),number={};if(System.Double.tryParse(numberText,null,number))switch(wordText){case"s":case"sec":case"second":case"seconds":return System.TimeSpan.fromSeconds(number.v);case"m":case"min":case"minute":case"minutes":return System.TimeSpan.fromMinutes(number.v);case"h":case"hr":case"hrs":case"hour":case"hours":return System.TimeSpan.fromHours(number.v);case"d":case"day":case"days":return System.TimeSpan.fromDays(number.v);case"ms":case"milli":case"millis":case"millisec":case"millisecond":case"milliseconds":return System.TimeSpan.fromMilliseconds(number.v);case"micro":case"micros":case"microsec":case"microsecond":case"microseconds":return System.TimeSpan.fromSeconds(number.v/1e6);case"nano":case"nanos":case"nanosec":case"nanosecond":case"nanoseconds":return System.TimeSpan.fromSeconds(number.v/1e9);case"tick":case"ticks":return System.TimeSpan.fromTicks(Bridge.Int.clip64(number.v))}return System.TimeSpan.fromSeconds(0)},GetDateTimeValue:function(text){var valueText=Kusto.Language.Syntax.SyntaxToken.LiteralToken.GetValueText(text),result;switch(valueText){case"min":return System.DateTime.getMinValue();case"max":return System.DateTime.getMaxValue();default:return result={},System.DateTime.tryParse(valueText,null,result),result.v}},GetGuidValue:function(text){var valueText=Kusto.Language.Syntax.SyntaxToken.LiteralToken.GetValueText(text),result={v:new System.Guid};return System.Guid.TryParse(valueText,result),result.v}}},fields:{trivia:null,text:null,kind:0,fullWidth:0,value:null,valueText:null},props:{Trivia:{get:function(){return this.trivia}},Text:{get:function(){return this.text}},Kind:{get:function(){return this.kind}},FullWidth:{get:function(){return this.fullWidth}},IsLiteral:{get:function(){return!0}},Value:{get:function(){return this.value==null&&(this.value=this.GetValue()),this.value}},ValueText:{get:function(){return this.valueText==null&&(this.valueText=Kusto.Language.Syntax.SyntaxToken.LiteralToken.GetPrefixLength(this.Text)>0?Kusto.Language.Syntax.SyntaxToken.LiteralToken.GetValueText(this.Text):this.Kind===Kusto.Language.Syntax.SyntaxKind.StringLiteralToken?Bridge.cast(this.Value,System.String):this.Text),this.valueText}},Prefix:{get:function(){var prefixLen=Kusto.Language.Syntax.SyntaxToken.LiteralToken.GetPrefixLength(this.Text);return prefixLen>0?this.Text.substr(0,prefixLen):""}}},ctors:{ctor:function(trivia,text,kind,diagnostics){var $t;this.$initialize();Kusto.Language.Syntax.SyntaxToken.ctor.call(this,diagnostics);this.trivia=($t=trivia,$t!=null?$t:"");this.text=text;this.kind=kind;this.fullWidth=this.trivia.length+this.text.length|0}},methods:{CloneCore:function(includeDiagnostics){return new Kusto.Language.Syntax.SyntaxToken.LiteralToken(this.Trivia,this.Text,this.Kind,includeDiagnostics?this.SyntaxDiagnostics:null)},GetValue:function(){if(this.Kind!==Kusto.Language.Syntax.SyntaxKind.StringLiteralToken&&Kusto.Language.Syntax.SyntaxToken.LiteralToken.IsNull(this.Text))return null;switch(this.Kind){case Kusto.Language.Syntax.SyntaxKind.BooleanLiteralToken:return Kusto.Language.Syntax.SyntaxToken.LiteralToken.GetBooleanValue(this.Text);case Kusto.Language.Syntax.SyntaxKind.IntLiteralToken:return Bridge.box(Kusto.Language.Syntax.SyntaxToken.LiteralToken.GetIntValue(this.Text),System.Int32);case Kusto.Language.Syntax.SyntaxKind.LongLiteralToken:return Kusto.Language.Syntax.SyntaxToken.LiteralToken.GetLongValue(this.Text);case Kusto.Language.Syntax.SyntaxKind.RealLiteralToken:return Bridge.box(Kusto.Language.Syntax.SyntaxToken.LiteralToken.GetRealValue(this.Text),System.Double,System.Double.format,System.Double.getHashCode);case Kusto.Language.Syntax.SyntaxKind.DecimalLiteralToken:return Kusto.Language.Syntax.SyntaxToken.LiteralToken.GetDecimalValue(this.Text);case Kusto.Language.Syntax.SyntaxKind.TimespanLiteralToken:return Kusto.Language.Syntax.SyntaxToken.LiteralToken.GetTimeSpanValue(this.Text);case Kusto.Language.Syntax.SyntaxKind.DateTimeLiteralToken:return Bridge.box(Kusto.Language.Syntax.SyntaxToken.LiteralToken.GetDateTimeValue(this.Text),System.DateTime,System.DateTime.format);case Kusto.Language.Syntax.SyntaxKind.GuidLiteralToken:case Kusto.Language.Syntax.SyntaxKind.RawGuidLiteralToken:return Kusto.Language.Syntax.SyntaxToken.LiteralToken.GetGuidValue(this.Text);case Kusto.Language.Syntax.SyntaxKind.StringLiteralToken:return Kusto.Language.KustoFacts.GetStringLiteralValue(this.Text);default:throw new System.InvalidOperationException.$ctor1(System.String.format("Unhandled literal syntax kind: {0}",[Bridge.box(this.Kind,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))]));}}}});Bridge.define("Kusto.Language.Syntax.SyntaxToken.MissingToken",{inherits:[Kusto.Language.Syntax.SyntaxToken],$kind:"nested class",fields:{trivia:null,kind:0},props:{Trivia:{get:function(){return this.trivia}},Kind:{get:function(){return this.kind}},FullWidth:{get:function(){return this.trivia.length}},Text:{get:function(){return""}},IsMissing:{get:function(){return!0}}},ctors:{ctor:function(trivia,kind,diagnostics){this.$initialize();Kusto.Language.Syntax.SyntaxToken.ctor.call(this,diagnostics);this.trivia=trivia;this.kind=kind}},methods:{CloneCore:function(includeDiagnostics){return new Kusto.Language.Syntax.SyntaxToken.MissingToken(this.Trivia,this.Kind,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.SyntaxToken.TextAndKindToken",{inherits:[Kusto.Language.Syntax.SyntaxToken],$kind:"nested class",fields:{trivia:null,text:null,valueText:null,kind:0,fullWidth:0},props:{Trivia:{get:function(){return this.trivia}},Text:{get:function(){return this.text}},ValueText:{get:function(){return this.valueText}},Value:{get:function(){return this.valueText}},Kind:{get:function(){return this.kind}},FullWidth:{get:function(){return this.fullWidth}}},ctors:{ctor:function(trivia,text,valueText,kind,diagnostics){var $t,$t1;this.$initialize();Kusto.Language.Syntax.SyntaxToken.ctor.call(this,diagnostics);this.trivia=($t=trivia,$t!=null?$t:"");this.text=text;this.valueText=($t1=valueText,$t1!=null?$t1:text);this.kind=kind;this.fullWidth=this.trivia.length+this.text.length|0}},methods:{CloneCore:function(includeDiagnostics){return new Kusto.Language.Syntax.SyntaxToken.TextAndKindToken(this.Trivia,this.Text,this.ValueText,this.Kind,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.ToTypeOfClause",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ToTypeOfClause}},ToKeyword:null,TypeOf:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(toKeyword,typeOf,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.ToKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,toKeyword);this.TypeOf=this.Attach(Kusto.Language.Syntax.TypeOfLiteralExpression,typeOf);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.ToKeyword;case 1:return this.TypeOf;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"ToKeyword";case 1:return"TypeOf";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Keyword;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitToTypeOfClause(this)},Accept:function(TResult,visitor){return visitor.VisitToTypeOfClause(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.ToTypeOfClause(($t=this.ToKeyword)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.TypeOf)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.TypeOfLiteralExpression),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.WhereClause",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.WhereClause}},WhereKeyword:null,Condition:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(whereKeyword,condition,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.WhereKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,whereKeyword);this.Condition=this.Attach(Kusto.Language.Syntax.Expression,condition);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.WhereKeyword;case 1:return this.Condition;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"WhereKeyword";case 1:return"Condition";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Boolean;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitWhereClause(this)},Accept:function(TResult,visitor){return visitor.VisitWhereClause(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.WhereClause(($t=this.WhereKeyword)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.Condition)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Parsing.ApplyParser$3",function(TInput,TLeft,TOutput){return{inherits:[Kusto.Language.Parsing.ListPrimaryParser$2(TInput,TOutput)],props:{LeftParser:null,RightParser:null,ApplyKind:0,ChildParserCount:{get:function(){return 2}}},ctors:{ctor:function(kind,leftParser,rightParser){this.$initialize();Kusto.Language.Parsing.ListPrimaryParser$2(TInput,TOutput).ctor.call(this);this.LeftParser=leftParser;this.RightParser=rightParser;this.ApplyKind=kind},$ctor1:function(kind,leftParser,rightParser){Kusto.Language.Parsing.ApplyParser$3(TInput,TLeft,TOutput).ctor.call(this,kind,leftParser,rightParser.Parser)}},methods:{GetChildParser:function(index){switch(index){case 0:return this.LeftParser;case 1:return this.RightParser;default:return null}},Accept$2:function(visitor){visitor.VisitApply(TLeft,TOutput,this)},Accept:function(TResult,visitor){return visitor.VisitApply(TLeft,TOutput,this)},Accept$1:function(TArg,TResult,visitor,arg){return visitor.VisitApply(TLeft,TOutput,this,arg)},Clone:function(){return new(Kusto.Language.Parsing.ApplyParser$3(TInput,TLeft,TOutput).ctor)(this.ApplyKind,this.LeftParser,this.RightParser)},Parse:function(source,inputStart,output,outputStart){var leftOriginalOutputCount=output.Count,leftLength=this.LeftParser.Parse(source,inputStart,output,outputStart),rightOriginalOutputCount,rightLength;if(leftLength<0)return leftLength;for(rightOriginalOutputCount=output.Count;;)if(rightLength=this.RightParser.Parse(source,inputStart+leftLength|0,output,outputStart),rightLength<0)return this.ApplyKind===Kusto.Language.Parsing.ApplyKind.One?(Kusto.Language.Utils.ListExtensions.SetCount(System.Object,output,leftOriginalOutputCount),(-leftLength|0)+rightLength|0):(Kusto.Language.Utils.ListExtensions.SetCount(System.Object,output,rightOriginalOutputCount),leftLength);else if(leftLength=leftLength+rightLength|0,this.ApplyKind!==Kusto.Language.Parsing.ApplyKind.ZeroOrMore)return leftLength},Scan:function(source,start){var leftLen=this.LeftParser.Scan(source,start),rightLen;if(leftLen<0)return leftLen;for(;;)if(rightLen=this.RightParser.Scan(source,start+leftLen|0),rightLen<0)return this.ApplyKind===Kusto.Language.Parsing.ApplyKind.One?(-leftLen|0)+rightLen|0:leftLen;else if(leftLen=leftLen+rightLen|0,this.ApplyKind!==Kusto.Language.Parsing.ApplyKind.ZeroOrMore)return leftLen}}}});Bridge.define("Kusto.Language.Parsing.ConvertParser$2",function(TInput,TOutput){return{inherits:[Kusto.Language.Parsing.ResultPrimaryParser$2(TInput,TOutput)],statics:{fields:{s_inputListPool:null},ctors:{init:function(){this.s_inputListPool=new(Kusto.Language.Utils.ObjectPool$1(System.Collections.Generic.List$1(TInput)))(function(){return new(System.Collections.Generic.List$1(TInput).ctor)},function(list){list.clear()})}}},props:{Pattern:null,ListProducer:null,SingleProducer:null,ChildParserCount:{get:function(){return 1}}},ctors:{$ctor1:function(pattern,listProducer,singleProducer){this.$initialize();Kusto.Language.Parsing.ResultPrimaryParser$2(TInput,TOutput).ctor.call(this);this.Pattern=pattern;this.ListProducer=listProducer;this.SingleProducer=singleProducer},ctor:function(pattern,producer){Kusto.Language.Parsing.ConvertParser$2(TInput,TOutput).$ctor1.call(this,pattern,producer,null)},$ctor3:function(pattern,producer){Kusto.Language.Parsing.ConvertParser$2(TInput,TOutput).$ctor1.call(this,pattern,function(source,start,length){var values=Kusto.Language.Parsing.ConvertParser$2(TInput,TOutput).s_inputListPool.AllocateFromPool(),i;try{for(i=0;i<length;i=i+1|0)values.add(source.Peek(start+i|0));return producer(values)}finally{Kusto.Language.Parsing.ConvertParser$2(TInput,TOutput).s_inputListPool.ReturnToPool(values)}},null)},$ctor2:function(pattern,producer){Kusto.Language.Parsing.ConvertParser$2(TInput,TOutput).$ctor1.call(this,pattern,null,producer)}},methods:{GetChildParser:function(index){return index===0?this.Pattern:null},Accept$2:function(visitor){visitor.VisitConvert(TOutput,this)},Accept:function(TResult,visitor){return visitor.VisitConvert(TOutput,this)},Accept$1:function(TArg,TResult,visitor,arg){return visitor.VisitConvert(TOutput,this,arg)},Clone:function(){return new(Kusto.Language.Parsing.ConvertParser$2(TInput,TOutput).$ctor1)(this.Pattern,this.ListProducer,this.SingleProducer)},Parse$1:function(source,start){var length=this.Pattern.Scan(source,start),value;return length<0?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(length,Bridge.getDefaultValue(TOutput)):(value=this.Produce(source,start,length),new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(length,value))},Produce:function(source,start,length){return Bridge.staticEquals(this.SingleProducer,null)?this.ListProducer(source,start,length):this.SingleProducer(source.Peek(start))},Scan:function(source,start){return this.Pattern.Scan(source,start)}}}});Bridge.define("Kusto.Language.Parsing.ForwardParser$2",function(TInput,TOutput){return{inherits:[Kusto.Language.Parsing.ListPrimaryParser$2(TInput,TOutput)],statics:{fields:{MaxCallDepth:0,s_callDepth:0},ctors:{init:function(){this.MaxCallDepth=30}}},props:{DeferredParser:null,IsForward:{get:function(){return!0}},ChildParserCount:{get:function(){return 1}}},ctors:{ctor:function(deferredParser){this.$initialize();Kusto.Language.Parsing.ListPrimaryParser$2(TInput,TOutput).ctor.call(this);this.DeferredParser=deferredParser}},methods:{GetChildParser:function(index){return index===0?this.DeferredParser():null},Accept$2:function(visitor){visitor.VisitForward(TOutput,this)},Accept:function(TResult,visitor){return visitor.VisitForward(TOutput,this)},Accept$1:function(TArg,TResult,visitor,arg){return visitor.VisitForward(TOutput,this,arg)},Clone:function(){return new(Kusto.Language.Parsing.ForwardParser$2(TInput,TOutput))(this.DeferredParser)},Parse$1:function(source,start){try{return(Kusto.Language.Parsing.ForwardParser$2(TInput,TOutput).s_callDepth=Kusto.Language.Parsing.ForwardParser$2(TInput,TOutput).s_callDepth+1|0,Kusto.Language.Parsing.ForwardParser$2(TInput,TOutput).s_callDepth>Kusto.Language.Parsing.ForwardParser$2(TInput,TOutput).MaxCallDepth)?Kusto.Language.Parsing.ListPrimaryParser$2(TInput,TOutput).prototype.Parse$1.call(this,source,start):this.DeferredParser().Parse$1(source,start)}finally{Kusto.Language.Parsing.ForwardParser$2(TInput,TOutput).s_callDepth=Kusto.Language.Parsing.ForwardParser$2(TInput,TOutput).s_callDepth-1|0}},Parse:function(source,inputStart,output,outputStart){try{return(Kusto.Language.Parsing.ForwardParser$2(TInput,TOutput).s_callDepth=Kusto.Language.Parsing.ForwardParser$2(TInput,TOutput).s_callDepth+1|0,Kusto.Language.Parsing.ForwardParser$2(TInput,TOutput).s_callDepth>Kusto.Language.Parsing.ForwardParser$2(TInput,TOutput).MaxCallDepth)?Kusto.Language.Parsing.SafeParser.ParseSafe(TInput,this.DeferredParser(),source,inputStart,output,outputStart):this.DeferredParser().Parse(source,inputStart,output,outputStart)}finally{Kusto.Language.Parsing.ForwardParser$2(TInput,TOutput).s_callDepth=Kusto.Language.Parsing.ForwardParser$2(TInput,TOutput).s_callDepth-1|0}},Scan:function(source,start){try{return(Kusto.Language.Parsing.ForwardParser$2(TInput,TOutput).s_callDepth=Kusto.Language.Parsing.ForwardParser$2(TInput,TOutput).s_callDepth+1|0,Kusto.Language.Parsing.ForwardParser$2(TInput,TOutput).s_callDepth>Kusto.Language.Parsing.ForwardParser$2(TInput,TOutput).MaxCallDepth)?Kusto.Language.Parsing.SafeScanner.ScanSafe(TInput,this.DeferredParser(),source,start):this.DeferredParser().Scan(source,start)}finally{Kusto.Language.Parsing.ForwardParser$2(TInput,TOutput).s_callDepth=Kusto.Language.Parsing.ForwardParser$2(TInput,TOutput).s_callDepth-1|0}}}}});Bridge.define("Kusto.Language.Parsing.MapParser$2",function(TInput,TOutput){return{inherits:[Kusto.Language.Parsing.ResultPrimaryParser$2(TInput,TOutput)],fields:{root:null},props:{IsMatch:{get:function(){return!0}},ChildParserCount:{get:function(){return 0}}},ctors:{ctor:function(root){this.$initialize();Kusto.Language.Parsing.ResultPrimaryParser$2(TInput,TOutput).ctor.call(this);this.root=root},$ctor1:function(keyValuePairs){Kusto.Language.Parsing.MapParser$2(TInput,TOutput).ctor.call(this,Kusto.Language.Parsing.MapParser$2.Node(TInput,TOutput).From(keyValuePairs))}},methods:{GetChildParser:function(index){return null},Accept$2:function(visitor){visitor.VisitMap(TOutput,this)},Accept:function(TResult,visitor){return visitor.VisitMap(TOutput,this)},Accept$1:function(TArg,TResult,visitor,arg){return visitor.VisitMap(TOutput,this,arg)},Clone:function(){return new(Kusto.Language.Parsing.MapParser$2(TInput,TOutput).ctor)(this.root)},Parse$1:function(source,start){for(var node=this.root,length=0,bestLength=-1,bestOutput=null,input,subNode,bestValue;;){if(source.IsEnd(start+length|0))break;if(input=source.Peek(start+length|0),subNode={},node.TryGetValueNode(input,subNode))length=length+1|0,subNode.v.HasValue&&(bestLength=length,bestOutput=subNode.v.Value),node=subNode.v;else break}return bestLength>0?(bestValue=bestOutput(),new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(bestLength,bestValue)):new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(bestLength,Bridge.getDefaultValue(TOutput))},Scan:function(source,start){for(var node=this.root,length=0,bestLength=-1,input,subNode;;){if(source.IsEnd(start+length|0))break;if(input=source.Peek(start+length|0),subNode={},node.TryGetValueNode(input,subNode))length=length+1|0,subNode.v.HasValue&&(bestLength=length),node=subNode.v;else break}return bestLength}}}});Bridge.define("Kusto.Language.Parsing.ProduceParser$2",function(TInput,TProducer){return{inherits:[Kusto.Language.Parsing.ListPrimaryParser$2(TInput,TProducer)],props:{Parser:null,Producer:null,ChildParserCount:{get:function(){return 1}}},ctors:{ctor:function(parser,producer){this.$initialize();Kusto.Language.Parsing.ListPrimaryParser$2(TInput,TProducer).ctor.call(this);this.Parser=parser;this.Producer=producer}},methods:{GetChildParser:function(index){return index===0?this.Parser:null},Accept$2:function(visitor){visitor.VisitProduce(TProducer,this)},Accept:function(TResult,visitor){return visitor.VisitProduce(TProducer,this)},Accept$1:function(TArg,TResult,visitor,arg){return visitor.VisitProduce(TProducer,this,arg)},Clone:function(){return new(Kusto.Language.Parsing.ProduceParser$2(TInput,TProducer))(this.Parser,this.Producer)},Parse:function(source,inputStart,output,outputStart){var originalOutputCount=output.Count,length=this.Parser.Parse(source,inputStart,output,outputStart);return this.Produce(output,outputStart,originalOutputCount,length)},Produce:function(output,outputStart,originalOutputCount,inputLength){if(inputLength>=0){var value=this.Producer(output,outputStart);Kusto.Language.Utils.ListExtensions.SetCount(System.Object,output,outputStart);output.add(value)}else Kusto.Language.Utils.ListExtensions.SetCount(System.Object,output,originalOutputCount);return inputLength},Scan:function(source,start){return this.Parser.Scan(source,start)}}}});Bridge.define("Kusto.Language.Parsing.RuleParser$2",function(TInput,TProducer){return{inherits:[Kusto.Language.Parsing.ListPrimaryParser$2(TInput,TProducer)],fields:{_parsers:null},props:{Parsers:{get:function(){return this._parsers}},ListProducer:null,ResultProducer:null,IsSequence:{get:function(){return!0}},ChildParserCount:{get:function(){return this._parsers.length}}},ctors:{ctor:function(parsers,listProducer,resultProducer){resultProducer===void 0&&(resultProducer=null);var $t;this.$initialize();Kusto.Language.Parsing.ListPrimaryParser$2(TInput,TProducer).ctor.call(this);this._parsers=($t=Kusto.Language.Parsing.Parser$1(TInput),System.Linq.Enumerable.from(parsers,$t).ToArray($t));this.ListProducer=listProducer;this.ResultProducer=resultProducer}},methods:{GetChildParser:function(index){return index>=0&&index<this._parsers.length?this._parsers[System.Array.index(index,this._parsers)]:null},Accept$2:function(visitor){visitor.VisitRule(TProducer,this)},Accept:function(TResult,visitor){return visitor.VisitRule(TProducer,this)},Accept$1:function(TArg,TResult,visitor,arg){return visitor.VisitRule(TProducer,this,arg)},Clone:function(){return new(Kusto.Language.Parsing.RuleParser$2(TInput,TProducer))(this.Parsers,this.ListProducer,this.ResultProducer)},Scan:function(source,start){for(var parser,n,len=0,i=0;i<this._parsers.length;i=i+1|0){if(parser=this._parsers[System.Array.index(i,this._parsers)],n=parser.Scan(source,start+len|0),n<0)return n-len|0;len=len+n|0}return len},Parse$1:function(source,start){return Bridge.staticEquals(this.ResultProducer,null)?Kusto.Language.Parsing.ListPrimaryParser$2(TInput,TProducer).prototype.Parse$1.call(this,source,start):this.ResultProducer(source,start)},Parse:function(input,inputStart,output,outputStart){for(var parser,n,value,length=0,originalOutputCount=output.Count,i=0;i<this._parsers.length;i=i+1|0){if(parser=this._parsers[System.Array.index(i,this._parsers)],n=parser.Parse(input,inputStart+length|0,output,output.Count),n<0)return Kusto.Language.Utils.ListExtensions.SetCount(System.Object,output,originalOutputCount),n-length|0;length=length+n|0}return value=this.ListProducer(output,outputStart),Kusto.Language.Utils.ListExtensions.SetCount(System.Object,output,outputStart),output.add(value),length}}}});Bridge.define("Kusto.Language.Symbols.DynamicSymbol",{inherits:[Kusto.Language.Symbols.ScalarSymbol],ctors:{ctor:function(name){this.$initialize();Kusto.Language.Symbols.ScalarSymbol.ctor.call(this,name)}}});Bridge.define("Kusto.Language.Symbols.ExternalTableSymbol",{inherits:[Kusto.Language.Symbols.TableSymbol],ctors:{$ctor2:function(name,state,columns,description){this.$initialize();Kusto.Language.Symbols.TableSymbol.$ctor5.call(this,name,state,columns,description)},ctor:function(sourceTable){this.$initialize();Kusto.Language.Symbols.TableSymbol.$ctor1.call(this,sourceTable)},$ctor3:function(name,columns,description){description===void 0&&(description=null);Kusto.Language.Symbols.ExternalTableSymbol.$ctor2.call(this,name,Kusto.Language.Symbols.TableSymbol.TableState.None,columns,description)},$ctor1:function(name,columns){columns===void 0&&(columns=[]);Kusto.Language.Symbols.ExternalTableSymbol.$ctor3.call(this,name,Bridge.cast(columns,System.Collections.Generic.IEnumerable$1(Kusto.Language.Symbols.ColumnSymbol)))},$ctor4:function(name,columns,description){description===void 0&&(description=null);Kusto.Language.Symbols.ExternalTableSymbol.$ctor3.call(this,name,Kusto.Language.Symbols.TableSymbol.From(columns).Columns,description)}},methods:{Create:function(name,state,columns,description){return new Kusto.Language.Symbols.ExternalTableSymbol.$ctor2(name,state,columns,description)}}});Bridge.define("Kusto.Language.Symbols.MaterializedViewSymbol",{inherits:[Kusto.Language.Symbols.TableSymbol],props:{MaterializedViewQuery:null,MaterializedViewKind:0},ctors:{$ctor1:function(name,state,columns,description,query){this.$initialize();Kusto.Language.Symbols.TableSymbol.$ctor5.call(this,name,state,columns,description);this.MaterializedViewQuery=query},ctor:function(sourceTable,query){query===void 0&&(query=null);this.$initialize();Kusto.Language.Symbols.TableSymbol.$ctor1.call(this,sourceTable);this.MaterializedViewQuery=query},$ctor2:function(name,columns,query,description){description===void 0&&(description=null);Kusto.Language.Symbols.MaterializedViewSymbol.$ctor1.call(this,name,Kusto.Language.Symbols.TableSymbol.TableState.None,columns,description,query)},$ctor3:function(name,columns,query,description){description===void 0&&(description=null);Kusto.Language.Symbols.MaterializedViewSymbol.$ctor2.call(this,name,Kusto.Language.Symbols.TableSymbol.From(columns).Columns,query,description)}},methods:{Create:function(name,state,columns,description){return new Kusto.Language.Symbols.MaterializedViewSymbol.$ctor1(name,state,columns,description,this.MaterializedViewQuery)}}});Bridge.define("Kusto.Language.Symbols.PrimitiveSymbol",{inherits:[Kusto.Language.Symbols.ScalarSymbol],fields:{_aliases:null,_flags:0,_widerThan:null},props:{Kind:{get:function(){return Kusto.Language.Symbols.SymbolKind.Primitive}},Aliases:{get:function(){return this._aliases}},IsInteger:{get:function(){return(this._flags&Kusto.Language.Symbols.ScalarFlags.Integer)!=0}},IsNumeric:{get:function(){return(this._flags&Kusto.Language.Symbols.ScalarFlags.Numeric)!=0}},IsInterval:{get:function(){return(this._flags&Kusto.Language.Symbols.ScalarFlags.Interval)!=0}},IsSummable:{get:function(){return(this._flags&Kusto.Language.Symbols.ScalarFlags.Summable)!=0}},IsOrderable:{get:function(){return(this._flags&Kusto.Language.Symbols.ScalarFlags.Orderable)!=0}}},ctors:{ctor:function(name,aliases,flags,widerThan){aliases===void 0&&(aliases=null);flags===void 0&&(flags=0);widerThan===void 0&&(widerThan=null);this.$initialize();Kusto.Language.Symbols.ScalarSymbol.ctor.call(this,name);this._aliases=Kusto.Language.Utils.ArgumentCheckers.CheckArgumentNullOrElementNull(System.String,Kusto.Language.Utils.ListExtensions.ToReadOnly(System.String,aliases),"aliases");this._flags=flags;this._widerThan=Kusto.Language.Utils.ArgumentCheckers.CheckArgumentNullOrElementNull(Kusto.Language.Symbols.ScalarSymbol,Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Symbols.ScalarSymbol,widerThan),"widerThan")}},methods:{IsWiderThan:function(scalar){for(var i=0;i<System.Array.getCount(this._widerThan,Kusto.Language.Symbols.ScalarSymbol);i=i+1|0)if(Bridge.referenceEquals(System.Array.getItem(this._widerThan,i,Kusto.Language.Symbols.ScalarSymbol),scalar))return!0;return!1}}});Bridge.define("Kusto.Language.Symbols.TupleSymbol",{inherits:[Kusto.Language.Symbols.ScalarSymbol],statics:{fields:{Empty:null},ctors:{init:function(){this.Empty=new Kusto.Language.Symbols.TupleSymbol.ctor(null)}},methods:{From:function(schema){return Kusto.Language.Symbols.ScalarTypes.GetTuple$2(schema)}}},props:{Columns:null,Members:{get:function(){return this.Columns}},Kind:{get:function(){return Kusto.Language.Symbols.SymbolKind.Tuple}},RelatedTable:null,IsReducibleToScalar:{get:function(){return System.Array.getCount(this.Columns,Kusto.Language.Symbols.ColumnSymbol)===1&&this.RelatedTable==null}}},ctors:{$ctor1:function(columns,relatedTable){relatedTable===void 0&&(relatedTable=null);this.$initialize();Kusto.Language.Symbols.ScalarSymbol.ctor.call(this,"tuple");this.Columns=Kusto.Language.Utils.ArgumentCheckers.CheckArgumentNullOrElementNull(Kusto.Language.Symbols.ColumnSymbol,Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Symbols.ColumnSymbol,columns),"columns");this.RelatedTable=relatedTable},ctor:function(columns){columns===void 0&&(columns=[]);Kusto.Language.Symbols.TupleSymbol.$ctor1.call(this,Bridge.cast(columns,System.Collections.Generic.IEnumerable$1(Kusto.Language.Symbols.ColumnSymbol)))}},methods:{WithColumns:function(columns){return new Kusto.Language.Symbols.TupleSymbol.$ctor1(columns,this.RelatedTable)},WithSource:function(source){return this.WithColumns(System.Linq.Enumerable.from(this.Columns,Kusto.Language.Symbols.ColumnSymbol).select(function(c){return c.WithSource(source)}))}}});Bridge.define("Kusto.Language.Syntax.AliasStatement",{inherits:[Kusto.Language.Syntax.Statement],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.AliasStatement}},AliasKeyword:null,DatabaseKeyword:null,Name:null,Equal:null,Expression:null,ChildCount:{get:function(){return 5}}},ctors:{ctor:function(aliasKeyword,databaseKeyword,name,equal,expression,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Statement.ctor.call(this,diagnostics);this.AliasKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,aliasKeyword);this.DatabaseKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,databaseKeyword);this.Name=this.Attach(Kusto.Language.Syntax.NameDeclaration,name);this.Equal=this.Attach(Kusto.Language.Syntax.SyntaxToken,equal);this.Expression=this.Attach(Kusto.Language.Syntax.Expression,expression);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.AliasKeyword;case 1:return this.DatabaseKeyword;case 2:return this.Name;case 3:return this.Equal;case 4:return this.Expression;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"AliasKeyword";case 1:return"DatabaseKeyword";case 2:return"Name";case 3:return"Equal";case 4:return"Expression";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Keyword;case 2:return Kusto.Language.Editor.CompletionHint.Declaration;case 3:return Kusto.Language.Editor.CompletionHint.Syntax;case 4:return Kusto.Language.Editor.CompletionHint.Database;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitAliasStatement(this)},Accept:function(TResult,visitor){return visitor.VisitAliasStatement(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3,$t4;return new Kusto.Language.Syntax.AliasStatement(($t=this.AliasKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.DatabaseKeyword)!=null?$t1.Clone$1(includeDiagnostics):null,Bridge.cast(($t2=this.Name)!=null?$t2.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.NameDeclaration),($t3=this.Equal)!=null?$t3.Clone$1(includeDiagnostics):null,Bridge.cast(($t4=this.Expression)!=null?$t4.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.QueryOperator",{inherits:[Kusto.Language.Syntax.Expression],ctors:{ctor:function(diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics)}}});Bridge.define("Kusto.Language.Syntax.AtExpression",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.AtExpression}},AtToken:null,ChildCount:{get:function(){return 1}}},ctors:{ctor:function(atToken,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.AtToken=this.Attach(Kusto.Language.Syntax.SyntaxToken,atToken);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.AtToken;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"AtToken";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitAtExpression(this)},Accept:function(TResult,visitor){return visitor.VisitAtExpression(this)},CloneCore:function(includeDiagnostics){var $t;return new Kusto.Language.Syntax.AtExpression(($t=this.AtToken)!=null?$t.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.Command",{inherits:[Kusto.Language.Syntax.Expression],ctors:{ctor:function(diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics)}}});Bridge.define("Kusto.Language.Syntax.BetweenExpression",{inherits:[Kusto.Language.Syntax.Expression],fields:{kind:0},props:{Kind:{get:function(){return this.kind}},Left:null,Operator:null,Right:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(kind,left,operator,right,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.kind=kind;this.Left=this.Attach(Kusto.Language.Syntax.Expression,left);this.Operator=this.Attach(Kusto.Language.Syntax.SyntaxToken,operator);this.Right=this.Attach(Kusto.Language.Syntax.ExpressionCouple,right);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Left;case 1:return this.Operator;case 2:return this.Right;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Left";case 1:return"Operator";case 2:return"Right";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 1:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitBetweenExpression(this)},Accept:function(TResult,visitor){return visitor.VisitBetweenExpression(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.BetweenExpression(this.Kind,Bridge.cast(($t=this.Left)!=null?$t.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),($t1=this.Operator)!=null?$t1.Clone$1(includeDiagnostics):null,Bridge.cast(($t2=this.Right)!=null?$t2.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.ExpressionCouple),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.BinaryExpression",{inherits:[Kusto.Language.Syntax.Expression],fields:{kind:0},props:{Kind:{get:function(){return this.kind}},Left:null,Operator:null,Right:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(kind,left,operator,right,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.kind=kind;this.Left=this.Attach(Kusto.Language.Syntax.Expression,left);this.Operator=this.Attach(Kusto.Language.Syntax.SyntaxToken,operator);this.Right=this.Attach(Kusto.Language.Syntax.Expression,right);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Left;case 1:return this.Operator;case 2:return this.Right;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Left";case 1:return"Operator";case 2:return"Right";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 1:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitBinaryExpression(this)},Accept:function(TResult,visitor){return visitor.VisitBinaryExpression(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.BinaryExpression(this.Kind,Bridge.cast(($t=this.Left)!=null?$t.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),($t1=this.Operator)!=null?$t1.Clone$1(includeDiagnostics):null,Bridge.cast(($t2=this.Right)!=null?$t2.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.BracedName",{inherits:[Kusto.Language.Syntax.Name],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.BracedName}},OpenBrace:null,Name:null,CloseBrace:null,ChildCount:{get:function(){return 3}},SimpleName:{get:function(){return this.Name.ValueText}}},ctors:{ctor:function(openBrace,name,closeBrace,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Name.ctor.call(this,diagnostics);this.OpenBrace=this.Attach(Kusto.Language.Syntax.SyntaxToken,openBrace);this.Name=this.Attach(Kusto.Language.Syntax.SyntaxToken,name);this.CloseBrace=this.Attach(Kusto.Language.Syntax.SyntaxToken,closeBrace);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.OpenBrace;case 1:return this.Name;case 2:return this.CloseBrace;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"OpenBrace";case 1:return"Name";case 2:return"CloseBrace";default:throw new System.ArgumentOutOfRangeException.ctor;}},Accept$1:function(visitor){visitor.VisitBracedName(this)},Accept:function(TResult,visitor){return visitor.VisitBracedName(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.BracedName(($t=this.OpenBrace)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Name)!=null?$t1.Clone$1(includeDiagnostics):null,($t2=this.CloseBrace)!=null?$t2.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.BracketedExpression",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.BracketedExpression}},OpenBracket:null,Expression:null,CloseBracket:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(openBracket,expression,closeBracket,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.OpenBracket=this.Attach(Kusto.Language.Syntax.SyntaxToken,openBracket);this.Expression=this.Attach(Kusto.Language.Syntax.Expression,expression);this.CloseBracket=this.Attach(Kusto.Language.Syntax.SyntaxToken,closeBracket);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.OpenBracket;case 1:return this.Expression;case 2:return this.CloseBracket;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"OpenBracket";case 1:return"Expression";case 2:return"CloseBracket";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;case 1:return Kusto.Language.Editor.CompletionHint.Literal;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitBracketedExpression(this)},Accept:function(TResult,visitor){return visitor.VisitBracketedExpression(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.BracketedExpression(($t=this.OpenBracket)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.Expression)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),($t2=this.CloseBracket)!=null?$t2.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.BracketedName",{inherits:[Kusto.Language.Syntax.Name],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.BracketedName}},OpenBracket:null,Name:null,CloseBracket:null,ChildCount:{get:function(){return 3}},SimpleName:{get:function(){var $t;return $t=Bridge.as(this.Name.LiteralValue,System.String),$t!=null?$t:""}}},ctors:{ctor:function(openBracket,name,closeBracket,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Name.ctor.call(this,diagnostics);this.OpenBracket=this.Attach(Kusto.Language.Syntax.SyntaxToken,openBracket);this.Name=this.Attach(Kusto.Language.Syntax.Expression,name);this.CloseBracket=this.Attach(Kusto.Language.Syntax.SyntaxToken,closeBracket);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.OpenBracket;case 1:return this.Name;case 2:return this.CloseBracket;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"OpenBracket";case 1:return"Name";case 2:return"CloseBracket";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;case 1:return Kusto.Language.Editor.CompletionHint.Literal;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitBracketedName(this)},Accept:function(TResult,visitor){return visitor.VisitBracketedName(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.BracketedName(($t=this.OpenBracket)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.Name)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),($t2=this.CloseBracket)!=null?$t2.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.BracketedWildcardedName",{inherits:[Kusto.Language.Syntax.Name],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.BracketedWildcardedName}},OpenBracket:null,Pattern:null,CloseBracket:null,ChildCount:{get:function(){return 3}},SimpleName:{get:function(){return this.Pattern.ValueText}}},ctors:{ctor:function(openBracket,pattern,closeBracket,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Name.ctor.call(this,diagnostics);this.OpenBracket=this.Attach(Kusto.Language.Syntax.SyntaxToken,openBracket);this.Pattern=this.Attach(Kusto.Language.Syntax.SyntaxToken,pattern);this.CloseBracket=this.Attach(Kusto.Language.Syntax.SyntaxToken,closeBracket);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.OpenBracket;case 1:return this.Pattern;case 2:return this.CloseBracket;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"OpenBracket";case 1:return"Pattern";case 2:return"CloseBracket";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitBracketedWildcardedName(this)},Accept:function(TResult,visitor){return visitor.VisitBracketedWildcardedName(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.BracketedWildcardedName(($t=this.OpenBracket)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Pattern)!=null?$t1.Clone$1(includeDiagnostics):null,($t2=this.CloseBracket)!=null?$t2.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.CommandWithClause",{inherits:[Kusto.Language.Syntax.Clause],ctors:{ctor:function(diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Clause.ctor.call(this,diagnostics)}}});Bridge.define("Kusto.Language.Syntax.NamedExpression",{inherits:[Kusto.Language.Syntax.Expression],ctors:{ctor:function(diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics)}}});Bridge.define("Kusto.Language.Syntax.CompoundStringLiteralExpression",{inherits:[Kusto.Language.Syntax.Expression],fields:{_literalValue:null},props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.CompoundStringLiteralExpression}},Tokens:null,ChildCount:{get:function(){return 1}},IsLiteral:{get:function(){return!0}},LiteralValueInfo:{get:function(){if(this._literalValue==null){var text=this.ToString(Kusto.Language.Syntax.IncludeTrivia.Minimal),valueText=System.String.concat(Bridge.toArray(System.Linq.Enumerable.from(this.Tokens,Kusto.Language.Syntax.SyntaxToken).select(function(t){return t.ValueText})));this._literalValue=new Kusto.Language.Syntax.ValueInfo(text,valueText,valueText)}return this._literalValue}}},ctors:{ctor:function(tokens,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.Tokens=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SyntaxToken),tokens);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Tokens;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Tokens";default:throw new System.ArgumentOutOfRangeException.ctor;}},Accept$1:function(visitor){visitor.VisitCompoundStringLiteralExpression(this)},Accept:function(TResult,visitor){return visitor.VisitCompoundStringLiteralExpression(this)},CloneCore:function(includeDiagnostics){var $t;return new Kusto.Language.Syntax.CompoundStringLiteralExpression(($t=this.Tokens)!=null?$t.Clone$2(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.ContextualDataTableExpression",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ContextualDataTableExpression}},ContextualDataTableKeyword:null,Id:null,Schema:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(contextualDataTableKeyword,id,schema,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.ContextualDataTableKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,contextualDataTableKeyword);this.Id=this.Attach(Kusto.Language.Syntax.Expression,id);this.Schema=this.Attach(Kusto.Language.Syntax.RowSchema,schema);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.ContextualDataTableKeyword;case 1:return this.Id;case 2:return this.Schema;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"ContextualDataTableKeyword";case 1:return"Id";case 2:return"Schema";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.None;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitContextualDataTableExpression(this)},Accept:function(TResult,visitor){return visitor.VisitContextualDataTableExpression(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.ContextualDataTableExpression(($t=this.ContextualDataTableKeyword)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.Id)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),Bridge.cast(($t2=this.Schema)!=null?$t2.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.RowSchema),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.CountAsIdentifierClause",{inherits:[Kusto.Language.Syntax.Clause],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.CountAsIdentifierClause}},AsKeyword:null,Identifier:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(asKeyword,identifier,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Clause.ctor.call(this,diagnostics);this.AsKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,asKeyword);this.Identifier=this.Attach(Kusto.Language.Syntax.SyntaxToken,identifier);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.AsKeyword;case 1:return this.Identifier;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"AsKeyword";case 1:return"Identifier";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Declaration;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitCountAsIdentifierClause(this)},Accept:function(TResult,visitor){return visitor.VisitCountAsIdentifierClause(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.CountAsIdentifierClause(($t=this.AsKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Identifier)!=null?$t1.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.DataScopeClause",{inherits:[Kusto.Language.Syntax.Clause],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.DataScopeClause}},DataScopeKeyword:null,EqualToken:null,Value:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(dataScopeKeyword,equalToken,value,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Clause.ctor.call(this,diagnostics);this.DataScopeKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,dataScopeKeyword);this.EqualToken=this.Attach(Kusto.Language.Syntax.SyntaxToken,equalToken);this.Value=this.Attach(Kusto.Language.Syntax.SyntaxToken,value);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.DataScopeKeyword;case 1:return this.EqualToken;case 2:return this.Value;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"DataScopeKeyword";case 1:return"EqualToken";case 2:return"Value";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Keyword;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitDataScopeClause(this)},Accept:function(TResult,visitor){return visitor.VisitDataScopeClause(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.DataScopeClause(($t=this.DataScopeKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.EqualToken)!=null?$t1.Clone$1(includeDiagnostics):null,($t2=this.Value)!=null?$t2.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.DataScopeExpression",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.DataScopeExpression}},Expression:null,DataScopeClause:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(expression,dataScopeClause,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.Expression=this.Attach(Kusto.Language.Syntax.Expression,expression);this.DataScopeClause=this.Attach(Kusto.Language.Syntax.DataScopeClause,dataScopeClause);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Expression;case 1:return this.DataScopeClause;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Expression";case 1:return"DataScopeClause";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 1:return Kusto.Language.Editor.CompletionHint.Clause;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitDataScopeExpression(this)},Accept:function(TResult,visitor){return visitor.VisitDataScopeExpression(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.DataScopeExpression(Bridge.cast(($t=this.Expression)!=null?$t.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),Bridge.cast(($t1=this.DataScopeClause)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.DataScopeClause),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.DataTableExpression",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.DataTableExpression}},DataTableKeyword:null,Parameters:null,Schema:null,OpenBracket:null,LeadingComma:null,Values:null,CloseBracket:null,ChildCount:{get:function(){return 7}}},ctors:{ctor:function(dataTableKeyword,parameters,schema,openBracket,leadingComma,values,closeBracket,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.DataTableKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,dataTableKeyword);this.Parameters=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.Schema=this.Attach(Kusto.Language.Syntax.RowSchema,schema);this.OpenBracket=this.Attach(Kusto.Language.Syntax.SyntaxToken,openBracket);this.LeadingComma=this.Attach(Kusto.Language.Syntax.SyntaxToken,leadingComma,!0);this.Values=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),values);this.CloseBracket=this.Attach(Kusto.Language.Syntax.SyntaxToken,closeBracket);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.DataTableKeyword;case 1:return this.Parameters;case 2:return this.Schema;case 3:return this.OpenBracket;case 4:return this.LeadingComma;case 5:return this.Values;case 6:return this.CloseBracket;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"DataTableKeyword";case 1:return"Parameters";case 2:return"Schema";case 3:return"OpenBracket";case 4:return"LeadingComma";case 5:return"Values";case 6:return"CloseBracket";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 4:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.None;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;case 3:return Kusto.Language.Editor.CompletionHint.Syntax;case 4:return Kusto.Language.Editor.CompletionHint.Syntax;case 5:return Kusto.Language.Editor.CompletionHint.Literal;case 6:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitDataTableExpression(this)},Accept:function(TResult,visitor){return visitor.VisitDataTableExpression(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3,$t4,$t5,$t6;return new Kusto.Language.Syntax.DataTableExpression(($t=this.DataTableKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Parameters)!=null?$t1.Clone$2(includeDiagnostics):null,Bridge.cast(($t2=this.Schema)!=null?$t2.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.RowSchema),($t3=this.OpenBracket)!=null?$t3.Clone$1(includeDiagnostics):null,($t4=this.LeadingComma)!=null?$t4.Clone$1(includeDiagnostics):null,($t5=this.Values)!=null?$t5.Clone$2(includeDiagnostics):null,($t6=this.CloseBracket)!=null?$t6.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.DefaultExpressionClause",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.DefaultExpressionClause}},DefaultKeyword:null,EqualToken:null,Expression:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(defaultKeyword,equalToken,expression,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.DefaultKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,defaultKeyword);this.EqualToken=this.Attach(Kusto.Language.Syntax.SyntaxToken,equalToken);this.Expression=this.Attach(Kusto.Language.Syntax.Expression,expression);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.DefaultKeyword;case 1:return this.EqualToken;case 2:return this.Expression;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"DefaultKeyword";case 1:return"EqualToken";case 2:return"Expression";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Literal;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitDefaultExpressionClause(this)},Accept:function(TResult,visitor){return visitor.VisitDefaultExpressionClause(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.DefaultExpressionClause(($t=this.DefaultKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.EqualToken)!=null?$t1.Clone$1(includeDiagnostics):null,Bridge.cast(($t2=this.Expression)!=null?$t2.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.DynamicExpression",{inherits:[Kusto.Language.Syntax.Expression],fields:{_literalInfo:null},props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.DynamicExpression}},Dynamic:null,OpenParen:null,Expression:null,CloseParen:null,ChildCount:{get:function(){return 4}},IsLiteral:{get:function(){return!0}},LiteralValueInfo:{get:function(){if(this._literalInfo==null){var text=this.ToString(Kusto.Language.Syntax.IncludeTrivia.Minimal),valueText=this.Expression.ToString(Kusto.Language.Syntax.IncludeTrivia.Minimal);this._literalInfo=this.Kind===Kusto.Language.Syntax.SyntaxKind.NullLiteralExpression?new Kusto.Language.Syntax.ValueInfo(text,valueText,null):new Kusto.Language.Syntax.ValueInfo(text,valueText,valueText)}return this._literalInfo}}},ctors:{ctor:function(dynamic,openParen,expression,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.Dynamic=this.Attach(Kusto.Language.Syntax.SyntaxToken,dynamic);this.OpenParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,openParen);this.Expression=this.Attach(Kusto.Language.Syntax.Expression,expression);this.CloseParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Dynamic;case 1:return this.OpenParen;case 2:return this.Expression;case 3:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Dynamic";case 1:return"OpenParen";case 2:return"Expression";case 3:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;case 3:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitDynamicExpression(this)},Accept:function(TResult,visitor){return visitor.VisitDynamicExpression(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3;return new Kusto.Language.Syntax.DynamicExpression(($t=this.Dynamic)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.OpenParen)!=null?$t1.Clone$1(includeDiagnostics):null,Bridge.cast(($t2=this.Expression)!=null?$t2.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),($t3=this.CloseParen)!=null?$t3.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.ElementExpression",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ElementExpression}},Expression:null,Selector:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(expression,selector,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.Expression=this.Attach(Kusto.Language.Syntax.Expression,expression);this.Selector=this.Attach(Kusto.Language.Syntax.Expression,selector);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Expression;case 1:return this.Selector;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Expression";case 1:return"Selector";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 1:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitElementExpression(this)},Accept:function(TResult,visitor){return visitor.VisitElementExpression(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.ElementExpression(Bridge.cast(($t=this.Expression)!=null?$t.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),Bridge.cast(($t1=this.Selector)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.EntityGroup",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.EntityGroupExpression}},EntityGroupKeyword:null,OpenBracket:null,Entities:null,CloseBracket:null,ChildCount:{get:function(){return 4}}},ctors:{ctor:function(entityGroupKeyword,openBracket,entities,closeBracket,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.EntityGroupKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,entityGroupKeyword);this.OpenBracket=this.Attach(Kusto.Language.Syntax.SyntaxToken,openBracket);this.Entities=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),entities);this.CloseBracket=this.Attach(Kusto.Language.Syntax.SyntaxToken,closeBracket);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.EntityGroupKeyword;case 1:return this.OpenBracket;case 2:return this.Entities;case 3:return this.CloseBracket;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"EntityGroupKeyword";case 1:return"OpenBracket";case 2:return"Entities";case 3:return"CloseBracket";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 3:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitEntityGroup(this)},Accept:function(TResult,visitor){return visitor.VisitEntityGroup(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3;return new Kusto.Language.Syntax.EntityGroup(($t=this.EntityGroupKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.OpenBracket)!=null?$t1.Clone$1(includeDiagnostics):null,($t2=this.Entities)!=null?$t2.Clone$2(includeDiagnostics):null,($t3=this.CloseBracket)!=null?$t3.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.ExpressionStatement",{inherits:[Kusto.Language.Syntax.Statement],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ExpressionStatement}},Expression:null,ChildCount:{get:function(){return 1}}},ctors:{ctor:function(expression,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Statement.ctor.call(this,diagnostics);this.Expression=this.Attach(Kusto.Language.Syntax.Expression,expression);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Expression;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Expression";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Inherit;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitExpressionStatement(this)},Accept:function(TResult,visitor){return visitor.VisitExpressionStatement(this)},CloneCore:function(includeDiagnostics){var $t;return new Kusto.Language.Syntax.ExpressionStatement(Bridge.cast(($t=this.Expression)!=null?$t.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.ExternalDataExpression",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ExternalDataExpression}},ExternalDataKeyword:null,Parameters:null,Schema:null,OpenBracket:null,URIs:null,CloseBracket:null,WithClause:null,ChildCount:{get:function(){return 7}}},ctors:{ctor:function(externalDataKeyword,parameters,schema,openBracket,uRIs,closeBracket,withClause,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.ExternalDataKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,externalDataKeyword);this.Parameters=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.Schema=this.Attach(Kusto.Language.Syntax.RowSchema,schema);this.OpenBracket=this.Attach(Kusto.Language.Syntax.SyntaxToken,openBracket);this.URIs=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),uRIs);this.CloseBracket=this.Attach(Kusto.Language.Syntax.SyntaxToken,closeBracket);this.WithClause=this.Attach(Kusto.Language.Syntax.ExternalDataWithClause,withClause,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.ExternalDataKeyword;case 1:return this.Parameters;case 2:return this.Schema;case 3:return this.OpenBracket;case 4:return this.URIs;case 5:return this.CloseBracket;case 6:return this.WithClause;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"ExternalDataKeyword";case 1:return"Parameters";case 2:return"Schema";case 3:return"OpenBracket";case 4:return"URIs";case 5:return"CloseBracket";case 6:return"WithClause";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 6:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.None;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;case 3:return Kusto.Language.Editor.CompletionHint.Syntax;case 4:return Kusto.Language.Editor.CompletionHint.None;case 5:return Kusto.Language.Editor.CompletionHint.Syntax;case 6:return Kusto.Language.Editor.CompletionHint.Clause;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitExternalDataExpression(this)},Accept:function(TResult,visitor){return visitor.VisitExternalDataExpression(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3,$t4,$t5,$t6;return new Kusto.Language.Syntax.ExternalDataExpression(($t=this.ExternalDataKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Parameters)!=null?$t1.Clone$2(includeDiagnostics):null,Bridge.cast(($t2=this.Schema)!=null?$t2.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.RowSchema),($t3=this.OpenBracket)!=null?$t3.Clone$1(includeDiagnostics):null,($t4=this.URIs)!=null?$t4.Clone$2(includeDiagnostics):null,($t5=this.CloseBracket)!=null?$t5.Clone$1(includeDiagnostics):null,Bridge.cast(($t6=this.WithClause)!=null?$t6.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.ExternalDataWithClause),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.ExternalDataWithClause",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ExternalDataWithClause}},WithKeyword:null,OpenParen:null,Properties:null,CloseParen:null,ChildCount:{get:function(){return 4}}},ctors:{ctor:function(withKeyword,openParen,properties,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.WithKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,withKeyword);this.OpenParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,openParen);this.Properties=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NamedParameter)),properties);this.CloseParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.WithKeyword;case 1:return this.OpenParen;case 2:return this.Properties;case 3:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"WithKeyword";case 1:return"OpenParen";case 2:return"Properties";case 3:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 3:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitExternalDataWithClause(this)},Accept:function(TResult,visitor){return visitor.VisitExternalDataWithClause(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3;return new Kusto.Language.Syntax.ExternalDataWithClause(($t=this.WithKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.OpenParen)!=null?$t1.Clone$1(includeDiagnostics):null,($t2=this.Properties)!=null?$t2.Clone$2(includeDiagnostics):null,($t3=this.CloseParen)!=null?$t3.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.FacetWithClause",{inherits:[Kusto.Language.Syntax.Clause],ctors:{ctor:function(diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Clause.ctor.call(this,diagnostics)}}});Bridge.define("Kusto.Language.Syntax.FindInClause",{inherits:[Kusto.Language.Syntax.Clause],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.FindInClause}},InKeyword:null,OpenParen:null,Expressions:null,CloseParen:null,ChildCount:{get:function(){return 4}}},ctors:{ctor:function(inKeyword,openParen,expressions,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Clause.ctor.call(this,diagnostics);this.InKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,inKeyword);this.OpenParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,openParen);this.Expressions=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),expressions);this.CloseParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.InKeyword;case 1:return this.OpenParen;case 2:return this.Expressions;case 3:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"InKeyword";case 1:return"OpenParen";case 2:return"Expressions";case 3:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Tabular;case 3:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitFindInClause(this)},Accept:function(TResult,visitor){return visitor.VisitFindInClause(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3;return new Kusto.Language.Syntax.FindInClause(($t=this.InKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.OpenParen)!=null?$t1.Clone$1(includeDiagnostics):null,($t2=this.Expressions)!=null?$t2.Clone$2(includeDiagnostics):null,($t3=this.CloseParen)!=null?$t3.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.FindProjectClause",{inherits:[Kusto.Language.Syntax.Clause],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.FindProjectClause}},ProjectKeyword:null,Columns:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(projectKeyword,columns,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Clause.ctor.call(this,diagnostics);this.ProjectKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,projectKeyword);this.Columns=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),columns);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.ProjectKeyword;case 1:return this.Columns;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"ProjectKeyword";case 1:return"Columns";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitFindProjectClause(this)},Accept:function(TResult,visitor){return visitor.VisitFindProjectClause(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.FindProjectClause(($t=this.ProjectKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Columns)!=null?$t1.Clone$2(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.ForkExpression",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ForkExpression}},NameEquals:null,OpenParen:null,Expression:null,CloseParen:null,ChildCount:{get:function(){return 4}}},ctors:{ctor:function(nameEquals,openParen,expression,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.NameEquals=this.Attach(Kusto.Language.Syntax.NameEqualsClause,nameEquals,!0);this.OpenParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,openParen);this.Expression=this.Attach(Kusto.Language.Syntax.Expression,expression);this.CloseParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.NameEquals;case 1:return this.OpenParen;case 2:return this.Expression;case 3:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"NameEquals";case 1:return"OpenParen";case 2:return"Expression";case 3:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 0:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Clause;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Clause;case 3:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitForkExpression(this)},Accept:function(TResult,visitor){return visitor.VisitForkExpression(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3;return new Kusto.Language.Syntax.ForkExpression(Bridge.cast(($t=this.NameEquals)!=null?$t.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.NameEqualsClause),($t1=this.OpenParen)!=null?$t1.Clone$1(includeDiagnostics):null,Bridge.cast(($t2=this.Expression)!=null?$t2.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),($t3=this.CloseParen)!=null?$t3.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.FunctionCallExpression",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.FunctionCallExpression}},Name:null,ArgumentList:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(name,argumentList,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.Name=this.Attach(Kusto.Language.Syntax.NameReference,name);this.ArgumentList=this.Attach(Kusto.Language.Syntax.ExpressionList,argumentList);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Name;case 1:return this.ArgumentList;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Name";case 1:return"ArgumentList";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Function;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitFunctionCallExpression(this)},Accept:function(TResult,visitor){return visitor.VisitFunctionCallExpression(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.FunctionCallExpression(Bridge.cast(($t=this.Name)!=null?$t.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.NameReference),Bridge.cast(($t1=this.ArgumentList)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.ExpressionList),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.FunctionDeclaration",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.FunctionDeclaration}},ViewKeyword:null,Parameters:null,Body:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(viewKeyword,parameters,body,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.ViewKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,viewKeyword,!0);this.Parameters=this.Attach(Kusto.Language.Syntax.FunctionParameters,parameters);this.Body=this.Attach(Kusto.Language.Syntax.FunctionBody,body);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.ViewKeyword;case 1:return this.Parameters;case 2:return this.Body;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"ViewKeyword";case 1:return"Parameters";case 2:return"Body";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 0:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Clause;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitFunctionDeclaration(this)},Accept:function(TResult,visitor){return visitor.VisitFunctionDeclaration(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.FunctionDeclaration(($t=this.ViewKeyword)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.Parameters)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.FunctionParameters),Bridge.cast(($t2=this.Body)!=null?$t2.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.FunctionBody),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.GraphMatchPatternEdge",{inherits:[Kusto.Language.Syntax.GraphMatchPatternNotation],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.GraphMatchPatternEdge}},FirstToken:null,Name:null,Range:null,LastToken:null,ChildCount:{get:function(){return 4}}},ctors:{ctor:function(firstToken,name,range,lastToken,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.GraphMatchPatternNotation.ctor.call(this,diagnostics);this.FirstToken=this.Attach(Kusto.Language.Syntax.SyntaxToken,firstToken);this.Name=this.Attach(Kusto.Language.Syntax.NameDeclaration,name,!0);this.Range=this.Attach(Kusto.Language.Syntax.GraphMatchPatternEdgeRange,range,!0);this.LastToken=this.Attach(Kusto.Language.Syntax.SyntaxToken,lastToken,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.FirstToken;case 1:return this.Name;case 2:return this.Range;case 3:return this.LastToken;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"FirstToken";case 1:return"Name";case 2:return"Range";case 3:return"LastToken";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 1:case 2:case 3:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;case 1:return Kusto.Language.Editor.CompletionHint.None;case 2:return Kusto.Language.Editor.CompletionHint.None;case 3:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitGraphMatchPatternEdge(this)},Accept:function(TResult,visitor){return visitor.VisitGraphMatchPatternEdge(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3;return new Kusto.Language.Syntax.GraphMatchPatternEdge(($t=this.FirstToken)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.Name)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.NameDeclaration),Bridge.cast(($t2=this.Range)!=null?$t2.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.GraphMatchPatternEdgeRange),($t3=this.LastToken)!=null?$t3.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.GraphMatchPatternNode",{inherits:[Kusto.Language.Syntax.GraphMatchPatternNotation],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.GraphMatchPatternNode}},Open:null,Name:null,Close:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(open,name,close,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.GraphMatchPatternNotation.ctor.call(this,diagnostics);this.Open=this.Attach(Kusto.Language.Syntax.SyntaxToken,open);this.Name=this.Attach(Kusto.Language.Syntax.NameDeclaration,name,!0);this.Close=this.Attach(Kusto.Language.Syntax.SyntaxToken,close);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Open;case 1:return this.Name;case 2:return this.Close;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Open";case 1:return"Name";case 2:return"Close";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 1:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.None;case 2:return Kusto.Language.Editor.CompletionHint.Keyword;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitGraphMatchPatternNode(this)},Accept:function(TResult,visitor){return visitor.VisitGraphMatchPatternNode(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.GraphMatchPatternNode(($t=this.Open)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.Name)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.NameDeclaration),($t2=this.Close)!=null?$t2.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.GraphToTableAsClause",{inherits:[Kusto.Language.Syntax.Clause],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.GraphToTableAsClause}},AsKeyword:null,Name:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(asKeyword,name,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Clause.ctor.call(this,diagnostics);this.AsKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,asKeyword);this.Name=this.Attach(Kusto.Language.Syntax.NameDeclaration,name);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.AsKeyword;case 1:return this.Name;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"AsKeyword";case 1:return"Name";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Declaration;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitGraphToTableAsClause(this)},Accept:function(TResult,visitor){return visitor.VisitGraphToTableAsClause(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.GraphToTableAsClause(($t=this.AsKeyword)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.Name)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.NameDeclaration),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.GraphToTableOutputClause",{inherits:[Kusto.Language.Syntax.Clause],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.GraphToTableOutputClause}},EntityKeyword:null,AsClause:null,Parameters:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(entityKeyword,asClause,parameters,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Clause.ctor.call(this,diagnostics);this.EntityKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,entityKeyword);this.AsClause=this.Attach(Kusto.Language.Syntax.GraphToTableAsClause,asClause,!0);this.Parameters=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.EntityKeyword;case 1:return this.AsClause;case 2:return this.Parameters;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"EntityKeyword";case 1:return"AsClause";case 2:return"Parameters";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 1:case 2:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.None;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitGraphToTableOutputClause(this)},Accept:function(TResult,visitor){return visitor.VisitGraphToTableOutputClause(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.GraphToTableOutputClause(($t=this.EntityKeyword)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.AsClause)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.GraphToTableAsClause),($t2=this.Parameters)!=null?$t2.Clone$2(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.HasAllExpression",{inherits:[Kusto.Language.Syntax.Expression],fields:{kind:0},props:{Kind:{get:function(){return this.kind}},Left:null,Operator:null,Right:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(kind,left,operator,right,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.kind=kind;this.Left=this.Attach(Kusto.Language.Syntax.Expression,left);this.Operator=this.Attach(Kusto.Language.Syntax.SyntaxToken,operator);this.Right=this.Attach(Kusto.Language.Syntax.ExpressionList,right);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Left;case 1:return this.Operator;case 2:return this.Right;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Left";case 1:return"Operator";case 2:return"Right";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitHasAllExpression(this)},Accept:function(TResult,visitor){return visitor.VisitHasAllExpression(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.HasAllExpression(this.Kind,Bridge.cast(($t=this.Left)!=null?$t.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),($t1=this.Operator)!=null?$t1.Clone$1(includeDiagnostics):null,Bridge.cast(($t2=this.Right)!=null?$t2.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.ExpressionList),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.HasAnyExpression",{inherits:[Kusto.Language.Syntax.Expression],fields:{kind:0},props:{Kind:{get:function(){return this.kind}},Left:null,Operator:null,Right:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(kind,left,operator,right,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.kind=kind;this.Left=this.Attach(Kusto.Language.Syntax.Expression,left);this.Operator=this.Attach(Kusto.Language.Syntax.SyntaxToken,operator);this.Right=this.Attach(Kusto.Language.Syntax.ExpressionList,right);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Left;case 1:return this.Operator;case 2:return this.Right;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Left";case 1:return"Operator";case 2:return"Right";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitHasAnyExpression(this)},Accept:function(TResult,visitor){return visitor.VisitHasAnyExpression(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.HasAnyExpression(this.Kind,Bridge.cast(($t=this.Left)!=null?$t.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),($t1=this.Operator)!=null?$t1.Clone$1(includeDiagnostics):null,Bridge.cast(($t2=this.Right)!=null?$t2.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.ExpressionList),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.InExpression",{inherits:[Kusto.Language.Syntax.Expression],fields:{kind:0},props:{Kind:{get:function(){return this.kind}},Left:null,Operator:null,Right:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(kind,left,operator,right,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.kind=kind;this.Left=this.Attach(Kusto.Language.Syntax.Expression,left);this.Operator=this.Attach(Kusto.Language.Syntax.SyntaxToken,operator);this.Right=this.Attach(Kusto.Language.Syntax.ExpressionList,right);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Left;case 1:return this.Operator;case 2:return this.Right;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Left";case 1:return"Operator";case 2:return"Right";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitInExpression(this)},Accept:function(TResult,visitor){return visitor.VisitInExpression(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.InExpression(this.Kind,Bridge.cast(($t=this.Left)!=null?$t.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),($t1=this.Operator)!=null?$t1.Clone$1(includeDiagnostics):null,Bridge.cast(($t2=this.Right)!=null?$t2.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.ExpressionList),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.JoinConditionClause",{inherits:[Kusto.Language.Syntax.Clause],ctors:{ctor:function(diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Clause.ctor.call(this,diagnostics)}}});Bridge.define("Kusto.Language.Syntax.JsonExpression",{inherits:[Kusto.Language.Syntax.Expression],ctors:{ctor:function(diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics)}}});Bridge.define("Kusto.Language.Syntax.LetStatement",{inherits:[Kusto.Language.Syntax.Statement],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.LetStatement}},LetKeyword:null,Name:null,Equal:null,Expression:null,ChildCount:{get:function(){return 4}}},ctors:{ctor:function(letKeyword,name,equal,expression,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Statement.ctor.call(this,diagnostics);this.LetKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,letKeyword);this.Name=this.Attach(Kusto.Language.Syntax.NameDeclaration,name);this.Equal=this.Attach(Kusto.Language.Syntax.SyntaxToken,equal);this.Expression=this.Attach(Kusto.Language.Syntax.Expression,expression);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.LetKeyword;case 1:return this.Name;case 2:return this.Equal;case 3:return this.Expression;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"LetKeyword";case 1:return"Name";case 2:return"Equal";case 3:return"Expression";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Declaration;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;case 3:return Kusto.Language.Editor.CompletionHint.Expression;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitLetStatement(this)},Accept:function(TResult,visitor){return visitor.VisitLetStatement(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3;return new Kusto.Language.Syntax.LetStatement(($t=this.LetKeyword)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.Name)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.NameDeclaration),($t2=this.Equal)!=null?$t2.Clone$1(includeDiagnostics):null,Bridge.cast(($t3=this.Expression)!=null?$t3.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.LiteralExpression",{inherits:[Kusto.Language.Syntax.Expression],fields:{kind:0},props:{Kind:{get:function(){return this.kind}},Token:null,ChildCount:{get:function(){return 1}},IsLiteral:{get:function(){return!0}},LiteralValueInfo:{get:function(){return new Kusto.Language.Syntax.ValueInfo(this.Token.Text,this.Token.ValueText,this.Token.Value)}}},ctors:{ctor:function(kind,token,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.kind=kind;this.Token=this.Attach(Kusto.Language.Syntax.SyntaxToken,token);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Token;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Token";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Literal;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitLiteralExpression(this)},Accept:function(TResult,visitor){return visitor.VisitLiteralExpression(this)},CloneCore:function(includeDiagnostics){var $t;return new Kusto.Language.Syntax.LiteralExpression(this.Kind,($t=this.Token)!=null?$t.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.MacroExpandScopeReferenceName",{inherits:[Kusto.Language.Syntax.Clause],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.MacroExpandScopeReferenceName}},AsKeyword:null,EntityGroupReferenceName:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(asKeyword,entityGroupReferenceName,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Clause.ctor.call(this,diagnostics);this.AsKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,asKeyword);this.EntityGroupReferenceName=this.Attach(Kusto.Language.Syntax.NameDeclaration,entityGroupReferenceName);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.AsKeyword;case 1:return this.EntityGroupReferenceName;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"AsKeyword";case 1:return"EntityGroupReferenceName";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.EntityGroup;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitMacroExpandScopeReferenceName(this)},Accept:function(TResult,visitor){return visitor.VisitMacroExpandScopeReferenceName(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.MacroExpandScopeReferenceName(($t=this.AsKeyword)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.EntityGroupReferenceName)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.NameDeclaration),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.MakeGraphWithImplicitIdClause",{inherits:[Kusto.Language.Syntax.MakeGraphWithClause],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.MakeGraphWithImplicitIdClause}},WithNodeIdKeyword:null,EqualToken:null,Name:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(withNodeIdKeyword,equalToken,name,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.MakeGraphWithClause.ctor.call(this,diagnostics);this.WithNodeIdKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,withNodeIdKeyword);this.EqualToken=this.Attach(Kusto.Language.Syntax.SyntaxToken,equalToken);this.Name=this.Attach(Kusto.Language.Syntax.NameDeclaration,name);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.WithNodeIdKeyword;case 1:return this.EqualToken;case 2:return this.Name;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"WithNodeIdKeyword";case 1:return"EqualToken";case 2:return"Name";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Declaration;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitMakeGraphWithImplicitIdClause(this)},Accept:function(TResult,visitor){return visitor.VisitMakeGraphWithImplicitIdClause(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.MakeGraphWithImplicitIdClause(($t=this.WithNodeIdKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.EqualToken)!=null?$t1.Clone$1(includeDiagnostics):null,Bridge.cast(($t2=this.Name)!=null?$t2.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.NameDeclaration),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.MakeGraphWithTablesAndKeysClause",{inherits:[Kusto.Language.Syntax.MakeGraphWithClause],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.MakeGraphWithTablesAndKeysClause}},WithKeyword:null,TablesAndKeys:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(withKeyword,tablesAndKeys,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.MakeGraphWithClause.ctor.call(this,diagnostics);this.WithKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,withKeyword);this.TablesAndKeys=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MakeGraphTableAndKeyClause)),tablesAndKeys);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.WithKeyword;case 1:return this.TablesAndKeys;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"WithKeyword";case 1:return"TablesAndKeys";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Tabular;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitMakeGraphWithTablesAndKeysClause(this)},Accept:function(TResult,visitor){return visitor.VisitMakeGraphWithTablesAndKeysClause(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.MakeGraphWithTablesAndKeysClause(($t=this.WithKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.TablesAndKeys)!=null?$t1.Clone$2(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.MakeSeriesByClause",{inherits:[Kusto.Language.Syntax.Clause],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.MakeSeriesByClause}},ByKeyword:null,Expressions:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(byKeyword,expressions,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Clause.ctor.call(this,diagnostics);this.ByKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,byKeyword);this.Expressions=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),expressions);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.ByKeyword;case 1:return this.Expressions;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"ByKeyword";case 1:return"Expressions";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitMakeSeriesByClause(this)},Accept:function(TResult,visitor){return visitor.VisitMakeSeriesByClause(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.MakeSeriesByClause(($t=this.ByKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Expressions)!=null?$t1.Clone$2(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.MakeSeriesExpression",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.MakeSeriesExpression}},Expression:null,DefaultExpression:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(expression,defaultExpression,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.Expression=this.Attach(Kusto.Language.Syntax.Expression,expression);this.DefaultExpression=this.Attach(Kusto.Language.Syntax.DefaultExpressionClause,defaultExpression,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Expression;case 1:return this.DefaultExpression;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Expression";case 1:return"DefaultExpression";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 1:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Scalar;case 1:return Kusto.Language.Editor.CompletionHint.Clause;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitMakeSeriesExpression(this)},Accept:function(TResult,visitor){return visitor.VisitMakeSeriesExpression(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.MakeSeriesExpression(Bridge.cast(($t=this.Expression)!=null?$t.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),Bridge.cast(($t1=this.DefaultExpression)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.DefaultExpressionClause),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.MakeSeriesFromClause",{inherits:[Kusto.Language.Syntax.Clause],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.MakeSeriesFromClause}},FromKeyword:null,Expression:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(fromKeyword,expression,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Clause.ctor.call(this,diagnostics);this.FromKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,fromKeyword);this.Expression=this.Attach(Kusto.Language.Syntax.Expression,expression);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.FromKeyword;case 1:return this.Expression;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"FromKeyword";case 1:return"Expression";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitMakeSeriesFromClause(this)},Accept:function(TResult,visitor){return visitor.VisitMakeSeriesFromClause(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.MakeSeriesFromClause(($t=this.FromKeyword)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.Expression)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.MakeSeriesRangeClause",{inherits:[Kusto.Language.Syntax.Clause],ctors:{ctor:function(diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Clause.ctor.call(this,diagnostics)}}});Bridge.define("Kusto.Language.Syntax.MakeSeriesOnClause",{inherits:[Kusto.Language.Syntax.Clause],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.MakeSeriesOnClause}},OnKeyword:null,Expression:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(onKeyword,expression,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Clause.ctor.call(this,diagnostics);this.OnKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,onKeyword);this.Expression=this.Attach(Kusto.Language.Syntax.Expression,expression);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.OnKeyword;case 1:return this.Expression;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"OnKeyword";case 1:return"Expression";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitMakeSeriesOnClause(this)},Accept:function(TResult,visitor){return visitor.VisitMakeSeriesOnClause(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.MakeSeriesOnClause(($t=this.OnKeyword)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.Expression)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.MakeSeriesStepClause",{inherits:[Kusto.Language.Syntax.Clause],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.MakeSeriesStepClause}},StepKeyword:null,Expression:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(stepKeyword,expression,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Clause.ctor.call(this,diagnostics);this.StepKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,stepKeyword);this.Expression=this.Attach(Kusto.Language.Syntax.Expression,expression);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.StepKeyword;case 1:return this.Expression;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"StepKeyword";case 1:return"Expression";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitMakeSeriesStepClause(this)},Accept:function(TResult,visitor){return visitor.VisitMakeSeriesStepClause(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.MakeSeriesStepClause(($t=this.StepKeyword)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.Expression)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.MakeSeriesToClause",{inherits:[Kusto.Language.Syntax.Clause],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.MakeSeriesToClause}},ToKeyword:null,Expression:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(toKeyword,expression,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Clause.ctor.call(this,diagnostics);this.ToKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,toKeyword);this.Expression=this.Attach(Kusto.Language.Syntax.Expression,expression);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.ToKeyword;case 1:return this.Expression;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"ToKeyword";case 1:return"Expression";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitMakeSeriesToClause(this)},Accept:function(TResult,visitor){return visitor.VisitMakeSeriesToClause(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.MakeSeriesToClause(($t=this.ToKeyword)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.Expression)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.MaterializedViewCombineExpression",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.MaterializedViewCombineExpression}},MaterializedViewCombineKeyword:null,ViewName:null,BaseClause:null,DeltaClause:null,AggregationsClause:null,ChildCount:{get:function(){return 5}}},ctors:{ctor:function(materializedViewCombineKeyword,viewName,baseClause,deltaClause,aggregationsClause,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.MaterializedViewCombineKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,materializedViewCombineKeyword);this.ViewName=this.Attach(Kusto.Language.Syntax.MaterializedViewCombineNameClause,viewName);this.BaseClause=this.Attach(Kusto.Language.Syntax.MaterializedViewCombineClause,baseClause);this.DeltaClause=this.Attach(Kusto.Language.Syntax.MaterializedViewCombineClause,deltaClause);this.AggregationsClause=this.Attach(Kusto.Language.Syntax.MaterializedViewCombineClause,aggregationsClause);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.MaterializedViewCombineKeyword;case 1:return this.ViewName;case 2:return this.BaseClause;case 3:return this.DeltaClause;case 4:return this.AggregationsClause;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"MaterializedViewCombineKeyword";case 1:return"ViewName";case 2:return"BaseClause";case 3:return"DeltaClause";case 4:return"AggregationsClause";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;case 3:return Kusto.Language.Editor.CompletionHint.Syntax;case 4:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitMaterializedViewCombineExpression(this)},Accept:function(TResult,visitor){return visitor.VisitMaterializedViewCombineExpression(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3,$t4;return new Kusto.Language.Syntax.MaterializedViewCombineExpression(($t=this.MaterializedViewCombineKeyword)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.ViewName)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.MaterializedViewCombineNameClause),Bridge.cast(($t2=this.BaseClause)!=null?$t2.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.MaterializedViewCombineClause),Bridge.cast(($t3=this.DeltaClause)!=null?$t3.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.MaterializedViewCombineClause),Bridge.cast(($t4=this.AggregationsClause)!=null?$t4.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.MaterializedViewCombineClause),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.MaterializeExpression",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.MaterializeExpression}},MaterializeKeyword:null,OpenParen:null,Expression:null,CloseParen:null,ChildCount:{get:function(){return 4}}},ctors:{ctor:function(materializeKeyword,openParen,expression,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.MaterializeKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,materializeKeyword);this.OpenParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,openParen);this.Expression=this.Attach(Kusto.Language.Syntax.Expression,expression);this.CloseParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.MaterializeKeyword;case 1:return this.OpenParen;case 2:return this.Expression;case 3:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"MaterializeKeyword";case 1:return"OpenParen";case 2:return"Expression";case 3:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Tabular;case 3:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitMaterializeExpression(this)},Accept:function(TResult,visitor){return visitor.VisitMaterializeExpression(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3;return new Kusto.Language.Syntax.MaterializeExpression(($t=this.MaterializeKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.OpenParen)!=null?$t1.Clone$1(includeDiagnostics):null,Bridge.cast(($t2=this.Expression)!=null?$t2.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),($t3=this.CloseParen)!=null?$t3.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.MvApplyContextIdClause",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.MvApplyContextIdClause}},IdKeyword:null,Id:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(idKeyword,id,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.IdKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,idKeyword);this.Id=this.Attach(Kusto.Language.Syntax.Expression,id);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.IdKeyword;case 1:return this.Id;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"IdKeyword";case 1:return"Id";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitMvApplyContextIdClause(this)},Accept:function(TResult,visitor){return visitor.VisitMvApplyContextIdClause(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.MvApplyContextIdClause(($t=this.IdKeyword)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.Id)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.MvApplyExpression",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.MvApplyExpression}},Expression:null,ToTypeOf:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(expression,toTypeOf,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.Expression=this.Attach(Kusto.Language.Syntax.Expression,expression,!0);this.ToTypeOf=this.Attach(Kusto.Language.Syntax.ToTypeOfClause,toTypeOf,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Expression;case 1:return this.ToTypeOf;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Expression";case 1:return"ToTypeOf";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 0:case 1:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Scalar;case 1:return Kusto.Language.Editor.CompletionHint.Clause;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitMvApplyExpression(this)},Accept:function(TResult,visitor){return visitor.VisitMvApplyExpression(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.MvApplyExpression(Bridge.cast(($t=this.Expression)!=null?$t.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),Bridge.cast(($t1=this.ToTypeOf)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.ToTypeOfClause),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.MvApplyRowLimitClause",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.MvApplyRowLimitClause}},LimitKeyword:null,RowLimit:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(limitKeyword,rowLimit,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.LimitKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,limitKeyword);this.RowLimit=this.Attach(Kusto.Language.Syntax.Expression,rowLimit);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.LimitKeyword;case 1:return this.RowLimit;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"LimitKeyword";case 1:return"RowLimit";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitMvApplyRowLimitClause(this)},Accept:function(TResult,visitor){return visitor.VisitMvApplyRowLimitClause(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.MvApplyRowLimitClause(($t=this.LimitKeyword)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.RowLimit)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.MvApplySubqueryExpression",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.MvApplySubqueryExpression}},OpenParen:null,Expression:null,CloseParen:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(openParen,expression,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.OpenParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,openParen);this.Expression=this.Attach(Kusto.Language.Syntax.Expression,expression);this.CloseParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.OpenParen;case 1:return this.Expression;case 2:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"OpenParen";case 1:return"Expression";case 2:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;case 1:return Kusto.Language.Editor.CompletionHint.Query;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitMvApplySubqueryExpression(this)},Accept:function(TResult,visitor){return visitor.VisitMvApplySubqueryExpression(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.MvApplySubqueryExpression(($t=this.OpenParen)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.Expression)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),($t2=this.CloseParen)!=null?$t2.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.MvExpandExpression",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.MvExpandExpression}},Expression:null,ToTypeOf:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(expression,toTypeOf,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.Expression=this.Attach(Kusto.Language.Syntax.Expression,expression,!0);this.ToTypeOf=this.Attach(Kusto.Language.Syntax.ToTypeOfClause,toTypeOf,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Expression;case 1:return this.ToTypeOf;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Expression";case 1:return"ToTypeOf";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 0:case 1:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Scalar;case 1:return Kusto.Language.Editor.CompletionHint.Clause;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitMvExpandExpression(this)},Accept:function(TResult,visitor){return visitor.VisitMvExpandExpression(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.MvExpandExpression(Bridge.cast(($t=this.Expression)!=null?$t.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),Bridge.cast(($t1=this.ToTypeOf)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.ToTypeOfClause),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.MvExpandRowLimitClause",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.MvExpandRowLimitClause}},LimitKeyword:null,RowLimit:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(limitKeyword,rowLimit,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.LimitKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,limitKeyword);this.RowLimit=this.Attach(Kusto.Language.Syntax.Expression,rowLimit);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.LimitKeyword;case 1:return this.RowLimit;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"LimitKeyword";case 1:return"RowLimit";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitMvExpandRowLimitClause(this)},Accept:function(TResult,visitor){return visitor.VisitMvExpandRowLimitClause(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.MvExpandRowLimitClause(($t=this.LimitKeyword)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.RowLimit)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.NameAndTypeDeclaration",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.NameAndTypeDeclaration}},Name:null,Colon:null,Type:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(name,colon,type,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.Name=this.Attach(Kusto.Language.Syntax.NameDeclaration,name);this.Colon=this.Attach(Kusto.Language.Syntax.SyntaxToken,colon);this.Type=this.Attach(Kusto.Language.Syntax.TypeExpression,type);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Name;case 1:return this.Colon;case 2:return this.Type;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Name";case 1:return"Colon";case 2:return"Type";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Declaration;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitNameAndTypeDeclaration(this)},Accept:function(TResult,visitor){return visitor.VisitNameAndTypeDeclaration(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.NameAndTypeDeclaration(Bridge.cast(($t=this.Name)!=null?$t.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.NameDeclaration),($t1=this.Colon)!=null?$t1.Clone$1(includeDiagnostics):null,Bridge.cast(($t2=this.Type)!=null?$t2.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.TypeExpression),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.NameDeclaration",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.NameDeclaration}},Name:null,ChildCount:{get:function(){return 1}},SimpleName:{get:function(){return this.Name.SimpleName}}},ctors:{ctor:function(name,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.Name=this.Attach(Kusto.Language.Syntax.Name,name);this.Init()},$ctor1:function(nameToken,diagnostics){diagnostics===void 0&&(diagnostics=null);Kusto.Language.Syntax.NameDeclaration.ctor.call(this,new Kusto.Language.Syntax.TokenName(nameToken),diagnostics)}},methods:{GetChild:function(index){switch(index){case 0:return this.Name;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Name";default:throw new System.ArgumentOutOfRangeException.ctor;}},Accept$1:function(visitor){visitor.VisitNameDeclaration(this)},Accept:function(TResult,visitor){return visitor.VisitNameDeclaration(this)},CloneCore:function(includeDiagnostics){var $t;return new Kusto.Language.Syntax.NameDeclaration.ctor(Bridge.cast(($t=this.Name)!=null?$t.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Name),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.NameEqualsClause",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.NameEqualsClause}},Name:null,EqualToken:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(name,equalToken,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.Name=this.Attach(Kusto.Language.Syntax.NameDeclaration,name);this.EqualToken=this.Attach(Kusto.Language.Syntax.SyntaxToken,equalToken);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Name;case 1:return this.EqualToken;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Name";case 1:return"EqualToken";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Declaration;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitNameEqualsClause(this)},Accept:function(TResult,visitor){return visitor.VisitNameEqualsClause(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.NameEqualsClause(Bridge.cast(($t=this.Name)!=null?$t.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.NameDeclaration),($t1=this.EqualToken)!=null?$t1.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.NameReference",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.NameReference}},Name:null,Match:0,ChildCount:{get:function(){return 1}},SimpleName:{get:function(){return this.Name.SimpleName}}},ctors:{ctor:function(name,match,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.Name=this.Attach(Kusto.Language.Syntax.Name,name);this.Match=match;this.Init()},$ctor1:function(name,diagnostics){diagnostics===void 0&&(diagnostics=null);Kusto.Language.Syntax.NameReference.ctor.call(this,name,Kusto.Language.Symbols.SymbolMatch.Default,diagnostics)},$ctor2:function(nameToken,diagnostics){diagnostics===void 0&&(diagnostics=null);Kusto.Language.Syntax.NameReference.$ctor1.call(this,new Kusto.Language.Syntax.TokenName(nameToken),diagnostics)}},methods:{GetChild:function(index){switch(index){case 0:return this.Name;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Name";default:throw new System.ArgumentOutOfRangeException.ctor;}},Accept$1:function(visitor){visitor.VisitNameReference(this)},Accept:function(TResult,visitor){return visitor.VisitNameReference(this)},CloneCore:function(includeDiagnostics){var $t;return new Kusto.Language.Syntax.NameReference.ctor(Bridge.cast(($t=this.Name)!=null?$t.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Name),this.Match,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.NameReferenceList",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.NameReferenceList}},Names:null,ChildCount:{get:function(){return 1}}},ctors:{ctor:function(names,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.Names=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NameReference)),names);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Names;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Names";default:throw new System.ArgumentOutOfRangeException.ctor;}},Accept$1:function(visitor){visitor.VisitNameReferenceList(this)},Accept:function(TResult,visitor){return visitor.VisitNameReferenceList(this)},CloneCore:function(includeDiagnostics){var $t;return new Kusto.Language.Syntax.NameReferenceList(($t=this.Names)!=null?$t.Clone$2(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.OptionValueClause",{inherits:[Kusto.Language.Syntax.Clause],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.OptionValueClause}},Equal:null,Expression:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(equal,expression,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Clause.ctor.call(this,diagnostics);this.Equal=this.Attach(Kusto.Language.Syntax.SyntaxToken,equal);this.Expression=this.Attach(Kusto.Language.Syntax.Expression,expression);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Equal;case 1:return this.Expression;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Equal";case 1:return"Expression";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;case 1:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitOptionValueClause(this)},Accept:function(TResult,visitor){return visitor.VisitOptionValueClause(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.OptionValueClause(($t=this.Equal)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.Expression)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.OrderedExpression",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.OrderedExpression}},Expression:null,Ordering:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(expression,ordering,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.Expression=this.Attach(Kusto.Language.Syntax.Expression,expression);this.Ordering=this.Attach(Kusto.Language.Syntax.OrderingClause,ordering);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Expression;case 1:return this.Ordering;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Expression";case 1:return"Ordering";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Scalar;case 1:return Kusto.Language.Editor.CompletionHint.Clause;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitOrderedExpression(this)},Accept:function(TResult,visitor){return visitor.VisitOrderedExpression(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.OrderedExpression(Bridge.cast(($t=this.Expression)!=null?$t.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),Bridge.cast(($t1=this.Ordering)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.OrderingClause),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.PackExpression",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.PackExpression}},PackKeyword:null,OpenParen:null,AsteriskToken:null,CloseParen:null,ChildCount:{get:function(){return 4}}},ctors:{ctor:function(packKeyword,openParen,asteriskToken,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.PackKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,packKeyword);this.OpenParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,openParen);this.AsteriskToken=this.Attach(Kusto.Language.Syntax.SyntaxToken,asteriskToken);this.CloseParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.PackKeyword;case 1:return this.OpenParen;case 2:return this.AsteriskToken;case 3:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"PackKeyword";case 1:return"OpenParen";case 2:return"AsteriskToken";case 3:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;case 3:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitPackExpression(this)},Accept:function(TResult,visitor){return visitor.VisitPackExpression(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3;return new Kusto.Language.Syntax.PackExpression(($t=this.PackKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.OpenParen)!=null?$t1.Clone$1(includeDiagnostics):null,($t2=this.AsteriskToken)!=null?$t2.Clone$1(includeDiagnostics):null,($t3=this.CloseParen)!=null?$t3.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.ParenthesizedExpression",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ParenthesizedExpression}},OpenParen:null,Expression:null,CloseParen:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(openParen,expression,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.OpenParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,openParen);this.Expression=this.Attach(Kusto.Language.Syntax.Expression,expression);this.CloseParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.OpenParen;case 1:return this.Expression;case 2:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"OpenParen";case 1:return"Expression";case 2:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitParenthesizedExpression(this)},Accept:function(TResult,visitor){return visitor.VisitParenthesizedExpression(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.ParenthesizedExpression(($t=this.OpenParen)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.Expression)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),($t2=this.CloseParen)!=null?$t2.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.ParseKvWithClause",{inherits:[Kusto.Language.Syntax.Clause],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ParseKvWithClause}},WithKeyword:null,OpenParen:null,Properties:null,CloseParen:null,ChildCount:{get:function(){return 4}}},ctors:{ctor:function(withKeyword,openParen,properties,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Clause.ctor.call(this,diagnostics);this.WithKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,withKeyword);this.OpenParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,openParen);this.Properties=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NamedParameter)),properties);this.CloseParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.WithKeyword;case 1:return this.OpenParen;case 2:return this.Properties;case 3:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"WithKeyword";case 1:return"OpenParen";case 2:return"Properties";case 3:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.None;case 3:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitParseKvWithClause(this)},Accept:function(TResult,visitor){return visitor.VisitParseKvWithClause(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3;return new Kusto.Language.Syntax.ParseKvWithClause(($t=this.WithKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.OpenParen)!=null?$t1.Clone$1(includeDiagnostics):null,($t2=this.Properties)!=null?$t2.Clone$2(includeDiagnostics):null,($t3=this.CloseParen)!=null?$t3.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.PartitionOperand",{inherits:[Kusto.Language.Syntax.Expression],ctors:{ctor:function(diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics)}}});Bridge.define("Kusto.Language.Syntax.PathExpression",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.PathExpression}},Expression:null,Dot:null,Selector:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(expression,dot,selector,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.Expression=this.Attach(Kusto.Language.Syntax.Expression,expression);this.Dot=this.Attach(Kusto.Language.Syntax.SyntaxToken,dot,!0);this.Selector=this.Attach(Kusto.Language.Syntax.Expression,selector);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Expression;case 1:return this.Dot;case 2:return this.Selector;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Expression";case 1:return"Dot";case 2:return"Selector";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 1:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Expression;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitPathExpression(this)},Accept:function(TResult,visitor){return visitor.VisitPathExpression(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.PathExpression(Bridge.cast(($t=this.Expression)!=null?$t.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),($t1=this.Dot)!=null?$t1.Clone$1(includeDiagnostics):null,Bridge.cast(($t2=this.Selector)!=null?$t2.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.PatternDeclaration",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.PatternDeclaration}},EqualToken:null,OpenParen:null,Parameters:null,CloseParen:null,PathParameter:null,OpenBrace:null,Patterns:null,CloseBrace:null,ChildCount:{get:function(){return 8}}},ctors:{ctor:function(equalToken,openParen,parameters,closeParen,pathParameter,openBrace,patterns,closeBrace,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.EqualToken=this.Attach(Kusto.Language.Syntax.SyntaxToken,equalToken);this.OpenParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,openParen);this.Parameters=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NameAndTypeDeclaration)),parameters);this.CloseParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,closeParen);this.PathParameter=this.Attach(Kusto.Language.Syntax.PatternPathParameter,pathParameter,!0);this.OpenBrace=this.Attach(Kusto.Language.Syntax.SyntaxToken,openBrace);this.Patterns=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.PatternMatch),patterns);this.CloseBrace=this.Attach(Kusto.Language.Syntax.SyntaxToken,closeBrace);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.EqualToken;case 1:return this.OpenParen;case 2:return this.Parameters;case 3:return this.CloseParen;case 4:return this.PathParameter;case 5:return this.OpenBrace;case 6:return this.Patterns;case 7:return this.CloseBrace;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"EqualToken";case 1:return"OpenParen";case 2:return"Parameters";case 3:return"CloseParen";case 4:return"PathParameter";case 5:return"OpenBrace";case 6:return"Patterns";case 7:return"CloseBrace";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 4:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;case 3:return Kusto.Language.Editor.CompletionHint.Syntax;case 4:return Kusto.Language.Editor.CompletionHint.Clause;case 5:return Kusto.Language.Editor.CompletionHint.Syntax;case 6:return Kusto.Language.Editor.CompletionHint.Clause;case 7:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitPatternDeclaration(this)},Accept:function(TResult,visitor){return visitor.VisitPatternDeclaration(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3,$t4,$t5,$t6,$t7;return new Kusto.Language.Syntax.PatternDeclaration(($t=this.EqualToken)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.OpenParen)!=null?$t1.Clone$1(includeDiagnostics):null,($t2=this.Parameters)!=null?$t2.Clone$2(includeDiagnostics):null,($t3=this.CloseParen)!=null?$t3.Clone$1(includeDiagnostics):null,Bridge.cast(($t4=this.PathParameter)!=null?$t4.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.PatternPathParameter),($t5=this.OpenBrace)!=null?$t5.Clone$1(includeDiagnostics):null,($t6=this.Patterns)!=null?$t6.Clone$2(includeDiagnostics):null,($t7=this.CloseBrace)!=null?$t7.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.PatternStatement",{inherits:[Kusto.Language.Syntax.Statement],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.PatternStatement}},DeclareKeyword:null,PatternKeyword:null,Name:null,Pattern:null,ChildCount:{get:function(){return 4}}},ctors:{ctor:function(declareKeyword,patternKeyword,name,pattern,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Statement.ctor.call(this,diagnostics);this.DeclareKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,declareKeyword);this.PatternKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,patternKeyword);this.Name=this.Attach(Kusto.Language.Syntax.NameDeclaration,name);this.Pattern=this.Attach(Kusto.Language.Syntax.PatternDeclaration,pattern,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.DeclareKeyword;case 1:return this.PatternKeyword;case 2:return this.Name;case 3:return this.Pattern;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"DeclareKeyword";case 1:return"PatternKeyword";case 2:return"Name";case 3:return"Pattern";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 3:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Keyword;case 2:return Kusto.Language.Editor.CompletionHint.Declaration;case 3:return Kusto.Language.Editor.CompletionHint.Clause;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitPatternStatement(this)},Accept:function(TResult,visitor){return visitor.VisitPatternStatement(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3;return new Kusto.Language.Syntax.PatternStatement(($t=this.DeclareKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.PatternKeyword)!=null?$t1.Clone$1(includeDiagnostics):null,Bridge.cast(($t2=this.Name)!=null?$t2.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.NameDeclaration),Bridge.cast(($t3=this.Pattern)!=null?$t3.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.PatternDeclaration),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.PipeExpression",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.PipeExpression}},Expression:null,Bar:null,Operator:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(expression,bar,operator,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.Expression=this.Attach(Kusto.Language.Syntax.Expression,expression);this.Bar=this.Attach(Kusto.Language.Syntax.SyntaxToken,bar);this.Operator=this.Attach(Kusto.Language.Syntax.QueryOperator,operator);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Expression;case 1:return this.Bar;case 2:return this.Operator;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Expression";case 1:return"Bar";case 2:return"Operator";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Tabular;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Query;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitPipeExpression(this)},Accept:function(TResult,visitor){return visitor.VisitPipeExpression(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.PipeExpression(Bridge.cast(($t=this.Expression)!=null?$t.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),($t1=this.Bar)!=null?$t1.Clone$1(includeDiagnostics):null,Bridge.cast(($t2=this.Operator)!=null?$t2.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.QueryOperator),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.PrefixUnaryExpression",{inherits:[Kusto.Language.Syntax.Expression],fields:{kind:0},props:{Kind:{get:function(){return this.kind}},Operator:null,Expression:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(kind,operator,expression,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.kind=kind;this.Operator=this.Attach(Kusto.Language.Syntax.SyntaxToken,operator);this.Expression=this.Attach(Kusto.Language.Syntax.Expression,expression);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Operator;case 1:return this.Expression;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Operator";case 1:return"Expression";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitPrefixUnaryExpression(this)},Accept:function(TResult,visitor){return visitor.VisitPrefixUnaryExpression(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.PrefixUnaryExpression(this.Kind,($t=this.Operator)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.Expression)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.TypeExpression",{inherits:[Kusto.Language.Syntax.Expression],ctors:{ctor:function(diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics)}}});Bridge.define("Kusto.Language.Syntax.QueryParametersStatement",{inherits:[Kusto.Language.Syntax.Statement],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.QueryParametersStatement}},DeclareKeyword:null,QueryParametersKeyword:null,OpenParen:null,Parameters:null,CloseParen:null,ChildCount:{get:function(){return 5}}},ctors:{ctor:function(declareKeyword,queryParametersKeyword,openParen,parameters,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Statement.ctor.call(this,diagnostics);this.DeclareKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,declareKeyword);this.QueryParametersKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,queryParametersKeyword);this.OpenParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,openParen);this.Parameters=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.FunctionParameter)),parameters);this.CloseParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.DeclareKeyword;case 1:return this.QueryParametersKeyword;case 2:return this.OpenParen;case 3:return this.Parameters;case 4:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"DeclareKeyword";case 1:return"QueryParametersKeyword";case 2:return"OpenParen";case 3:return"Parameters";case 4:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;case 3:return Kusto.Language.Editor.CompletionHint.Syntax;case 4:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitQueryParametersStatement(this)},Accept:function(TResult,visitor){return visitor.VisitQueryParametersStatement(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3,$t4;return new Kusto.Language.Syntax.QueryParametersStatement(($t=this.DeclareKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.QueryParametersKeyword)!=null?$t1.Clone$1(includeDiagnostics):null,($t2=this.OpenParen)!=null?$t2.Clone$1(includeDiagnostics):null,($t3=this.Parameters)!=null?$t3.Clone$2(includeDiagnostics):null,($t4=this.CloseParen)!=null?$t4.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.ReduceByWithClause",{inherits:[Kusto.Language.Syntax.Clause],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ReduceByWithClause}},WithKeyword:null,Parameters:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(withKeyword,parameters,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Clause.ctor.call(this,diagnostics);this.WithKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,withKeyword);this.Parameters=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NamedParameter)),parameters);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.WithKeyword;case 1:return this.Parameters;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"WithKeyword";case 1:return"Parameters";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitReduceByWithClause(this)},Accept:function(TResult,visitor){return visitor.VisitReduceByWithClause(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.ReduceByWithClause(($t=this.WithKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Parameters)!=null?$t1.Clone$2(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.RenderWithClause",{inherits:[Kusto.Language.Syntax.Clause],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.RenderWithClause}},WithKeyword:null,OpenParen:null,LeadingComma:null,Properties:null,CloseParen:null,ChildCount:{get:function(){return 5}}},ctors:{ctor:function(withKeyword,openParen,leadingComma,properties,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Clause.ctor.call(this,diagnostics);this.WithKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,withKeyword);this.OpenParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,openParen);this.LeadingComma=this.Attach(Kusto.Language.Syntax.SyntaxToken,leadingComma,!0);this.Properties=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NamedParameter)),properties);this.CloseParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.WithKeyword;case 1:return this.OpenParen;case 2:return this.LeadingComma;case 3:return this.Properties;case 4:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"WithKeyword";case 1:return"OpenParen";case 2:return"LeadingComma";case 3:return"Properties";case 4:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 2:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;case 3:return Kusto.Language.Editor.CompletionHint.None;case 4:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitRenderWithClause(this)},Accept:function(TResult,visitor){return visitor.VisitRenderWithClause(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3,$t4;return new Kusto.Language.Syntax.RenderWithClause(($t=this.WithKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.OpenParen)!=null?$t1.Clone$1(includeDiagnostics):null,($t2=this.LeadingComma)!=null?$t2.Clone$1(includeDiagnostics):null,($t3=this.Properties)!=null?$t3.Clone$2(includeDiagnostics):null,($t4=this.CloseParen)!=null?$t4.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.RestrictStatement",{inherits:[Kusto.Language.Syntax.Statement],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.RestrictStatement}},RestrictKeyword:null,AccessKeyword:null,ToKeyword:null,OpenParen:null,Expressions:null,CloseParen:null,ChildCount:{get:function(){return 6}}},ctors:{ctor:function(restrictKeyword,accessKeyword,toKeyword,openParen,expressions,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Statement.ctor.call(this,diagnostics);this.RestrictKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,restrictKeyword);this.AccessKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,accessKeyword);this.ToKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,toKeyword);this.OpenParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,openParen);this.Expressions=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),expressions);this.CloseParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.RestrictKeyword;case 1:return this.AccessKeyword;case 2:return this.ToKeyword;case 3:return this.OpenParen;case 4:return this.Expressions;case 5:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"RestrictKeyword";case 1:return"AccessKeyword";case 2:return"ToKeyword";case 3:return"OpenParen";case 4:return"Expressions";case 5:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Keyword;case 2:return Kusto.Language.Editor.CompletionHint.Keyword;case 3:return Kusto.Language.Editor.CompletionHint.Syntax;case 4:return Kusto.Language.Editor.CompletionHint.Scalar;case 5:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitRestrictStatement(this)},Accept:function(TResult,visitor){return visitor.VisitRestrictStatement(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3,$t4,$t5;return new Kusto.Language.Syntax.RestrictStatement(($t=this.RestrictKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.AccessKeyword)!=null?$t1.Clone$1(includeDiagnostics):null,($t2=this.ToKeyword)!=null?$t2.Clone$1(includeDiagnostics):null,($t3=this.OpenParen)!=null?$t3.Clone$1(includeDiagnostics):null,($t4=this.Expressions)!=null?$t4.Clone$2(includeDiagnostics):null,($t5=this.CloseParen)!=null?$t5.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.SeparatedElement$1",function(TElement){return{inherits:[Kusto.Language.Syntax.SeparatedElement],statics:{methods:{Empty:function(){return new(Kusto.Language.Syntax.SeparatedElement$1(TElement))(null,null)}}},props:{Element$1:{get:function(){return Bridge.cast(this.Element,TElement)}}},ctors:{ctor:function(element,separator){separator===void 0&&(separator=null);this.$initialize();Kusto.Language.Syntax.SeparatedElement.ctor.call(this,element,separator)}},methods:{CloneCore:function(includeDiagnostics){var $t;return new(Kusto.Language.Syntax.SeparatedElement$1(TElement))(Bridge.cast(this.Element$1.Clone(includeDiagnostics),TElement),($t=this.Separator)!=null?$t.Clone$1(includeDiagnostics):null)}}}});Bridge.define("Kusto.Language.Syntax.SetOptionStatement",{inherits:[Kusto.Language.Syntax.Statement],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.SetOptionStatement}},SetKeyword:null,Name:null,ValueClause:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(setKeyword,name,valueClause,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Statement.ctor.call(this,diagnostics);this.SetKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,setKeyword);this.Name=this.Attach(Kusto.Language.Syntax.NameDeclaration,name);this.ValueClause=this.Attach(Kusto.Language.Syntax.OptionValueClause,valueClause,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.SetKeyword;case 1:return this.Name;case 2:return this.ValueClause;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"SetKeyword";case 1:return"Name";case 2:return"ValueClause";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 2:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Option;case 2:return Kusto.Language.Editor.CompletionHint.Clause;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitSetOptionStatement(this)},Accept:function(TResult,visitor){return visitor.VisitSetOptionStatement(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.SetOptionStatement(($t=this.SetKeyword)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.Name)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.NameDeclaration),Bridge.cast(($t2=this.ValueClause)!=null?$t2.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.OptionValueClause),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.StarExpression",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.StarExpression}},AsteriskToken:null,ChildCount:{get:function(){return 1}}},ctors:{ctor:function(asteriskToken,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.AsteriskToken=this.Attach(Kusto.Language.Syntax.SyntaxToken,asteriskToken);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.AsteriskToken;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"AsteriskToken";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitStarExpression(this)},Accept:function(TResult,visitor){return visitor.VisitStarExpression(this)},CloneCore:function(includeDiagnostics){var $t;return new Kusto.Language.Syntax.StarExpression(($t=this.AsteriskToken)!=null?$t.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.SummarizeByClause",{inherits:[Kusto.Language.Syntax.Clause],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.SummarizeByClause}},ByKeyword:null,Expressions:null,BinClause:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(byKeyword,expressions,binClause,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Clause.ctor.call(this,diagnostics);this.ByKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,byKeyword);this.Expressions=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),expressions);this.BinClause=this.Attach(Kusto.Language.Syntax.NamedExpression,binClause,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.ByKeyword;case 1:return this.Expressions;case 2:return this.BinClause;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"ByKeyword";case 1:return"Expressions";case 2:return"BinClause";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 2:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Scalar;case 2:return Kusto.Language.Editor.CompletionHint.None;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitSummarizeByClause(this)},Accept:function(TResult,visitor){return visitor.VisitSummarizeByClause(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.SummarizeByClause(($t=this.ByKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Expressions)!=null?$t1.Clone$2(includeDiagnostics):null,Bridge.cast(($t2=this.BinClause)!=null?$t2.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.NamedExpression),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.SyntaxList$1",function(TElement){return{inherits:[Kusto.Language.Syntax.SyntaxList,System.Collections.Generic.IReadOnlyList$1(TElement)],statics:{methods:{Copy:function(list){for(var newArray=System.Array.init(System.Array.getCount(list,TElement),function(){return Bridge.getDefaultValue(TElement)},TElement),i=0;i<newArray.length;i=i+1|0)newArray[System.Array.index(i,newArray)]=System.Array.getItem(list,i,TElement);return newArray},Empty:function(){return new(Kusto.Language.Syntax.SyntaxList$1(TElement).ctor)(System.Array.init(0,function(){return Bridge.getDefaultValue(TElement)},TElement))}}},props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.List}},ElementType:{get:function(){return TElement}}},alias:["getItem$1",["System$Collections$Generic$IReadOnlyList$1$"+Bridge.getTypeAlias(TElement)+"$getItem","System$Collections$Generic$IReadOnlyList$1$getItem"],"GetEnumerator$1",["System$Collections$Generic$IEnumerable$1$"+Bridge.getTypeAlias(TElement)+"$GetEnumerator","System$Collections$Generic$IEnumerable$1$GetEnumerator"],"Count",["System$Collections$Generic$IReadOnlyCollection$1$"+Bridge.getTypeAlias(TElement)+"$Count","System$Collections$Generic$IReadOnlyCollection$1$Count"]],ctors:{$ctor1:function(elements,diagnostics){diagnostics===void 0&&(diagnostics=null);var $t;this.$initialize();Kusto.Language.Syntax.SyntaxList.ctor.call(this,($t=TElement,System.Linq.Enumerable.from(elements,$t).ToArray($t)),diagnostics)},ctor:function(elements){elements===void 0&&(elements=[]);this.$initialize();Kusto.Language.Syntax.SyntaxList.ctor.call(this,elements,null)}},methods:{getItem$1:function(index){return Bridge.cast(this.getItem.call(this,index),TElement)},GetEnumerator$1:function(){return Bridge.getEnumerator(Bridge.cast(this.GetElements(),System.Collections.Generic.IEnumerable$1(TElement)),TElement)},System$Collections$IEnumerable$GetEnumerator:function(){return this.GetEnumerator$1()},Clone$2:function(includeDiagnostics){return includeDiagnostics===void 0&&(includeDiagnostics=!0),Bridge.cast(this.CloneCore(includeDiagnostics),Kusto.Language.Syntax.SyntaxList$1(TElement))},CloneCore:function(includeDiagnostics){for(var oldElements=this.GetElements(),newElements=System.Array.init(System.Array.getCount(oldElements,Kusto.Language.Syntax.SyntaxElement),function(){return Bridge.getDefaultValue(TElement)},TElement),i=0;i<newElements.length;i=i+1|0)newElements[System.Array.index(i,newElements)]=Bridge.cast(System.Array.getItem(oldElements,i,Kusto.Language.Syntax.SyntaxElement).Clone(includeDiagnostics),TElement);return new(Kusto.Language.Syntax.SyntaxList$1(TElement).ctor)(newElements)}}}});Bridge.define("Kusto.Language.Syntax.TokenName",{inherits:[Kusto.Language.Syntax.Name],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.TokenName}},Name:null,ChildCount:{get:function(){return 1}},SimpleName:{get:function(){return this.Name.ValueText}}},ctors:{ctor:function(name,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Name.ctor.call(this,diagnostics);this.Name=this.Attach(Kusto.Language.Syntax.SyntaxToken,name);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Name;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Name";default:throw new System.ArgumentOutOfRangeException.ctor;}},Accept$1:function(visitor){visitor.VisitTokenName(this)},Accept:function(TResult,visitor){return visitor.VisitTokenName(this)},CloneCore:function(includeDiagnostics){var $t;return new Kusto.Language.Syntax.TokenName(($t=this.Name)!=null?$t.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.TopHittersByClause",{inherits:[Kusto.Language.Syntax.Clause],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.TopHittersByClause}},ByKeyword:null,Expression:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(byKeyword,expression,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Clause.ctor.call(this,diagnostics);this.ByKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,byKeyword);this.Expression=this.Attach(Kusto.Language.Syntax.Expression,expression);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.ByKeyword;case 1:return this.Expression;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"ByKeyword";case 1:return"Expression";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitTopHittersByClause(this)},Accept:function(TResult,visitor){return visitor.VisitTopHittersByClause(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.TopHittersByClause(($t=this.ByKeyword)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.Expression)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.TopNestedClause",{inherits:[Kusto.Language.Syntax.Clause],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.TopNestedClause}},TopNestedKeyword:null,Expression:null,OfKeyword:null,OfExpression:null,WithOthersClause:null,ByKeyword:null,ByExpression:null,ChildCount:{get:function(){return 7}}},ctors:{ctor:function(topNestedKeyword,expression,ofKeyword,ofExpression,withOthersClause,byKeyword,byExpression,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Clause.ctor.call(this,diagnostics);this.TopNestedKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,topNestedKeyword);this.Expression=this.Attach(Kusto.Language.Syntax.Expression,expression,!0);this.OfKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,ofKeyword);this.OfExpression=this.Attach(Kusto.Language.Syntax.Expression,ofExpression);this.WithOthersClause=this.Attach(Kusto.Language.Syntax.TopNestedWithOthersClause,withOthersClause,!0);this.ByKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,byKeyword);this.ByExpression=this.Attach(Kusto.Language.Syntax.Expression,byExpression);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.TopNestedKeyword;case 1:return this.Expression;case 2:return this.OfKeyword;case 3:return this.OfExpression;case 4:return this.WithOthersClause;case 5:return this.ByKeyword;case 6:return this.ByExpression;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"TopNestedKeyword";case 1:return"Expression";case 2:return"OfKeyword";case 3:return"OfExpression";case 4:return"WithOthersClause";case 5:return"ByKeyword";case 6:return"ByExpression";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 1:case 4:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Number;case 2:return Kusto.Language.Editor.CompletionHint.Keyword;case 3:return Kusto.Language.Editor.CompletionHint.Scalar;case 4:return Kusto.Language.Editor.CompletionHint.Clause;case 5:return Kusto.Language.Editor.CompletionHint.Keyword;case 6:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitTopNestedClause(this)},Accept:function(TResult,visitor){return visitor.VisitTopNestedClause(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3,$t4,$t5,$t6;return new Kusto.Language.Syntax.TopNestedClause(($t=this.TopNestedKeyword)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.Expression)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),($t2=this.OfKeyword)!=null?$t2.Clone$1(includeDiagnostics):null,Bridge.cast(($t3=this.OfExpression)!=null?$t3.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),Bridge.cast(($t4=this.WithOthersClause)!=null?$t4.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.TopNestedWithOthersClause),($t5=this.ByKeyword)!=null?$t5.Clone$1(includeDiagnostics):null,Bridge.cast(($t6=this.ByExpression)!=null?$t6.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.TopNestedWithOthersClause",{inherits:[Kusto.Language.Syntax.Clause],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.TopNestedWithOthersClause}},WithKeyword:null,OthersKeyword:null,Equal:null,Expression:null,ChildCount:{get:function(){return 4}}},ctors:{ctor:function(withKeyword,othersKeyword,equal,expression,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Clause.ctor.call(this,diagnostics);this.WithKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,withKeyword);this.OthersKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,othersKeyword);this.Equal=this.Attach(Kusto.Language.Syntax.SyntaxToken,equal);this.Expression=this.Attach(Kusto.Language.Syntax.Expression,expression);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.WithKeyword;case 1:return this.OthersKeyword;case 2:return this.Equal;case 3:return this.Expression;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"WithKeyword";case 1:return"OthersKeyword";case 2:return"Equal";case 3:return"Expression";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Keyword;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;case 3:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitTopNestedWithOthersClause(this)},Accept:function(TResult,visitor){return visitor.VisitTopNestedWithOthersClause(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3;return new Kusto.Language.Syntax.TopNestedWithOthersClause(($t=this.WithKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.OthersKeyword)!=null?$t1.Clone$1(includeDiagnostics):null,($t2=this.Equal)!=null?$t2.Clone$1(includeDiagnostics):null,Bridge.cast(($t3=this.Expression)!=null?$t3.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.ToScalarExpression",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ToScalarExpression}},ToScalar:null,KindParameter:null,OpenParen:null,Expression:null,CloseParen:null,ChildCount:{get:function(){return 5}}},ctors:{ctor:function(toScalar,kindParameter,openParen,expression,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.ToScalar=this.Attach(Kusto.Language.Syntax.SyntaxToken,toScalar);this.KindParameter=this.Attach(Kusto.Language.Syntax.NamedParameter,kindParameter,!0);this.OpenParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,openParen);this.Expression=this.Attach(Kusto.Language.Syntax.Expression,expression);this.CloseParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.ToScalar;case 1:return this.KindParameter;case 2:return this.OpenParen;case 3:return this.Expression;case 4:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"ToScalar";case 1:return"KindParameter";case 2:return"OpenParen";case 3:return"Expression";case 4:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 1:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 1:return Kusto.Language.Editor.CompletionHint.Clause;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;case 3:return Kusto.Language.Editor.CompletionHint.Tabular;case 4:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitToScalarExpression(this)},Accept:function(TResult,visitor){return visitor.VisitToScalarExpression(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3,$t4;return new Kusto.Language.Syntax.ToScalarExpression(($t=this.ToScalar)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.KindParameter)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.NamedParameter),($t2=this.OpenParen)!=null?$t2.Clone$1(includeDiagnostics):null,Bridge.cast(($t3=this.Expression)!=null?$t3.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),($t4=this.CloseParen)!=null?$t4.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.ToTableExpression",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ToTableExpression}},ToTable:null,KindParameter:null,OpenParen:null,Expression:null,CloseParen:null,ChildCount:{get:function(){return 5}}},ctors:{ctor:function(toTable,kindParameter,openParen,expression,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.ToTable=this.Attach(Kusto.Language.Syntax.SyntaxToken,toTable);this.KindParameter=this.Attach(Kusto.Language.Syntax.NamedParameter,kindParameter,!0);this.OpenParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,openParen);this.Expression=this.Attach(Kusto.Language.Syntax.Expression,expression);this.CloseParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.ToTable;case 1:return this.KindParameter;case 2:return this.OpenParen;case 3:return this.Expression;case 4:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"ToTable";case 1:return"KindParameter";case 2:return"OpenParen";case 3:return"Expression";case 4:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 1:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 1:return Kusto.Language.Editor.CompletionHint.Clause;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;case 3:return Kusto.Language.Editor.CompletionHint.Tabular;case 4:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitToTableExpression(this)},Accept:function(TResult,visitor){return visitor.VisitToTableExpression(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3,$t4;return new Kusto.Language.Syntax.ToTableExpression(($t=this.ToTable)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.KindParameter)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.NamedParameter),($t2=this.OpenParen)!=null?$t2.Clone$1(includeDiagnostics):null,Bridge.cast(($t3=this.Expression)!=null?$t3.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),($t4=this.CloseParen)!=null?$t4.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.TypedColumnReference",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.TypedColumnReference}},Column:null,ColonToken:null,Type:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(column,colonToken,type,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.Column=this.Attach(Kusto.Language.Syntax.NameReference,column);this.ColonToken=this.Attach(Kusto.Language.Syntax.SyntaxToken,colonToken);this.Type=this.Attach(Kusto.Language.Syntax.TypeExpression,type);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Column;case 1:return this.ColonToken;case 2:return this.Type;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Column";case 1:return"ColonToken";case 2:return"Type";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Column;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitTypedColumnReference(this)},Accept:function(TResult,visitor){return visitor.VisitTypedColumnReference(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.TypedColumnReference(Bridge.cast(($t=this.Column)!=null?$t.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.NameReference),($t1=this.ColonToken)!=null?$t1.Clone$1(includeDiagnostics):null,Bridge.cast(($t2=this.Type)!=null?$t2.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.TypeExpression),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.TypeOfLiteralExpression",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.TypeOfLiteralExpression}},TypeOfKeyword:null,OpenParen:null,Types:null,CloseParen:null,ChildCount:{get:function(){return 4}},IsLiteral:{get:function(){return!0}},LiteralValueInfo:{get:function(){return null}}},ctors:{ctor:function(typeOfKeyword,openParen,types,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.TypeOfKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,typeOfKeyword);this.OpenParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,openParen);this.Types=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),types);this.CloseParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.TypeOfKeyword;case 1:return this.OpenParen;case 2:return this.Types;case 3:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"TypeOfKeyword";case 1:return"OpenParen";case 2:return"Types";case 3:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.None;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Declaration;case 3:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitTypeOfLiteralExpression(this)},Accept:function(TResult,visitor){return visitor.VisitTypeOfLiteralExpression(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3;return new Kusto.Language.Syntax.TypeOfLiteralExpression(($t=this.TypeOfKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.OpenParen)!=null?$t1.Clone$1(includeDiagnostics):null,($t2=this.Types)!=null?$t2.Clone$2(includeDiagnostics):null,($t3=this.CloseParen)!=null?$t3.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.WildcardedName",{inherits:[Kusto.Language.Syntax.Name],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.WildcardedName}},Pattern:null,ChildCount:{get:function(){return 1}},SimpleName:{get:function(){return this.Pattern.ValueText}}},ctors:{ctor:function(pattern,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Name.ctor.call(this,diagnostics);this.Pattern=this.Attach(Kusto.Language.Syntax.SyntaxToken,pattern);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Pattern;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Pattern";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitWildcardedName(this)},Accept:function(TResult,visitor){return visitor.VisitWildcardedName(this)},CloneCore:function(includeDiagnostics){var $t;return new Kusto.Language.Syntax.WildcardedName(($t=this.Pattern)!=null?$t.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Symbols.DynamicAnySymbol",{inherits:[Kusto.Language.Symbols.DynamicSymbol],statics:{fields:{Instance:null},ctors:{init:function(){this.Instance=new Kusto.Language.Symbols.DynamicAnySymbol}}},props:{Kind:{get:function(){return Kusto.Language.Symbols.SymbolKind.Primitive}}},ctors:{ctor:function(){this.$initialize();Kusto.Language.Symbols.DynamicSymbol.ctor.call(this,System.String.format("dynamic",null))}}});Bridge.define("Kusto.Language.Symbols.DynamicArraySymbol",{inherits:[Kusto.Language.Symbols.DynamicSymbol],props:{ElementType:null,Kind:{get:function(){return Kusto.Language.Symbols.SymbolKind.Array}}},ctors:{ctor:function(elementType){this.$initialize();Kusto.Language.Symbols.DynamicSymbol.ctor.call(this,"dynamic");this.ElementType=elementType}}});Bridge.define("Kusto.Language.Symbols.DynamicBagSymbol",{inherits:[Kusto.Language.Symbols.DynamicSymbol],statics:{fields:{Empty:null},ctors:{init:function(){this.Empty=new Kusto.Language.Symbols.DynamicBagSymbol.ctor}}},fields:{_nameToPropertyMap:null},props:{Properties:null,Members:{get:function(){return this.Properties}},Kind:{get:function(){return Kusto.Language.Symbols.SymbolKind.Bag}},Tabularity:{get:function(){return Kusto.Language.Symbols.Tabularity.Scalar}}},ctors:{$ctor1:function(properties){this.$initialize();Kusto.Language.Symbols.DynamicSymbol.ctor.call(this,"dynamic");this.Properties=Kusto.Language.Utils.ArgumentCheckers.CheckArgumentNullOrElementNull(Kusto.Language.Symbols.ColumnSymbol,Kusto.Language.Utils.ListExtensions.ToReadOnly(Kusto.Language.Symbols.ColumnSymbol,properties),"properties")},ctor:function(properties){properties===void 0&&(properties=[]);Kusto.Language.Symbols.DynamicBagSymbol.$ctor1.call(this,Bridge.cast(properties,System.Collections.Generic.IEnumerable$1(Kusto.Language.Symbols.ColumnSymbol)))}},methods:{TryGetProperty:function(name,property){var $t,tmp,prop;if(this._nameToPropertyMap==null){tmp=new(System.Collections.Generic.Dictionary$2(System.String,Kusto.Language.Symbols.ColumnSymbol).ctor);$t=Bridge.getEnumerator(this.Properties,Kusto.Language.Symbols.ColumnSymbol);try{while($t.moveNext())prop=$t.Current,tmp.setItem(prop.Name,prop)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}Kusto.Language.Utils.Interlocked.CompareExchange(System.Collections.Generic.Dictionary$2(System.String,Kusto.Language.Symbols.ColumnSymbol),Bridge.ref(this,"_nameToPropertyMap"),tmp,null)}return this._nameToPropertyMap.tryGetValue(name,property)},WithProperties:function(properties){return Bridge.referenceEquals(properties,this.Properties)?this:new Kusto.Language.Symbols.DynamicBagSymbol.$ctor1(properties)},AddOrUpdateProperty:function(property){if(property==null)return this;var existingProperty={};return this.TryGetProperty(property.Name,existingProperty)?new Kusto.Language.Symbols.DynamicBagSymbol.$ctor1(System.Linq.Enumerable.from(this.Properties,Kusto.Language.Symbols.ColumnSymbol).select(function(p){return Bridge.referenceEquals(p,existingProperty.v)?property:existingProperty.v}).toList(Kusto.Language.Symbols.ColumnSymbol)):new Kusto.Language.Symbols.DynamicBagSymbol.$ctor1(System.Linq.Enumerable.from(this.Properties,Kusto.Language.Symbols.ColumnSymbol).concat(System.Array.init([property],Kusto.Language.Symbols.ColumnSymbol)))},WithSource:function(source){return new Kusto.Language.Symbols.DynamicBagSymbol.$ctor1(System.Linq.Enumerable.from(this.Properties,Kusto.Language.Symbols.ColumnSymbol).select(function(p){return p.WithSource(source)}))}}});Bridge.define("Kusto.Language.Symbols.DynamicPrimitiveSymbol",{inherits:[Kusto.Language.Symbols.DynamicSymbol],props:{UnderlyingType:null,Kind:{get:function(){return Kusto.Language.Symbols.SymbolKind.Primitive}}},ctors:{ctor:function(underlyingType){this.$initialize();Kusto.Language.Symbols.DynamicSymbol.ctor.call(this,"dynamic");this.UnderlyingType=underlyingType}}});Bridge.define("Kusto.Language.Syntax.AsOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.AsOperator}},AsKeyword:null,Parameters:null,Name:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(asKeyword,parameters,name,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.AsKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,asKeyword);this.Parameters=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.Name=this.Attach(Kusto.Language.Syntax.NameDeclaration,name);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.AsKeyword;case 1:return this.Parameters;case 2:return this.Name;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"AsKeyword";case 1:return"Parameters";case 2:return"Name";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.None;case 2:return Kusto.Language.Editor.CompletionHint.Declaration;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitAsOperator(this)},Accept:function(TResult,visitor){return visitor.VisitAsOperator(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.AsOperator(($t=this.AsKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Parameters)!=null?$t1.Clone$2(includeDiagnostics):null,Bridge.cast(($t2=this.Name)!=null?$t2.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.NameDeclaration),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.AssertSchemaOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.AssertSchemaOperator}},AssertSchemaKeyword:null,Schema:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(assertSchemaKeyword,schema,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.AssertSchemaKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,assertSchemaKeyword);this.Schema=this.Attach(Kusto.Language.Syntax.RowSchema,schema);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.AssertSchemaKeyword;case 1:return this.Schema;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"AssertSchemaKeyword";case 1:return"Schema";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitAssertSchemaOperator(this)},Accept:function(TResult,visitor){return visitor.VisitAssertSchemaOperator(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.AssertSchemaOperator(($t=this.AssertSchemaKeyword)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.Schema)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.RowSchema),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.BadCommand",{inherits:[Kusto.Language.Syntax.Command],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.BadCommand}},DotToken:null,ChildCount:{get:function(){return 1}}},ctors:{ctor:function(dotToken,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Command.ctor.call(this,diagnostics);this.DotToken=this.Attach(Kusto.Language.Syntax.SyntaxToken,dotToken);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.DotToken;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"DotToken";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitBadCommand(this)},Accept:function(TResult,visitor){return visitor.VisitBadCommand(this)},CloneCore:function(includeDiagnostics){var $t;return new Kusto.Language.Syntax.BadCommand(($t=this.DotToken)!=null?$t.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.BadQueryOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.BadQueryOperator}},Keyword:null,ChildCount:{get:function(){return 1}}},ctors:{ctor:function(keyword,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.Keyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,keyword);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Keyword;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Keyword";default:throw new System.ArgumentOutOfRangeException.ctor;}},Accept$1:function(visitor){visitor.VisitBadQueryOperator(this)},Accept:function(TResult,visitor){return visitor.VisitBadQueryOperator(this)},CloneCore:function(includeDiagnostics){var $t;return new Kusto.Language.Syntax.BadQueryOperator(($t=this.Keyword)!=null?$t.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.CommandAndSkippedTokens",{inherits:[Kusto.Language.Syntax.Command],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.CommandAndSkippedTokens}},Command:null,SkippedTokens:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(command,skippedTokens,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Command.ctor.call(this,diagnostics);this.Command=this.Attach(Kusto.Language.Syntax.Command,command);this.SkippedTokens=this.Attach(Kusto.Language.Syntax.SkippedTokens,skippedTokens,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Command;case 1:return this.SkippedTokens;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Command";case 1:return"SkippedTokens";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 1:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Tabular;case 1:return Kusto.Language.Editor.CompletionHint.None;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitCommandAndSkippedTokens(this)},Accept:function(TResult,visitor){return visitor.VisitCommandAndSkippedTokens(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.CommandAndSkippedTokens(Bridge.cast(($t=this.Command)!=null?$t.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Command),Bridge.cast(($t1=this.SkippedTokens)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.SkippedTokens),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.CommandWithPropertyListClause",{inherits:[Kusto.Language.Syntax.CommandWithClause],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.CommandWithPropertyListClause}},WithKeyword:null,OpenParen:null,Properties:null,CloseParen:null,ChildCount:{get:function(){return 4}}},ctors:{ctor:function(withKeyword,openParen,properties,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.CommandWithClause.ctor.call(this,diagnostics);this.WithKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,withKeyword);this.OpenParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,openParen);this.Properties=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NamedParameter)),properties);this.CloseParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.WithKeyword;case 1:return this.OpenParen;case 2:return this.Properties;case 3:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"WithKeyword";case 1:return"OpenParen";case 2:return"Properties";case 3:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Keyword;case 2:return Kusto.Language.Editor.CompletionHint.Scalar;case 3:return Kusto.Language.Editor.CompletionHint.Keyword;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitCommandWithPropertyListClause(this)},Accept:function(TResult,visitor){return visitor.VisitCommandWithPropertyListClause(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3;return new Kusto.Language.Syntax.CommandWithPropertyListClause(($t=this.WithKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.OpenParen)!=null?$t1.Clone$1(includeDiagnostics):null,($t2=this.Properties)!=null?$t2.Clone$2(includeDiagnostics):null,($t3=this.CloseParen)!=null?$t3.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.CommandWithValueClause",{inherits:[Kusto.Language.Syntax.CommandWithClause],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.CommandWithValueClause}},WithKeyword:null,Value:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(withKeyword,value,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.CommandWithClause.ctor.call(this,diagnostics);this.WithKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,withKeyword);this.Value=this.Attach(Kusto.Language.Syntax.Expression,value,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.WithKeyword;case 1:return this.Value;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"WithKeyword";case 1:return"Value";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 1:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Literal;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitCommandWithValueClause(this)},Accept:function(TResult,visitor){return visitor.VisitCommandWithValueClause(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.CommandWithValueClause(($t=this.WithKeyword)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.Value)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.CompoundNamedExpression",{inherits:[Kusto.Language.Syntax.NamedExpression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.CompoundNamedExpression}},Names:null,EqualToken:null,Expression:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(names,equalToken,expression,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.NamedExpression.ctor.call(this,diagnostics);this.Names=this.Attach(Kusto.Language.Syntax.RenameList,names);this.EqualToken=this.Attach(Kusto.Language.Syntax.SyntaxToken,equalToken);this.Expression=this.Attach(Kusto.Language.Syntax.Expression,expression);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Names;case 1:return this.EqualToken;case 2:return this.Expression;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Names";case 1:return"EqualToken";case 2:return"Expression";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitCompoundNamedExpression(this)},Accept:function(TResult,visitor){return visitor.VisitCompoundNamedExpression(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.CompoundNamedExpression(Bridge.cast(($t=this.Names)!=null?$t.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.RenameList),($t1=this.EqualToken)!=null?$t1.Clone$1(includeDiagnostics):null,Bridge.cast(($t2=this.Expression)!=null?$t2.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.ConsumeOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ConsumeOperator}},ConsumeKeyword:null,Parameters:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(consumeKeyword,parameters,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.ConsumeKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,consumeKeyword);this.Parameters=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.ConsumeKeyword;case 1:return this.Parameters;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"ConsumeKeyword";case 1:return"Parameters";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.None;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitConsumeOperator(this)},Accept:function(TResult,visitor){return visitor.VisitConsumeOperator(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.ConsumeOperator(($t=this.ConsumeKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Parameters)!=null?$t1.Clone$2(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.CountOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.CountOperator}},CountKeyword:null,AsIdentifier:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(countKeyword,asIdentifier,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.CountKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,countKeyword);this.AsIdentifier=this.Attach(Kusto.Language.Syntax.CountAsIdentifierClause,asIdentifier,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.CountKeyword;case 1:return this.AsIdentifier;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"CountKeyword";case 1:return"AsIdentifier";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 1:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Clause;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitCountOperator(this)},Accept:function(TResult,visitor){return visitor.VisitCountOperator(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.CountOperator(($t=this.CountKeyword)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.AsIdentifier)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.CountAsIdentifierClause),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.CustomCommand",{inherits:[Kusto.Language.Syntax.Command],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.CustomCommand}},CommandKind:null,DotToken:null,Custom:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(commandKind,dotToken,custom,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Command.ctor.call(this,diagnostics);this.CommandKind=commandKind;this.DotToken=this.Attach(Kusto.Language.Syntax.SyntaxToken,dotToken);this.Custom=this.Attach(Kusto.Language.Syntax.SyntaxElement,custom);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.DotToken;case 1:return this.Custom;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"DotToken";case 1:return"Custom";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitCustomCommand(this)},Accept:function(TResult,visitor){return visitor.VisitCustomCommand(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.CustomCommand(this.CommandKind,($t=this.DotToken)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Custom)!=null?$t1.Clone(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.DistinctOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.DistinctOperator}},DistinctKeyword:null,Parameters:null,Expressions:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(distinctKeyword,parameters,expressions,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.DistinctKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,distinctKeyword);this.Parameters=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.Expressions=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),expressions);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.DistinctKeyword;case 1:return this.Parameters;case 2:return this.Expressions;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"DistinctKeyword";case 1:return"Parameters";case 2:return"Expressions";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.None;case 2:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitDistinctOperator(this)},Accept:function(TResult,visitor){return visitor.VisitDistinctOperator(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.DistinctOperator(($t=this.DistinctKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Parameters)!=null?$t1.Clone$2(includeDiagnostics):null,($t2=this.Expressions)!=null?$t2.Clone$2(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.EvaluateOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.EvaluateOperator}},EvaluateKeyword:null,Parameters:null,FunctionCall:null,Schema:null,ChildCount:{get:function(){return 4}}},ctors:{ctor:function(evaluateKeyword,parameters,functionCall,schema,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.EvaluateKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,evaluateKeyword);this.Parameters=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.FunctionCall=this.Attach(Kusto.Language.Syntax.FunctionCallExpression,functionCall);this.Schema=this.Attach(Kusto.Language.Syntax.EvaluateSchemaClause,schema,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.EvaluateKeyword;case 1:return this.Parameters;case 2:return this.FunctionCall;case 3:return this.Schema;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"EvaluateKeyword";case 1:return"Parameters";case 2:return"FunctionCall";case 3:return"Schema";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 3:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.None;case 2:return Kusto.Language.Editor.CompletionHint.Function;case 3:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitEvaluateOperator(this)},Accept:function(TResult,visitor){return visitor.VisitEvaluateOperator(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3;return new Kusto.Language.Syntax.EvaluateOperator(($t=this.EvaluateKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Parameters)!=null?$t1.Clone$2(includeDiagnostics):null,Bridge.cast(($t2=this.FunctionCall)!=null?$t2.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.FunctionCallExpression),Bridge.cast(($t3=this.Schema)!=null?$t3.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.EvaluateSchemaClause),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.ExecuteAndCacheOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ExecuteAndCacheOperator}},ExecuteAndCacheKeyword:null,ChildCount:{get:function(){return 1}}},ctors:{ctor:function(executeAndCacheKeyword,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.ExecuteAndCacheKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,executeAndCacheKeyword);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.ExecuteAndCacheKeyword;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"ExecuteAndCacheKeyword";default:throw new System.ArgumentOutOfRangeException.ctor;}},Accept$1:function(visitor){visitor.VisitExecuteAndCacheOperator(this)},Accept:function(TResult,visitor){return visitor.VisitExecuteAndCacheOperator(this)},CloneCore:function(includeDiagnostics){var $t;return new Kusto.Language.Syntax.ExecuteAndCacheOperator(($t=this.ExecuteAndCacheKeyword)!=null?$t.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.ExtendOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ExtendOperator}},ExtendKeyword:null,Expressions:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(extendKeyword,expressions,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.ExtendKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,extendKeyword);this.Expressions=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),expressions);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.ExtendKeyword;case 1:return this.Expressions;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"ExtendKeyword";case 1:return"Expressions";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitExtendOperator(this)},Accept:function(TResult,visitor){return visitor.VisitExtendOperator(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.ExtendOperator(($t=this.ExtendKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Expressions)!=null?$t1.Clone$2(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.FacetOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.FacetOperator}},FacetKeyword:null,ByKeyword:null,Expressions:null,WithClause:null,ChildCount:{get:function(){return 4}}},ctors:{ctor:function(facetKeyword,byKeyword,expressions,withClause,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.FacetKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,facetKeyword);this.ByKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,byKeyword);this.Expressions=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),expressions);this.WithClause=this.Attach(Kusto.Language.Syntax.FacetWithClause,withClause,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.FacetKeyword;case 1:return this.ByKeyword;case 2:return this.Expressions;case 3:return this.WithClause;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"FacetKeyword";case 1:return"ByKeyword";case 2:return"Expressions";case 3:return"WithClause";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 3:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Keyword;case 2:return Kusto.Language.Editor.CompletionHint.Scalar;case 3:return Kusto.Language.Editor.CompletionHint.Clause;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitFacetOperator(this)},Accept:function(TResult,visitor){return visitor.VisitFacetOperator(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3;return new Kusto.Language.Syntax.FacetOperator(($t=this.FacetKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.ByKeyword)!=null?$t1.Clone$1(includeDiagnostics):null,($t2=this.Expressions)!=null?$t2.Clone$2(includeDiagnostics):null,Bridge.cast(($t3=this.WithClause)!=null?$t3.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.FacetWithClause),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.FacetWithExpressionClause",{inherits:[Kusto.Language.Syntax.FacetWithClause],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.FacetWithExpressionClause}},WithKeyword:null,OpenParen:null,Expression:null,CloseParen:null,ChildCount:{get:function(){return 4}}},ctors:{ctor:function(withKeyword,openParen,expression,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.FacetWithClause.ctor.call(this,diagnostics);this.WithKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,withKeyword);this.OpenParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,openParen);this.Expression=this.Attach(Kusto.Language.Syntax.Expression,expression);this.CloseParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.WithKeyword;case 1:return this.OpenParen;case 2:return this.Expression;case 3:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"WithKeyword";case 1:return"OpenParen";case 2:return"Expression";case 3:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Query;case 3:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitFacetWithExpressionClause(this)},Accept:function(TResult,visitor){return visitor.VisitFacetWithExpressionClause(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3;return new Kusto.Language.Syntax.FacetWithExpressionClause(($t=this.WithKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.OpenParen)!=null?$t1.Clone$1(includeDiagnostics):null,Bridge.cast(($t2=this.Expression)!=null?$t2.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),($t3=this.CloseParen)!=null?$t3.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.FacetWithOperatorClause",{inherits:[Kusto.Language.Syntax.FacetWithClause],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.FacetWithOperatorClause}},WithKeyword:null,Operator:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(withKeyword,operator,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.FacetWithClause.ctor.call(this,diagnostics);this.WithKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,withKeyword);this.Operator=this.Attach(Kusto.Language.Syntax.QueryOperator,operator);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.WithKeyword;case 1:return this.Operator;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"WithKeyword";case 1:return"Operator";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Query;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitFacetWithOperatorClause(this)},Accept:function(TResult,visitor){return visitor.VisitFacetWithOperatorClause(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.FacetWithOperatorClause(($t=this.WithKeyword)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.Operator)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.QueryOperator),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.FilterOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.FilterOperator}},Keyword:null,Parameters:null,Condition:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(keyword,parameters,condition,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.Keyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,keyword);this.Parameters=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.Condition=this.Attach(Kusto.Language.Syntax.Expression,condition);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Keyword;case 1:return this.Parameters;case 2:return this.Condition;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Keyword";case 1:return"Parameters";case 2:return"Condition";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.None;case 2:return Kusto.Language.Editor.CompletionHint.Boolean;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitFilterOperator(this)},Accept:function(TResult,visitor){return visitor.VisitFilterOperator(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.FilterOperator(($t=this.Keyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Parameters)!=null?$t1.Clone$2(includeDiagnostics):null,Bridge.cast(($t2=this.Condition)!=null?$t2.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.FindOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.FindOperator}},FindKeyword:null,DataScope:null,Parameters:null,InClause:null,WhereKeyword:null,Condition:null,Project:null,ProjectAway:null,ChildCount:{get:function(){return 8}}},ctors:{ctor:function(findKeyword,dataScope,parameters,inClause,whereKeyword,condition,project,projectAway,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.FindKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,findKeyword);this.DataScope=this.Attach(Kusto.Language.Syntax.DataScopeClause,dataScope,!0);this.Parameters=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.InClause=this.Attach(Kusto.Language.Syntax.FindInClause,inClause,!0);this.WhereKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,whereKeyword,!0);this.Condition=this.Attach(Kusto.Language.Syntax.Expression,condition);this.Project=this.Attach(Kusto.Language.Syntax.FindProjectClause,project,!0);this.ProjectAway=this.Attach(Kusto.Language.Syntax.FindProjectClause,projectAway,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.FindKeyword;case 1:return this.DataScope;case 2:return this.Parameters;case 3:return this.InClause;case 4:return this.WhereKeyword;case 5:return this.Condition;case 6:return this.Project;case 7:return this.ProjectAway;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"FindKeyword";case 1:return"DataScope";case 2:return"Parameters";case 3:return"InClause";case 4:return"WhereKeyword";case 5:return"Condition";case 6:return"Project";case 7:return"ProjectAway";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 1:case 3:case 4:case 6:case 7:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Clause;case 2:return Kusto.Language.Editor.CompletionHint.None;case 3:return Kusto.Language.Editor.CompletionHint.Clause;case 4:return Kusto.Language.Editor.CompletionHint.Keyword;case 5:return Kusto.Language.Editor.CompletionHint.Boolean;case 6:return Kusto.Language.Editor.CompletionHint.Clause;case 7:return Kusto.Language.Editor.CompletionHint.Clause;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitFindOperator(this)},Accept:function(TResult,visitor){return visitor.VisitFindOperator(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3,$t4,$t5,$t6,$t7;return new Kusto.Language.Syntax.FindOperator(($t=this.FindKeyword)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.DataScope)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.DataScopeClause),($t2=this.Parameters)!=null?$t2.Clone$2(includeDiagnostics):null,Bridge.cast(($t3=this.InClause)!=null?$t3.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.FindInClause),($t4=this.WhereKeyword)!=null?$t4.Clone$1(includeDiagnostics):null,Bridge.cast(($t5=this.Condition)!=null?$t5.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),Bridge.cast(($t6=this.Project)!=null?$t6.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.FindProjectClause),Bridge.cast(($t7=this.ProjectAway)!=null?$t7.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.FindProjectClause),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.ForkOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ForkOperator}},ForkKeyword:null,Expressions:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(forkKeyword,expressions,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.ForkKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,forkKeyword);this.Expressions=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.ForkExpression),expressions);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.ForkKeyword;case 1:return this.Expressions;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"ForkKeyword";case 1:return"Expressions";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Tabular;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitForkOperator(this)},Accept:function(TResult,visitor){return visitor.VisitForkOperator(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.ForkOperator(($t=this.ForkKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Expressions)!=null?$t1.Clone$2(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.GetSchemaOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.GetSchemaOperator}},GetSchemaKeyword:null,KindParameter:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(getSchemaKeyword,kindParameter,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.GetSchemaKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,getSchemaKeyword);this.KindParameter=this.Attach(Kusto.Language.Syntax.NamedParameter,kindParameter,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.GetSchemaKeyword;case 1:return this.KindParameter;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"GetSchemaKeyword";case 1:return"KindParameter";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 1:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Clause;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitGetSchemaOperator(this)},Accept:function(TResult,visitor){return visitor.VisitGetSchemaOperator(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.GetSchemaOperator(($t=this.GetSchemaKeyword)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.KindParameter)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.NamedParameter),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.GraphMarkComponentsOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.GraphMarkComponentsOperator}},GraphMarkComponentsKeyword:null,Parameters:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(graphMarkComponentsKeyword,parameters,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.GraphMarkComponentsKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,graphMarkComponentsKeyword);this.Parameters=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.GraphMarkComponentsKeyword;case 1:return this.Parameters;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"GraphMarkComponentsKeyword";case 1:return"Parameters";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.None;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitGraphMarkComponentsOperator(this)},Accept:function(TResult,visitor){return visitor.VisitGraphMarkComponentsOperator(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.GraphMarkComponentsOperator(($t=this.GraphMarkComponentsKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Parameters)!=null?$t1.Clone$2(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.GraphMatchOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.GraphMatchOperator}},GraphMatchKeyword:null,Parameters:null,Patterns:null,WhereClause:null,ProjectClause:null,ChildCount:{get:function(){return 5}}},ctors:{ctor:function(graphMatchKeyword,parameters,patterns,whereClause,projectClause,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.GraphMatchKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,graphMatchKeyword);this.Parameters=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.Patterns=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.GraphMatchPattern)),patterns);this.WhereClause=this.Attach(Kusto.Language.Syntax.WhereClause,whereClause,!0);this.ProjectClause=this.Attach(Kusto.Language.Syntax.ProjectClause,projectClause,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.GraphMatchKeyword;case 1:return this.Parameters;case 2:return this.Patterns;case 3:return this.WhereClause;case 4:return this.ProjectClause;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"GraphMatchKeyword";case 1:return"Parameters";case 2:return"Patterns";case 3:return"WhereClause";case 4:return"ProjectClause";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 3:case 4:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.None;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;case 3:return Kusto.Language.Editor.CompletionHint.Syntax;case 4:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitGraphMatchOperator(this)},Accept:function(TResult,visitor){return visitor.VisitGraphMatchOperator(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3,$t4;return new Kusto.Language.Syntax.GraphMatchOperator(($t=this.GraphMatchKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Parameters)!=null?$t1.Clone$2(includeDiagnostics):null,($t2=this.Patterns)!=null?$t2.Clone$2(includeDiagnostics):null,Bridge.cast(($t3=this.WhereClause)!=null?$t3.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.WhereClause),Bridge.cast(($t4=this.ProjectClause)!=null?$t4.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.ProjectClause),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.GraphMatchPattern",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.GraphMatchPattern}},PatternElements:null,ChildCount:{get:function(){return 1}}},ctors:{ctor:function(patternElements,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.PatternElements=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.GraphMatchPatternNotation),patternElements);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.PatternElements;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"PatternElements";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitGraphMatchPattern(this)},Accept:function(TResult,visitor){return visitor.VisitGraphMatchPattern(this)},CloneCore:function(includeDiagnostics){var $t;return new Kusto.Language.Syntax.GraphMatchPattern(($t=this.PatternElements)!=null?$t.Clone$2(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.GraphMergeOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.GraphMergeOperator}},GraphMergeKeyword:null,Graph:null,OnClause:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(graphMergeKeyword,graph,onClause,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.GraphMergeKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,graphMergeKeyword);this.Graph=this.Attach(Kusto.Language.Syntax.Expression,graph);this.OnClause=this.Attach(Kusto.Language.Syntax.JoinConditionClause,onClause,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.GraphMergeKeyword;case 1:return this.Graph;case 2:return this.OnClause;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"GraphMergeKeyword";case 1:return"Graph";case 2:return"OnClause";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 2:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Graph;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitGraphMergeOperator(this)},Accept:function(TResult,visitor){return visitor.VisitGraphMergeOperator(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.GraphMergeOperator(($t=this.GraphMergeKeyword)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.Graph)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),Bridge.cast(($t2=this.OnClause)!=null?$t2.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.JoinConditionClause),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.GraphToTableOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.GraphToTableOperator}},GraphToTableKeyword:null,OutputClause:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(graphToTableKeyword,outputClause,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.GraphToTableKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,graphToTableKeyword);this.OutputClause=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.GraphToTableOutputClause)),outputClause);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.GraphToTableKeyword;case 1:return this.OutputClause;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"GraphToTableKeyword";case 1:return"OutputClause";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitGraphToTableOperator(this)},Accept:function(TResult,visitor){return visitor.VisitGraphToTableOperator(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.GraphToTableOperator(($t=this.GraphToTableKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.OutputClause)!=null?$t1.Clone$2(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.InvokeOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.InvokeOperator}},InvokeKeyword:null,Function:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(invokeKeyword,$function,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.InvokeKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,invokeKeyword);this.Function=this.Attach(Kusto.Language.Syntax.Expression,$function);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.InvokeKeyword;case 1:return this.Function;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"InvokeKeyword";case 1:return"Function";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.TabularFunction;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitInvokeOperator(this)},Accept:function(TResult,visitor){return visitor.VisitInvokeOperator(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.InvokeOperator(($t=this.InvokeKeyword)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.Function)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.JoinOnClause",{inherits:[Kusto.Language.Syntax.JoinConditionClause],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.JoinOnClause}},OnKeyword:null,Expressions:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(onKeyword,expressions,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.JoinConditionClause.ctor.call(this,diagnostics);this.OnKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,onKeyword);this.Expressions=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),expressions);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.OnKeyword;case 1:return this.Expressions;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"OnKeyword";case 1:return"Expressions";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Column;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitJoinOnClause(this)},Accept:function(TResult,visitor){return visitor.VisitJoinOnClause(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.JoinOnClause(($t=this.OnKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Expressions)!=null?$t1.Clone$2(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.JoinOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.JoinOperator}},JoinKeyword:null,Parameters:null,Expression:null,ConditionClause:null,ChildCount:{get:function(){return 4}}},ctors:{ctor:function(joinKeyword,parameters,expression,conditionClause,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.JoinKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,joinKeyword);this.Parameters=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.Expression=this.Attach(Kusto.Language.Syntax.Expression,expression);this.ConditionClause=this.Attach(Kusto.Language.Syntax.JoinConditionClause,conditionClause,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.JoinKeyword;case 1:return this.Parameters;case 2:return this.Expression;case 3:return this.ConditionClause;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"JoinKeyword";case 1:return"Parameters";case 2:return"Expression";case 3:return"ConditionClause";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 3:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Tabular;case 3:return Kusto.Language.Editor.CompletionHint.Clause;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitJoinOperator(this)},Accept:function(TResult,visitor){return visitor.VisitJoinOperator(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3;return new Kusto.Language.Syntax.JoinOperator(($t=this.JoinKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Parameters)!=null?$t1.Clone$2(includeDiagnostics):null,Bridge.cast(($t2=this.Expression)!=null?$t2.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),Bridge.cast(($t3=this.ConditionClause)!=null?$t3.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.JoinConditionClause),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.JoinWhereClause",{inherits:[Kusto.Language.Syntax.JoinConditionClause],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.JoinWhereClause}},WhereKeyword:null,Expression:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(whereKeyword,expression,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.JoinConditionClause.ctor.call(this,diagnostics);this.WhereKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,whereKeyword);this.Expression=this.Attach(Kusto.Language.Syntax.Expression,expression);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.WhereKeyword;case 1:return this.Expression;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"WhereKeyword";case 1:return"Expression";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Boolean;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitJoinWhereClause(this)},Accept:function(TResult,visitor){return visitor.VisitJoinWhereClause(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.JoinWhereClause(($t=this.WhereKeyword)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.Expression)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.JsonArrayExpression",{inherits:[Kusto.Language.Syntax.JsonExpression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.JsonArrayExpression}},OpenBracket:null,Values:null,CloseBracket:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(openBracket,values,closeBracket,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.JsonExpression.ctor.call(this,diagnostics);this.OpenBracket=this.Attach(Kusto.Language.Syntax.SyntaxToken,openBracket);this.Values=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),values);this.CloseBracket=this.Attach(Kusto.Language.Syntax.SyntaxToken,closeBracket);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.OpenBracket;case 1:return this.Values;case 2:return this.CloseBracket;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"OpenBracket";case 1:return"Values";case 2:return"CloseBracket";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;case 1:return Kusto.Language.Editor.CompletionHint.Literal;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitJsonArrayExpression(this)},Accept:function(TResult,visitor){return visitor.VisitJsonArrayExpression(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.JsonArrayExpression(($t=this.OpenBracket)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Values)!=null?$t1.Clone$2(includeDiagnostics):null,($t2=this.CloseBracket)!=null?$t2.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.JsonObjectExpression",{inherits:[Kusto.Language.Syntax.JsonExpression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.JsonObjectExpression}},OpenBrace:null,Pairs:null,CloseBrace:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(openBrace,pairs,closeBrace,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.JsonExpression.ctor.call(this,diagnostics);this.OpenBrace=this.Attach(Kusto.Language.Syntax.SyntaxToken,openBrace);this.Pairs=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.JsonPair)),pairs);this.CloseBrace=this.Attach(Kusto.Language.Syntax.SyntaxToken,closeBrace);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.OpenBrace;case 1:return this.Pairs;case 2:return this.CloseBrace;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"OpenBrace";case 1:return"Pairs";case 2:return"CloseBrace";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitJsonObjectExpression(this)},Accept:function(TResult,visitor){return visitor.VisitJsonObjectExpression(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.JsonObjectExpression(($t=this.OpenBrace)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Pairs)!=null?$t1.Clone$2(includeDiagnostics):null,($t2=this.CloseBrace)!=null?$t2.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.LookupOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.LookupOperator}},LookupKeyword:null,Parameters:null,Expression:null,LookupClause:null,ChildCount:{get:function(){return 4}}},ctors:{ctor:function(lookupKeyword,parameters,expression,lookupClause,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.LookupKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,lookupKeyword);this.Parameters=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.Expression=this.Attach(Kusto.Language.Syntax.Expression,expression);this.LookupClause=this.Attach(Kusto.Language.Syntax.JoinConditionClause,lookupClause);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.LookupKeyword;case 1:return this.Parameters;case 2:return this.Expression;case 3:return this.LookupClause;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"LookupKeyword";case 1:return"Parameters";case 2:return"Expression";case 3:return"LookupClause";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Tabular;case 3:return Kusto.Language.Editor.CompletionHint.Clause;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitLookupOperator(this)},Accept:function(TResult,visitor){return visitor.VisitLookupOperator(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3;return new Kusto.Language.Syntax.LookupOperator(($t=this.LookupKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Parameters)!=null?$t1.Clone$2(includeDiagnostics):null,Bridge.cast(($t2=this.Expression)!=null?$t2.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),Bridge.cast(($t3=this.LookupClause)!=null?$t3.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.JoinConditionClause),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.MacroExpandOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.MacroExpandOperator}},MacroExpandKeyword:null,Parameters:null,EntityGroup:null,ScopeReferenceName:null,OpenParen:null,StatementList:null,CloseParen:null,ChildCount:{get:function(){return 7}}},ctors:{ctor:function(macroExpandKeyword,parameters,entityGroup,scopeReferenceName,openParen,statementList,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.MacroExpandKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,macroExpandKeyword);this.Parameters=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.EntityGroup=this.Attach(Kusto.Language.Syntax.Expression,entityGroup);this.ScopeReferenceName=this.Attach(Kusto.Language.Syntax.MacroExpandScopeReferenceName,scopeReferenceName,!0);this.OpenParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,openParen);this.StatementList=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)),statementList);this.CloseParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.MacroExpandKeyword;case 1:return this.Parameters;case 2:return this.EntityGroup;case 3:return this.ScopeReferenceName;case 4:return this.OpenParen;case 5:return this.StatementList;case 6:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"MacroExpandKeyword";case 1:return"Parameters";case 2:return"EntityGroup";case 3:return"ScopeReferenceName";case 4:return"OpenParen";case 5:return"StatementList";case 6:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 3:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.None;case 2:return Kusto.Language.Editor.CompletionHint.EntityGroup;case 3:return Kusto.Language.Editor.CompletionHint.None;case 4:return Kusto.Language.Editor.CompletionHint.Keyword;case 5:return Kusto.Language.Editor.CompletionHint.Tabular;case 6:return Kusto.Language.Editor.CompletionHint.Keyword;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitMacroExpandOperator(this)},Accept:function(TResult,visitor){return visitor.VisitMacroExpandOperator(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3,$t4,$t5,$t6;return new Kusto.Language.Syntax.MacroExpandOperator(($t=this.MacroExpandKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Parameters)!=null?$t1.Clone$2(includeDiagnostics):null,Bridge.cast(($t2=this.EntityGroup)!=null?$t2.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),Bridge.cast(($t3=this.ScopeReferenceName)!=null?$t3.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.MacroExpandScopeReferenceName),($t4=this.OpenParen)!=null?$t4.Clone$1(includeDiagnostics):null,($t5=this.StatementList)!=null?$t5.Clone$2(includeDiagnostics):null,($t6=this.CloseParen)!=null?$t6.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.MakeGraphOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.MakeGraphOperator}},MakeGraphKeyword:null,Parameters:null,SourceColumn:null,DirectionToken:null,TargetColumn:null,WithClause:null,PartitionedByClause:null,ChildCount:{get:function(){return 7}}},ctors:{ctor:function(makeGraphKeyword,parameters,sourceColumn,directionToken,targetColumn,withClause,partitionedByClause,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.MakeGraphKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,makeGraphKeyword);this.Parameters=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.SourceColumn=this.Attach(Kusto.Language.Syntax.NameReference,sourceColumn);this.DirectionToken=this.Attach(Kusto.Language.Syntax.SyntaxToken,directionToken);this.TargetColumn=this.Attach(Kusto.Language.Syntax.NameReference,targetColumn);this.WithClause=this.Attach(Kusto.Language.Syntax.MakeGraphWithClause,withClause,!0);this.PartitionedByClause=this.Attach(Kusto.Language.Syntax.MakeGraphPartitionedByClause,partitionedByClause,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.MakeGraphKeyword;case 1:return this.Parameters;case 2:return this.SourceColumn;case 3:return this.DirectionToken;case 4:return this.TargetColumn;case 5:return this.WithClause;case 6:return this.PartitionedByClause;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"MakeGraphKeyword";case 1:return"Parameters";case 2:return"SourceColumn";case 3:return"DirectionToken";case 4:return"TargetColumn";case 5:return"WithClause";case 6:return"PartitionedByClause";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 5:case 6:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Column;case 3:return Kusto.Language.Editor.CompletionHint.Syntax;case 4:return Kusto.Language.Editor.CompletionHint.Column;case 5:return Kusto.Language.Editor.CompletionHint.Clause;case 6:return Kusto.Language.Editor.CompletionHint.Clause;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitMakeGraphOperator(this)},Accept:function(TResult,visitor){return visitor.VisitMakeGraphOperator(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3,$t4,$t5,$t6;return new Kusto.Language.Syntax.MakeGraphOperator(($t=this.MakeGraphKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Parameters)!=null?$t1.Clone$2(includeDiagnostics):null,Bridge.cast(($t2=this.SourceColumn)!=null?$t2.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.NameReference),($t3=this.DirectionToken)!=null?$t3.Clone$1(includeDiagnostics):null,Bridge.cast(($t4=this.TargetColumn)!=null?$t4.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.NameReference),Bridge.cast(($t5=this.WithClause)!=null?$t5.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.MakeGraphWithClause),Bridge.cast(($t6=this.PartitionedByClause)!=null?$t6.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.MakeGraphPartitionedByClause),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.MakeSeriesFromToStepClause",{inherits:[Kusto.Language.Syntax.MakeSeriesRangeClause],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.MakeSeriesFromToStepClause}},MakeSeriesFromClause:null,MakeSeriesToClause:null,MakeSeriesStepClause:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(makeSeriesFromClause,makeSeriesToClause,makeSeriesStepClause,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.MakeSeriesRangeClause.ctor.call(this,diagnostics);this.MakeSeriesFromClause=this.Attach(Kusto.Language.Syntax.MakeSeriesFromClause,makeSeriesFromClause,!0);this.MakeSeriesToClause=this.Attach(Kusto.Language.Syntax.MakeSeriesToClause,makeSeriesToClause,!0);this.MakeSeriesStepClause=this.Attach(Kusto.Language.Syntax.MakeSeriesStepClause,makeSeriesStepClause);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.MakeSeriesFromClause;case 1:return this.MakeSeriesToClause;case 2:return this.MakeSeriesStepClause;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"MakeSeriesFromClause";case 1:return"MakeSeriesToClause";case 2:return"MakeSeriesStepClause";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 0:case 1:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Clause;case 1:return Kusto.Language.Editor.CompletionHint.Clause;case 2:return Kusto.Language.Editor.CompletionHint.Clause;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitMakeSeriesFromToStepClause(this)},Accept:function(TResult,visitor){return visitor.VisitMakeSeriesFromToStepClause(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.MakeSeriesFromToStepClause(Bridge.cast(($t=this.MakeSeriesFromClause)!=null?$t.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.MakeSeriesFromClause),Bridge.cast(($t1=this.MakeSeriesToClause)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.MakeSeriesToClause),Bridge.cast(($t2=this.MakeSeriesStepClause)!=null?$t2.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.MakeSeriesStepClause),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.MakeSeriesInRangeClause",{inherits:[Kusto.Language.Syntax.MakeSeriesRangeClause],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.MakeSeriesInRangeClause}},InKeyword:null,RangeKeyword:null,Arguments:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(inKeyword,rangeKeyword,$arguments,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.MakeSeriesRangeClause.ctor.call(this,diagnostics);this.InKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,inKeyword);this.RangeKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,rangeKeyword);this.Arguments=this.Attach(Kusto.Language.Syntax.ExpressionList,$arguments);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.InKeyword;case 1:return this.RangeKeyword;case 2:return this.Arguments;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"InKeyword";case 1:return"RangeKeyword";case 2:return"Arguments";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Keyword;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitMakeSeriesInRangeClause(this)},Accept:function(TResult,visitor){return visitor.VisitMakeSeriesInRangeClause(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.MakeSeriesInRangeClause(($t=this.InKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.RangeKeyword)!=null?$t1.Clone$1(includeDiagnostics):null,Bridge.cast(($t2=this.Arguments)!=null?$t2.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.ExpressionList),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.MakeSeriesOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.MakeSeriesOperator}},MakeSeriesKeyword:null,Parameters:null,Aggregates:null,OnClause:null,RangeClause:null,ByClause:null,ChildCount:{get:function(){return 6}}},ctors:{ctor:function(makeSeriesKeyword,parameters,aggregates,onClause,rangeClause,byClause,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.MakeSeriesKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,makeSeriesKeyword);this.Parameters=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.Aggregates=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MakeSeriesExpression)),aggregates);this.OnClause=this.Attach(Kusto.Language.Syntax.MakeSeriesOnClause,onClause);this.RangeClause=this.Attach(Kusto.Language.Syntax.MakeSeriesRangeClause,rangeClause);this.ByClause=this.Attach(Kusto.Language.Syntax.MakeSeriesByClause,byClause,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.MakeSeriesKeyword;case 1:return this.Parameters;case 2:return this.Aggregates;case 3:return this.OnClause;case 4:return this.RangeClause;case 5:return this.ByClause;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"MakeSeriesKeyword";case 1:return"Parameters";case 2:return"Aggregates";case 3:return"OnClause";case 4:return"RangeClause";case 5:return"ByClause";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 5:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.None;case 2:return Kusto.Language.Editor.CompletionHint.Aggregate;case 3:return Kusto.Language.Editor.CompletionHint.Clause;case 4:return Kusto.Language.Editor.CompletionHint.Clause;case 5:return Kusto.Language.Editor.CompletionHint.Clause;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitMakeSeriesOperator(this)},Accept:function(TResult,visitor){return visitor.VisitMakeSeriesOperator(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3,$t4,$t5;return new Kusto.Language.Syntax.MakeSeriesOperator(($t=this.MakeSeriesKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Parameters)!=null?$t1.Clone$2(includeDiagnostics):null,($t2=this.Aggregates)!=null?$t2.Clone$2(includeDiagnostics):null,Bridge.cast(($t3=this.OnClause)!=null?$t3.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.MakeSeriesOnClause),Bridge.cast(($t4=this.RangeClause)!=null?$t4.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.MakeSeriesRangeClause),Bridge.cast(($t5=this.ByClause)!=null?$t5.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.MakeSeriesByClause),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.MvApplyOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.MvApplyOperator}},MvApplyKeyword:null,Parameters:null,Expressions:null,RowLimitClause:null,ContextIdClause:null,OnKeyword:null,Subquery:null,ChildCount:{get:function(){return 7}}},ctors:{ctor:function(mvApplyKeyword,parameters,expressions,rowLimitClause,contextIdClause,onKeyword,subquery,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.MvApplyKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,mvApplyKeyword);this.Parameters=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.Expressions=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MvApplyExpression)),expressions);this.RowLimitClause=this.Attach(Kusto.Language.Syntax.MvApplyRowLimitClause,rowLimitClause,!0);this.ContextIdClause=this.Attach(Kusto.Language.Syntax.MvApplyContextIdClause,contextIdClause,!0);this.OnKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,onKeyword);this.Subquery=this.Attach(Kusto.Language.Syntax.MvApplySubqueryExpression,subquery);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.MvApplyKeyword;case 1:return this.Parameters;case 2:return this.Expressions;case 3:return this.RowLimitClause;case 4:return this.ContextIdClause;case 5:return this.OnKeyword;case 6:return this.Subquery;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"MvApplyKeyword";case 1:return"Parameters";case 2:return"Expressions";case 3:return"RowLimitClause";case 4:return"ContextIdClause";case 5:return"OnKeyword";case 6:return"Subquery";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 3:case 4:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.None;case 2:return Kusto.Language.Editor.CompletionHint.Scalar;case 3:return Kusto.Language.Editor.CompletionHint.Clause;case 4:return Kusto.Language.Editor.CompletionHint.Clause;case 5:return Kusto.Language.Editor.CompletionHint.Keyword;case 6:return Kusto.Language.Editor.CompletionHint.Clause;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitMvApplyOperator(this)},Accept:function(TResult,visitor){return visitor.VisitMvApplyOperator(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3,$t4,$t5,$t6;return new Kusto.Language.Syntax.MvApplyOperator(($t=this.MvApplyKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Parameters)!=null?$t1.Clone$2(includeDiagnostics):null,($t2=this.Expressions)!=null?$t2.Clone$2(includeDiagnostics):null,Bridge.cast(($t3=this.RowLimitClause)!=null?$t3.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.MvApplyRowLimitClause),Bridge.cast(($t4=this.ContextIdClause)!=null?$t4.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.MvApplyContextIdClause),($t5=this.OnKeyword)!=null?$t5.Clone$1(includeDiagnostics):null,Bridge.cast(($t6=this.Subquery)!=null?$t6.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.MvApplySubqueryExpression),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.MvExpandOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.MvExpandOperator}},MvExpandKeyword:null,Parameters:null,Expressions:null,RowLimitClause:null,ChildCount:{get:function(){return 4}}},ctors:{ctor:function(mvExpandKeyword,parameters,expressions,rowLimitClause,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.MvExpandKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,mvExpandKeyword);this.Parameters=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.Expressions=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MvExpandExpression)),expressions);this.RowLimitClause=this.Attach(Kusto.Language.Syntax.MvExpandRowLimitClause,rowLimitClause,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.MvExpandKeyword;case 1:return this.Parameters;case 2:return this.Expressions;case 3:return this.RowLimitClause;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"MvExpandKeyword";case 1:return"Parameters";case 2:return"Expressions";case 3:return"RowLimitClause";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 3:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.None;case 2:return Kusto.Language.Editor.CompletionHint.Scalar;case 3:return Kusto.Language.Editor.CompletionHint.Clause;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitMvExpandOperator(this)},Accept:function(TResult,visitor){return visitor.VisitMvExpandOperator(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3;return new Kusto.Language.Syntax.MvExpandOperator(($t=this.MvExpandKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Parameters)!=null?$t1.Clone$2(includeDiagnostics):null,($t2=this.Expressions)!=null?$t2.Clone$2(includeDiagnostics):null,Bridge.cast(($t3=this.RowLimitClause)!=null?$t3.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.MvExpandRowLimitClause),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.ParseKvOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ParseKvOperator}},ParseKvKeyword:null,Expression:null,AsKeyword:null,Keys:null,WithClause:null,ChildCount:{get:function(){return 5}}},ctors:{ctor:function(parseKvKeyword,expression,asKeyword,keys,withClause,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.ParseKvKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,parseKvKeyword);this.Expression=this.Attach(Kusto.Language.Syntax.Expression,expression);this.AsKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,asKeyword);this.Keys=this.Attach(Kusto.Language.Syntax.RowSchema,keys);this.WithClause=this.Attach(Kusto.Language.Syntax.ParseKvWithClause,withClause,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.ParseKvKeyword;case 1:return this.Expression;case 2:return this.AsKeyword;case 3:return this.Keys;case 4:return this.WithClause;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"ParseKvKeyword";case 1:return"Expression";case 2:return"AsKeyword";case 3:return"Keys";case 4:return"WithClause";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 4:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Scalar;case 2:return Kusto.Language.Editor.CompletionHint.Keyword;case 3:return Kusto.Language.Editor.CompletionHint.Syntax;case 4:return Kusto.Language.Editor.CompletionHint.Clause;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitParseKvOperator(this)},Accept:function(TResult,visitor){return visitor.VisitParseKvOperator(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3,$t4;return new Kusto.Language.Syntax.ParseKvOperator(($t=this.ParseKvKeyword)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.Expression)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),($t2=this.AsKeyword)!=null?$t2.Clone$1(includeDiagnostics):null,Bridge.cast(($t3=this.Keys)!=null?$t3.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.RowSchema),Bridge.cast(($t4=this.WithClause)!=null?$t4.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.ParseKvWithClause),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.ParseOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ParseOperator}},ParseKeyword:null,Parameters:null,Expression:null,WithKeyword:null,Patterns:null,ChildCount:{get:function(){return 5}}},ctors:{ctor:function(parseKeyword,parameters,expression,withKeyword,patterns,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.ParseKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,parseKeyword);this.Parameters=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.Expression=this.Attach(Kusto.Language.Syntax.Expression,expression);this.WithKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,withKeyword);this.Patterns=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SyntaxNode),patterns);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.ParseKeyword;case 1:return this.Parameters;case 2:return this.Expression;case 3:return this.WithKeyword;case 4:return this.Patterns;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"ParseKeyword";case 1:return"Parameters";case 2:return"Expression";case 3:return"WithKeyword";case 4:return"Patterns";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.None;case 2:return Kusto.Language.Editor.CompletionHint.Scalar;case 3:return Kusto.Language.Editor.CompletionHint.Keyword;case 4:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitParseOperator(this)},Accept:function(TResult,visitor){return visitor.VisitParseOperator(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3,$t4;return new Kusto.Language.Syntax.ParseOperator(($t=this.ParseKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Parameters)!=null?$t1.Clone$2(includeDiagnostics):null,Bridge.cast(($t2=this.Expression)!=null?$t2.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),($t3=this.WithKeyword)!=null?$t3.Clone$1(includeDiagnostics):null,($t4=this.Patterns)!=null?$t4.Clone$2(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.ParseWhereOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ParseWhereOperator}},ParseKeyword:null,Parameters:null,Expression:null,WithKeyword:null,Patterns:null,ChildCount:{get:function(){return 5}}},ctors:{ctor:function(parseKeyword,parameters,expression,withKeyword,patterns,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.ParseKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,parseKeyword);this.Parameters=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.Expression=this.Attach(Kusto.Language.Syntax.Expression,expression);this.WithKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,withKeyword);this.Patterns=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SyntaxNode),patterns);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.ParseKeyword;case 1:return this.Parameters;case 2:return this.Expression;case 3:return this.WithKeyword;case 4:return this.Patterns;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"ParseKeyword";case 1:return"Parameters";case 2:return"Expression";case 3:return"WithKeyword";case 4:return"Patterns";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.None;case 2:return Kusto.Language.Editor.CompletionHint.Scalar;case 3:return Kusto.Language.Editor.CompletionHint.Keyword;case 4:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitParseWhereOperator(this)},Accept:function(TResult,visitor){return visitor.VisitParseWhereOperator(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3,$t4;return new Kusto.Language.Syntax.ParseWhereOperator(($t=this.ParseKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Parameters)!=null?$t1.Clone$2(includeDiagnostics):null,Bridge.cast(($t2=this.Expression)!=null?$t2.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),($t3=this.WithKeyword)!=null?$t3.Clone$1(includeDiagnostics):null,($t4=this.Patterns)!=null?$t4.Clone$2(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.PartitionByOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.PartitionByOperator}},PartitionByKeyword:null,Parameters:null,Entity:null,IdClause:null,OpenParen:null,Subquery:null,CloseParen:null,ChildCount:{get:function(){return 7}}},ctors:{ctor:function(partitionByKeyword,parameters,entity,idClause,openParen,subquery,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.PartitionByKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,partitionByKeyword);this.Parameters=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.Entity=this.Attach(Kusto.Language.Syntax.Expression,entity);this.IdClause=this.Attach(Kusto.Language.Syntax.PartitionByIdClause,idClause,!0);this.OpenParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,openParen);this.Subquery=this.Attach(Kusto.Language.Syntax.Expression,subquery);this.CloseParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.PartitionByKeyword;case 1:return this.Parameters;case 2:return this.Entity;case 3:return this.IdClause;case 4:return this.OpenParen;case 5:return this.Subquery;case 6:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"PartitionByKeyword";case 1:return"Parameters";case 2:return"Entity";case 3:return"IdClause";case 4:return"OpenParen";case 5:return"Subquery";case 6:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 3:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Column;case 3:return Kusto.Language.Editor.CompletionHint.Syntax;case 4:return Kusto.Language.Editor.CompletionHint.Syntax;case 5:return Kusto.Language.Editor.CompletionHint.Query;case 6:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitPartitionByOperator(this)},Accept:function(TResult,visitor){return visitor.VisitPartitionByOperator(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3,$t4,$t5,$t6;return new Kusto.Language.Syntax.PartitionByOperator(($t=this.PartitionByKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Parameters)!=null?$t1.Clone$2(includeDiagnostics):null,Bridge.cast(($t2=this.Entity)!=null?$t2.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),Bridge.cast(($t3=this.IdClause)!=null?$t3.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.PartitionByIdClause),($t4=this.OpenParen)!=null?$t4.Clone$1(includeDiagnostics):null,Bridge.cast(($t5=this.Subquery)!=null?$t5.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),($t6=this.CloseParen)!=null?$t6.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.PartitionOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.PartitionOperator}},PartitionKeyword:null,Parameters:null,ByKeyword:null,ByExpression:null,Scope:null,Operand:null,ChildCount:{get:function(){return 6}}},ctors:{ctor:function(partitionKeyword,parameters,byKeyword,byExpression,scope,operand,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.PartitionKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,partitionKeyword);this.Parameters=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.ByKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,byKeyword);this.ByExpression=this.Attach(Kusto.Language.Syntax.Expression,byExpression);this.Scope=this.Attach(Kusto.Language.Syntax.PartitionScope,scope,!0);this.Operand=this.Attach(Kusto.Language.Syntax.PartitionOperand,operand);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.PartitionKeyword;case 1:return this.Parameters;case 2:return this.ByKeyword;case 3:return this.ByExpression;case 4:return this.Scope;case 5:return this.Operand;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"PartitionKeyword";case 1:return"Parameters";case 2:return"ByKeyword";case 3:return"ByExpression";case 4:return"Scope";case 5:return"Operand";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 4:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.None;case 2:return Kusto.Language.Editor.CompletionHint.Keyword;case 3:return Kusto.Language.Editor.CompletionHint.Scalar;case 4:return Kusto.Language.Editor.CompletionHint.Syntax;case 5:return Kusto.Language.Editor.CompletionHint.Tabular;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitPartitionOperator(this)},Accept:function(TResult,visitor){return visitor.VisitPartitionOperator(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3,$t4,$t5;return new Kusto.Language.Syntax.PartitionOperator(($t=this.PartitionKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Parameters)!=null?$t1.Clone$2(includeDiagnostics):null,($t2=this.ByKeyword)!=null?$t2.Clone$1(includeDiagnostics):null,Bridge.cast(($t3=this.ByExpression)!=null?$t3.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),Bridge.cast(($t4=this.Scope)!=null?$t4.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.PartitionScope),Bridge.cast(($t5=this.Operand)!=null?$t5.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.PartitionOperand),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.PartitionQuery",{inherits:[Kusto.Language.Syntax.PartitionOperand],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.PartitionQuery}},OpenBrace:null,Query:null,CloseBrace:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(openBrace,query,closeBrace,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.PartitionOperand.ctor.call(this,diagnostics);this.OpenBrace=this.Attach(Kusto.Language.Syntax.SyntaxToken,openBrace);this.Query=this.Attach(Kusto.Language.Syntax.Expression,query);this.CloseBrace=this.Attach(Kusto.Language.Syntax.SyntaxToken,closeBrace);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.OpenBrace;case 1:return this.Query;case 2:return this.CloseBrace;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"OpenBrace";case 1:return"Query";case 2:return"CloseBrace";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;case 1:return Kusto.Language.Editor.CompletionHint.Tabular;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitPartitionQuery(this)},Accept:function(TResult,visitor){return visitor.VisitPartitionQuery(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.PartitionQuery(($t=this.OpenBrace)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.Query)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),($t2=this.CloseBrace)!=null?$t2.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.PartitionSubquery",{inherits:[Kusto.Language.Syntax.PartitionOperand],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.PartitionSubquery}},OpenParen:null,Subquery:null,CloseParen:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(openParen,subquery,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.PartitionOperand.ctor.call(this,diagnostics);this.OpenParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,openParen);this.Subquery=this.Attach(Kusto.Language.Syntax.Expression,subquery);this.CloseParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.OpenParen;case 1:return this.Subquery;case 2:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"OpenParen";case 1:return"Subquery";case 2:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;case 1:return Kusto.Language.Editor.CompletionHint.Query;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitPartitionSubquery(this)},Accept:function(TResult,visitor){return visitor.VisitPartitionSubquery(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.PartitionSubquery(($t=this.OpenParen)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.Subquery)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),($t2=this.CloseParen)!=null?$t2.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.PrimitiveTypeExpression",{inherits:[Kusto.Language.Syntax.TypeExpression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.PrimitiveTypeExpression}},Type:null,ChildCount:{get:function(){return 1}}},ctors:{ctor:function(type,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.TypeExpression.ctor.call(this,diagnostics);this.Type=this.Attach(Kusto.Language.Syntax.SyntaxToken,type);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Type;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Type";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitPrimitiveTypeExpression(this)},Accept:function(TResult,visitor){return visitor.VisitPrimitiveTypeExpression(this)},CloneCore:function(includeDiagnostics){var $t;return new Kusto.Language.Syntax.PrimitiveTypeExpression(($t=this.Type)!=null?$t.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.PrintOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.PrintOperator}},PrintKeyword:null,Expressions:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(printKeyword,expressions,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.PrintKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,printKeyword);this.Expressions=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),expressions);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.PrintKeyword;case 1:return this.Expressions;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"PrintKeyword";case 1:return"Expressions";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitPrintOperator(this)},Accept:function(TResult,visitor){return visitor.VisitPrintOperator(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.PrintOperator(($t=this.PrintKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Expressions)!=null?$t1.Clone$2(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.ProjectAwayOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ProjectAwayOperator}},ProjectAwayKeyword:null,Expressions:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(projectAwayKeyword,expressions,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.ProjectAwayKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,projectAwayKeyword);this.Expressions=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),expressions);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.ProjectAwayKeyword;case 1:return this.Expressions;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"ProjectAwayKeyword";case 1:return"Expressions";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitProjectAwayOperator(this)},Accept:function(TResult,visitor){return visitor.VisitProjectAwayOperator(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.ProjectAwayOperator(($t=this.ProjectAwayKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Expressions)!=null?$t1.Clone$2(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.ProjectKeepOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ProjectKeepOperator}},ProjectKeepKeyword:null,Expressions:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(projectKeepKeyword,expressions,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.ProjectKeepKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,projectKeepKeyword);this.Expressions=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),expressions);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.ProjectKeepKeyword;case 1:return this.Expressions;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"ProjectKeepKeyword";case 1:return"Expressions";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitProjectKeepOperator(this)},Accept:function(TResult,visitor){return visitor.VisitProjectKeepOperator(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.ProjectKeepOperator(($t=this.ProjectKeepKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Expressions)!=null?$t1.Clone$2(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.ProjectOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ProjectOperator}},ProjectKeyword:null,Expressions:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(projectKeyword,expressions,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.ProjectKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,projectKeyword);this.Expressions=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),expressions);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.ProjectKeyword;case 1:return this.Expressions;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"ProjectKeyword";case 1:return"Expressions";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitProjectOperator(this)},Accept:function(TResult,visitor){return visitor.VisitProjectOperator(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.ProjectOperator(($t=this.ProjectKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Expressions)!=null?$t1.Clone$2(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.ProjectRenameOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ProjectRenameOperator}},ProjectRenameKeyword:null,Expressions:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(projectRenameKeyword,expressions,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.ProjectRenameKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,projectRenameKeyword);this.Expressions=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),expressions);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.ProjectRenameKeyword;case 1:return this.Expressions;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"ProjectRenameKeyword";case 1:return"Expressions";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitProjectRenameOperator(this)},Accept:function(TResult,visitor){return visitor.VisitProjectRenameOperator(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.ProjectRenameOperator(($t=this.ProjectRenameKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Expressions)!=null?$t1.Clone$2(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.ProjectReorderOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ProjectReorderOperator}},ProjectReorderKeyword:null,Expressions:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(projectReorderKeyword,expressions,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.ProjectReorderKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,projectReorderKeyword);this.Expressions=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),expressions);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.ProjectReorderKeyword;case 1:return this.Expressions;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"ProjectReorderKeyword";case 1:return"Expressions";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitProjectReorderOperator(this)},Accept:function(TResult,visitor){return visitor.VisitProjectReorderOperator(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.ProjectReorderOperator(($t=this.ProjectReorderKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Expressions)!=null?$t1.Clone$2(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.RangeOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.RangeOperator}},RangeToken:null,Name:null,FromToken:null,From:null,ToToken:null,To:null,StepToken:null,Step:null,ChildCount:{get:function(){return 8}}},ctors:{ctor:function(rangeToken,name,fromToken,from,toToken,to,stepToken,step,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.RangeToken=this.Attach(Kusto.Language.Syntax.SyntaxToken,rangeToken);this.Name=this.Attach(Kusto.Language.Syntax.NameDeclaration,name);this.FromToken=this.Attach(Kusto.Language.Syntax.SyntaxToken,fromToken);this.From=this.Attach(Kusto.Language.Syntax.Expression,from);this.ToToken=this.Attach(Kusto.Language.Syntax.SyntaxToken,toToken);this.To=this.Attach(Kusto.Language.Syntax.Expression,to);this.StepToken=this.Attach(Kusto.Language.Syntax.SyntaxToken,stepToken);this.Step=this.Attach(Kusto.Language.Syntax.Expression,step);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.RangeToken;case 1:return this.Name;case 2:return this.FromToken;case 3:return this.From;case 4:return this.ToToken;case 5:return this.To;case 6:return this.StepToken;case 7:return this.Step;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"RangeToken";case 1:return"Name";case 2:return"FromToken";case 3:return"From";case 4:return"ToToken";case 5:return"To";case 6:return"StepToken";case 7:return"Step";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Declaration;case 2:return Kusto.Language.Editor.CompletionHint.Keyword;case 3:return Kusto.Language.Editor.CompletionHint.Scalar;case 4:return Kusto.Language.Editor.CompletionHint.Keyword;case 5:return Kusto.Language.Editor.CompletionHint.Scalar;case 6:return Kusto.Language.Editor.CompletionHint.Keyword;case 7:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitRangeOperator(this)},Accept:function(TResult,visitor){return visitor.VisitRangeOperator(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3,$t4,$t5,$t6,$t7;return new Kusto.Language.Syntax.RangeOperator(($t=this.RangeToken)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.Name)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.NameDeclaration),($t2=this.FromToken)!=null?$t2.Clone$1(includeDiagnostics):null,Bridge.cast(($t3=this.From)!=null?$t3.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),($t4=this.ToToken)!=null?$t4.Clone$1(includeDiagnostics):null,Bridge.cast(($t5=this.To)!=null?$t5.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),($t6=this.StepToken)!=null?$t6.Clone$1(includeDiagnostics):null,Bridge.cast(($t7=this.Step)!=null?$t7.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.ReduceByOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ReduceByOperator}},ReduceKeyword:null,Parameters:null,ByKeyword:null,Expression:null,With:null,ChildCount:{get:function(){return 5}}},ctors:{ctor:function(reduceKeyword,parameters,byKeyword,expression,$with,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.ReduceKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,reduceKeyword);this.Parameters=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.ByKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,byKeyword);this.Expression=this.Attach(Kusto.Language.Syntax.Expression,expression);this.With=this.Attach(Kusto.Language.Syntax.ReduceByWithClause,$with,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.ReduceKeyword;case 1:return this.Parameters;case 2:return this.ByKeyword;case 3:return this.Expression;case 4:return this.With;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"ReduceKeyword";case 1:return"Parameters";case 2:return"ByKeyword";case 3:return"Expression";case 4:return"With";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 4:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.None;case 2:return Kusto.Language.Editor.CompletionHint.Keyword;case 3:return Kusto.Language.Editor.CompletionHint.Scalar;case 4:return Kusto.Language.Editor.CompletionHint.Clause;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitReduceByOperator(this)},Accept:function(TResult,visitor){return visitor.VisitReduceByOperator(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3,$t4;return new Kusto.Language.Syntax.ReduceByOperator(($t=this.ReduceKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Parameters)!=null?$t1.Clone$2(includeDiagnostics):null,($t2=this.ByKeyword)!=null?$t2.Clone$1(includeDiagnostics):null,Bridge.cast(($t3=this.Expression)!=null?$t3.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),Bridge.cast(($t4=this.With)!=null?$t4.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.ReduceByWithClause),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.RenderOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.RenderOperator}},RenderKeyword:null,ChartType:null,Parameters:null,WithClause:null,ChildCount:{get:function(){return 4}}},ctors:{ctor:function(renderKeyword,chartType,parameters,withClause,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.RenderKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,renderKeyword);this.ChartType=this.Attach(Kusto.Language.Syntax.SyntaxToken,chartType,!0);this.Parameters=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.WithClause=this.Attach(Kusto.Language.Syntax.RenderWithClause,withClause,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.RenderKeyword;case 1:return this.ChartType;case 2:return this.Parameters;case 3:return this.WithClause;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"RenderKeyword";case 1:return"ChartType";case 2:return"Parameters";case 3:return"WithClause";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 1:case 3:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Keyword;case 2:return Kusto.Language.Editor.CompletionHint.None;case 3:return Kusto.Language.Editor.CompletionHint.Clause;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitRenderOperator(this)},Accept:function(TResult,visitor){return visitor.VisitRenderOperator(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3;return new Kusto.Language.Syntax.RenderOperator(($t=this.RenderKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.ChartType)!=null?$t1.Clone$1(includeDiagnostics):null,($t2=this.Parameters)!=null?$t2.Clone$2(includeDiagnostics):null,Bridge.cast(($t3=this.WithClause)!=null?$t3.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.RenderWithClause),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.SampleDistinctOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.SampleDistinctOperator}},SampleDistinctKeyword:null,Parameters:null,Expression:null,OfKeyword:null,OfExpression:null,ChildCount:{get:function(){return 5}}},ctors:{ctor:function(sampleDistinctKeyword,parameters,expression,ofKeyword,ofExpression,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.SampleDistinctKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,sampleDistinctKeyword);this.Parameters=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.Expression=this.Attach(Kusto.Language.Syntax.Expression,expression);this.OfKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,ofKeyword);this.OfExpression=this.Attach(Kusto.Language.Syntax.Expression,ofExpression);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.SampleDistinctKeyword;case 1:return this.Parameters;case 2:return this.Expression;case 3:return this.OfKeyword;case 4:return this.OfExpression;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"SampleDistinctKeyword";case 1:return"Parameters";case 2:return"Expression";case 3:return"OfKeyword";case 4:return"OfExpression";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.None;case 2:return Kusto.Language.Editor.CompletionHint.Number;case 3:return Kusto.Language.Editor.CompletionHint.Keyword;case 4:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitSampleDistinctOperator(this)},Accept:function(TResult,visitor){return visitor.VisitSampleDistinctOperator(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3,$t4;return new Kusto.Language.Syntax.SampleDistinctOperator(($t=this.SampleDistinctKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Parameters)!=null?$t1.Clone$2(includeDiagnostics):null,Bridge.cast(($t2=this.Expression)!=null?$t2.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),($t3=this.OfKeyword)!=null?$t3.Clone$1(includeDiagnostics):null,Bridge.cast(($t4=this.OfExpression)!=null?$t4.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.SampleOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.SampleOperator}},SampleKeyword:null,Parameters:null,Expression:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(sampleKeyword,parameters,expression,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.SampleKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,sampleKeyword);this.Parameters=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.Expression=this.Attach(Kusto.Language.Syntax.Expression,expression);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.SampleKeyword;case 1:return this.Parameters;case 2:return this.Expression;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"SampleKeyword";case 1:return"Parameters";case 2:return"Expression";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.None;case 2:return Kusto.Language.Editor.CompletionHint.Number;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitSampleOperator(this)},Accept:function(TResult,visitor){return visitor.VisitSampleOperator(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.SampleOperator(($t=this.SampleKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Parameters)!=null?$t1.Clone$2(includeDiagnostics):null,Bridge.cast(($t2=this.Expression)!=null?$t2.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.ScanOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ScanOperator}},ScanKeyword:null,Parameters:null,OrderByClause:null,PartitionByClause:null,DeclareClause:null,WithKeyword:null,OpenParenToken:null,Steps:null,CloseParenToken:null,ChildCount:{get:function(){return 9}}},ctors:{ctor:function(scanKeyword,parameters,orderByClause,partitionByClause,declareClause,withKeyword,openParenToken,steps,closeParenToken,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.ScanKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,scanKeyword);this.Parameters=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.OrderByClause=this.Attach(Kusto.Language.Syntax.ScanOrderByClause,orderByClause,!0);this.PartitionByClause=this.Attach(Kusto.Language.Syntax.ScanPartitionByClause,partitionByClause,!0);this.DeclareClause=this.Attach(Kusto.Language.Syntax.ScanDeclareClause,declareClause,!0);this.WithKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,withKeyword);this.OpenParenToken=this.Attach(Kusto.Language.Syntax.SyntaxToken,openParenToken,!0);this.Steps=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.ScanStep),steps);this.CloseParenToken=this.Attach(Kusto.Language.Syntax.SyntaxToken,closeParenToken,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.ScanKeyword;case 1:return this.Parameters;case 2:return this.OrderByClause;case 3:return this.PartitionByClause;case 4:return this.DeclareClause;case 5:return this.WithKeyword;case 6:return this.OpenParenToken;case 7:return this.Steps;case 8:return this.CloseParenToken;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"ScanKeyword";case 1:return"Parameters";case 2:return"OrderByClause";case 3:return"PartitionByClause";case 4:return"DeclareClause";case 5:return"WithKeyword";case 6:return"OpenParenToken";case 7:return"Steps";case 8:return"CloseParenToken";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 2:case 3:case 4:case 6:case 8:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;case 3:return Kusto.Language.Editor.CompletionHint.Syntax;case 4:return Kusto.Language.Editor.CompletionHint.Syntax;case 5:return Kusto.Language.Editor.CompletionHint.Keyword;case 6:return Kusto.Language.Editor.CompletionHint.Syntax;case 7:return Kusto.Language.Editor.CompletionHint.Syntax;case 8:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitScanOperator(this)},Accept:function(TResult,visitor){return visitor.VisitScanOperator(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3,$t4,$t5,$t6,$t7,$t8;return new Kusto.Language.Syntax.ScanOperator(($t=this.ScanKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Parameters)!=null?$t1.Clone$2(includeDiagnostics):null,Bridge.cast(($t2=this.OrderByClause)!=null?$t2.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.ScanOrderByClause),Bridge.cast(($t3=this.PartitionByClause)!=null?$t3.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.ScanPartitionByClause),Bridge.cast(($t4=this.DeclareClause)!=null?$t4.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.ScanDeclareClause),($t5=this.WithKeyword)!=null?$t5.Clone$1(includeDiagnostics):null,($t6=this.OpenParenToken)!=null?$t6.Clone$1(includeDiagnostics):null,($t7=this.Steps)!=null?$t7.Clone$2(includeDiagnostics):null,($t8=this.CloseParenToken)!=null?$t8.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.SchemaTypeExpression",{inherits:[Kusto.Language.Syntax.TypeExpression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.SchemaTypeExpression}},OpenParen:null,Columns:null,CloseParen:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(openParen,columns,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.TypeExpression.ctor.call(this,diagnostics);this.OpenParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,openParen);this.Columns=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),columns);this.CloseParen=this.Attach(Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.OpenParen;case 1:return this.Columns;case 2:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"OpenParen";case 1:return"Columns";case 2:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;case 1:return Kusto.Language.Editor.CompletionHint.Declaration;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitSchemaTypeExpression(this)},Accept:function(TResult,visitor){return visitor.VisitSchemaTypeExpression(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.SchemaTypeExpression(($t=this.OpenParen)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Columns)!=null?$t1.Clone$2(includeDiagnostics):null,($t2=this.CloseParen)!=null?$t2.Clone$1(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.SearchOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.SearchOperator}},SearchKeyword:null,Parameters:null,DataScope:null,InClause:null,Condition:null,ChildCount:{get:function(){return 5}}},ctors:{ctor:function(searchKeyword,parameters,dataScope,inClause,condition,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.SearchKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,searchKeyword);this.Parameters=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.DataScope=this.Attach(Kusto.Language.Syntax.DataScopeClause,dataScope,!0);this.InClause=this.Attach(Kusto.Language.Syntax.FindInClause,inClause,!0);this.Condition=this.Attach(Kusto.Language.Syntax.Expression,condition);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.SearchKeyword;case 1:return this.Parameters;case 2:return this.DataScope;case 3:return this.InClause;case 4:return this.Condition;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"SearchKeyword";case 1:return"Parameters";case 2:return"DataScope";case 3:return"InClause";case 4:return"Condition";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 2:case 3:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.None;case 2:return Kusto.Language.Editor.CompletionHint.Clause;case 3:return Kusto.Language.Editor.CompletionHint.Clause;case 4:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitSearchOperator(this)},Accept:function(TResult,visitor){return visitor.VisitSearchOperator(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3,$t4;return new Kusto.Language.Syntax.SearchOperator(($t=this.SearchKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Parameters)!=null?$t1.Clone$2(includeDiagnostics):null,Bridge.cast(($t2=this.DataScope)!=null?$t2.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.DataScopeClause),Bridge.cast(($t3=this.InClause)!=null?$t3.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.FindInClause),Bridge.cast(($t4=this.Condition)!=null?$t4.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.SerializeOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.SerializeOperator}},SerializeKeyword:null,Parameters:null,Expressions:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(serializeKeyword,parameters,expressions,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.SerializeKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,serializeKeyword);this.Parameters=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.Expressions=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),expressions);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.SerializeKeyword;case 1:return this.Parameters;case 2:return this.Expressions;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"SerializeKeyword";case 1:return"Parameters";case 2:return"Expressions";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.None;case 2:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitSerializeOperator(this)},Accept:function(TResult,visitor){return visitor.VisitSerializeOperator(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.SerializeOperator(($t=this.SerializeKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Parameters)!=null?$t1.Clone$2(includeDiagnostics):null,($t2=this.Expressions)!=null?$t2.Clone$2(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.SimpleNamedExpression",{inherits:[Kusto.Language.Syntax.NamedExpression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.SimpleNamedExpression}},Name:null,EqualToken:null,Expression:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(name,equalToken,expression,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.NamedExpression.ctor.call(this,diagnostics);this.Name=this.Attach(Kusto.Language.Syntax.NameDeclaration,name);this.EqualToken=this.Attach(Kusto.Language.Syntax.SyntaxToken,equalToken);this.Expression=this.Attach(Kusto.Language.Syntax.Expression,expression);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Name;case 1:return this.EqualToken;case 2:return this.Expression;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Name";case 1:return"EqualToken";case 2:return"Expression";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Declaration;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitSimpleNamedExpression(this)},Accept:function(TResult,visitor){return visitor.VisitSimpleNamedExpression(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.SimpleNamedExpression(Bridge.cast(($t=this.Name)!=null?$t.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.NameDeclaration),($t1=this.EqualToken)!=null?$t1.Clone$1(includeDiagnostics):null,Bridge.cast(($t2=this.Expression)!=null?$t2.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.SortOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.SortOperator}},Keyword:null,Parameters:null,ByKeyword:null,Expressions:null,ChildCount:{get:function(){return 4}}},ctors:{ctor:function(keyword,parameters,byKeyword,expressions,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.Keyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,keyword);this.Parameters=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.ByKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,byKeyword);this.Expressions=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),expressions);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Keyword;case 1:return this.Parameters;case 2:return this.ByKeyword;case 3:return this.Expressions;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Keyword";case 1:return"Parameters";case 2:return"ByKeyword";case 3:return"Expressions";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.None;case 2:return Kusto.Language.Editor.CompletionHint.Keyword;case 3:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitSortOperator(this)},Accept:function(TResult,visitor){return visitor.VisitSortOperator(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3;return new Kusto.Language.Syntax.SortOperator(($t=this.Keyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Parameters)!=null?$t1.Clone$2(includeDiagnostics):null,($t2=this.ByKeyword)!=null?$t2.Clone$1(includeDiagnostics):null,($t3=this.Expressions)!=null?$t3.Clone$2(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.SummarizeOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.SummarizeOperator}},SummarizeKeyword:null,Parameters:null,Aggregates:null,ByClause:null,ChildCount:{get:function(){return 4}}},ctors:{ctor:function(summarizeKeyword,parameters,aggregates,byClause,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.SummarizeKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,summarizeKeyword);this.Parameters=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.Aggregates=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),aggregates);this.ByClause=this.Attach(Kusto.Language.Syntax.SummarizeByClause,byClause,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.SummarizeKeyword;case 1:return this.Parameters;case 2:return this.Aggregates;case 3:return this.ByClause;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"SummarizeKeyword";case 1:return"Parameters";case 2:return"Aggregates";case 3:return"ByClause";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 3:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.None;case 2:return Kusto.Language.Editor.CompletionHint.Aggregate;case 3:return Kusto.Language.Editor.CompletionHint.Clause;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitSummarizeOperator(this)},Accept:function(TResult,visitor){return visitor.VisitSummarizeOperator(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3;return new Kusto.Language.Syntax.SummarizeOperator(($t=this.SummarizeKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Parameters)!=null?$t1.Clone$2(includeDiagnostics):null,($t2=this.Aggregates)!=null?$t2.Clone$2(includeDiagnostics):null,Bridge.cast(($t3=this.ByClause)!=null?$t3.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.SummarizeByClause),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.TakeOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.TakeOperator}},Keyword:null,Parameters:null,Expression:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(keyword,parameters,expression,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.Keyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,keyword);this.Parameters=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.Expression=this.Attach(Kusto.Language.Syntax.Expression,expression);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Keyword;case 1:return this.Parameters;case 2:return this.Expression;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Keyword";case 1:return"Parameters";case 2:return"Expression";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.None;case 2:return Kusto.Language.Editor.CompletionHint.Number;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitTakeOperator(this)},Accept:function(TResult,visitor){return visitor.VisitTakeOperator(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.TakeOperator(($t=this.Keyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Parameters)!=null?$t1.Clone$2(includeDiagnostics):null,Bridge.cast(($t2=this.Expression)!=null?$t2.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.TopHittersOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.TopHittersOperator}},TopHittersKeyword:null,Expression:null,OfKeyword:null,OfExpression:null,ByClause:null,ChildCount:{get:function(){return 5}}},ctors:{ctor:function(topHittersKeyword,expression,ofKeyword,ofExpression,byClause,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.TopHittersKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,topHittersKeyword);this.Expression=this.Attach(Kusto.Language.Syntax.Expression,expression);this.OfKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,ofKeyword);this.OfExpression=this.Attach(Kusto.Language.Syntax.Expression,ofExpression);this.ByClause=this.Attach(Kusto.Language.Syntax.TopHittersByClause,byClause,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.TopHittersKeyword;case 1:return this.Expression;case 2:return this.OfKeyword;case 3:return this.OfExpression;case 4:return this.ByClause;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"TopHittersKeyword";case 1:return"Expression";case 2:return"OfKeyword";case 3:return"OfExpression";case 4:return"ByClause";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 4:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Number;case 2:return Kusto.Language.Editor.CompletionHint.Keyword;case 3:return Kusto.Language.Editor.CompletionHint.Scalar;case 4:return Kusto.Language.Editor.CompletionHint.Clause;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitTopHittersOperator(this)},Accept:function(TResult,visitor){return visitor.VisitTopHittersOperator(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3,$t4;return new Kusto.Language.Syntax.TopHittersOperator(($t=this.TopHittersKeyword)!=null?$t.Clone$1(includeDiagnostics):null,Bridge.cast(($t1=this.Expression)!=null?$t1.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),($t2=this.OfKeyword)!=null?$t2.Clone$1(includeDiagnostics):null,Bridge.cast(($t3=this.OfExpression)!=null?$t3.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),Bridge.cast(($t4=this.ByClause)!=null?$t4.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.TopHittersByClause),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.TopNestedOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.TopNestedOperator}},Clauses:null,ChildCount:{get:function(){return 1}}},ctors:{ctor:function(clauses,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.Clauses=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.TopNestedClause)),clauses);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Clauses;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Clauses";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Clause;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitTopNestedOperator(this)},Accept:function(TResult,visitor){return visitor.VisitTopNestedOperator(this)},CloneCore:function(includeDiagnostics){var $t;return new Kusto.Language.Syntax.TopNestedOperator(($t=this.Clauses)!=null?$t.Clone$2(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.TopOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.TopOperator}},TopKeyword:null,Parameters:null,Expression:null,ByKeyword:null,ByExpression:null,ChildCount:{get:function(){return 5}}},ctors:{ctor:function(topKeyword,parameters,expression,byKeyword,byExpression,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.TopKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,topKeyword);this.Parameters=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.Expression=this.Attach(Kusto.Language.Syntax.Expression,expression);this.ByKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,byKeyword);this.ByExpression=this.Attach(Kusto.Language.Syntax.Expression,byExpression);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.TopKeyword;case 1:return this.Parameters;case 2:return this.Expression;case 3:return this.ByKeyword;case 4:return this.ByExpression;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"TopKeyword";case 1:return"Parameters";case 2:return"Expression";case 3:return"ByKeyword";case 4:return"ByExpression";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.None;case 2:return Kusto.Language.Editor.CompletionHint.Number;case 3:return Kusto.Language.Editor.CompletionHint.Keyword;case 4:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitTopOperator(this)},Accept:function(TResult,visitor){return visitor.VisitTopOperator(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2,$t3,$t4;return new Kusto.Language.Syntax.TopOperator(($t=this.TopKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Parameters)!=null?$t1.Clone$2(includeDiagnostics):null,Bridge.cast(($t2=this.Expression)!=null?$t2.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),($t3=this.ByKeyword)!=null?$t3.Clone$1(includeDiagnostics):null,Bridge.cast(($t4=this.ByExpression)!=null?$t4.Clone$1(includeDiagnostics):null,Kusto.Language.Syntax.Expression),includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.UnionOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.UnionOperator}},UnionKeyword:null,Parameters:null,Expressions:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(unionKeyword,parameters,expressions,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.UnionKeyword=this.Attach(Kusto.Language.Syntax.SyntaxToken,unionKeyword);this.Parameters=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.Expressions=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),expressions);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.UnionKeyword;case 1:return this.Parameters;case 2:return this.Expressions;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"UnionKeyword";case 1:return"Parameters";case 2:return"Expressions";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.None;case 2:return Kusto.Language.Editor.CompletionHint.Tabular;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitUnionOperator(this)},Accept:function(TResult,visitor){return visitor.VisitUnionOperator(this)},CloneCore:function(includeDiagnostics){var $t,$t1,$t2;return new Kusto.Language.Syntax.UnionOperator(($t=this.UnionKeyword)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Parameters)!=null?$t1.Clone$2(includeDiagnostics):null,($t2=this.Expressions)!=null?$t2.Clone$2(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}});Bridge.define("Kusto.Language.Syntax.UnknownCommand",{inherits:[Kusto.Language.Syntax.Command],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.UnknownCommand}},DotToken:null,Parts:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(dotToken,parts,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Command.ctor.call(this,diagnostics);this.DotToken=this.Attach(Kusto.Language.Syntax.SyntaxToken,dotToken);this.Parts=this.Attach(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SyntaxToken),parts);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.DotToken;case 1:return this.Parts;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"DotToken";case 1:return"Parts";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitUnknownCommand(this)},Accept:function(TResult,visitor){return visitor.VisitUnknownCommand(this)},CloneCore:function(includeDiagnostics){var $t,$t1;return new Kusto.Language.Syntax.UnknownCommand(($t=this.DotToken)!=null?$t.Clone$1(includeDiagnostics):null,($t1=this.Parts)!=null?$t1.Clone$2(includeDiagnostics):null,includeDiagnostics?this.SyntaxDiagnostics:null)}}})});
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAiZmlsZSI6ICJLdXN0by5MYW5ndWFnZS5CcmlkZ2UubWluLmpzIiwKICAic291cmNlUm9vdCI6ICIiLAogICJzb3VyY2VzIjogW10sCiAgIm5hbWVzIjogW10sCiAgIm1hcHBpbmdzIjogIiIsCiAgInNvdXJjZXNDb250ZW50IjogW10KfQo=

// SIG // Begin signature block
// SIG // MIInvwYJKoZIhvcNAQcCoIInsDCCJ6wCAQExDzANBglg
// SIG // hkgBZQMEAgEFADB3BgorBgEEAYI3AgEEoGkwZzAyBgor
// SIG // BgEEAYI3AgEeMCQCAQEEEBDgyQbOONQRoqMAEEvTUJAC
// SIG // AQACAQACAQACAQACAQAwMTANBglghkgBZQMEAgEFAAQg
// SIG // HzCktXMqR4eVn50vAEbtIIVNQEk8J/VOVTq2IVtUMh+g
// SIG // gg12MIIF9DCCA9ygAwIBAgITMwAAA68wQA5Mo00FQQAA
// SIG // AAADrzANBgkqhkiG9w0BAQsFADB+MQswCQYDVQQGEwJV
// SIG // UzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMH
// SIG // UmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBv
// SIG // cmF0aW9uMSgwJgYDVQQDEx9NaWNyb3NvZnQgQ29kZSBT
// SIG // aWduaW5nIFBDQSAyMDExMB4XDTIzMTExNjE5MDkwMFoX
// SIG // DTI0MTExNDE5MDkwMFowdDELMAkGA1UEBhMCVVMxEzAR
// SIG // BgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1v
// SIG // bmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlv
// SIG // bjEeMBwGA1UEAxMVTWljcm9zb2Z0IENvcnBvcmF0aW9u
// SIG // MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA
// SIG // zkvLNa2un9GBrYNDoRGkGv7d0PqtTBB4ViYakFbjuWpm
// SIG // F0KcvDAzzaCWJPhVgIXjz+S8cHEoHuWnp/n+UOljT3eh
// SIG // A8Rs6Lb1aTYub3tB/e0txewv2sQ3yscjYdtTBtFvEm9L
// SIG // 8Yv76K3Cxzi/Yvrdg+sr7w8y5RHn1Am0Ff8xggY1xpWC
// SIG // XFI+kQM18njQDcUqSlwBnexYfqHBhzz6YXA/S0EziYBu
// SIG // 2O2mM7R6gSyYkEOHgIGTVOGnOvvC5xBgC4KNcnQuQSRL
// SIG // iUI2CmzU8vefR6ykruyzt1rNMPI8OqWHQtSDKXU5JNqb
// SIG // k4GNjwzcwbSzOHrxuxWHq91l/vLdVDGDUwIDAQABo4IB
// SIG // czCCAW8wHwYDVR0lBBgwFgYKKwYBBAGCN0wIAQYIKwYB
// SIG // BQUHAwMwHQYDVR0OBBYEFEcccTTyBDxkjvJKs/m4AgEF
// SIG // hl7BMEUGA1UdEQQ+MDykOjA4MR4wHAYDVQQLExVNaWNy
// SIG // b3NvZnQgQ29ycG9yYXRpb24xFjAUBgNVBAUTDTIzMDAx
// SIG // Mis1MDE4MjYwHwYDVR0jBBgwFoAUSG5k5VAF04KqFzc3
// SIG // IrVtqMp1ApUwVAYDVR0fBE0wSzBJoEegRYZDaHR0cDov
// SIG // L3d3dy5taWNyb3NvZnQuY29tL3BraW9wcy9jcmwvTWlj
// SIG // Q29kU2lnUENBMjAxMV8yMDExLTA3LTA4LmNybDBhBggr
// SIG // BgEFBQcBAQRVMFMwUQYIKwYBBQUHMAKGRWh0dHA6Ly93
// SIG // d3cubWljcm9zb2Z0LmNvbS9wa2lvcHMvY2VydHMvTWlj
// SIG // Q29kU2lnUENBMjAxMV8yMDExLTA3LTA4LmNydDAMBgNV
// SIG // HRMBAf8EAjAAMA0GCSqGSIb3DQEBCwUAA4ICAQCEsRbf
// SIG // 80dn60xTweOWHZoWaQdpzSaDqIvqpYHE5ZzuEMJWDdcP
// SIG // 72MGw8v6BSaJQ+a+hTCXdERnIBDPKvU4ENjgu4EBJocH
// SIG // lSe8riiZUAR+z+z4OUYqoFd3EqJyfjjOJBR2z94Dy4ss
// SIG // 7LEkHUbj2NZiFqBoPYu2OGQvEk+1oaUsnNKZ7Nl7FHtV
// SIG // 7CI2lHBru83e4IPe3glIi0XVZJT5qV6Gx/QhAFmpEVBj
// SIG // SAmDdgII4UUwuI9yiX6jJFNOEek6MoeP06LMJtbqA3Bq
// SIG // +ZWmJ033F97uVpyaiS4bj3vFI/ZBgDnMqNDtZjcA2vi4
// SIG // RRMweggd9vsHyTLpn6+nXoLy03vMeebq0C3k44pgUIEu
// SIG // PQUlJIRTe6IrN3GcjaZ6zHGuQGWgu6SyO9r7qkrEpS2p
// SIG // RjnGZjx2RmCamdAWnDdu+DmfNEPAddYjaJJ7PTnd+PGz
// SIG // G+WeH4ocWgVnm5fJFhItjj70CJjgHqt57e1FiQcyWCwB
// SIG // hKX2rGgN2UICHBF3Q/rsKOspjMw2OlGphTn2KmFl5J7c
// SIG // Qxru54A9roClLnHGCiSUYos/iwFHI/dAVXEh0S0KKfTf
// SIG // M6AC6/9bCbsD61QLcRzRIElvgCgaiMWFjOBL99pemoEl
// SIG // AHsyzG6uX93fMfas09N9YzA0/rFAKAsNDOcFbQlEHKiD
// SIG // T7mI20tVoCcmSIhJATCCB3owggVioAMCAQICCmEOkNIA
// SIG // AAAAAAMwDQYJKoZIhvcNAQELBQAwgYgxCzAJBgNVBAYT
// SIG // AlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQH
// SIG // EwdSZWRtb25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29y
// SIG // cG9yYXRpb24xMjAwBgNVBAMTKU1pY3Jvc29mdCBSb290
// SIG // IENlcnRpZmljYXRlIEF1dGhvcml0eSAyMDExMB4XDTEx
// SIG // MDcwODIwNTkwOVoXDTI2MDcwODIxMDkwOVowfjELMAkG
// SIG // A1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0b24xEDAO
// SIG // BgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29m
// SIG // dCBDb3Jwb3JhdGlvbjEoMCYGA1UEAxMfTWljcm9zb2Z0
// SIG // IENvZGUgU2lnbmluZyBQQ0EgMjAxMTCCAiIwDQYJKoZI
// SIG // hvcNAQEBBQADggIPADCCAgoCggIBAKvw+nIQHC6t2G6q
// SIG // ghBNNLrytlghn0IbKmvpWlCquAY4GgRJun/DDB7dN2vG
// SIG // EtgL8DjCmQawyDnVARQxQtOJDXlkh36UYCRsr55JnOlo
// SIG // XtLfm1OyCizDr9mpK656Ca/XllnKYBoF6WZ26DJSJhIv
// SIG // 56sIUM+zRLdd2MQuA3WraPPLbfM6XKEW9Ea64DhkrG5k
// SIG // NXimoGMPLdNAk/jj3gcN1Vx5pUkp5w2+oBN3vpQ97/vj
// SIG // K1oQH01WKKJ6cuASOrdJXtjt7UORg9l7snuGG9k+sYxd
// SIG // 6IlPhBryoS9Z5JA7La4zWMW3Pv4y07MDPbGyr5I4ftKd
// SIG // gCz1TlaRITUlwzluZH9TupwPrRkjhMv0ugOGjfdf8NBS
// SIG // v4yUh7zAIXQlXxgotswnKDglmDlKNs98sZKuHCOnqWbs
// SIG // YR9q4ShJnV+I4iVd0yFLPlLEtVc/JAPw0XpbL9Uj43Bd
// SIG // D1FGd7P4AOG8rAKCX9vAFbO9G9RVS+c5oQ/pI0m8GLhE
// SIG // fEXkwcNyeuBy5yTfv0aZxe/CHFfbg43sTUkwp6uO3+xb
// SIG // n6/83bBm4sGXgXvt1u1L50kppxMopqd9Z4DmimJ4X7Iv
// SIG // hNdXnFy/dygo8e1twyiPLI9AN0/B4YVEicQJTMXUpUMv
// SIG // dJX3bvh4IFgsE11glZo+TzOE2rCIF96eTvSWsLxGoGyY
// SIG // 0uDWiIwLAgMBAAGjggHtMIIB6TAQBgkrBgEEAYI3FQEE
// SIG // AwIBADAdBgNVHQ4EFgQUSG5k5VAF04KqFzc3IrVtqMp1
// SIG // ApUwGQYJKwYBBAGCNxQCBAweCgBTAHUAYgBDAEEwCwYD
// SIG // VR0PBAQDAgGGMA8GA1UdEwEB/wQFMAMBAf8wHwYDVR0j
// SIG // BBgwFoAUci06AjGQQ7kUBU7h6qfHMdEjiTQwWgYDVR0f
// SIG // BFMwUTBPoE2gS4ZJaHR0cDovL2NybC5taWNyb3NvZnQu
// SIG // Y29tL3BraS9jcmwvcHJvZHVjdHMvTWljUm9vQ2VyQXV0
// SIG // MjAxMV8yMDExXzAzXzIyLmNybDBeBggrBgEFBQcBAQRS
// SIG // MFAwTgYIKwYBBQUHMAKGQmh0dHA6Ly93d3cubWljcm9z
// SIG // b2Z0LmNvbS9wa2kvY2VydHMvTWljUm9vQ2VyQXV0MjAx
// SIG // MV8yMDExXzAzXzIyLmNydDCBnwYDVR0gBIGXMIGUMIGR
// SIG // BgkrBgEEAYI3LgMwgYMwPwYIKwYBBQUHAgEWM2h0dHA6
// SIG // Ly93d3cubWljcm9zb2Z0LmNvbS9wa2lvcHMvZG9jcy9w
// SIG // cmltYXJ5Y3BzLmh0bTBABggrBgEFBQcCAjA0HjIgHQBM
// SIG // AGUAZwBhAGwAXwBwAG8AbABpAGMAeQBfAHMAdABhAHQA
// SIG // ZQBtAGUAbgB0AC4gHTANBgkqhkiG9w0BAQsFAAOCAgEA
// SIG // Z/KGpZjgVHkaLtPYdGcimwuWEeFjkplCln3SeQyQwWVf
// SIG // Liw++MNy0W2D/r4/6ArKO79HqaPzadtjvyI1pZddZYSQ
// SIG // fYtGUFXYDJJ80hpLHPM8QotS0LD9a+M+By4pm+Y9G6XU
// SIG // tR13lDni6WTJRD14eiPzE32mkHSDjfTLJgJGKsKKELuk
// SIG // qQUMm+1o+mgulaAqPyprWEljHwlpblqYluSD9MCP80Yr
// SIG // 3vw70L01724lruWvJ+3Q3fMOr5kol5hNDj0L8giJ1h/D
// SIG // Mhji8MUtzluetEk5CsYKwsatruWy2dsViFFFWDgycSca
// SIG // f7H0J/jeLDogaZiyWYlobm+nt3TDQAUGpgEqKD6CPxNN
// SIG // ZgvAs0314Y9/HG8VfUWnduVAKmWjw11SYobDHWM2l4bf
// SIG // 2vP48hahmifhzaWX0O5dY0HjWwechz4GdwbRBrF1HxS+
// SIG // YWG18NzGGwS+30HHDiju3mUv7Jf2oVyW2ADWoUa9WfOX
// SIG // pQlLSBCZgB/QACnFsZulP0V3HjXG0qKin3p6IvpIlR+r
// SIG // +0cjgPWe+L9rt0uX4ut1eBrs6jeZeRhL/9azI2h15q/6
// SIG // /IvrC4DqaTuv/DDtBEyO3991bWORPdGdVk5Pv4BXIqF4
// SIG // ETIheu9BCrE/+6jMpF3BoYibV3FWTkhFwELJm3ZbCoBI
// SIG // a/15n8G9bW1qyVJzEw16UM0xghmhMIIZnQIBATCBlTB+
// SIG // MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3Rv
// SIG // bjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWlj
// SIG // cm9zb2Z0IENvcnBvcmF0aW9uMSgwJgYDVQQDEx9NaWNy
// SIG // b3NvZnQgQ29kZSBTaWduaW5nIFBDQSAyMDExAhMzAAAD
// SIG // rzBADkyjTQVBAAAAAAOvMA0GCWCGSAFlAwQCAQUAoIGu
// SIG // MBkGCSqGSIb3DQEJAzEMBgorBgEEAYI3AgEEMBwGCisG
// SIG // AQQBgjcCAQsxDjAMBgorBgEEAYI3AgEVMC8GCSqGSIb3
// SIG // DQEJBDEiBCD7fBFe8smqvN89Ulf3Ep2WzYb84RYtKXcb
// SIG // ZI9VECfJTDBCBgorBgEEAYI3AgEMMTQwMqAUgBIATQBp
// SIG // AGMAcgBvAHMAbwBmAHShGoAYaHR0cDovL3d3dy5taWNy
// SIG // b3NvZnQuY29tMA0GCSqGSIb3DQEBAQUABIIBAGZ87kS/
// SIG // TKjmpySc97dTSiY9BR6XODLGSyi39eF5rqSHsvFMPIbL
// SIG // AQRxUdDl8ayJOOwV2sipVZWcgKIgC9BPdk1nF+hJSL0f
// SIG // ZSEbqzF4+ITvLyEfj/zOGTCSK4wRPy66cz4jyHd1aQby
// SIG // mXDX3bBYziZHC7hJWzF9TOr58Q85vP3ZSqE0Nr+LsdO5
// SIG // AXb5LuRYBGoOKe1TnZaqZSBkyM6fd9e0Fd3nH91b1Byp
// SIG // dhPfkJ4YSjU0JGLXW7pVnljr/cNiMr/avidg0aS3sTLv
// SIG // VKBiatuzNSoLNSuDuOUrZEBNOT8ZVMalsEc9Rpg11S+/
// SIG // FtAQiPWrMc7PHBKg8qezW3DW2TqhghcrMIIXJwYKKwYB
// SIG // BAGCNwMDATGCFxcwghcTBgkqhkiG9w0BBwKgghcEMIIX
// SIG // AAIBAzEPMA0GCWCGSAFlAwQCAQUAMIIBWQYLKoZIhvcN
// SIG // AQkQAQSgggFIBIIBRDCCAUACAQEGCisGAQQBhFkKAwEw
// SIG // MTANBglghkgBZQMEAgEFAAQgApSYiJAmx8F9TLTiRjZN
// SIG // +Gf2RN5G995xlXJLpBBgFQkCBmZy3UYp0RgTMjAyNDA3
// SIG // MDIxODQ1MDMuMDIxWjAEgAIB9KCB2KSB1TCB0jELMAkG
// SIG // A1UEBhMCVVMxEzARBgNVBAgTCldhc2hpbmd0b24xEDAO
// SIG // BgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29m
// SIG // dCBDb3Jwb3JhdGlvbjEtMCsGA1UECxMkTWljcm9zb2Z0
// SIG // IElyZWxhbmQgT3BlcmF0aW9ucyBMaW1pdGVkMSYwJAYD
// SIG // VQQLEx1UaGFsZXMgVFNTIEVTTjoxNzlFLTRCQjAtODI0
// SIG // NjElMCMGA1UEAxMcTWljcm9zb2Z0IFRpbWUtU3RhbXAg
// SIG // U2VydmljZaCCEXowggcnMIIFD6ADAgECAhMzAAAB4NT8
// SIG // HxMVH35dAAEAAAHgMA0GCSqGSIb3DQEBCwUAMHwxCzAJ
// SIG // BgNVBAYTAlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAw
// SIG // DgYDVQQHEwdSZWRtb25kMR4wHAYDVQQKExVNaWNyb3Nv
// SIG // ZnQgQ29ycG9yYXRpb24xJjAkBgNVBAMTHU1pY3Jvc29m
// SIG // dCBUaW1lLVN0YW1wIFBDQSAyMDEwMB4XDTIzMTAxMjE5
// SIG // MDcxOVoXDTI1MDExMDE5MDcxOVowgdIxCzAJBgNVBAYT
// SIG // AlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQH
// SIG // EwdSZWRtb25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29y
// SIG // cG9yYXRpb24xLTArBgNVBAsTJE1pY3Jvc29mdCBJcmVs
// SIG // YW5kIE9wZXJhdGlvbnMgTGltaXRlZDEmMCQGA1UECxMd
// SIG // VGhhbGVzIFRTUyBFU046MTc5RS00QkIwLTgyNDYxJTAj
// SIG // BgNVBAMTHE1pY3Jvc29mdCBUaW1lLVN0YW1wIFNlcnZp
// SIG // Y2UwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoIC
// SIG // AQCsh5zzocW70QE5xo2/+n7gYYd2S86LQMQIHS2mf85E
// SIG // RVHXkis8jbd7aqKzCuxg73F3SrPqiDFG73p5R/sOd7LD
// SIG // 2uq2D++tGbhawAa37Hq39JBWsjV1c8E+42qyThI5xTAa
// SIG // fsovrsENk5ybsXM3HhuRQx6yCOrBehfO/ZT+snWNAQWZ
// SIG // Gfbd/Xv7LzUYngOYFJ7/2HDP2yDGP0GJnfRdAfnmxWIv
// SIG // jx+AJF2oTZBYCvOTiGkawxr4Z8Tmv+cxi+zooou/iff0
// SIG // B5HSRpX50X20N0FzP+f7pgTihuCaBWNZ4meUVR+T09Pr
// SIG // go8HKoU2571LXyvjfsgdm/axGb6dk7+GcGMxHfQPVbGD
// SIG // LmYgkm2hTJO+y8FW5JaZ8OGh1iVyZBGJib8UW3E4RPBU
// SIG // MjqFZErinOTlmdvljP4+dKG5QNLQlOdwGrr1DmUaEAYf
// SIG // PZxyvpuaTlyl3WDCfnHri2BfIecv3Fy0DDpqiyc+ZezC
// SIG // 6hsFNMx1fjBDvC9RaNsxBEOIi+AV/GJJyl6JxxkGnEgm
// SIG // i2aLdpMiVUbBUsZ9D5T7x1adGHbAjM3XosPYwGeyvbNV
// SIG // sbGRhAayv6G4qV+rsYxKclAPZm1T5Y5W90eDFiNBNsSP
// SIG // zTOheAHPAnmsd2Fi0/mlgmXqoiDC8cslmYPotSmPGRMz
// SIG // HjUyghCOcBdcMaq+k9fzEKPvLQIDAQABo4IBSTCCAUUw
// SIG // HQYDVR0OBBYEFHBeFz9unVfvErrKANV10Nkw0pnSMB8G
// SIG // A1UdIwQYMBaAFJ+nFV0AXmJdg/Tl0mWnG1M1GelyMF8G
// SIG // A1UdHwRYMFYwVKBSoFCGTmh0dHA6Ly93d3cubWljcm9z
// SIG // b2Z0LmNvbS9wa2lvcHMvY3JsL01pY3Jvc29mdCUyMFRp
// SIG // bWUtU3RhbXAlMjBQQ0ElMjAyMDEwKDEpLmNybDBsBggr
// SIG // BgEFBQcBAQRgMF4wXAYIKwYBBQUHMAKGUGh0dHA6Ly93
// SIG // d3cubWljcm9zb2Z0LmNvbS9wa2lvcHMvY2VydHMvTWlj
// SIG // cm9zb2Z0JTIwVGltZS1TdGFtcCUyMFBDQSUyMDIwMTAo
// SIG // MSkuY3J0MAwGA1UdEwEB/wQCMAAwFgYDVR0lAQH/BAww
// SIG // CgYIKwYBBQUHAwgwDgYDVR0PAQH/BAQDAgeAMA0GCSqG
// SIG // SIb3DQEBCwUAA4ICAQDAE84OkfwNJXTuzKhsQ9VSY4uc
// SIG // lQNYR29B3NGI7b+1pMUPIsH35bpV+VLOuLQ9/tzU9SZK
// SIG // YVs2gFn9sCnQMN+UcbUBtYjjdxxGdF9t53XuCoP1n28e
// SIG // axB5GfW8yp0f9jeQNevsP9aW8Cc3X0XJyU93C8msK/5G
// SIG // IzFnetzj9Bpau9LmuFlBPz6OaVO60EW1hKEKM2NuIQKj
// SIG // nMLkXJugm9CQXkzgnkQZ7RCoIynqeKUWkLe2/b7rE/e1
// SIG // niXH2laLJpj7bGbGsIJ6SI2wWuebR37pNLw5GbWyF41O
// SIG // Jq+XZ7PXZ2pwXQUtj2Nzd4SHwjxDrM6rsBy5H5BWf/W8
// SIG // cPP3kSZXbaLpB6NemnxPwKj/7JphiYeWUdKZoFukHF/u
// SIG // ta3YuZAyU8whWqDMmM1EtEhG8qw2f6dijrigGDZ4JY4j
// SIG // pZZXLdLiVc9moH3Mxo47CotgEtVml7zoYGTZhsONkhQd
// SIG // ampaGvCmrsfUNhxyxPIHnv+a4Dp8fc0m31VHOyHETaHa
// SIG // uke7/kc/j+lyrToMgqlv/q4T5qf5+xatgRk0ZHMv/4Zk
// SIG // t9qeqsoJa9iuDqCQyV8RbOpcHPA/OqpVHho1MqO4VcuV
// SIG // b8gPstJhpxALgPObbDnFD5c8FhebL/geX89+Tlt1+EqZ
// SIG // OUojbpZyxUTzOVwrEh6r3GwvEd6sI9sNXrz4WcQ7jTCC
// SIG // B3EwggVZoAMCAQICEzMAAAAVxedrngKbSZkAAAAAABUw
// SIG // DQYJKoZIhvcNAQELBQAwgYgxCzAJBgNVBAYTAlVTMRMw
// SIG // EQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRt
// SIG // b25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29ycG9yYXRp
// SIG // b24xMjAwBgNVBAMTKU1pY3Jvc29mdCBSb290IENlcnRp
// SIG // ZmljYXRlIEF1dGhvcml0eSAyMDEwMB4XDTIxMDkzMDE4
// SIG // MjIyNVoXDTMwMDkzMDE4MzIyNVowfDELMAkGA1UEBhMC
// SIG // VVMxEzARBgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcT
// SIG // B1JlZG1vbmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jw
// SIG // b3JhdGlvbjEmMCQGA1UEAxMdTWljcm9zb2Z0IFRpbWUt
// SIG // U3RhbXAgUENBIDIwMTAwggIiMA0GCSqGSIb3DQEBAQUA
// SIG // A4ICDwAwggIKAoICAQDk4aZM57RyIQt5osvXJHm9DtWC
// SIG // 0/3unAcH0qlsTnXIyjVX9gF/bErg4r25PhdgM/9cT8dm
// SIG // 95VTcVrifkpa/rg2Z4VGIwy1jRPPdzLAEBjoYH1qUoNE
// SIG // t6aORmsHFPPFdvWGUNzBRMhxXFExN6AKOG6N7dcP2CZT
// SIG // fDlhAnrEqv1yaa8dq6z2Nr41JmTamDu6GnszrYBbfowQ
// SIG // HJ1S/rboYiXcag/PXfT+jlPP1uyFVk3v3byNpOORj7I5
// SIG // LFGc6XBpDco2LXCOMcg1KL3jtIckw+DJj361VI/c+gVV
// SIG // mG1oO5pGve2krnopN6zL64NF50ZuyjLVwIYwXE8s4mKy
// SIG // zbnijYjklqwBSru+cakXW2dg3viSkR4dPf0gz3N9QZpG
// SIG // dc3EXzTdEonW/aUgfX782Z5F37ZyL9t9X4C626p+Nuw2
// SIG // TPYrbqgSUei/BQOj0XOmTTd0lBw0gg/wEPK3Rxjtp+iZ
// SIG // fD9M269ewvPV2HM9Q07BMzlMjgK8QmguEOqEUUbi0b1q
// SIG // GFphAXPKZ6Je1yh2AuIzGHLXpyDwwvoSCtdjbwzJNmSL
// SIG // W6CmgyFdXzB0kZSU2LlQ+QuJYfM2BjUYhEfb3BvR/bLU
// SIG // HMVr9lxSUV0S2yW6r1AFemzFER1y7435UsSFF5PAPBXb
// SIG // GjfHCBUYP3irRbb1Hode2o+eFnJpxq57t7c+auIurQID
// SIG // AQABo4IB3TCCAdkwEgYJKwYBBAGCNxUBBAUCAwEAATAj
// SIG // BgkrBgEEAYI3FQIEFgQUKqdS/mTEmr6CkTxGNSnPEP8v
// SIG // BO4wHQYDVR0OBBYEFJ+nFV0AXmJdg/Tl0mWnG1M1Gely
// SIG // MFwGA1UdIARVMFMwUQYMKwYBBAGCN0yDfQEBMEEwPwYI
// SIG // KwYBBQUHAgEWM2h0dHA6Ly93d3cubWljcm9zb2Z0LmNv
// SIG // bS9wa2lvcHMvRG9jcy9SZXBvc2l0b3J5Lmh0bTATBgNV
// SIG // HSUEDDAKBggrBgEFBQcDCDAZBgkrBgEEAYI3FAIEDB4K
// SIG // AFMAdQBiAEMAQTALBgNVHQ8EBAMCAYYwDwYDVR0TAQH/
// SIG // BAUwAwEB/zAfBgNVHSMEGDAWgBTV9lbLj+iiXGJo0T2U
// SIG // kFvXzpoYxDBWBgNVHR8ETzBNMEugSaBHhkVodHRwOi8v
// SIG // Y3JsLm1pY3Jvc29mdC5jb20vcGtpL2NybC9wcm9kdWN0
// SIG // cy9NaWNSb29DZXJBdXRfMjAxMC0wNi0yMy5jcmwwWgYI
// SIG // KwYBBQUHAQEETjBMMEoGCCsGAQUFBzAChj5odHRwOi8v
// SIG // d3d3Lm1pY3Jvc29mdC5jb20vcGtpL2NlcnRzL01pY1Jv
// SIG // b0NlckF1dF8yMDEwLTA2LTIzLmNydDANBgkqhkiG9w0B
// SIG // AQsFAAOCAgEAnVV9/Cqt4SwfZwExJFvhnnJL/Klv6lwU
// SIG // tj5OR2R4sQaTlz0xM7U518JxNj/aZGx80HU5bbsPMeTC
// SIG // j/ts0aGUGCLu6WZnOlNN3Zi6th542DYunKmCVgADsAW+
// SIG // iehp4LoJ7nvfam++Kctu2D9IdQHZGN5tggz1bSNU5HhT
// SIG // dSRXud2f8449xvNo32X2pFaq95W2KFUn0CS9QKC/GbYS
// SIG // EhFdPSfgQJY4rPf5KYnDvBewVIVCs/wMnosZiefwC2qB
// SIG // woEZQhlSdYo2wh3DYXMuLGt7bj8sCXgU6ZGyqVvfSaN0
// SIG // DLzskYDSPeZKPmY7T7uG+jIa2Zb0j/aRAfbOxnT99kxy
// SIG // bxCrdTDFNLB62FD+CljdQDzHVG2dY3RILLFORy3BFARx
// SIG // v2T5JL5zbcqOCb2zAVdJVGTZc9d/HltEAY5aGZFrDZ+k
// SIG // KNxnGSgkujhLmm77IVRrakURR6nxt67I6IleT53S0Ex2
// SIG // tVdUCbFpAUR+fKFhbHP+CrvsQWY9af3LwUFJfn6Tvsv4
// SIG // O+S3Fb+0zj6lMVGEvL8CwYKiexcdFYmNcP7ntdAoGokL
// SIG // jzbaukz5m/8K6TT4JDVnK+ANuOaMmdbhIurwJ0I9JZTm
// SIG // dHRbatGePu1+oDEzfbzL6Xu/OHBE0ZDxyKs6ijoIYn/Z
// SIG // cGNTTY3ugm2lBRDBcQZqELQdVTNYs6FwZvKhggLWMIIC
// SIG // PwIBATCCAQChgdikgdUwgdIxCzAJBgNVBAYTAlVTMRMw
// SIG // EQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRt
// SIG // b25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29ycG9yYXRp
// SIG // b24xLTArBgNVBAsTJE1pY3Jvc29mdCBJcmVsYW5kIE9w
// SIG // ZXJhdGlvbnMgTGltaXRlZDEmMCQGA1UECxMdVGhhbGVz
// SIG // IFRTUyBFU046MTc5RS00QkIwLTgyNDYxJTAjBgNVBAMT
// SIG // HE1pY3Jvc29mdCBUaW1lLVN0YW1wIFNlcnZpY2WiIwoB
// SIG // ATAHBgUrDgMCGgMVAG3z0dXwV+h8WH8j8fM2MyVOXyEM
// SIG // oIGDMIGApH4wfDELMAkGA1UEBhMCVVMxEzARBgNVBAgT
// SIG // Cldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAc
// SIG // BgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjEmMCQG
// SIG // A1UEAxMdTWljcm9zb2Z0IFRpbWUtU3RhbXAgUENBIDIw
// SIG // MTAwDQYJKoZIhvcNAQEFBQACBQDqLn3pMCIYDzIwMjQw
// SIG // NzAyMjEyMzUzWhgPMjAyNDA3MDMyMTIzNTNaMHYwPAYK
// SIG // KwYBBAGEWQoEATEuMCwwCgIFAOoufekCAQAwCQIBAAIB
// SIG // AgIB/zAHAgEAAgISGTAKAgUA6i/PaQIBADA2BgorBgEE
// SIG // AYRZCgQCMSgwJjAMBgorBgEEAYRZCgMCoAowCAIBAAID
// SIG // B6EgoQowCAIBAAIDAYagMA0GCSqGSIb3DQEBBQUAA4GB
// SIG // ACQI2RbCpQal1n/7/8qQRpE7yfISO8WkG3oYMEPuIFrQ
// SIG // /UewFsnmoP/nuE257/XFJ/Yer+HNpc8oodjoeN/PuqMq
// SIG // hx+ffijl1l3jD+ubdI35iYl70L8PnQJqRaw/HZ/VIcLk
// SIG // QaAjPZXN77tBoKwya5rwHxyLjvlVWi5B0xc/lCc1MYIE
// SIG // DTCCBAkCAQEwgZMwfDELMAkGA1UEBhMCVVMxEzARBgNV
// SIG // BAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQx
// SIG // HjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjEm
// SIG // MCQGA1UEAxMdTWljcm9zb2Z0IFRpbWUtU3RhbXAgUENB
// SIG // IDIwMTACEzMAAAHg1PwfExUffl0AAQAAAeAwDQYJYIZI
// SIG // AWUDBAIBBQCgggFKMBoGCSqGSIb3DQEJAzENBgsqhkiG
// SIG // 9w0BCRABBDAvBgkqhkiG9w0BCQQxIgQg7UkzcokbRbxg
// SIG // jj+ZH9icSwXmcbT0foOAC60kFruJmn8wgfoGCyqGSIb3
// SIG // DQEJEAIvMYHqMIHnMIHkMIG9BCDj7lK/8jnlbTjPvc77
// SIG // DCCSb4TZApY9nJm5whsK/2kKwTCBmDCBgKR+MHwxCzAJ
// SIG // BgNVBAYTAlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAw
// SIG // DgYDVQQHEwdSZWRtb25kMR4wHAYDVQQKExVNaWNyb3Nv
// SIG // ZnQgQ29ycG9yYXRpb24xJjAkBgNVBAMTHU1pY3Jvc29m
// SIG // dCBUaW1lLVN0YW1wIFBDQSAyMDEwAhMzAAAB4NT8HxMV
// SIG // H35dAAEAAAHgMCIEINKDvoSZVy9KrxvWxe2r0vR6Wvym
// SIG // JgnoTFn8RI2/Z7xoMA0GCSqGSIb3DQEBCwUABIICAFoW
// SIG // To2QkXtGJ+tp5Ei2l262hSPzxQAw8sL4pJBkO0BbZ5dc
// SIG // IPA6R3mZdQB0gL3P79ckJcPX19Mg4N30ksKQnxSEPGAK
// SIG // ETxXIA39W8nKR/euLH+xPd8695JDp+YFyAt3tjYHZmVp
// SIG // MGVkPcyHMwQbWC+he7DNU1kjDY4fLULKPHIV5DZHzLAg
// SIG // aDUJdtLFCBhgB2JbiRFrRQDfDDDnWTSIZJUa0hlojd94
// SIG // 04fR4106kfeKlsKeFcQOjQGL8kEeopqNarwvrLXq6PN+
// SIG // Frf6qlxDlCkz+SribEspN61kgs4FgvJ9SCJHT9LecnxD
// SIG // Dgb3Cx3N2xvNO2iVPXhkpWqEE1CBJsjS888VLdoPm4IM
// SIG // 6fNCE6z+uOv4i85xHft62i4o9STZi9AqjIsSzXORU5Rg
// SIG // ma+NOpaqRXkU+voxfEW1/dH2olOqI80+3rKExjyx/eC1
// SIG // 5m2xogZQy8F7H8nzPiT9CWHzjBL1w0XCxUkR4CEpFSVA
// SIG // hEABJ/J2D1Ldrp5cJYp/d9y9Z8785/rmxXvAv88kudK5
// SIG // V+9oeun38zzwgS4F8hE7HAELKRF5mQ507eVOgx6uVq6z
// SIG // lYL2CaHSXj3vk5A3CK5IRbv8FuDPUmwpsvOzrTncusyX
// SIG // fuuDo+EKgdpf9/9GG+KSZ/4ISXJ9ER/9VG4BFxA5tsjI
// SIG // WGC+BtxZ0cR7sP2EZNIj
// SIG // End signature block
